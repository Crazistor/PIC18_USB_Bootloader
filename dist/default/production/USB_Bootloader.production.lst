

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Sep 19 23:31:33 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1,group=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1,group=2
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=2
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=1
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1,group=2
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1,group=2
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   256                           	psect	text234,global,reloc=2,class=CODE,delta=1
   257                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   258                           	dabs	1,0x600,512,_msd_buffer
   259                           	dabs	1,0xD00,48,_BDT
   260                           	dabs	1,0xD40,31,_msd_cbw
   261                           	dabs	1,0xD80,13,_msd_csw
   262                           	dabs	1,0xD38,8,_CtrlTrfData
   263                           	dabs	1,0xD30,8,_SetupPkt
   264  0000                     
   265                           ; Version 2.00
   266                           ; Generated 27/05/2018 GMT
   267                           ; 
   268                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   269                           ; All rights reserved.
   270                           ; 
   271                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   272                           ; 
   273                           ; Redistribution and use in source and binary forms, with or without modification, are
   274                           ; permitted provided that the following conditions are met:
   275                           ; 
   276                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   277                           ;        conditions and the following disclaimer.
   278                           ; 
   279                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   280                           ;        of conditions and the following disclaimer in the documentation and/or other
   281                           ;        materials provided with the distribution.
   282                           ; 
   283                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   284                           ;        software without specific prior written permission.
   285                           ; 
   286                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   287                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   288                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   289                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   290                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   291                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   292                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   293                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   294                           ; 
   295                           ; 
   296                           ; Code-generator required, PIC18F47J53 Definitions
   297                           ; 
   298                           ; SFR Addresses
   299  0000                     
   300                           	psect	intcode
   301  000008  EF04 F050          	goto	40968	;# 
   302                           
   303                           	psect	intcodelo
   304  000018  EF0C F050          	goto	40984	; ;# 
   305  0000                     
   306                           	psect	idataBANK0
   307  008FB0                     __pidataBANK0:
   308                           	opt stack 0
   309                           
   310                           ;initializer for _file_number
   311  008FB0  FF                 	db	255
   312                           
   313                           	psect	idataBANK1
   314  008B60                     __pidataBANK1:
   315                           	opt stack 0
   316                           
   317                           ;initializer for _LUN
   318  008B60  48                 	db	low _ExternalFlash_MediaInitialize
   319  008B61  8D                 	db	high _ExternalFlash_MediaInitialize
   320  008B62  2E                 	db	low _ExternalFlash_CapacityRead
   321  008B63  8E                 	db	high _ExternalFlash_CapacityRead
   322  008B64  1A                 	db	low _ExternalFlash_SectorSizeRead
   323  008B65  8F                 	db	high _ExternalFlash_SectorSizeRead
   324  008B66  AA                 	db	low _ExternalFlash_MediaDetect
   325  008B67  8F                 	db	high _ExternalFlash_MediaDetect
   326  008B68  4C                 	db	low _ExternalFlash_SectorRead
   327  008B69  88                 	db	high _ExternalFlash_SectorRead
   328  008B6A  A6                 	db	low _ExternalFlash_WriteProtectStateGet
   329  008B6B  8F                 	db	high _ExternalFlash_WriteProtectStateGet
   330  008B6C  1A                 	db	low _ExternalFlash_SectorWrite
   331  008B6D  88                 	db	high _ExternalFlash_SectorWrite
   332  008B6E  00                 	db	0
   333  008B6F  00                 	db	0
   334  008B70  00                 	db	0
   335  008B71  00                 	db	0
   336  008B72  00                 	db	0
   337  008B73  00                 	db	0
   338                           
   339                           ;initializer for i2c_display_send_init_sequence@F6808
   340  008B74  3A                 	db	58
   341  008B75  1E                 	db	30
   342  008B76  39                 	db	57
   343  008B77  0C                 	db	12
   344  008B78  74                 	db	116
   345  008B79  5C                 	db	92
   346  008B7A  6D                 	db	109
   347  008B7B  0C                 	db	12
   348  008B7C  01                 	db	1
   349                           
   350                           ;initializer for _tx_buf
   351  008B7D  01                 	db	1
   352  008B7E  02                 	db	2
   353  008B7F  03                 	db	3
   354  008B80  04                 	db	4
   355  008B81  05                 	db	5
   356  008B82  06                 	db	6
   357  008B83  07                 	db	7
   358  008B84  08                 	db	8
   359                           
   360                           	psect	mediumconst
   361  009C98                     __pmediumconst:
   362                           	opt stack 0
   363  009C98  00                 	db	0
   364  009C99                     _checked_line2:
   365                           	opt stack 0
   366  009C99  46                 	db	70
   367  009C9A  69                 	db	105
   368  009C9B  6C                 	db	108
   369  009C9C  65                 	db	101
   370  009C9D  20                 	db	32
   371  009C9E  63                 	db	99
   372  009C9F  68                 	db	104
   373  009CA0  65                 	db	101
   374  009CA1  63                 	db	99
   375  009CA2  6B                 	db	107
   376  009CA3  20                 	db	32
   377  009CA4  63                 	db	99
   378  009CA5  6F                 	db	111
   379  009CA6  6D                 	db	109
   380  009CA7  70                 	db	112
   381  009CA8  6C                 	db	108
   382  009CA9  65                 	db	101
   383  009CAA  74                 	db	116
   384  009CAB  65                 	db	101
   385  009CAC  64                 	db	100
   386  009CAD  00                 	db	0
   387  009CAE                     __end_of_checked_line2:
   388                           	opt stack 0
   389  009CAE                     _failed_line3_addressRange:
   390                           	opt stack 0
   391  009CAE  41                 	db	65
   392  009CAF  64                 	db	100
   393  009CB0  64                 	db	100
   394  009CB1  72                 	db	114
   395  009CB2  2E                 	db	46
   396  009CB3  20                 	db	32
   397  009CB4  6F                 	db	111
   398  009CB5  75                 	db	117
   399  009CB6  74                 	db	116
   400  009CB7  73                 	db	115
   401  009CB8  69                 	db	105
   402  009CB9  64                 	db	100
   403  009CBA  65                 	db	101
   404  009CBB  20                 	db	32
   405  009CBC  72                 	db	114
   406  009CBD  61                 	db	97
   407  009CBE  6E                 	db	110
   408  009CBF  67                 	db	103
   409  009CC0  65                 	db	101
   410  009CC1  00                 	db	0
   411  009CC2                     __end_of_failed_line3_addressRange:
   412                           	opt stack 0
   413  009CC2                     _search_line3:
   414                           	opt stack 0
   415  009CC2  46                 	db	70
   416  009CC3  49                 	db	73
   417  009CC4  52                 	db	82
   418  009CC5  4D                 	db	77
   419  009CC6  57                 	db	87
   420  009CC7  41                 	db	65
   421  009CC8  52                 	db	82
   422  009CC9  45                 	db	69
   423  009CCA  2E                 	db	46
   424  009CCB  48                 	db	72
   425  009CCC  45                 	db	69
   426  009CCD  58                 	db	88
   427  009CCE  20                 	db	32
   428  009CCF  6F                 	db	111
   429  009CD0  6E                 	db	110
   430  009CD1  20                 	db	32
   431  009CD2  55                 	db	85
   432  009CD3  53                 	db	83
   433  009CD4  42                 	db	66
   434  009CD5  00                 	db	0
   435  009CD6                     __end_of_search_line3:
   436                           	opt stack 0
   437  009CD6                     _failed_line3_startCode:
   438                           	opt stack 0
   439  009CD6  4D                 	db	77
   440  009CD7  69                 	db	105
   441  009CD8  73                 	db	115
   442  009CD9  73                 	db	115
   443  009CDA  69                 	db	105
   444  009CDB  6E                 	db	110
   445  009CDC  67                 	db	103
   446  009CDD  20                 	db	32
   447  009CDE  73                 	db	115
   448  009CDF  74                 	db	116
   449  009CE0  61                 	db	97
   450  009CE1  72                 	db	114
   451  009CE2  74                 	db	116
   452  009CE3  20                 	db	32
   453  009CE4  63                 	db	99
   454  009CE5  6F                 	db	111
   455  009CE6  64                 	db	100
   456  009CE7  65                 	db	101
   457  009CE8  00                 	db	0
   458  009CE9                     __end_of_failed_line3_startCode:
   459                           	opt stack 0
   460  009CE9                     _found_line2:
   461                           	opt stack 0
   462  009CE9  46                 	db	70
   463  009CEA  49                 	db	73
   464  009CEB  52                 	db	82
   465  009CEC  4D                 	db	77
   466  009CED  57                 	db	87
   467  009CEE  41                 	db	65
   468  009CEF  52                 	db	82
   469  009CF0  45                 	db	69
   470  009CF1  2E                 	db	46
   471  009CF2  48                 	db	72
   472  009CF3  45                 	db	69
   473  009CF4  58                 	db	88
   474  009CF5  20                 	db	32
   475  009CF6  66                 	db	102
   476  009CF7  6F                 	db	111
   477  009CF8  75                 	db	117
   478  009CF9  6E                 	db	110
   479  009CFA  64                 	db	100
   480  009CFB  00                 	db	0
   481  009CFC                     __end_of_found_line2:
   482                           	opt stack 0
   483  009CFC                     _programming_line2:
   484                           	opt stack 0
   485  009CFC  50                 	db	80
   486  009CFD  72                 	db	114
   487  009CFE  6F                 	db	111
   488  009CFF  67                 	db	103
   489  009D00  72                 	db	114
   490  009D01  61                 	db	97
   491  009D02  6D                 	db	109
   492  009D03  6D                 	db	109
   493  009D04  69                 	db	105
   494  009D05  6E                 	db	110
   495  009D06  67                 	db	103
   496  009D07  20                 	db	32
   497  009D08  66                 	db	102
   498  009D09  6C                 	db	108
   499  009D0A  61                 	db	97
   500  009D0B  73                 	db	115
   501  009D0C  68                 	db	104
   502  009D0D  00                 	db	0
   503  009D0E                     __end_of_programming_line2:
   504                           	opt stack 0
   505  009D0E                     _failed_line2:
   506                           	opt stack 0
   507  009D0E  46                 	db	70
   508  009D0F  69                 	db	105
   509  009D10  6C                 	db	108
   510  009D11  65                 	db	101
   511  009D12  20                 	db	32
   512  009D13  63                 	db	99
   513  009D14  68                 	db	104
   514  009D15  65                 	db	101
   515  009D16  63                 	db	99
   516  009D17  6B                 	db	107
   517  009D18  20                 	db	32
   518  009D19  66                 	db	102
   519  009D1A  61                 	db	97
   520  009D1B  69                 	db	105
   521  009D1C  6C                 	db	108
   522  009D1D  65                 	db	101
   523  009D1E  64                 	db	100
   524  009D1F  00                 	db	0
   525  009D20                     __end_of_failed_line2:
   526                           	opt stack 0
   527  009D20                     _found_line4:
   528                           	opt stack 0
   529  009D20  50                 	db	80
   530  009D21  72                 	db	114
   531  009D22  65                 	db	101
   532  009D23  73                 	db	115
   533  009D24  73                 	db	115
   534  009D25  20                 	db	32
   535  009D26  74                 	db	116
   536  009D27  6F                 	db	111
   537  009D28  20                 	db	32
   538  009D29  75                 	db	117
   539  009D2A  73                 	db	115
   540  009D2B  65                 	db	101
   541  009D2C  20                 	db	32
   542  009D2D  66                 	db	102
   543  009D2E  69                 	db	105
   544  009D2F  6C                 	db	108
   545  009D30  65                 	db	101
   546  009D31  00                 	db	0
   547  009D32                     __end_of_found_line4:
   548                           	opt stack 0
   549  009D32                     _checked_line4:
   550                           	opt stack 0
   551  009D32  50                 	db	80
   552  009D33  72                 	db	114
   553  009D34  65                 	db	101
   554  009D35  73                 	db	115
   555  009D36  73                 	db	115
   556  009D37  20                 	db	32
   557  009D38  74                 	db	116
   558  009D39  6F                 	db	111
   559  009D3A  20                 	db	32
   560  009D3B  70                 	db	112
   561  009D3C  72                 	db	114
   562  009D3D  6F                 	db	111
   563  009D3E  67                 	db	103
   564  009D3F  72                 	db	114
   565  009D40  61                 	db	97
   566  009D41  6D                 	db	109
   567  009D42  00                 	db	0
   568  009D43                     __end_of_checked_line4:
   569                           	opt stack 0
   570  009D43                     _search_line2:
   571                           	opt stack 0
   572  009D43  4C                 	db	76
   573  009D44  6F                 	db	111
   574  009D45  6F                 	db	111
   575  009D46  6B                 	db	107
   576  009D47  69                 	db	105
   577  009D48  6E                 	db	110
   578  009D49  67                 	db	103
   579  009D4A  20                 	db	32
   580  009D4B  66                 	db	102
   581  009D4C  6F                 	db	111
   582  009D4D  72                 	db	114
   583  009D4E  20                 	db	32
   584  009D4F  66                 	db	102
   585  009D50  69                 	db	105
   586  009D51  6C                 	db	108
   587  009D52  65                 	db	101
   588  009D53  00                 	db	0
   589  009D54                     __end_of_search_line2:
   590                           	opt stack 0
   591  009D54                     _done_line4:
   592                           	opt stack 0
   593  009D54  50                 	db	80
   594  009D55  72                 	db	114
   595  009D56  65                 	db	101
   596  009D57  73                 	db	115
   597  009D58  73                 	db	115
   598  009D59  20                 	db	32
   599  009D5A  74                 	db	116
   600  009D5B  6F                 	db	111
   601  009D5C  20                 	db	32
   602  009D5D  72                 	db	114
   603  009D5E  65                 	db	101
   604  009D5F  62                 	db	98
   605  009D60  6F                 	db	111
   606  009D61  6F                 	db	111
   607  009D62  74                 	db	116
   608  009D63  00                 	db	0
   609  009D64                     __end_of_done_line4:
   610                           	opt stack 0
   611  009D64                     _done_line3:
   612                           	opt stack 0
   613  009D64  50                 	db	80
   614  009D65  61                 	db	97
   615  009D66  67                 	db	103
   616  009D67  65                 	db	101
   617  009D68  73                 	db	115
   618  009D69  20                 	db	32
   619  009D6A  77                 	db	119
   620  009D6B  72                 	db	114
   621  009D6C  69                 	db	105
   622  009D6D  74                 	db	116
   623  009D6E  74                 	db	116
   624  009D6F  65                 	db	101
   625  009D70  6E                 	db	110
   626  009D71  3A                 	db	58
   627  009D72  20                 	db	32
   628  009D73  00                 	db	0
   629  009D74                     __end_of_done_line3:
   630                           	opt stack 0
   631  009D74                     _done_line1:
   632                           	opt stack 0
   633  009D74  42                 	db	66
   634  009D75  6F                 	db	111
   635  009D76  6F                 	db	111
   636  009D77  74                 	db	116
   637  009D78  6C                 	db	108
   638  009D79  6F                 	db	111
   639  009D7A  61                 	db	97
   640  009D7B  64                 	db	100
   641  009D7C  65                 	db	101
   642  009D7D  72                 	db	114
   643  009D7E  20                 	db	32
   644  009D7F  4D                 	db	77
   645  009D80  6F                 	db	111
   646  009D81  64                 	db	100
   647  009D82  65                 	db	101
   648  009D83  00                 	db	0
   649  009D84                     __end_of_done_line1:
   650                           	opt stack 0
   651  009D84                     _programming_line4:
   652                           	opt stack 0
   653  009D84  50                 	db	80
   654  009D85  61                 	db	97
   655  009D86  67                 	db	103
   656  009D87  65                 	db	101
   657  009D88  73                 	db	115
   658  009D89  20                 	db	32
   659  009D8A  77                 	db	119
   660  009D8B  72                 	db	114
   661  009D8C  69                 	db	105
   662  009D8D  74                 	db	116
   663  009D8E  74                 	db	116
   664  009D8F  65                 	db	101
   665  009D90  6E                 	db	110
   666  009D91  3A                 	db	58
   667  009D92  20                 	db	32
   668  009D93  00                 	db	0
   669  009D94                     __end_of_programming_line4:
   670                           	opt stack 0
   671  009D94                     _programming_line1:
   672                           	opt stack 0
   673  009D94  42                 	db	66
   674  009D95  6F                 	db	111
   675  009D96  6F                 	db	111
   676  009D97  74                 	db	116
   677  009D98  6C                 	db	108
   678  009D99  6F                 	db	111
   679  009D9A  61                 	db	97
   680  009D9B  64                 	db	100
   681  009D9C  65                 	db	101
   682  009D9D  72                 	db	114
   683  009D9E  20                 	db	32
   684  009D9F  4D                 	db	77
   685  009DA0  6F                 	db	111
   686  009DA1  64                 	db	100
   687  009DA2  65                 	db	101
   688  009DA3  00                 	db	0
   689  009DA4                     __end_of_programming_line1:
   690                           	opt stack 0
   691  009DA4                     _failed_line1:
   692                           	opt stack 0
   693  009DA4  42                 	db	66
   694  009DA5  6F                 	db	111
   695  009DA6  6F                 	db	111
   696  009DA7  74                 	db	116
   697  009DA8  6C                 	db	108
   698  009DA9  6F                 	db	111
   699  009DAA  61                 	db	97
   700  009DAB  64                 	db	100
   701  009DAC  65                 	db	101
   702  009DAD  72                 	db	114
   703  009DAE  20                 	db	32
   704  009DAF  4D                 	db	77
   705  009DB0  6F                 	db	111
   706  009DB1  64                 	db	100
   707  009DB2  65                 	db	101
   708  009DB3  00                 	db	0
   709  009DB4                     __end_of_failed_line1:
   710                           	opt stack 0
   711  009DB4                     _checked_line1:
   712                           	opt stack 0
   713  009DB4  42                 	db	66
   714  009DB5  6F                 	db	111
   715  009DB6  6F                 	db	111
   716  009DB7  74                 	db	116
   717  009DB8  6C                 	db	108
   718  009DB9  6F                 	db	111
   719  009DBA  61                 	db	97
   720  009DBB  64                 	db	100
   721  009DBC  65                 	db	101
   722  009DBD  72                 	db	114
   723  009DBE  20                 	db	32
   724  009DBF  4D                 	db	77
   725  009DC0  6F                 	db	111
   726  009DC1  64                 	db	100
   727  009DC2  65                 	db	101
   728  009DC3  00                 	db	0
   729  009DC4                     __end_of_checked_line1:
   730                           	opt stack 0
   731  009DC4                     _verify_line1:
   732                           	opt stack 0
   733  009DC4  42                 	db	66
   734  009DC5  6F                 	db	111
   735  009DC6  6F                 	db	111
   736  009DC7  74                 	db	116
   737  009DC8  6C                 	db	108
   738  009DC9  6F                 	db	111
   739  009DCA  61                 	db	97
   740  009DCB  64                 	db	100
   741  009DCC  65                 	db	101
   742  009DCD  72                 	db	114
   743  009DCE  20                 	db	32
   744  009DCF  4D                 	db	77
   745  009DD0  6F                 	db	111
   746  009DD1  64                 	db	100
   747  009DD2  65                 	db	101
   748  009DD3  00                 	db	0
   749  009DD4                     __end_of_verify_line1:
   750                           	opt stack 0
   751  009DD4                     _found_line1:
   752                           	opt stack 0
   753  009DD4  42                 	db	66
   754  009DD5  6F                 	db	111
   755  009DD6  6F                 	db	111
   756  009DD7  74                 	db	116
   757  009DD8  6C                 	db	108
   758  009DD9  6F                 	db	111
   759  009DDA  61                 	db	97
   760  009DDB  64                 	db	100
   761  009DDC  65                 	db	101
   762  009DDD  72                 	db	114
   763  009DDE  20                 	db	32
   764  009DDF  4D                 	db	77
   765  009DE0  6F                 	db	111
   766  009DE1  64                 	db	100
   767  009DE2  65                 	db	101
   768  009DE3  00                 	db	0
   769  009DE4                     __end_of_found_line1:
   770                           	opt stack 0
   771  009DE4                     _search_line1:
   772                           	opt stack 0
   773  009DE4  42                 	db	66
   774  009DE5  6F                 	db	111
   775  009DE6  6F                 	db	111
   776  009DE7  74                 	db	116
   777  009DE8  6C                 	db	108
   778  009DE9  6F                 	db	111
   779  009DEA  61                 	db	97
   780  009DEB  64                 	db	100
   781  009DEC  65                 	db	101
   782  009DED  72                 	db	114
   783  009DEE  20                 	db	32
   784  009DEF  4D                 	db	77
   785  009DF0  6F                 	db	111
   786  009DF1  64                 	db	100
   787  009DF2  65                 	db	101
   788  009DF3  00                 	db	0
   789  009DF4                     __end_of_search_line1:
   790                           	opt stack 0
   791  009DF4                     _start_line1:
   792                           	opt stack 0
   793  009DF4  42                 	db	66
   794  009DF5  6F                 	db	111
   795  009DF6  6F                 	db	111
   796  009DF7  74                 	db	116
   797  009DF8  6C                 	db	108
   798  009DF9  6F                 	db	111
   799  009DFA  61                 	db	97
   800  009DFB  64                 	db	100
   801  009DFC  65                 	db	101
   802  009DFD  72                 	db	114
   803  009DFE  20                 	db	32
   804  009DFF  4D                 	db	77
   805  009E00  6F                 	db	111
   806  009E01  64                 	db	100
   807  009E02  65                 	db	101
   808  009E03  00                 	db	0
   809  009E04                     __end_of_start_line1:
   810                           	opt stack 0
   811  009E04                     _failed_line3_checksum:
   812                           	opt stack 0
   813  009E04  43                 	db	67
   814  009E05  68                 	db	104
   815  009E06  65                 	db	101
   816  009E07  63                 	db	99
   817  009E08  6B                 	db	107
   818  009E09  73                 	db	115
   819  009E0A  75                 	db	117
   820  009E0B  6D                 	db	109
   821  009E0C  20                 	db	32
   822  009E0D  65                 	db	101
   823  009E0E  72                 	db	114
   824  009E0F  72                 	db	114
   825  009E10  6F                 	db	111
   826  009E11  72                 	db	114
   827  009E12  00                 	db	0
   828  009E13                     __end_of_failed_line3_checksum:
   829                           	opt stack 0
   830  009E13                     _failed_line3_noNextRecord:
   831                           	opt stack 0
   832  009E13  4E                 	db	78
   833  009E14  6F                 	db	111
   834  009E15  20                 	db	32
   835  009E16  6E                 	db	110
   836  009E17  65                 	db	101
   837  009E18  78                 	db	120
   838  009E19  74                 	db	116
   839  009E1A  20                 	db	32
   840  009E1B  72                 	db	114
   841  009E1C  65                 	db	101
   842  009E1D  63                 	db	99
   843  009E1E  6F                 	db	111
   844  009E1F  72                 	db	114
   845  009E20  64                 	db	100
   846  009E21  00                 	db	0
   847  009E22                     __end_of_failed_line3_noNextRecord:
   848                           	opt stack 0
   849  009E22                     _start_line4:
   850                           	opt stack 0
   851  009E22  73                 	db	115
   852  009E23  6F                 	db	111
   853  009E24  6C                 	db	108
   854  009E25  64                 	db	100
   855  009E26  65                 	db	101
   856  009E27  72                 	db	114
   857  009E28  6E                 	db	110
   858  009E29  65                 	db	101
   859  009E2A  72                 	db	114
   860  009E2B  64                 	db	100
   861  009E2C  2E                 	db	46
   862  009E2D  63                 	db	99
   863  009E2E  6F                 	db	111
   864  009E2F  6D                 	db	109
   865  009E30  00                 	db	0
   866  009E31                     __end_of_start_line4:
   867                           	opt stack 0
   868  009E31                     _failed_line3_dataTooLong:
   869                           	opt stack 0
   870  009E31  44                 	db	68
   871  009E32  61                 	db	97
   872  009E33  74                 	db	116
   873  009E34  61                 	db	97
   874  009E35  20                 	db	32
   875  009E36  74                 	db	116
   876  009E37  6F                 	db	111
   877  009E38  6F                 	db	111
   878  009E39  20                 	db	32
   879  009E3A  6C                 	db	108
   880  009E3B  6F                 	db	111
   881  009E3C  6E                 	db	110
   882  009E3D  67                 	db	103
   883  009E3E  00                 	db	0
   884  009E3F                     __end_of_failed_line3_dataTooLong:
   885                           	opt stack 0
   886  009E3F                     _reboot_line1:
   887                           	opt stack 0
   888  009E3F  52                 	db	82
   889  009E40  65                 	db	101
   890  009E41  62                 	db	98
   891  009E42  6F                 	db	111
   892  009E43  6F                 	db	111
   893  009E44  74                 	db	116
   894  009E45  69                 	db	105
   895  009E46  6E                 	db	110
   896  009E47  67                 	db	103
   897  009E48  2E                 	db	46
   898  009E49  2E                 	db	46
   899  009E4A  2E                 	db	46
   900  009E4B  00                 	db	0
   901  009E4C                     __end_of_reboot_line1:
   902                           	opt stack 0
   903  009E4C                     _verify_line2:
   904                           	opt stack 0
   905  009E4C  56                 	db	86
   906  009E4D  65                 	db	101
   907  009E4E  72                 	db	114
   908  009E4F  69                 	db	105
   909  009E50  66                 	db	102
   910  009E51  79                 	db	121
   911  009E52  69                 	db	105
   912  009E53  6E                 	db	110
   913  009E54  67                 	db	103
   914  009E55  2E                 	db	46
   915  009E56  2E                 	db	46
   916  009E57  2E                 	db	46
   917  009E58  00                 	db	0
   918  009E59                     __end_of_verify_line2:
   919                           	opt stack 0
   920  009E59                     _search_line4:
   921                           	opt stack 0
   922  009E59  64                 	db	100
   923  009E5A  72                 	db	114
   924  009E5B  69                 	db	105
   925  009E5C  76                 	db	118
   926  009E5D  65                 	db	101
   927  009E5E  2E                 	db	46
   928  009E5F  2E                 	db	46
   929  009E60  2E                 	db	46
   930  009E61  00                 	db	0
   931  009E62                     __end_of_search_line4:
   932                           	opt stack 0
   933  009E62                     _start_line2:
   934                           	opt stack 0
   935  009E62  56                 	db	86
   936  009E63  65                 	db	101
   937  009E64  72                 	db	114
   938  009E65  73                 	db	115
   939  009E66  69                 	db	105
   940  009E67  6F                 	db	111
   941  009E68  6E                 	db	110
   942  009E69  20                 	db	32
   943  009E6A  00                 	db	0
   944  009E6B                     __end_of_start_line2:
   945                           	opt stack 0
   946  009E6B                     _failed_line4:
   947                           	opt stack 0
   948  009E6B  52                 	db	82
   949  009E6C  65                 	db	101
   950  009E6D  63                 	db	99
   951  009E6E  6F                 	db	111
   952  009E6F  72                 	db	114
   953  009E70  64                 	db	100
   954  009E71  20                 	db	32
   955  009E72  00                 	db	0
   956  009E73                     __end_of_failed_line4:
   957                           	opt stack 0
   958  009E73                     _checked_line3:
   959                           	opt stack 0
   960  009E73  72                 	db	114
   961  009E74  65                 	db	101
   962  009E75  63                 	db	99
   963  009E76  6F                 	db	111
   964  009E77  72                 	db	114
   965  009E78  64                 	db	100
   966  009E79  73                 	db	115
   967  009E7A  00                 	db	0
   968  009E7B                     __end_of_checked_line3:
   969                           	opt stack 0
   970  009E7B                     _USB_SD_Ptr:
   971                           	opt stack 0
   972  009E7B  CC                 	db	low _sd000
   973  009E7C  9F                 	db	high _sd000
   974  009E7D  E8                 	db	low _sd001
   975  009E7E  9E                 	db	high _sd001
   976  009E7F  1C                 	db	low _sd002
   977  009E80  9F                 	db	high _sd002
   978  009E81  8B                 	db	low _sd003
   979  009E82  9F                 	db	high _sd003
   980  009E83                     __end_of_USB_SD_Ptr:
   981                           	opt stack 0
   982  009E83                     _programming_line3:
   983                           	opt stack 0
   984  009E83  45                 	db	69
   985  009E84  6E                 	db	110
   986  009E85  74                 	db	116
   987  009E86  72                 	db	114
   988  009E87  79                 	db	121
   989  009E88  20                 	db	32
   990  009E89  00                 	db	0
   991  009E8A                     __end_of_programming_line3:
   992                           	opt stack 0
   993  009E8A                     _verify_line3:
   994                           	opt stack 0
   995  009E8A  52                 	db	82
   996  009E8B  65                 	db	101
   997  009E8C  63                 	db	99
   998  009E8D  6F                 	db	111
   999  009E8E  72                 	db	114
  1000  009E8F  64                 	db	100
  1001  009E90  00                 	db	0
  1002  009E91                     __end_of_verify_line3:
  1003                           	opt stack 0
  1004  009E91                     _found_line3b:
  1005                           	opt stack 0
  1006  009E91  20                 	db	32
  1007  009E92  62                 	db	98
  1008  009E93  79                 	db	121
  1009  009E94  74                 	db	116
  1010  009E95  65                 	db	101
  1011  009E96  73                 	db	115
  1012  009E97  00                 	db	0
  1013  009E98                     __end_of_found_line3b:
  1014                           	opt stack 0
  1015  009E98                     _found_line3:
  1016                           	opt stack 0
  1017  009E98  53                 	db	83
  1018  009E99  69                 	db	105
  1019  009E9A  7A                 	db	122
  1020  009E9B  65                 	db	101
  1021  009E9C  3A                 	db	58
  1022  009E9D  20                 	db	32
  1023  009E9E  00                 	db	0
  1024  009E9F                     __end_of_found_line3:
  1025                           	opt stack 0
  1026  009E9F                     _done_line2:
  1027                           	opt stack 0
  1028  009E9F  44                 	db	68
  1029  009EA0  6F                 	db	111
  1030  009EA1  6E                 	db	110
  1031  009EA2  65                 	db	101
  1032  009EA3  21                 	db	33
  1033  009EA4  00                 	db	0
  1034  009EA5                     __end_of_done_line2:
  1035                           	opt stack 0
  1036  009EA5                     _USB_CD_Ptr:
  1037                           	opt stack 0
  1038  009EA5  A8                 	db	low _configDescriptor1
  1039  009EA6  9E                 	db	high _configDescriptor1
  1040  009EA7                     __end_of_USB_CD_Ptr:
  1041                           	opt stack 0
  1042  009EA7                     _start_line3:
  1043                           	opt stack 0
  1044  009EA7  00                 	db	0
  1045  009EA8                     __end_of_start_line3:
  1046                           	opt stack 0
  1047  009EA8                     _configDescriptor1:
  1048                           	opt stack 0
  1049  009EA8  09                 	db	9
  1050  009EA9  02                 	db	2
  1051  009EAA  40                 	db	64
  1052  009EAB  00                 	db	0
  1053  009EAC  02                 	db	2
  1054  009EAD  01                 	db	1
  1055  009EAE  00                 	db	0
  1056  009EAF  C0                 	db	192
  1057  009EB0  32                 	db	50
  1058  009EB1  09                 	db	9
  1059  009EB2  04                 	db	4
  1060  009EB3  00                 	db	0
  1061  009EB4  00                 	db	0
  1062  009EB5  02                 	db	2
  1063  009EB6  03                 	db	3
  1064  009EB7  00                 	db	0
  1065  009EB8  00                 	db	0
  1066  009EB9  00                 	db	0
  1067  009EBA  09                 	db	9
  1068  009EBB  21                 	db	33
  1069  009EBC  11                 	db	17
  1070  009EBD  01                 	db	1
  1071  009EBE  00                 	db	0
  1072  009EBF  01                 	db	1
  1073  009EC0  22                 	db	34
  1074  009EC1  1D                 	db	29
  1075  009EC2  00                 	db	0
  1076  009EC3  07                 	db	7
  1077  009EC4  05                 	db	5
  1078  009EC5  81                 	db	129
  1079  009EC6  03                 	db	3
  1080  009EC7  40                 	db	64
  1081  009EC8  00                 	db	0
  1082  009EC9  01                 	db	1
  1083  009ECA  07                 	db	7
  1084  009ECB  05                 	db	5
  1085  009ECC  01                 	db	1
  1086  009ECD  03                 	db	3
  1087  009ECE  40                 	db	64
  1088  009ECF  00                 	db	0
  1089  009ED0  01                 	db	1
  1090  009ED1  09                 	db	9
  1091  009ED2  04                 	db	4
  1092  009ED3  01                 	db	1
  1093  009ED4  00                 	db	0
  1094  009ED5  02                 	db	2
  1095  009ED6  08                 	db	8
  1096  009ED7  06                 	db	6
  1097  009ED8  50                 	db	80
  1098  009ED9  00                 	db	0
  1099  009EDA  07                 	db	7
  1100  009EDB  05                 	db	5
  1101  009EDC  82                 	db	130
  1102  009EDD  02                 	db	2
  1103  009EDE  40                 	db	64
  1104  009EDF  00                 	db	0
  1105  009EE0  01                 	db	1
  1106  009EE1  07                 	db	7
  1107  009EE2  05                 	db	5
  1108  009EE3  02                 	db	2
  1109  009EE4  02                 	db	2
  1110  009EE5  40                 	db	64
  1111  009EE6  00                 	db	0
  1112  009EE7  01                 	db	1
  1113  009EE8                     __end_of_configDescriptor1:
  1114                           	opt stack 0
  1115  009EE8                     _sd001:
  1116                           	opt stack 0
  1117  009EE8  34                 	db	52
  1118  009EE9  03                 	db	3
  1119  009EEA  0053               	dw	83
  1120  009EEC  006F               	dw	111
  1121  009EEE  006C               	dw	108
  1122  009EF0  0064               	dw	100
  1123  009EF2  0065               	dw	101
  1124  009EF4  0072               	dw	114
  1125  009EF6  006E               	dw	110
  1126  009EF8  0065               	dw	101
  1127  009EFA  0072               	dw	114
  1128  009EFC  0064               	dw	100
  1129  009EFE  002E               	dw	46
  1130  009F00  0063               	dw	99
  1131  009F02  006F               	dw	111
  1132  009F04  006D               	dw	109
  1133  009F06  0020               	dw	32
  1134  009F08  0020               	dw	32
  1135  009F0A  0020               	dw	32
  1136  009F0C  0020               	dw	32
  1137  009F0E  0020               	dw	32
  1138  009F10  0020               	dw	32
  1139  009F12  0020               	dw	32
  1140  009F14  0020               	dw	32
  1141  009F16  0020               	dw	32
  1142  009F18  0020               	dw	32
  1143  009F1A  0020               	dw	32
  1144  009F1C                     __end_of_sd001:
  1145                           	opt stack 0
  1146  009F1C                     _sd002:
  1147                           	opt stack 0
  1148  009F1C  2E                 	db	46
  1149  009F1D  03                 	db	3
  1150  009F1E  004D               	dw	77
  1151  009F20  0050               	dw	80
  1152  009F22  0050               	dw	80
  1153  009F24  0054               	dw	84
  1154  009F26  0053               	dw	83
  1155  009F28  006F               	dw	111
  1156  009F2A  006C               	dw	108
  1157  009F2C  0061               	dw	97
  1158  009F2E  0072               	dw	114
  1159  009F30  0020               	dw	32
  1160  009F32  0043               	dw	67
  1161  009F34  0068               	dw	104
  1162  009F36  0061               	dw	97
  1163  009F38  0072               	dw	114
  1164  009F3A  0067               	dw	103
  1165  009F3C  0065               	dw	101
  1166  009F3E  0072               	dw	114
  1167  009F40  0020               	dw	32
  1168  009F42  0052               	dw	82
  1169  009F44  0065               	dw	101
  1170  009F46  0076               	dw	118
  1171  009F48  0043               	dw	67
  1172  009F4A                     __end_of_sd002:
  1173                           	opt stack 0
  1174  009F4A                     _inq_resp:
  1175                           	opt stack 0
  1176  009F4A  00                 	db	0
  1177  009F4B  80                 	db	128
  1178  009F4C  04                 	db	4
  1179  009F4D  02                 	db	2
  1180  009F4E  20                 	db	32
  1181  009F4F  00                 	db	0
  1182  009F50  00                 	db	0
  1183  009F51  00                 	db	0
  1184  009F52  4D                 	db	77
  1185  009F53  69                 	db	105
  1186  009F54  63                 	db	99
  1187  009F55  72                 	db	114
  1188  009F56  6F                 	db	111
  1189  009F57  63                 	db	99
  1190  009F58  68                 	db	104
  1191  009F59  70                 	db	112
  1192  009F5A  4D                 	db	77
  1193  009F5B  61                 	db	97
  1194  009F5C  73                 	db	115
  1195  009F5D  73                 	db	115
  1196  009F5E  20                 	db	32
  1197  009F5F  53                 	db	83
  1198  009F60  74                 	db	116
  1199  009F61  6F                 	db	111
  1200  009F62  72                 	db	114
  1201  009F63  61                 	db	97
  1202  009F64  67                 	db	103
  1203  009F65  65                 	db	101
  1204  009F66  20                 	db	32
  1205  009F67  20                 	db	32
  1206  009F68  20                 	db	32
  1207  009F69  20                 	db	32
  1208  009F6A  30                 	db	48
  1209  009F6B  30                 	db	48
  1210  009F6C  30                 	db	48
  1211  009F6D  31                 	db	49
  1212  009F6E                     __end_of_inq_resp:
  1213                           	opt stack 0
  1214  009F6E                     _hid_rpt01:
  1215                           	opt stack 0
  1216  009F6E  06                 	db	6
  1217  009F6F  00                 	db	0
  1218  009F70  FF                 	db	255
  1219  009F71  09                 	db	9
  1220  009F72  01                 	db	1
  1221  009F73  A1                 	db	161
  1222  009F74  01                 	db	1
  1223  009F75  19                 	db	25
  1224  009F76  01                 	db	1
  1225  009F77  29                 	db	41
  1226  009F78  40                 	db	64
  1227  009F79  15                 	db	21
  1228  009F7A  00                 	db	0
  1229  009F7B  26                 	db	38
  1230  009F7C  FF                 	db	255
  1231  009F7D  00                 	db	0
  1232  009F7E  75                 	db	117
  1233  009F7F  08                 	db	8
  1234  009F80  95                 	db	149
  1235  009F81  40                 	db	64
  1236  009F82  81                 	db	129
  1237  009F83  00                 	db	0
  1238  009F84  19                 	db	25
  1239  009F85  01                 	db	1
  1240  009F86  29                 	db	41
  1241  009F87  40                 	db	64
  1242  009F88  91                 	db	145
  1243  009F89  00                 	db	0
  1244  009F8A  C0                 	db	192
  1245  009F8B                     __end_of_hid_rpt01:
  1246                           	opt stack 0
  1247  009F8B                     _sd003:
  1248                           	opt stack 0
  1249  009F8B  1A                 	db	26
  1250  009F8C  03                 	db	3
  1251  009F8D  0031               	dw	49
  1252  009F8F  0032               	dw	50
  1253  009F91  0033               	dw	51
  1254  009F93  0034               	dw	52
  1255  009F95  0035               	dw	53
  1256  009F97  0036               	dw	54
  1257  009F99  0037               	dw	55
  1258  009F9B  0038               	dw	56
  1259  009F9D  0039               	dw	57
  1260  009F9F  0030               	dw	48
  1261  009FA1  0039               	dw	57
  1262  009FA3  0039               	dw	57
  1263  009FA5                     __end_of_sd003:
  1264                           	opt stack 0
  1265  009FA5                     _device_dsc:
  1266                           	opt stack 0
  1267  009FA5  12                 	db	18
  1268  009FA6  01                 	db	1
  1269  009FA7  0200               	dw	512
  1270  009FA9  00                 	db	0
  1271  009FAA  00                 	db	0
  1272  009FAB  00                 	db	0
  1273  009FAC  08                 	db	8
  1274  009FAD  04D8               	dw	1240
  1275  009FAF  F08E               	dw	61582
  1276  009FB1  0100               	dw	256
  1277  009FB3  01                 	db	1
  1278  009FB4  02                 	db	2
  1279  009FB5  00                 	db	0
  1280  009FB6  01                 	db	1
  1281  009FB7                     __end_of_device_dsc:
  1282                           	opt stack 0
  1283  009FB7                     _bootloader_filename:
  1284                           	opt stack 0
  1285  009FB7  46                 	db	70
  1286  009FB8  49                 	db	73
  1287  009FB9  52                 	db	82
  1288  009FBA  4D                 	db	77
  1289  009FBB  57                 	db	87
  1290  009FBC  41                 	db	65
  1291  009FBD  52                 	db	82
  1292  009FBE  45                 	db	69
  1293  009FBF  00                 	db	0
  1294  009FC0                     __end_of_bootloader_filename:
  1295                           	opt stack 0
  1296  009FC0                     _flash_command_pagesize_528:
  1297                           	opt stack 0
  1298  009FC0  3D                 	db	61
  1299  009FC1  2A                 	db	42
  1300  009FC2  80                 	db	128
  1301  009FC3  A7                 	db	167
  1302  009FC4                     __end_of_flash_command_pagesize_528:
  1303                           	opt stack 0
  1304  009FC4                     _flash_command_pagesize_512:
  1305                           	opt stack 0
  1306  009FC4  3D                 	db	61
  1307  009FC5  2A                 	db	42
  1308  009FC6  80                 	db	128
  1309  009FC7  A6                 	db	166
  1310  009FC8                     __end_of_flash_command_pagesize_512:
  1311                           	opt stack 0
  1312  009FC8                     _bootloader_extension:
  1313                           	opt stack 0
  1314  009FC8  48                 	db	72
  1315  009FC9  45                 	db	69
  1316  009FCA  58                 	db	88
  1317  009FCB  00                 	db	0
  1318  009FCC                     __end_of_bootloader_extension:
  1319                           	opt stack 0
  1320  009FCC                     _sd000:
  1321                           	opt stack 0
  1322  009FCC  04                 	db	4
  1323  009FCD  03                 	db	3
  1324  009FCE  0409               	dw	1033
  1325  009FD0                     __end_of_sd000:
  1326                           	opt stack 0
  1327  0000                     _RPINR23	set	3838
  1328  0000                     _RPOR23	set	3799
  1329  0000                     _RPINR22	set	3837
  1330  0000                     _RPOR22	set	3798
  1331  0000                     _RPOR21	set	3797
  1332  0000                     _RPINR21	set	3836
  1333  0000                     _RPINR2	set	3810
  1334  0000                     _RPINR3	set	3811
  1335  0000                     _RPINR1	set	3809
  1336  0000                     _PPSCONbits	set	3775
  1337  0000                     _ODCON3bits	set	3904
  1338  0000                     _ANCON0bits	set	3912
  1339  0000                     _UEP0bits	set	3878
  1340  0000                     _UIEbits	set	3894
  1341  0000                     _UADDR	set	3896
  1342  0000                     _UIE	set	3894
  1343  0000                     _UEIE	set	3895
  1344  0000                     _UCFG	set	3897
  1345  0000                     _UEP1	set	3879
  1346  0000                     _UEP0	set	3878
  1347  0000                     _TBLPTR	set	4086
  1348  0000                     _DMACON2bits	set	3974
  1349  0000                     _SSP2CON1bits	set	3954
  1350  0000                     _SSP2STATbits	set	3955
  1351  0000                     _INTCON	set	4082
  1352  0000                     _EECON1	set	4006
  1353  0000                     _TABLAT	set	4085
  1354  0000                     _EECON1bits	set	4006
  1355  0000                     _SSP1CON1	set	4038
  1356  0000                     _SSP1BUF	set	4041
  1357  0000                     _SSP1CON2bits	set	4037
  1358  0000                     _SSP1CON1bits	set	4038
  1359  0000                     _SSP1ADD	set	4040
  1360  0000                     _SSP1STATbits	set	4039
  1361  0000                     _LATEbits	set	3981
  1362  0000                     _TRISEbits	set	3990
  1363  0000                     _LATBbits	set	3978
  1364  0000                     _TRISBbits	set	3987
  1365  0000                     _LATDbits	set	3980
  1366  0000                     _TRISDbits	set	3989
  1367  0000                     _LATCbits	set	3979
  1368  0000                     _TRISCbits	set	3988
  1369  0000                     _T0CONbits	set	4053
  1370  0000                     _INTCON2bits	set	4081
  1371  0000                     _EECON2	set	4007
  1372  0000                     _PORTBbits	set	3969
  1373  0000                     _INTCON3bits	set	4080
  1374  0000                     _TMR0L	set	4054
  1375  0000                     _TMR0H	set	4055
  1376  0000                     _INTCONbits	set	4082
  1377  0000                     _OSCCON	set	4051
  1378  0000                     _OSCTUNEbits	set	3995
  1379  0000                     _PORTAbits	set	3968
  1380  0000                     _TRISAbits	set	3986
  1381  0000                     _LATAbits	set	3977
  1382  0000                     _PIR3bits	set	4004
  1383  0000                     _DMABCL	set	3943
  1384  0000                     _DMABCH	set	3942
  1385  0000                     _RXADDRL	set	3945
  1386  0000                     _RXADDRH	set	3944
  1387  0000                     _DMACON1bits	set	3976
  1388  0000                     _TXADDRL	set	3947
  1389  0000                     _TXADDRH	set	3946
  1390  0000                     _PORTDbits	set	3971
  1391  0000                     _USTAT	set	3940
  1392  0000                     _PIR2bits	set	4001
  1393  0000                     _UCON	set	3941
  1394  0000                     _UIRbits	set	3938
  1395  0000                     _UCONbits	set	3941
  1396  0000                     _UIR	set	3938
  1397  0000                     _UEIR	set	3939
  1398  0000                     _PIE2bits	set	4000
  1399  009FD0                     STR_12:
  1400  009FD0  68                 	db	104	;'h'
  1401  009FD1  65                 	db	101	;'e'
  1402  009FD2  6C                 	db	108	;'l'
  1403  009FD3  6C                 	db	108	;'l'
  1404  009FD4  6F                 	db	111	;'o'
  1405  009FD5  20                 	db	32
  1406  009FD6  77                 	db	119	;'w'
  1407  009FD7  6F                 	db	111	;'o'
  1408  009FD8  72                 	db	114	;'r'
  1409  009FD9  6C                 	db	108	;'l'
  1410  009FDA  64                 	db	100	;'d'
  1411  009FDB  21                 	db	33
  1412  009FDC  00                 	db	0
  1413  009FDD                     STR_9:
  1414  009FDD  53                 	db	83	;'S'
  1415  009FDE  6F                 	db	111	;'o'
  1416  009FDF  6C                 	db	108	;'l'
  1417  009FE0  61                 	db	97	;'a'
  1418  009FE1  72                 	db	114	;'r'
  1419  009FE2  43                 	db	67	;'C'
  1420  009FE3  68                 	db	104	;'h'
  1421  009FE4  61                 	db	97	;'a'
  1422  009FE5  72                 	db	114	;'r'
  1423  009FE6  67                 	db	103	;'g'
  1424  009FE7  72                 	db	114	;'r'
  1425  009FE8  00                 	db	0
  1426  009FE9                     STR_10:
  1427  009FE9  46                 	db	70	;'F'
  1428  009FEA  49                 	db	73	;'I'
  1429  009FEB  4C                 	db	76	;'L'
  1430  009FEC  45                 	db	69	;'E'
  1431  009FED  20                 	db	32
  1432  009FEE  20                 	db	32
  1433  009FEF  20                 	db	32
  1434  009FF0  20                 	db	32
  1435  009FF1  00                 	db	0
  1436  009FF2                     STR_1:
  1437  009FF2  4D                 	db	77	;'M'
  1438  009FF3  53                 	db	83	;'S'
  1439  009FF4  44                 	db	68	;'D'
  1440  009FF5  4F                 	db	79	;'O'
  1441  009FF6  53                 	db	83	;'S'
  1442  009FF7  35                 	db	53	;'5'
  1443  009FF8  2E                 	db	46
  1444  009FF9  30                 	db	48	;'0'
  1445  009FFA  00                 	db	0
  1446  009FFB                     STR_11:
  1447  009FFB  54                 	db	84	;'T'
  1448  009FFC  58                 	db	88	;'X'
  1449  009FFD  54                 	db	84	;'T'
  1450  009FFE  00                 	db	0
  1451  0000                     
  1452                           ; #config settings
  1453  009FFF  00                 	db	0	; dummy byte at the end
  1454  0000                     
  1455                           	psect	cinit
  1456  006FC2                     __pcinit:
  1457                           	opt stack 0
  1458  006FC2                     start_initialization:
  1459                           	opt stack 0
  1460  006FC2                     __initialization:
  1461                           	opt stack 0
  1462                           
  1463                           ; Initialize objects allocated to BANK1 (37 bytes)
  1464                           ; load TBLPTR registers with __pidataBANK1
  1465  006FC2  0E60               	movlw	low __pidataBANK1
  1466  006FC4  6EF6               	movwf	tblptrl,c
  1467  006FC6  0E8B               	movlw	high __pidataBANK1
  1468  006FC8  6EF7               	movwf	tblptrh,c
  1469  006FCA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1470  006FCC  6EF8               	movwf	tblptru,c
  1471  006FCE  EE01  F0B3         	lfsr	0,__pdataBANK1
  1472  006FD2  EE10 F025          	lfsr	1,37
  1473  006FD6                     copy_data0:
  1474  006FD6  0009               	tblrd		*+
  1475  006FD8  CFF5 FFEE          	movff	tablat,postinc0
  1476  006FDC  50E5               	movf	postdec1,w,c
  1477  006FDE  50E1               	movf	fsr1l,w,c
  1478  006FE0  E1FA               	bnz	copy_data0
  1479                           
  1480                           ; Initialize objects allocated to BANK0 (1 bytes)
  1481                           ; load TBLPTR registers with __pidataBANK0
  1482  006FE2  0EB0               	movlw	low __pidataBANK0
  1483  006FE4  6EF6               	movwf	tblptrl,c
  1484  006FE6  0E8F               	movlw	high __pidataBANK0
  1485  006FE8  6EF7               	movwf	tblptrh,c
  1486  006FEA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1487  006FEC  6EF8               	movwf	tblptru,c
  1488  006FEE  0009               	tblrd		*+	;fetch initializer
  1489  006FF0  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1490                           
  1491                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1492  006FF4  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1493  006FF8  EE12 F000          	lfsr	1,512
  1494  006FFC                     clear_0:
  1495  006FFC  6AEE               	clrf	postinc0,c
  1496  006FFE  50E5               	movf	postdec1,w,c
  1497  007000  50E1               	movf	fsr1l,w,c
  1498  007002  E1FC               	bnz	clear_0
  1499  007004  50E2               	movf	fsr1h,w,c
  1500  007006  E1FA               	bnz	clear_0
  1501                           
  1502                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1503  007008  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1504  00700C  EE14 F000          	lfsr	1,1024
  1505  007010                     clear_1:
  1506  007010  6AEE               	clrf	postinc0,c
  1507  007012  50E5               	movf	postdec1,w,c
  1508  007014  50E1               	movf	fsr1l,w,c
  1509  007016  E1FC               	bnz	clear_1
  1510  007018  50E2               	movf	fsr1h,w,c
  1511  00701A  E1FA               	bnz	clear_1
  1512                           
  1513                           ; Clear objects allocated to BANK3 (192 bytes)
  1514  00701C  EE03  F000         	lfsr	0,__pbssBANK3
  1515  007020  0EC0               	movlw	192
  1516  007022                     clear_2:
  1517  007022  6AEE               	clrf	postinc0,c
  1518  007024  06E8               	decf	wreg,f,c
  1519  007026  E1FD               	bnz	clear_2
  1520                           
  1521                           ; Clear objects allocated to BANK2 (194 bytes)
  1522  007028  EE02  F000         	lfsr	0,__pbssBANK2
  1523  00702C  0EC2               	movlw	194
  1524  00702E                     clear_3:
  1525  00702E  6AEE               	clrf	postinc0,c
  1526  007030  06E8               	decf	wreg,f,c
  1527  007032  E1FD               	bnz	clear_3
  1528                           
  1529                           ; Clear objects allocated to BANK1 (179 bytes)
  1530  007034  EE01  F000         	lfsr	0,__pbssBANK1
  1531  007038  0EB3               	movlw	179
  1532  00703A                     clear_4:
  1533  00703A  6AEE               	clrf	postinc0,c
  1534  00703C  06E8               	decf	wreg,f,c
  1535  00703E  E1FD               	bnz	clear_4
  1536                           
  1537                           ; Clear objects allocated to BANK0 (58 bytes)
  1538  007040  EE00  F0C5         	lfsr	0,__pbssBANK0
  1539  007044  0E3A               	movlw	58
  1540  007046                     clear_5:
  1541  007046  6AEE               	clrf	postinc0,c
  1542  007048  06E8               	decf	wreg,f,c
  1543  00704A  E1FD               	bnz	clear_5
  1544  00704C                     end_of_initialization:
  1545                           	opt stack 0
  1546  00704C                     __end_of__initialization:
  1547                           	opt stack 0
  1548  00704C  0100               	movlb	0
  1549  00704E  EF3A  F01D         	goto	_main	;jump to C main() function
  1550                           tblptru	equ	0xFF8
  1551                           tblptrh	equ	0xFF7
  1552                           tblptrl	equ	0xFF6
  1553                           tablat	equ	0xFF5
  1554                           postinc0	equ	0xFEE
  1555                           wreg	equ	0xFE8
  1556                           postdec1	equ	0xFE5
  1557                           fsr1h	equ	0xFE2
  1558                           fsr1l	equ	0xFE1
  1559                           
  1560                           	psect	bssBANK0
  1561  0000C5                     __pbssBANK0:
  1562                           	opt stack 0
  1563  0000C5                     _os:
  1564                           	opt stack 0
  1565  0000C5                     	ds	6
  1566  0000CB                     _inPipes:
  1567                           	opt stack 0
  1568  0000CB                     	ds	6
  1569  0000D1                     _pBDTEntryIn:
  1570                           	opt stack 0
  1571  0000D1                     	ds	6
  1572  0000D7                     _hex_file_offset:
  1573                           	opt stack 0
  1574  0000D7                     	ds	4
  1575  0000DB                     _TransferLength:
  1576                           	opt stack 0
  1577  0000DB                     	ds	2
  1578  0000DD                     _USBMSDInHandle:
  1579                           	opt stack 0
  1580  0000DD                     	ds	2
  1581  0000DF                     _USBMSDOutHandle:
  1582                           	opt stack 0
  1583  0000DF                     	ds	2
  1584  0000E1                     _pBDTEntryEP0OutNext:
  1585                           	opt stack 0
  1586  0000E1                     	ds	2
  1587  0000E3                     _pBDTEntryEP0OutCurrent:
  1588                           	opt stack 0
  1589  0000E3                     	ds	2
  1590  0000E5                     _power_state:
  1591                           	opt stack 0
  1592  0000E5                     	ds	1
  1593  0000E6                     _userInterfaceStatus:
  1594                           	opt stack 0
  1595  0000E6                     	ds	1
  1596  0000E7                     _MSDHostNoData:
  1597                           	opt stack 0
  1598  0000E7                     	ds	1
  1599  0000E8                     _SoftDetach:
  1600                           	opt stack 0
  1601  0000E8                     	ds	1
  1602  0000E9                     _MSDRetryAttempt:
  1603                           	opt stack 0
  1604  0000E9                     	ds	1
  1605  0000EA                     _MSDWriteState:
  1606                           	opt stack 0
  1607  0000EA                     	ds	1
  1608  0000EB                     _MSDReadState:
  1609                           	opt stack 0
  1610  0000EB                     	ds	1
  1611  0000EC                     _MSDCommandState:
  1612                           	opt stack 0
  1613  0000EC                     	ds	1
  1614  0000ED                     _MSD_State:
  1615                           	opt stack 0
  1616  0000ED                     	ds	1
  1617  0000EE                     _USBDeferOUTDataStagePackets:
  1618                           	opt stack 0
  1619  0000EE                     	ds	1
  1620  0000EF                     _USBDeferINDataStagePackets:
  1621                           	opt stack 0
  1622  0000EF                     	ds	1
  1623  0000F0                     _USBStatusStageEnabledFlag2:
  1624                           	opt stack 0
  1625  0000F0                     	ds	1
  1626  0000F1                     _USBStatusStageEnabledFlag1:
  1627                           	opt stack 0
  1628  0000F1                     	ds	1
  1629  0000F2                     _USBDeferStatusStagePacket:
  1630                           	opt stack 0
  1631  0000F2                     	ds	1
  1632  0000F3                     _USBStatusStageTimeoutCounter:
  1633                           	opt stack 0
  1634  0000F3                     	ds	1
  1635  0000F4                     _endpoint_number:
  1636                           	opt stack 0
  1637  0000F4                     	ds	1
  1638  0000F5                     _RemoteWakeup:
  1639                           	opt stack 0
  1640  0000F5                     	ds	1
  1641  0000F6                     _controlTransferState:
  1642                           	opt stack 0
  1643  0000F6                     	ds	1
  1644  0000F7                     _shortPacketStatus:
  1645                           	opt stack 0
  1646  0000F7                     	ds	1
  1647  0000F8                     _USBDeviceState:
  1648                           	opt stack 0
  1649  0000F8                     	ds	1
  1650  0000F9                     _fast_read_cluster_number:
  1651                           	opt stack 0
  1652  0000F9                     	ds	2
  1653  0000FB                     _fast_read_cluster:
  1654                           	opt stack 0
  1655  0000FB                     	ds	2
  1656  0000FD                     _USTATcopy:
  1657                           	opt stack 0
  1658  0000FD                     	ds	1
  1659  0000FE                     _USBActiveConfiguration:
  1660                           	opt stack 0
  1661  0000FE                     	ds	1
  1662                           tblptru	equ	0xFF8
  1663                           tblptrh	equ	0xFF7
  1664                           tblptrl	equ	0xFF6
  1665                           tablat	equ	0xFF5
  1666                           postinc0	equ	0xFEE
  1667                           wreg	equ	0xFE8
  1668                           postdec1	equ	0xFE5
  1669                           fsr1h	equ	0xFE2
  1670                           fsr1l	equ	0xFE1
  1671                           
  1672                           	psect	dataBANK0
  1673  0000FF                     __pdataBANK0:
  1674                           	opt stack 0
  1675  0000FF                     _file_number:
  1676                           	opt stack 0
  1677  0000FF                     	ds	1
  1678                           tblptru	equ	0xFF8
  1679                           tblptrh	equ	0xFF7
  1680                           tblptrl	equ	0xFF6
  1681                           tablat	equ	0xFF5
  1682                           postinc0	equ	0xFEE
  1683                           wreg	equ	0xFE8
  1684                           postdec1	equ	0xFE5
  1685                           fsr1h	equ	0xFE2
  1686                           fsr1l	equ	0xFE1
  1687                           
  1688                           	psect	bssBANK1
  1689  000100                     __pbssBANK1:
  1690                           	opt stack 0
  1691  000100                     _gblCBW:
  1692                           	opt stack 0
  1693  000100                     	ds	31
  1694  00011F                     _gblSenseData:
  1695                           	opt stack 0
  1696  00011F                     	ds	18
  1697  000131                     _outPipes:
  1698                           	opt stack 0
  1699  000131                     	ds	8
  1700  000139                     _communicationSettings:
  1701                           	opt stack 0
  1702  000139                     	ds	7
  1703  000140                     _pBDTEntryOut:
  1704                           	opt stack 0
  1705  000140                     	ds	6
  1706  000146                     _extended_linear_address:
  1707                           	opt stack 0
  1708  000146                     	ds	4
  1709  00014A                     _hex_file_size:
  1710                           	opt stack 0
  1711  00014A                     	ds	4
  1712  00014E                     _file_maximum_address:
  1713                           	opt stack 0
  1714  00014E                     	ds	4
  1715  000152                     _file_minimum_address:
  1716                           	opt stack 0
  1717  000152                     	ds	4
  1718  000156                     _gblBLKLen:
  1719                           	opt stack 0
  1720  000156                     	ds	4
  1721  00015A                     _gblNumBLKS:
  1722                           	opt stack 0
  1723  00015A                     	ds	4
  1724  00015E                     _LBA:
  1725                           	opt stack 0
  1726  00015E                     	ds	4
  1727  000162                     _USB1msTickCount:
  1728                           	opt stack 0
  1729  000162                     	ds	4
  1730  000166                     _config_external:
  1731                           	opt stack 0
  1732  000166                     	ds	3
  1733  000169                     _config_internal:
  1734                           	opt stack 0
  1735  000169                     	ds	3
  1736  00016C                     _ep_data_out:
  1737                           	opt stack 0
  1738  00016C                     	ds	3
  1739  00016F                     _ep_data_in:
  1740                           	opt stack 0
  1741  00016F                     	ds	3
  1742  000172                     _FileAddress:
  1743                           	opt stack 0
  1744  000172                     	ds	2
  1745  000174                     _flash_pages_written:
  1746                           	opt stack 0
  1747  000174                     	ds	2
  1748  000176                     _total_hex_file_entries:
  1749                           	opt stack 0
  1750  000176                     	ds	2
  1751  000178                     _hex_file_entries:
  1752                           	opt stack 0
  1753  000178                     	ds	2
  1754  00017A                     _startup_timer:
  1755                           	opt stack 0
  1756  00017A                     	ds	2
  1757  00017C                     _system_ui_inactive_count:
  1758                           	opt stack 0
  1759  00017C                     	ds	2
  1760  00017E                     _USBInHandle:
  1761                           	opt stack 0
  1762  00017E                     	ds	2
  1763  000180                     _USBOutHandle:
  1764                           	opt stack 0
  1765  000180                     	ds	2
  1766  000182                     _gblMediaPresent:
  1767                           	opt stack 0
  1768  000182                     	ds	2
  1769  000184                     _MSBBufferIndex:
  1770                           	opt stack 0
  1771  000184                     	ds	2
  1772  000186                     _ptrNextData:
  1773                           	opt stack 0
  1774  000186                     	ds	2
  1775  000188                     _pDst:
  1776                           	opt stack 0
  1777  000188                     	ds	2
  1778  00018A                     _active_configuration:
  1779                           	opt stack 0
  1780  00018A                     	ds	1
  1781  00018B                     _start_from_byte_next:
  1782                           	opt stack 0
  1783  00018B                     	ds	1
  1784  00018C                     _last_error:
  1785                           	opt stack 0
  1786  00018C                     	ds	1
  1787  00018D                     _i2c_frequency:
  1788                           	opt stack 0
  1789  00018D                     	ds	1
  1790  00018E                     _MSDCBWValid:
  1791                           	opt stack 0
  1792  00018E                     	ds	1
  1793  00018F                     _gblCBWLength:
  1794                           	opt stack 0
  1795  00018F                     	ds	1
  1796  000190                     _USBTicksSinceSuspendEnd:
  1797                           	opt stack 0
  1798  000190                     	ds	1
  1799  000191                     _BothEP0OutUOWNsSet:
  1800                           	opt stack 0
  1801  000191                     	ds	1
  1802  000192                     _USBBusIsSuspended:
  1803                           	opt stack 0
  1804  000192                     	ds	1
  1805  000193                     _hex_file_entry:
  1806                           	opt stack 0
  1807  000193                     	ds	23
  1808  0001AA                     _mediaInformation:
  1809                           	opt stack 0
  1810  0001AA                     	ds	5
  1811  0001AF                     _USBAlternateInterface:
  1812                           	opt stack 0
  1813  0001AF                     	ds	2
  1814  0001B1                     _active_protocol:
  1815                           	opt stack 0
  1816  0001B1                     	ds	1
  1817  0001B2                     _idle_rate:
  1818                           	opt stack 0
  1819  0001B2                     	ds	1
  1820                           tblptru	equ	0xFF8
  1821                           tblptrh	equ	0xFF7
  1822                           tblptrl	equ	0xFF6
  1823                           tablat	equ	0xFF5
  1824                           postinc0	equ	0xFEE
  1825                           wreg	equ	0xFE8
  1826                           postdec1	equ	0xFE5
  1827                           fsr1h	equ	0xFE2
  1828                           fsr1l	equ	0xFE1
  1829                           
  1830                           	psect	dataBANK1
  1831  0001B3                     __pdataBANK1:
  1832                           	opt stack 0
  1833  0001B3                     _LUN:
  1834                           	opt stack 0
  1835  0001B3                     	ds	20
  1836  0001C7                     i2c_display_send_init_sequence@F6808:
  1837                           	opt stack 0
  1838  0001C7                     	ds	9
  1839  0001D0                     	ds	8
  1840                           tblptru	equ	0xFF8
  1841                           tblptrh	equ	0xFF7
  1842                           tblptrl	equ	0xFF6
  1843                           tablat	equ	0xFF5
  1844                           postinc0	equ	0xFEE
  1845                           wreg	equ	0xFE8
  1846                           postdec1	equ	0xFE5
  1847                           fsr1h	equ	0xFE2
  1848                           fsr1l	equ	0xFE1
  1849                           
  1850                           	psect	bssBANK2
  1851  000200                     __pbssBANK2:
  1852                           	opt stack 0
  1853  000200                     _display_content:
  1854                           	opt stack 0
  1855  000200                     	ds	80
  1856  000250                     _ReceivedDataBuffer:
  1857                           	opt stack 0
  1858  000250                     	ds	64
  1859  000290                     _file_buffer:
  1860                           	opt stack 0
  1861  000290                     	ds	50
  1862                           tblptru	equ	0xFF8
  1863                           tblptrh	equ	0xFF7
  1864                           tblptrl	equ	0xFF6
  1865                           tablat	equ	0xFF5
  1866                           postinc0	equ	0xFEE
  1867                           wreg	equ	0xFE8
  1868                           postdec1	equ	0xFE5
  1869                           fsr1h	equ	0xFE2
  1870                           fsr1l	equ	0xFE1
  1871                           
  1872                           	psect	bssBANK3
  1873  000300                     __pbssBANK3:
  1874                           	opt stack 0
  1875  000300                     __spi_external_rx_buffer:
  1876                           	opt stack 0
  1877  000300                     	ds	64
  1878  000340                     __spi_external_tx_buffer:
  1879                           	opt stack 0
  1880  000340                     	ds	64
  1881  000380                     _ToSendDataBuffer:
  1882                           	opt stack 0
  1883  000380                     	ds	64
  1884                           tblptru	equ	0xFF8
  1885                           tblptrh	equ	0xFF7
  1886                           tblptrl	equ	0xFF6
  1887                           tablat	equ	0xFF5
  1888                           postinc0	equ	0xFEE
  1889                           wreg	equ	0xFE8
  1890                           postdec1	equ	0xFE5
  1891                           fsr1h	equ	0xFE2
  1892                           fsr1l	equ	0xFE1
  1893                           
  1894                           	psect	bssBIGRAMlh
  1895  000800                     __pbssBIGRAMlh:
  1896                           	opt stack 0
  1897  000800                     _pageBuffer:
  1898                           	opt stack 0
  1899  000800                     	ds	1024
  1900                           tblptru	equ	0xFF8
  1901                           tblptrh	equ	0xFF7
  1902                           tblptrl	equ	0xFF6
  1903                           tablat	equ	0xFF5
  1904                           postinc0	equ	0xFEE
  1905                           wreg	equ	0xFE8
  1906                           postdec1	equ	0xFE5
  1907                           fsr1h	equ	0xFE2
  1908                           fsr1l	equ	0xFE1
  1909                           
  1910                           	psect	bssBIGRAMll
  1911  0003C0                     __pbssBIGRAMll:
  1912                           	opt stack 0
  1913  0003C0                     _buffer:
  1914                           	opt stack 0
  1915  0003C0                     	ds	512
  1916                           tblptru	equ	0xFF8
  1917                           tblptrh	equ	0xFF7
  1918                           tblptrl	equ	0xFF6
  1919                           tablat	equ	0xFF5
  1920                           postinc0	equ	0xFEE
  1921                           wreg	equ	0xFE8
  1922                           postdec1	equ	0xFE5
  1923                           fsr1h	equ	0xFE2
  1924                           fsr1l	equ	0xFE1
  1925                           
  1926                           	psect	cstackBANK0
  1927  000060                     __pcstackBANK0:
  1928                           	opt stack 0
  1929  000060                     fat_create_file@number_of_clusters:
  1930                           	opt stack 0
  1931  000060                     fat_read_from_file_fast@sector:
  1932                           	opt stack 0
  1933  000060                     fat_resize_file@old_number_of_clusters:
  1934                           	opt stack 0
  1935  000060                     fat_modify_file@sector:
  1936                           	opt stack 0
  1937  000060                     __parse_file_rename@data:
  1938                           	opt stack 0
  1939                           
  1940                           ; 2 bytes @ 0x0
  1941  000060                     	ds	2
  1942  000062                     fat_modify_file@file_number:
  1943                           	opt stack 0
  1944  000062                     fat_create_file@first_cluster:
  1945                           	opt stack 0
  1946  000062                     fat_read_from_file_fast@working_cluster:
  1947                           	opt stack 0
  1948  000062                     fat_resize_file@new_number_of_clusters:
  1949                           	opt stack 0
  1950                           
  1951                           ; 2 bytes @ 0x2
  1952  000062                     	ds	1
  1953  000063                     fat_modify_file@return_code:
  1954                           	opt stack 0
  1955                           
  1956                           ; 1 bytes @ 0x3
  1957  000063                     	ds	1
  1958  000064                     fat_create_file@file_number:
  1959                           	opt stack 0
  1960  000064                     fat_read_from_file_fast@offset:
  1961                           	opt stack 0
  1962  000064                     fat_resize_file@first_cluster:
  1963                           	opt stack 0
  1964  000064                     fat_modify_file@cluster:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x4
  1968  000064                     	ds	1
  1969  000065                     fat_create_file@root_entry:
  1970                           	opt stack 0
  1971                           
  1972                           ; 32 bytes @ 0x5
  1973  000065                     	ds	1
  1974  000066                     fat_resize_file@file_number:
  1975                           	opt stack 0
  1976  000066                     fat_read_from_file_fast@needed_cluster:
  1977                           	opt stack 0
  1978  000066                     fat_modify_file@offset:
  1979                           	opt stack 0
  1980                           
  1981                           ; 2 bytes @ 0x6
  1982  000066                     	ds	1
  1983  000067                     fat_resize_file@root:
  1984                           	opt stack 0
  1985                           
  1986                           ; 32 bytes @ 0x7
  1987  000067                     	ds	1
  1988  000068                     fat_read_from_file_fast@read_length:
  1989                           	opt stack 0
  1990  000068                     fat_modify_file@number_of_bytes:
  1991                           	opt stack 0
  1992                           
  1993                           ; 2 bytes @ 0x8
  1994  000068                     	ds	2
  1995  00006A                     fat_read_from_file_fast@position:
  1996                           	opt stack 0
  1997  00006A                     fat_modify_file@position:
  1998                           	opt stack 0
  1999                           
  2000                           ; 4 bytes @ 0xA
  2001  00006A                     	ds	4
  2002  00006E                     ??__bootloader_verify_file:
  2003  00006E                     ??__bootloader_program:
  2004  00006E                     fat_read_from_file@start_byte:
  2005                           	opt stack 0
  2006  00006E                     fat_modify_file@root:
  2007                           	opt stack 0
  2008                           
  2009                           ; 32 bytes @ 0xE
  2010  00006E                     	ds	4
  2011  000072                     fat_read_from_file@length:
  2012                           	opt stack 0
  2013                           
  2014                           ; 4 bytes @ 0x12
  2015  000072                     	ds	4
  2016  000076                     fat_read_from_file@data:
  2017                           	opt stack 0
  2018  000076                     __bootloader_program@buffer:
  2019                           	opt stack 0
  2020  000076                     __bootloader_verify_file@root:
  2021                           	opt stack 0
  2022                           
  2023                           ; 32 bytes @ 0x16
  2024  000076                     	ds	2
  2025  000078                     fat_read_from_file@file_number:
  2026                           	opt stack 0
  2027  000078                     __bootloader_program@entry_page:
  2028                           	opt stack 0
  2029                           
  2030                           ; 2 bytes @ 0x18
  2031  000078                     	ds	1
  2032  000079                     fat_read_from_file@cluster:
  2033                           	opt stack 0
  2034                           
  2035                           ; 2 bytes @ 0x19
  2036  000079                     	ds	1
  2037  00007A                     __bootloader_program@address_within_page:
  2038                           	opt stack 0
  2039                           
  2040                           ; 2 bytes @ 0x1A
  2041  00007A                     	ds	1
  2042  00007B                     fat_read_from_file@cluster_number:
  2043                           	opt stack 0
  2044                           
  2045                           ; 2 bytes @ 0x1B
  2046  00007B                     	ds	1
  2047  00007C                     __bootloader_program@root:
  2048                           	opt stack 0
  2049                           
  2050                           ; 32 bytes @ 0x1C
  2051  00007C                     	ds	1
  2052  00007D                     fat_read_from_file@return_code:
  2053                           	opt stack 0
  2054                           
  2055                           ; 1 bytes @ 0x1D
  2056  00007D                     	ds	1
  2057  00007E                     fat_read_from_file@root:
  2058                           	opt stack 0
  2059                           
  2060                           ; 32 bytes @ 0x1E
  2061  00007E                     	ds	16
  2062  00008E                     fat_append_to_file@new_file_size:
  2063                           	opt stack 0
  2064                           
  2065                           ; 4 bytes @ 0x2E
  2066  00008E                     	ds	4
  2067  000092                     fat_append_to_file@return_code:
  2068                           	opt stack 0
  2069                           
  2070                           ; 1 bytes @ 0x32
  2071  000092                     	ds	1
  2072  000093                     fat_append_to_file@old_file_size:
  2073                           	opt stack 0
  2074                           
  2075                           ; 4 bytes @ 0x33
  2076  000093                     	ds	3
  2077  000096                     __bootloader_verify_file@rec_counter:
  2078                           	opt stack 0
  2079                           
  2080                           ; 1 bytes @ 0x36
  2081  000096                     	ds	1
  2082  000097                     fat_append_to_file@file_number:
  2083                           	opt stack 0
  2084  000097                     __bootloader_verify_file@return_value:
  2085                           	opt stack 0
  2086                           
  2087                           ; 4 bytes @ 0x37
  2088  000097                     	ds	1
  2089  000098                     __parse_command_long@data:
  2090                           	opt stack 0
  2091                           
  2092                           ; 2 bytes @ 0x38
  2093  000098                     	ds	2
  2094  00009A                     __parse_command_long@length:
  2095                           	opt stack 0
  2096                           
  2097                           ; 1 bytes @ 0x3A
  2098  00009A                     	ds	1
  2099  00009B                     api_parse@inBuffer:
  2100                           	opt stack 0
  2101  00009B                     __bootloader_verify_file@address32:
  2102                           	opt stack 0
  2103                           
  2104                           ; 4 bytes @ 0x3B
  2105  00009B                     	ds	1
  2106  00009C                     __bootloader_program@return_value:
  2107                           	opt stack 0
  2108                           
  2109                           ; 4 bytes @ 0x3C
  2110  00009C                     	ds	1
  2111  00009D                     api_parse@receivedDataLength:
  2112                           	opt stack 0
  2113                           
  2114                           ; 1 bytes @ 0x3D
  2115  00009D                     	ds	1
  2116  00009E                     ??_api_parse:
  2117  00009E                     __fill_buffer_read_file@inBuffer:
  2118                           	opt stack 0
  2119                           
  2120                           ; 2 bytes @ 0x3E
  2121  00009E                     	ds	2
  2122  0000A0                     api_parse@idx:
  2123                           	opt stack 0
  2124  0000A0                     __fill_buffer_read_file@outBuffer:
  2125                           	opt stack 0
  2126  0000A0                     __bootloader_program@address32:
  2127                           	opt stack 0
  2128                           
  2129                           ; 4 bytes @ 0x40
  2130  0000A0                     	ds	2
  2131  0000A2                     ??__fill_buffer_read_file:
  2132                           
  2133                           ; 1 bytes @ 0x42
  2134  0000A2                     	ds	2
  2135  0000A4                     __bootloader_program@start_from_byte:
  2136                           	opt stack 0
  2137                           
  2138                           ; 1 bytes @ 0x44
  2139  0000A4                     	ds	1
  2140  0000A5                     __bootloader_program@cntr:
  2141                           	opt stack 0
  2142                           
  2143                           ; 2 bytes @ 0x45
  2144  0000A5                     	ds	1
  2145  0000A6                     __fill_buffer_read_file@file_size:
  2146                           	opt stack 0
  2147                           
  2148                           ; 4 bytes @ 0x46
  2149  0000A6                     	ds	1
  2150  0000A7                     __bootloader_program@page_to_write:
  2151                           	opt stack 0
  2152                           
  2153                           ; 2 bytes @ 0x47
  2154  0000A7                     	ds	3
  2155  0000AA                     __fill_buffer_read_file@data_length:
  2156                           	opt stack 0
  2157                           
  2158                           ; 4 bytes @ 0x4A
  2159  0000AA                     	ds	4
  2160  0000AE                     __fill_buffer_read_file@start:
  2161                           	opt stack 0
  2162                           
  2163                           ; 4 bytes @ 0x4E
  2164  0000AE                     	ds	4
  2165  0000B2                     api_prepare@inBuffer:
  2166                           	opt stack 0
  2167                           
  2168                           ; 2 bytes @ 0x52
  2169  0000B2                     	ds	2
  2170  0000B4                     api_prepare@outBuffer:
  2171                           	opt stack 0
  2172                           
  2173                           ; 2 bytes @ 0x54
  2174  0000B4                     	ds	2
  2175  0000B6                     api_prepare@command:
  2176                           	opt stack 0
  2177                           
  2178                           ; 1 bytes @ 0x56
  2179  0000B6                     	ds	1
  2180  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2181                           
  2182                           ; 1 bytes @ 0x57
  2183  0000B7                     	ds	4
  2184  0000BB                     ??_main:
  2185                           
  2186                           ; 1 bytes @ 0x5B
  2187  0000BB                     	ds	2
  2188  0000BD                     main@tx_start_addr:
  2189                           	opt stack 0
  2190                           
  2191                           ; 2 bytes @ 0x5D
  2192  0000BD                     	ds	2
  2193  0000BF                     main@bytes_transmitted:
  2194                           	opt stack 0
  2195                           
  2196                           ; 2 bytes @ 0x5F
  2197  0000BF                     	ds	2
  2198  0000C1                     main@rx_buffer:
  2199                           	opt stack 0
  2200                           
  2201                           ; 2 bytes @ 0x61
  2202  0000C1                     	ds	2
  2203  0000C3                     main@tx_buffer:
  2204                           	opt stack 0
  2205                           
  2206                           ; 2 bytes @ 0x63
  2207  0000C3                     	ds	2
  2208                           tblptru	equ	0xFF8
  2209                           tblptrh	equ	0xFF7
  2210                           tblptrl	equ	0xFF6
  2211                           tablat	equ	0xFF5
  2212                           postinc0	equ	0xFEE
  2213                           wreg	equ	0xFE8
  2214                           postdec1	equ	0xFE5
  2215                           fsr1h	equ	0xFE2
  2216                           fsr1l	equ	0xFE1
  2217                           
  2218                           	psect	cstackCOMRAM
  2219  000001                     __pcstackCOMRAM:
  2220                           	opt stack 0
  2221  000001                     ??_USBStdGetDscHandler:
  2222  000001                     ??_USBStdGetStatusHandler:
  2223  000001                     ??_system_delay_ms:
  2224  000001                     ??__i2c_wait_idle:
  2225  000001                     ??__display_clear:
  2226  000001                     ?_USBTransferOnePacket:
  2227                           	opt stack 0
  2228  000001                     ?_spi_get_external_rx_buffer:
  2229                           	opt stack 0
  2230  000001                     ?_spi_get_external_tx_buffer:
  2231                           	opt stack 0
  2232  000001                     ?_ExternalFlash_MediaInitialize:
  2233                           	opt stack 0
  2234  000001                     ?_ExternalFlash_SectorSizeRead:
  2235                           	opt stack 0
  2236  000001                     ?_bootloader_get_entries:
  2237                           	opt stack 0
  2238  000001                     ?_bootloader_get_total_entries:
  2239                           	opt stack 0
  2240  000001                     ?_bootloader_get_rec_address:
  2241                           	opt stack 0
  2242  000001                     ?_bootloader_get_flashPagesWritten:
  2243                           	opt stack 0
  2244  000001                     ?_strncmp:
  2245                           	opt stack 0
  2246  000001                     ?_internalFlash_pageFromAddress:
  2247                           	opt stack 0
  2248  000001                     ?_internalFlash_getBuffer:
  2249                           	opt stack 0
  2250  000001                     ?__sector_from_file_number:
  2251                           	opt stack 0
  2252  000001                     ?__offset_from_file_number:
  2253                           	opt stack 0
  2254  000001                     ?__data_sector_from_cluster:
  2255                           	opt stack 0
  2256  000001                     ?__fat_sector_from_cluster:
  2257                           	opt stack 0
  2258  000001                     ?__fat_offset_from_cluster:
  2259                           	opt stack 0
  2260  000001                     ?__cluster_from_sector_and_offset:
  2261                           	opt stack 0
  2262  000001                     ?__get_available_offset_from_buffer:
  2263                           	opt stack 0
  2264  000001                     ?__read_value_from_offset:
  2265                           	opt stack 0
  2266  000001                     ?__get_time:
  2267                           	opt stack 0
  2268  000001                     ?__get_date:
  2269                           	opt stack 0
  2270  000001                     ?_bootloader_get_rec_dataLength:
  2271                           	opt stack 0
  2272  000001                     ?___lwdiv:
  2273                           	opt stack 0
  2274  000001                     ?___lwmod:
  2275                           	opt stack 0
  2276  000001                     ?_ExternalFlash_CapacityRead:
  2277                           	opt stack 0
  2278  000001                     ?_bootloader_get_file_size:
  2279                           	opt stack 0
  2280  000001                     ?_internalFlash_addressFromPage:
  2281                           	opt stack 0
  2282  000001                     ?___lldiv:
  2283                           	opt stack 0
  2284  000001                     ?___llmod:
  2285                           	opt stack 0
  2286  000001                     USBTransferOnePacket@dir:
  2287                           	opt stack 0
  2288  000001                     USBStallEndpoint@dir:
  2289                           	opt stack 0
  2290  000001                     USBConfigureEndpoint@direction:
  2291                           	opt stack 0
  2292  000001                     USBCtrlTrfTxService@byteToSend:
  2293                           	opt stack 0
  2294  000001                     USBCtrlTrfRxService@i:
  2295                           	opt stack 0
  2296  000001                     __i2c_send@dat:
  2297                           	opt stack 0
  2298  000001                     i2c_set_frequency@frequency:
  2299                           	opt stack 0
  2300  000001                     display_get_character@position:
  2301                           	opt stack 0
  2302  000001                     __display_search@cntr:
  2303                           	opt stack 0
  2304  000001                     __display_rebooting@cntr:
  2305                           	opt stack 0
  2306  000001                     hexCharToUint8@c:
  2307                           	opt stack 0
  2308  000001                     bootloader_get_rec_data@index:
  2309                           	opt stack 0
  2310  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2311                           	opt stack 0
  2312  000001                     spi_set_configuration@configuration:
  2313                           	opt stack 0
  2314  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2315                           	opt stack 0
  2316  000001                     SYSTEM_Initialize@pll_startup_counter:
  2317                           	opt stack 0
  2318  000001                     flash_read_from_buffer@start:
  2319                           	opt stack 0
  2320  000001                     ExternalFlash_MediaInitialize@config:
  2321                           	opt stack 0
  2322  000001                     ExternalFlash_SectorSizeRead@config:
  2323                           	opt stack 0
  2324  000001                     ExternalFlash_CapacityRead@config:
  2325                           	opt stack 0
  2326  000001                     ExternalFlash_MediaDetect@config:
  2327                           	opt stack 0
  2328  000001                     ExternalFlash_WriteProtectStateGet@config:
  2329                           	opt stack 0
  2330  000001                     __data_sector_from_cluster@fat_cluster:
  2331                           	opt stack 0
  2332  000001                     __fat_sector_from_cluster@cluster:
  2333                           	opt stack 0
  2334  000001                     __fat_offset_from_cluster@cluster:
  2335                           	opt stack 0
  2336  000001                     __cluster_from_sector_and_offset@sector:
  2337                           	opt stack 0
  2338  000001                     __get_available_offset_from_buffer@minimum_offset:
  2339                           	opt stack 0
  2340  000001                     __read_value_from_offset@offset:
  2341                           	opt stack 0
  2342  000001                     __write_value_to_offset@offset:
  2343                           	opt stack 0
  2344  000001                     __get_mbr@idx:
  2345                           	opt stack 0
  2346  000001                     __get_fbr@idx:
  2347                           	opt stack 0
  2348  000001                     __get_fat@idx:
  2349                           	opt stack 0
  2350  000001                     __get_root@idx:
  2351                           	opt stack 0
  2352  000001                     __get_data@idx:
  2353                           	opt stack 0
  2354  000001                     internalFlash_addressFromPage@page:
  2355                           	opt stack 0
  2356  000001                     __fill_buffer_get_configuration@outBuffer:
  2357                           	opt stack 0
  2358  000001                     spi_tx@data:
  2359                           	opt stack 0
  2360  000001                     spi_tx_tx@command:
  2361                           	opt stack 0
  2362  000001                     spi_tx_rx@command:
  2363                           	opt stack 0
  2364  000001                     ___lwdiv@dividend:
  2365                           	opt stack 0
  2366  000001                     ___lwmod@dividend:
  2367                           	opt stack 0
  2368  000001                     memcpy@d1:
  2369                           	opt stack 0
  2370  000001                     memset@p1:
  2371                           	opt stack 0
  2372  000001                     strncmp@s1:
  2373                           	opt stack 0
  2374  000001                     __spi_init@details:
  2375                           	opt stack 0
  2376  000001                     __bootloader_check_address@address:
  2377                           	opt stack 0
  2378  000001                     internalFlash_pageFromAddress@address:
  2379                           	opt stack 0
  2380  000001                     ___lldiv@dividend:
  2381                           	opt stack 0
  2382  000001                     ___llmod@dividend:
  2383                           	opt stack 0
  2384                           
  2385                           ; 4 bytes @ 0x0
  2386  000001                     	ds	1
  2387  000002                     ??_USBConfigureEndpoint:
  2388  000002                     ??_USBStallEndpoint:
  2389  000002                     ??_display_get_character:
  2390  000002                     USBCtrlTrfRxService@byteToRead:
  2391                           	opt stack 0
  2392  000002                     USBCtrlTrfInHandler@lastDTS:
  2393                           	opt stack 0
  2394  000002                     system_delay_ms@ms:
  2395                           	opt stack 0
  2396  000002                     hexCharToUint8@ascii:
  2397                           	opt stack 0
  2398  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2399                           	opt stack 0
  2400  000002                     USBTransferOnePacket@data:
  2401                           	opt stack 0
  2402  000002                     USBStdGetStatusHandler@p:
  2403                           	opt stack 0
  2404                           
  2405                           ; 2 bytes @ 0x1
  2406  000002                     	ds	1
  2407  000003                     ??_MSDComputeDeviceInAndResidue:
  2408  000003                     ??__get_mbr:
  2409  000003                     ??__get_fbr:
  2410  000003                     ??__get_fat:
  2411  000003                     ??__get_root:
  2412  000003                     ?_hexCharsToUint16:
  2413                           	opt stack 0
  2414  000003                     system_delay_ms@cntr:
  2415                           	opt stack 0
  2416  000003                     __display_clear@row:
  2417                           	opt stack 0
  2418  000003                     __sector_from_file_number@file_number:
  2419                           	opt stack 0
  2420  000003                     __offset_from_file_number@file_number:
  2421                           	opt stack 0
  2422  000003                     hexCharsToUint8@c2:
  2423                           	opt stack 0
  2424  000003                     hexCharsToUint16@c2:
  2425                           	opt stack 0
  2426  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2427                           	opt stack 0
  2428  000003                     flash_read_from_buffer@length:
  2429                           	opt stack 0
  2430  000003                     __cluster_from_sector_and_offset@offset:
  2431                           	opt stack 0
  2432  000003                     __get_available_offset_from_buffer@buffer:
  2433                           	opt stack 0
  2434  000003                     __read_value_from_offset@buffer:
  2435                           	opt stack 0
  2436  000003                     __write_value_to_offset@buffer:
  2437                           	opt stack 0
  2438  000003                     internalFlash_erasePage@page:
  2439                           	opt stack 0
  2440  000003                     internalFlash_writePage@page:
  2441                           	opt stack 0
  2442  000003                     spi_tx@length:
  2443                           	opt stack 0
  2444  000003                     spi_tx_tx@command_length:
  2445                           	opt stack 0
  2446  000003                     spi_tx_rx@command_length:
  2447                           	opt stack 0
  2448  000003                     ___lwdiv@divisor:
  2449                           	opt stack 0
  2450  000003                     ___lwmod@divisor:
  2451                           	opt stack 0
  2452  000003                     memset@c:
  2453                           	opt stack 0
  2454  000003                     strncmp@s2:
  2455                           	opt stack 0
  2456  000003                     memcpy@s1:
  2457                           	opt stack 0
  2458                           
  2459                           ; 3 bytes @ 0x2
  2460  000003                     	ds	1
  2461  000004                     ??_hexCharsToUint8:
  2462  000004                     USBTransferOnePacket@len:
  2463                           	opt stack 0
  2464  000004                     display_get_character@line:
  2465                           	opt stack 0
  2466  000004                     __display_clear@col:
  2467                           	opt stack 0
  2468  000004                     hexCharsToUint16@c3:
  2469                           	opt stack 0
  2470  000004                     spi_init@configuration:
  2471                           	opt stack 0
  2472  000004                     __sector_from_file_number@sector:
  2473                           	opt stack 0
  2474  000004                     __offset_from_file_number@offset:
  2475                           	opt stack 0
  2476                           
  2477                           ; 2 bytes @ 0x3
  2478  000004                     	ds	1
  2479  000005                     ??_USBTransferOnePacket:
  2480  000005                     ??_spi_tx:
  2481  000005                     ??_internalFlash_pageFromAddress:
  2482  000005                     ??__get_available_offset_from_buffer:
  2483  000005                     ??__read_value_from_offset:
  2484  000005                     SYSTEM_Initialize@state:
  2485                           	opt stack 0
  2486  000005                     hexCharsToUint8@c1:
  2487                           	opt stack 0
  2488  000005                     hexCharsToUint16@c4:
  2489                           	opt stack 0
  2490  000005                     __bootloader_check_address@dataLength:
  2491                           	opt stack 0
  2492  000005                     ___lwmod@counter:
  2493                           	opt stack 0
  2494  000005                     flash_read_from_buffer@data:
  2495                           	opt stack 0
  2496  000005                     __write_value_to_offset@value:
  2497                           	opt stack 0
  2498  000005                     __fill_buffer_get_display@outBuffer:
  2499                           	opt stack 0
  2500  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2501                           	opt stack 0
  2502  000005                     spi_tx_tx@data:
  2503                           	opt stack 0
  2504  000005                     spi_tx_rx@data:
  2505                           	opt stack 0
  2506  000005                     ___lwdiv@quotient:
  2507                           	opt stack 0
  2508  000005                     memset@n:
  2509                           	opt stack 0
  2510  000005                     strncmp@len:
  2511                           	opt stack 0
  2512  000005                     internalFlash_erasePage@address:
  2513                           	opt stack 0
  2514  000005                     internalFlash_writePage@address:
  2515                           	opt stack 0
  2516  000005                     internalFlash_addressFromPage@address:
  2517                           	opt stack 0
  2518  000005                     ___lldiv@divisor:
  2519                           	opt stack 0
  2520  000005                     ___llmod@divisor:
  2521                           	opt stack 0
  2522                           
  2523                           ; 4 bytes @ 0x4
  2524  000005                     	ds	1
  2525  000006                     ??_hexCharsToUint16:
  2526  000006                     ??__bootloader_check_address:
  2527  000006                     USBStallEndpoint@ep:
  2528                           	opt stack 0
  2529  000006                     USBConfigureEndpoint@EPNum:
  2530                           	opt stack 0
  2531  000006                     hexCharsToUint8@retVal:
  2532                           	opt stack 0
  2533  000006                     __i2c_write@data:
  2534                           	opt stack 0
  2535  000006                     __i2c_read@data:
  2536                           	opt stack 0
  2537  000006                     i2c_display_write_fixed@data:
  2538                           	opt stack 0
  2539  000006                     memcpy@n:
  2540                           	opt stack 0
  2541                           
  2542                           ; 2 bytes @ 0x5
  2543  000006                     	ds	1
  2544  000007                     ??_strncmp:
  2545  000007                     ??__fill_buffer_get_bootloader_details:
  2546  000007                     ??__write_value_to_offset:
  2547  000007                     __fill_buffer_get_display@secondHalf:
  2548                           	opt stack 0
  2549  000007                     ___lwdiv@counter:
  2550                           	opt stack 0
  2551  000007                     USBStallEndpoint@p:
  2552                           	opt stack 0
  2553  000007                     USBConfigureEndpoint@handle:
  2554                           	opt stack 0
  2555  000007                     __get_available_offset_from_buffer@offset:
  2556                           	opt stack 0
  2557  000007                     fat_read_from_buffer@start:
  2558                           	opt stack 0
  2559  000007                     spi_tx_tx@data_length:
  2560                           	opt stack 0
  2561  000007                     spi_tx_rx@data_length:
  2562                           	opt stack 0
  2563  000007                     memset@p:
  2564                           	opt stack 0
  2565                           
  2566                           ; 2 bytes @ 0x6
  2567  000007                     	ds	1
  2568  000008                     ??__fill_buffer_get_display:
  2569  000008                     __i2c_write@length:
  2570                           	opt stack 0
  2571  000008                     __i2c_read@length:
  2572                           	opt stack 0
  2573  000008                     i2c_display_write_fixed@length:
  2574                           	opt stack 0
  2575  000008                     __read_value_from_offset@value:
  2576                           	opt stack 0
  2577  000008                     utoa@buf:
  2578                           	opt stack 0
  2579  000008                     memcpy@s:
  2580                           	opt stack 0
  2581                           
  2582                           ; 3 bytes @ 0x7
  2583  000008                     	ds	1
  2584  000009                     ??_spi_tx_rx:
  2585  000009                     ??_spi_tx_tx:
  2586  000009                     ??__i2c_read:
  2587  000009                     ?_internalFlash_addressWithinPage:
  2588                           	opt stack 0
  2589  000009                     USBDeviceInit@i:
  2590                           	opt stack 0
  2591  000009                     USBEnableEndpoint@options:
  2592                           	opt stack 0
  2593  000009                     USBTransferOnePacket@ep:
  2594                           	opt stack 0
  2595  000009                     MSDErrorHandler@ErrorCase:
  2596                           	opt stack 0
  2597  000009                     __i2c_write@slave_address:
  2598                           	opt stack 0
  2599  000009                     i2c_display_write_fixed@pos:
  2600                           	opt stack 0
  2601  000009                     __flash_wakeup@command:
  2602                           	opt stack 0
  2603  000009                     hexCharsToUint16@c1:
  2604                           	opt stack 0
  2605  000009                     ___llmod@counter:
  2606                           	opt stack 0
  2607  000009                     fat_read_from_buffer@length:
  2608                           	opt stack 0
  2609  000009                     internalFlash_writePage@cntr:
  2610                           	opt stack 0
  2611  000009                     internalFlash_addressWithinPage@address:
  2612                           	opt stack 0
  2613  000009                     ___lldiv@quotient:
  2614                           	opt stack 0
  2615                           
  2616                           ; 4 bytes @ 0x8
  2617  000009                     	ds	1
  2618  00000A                     MSDErrorHandler@OldMSD_State:
  2619                           	opt stack 0
  2620  00000A                     __i2c_write@cntr:
  2621                           	opt stack 0
  2622  00000A                     __bootloader_check_address@worst_case:
  2623                           	opt stack 0
  2624  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2625                           	opt stack 0
  2626  00000A                     USBEnableEndpoint@p:
  2627                           	opt stack 0
  2628  00000A                     USBTransferOnePacket@handle:
  2629                           	opt stack 0
  2630  00000A                     hexCharsToUint16@retVal:
  2631                           	opt stack 0
  2632  00000A                     utoa@val:
  2633                           	opt stack 0
  2634                           
  2635                           ; 2 bytes @ 0x9
  2636  00000A                     	ds	1
  2637  00000B                     __ic2_display_set_address@address:
  2638                           	opt stack 0
  2639  00000B                     i2c_digipot_backlight@level:
  2640                           	opt stack 0
  2641  00000B                     __bootloader_check_address@byte_status:
  2642                           	opt stack 0
  2643  00000B                     internalFlash_writePage@block_cntr:
  2644                           	opt stack 0
  2645  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2646                           	opt stack 0
  2647  00000B                     i2c_digipot_reset_on@data_array:
  2648                           	opt stack 0
  2649  00000B                     i2c_digipot_reset_off@data_array:
  2650                           	opt stack 0
  2651  00000B                     i2c_eeprom_writeByte@address:
  2652                           	opt stack 0
  2653  00000B                     fat_read_from_buffer@data:
  2654                           	opt stack 0
  2655  00000B                     memcpy@d:
  2656                           	opt stack 0
  2657  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2658                           	opt stack 0
  2659  00000B                     i2c_display_send_init_sequence@init_sequence:
  2660                           	opt stack 0
  2661                           
  2662                           ; 9 bytes @ 0xA
  2663  00000B                     	ds	1
  2664  00000C                     ??_USBMSDInit:
  2665  00000C                     ?_parseHexFileEntry:
  2666                           	opt stack 0
  2667  00000C                     USBEnableEndpoint@ep:
  2668                           	opt stack 0
  2669  00000C                     __bootloader_check_address@cntr:
  2670                           	opt stack 0
  2671  00000C                     internalFlash_writePage@byte_cntr:
  2672                           	opt stack 0
  2673  00000C                     _USBCheckMSDRequest$2319:
  2674                           	opt stack 0
  2675  00000C                     MSDTransferTerminated@handle:
  2676                           	opt stack 0
  2677  00000C                     __ic2_display_set_address@data_array:
  2678                           	opt stack 0
  2679  00000C                     i2c_digipot_backlight@data_array:
  2680                           	opt stack 0
  2681  00000C                     parseHexFileEntry@data:
  2682                           	opt stack 0
  2683  00000C                     utoa@base:
  2684                           	opt stack 0
  2685  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2686                           	opt stack 0
  2687                           
  2688                           ; 4 bytes @ 0xB
  2689  00000C                     	ds	1
  2690  00000D                     ?__flash_get_status:
  2691                           	opt stack 0
  2692  00000D                     i2c_eeprom_writeByte@data:
  2693                           	opt stack 0
  2694  00000D                     __fill_buffer_get_display@cntr:
  2695                           	opt stack 0
  2696  00000D                     ___lldiv@counter:
  2697                           	opt stack 0
  2698  00000D                     memcpy@tmp:
  2699                           	opt stack 0
  2700  00000D                     internalFlash_addressWithinPage@page:
  2701                           	opt stack 0
  2702  00000D                     __fill_buffer_read_buffer@inBuffer:
  2703                           	opt stack 0
  2704                           
  2705                           ; 2 bytes @ 0xC
  2706  00000D                     	ds	1
  2707  00000E                     ??_i2c_eeprom_writeByte:
  2708  00000E                     i2c_display_cursor@position:
  2709                           	opt stack 0
  2710  00000E                     __fill_buffer_get_display@line:
  2711                           	opt stack 0
  2712  00000E                     _USBCheckMSDRequest$2320:
  2713                           	opt stack 0
  2714  00000E                     _MSDTransferTerminated$2407:
  2715                           	opt stack 0
  2716  00000E                     utoa@v:
  2717                           	opt stack 0
  2718  00000E                     parseHexFileEntry@offset:
  2719                           	opt stack 0
  2720  00000E                     internalFlash_read@address:
  2721                           	opt stack 0
  2722                           
  2723                           ; 4 bytes @ 0xD
  2724  00000E                     	ds	1
  2725  00000F                     ??_internalFlash_addressWithinPage:
  2726  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2727                           	opt stack 0
  2728  00000F                     i2c_display_cursor@line:
  2729                           	opt stack 0
  2730  00000F                     __flash_get_status@command:
  2731                           	opt stack 0
  2732  00000F                     __fill_buffer_get_display@start_line:
  2733                           	opt stack 0
  2734  00000F                     __fill_buffer_read_buffer@outBuffer:
  2735                           	opt stack 0
  2736                           
  2737                           ; 2 bytes @ 0xE
  2738  00000F                     	ds	1
  2739  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2740                           	opt stack 0
  2741  000010                     __i2c_read@slave_address:
  2742                           	opt stack 0
  2743  000010                     i2c_display_cursor@address:
  2744                           	opt stack 0
  2745  000010                     __fill_buffer_get_display@position:
  2746                           	opt stack 0
  2747  000010                     utoa@c:
  2748                           	opt stack 0
  2749  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2750                           	opt stack 0
  2751  000010                     __flash_get_status@status:
  2752                           	opt stack 0
  2753  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2754                           	opt stack 0
  2755                           
  2756                           ; 2 bytes @ 0xF
  2757  000010                     	ds	1
  2758  000011                     ??__fill_buffer_read_buffer:
  2759  000011                     MSDCheckForErrorCases@DeviceNoData:
  2760                           	opt stack 0
  2761  000011                     __i2c_read@cntr:
  2762                           	opt stack 0
  2763  000011                     i2c_eeprom_writeByte@dat:
  2764                           	opt stack 0
  2765  000011                     itoa@buf:
  2766                           	opt stack 0
  2767                           
  2768                           ; 2 bytes @ 0x10
  2769  000011                     	ds	1
  2770  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2771                           	opt stack 0
  2772  000012                     i2c_eeprom_readByte@address:
  2773                           	opt stack 0
  2774  000012                     __flash_is_busy@status:
  2775                           	opt stack 0
  2776  000012                     parseHexFileEntry@hexEntry:
  2777                           	opt stack 0
  2778  000012                     internalFlash_read@data_length:
  2779                           	opt stack 0
  2780                           
  2781                           ; 2 bytes @ 0x11
  2782  000012                     	ds	1
  2783  000013                     i2c_eeprom_writeByte@slave_address:
  2784                           	opt stack 0
  2785  000013                     __fill_buffer_read_buffer@start:
  2786                           	opt stack 0
  2787  000013                     itoa@val:
  2788                           	opt stack 0
  2789  000013                     internalFlash_addressWithinPage@page_start_address:
  2790                           	opt stack 0
  2791                           
  2792                           ; 4 bytes @ 0x12
  2793  000013                     	ds	1
  2794  000014                     ??_i2c_eeprom_readByte:
  2795  000014                     ??_parseHexFileEntry:
  2796  000014                     flash_is_busy@result:
  2797                           	opt stack 0
  2798  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2799                           	opt stack 0
  2800  000014                     __flash_copy_page_to_buffer@page:
  2801                           	opt stack 0
  2802  000014                     __flash_compare_page_to_buffer@page:
  2803                           	opt stack 0
  2804  000014                     __flash_write_to_buffer@start:
  2805                           	opt stack 0
  2806  000014                     __flash_write_page_from_buffer@page:
  2807                           	opt stack 0
  2808  000014                     __flash_partial_read@page:
  2809                           	opt stack 0
  2810  000014                     internalFlash_read@buffer:
  2811                           	opt stack 0
  2812  000014                     __flash_set_page_size@command:
  2813                           	opt stack 0
  2814                           
  2815                           ; 4 bytes @ 0x13
  2816  000014                     	ds	1
  2817  000015                     __fill_buffer_get_status@outBuffer:
  2818                           	opt stack 0
  2819  000015                     __fill_buffer_read_buffer@data_length:
  2820                           	opt stack 0
  2821  000015                     itoa@base:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x14
  2825  000015                     	ds	1
  2826  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2827  000016                     __flash_copy_page_to_buffer@buffer:
  2828                           	opt stack 0
  2829  000016                     __flash_compare_page_to_buffer@buffer:
  2830                           	opt stack 0
  2831  000016                     __flash_write_page_from_buffer@buffer:
  2832                           	opt stack 0
  2833  000016                     __flash_write_to_buffer@data:
  2834                           	opt stack 0
  2835  000016                     __flash_partial_read@start:
  2836                           	opt stack 0
  2837  000016                     internalFlash_readPage@page:
  2838                           	opt stack 0
  2839                           
  2840                           ; 2 bytes @ 0x15
  2841  000016                     	ds	1
  2842  000017                     ??__flash_copy_page_to_buffer:
  2843  000017                     ??__flash_compare_page_to_buffer:
  2844  000017                     ??__flash_write_page_from_buffer:
  2845  000017                     i2c_eeprom_readByte@slave_address:
  2846                           	opt stack 0
  2847  000017                     itoa@cp:
  2848                           	opt stack 0
  2849                           
  2850                           ; 2 bytes @ 0x16
  2851  000017                     	ds	1
  2852  000018                     ??_USBStdFeatureReqHandler:
  2853  000018                     USBStdSetCfgHandler@i:
  2854                           	opt stack 0
  2855  000018                     i2c_eeprom_readByte@addr:
  2856                           	opt stack 0
  2857  000018                     __flash_set_page_size@size:
  2858                           	opt stack 0
  2859  000018                     __flash_write_to_buffer@data_length:
  2860                           	opt stack 0
  2861  000018                     __flash_partial_read@length:
  2862                           	opt stack 0
  2863  000018                     internalFlash_readPage@address:
  2864                           	opt stack 0
  2865                           
  2866                           ; 4 bytes @ 0x17
  2867  000018                     	ds	1
  2868  000019                     USBStdFeatureReqHandler@pUEP:
  2869                           	opt stack 0
  2870  000019                     __display_itoa_u16@value:
  2871                           	opt stack 0
  2872                           
  2873                           ; 4 bytes @ 0x18
  2874  000019                     	ds	1
  2875  00001A                     __flash_write_to_buffer@buffer:
  2876                           	opt stack 0
  2877  00001A                     __flash_compare_page_to_buffer@status:
  2878                           	opt stack 0
  2879  00001A                     __flash_partial_read@data:
  2880                           	opt stack 0
  2881  00001A                     __flash_copy_page_to_buffer@command:
  2882                           	opt stack 0
  2883  00001A                     __flash_write_page_from_buffer@command:
  2884                           	opt stack 0
  2885                           
  2886                           ; 4 bytes @ 0x19
  2887  00001A                     	ds	1
  2888  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2889                           	opt stack 0
  2890  00001B                     __flash_write_to_buffer@command:
  2891                           	opt stack 0
  2892                           
  2893                           ; 4 bytes @ 0x1A
  2894  00001B                     	ds	1
  2895  00001C                     ??__flash_partial_read:
  2896  00001C                     parseHexFileEntry@i:
  2897                           	opt stack 0
  2898  00001C                     USBStdFeatureReqHandler@p:
  2899                           	opt stack 0
  2900  00001C                     __flash_compare_page_to_buffer@command:
  2901                           	opt stack 0
  2902                           
  2903                           ; 4 bytes @ 0x1B
  2904  00001C                     	ds	1
  2905  00001D                     __display_itoa_u16@text:
  2906                           	opt stack 0
  2907                           
  2908                           ; 2 bytes @ 0x1C
  2909  00001D                     	ds	1
  2910  00001E                     ??_USBCtrlEPService:
  2911  00001E                     flash_copy_page_to_buffer@page:
  2912                           	opt stack 0
  2913  00001E                     flash_write_page_from_buffer@page:
  2914                           	opt stack 0
  2915                           
  2916                           ; 2 bytes @ 0x1D
  2917  00001E                     	ds	1
  2918  00001F                     ??__display_verify:
  2919  00001F                     ??__display_checked:
  2920  00001F                     __display_programming@cntr:
  2921                           	opt stack 0
  2922  00001F                     __display_done@cntr:
  2923                           	opt stack 0
  2924  00001F                     flash_write_to_buffer@start:
  2925                           	opt stack 0
  2926  00001F                     __display_itoa_u32@value:
  2927                           	opt stack 0
  2928                           
  2929                           ; 4 bytes @ 0x1E
  2930  00001F                     	ds	1
  2931  000020                     USBDeviceTasks@i:
  2932                           	opt stack 0
  2933  000020                     flash_sector_write@page:
  2934                           	opt stack 0
  2935  000020                     flash_partial_write@page:
  2936                           	opt stack 0
  2937  000020                     __flash_partial_read@command:
  2938                           	opt stack 0
  2939                           
  2940                           ; 4 bytes @ 0x1F
  2941  000020                     	ds	1
  2942  000021                     __display_verify@cntr:
  2943                           	opt stack 0
  2944  000021                     __display_checked@start:
  2945                           	opt stack 0
  2946  000021                     flash_write_to_buffer@length:
  2947                           	opt stack 0
  2948                           
  2949                           ; 2 bytes @ 0x20
  2950  000021                     	ds	1
  2951  000022                     __display_checked@cntr:
  2952                           	opt stack 0
  2953  000022                     flash_sector_write@data:
  2954                           	opt stack 0
  2955  000022                     flash_partial_write@start:
  2956                           	opt stack 0
  2957                           
  2958                           ; 2 bytes @ 0x21
  2959  000022                     	ds	1
  2960  000023                     __display_itoa_u32@text:
  2961                           	opt stack 0
  2962  000023                     flash_write_to_buffer@data:
  2963                           	opt stack 0
  2964                           
  2965                           ; 2 bytes @ 0x22
  2966  000023                     	ds	1
  2967  000024                     flash_sector_write@match:
  2968                           	opt stack 0
  2969  000024                     flash_partial_write@length:
  2970                           	opt stack 0
  2971  000024                     __flash_partial_read@address:
  2972                           	opt stack 0
  2973                           
  2974                           ; 4 bytes @ 0x23
  2975  000024                     	ds	1
  2976  000025                     ??__display_found:
  2977  000025                     __display_start@cntr:
  2978                           	opt stack 0
  2979  000025                     __display_failed@cntr:
  2980                           	opt stack 0
  2981  000025                     ExternalFlash_SectorWrite@config:
  2982                           	opt stack 0
  2983  000025                     fat_format@cntr:
  2984                           	opt stack 0
  2985  000025                     fat_write_to_buffer@start:
  2986                           	opt stack 0
  2987                           
  2988                           ; 2 bytes @ 0x24
  2989  000025                     	ds	1
  2990  000026                     flash_partial_write@data:
  2991                           	opt stack 0
  2992                           
  2993                           ; 2 bytes @ 0x25
  2994  000026                     	ds	1
  2995  000027                     __display_found@start:
  2996                           	opt stack 0
  2997  000027                     fat_write_to_buffer@length:
  2998                           	opt stack 0
  2999  000027                     __parse_format_drive@data:
  3000                           	opt stack 0
  3001  000027                     ExternalFlash_SectorWrite@sector_addr:
  3002                           	opt stack 0
  3003                           
  3004                           ; 4 bytes @ 0x26
  3005  000027                     	ds	1
  3006  000028                     __display_found@cntr:
  3007                           	opt stack 0
  3008  000028                     flash_partial_write@match:
  3009                           	opt stack 0
  3010  000028                     flash_sector_read@page:
  3011                           	opt stack 0
  3012  000028                     flash_partial_read@page:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x27
  3016  000028                     	ds	1
  3017  000029                     ??_display_prepare:
  3018  000029                     __write_root@data:
  3019                           	opt stack 0
  3020  000029                     __delete_root@sector:
  3021                           	opt stack 0
  3022  000029                     fat_write_to_buffer@data:
  3023                           	opt stack 0
  3024                           
  3025                           ; 2 bytes @ 0x28
  3026  000029                     	ds	1
  3027  00002A                     flash_sector_read@data:
  3028                           	opt stack 0
  3029  00002A                     flash_partial_read@start:
  3030                           	opt stack 0
  3031                           
  3032                           ; 2 bytes @ 0x29
  3033  00002A                     	ds	1
  3034  00002B                     display_prepare@mode:
  3035                           	opt stack 0
  3036  00002B                     ExternalFlash_SectorWrite@buffer:
  3037                           	opt stack 0
  3038  00002B                     __write_root@sector:
  3039                           	opt stack 0
  3040  00002B                     __delete_root@offset:
  3041                           	opt stack 0
  3042  00002B                     __parse_write_buffer@data:
  3043                           	opt stack 0
  3044                           
  3045                           ; 2 bytes @ 0x2A
  3046  00002B                     	ds	1
  3047  00002C                     ??_fat_get_format_status:
  3048  00002C                     ?__get_available_cluster:
  3049                           	opt stack 0
  3050  00002C                     __parse_command_short@cmd:
  3051                           	opt stack 0
  3052  00002C                     flash_partial_read@length:
  3053                           	opt stack 0
  3054  00002C                     ExternalFlash_SectorRead@config:
  3055                           	opt stack 0
  3056  00002C                     __get_available_cluster@first_sector:
  3057                           	opt stack 0
  3058  00002C                     fat_find_file@name:
  3059                           	opt stack 0
  3060                           
  3061                           ; 2 bytes @ 0x2B
  3062  00002C                     	ds	1
  3063  00002D                     ??__parse_write_buffer:
  3064  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3065                           	opt stack 0
  3066  00002D                     __delete_root@deleted_value:
  3067                           	opt stack 0
  3068  00002D                     __write_root@offset:
  3069                           	opt stack 0
  3070                           
  3071                           ; 2 bytes @ 0x2C
  3072  00002D                     	ds	1
  3073  00002E                     __delete_root@file_number:
  3074                           	opt stack 0
  3075  00002E                     flash_partial_read@data:
  3076                           	opt stack 0
  3077  00002E                     ExternalFlash_SectorWrite@page:
  3078                           	opt stack 0
  3079  00002E                     __get_available_cluster@skip_sector:
  3080                           	opt stack 0
  3081  00002E                     fat_find_file@extension:
  3082                           	opt stack 0
  3083  00002E                     fat_get_format_status@cntr:
  3084                           	opt stack 0
  3085  00002E                     __parse_write_buffer@start_byte:
  3086                           	opt stack 0
  3087  00002E                     ExternalFlash_SectorRead@sector_addr:
  3088                           	opt stack 0
  3089                           
  3090                           ; 4 bytes @ 0x2D
  3091  00002E                     	ds	1
  3092  00002F                     __write_root@file_number:
  3093                           	opt stack 0
  3094                           
  3095                           ; 1 bytes @ 0x2E
  3096  00002F                     	ds	1
  3097  000030                     ??_MSDWriteHandler:
  3098  000030                     ??_fat_find_file:
  3099  000030                     ?__read_fat:
  3100                           	opt stack 0
  3101  000030                     ?__get_first_cluster:
  3102                           	opt stack 0
  3103  000030                     __get_available_cluster@cluster:
  3104                           	opt stack 0
  3105  000030                     __root_is_available@root_sector:
  3106                           	opt stack 0
  3107  000030                     __read_fat@cluster:
  3108                           	opt stack 0
  3109  000030                     fat_get_file_information@data:
  3110                           	opt stack 0
  3111  000030                     __parse_write_buffer@number_of_bytes:
  3112                           	opt stack 0
  3113                           
  3114                           ; 2 bytes @ 0x2F
  3115  000030                     	ds	2
  3116  000032                     fat_find_file@file_number:
  3117                           	opt stack 0
  3118  000032                     ExternalFlash_SectorRead@buffer:
  3119                           	opt stack 0
  3120  000032                     __get_available_cluster@offset:
  3121                           	opt stack 0
  3122  000032                     __root_is_available@offset:
  3123                           	opt stack 0
  3124  000032                     __read_fat@sector:
  3125                           	opt stack 0
  3126  000032                     __get_first_cluster@sector:
  3127                           	opt stack 0
  3128                           
  3129                           ; 2 bytes @ 0x31
  3130  000032                     	ds	1
  3131  000033                     fat_find_file@sector:
  3132                           	opt stack 0
  3133  000033                     fat_get_file_information@root_sector:
  3134                           	opt stack 0
  3135                           
  3136                           ; 2 bytes @ 0x32
  3137  000033                     	ds	1
  3138  000034                     __root_is_available@file_number:
  3139                           	opt stack 0
  3140  000034                     ExternalFlash_SectorRead@page:
  3141                           	opt stack 0
  3142  000034                     __get_available_cluster@sector:
  3143                           	opt stack 0
  3144  000034                     __read_fat@offset:
  3145                           	opt stack 0
  3146  000034                     __get_first_cluster@offset:
  3147                           	opt stack 0
  3148                           
  3149                           ; 2 bytes @ 0x33
  3150  000034                     	ds	1
  3151  000035                     __root_is_available@first_byte:
  3152                           	opt stack 0
  3153  000035                     fat_find_file@offset:
  3154                           	opt stack 0
  3155  000035                     fat_get_file_information@offset:
  3156                           	opt stack 0
  3157                           
  3158                           ; 2 bytes @ 0x34
  3159  000035                     	ds	1
  3160  000036                     ??_MSDReadHandler:
  3161  000036                     ?__make_cluster_chain:
  3162                           	opt stack 0
  3163  000036                     ?_fat_get_file_size:
  3164                           	opt stack 0
  3165  000036                     __get_available_root_entry@file_number:
  3166                           	opt stack 0
  3167  000036                     __make_cluster_chain@first_cluster:
  3168                           	opt stack 0
  3169  000036                     __read_fat@value:
  3170                           	opt stack 0
  3171  000036                     __get_first_cluster@first_cluster:
  3172                           	opt stack 0
  3173                           
  3174                           ; 2 bytes @ 0x35
  3175  000036                     	ds	1
  3176  000037                     fat_get_file_information@file_number:
  3177                           	opt stack 0
  3178  000037                     __fill_buffer_find_file@inBuffer:
  3179                           	opt stack 0
  3180                           
  3181                           ; 2 bytes @ 0x36
  3182  000037                     	ds	1
  3183  000038                     ?__find_nth_cluster:
  3184                           	opt stack 0
  3185  000038                     __get_first_cluster@file_number:
  3186                           	opt stack 0
  3187  000038                     __find_nth_cluster@cluster:
  3188                           	opt stack 0
  3189  000038                     __make_cluster_chain@number_of_clusters:
  3190                           	opt stack 0
  3191  000038                     fat_rename_file@name:
  3192                           	opt stack 0
  3193  000038                     __fill_buffer_get_file_details@inBuffer:
  3194                           	opt stack 0
  3195                           
  3196                           ; 2 bytes @ 0x37
  3197  000038                     	ds	1
  3198  000039                     __fill_buffer_find_file@outBuffer:
  3199                           	opt stack 0
  3200                           
  3201                           ; 2 bytes @ 0x38
  3202  000039                     	ds	1
  3203  00003A                     ??_MSDProcessCommandMediaPresent:
  3204  00003A                     ??__make_cluster_chain:
  3205  00003A                     __find_nth_cluster@n:
  3206                           	opt stack 0
  3207  00003A                     fat_get_file_size@sector:
  3208                           	opt stack 0
  3209  00003A                     fat_rename_file@extension:
  3210                           	opt stack 0
  3211  00003A                     __fill_buffer_get_file_details@outBuffer:
  3212                           	opt stack 0
  3213                           
  3214                           ; 2 bytes @ 0x39
  3215  00003A                     	ds	1
  3216  00003B                     ??__fill_buffer_find_file:
  3217                           
  3218                           ; 1 bytes @ 0x3A
  3219  00003B                     	ds	1
  3220  00003C                     ??__fill_buffer_get_file_details:
  3221  00003C                     fat_rename_file@return_code:
  3222                           	opt stack 0
  3223  00003C                     _MSDProcessCommandMediaPresent$2390:
  3224                           	opt stack 0
  3225  00003C                     __find_nth_cluster@offset:
  3226                           	opt stack 0
  3227  00003C                     __make_cluster_chain@next_offset:
  3228                           	opt stack 0
  3229  00003C                     fat_get_file_size@offset:
  3230                           	opt stack 0
  3231                           
  3232                           ; 2 bytes @ 0x3B
  3233  00003C                     	ds	1
  3234  00003D                     fat_rename_file@file_number:
  3235                           	opt stack 0
  3236  00003D                     __fill_buffer_get_file_details@file_number:
  3237                           	opt stack 0
  3238                           
  3239                           ; 1 bytes @ 0x3C
  3240  00003D                     	ds	1
  3241  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3242                           	opt stack 0
  3243  00003E                     __find_nth_cluster@sector_in_buffer:
  3244                           	opt stack 0
  3245  00003E                     __make_cluster_chain@minimum_sector:
  3246                           	opt stack 0
  3247  00003E                     fat_get_file_size@file_size:
  3248                           	opt stack 0
  3249  00003E                     fat_rename_file@root:
  3250                           	opt stack 0
  3251                           
  3252                           ; 32 bytes @ 0x3D
  3253  00003E                     	ds	1
  3254  00003F                     __fill_buffer_find_file@cntr:
  3255                           	opt stack 0
  3256  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3257                           	opt stack 0
  3258                           
  3259                           ; 4 bytes @ 0x3E
  3260  00003F                     	ds	1
  3261  000040                     __find_nth_cluster@sector:
  3262                           	opt stack 0
  3263  000040                     __make_cluster_chain@different_sector_cluster:
  3264                           	opt stack 0
  3265                           
  3266                           ; 2 bytes @ 0x3F
  3267  000040                     	ds	2
  3268  000042                     __make_cluster_chain@data_changed:
  3269                           	opt stack 0
  3270  000042                     fat_get_file_size@file_number:
  3271                           	opt stack 0
  3272  000042                     fat_read_from_file_fast@start_byte:
  3273                           	opt stack 0
  3274  000042                     fat_modify_file@start_byte:
  3275                           	opt stack 0
  3276                           
  3277                           ; 4 bytes @ 0x41
  3278  000042                     	ds	1
  3279  000043                     __make_cluster_chain@remaining_clusters:
  3280                           	opt stack 0
  3281  000043                     fat_copy_sector_to_buffer@sector:
  3282                           	opt stack 0
  3283  000043                     fat_write_sector_from_buffer@sector:
  3284                           	opt stack 0
  3285  000043                     MSDProcessCommandMediaPresent@capacity:
  3286                           	opt stack 0
  3287                           
  3288                           ; 4 bytes @ 0x42
  3289  000043                     	ds	2
  3290  000045                     ??_fat_copy_sector_to_buffer:
  3291  000045                     ??_fat_write_sector_from_buffer:
  3292  000045                     __make_cluster_chain@sector:
  3293                           	opt stack 0
  3294                           
  3295                           ; 2 bytes @ 0x44
  3296  000045                     	ds	1
  3297  000046                     fat_modify_file@length:
  3298                           	opt stack 0
  3299  000046                     fat_read_from_file_fast@length:
  3300                           	opt stack 0
  3301                           
  3302                           ; 4 bytes @ 0x45
  3303  000046                     	ds	1
  3304  000047                     MSDProcessCommandMediaPresent@i:
  3305                           	opt stack 0
  3306  000047                     __make_cluster_chain@sector_in_buffer:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x46
  3310  000047                     	ds	1
  3311  000048                     ??_MSDProcessCommand:
  3312  000048                     fat_modify_file@data:
  3313                           	opt stack 0
  3314                           
  3315                           ; 2 bytes @ 0x47
  3316  000048                     	ds	1
  3317  000049                     __make_cluster_chain@offset:
  3318                           	opt stack 0
  3319  000049                     fat_copy_sector_to_buffer@file_size:
  3320                           	opt stack 0
  3321  000049                     fat_write_sector_from_buffer@file_size:
  3322                           	opt stack 0
  3323                           
  3324                           ; 4 bytes @ 0x48
  3325  000049                     	ds	1
  3326  00004A                     ??_fat_modify_file:
  3327  00004A                     fat_read_from_file_fast@data:
  3328                           	opt stack 0
  3329                           
  3330                           ; 2 bytes @ 0x49
  3331  00004A                     	ds	1
  3332  00004B                     __make_cluster_chain@next_cluster:
  3333                           	opt stack 0
  3334                           
  3335                           ; 2 bytes @ 0x4A
  3336  00004B                     	ds	1
  3337  00004C                     fat_read_from_file_fast@cluster:
  3338                           	opt stack 0
  3339                           
  3340                           ; 2 bytes @ 0x4B
  3341  00004C                     	ds	1
  3342  00004D                     ??_MSDTasks:
  3343  00004D                     fat_create_file@name:
  3344                           	opt stack 0
  3345  00004D                     fat_delete_file@first_cluster:
  3346                           	opt stack 0
  3347  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3348                           	opt stack 0
  3349  00004D                     fat_write_sector_from_buffer@number_of_clusters:
  3350                           	opt stack 0
  3351  00004D                     fat_resize_file@new_file_size:
  3352                           	opt stack 0
  3353                           
  3354                           ; 4 bytes @ 0x4C
  3355  00004D                     	ds	1
  3356  00004E                     _MSDTasks$2372:
  3357                           	opt stack 0
  3358  00004E                     fat_read_from_file_fast@cluster_number:
  3359                           	opt stack 0
  3360                           
  3361                           ; 2 bytes @ 0x4D
  3362  00004E                     	ds	1
  3363  00004F                     fat_delete_file@file_number:
  3364                           	opt stack 0
  3365  00004F                     fat_copy_sector_to_buffer@file_number:
  3366                           	opt stack 0
  3367  00004F                     fat_write_sector_from_buffer@file_number:
  3368                           	opt stack 0
  3369  00004F                     fat_create_file@extension:
  3370                           	opt stack 0
  3371                           
  3372                           ; 2 bytes @ 0x4E
  3373  00004F                     	ds	1
  3374  000050                     ??_fat_read_from_file_fast:
  3375  000050                     _MSDTasks$2373:
  3376                           	opt stack 0
  3377  000050                     fat_copy_sector_to_buffer@cluster:
  3378                           	opt stack 0
  3379  000050                     fat_write_sector_from_buffer@cluster:
  3380                           	opt stack 0
  3381  000050                     __parse_file_delete@data:
  3382                           	opt stack 0
  3383                           
  3384                           ; 2 bytes @ 0x4F
  3385  000050                     	ds	1
  3386  000051                     ??_fat_resize_file:
  3387  000051                     fat_create_file@size:
  3388                           	opt stack 0
  3389                           
  3390                           ; 4 bytes @ 0x50
  3391  000051                     	ds	1
  3392  000052                     MSDTasks@i:
  3393                           	opt stack 0
  3394  000052                     __parse_sector_to_buffer@data:
  3395                           	opt stack 0
  3396  000052                     __parse_buffer_to_sector@data:
  3397                           	opt stack 0
  3398                           
  3399                           ; 2 bytes @ 0x51
  3400  000052                     	ds	1
  3401  000053                     
  3402                           ; 1 bytes @ 0x52
  3403  000053                     	ds	1
  3404  000054                     ??__parse_sector_to_buffer:
  3405  000054                     ??__parse_buffer_to_sector:
  3406                           
  3407                           ; 1 bytes @ 0x53
  3408  000054                     	ds	1
  3409  000055                     ??_fat_create_file:
  3410  000055                     __parse_file_resize@data:
  3411                           	opt stack 0
  3412  000055                     __parse_sector_to_buffer@sector:
  3413                           	opt stack 0
  3414  000055                     __parse_buffer_to_sector@sector:
  3415                           	opt stack 0
  3416                           
  3417                           ; 2 bytes @ 0x54
  3418  000055                     	ds	1
  3419  000056                     fat_append_to_file@number_of_bytes:
  3420                           	opt stack 0
  3421  000056                     __parse_file_modify@data:
  3422                           	opt stack 0
  3423                           
  3424                           ; 2 bytes @ 0x55
  3425  000056                     	ds	1
  3426  000057                     ??__parse_file_resize:
  3427                           
  3428                           ; 1 bytes @ 0x56
  3429  000057                     	ds	1
  3430  000058                     ??__parse_file_modify:
  3431  000058                     fat_append_to_file@data:
  3432                           	opt stack 0
  3433  000058                     __parse_file_resize@file_size:
  3434                           	opt stack 0
  3435                           
  3436                           ; 4 bytes @ 0x57
  3437  000058                     	ds	1
  3438  000059                     __parse_file_create@data:
  3439                           	opt stack 0
  3440  000059                     __parse_file_modify@number_of_bytes:
  3441                           	opt stack 0
  3442                           
  3443                           ; 2 bytes @ 0x58
  3444  000059                     	ds	1
  3445  00005A                     __parse_file_append@data:
  3446                           	opt stack 0
  3447                           
  3448                           ; 2 bytes @ 0x59
  3449  00005A                     	ds	1
  3450  00005B                     ??__parse_file_create:
  3451  00005B                     __parse_file_modify@start_byte:
  3452                           	opt stack 0
  3453                           
  3454                           ; 4 bytes @ 0x5A
  3455  00005B                     	ds	1
  3456  00005C                     ??__parse_file_append:
  3457  00005C                     ??_fat_read_from_file:
  3458  00005C                     bootloader_run@timeslot:
  3459                           	opt stack 0
  3460  00005C                     __parse_file_create@file_size:
  3461                           	opt stack 0
  3462                           
  3463                           ; 4 bytes @ 0x5B
  3464  00005C                     	ds	2
  3465  00005E                     fat_rename_file@cntr:
  3466                           	opt stack 0
  3467                           
  3468                           ; 1 bytes @ 0x5D
  3469  00005E                     	ds	1
  3470  00005F                     
  3471                           ; 1 bytes @ 0x5E
  3472  00005F                     	ds	1
  3473  000060                     tblptru	equ	0xFF8
  3474                           tblptrh	equ	0xFF7
  3475                           tblptrl	equ	0xFF6
  3476                           tablat	equ	0xFF5
  3477                           postinc0	equ	0xFEE
  3478                           wreg	equ	0xFE8
  3479                           postdec1	equ	0xFE5
  3480                           fsr1h	equ	0xFE2
  3481                           fsr1l	equ	0xFE1
  3482                           
  3483                           ; 1 bytes @ 0x5F
  3484 ;;
  3485 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3486 ;;
  3487 ;; *************** function _main *****************
  3488 ;; Defined at:
  3489 ;;		line 54 in file "main.c"
  3490 ;; Parameters:    Size  Location     Type
  3491 ;;		None
  3492 ;; Auto vars:     Size  Location     Type
  3493 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3494 ;;		 -> _spi_external_tx_buffer(64), 
  3495 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3496 ;;		 -> _spi_external_rx_buffer(64), 
  3497 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3498 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3499 ;; Return value:  Size  Location     Type
  3500 ;;                  1    wreg      void 
  3501 ;; Registers used:
  3502 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3503 ;; Tracked objects:
  3504 ;;		On entry : 0/0
  3505 ;;		On exit  : 0/0
  3506 ;;		Unchanged: 0/0
  3507 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3508 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3509 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3510 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3511 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3512 ;;Total ram usage:       10 bytes
  3513 ;; Hardware stack levels required when called:   13
  3514 ;; This function calls:
  3515 ;;		_APP_DeviceCustomHIDTasks
  3516 ;;		_APP_DeviceMSDTasks
  3517 ;;		_SYSTEM_Initialize
  3518 ;;		_USBDeviceInit
  3519 ;;		_USBDeviceTasks
  3520 ;;		__normal_mode
  3521 ;;		_api_parse
  3522 ;;		_api_prepare
  3523 ;;		_bootloader_run
  3524 ;;		_display_prepare
  3525 ;;		_display_update
  3526 ;;		_jump_to_main_program
  3527 ;;		_spi_get_external_rx_buffer
  3528 ;;		_spi_get_external_tx_buffer
  3529 ;;		_system_full_init
  3530 ;;		_system_minimal_init
  3531 ;;		_system_minimal_init_undo
  3532 ;;		_timer_pseudo_isr
  3533 ;;		_ui_get_status
  3534 ;;		_ui_run
  3535 ;; This function is called by:
  3536 ;;		Startup code after reset
  3537 ;; This function uses a non-reentrant model
  3538 ;;
  3539                           
  3540                           	psect	text0
  3541  003A74                     __ptext0:
  3542                           	opt stack 0
  3543  003A74                     _main:
  3544                           	opt stack 18
  3545                           
  3546                           ;incstack = 0
  3547  003A74  0004               	clrwdt		;# 
  3548                           
  3549                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3550  003A76  EC74  F047         	call	_spi_get_external_rx_buffer	;wreg free
  3551  003A7A  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3552  003A7E  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3553                           
  3554                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3555  003A82  EC6F  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3556  003A86  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3557  003A8A  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3558                           
  3559                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3560  003A8E  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3561  003A92  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3562                           
  3563                           ;main.c: 71: system_minimal_init();
  3564  003A96  ECE2  F046         	call	_system_minimal_init	;wreg free
  3565                           
  3566                           ;main.c: 74: if(_normal_mode())
  3567  003A9A  EC08  F03E         	call	__normal_mode	;wreg free
  3568  003A9E  0900               	iorlw	0
  3569  003AA0  B4D8               	btfsc	status,2,c
  3570  003AA2  D004               	goto	l893
  3571                           
  3572                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3573  003AA4  EC43  F047         	call	_system_minimal_init_undo	;wreg free
  3574                           
  3575                           ;main.c: 78: jump_to_main_program();
  3576  003AA8  ECC1  F047         	call	_jump_to_main_program	;wreg free
  3577  003AAC                     l893:
  3578                           
  3579                           ;main.c: 79: };main.c: 83: system_full_init();
  3580  003AAC  EC37  F03E         	call	_system_full_init	;wreg free
  3581                           
  3582                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3583  003AB0  0E00               	movlw	0
  3584  003AB2  EC6F  F040         	call	_SYSTEM_Initialize
  3585                           
  3586                           ;main.c: 88: USBDeviceInit();
  3587  003AB6  EC50  F01F         	call	_USBDeviceInit	;wreg free
  3588  003ABA                     l894:
  3589  003ABA  0004               	clrwdt		;# 
  3590                           
  3591                           ;main.c: 101: USBDeviceTasks();
  3592  003ABC  EC01  F01B         	call	_USBDeviceTasks	;wreg free
  3593                           
  3594                           ;main.c: 102: APP_DeviceMSDTasks();
  3595  003AC0  EC0D  F047         	call	_APP_DeviceMSDTasks	;wreg free
  3596                           
  3597                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3598  003AC4  EC42  F033         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3599                           
  3600                           ;main.c: 107: timer_pseudo_isr();
  3601  003AC8  ECA5  F043         	call	_timer_pseudo_isr	;wreg free
  3602                           
  3603                           ;main.c: 110: if(PORTDbits.RD2)
  3604  003ACC  A483               	btfss	3971,2,c	;volatile
  3605  003ACE  D039               	goto	l896
  3606                           
  3607                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3608  003AD0  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3609  003AD4  0100               	movlb	0	; () banked
  3610  003AD6  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3611                           
  3612                           ; BSR set to: 0
  3613                           ;main.c: 115: bytes_transmitted <<= 8;
  3614  003AD8  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3615  003ADA  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3616  003ADC  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3617                           
  3618                           ; BSR set to: 0
  3619                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3620  003ADE  506B               	movf	3947,w,c	;volatile
  3621  003AE0  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3622                           
  3623                           ; BSR set to: 0
  3624                           ;main.c: 117: --bytes_transmitted;
  3625  003AE2  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3626  003AE4  A0D8               	btfss	status,0,c
  3627  003AE6  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3628                           
  3629                           ; BSR set to: 0
  3630                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3631  003AE8  EC6F  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3632  003AEC  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3633  003AEE  0100               	movlb	0	; () banked
  3634  003AF0  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3635  003AF2  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3636  003AF4  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3637                           
  3638                           ; BSR set to: 0
  3639                           ;main.c: 121: if(bytes_transmitted>0)
  3640  003AF6  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3641  003AF8  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3642  003AFA  B4D8               	btfsc	status,2,c
  3643  003AFC  D022               	goto	l896
  3644                           
  3645                           ; BSR set to: 0
  3646                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3647  003AFE  9088               	bcf	3976,0,c	;volatile
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3651  003B00  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3652  003B04  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3653  003B08  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3654  003B0C  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3655  003B10  ECF3  F01D         	call	_api_prepare	;wreg free
  3656                           
  3657                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3658  003B14  C0C1  F09B         	movff	main@rx_buffer,api_parse@inBuffer
  3659  003B18  C0C2  F09C         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3660  003B1C  C0BF  F09D         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3661  003B20  EC15  F02E         	call	_api_parse	;wreg free
  3662                           
  3663                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3664  003B24  0100               	movlb	0	; () banked
  3665  003B26  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3666  003B28  6E6A               	movwf	3946,c	;volatile
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3670  003B2A  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3671                           
  3672                           ; BSR set to: 0
  3673                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3674  003B2E  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3675  003B30  6E68               	movwf	3944,c	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3679  003B32  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3680                           
  3681                           ; BSR set to: 0
  3682                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3683  003B36  0E00               	movlw	0
  3684  003B38  6E66               	movwf	3942,c	;volatile
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3688  003B3A  0E3F               	movlw	63
  3689  003B3C  6E67               	movwf	3943,c	;volatile
  3690                           
  3691                           ; BSR set to: 0
  3692                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3693  003B3E  9EA4               	bcf	4004,7,c	;volatile
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3697  003B40  8088               	bsf	3976,0,c	;volatile
  3698  003B42                     l896:
  3699                           
  3700                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3701                           
  3702                           ; BSR set to: 0
  3703                           
  3704                           ; BSR set to: 0
  3705  003B42  0100               	movlb	0	; () banked
  3706  003B44  51C8               	movf	(_os+3)& (0+255),w,b	;volatile
  3707  003B46  A4D8               	btfss	status,2,c
  3708  003B48  D7B8               	goto	l894
  3709                           
  3710                           ; BSR set to: 0
  3711                           ;main.c: 152: {;main.c: 154: ui_run();
  3712  003B4A  EC6F  F024         	call	_ui_run	;wreg free
  3713                           
  3714                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3715  003B4E  D025               	goto	l898
  3716  003B50                     
  3717                           ;main.c: 162: bootloader_run(0);
  3718  003B50  0E00               	movlw	0
  3719  003B52  EC14  F03D         	call	_bootloader_run
  3720                           
  3721                           ;main.c: 163: break;
  3722  003B56  D043               	goto	l900
  3723  003B58                     
  3724                           ;main.c: 166: bootloader_run(1);
  3725  003B58  0E01               	movlw	1
  3726  003B5A  EC14  F03D         	call	_bootloader_run
  3727                           
  3728                           ;main.c: 167: break;
  3729  003B5E  D03F               	goto	l900
  3730  003B60                     
  3731                           ;main.c: 170: bootloader_run(2);
  3732  003B60  0E02               	movlw	2
  3733  003B62  EC14  F03D         	call	_bootloader_run
  3734                           
  3735                           ;main.c: 171: break;
  3736  003B66  D03B               	goto	l900
  3737  003B68                     
  3738                           ;main.c: 174: bootloader_run(3);
  3739  003B68  0E03               	movlw	3
  3740  003B6A  EC14  F03D         	call	_bootloader_run
  3741                           
  3742                           ;main.c: 175: break;
  3743  003B6E  D037               	goto	l900
  3744  003B70                     
  3745                           ;main.c: 178: bootloader_run(4);
  3746  003B70  0E04               	movlw	4
  3747  003B72  EC14  F03D         	call	_bootloader_run
  3748                           
  3749                           ;main.c: 179: break;
  3750  003B76  D033               	goto	l900
  3751  003B78                     
  3752                           ;main.c: 182: bootloader_run(5);
  3753  003B78  0E05               	movlw	5
  3754  003B7A  EC14  F03D         	call	_bootloader_run
  3755                           
  3756                           ;main.c: 183: break;
  3757  003B7E  D02F               	goto	l900
  3758  003B80                     
  3759                           ;main.c: 186: display_prepare(os.display_mode);
  3760  003B80  0100               	movlb	0	; () banked
  3761  003B82  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  3762  003B84  ECAC  F02D         	call	_display_prepare
  3763                           
  3764                           ;main.c: 187: break;
  3765  003B88  D02A               	goto	l900
  3766  003B8A                     
  3767                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3768  003B8A  ECCD  F047         	call	_ui_get_status	;wreg free
  3769  003B8E  0A05               	xorlw	5
  3770  003B90  A4D8               	btfss	status,2,c
  3771  003B92  D025               	goto	l900
  3772                           
  3773                           ;main.c: 191: {;main.c: 192: display_update();
  3774  003B94  EC46  F03C         	call	_display_update	;wreg free
  3775                           
  3776                           ;main.c: 195: }
  3777                           
  3778                           ;main.c: 193: };main.c: 194: break;
  3779  003B98  D022               	goto	l900
  3780  003B9A                     l898:
  3781  003B9A  0100               	movlb	0	; () banked
  3782  003B9C  51C7               	movf	(_os+2)& (0+255),w,b	;volatile
  3783  003B9E  0B07               	andlw	7
  3784  003BA0  6FBB               	movwf	??_main& (0+255),b
  3785  003BA2  6BBC               	clrf	(??_main+1)& (0+255),b
  3786                           
  3787                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3788                           ; Switch size 1, requested type "space"
  3789                           ; Number of cases is 1, Range of values is 0 to 0
  3790                           ; switch strategies available:
  3791                           ; Name         Instructions Cycles
  3792                           ; simple_byte            4     3 (average)
  3793                           ;	Chosen strategy is simple_byte
  3794  003BA4  51BC               	movf	(??_main+1)& (0+255),w,b
  3795  003BA6  0A00               	xorlw	0	; case 0
  3796  003BA8  A4D8               	btfss	status,2,c
  3797  003BAA  D019               	goto	l900
  3798                           
  3799                           ; BSR set to: 0
  3800                           ; Switch size 1, requested type "space"
  3801                           ; Number of cases is 8, Range of values is 0 to 7
  3802                           ; switch strategies available:
  3803                           ; Name         Instructions Cycles
  3804                           ; simple_byte           25    13 (average)
  3805                           ;	Chosen strategy is simple_byte
  3806  003BAC  51BB               	movf	??_main& (0+255),w,b
  3807  003BAE  0A00               	xorlw	0	; case 0
  3808  003BB0  B4D8               	btfsc	status,2,c
  3809  003BB2  D7CE               	goto	l899
  3810  003BB4  0A01               	xorlw	1	; case 1
  3811  003BB6  B4D8               	btfsc	status,2,c
  3812  003BB8  D7CF               	goto	l901
  3813  003BBA  0A03               	xorlw	3	; case 2
  3814  003BBC  B4D8               	btfsc	status,2,c
  3815  003BBE  D7D0               	goto	l902
  3816  003BC0  0A01               	xorlw	1	; case 3
  3817  003BC2  B4D8               	btfsc	status,2,c
  3818  003BC4  D7D1               	goto	l903
  3819  003BC6  0A07               	xorlw	7	; case 4
  3820  003BC8  B4D8               	btfsc	status,2,c
  3821  003BCA  D7D2               	goto	l904
  3822  003BCC  0A01               	xorlw	1	; case 5
  3823  003BCE  B4D8               	btfsc	status,2,c
  3824  003BD0  D7D3               	goto	l905
  3825  003BD2  0A03               	xorlw	3	; case 6
  3826  003BD4  B4D8               	btfsc	status,2,c
  3827  003BD6  D7D4               	goto	l906
  3828  003BD8  0A01               	xorlw	1	; case 7
  3829  003BDA  B4D8               	btfsc	status,2,c
  3830  003BDC  D7D6               	goto	l907
  3831  003BDE                     l900:
  3832                           
  3833                           ;main.c: 196: os.done = 1;
  3834                           
  3835                           ; BSR set to: 0
  3836  003BDE  0E01               	movlw	1
  3837  003BE0  0100               	movlb	0	; () banked
  3838  003BE2  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  3839                           
  3840                           ; BSR set to: 0
  3841                           
  3842                           ; BSR set to: 0
  3843  003BE4  D76A               	goto	l894
  3844  003BE6                     __end_of_main:
  3845                           	opt stack 0
  3846                           tblptru	equ	0xFF8
  3847                           tblptrh	equ	0xFF7
  3848                           tblptrl	equ	0xFF6
  3849                           tablat	equ	0xFF5
  3850                           postinc0	equ	0xFEE
  3851                           wreg	equ	0xFE8
  3852                           postdec1	equ	0xFE5
  3853                           fsr1h	equ	0xFE2
  3854                           fsr1l	equ	0xFE1
  3855                           status	equ	0xFD8
  3856                           
  3857 ;; *************** function _ui_run *****************
  3858 ;; Defined at:
  3859 ;;		line 110 in file "ui.c"
  3860 ;; Parameters:    Size  Location     Type
  3861 ;;		None
  3862 ;; Auto vars:     Size  Location     Type
  3863 ;;		None
  3864 ;; Return value:  Size  Location     Type
  3865 ;;                  1    wreg      void 
  3866 ;; Registers used:
  3867 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3868 ;; Tracked objects:
  3869 ;;		On entry : 0/0
  3870 ;;		On exit  : 0/0
  3871 ;;		Unchanged: 0/0
  3872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3877 ;;Total ram usage:        0 bytes
  3878 ;; Hardware stack levels used:    1
  3879 ;; Hardware stack levels required when called:    9
  3880 ;; This function calls:
  3881 ;;		__ui_encoder
  3882 ;;		_i2c_digipot_backlight
  3883 ;;		_i2c_digipot_reset_off
  3884 ;;		_i2c_digipot_reset_on
  3885 ;;		_i2c_display_send_init_sequence
  3886 ;;		_system_encoder_enable
  3887 ;;		_ui_init
  3888 ;; This function is called by:
  3889 ;;		_main
  3890 ;; This function uses a non-reentrant model
  3891 ;;
  3892                           
  3893                           	psect	text1
  3894  0048DE                     __ptext1:
  3895                           	opt stack 0
  3896  0048DE                     _ui_run:
  3897                           	opt stack 21
  3898                           
  3899                           ;ui.c: 112: switch(userInterfaceStatus)
  3900                           
  3901                           ; BSR set to: 0
  3902                           ;incstack = 0
  3903  0048DE  D06D               	goto	l1319
  3904  0048E0                     
  3905                           ;ui.c: 116: if (os.buttonCount!=0)
  3906  0048E0  0100               	movlb	0	; () banked
  3907  0048E2  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  3908  0048E4  B4D8               	btfsc	status,2,c
  3909  0048E6  0012               	return	
  3910                           
  3911                           ; BSR set to: 0
  3912                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3913  0048E8  EC03  F047         	call	_ui_init	;wreg free
  3914                           
  3915                           ;ui.c: 119: os.buttonCount = 0;
  3916  0048EC  0E00               	movlw	0
  3917  0048EE  0100               	movlb	0	; () banked
  3918  0048F0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  3919                           
  3920                           ; BSR set to: 0
  3921                           ;ui.c: 120: };ui.c: 121: break;
  3922  0048F2  0012               	return	
  3923  0048F4                     l1323:
  3924                           
  3925                           ; BSR set to: 0
  3926                           ;ui.c: 125: LATDbits.LD0 = 0;
  3927  0048F4  908C               	bcf	3980,0,c	;volatile
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;ui.c: 127: system_ui_inactive_count = 0;
  3931  0048F6  0E00               	movlw	0
  3932  0048F8  0101               	movlb	1	; () banked
  3933  0048FA  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3934  0048FC  0E00               	movlw	0
  3935  0048FE  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3936                           
  3937                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3938  004900  0E02               	movlw	2
  3939  004902  0100               	movlb	0	; () banked
  3940  004904  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3941                           
  3942                           ;ui.c: 129: break;
  3943  004906  0012               	return	
  3944  004908                     
  3945                           ; BSR set to: 0
  3946                           ;ui.c: 133: i2c_digipot_reset_on();
  3947                           
  3948                           ; BSR set to: 0
  3949  004908  ECF9  F045         	call	_i2c_digipot_reset_on	;wreg free
  3950                           
  3951                           ;ui.c: 135: system_ui_inactive_count = 0;
  3952  00490C  0E00               	movlw	0
  3953  00490E  0101               	movlb	1	; () banked
  3954  004910  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3955  004912  0E00               	movlw	0
  3956  004914  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3957                           
  3958                           ; BSR set to: 1
  3959                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3960  004916  0E03               	movlw	3
  3961  004918  0100               	movlb	0	; () banked
  3962  00491A  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3963                           
  3964                           ;ui.c: 137: break;
  3965  00491C  0012               	return	
  3966  00491E                     
  3967                           ; BSR set to: 0
  3968                           ;ui.c: 140: ++system_ui_inactive_count;
  3969                           
  3970                           ; BSR set to: 0
  3971  00491E  0101               	movlb	1	; () banked
  3972  004920  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3973  004922  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3974                           
  3975                           ; BSR set to: 1
  3976                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3977  004924  517D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3978  004926  E104               	bnz	u12830
  3979  004928  0E04               	movlw	4
  3980  00492A  5D7C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3981  00492C  A0D8               	btfss	status,0,c
  3982  00492E  0012               	return	
  3983  004930                     u12830:
  3984                           
  3985                           ; BSR set to: 1
  3986                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  3987  004930  EC0A  F046         	call	_i2c_digipot_reset_off	;wreg free
  3988                           
  3989                           ;ui.c: 145: system_ui_inactive_count = 0;
  3990  004934  0E00               	movlw	0
  3991  004936  0101               	movlb	1	; () banked
  3992  004938  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3993  00493A  0E00               	movlw	0
  3994  00493C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3995                           
  3996                           ; BSR set to: 1
  3997                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3998  00493E  0E04               	movlw	4
  3999  004940  0100               	movlb	0	; () banked
  4000  004942  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4001                           
  4002                           ; BSR set to: 0
  4003                           ;ui.c: 147: };ui.c: 148: break;
  4004  004944  0012               	return	
  4005  004946                     
  4006                           ; BSR set to: 0
  4007                           ;ui.c: 152: i2c_display_send_init_sequence();
  4008                           
  4009                           ; BSR set to: 0
  4010  004946  ECB9  F044         	call	_i2c_display_send_init_sequence	;wreg free
  4011                           
  4012                           ;ui.c: 154: i2c_digipot_backlight(150);
  4013  00494A  0E96               	movlw	150
  4014  00494C  EC64  F045         	call	_i2c_digipot_backlight
  4015                           
  4016                           ;ui.c: 156: system_encoder_enable();
  4017  004950  EC3B  F047         	call	_system_encoder_enable	;wreg free
  4018                           
  4019                           ;ui.c: 158: system_ui_inactive_count = 0;
  4020  004954  0E00               	movlw	0
  4021  004956  0101               	movlb	1	; () banked
  4022  004958  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4023  00495A  0E00               	movlw	0
  4024  00495C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4025                           
  4026                           ; BSR set to: 1
  4027                           ;ui.c: 159: startup_timer = 0;
  4028  00495E  0E00               	movlw	0
  4029  004960  6F7B               	movwf	(_startup_timer+1)& (0+255),b
  4030  004962  0E00               	movlw	0
  4031  004964  6F7A               	movwf	_startup_timer& (0+255),b
  4032                           
  4033                           ; BSR set to: 1
  4034                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4035  004966  0E05               	movlw	5
  4036  004968  0100               	movlb	0	; () banked
  4037  00496A  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4038                           
  4039                           ;ui.c: 161: break;
  4040  00496C  0012               	return	
  4041  00496E                     
  4042                           ; BSR set to: 0
  4043                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4044                           
  4045                           ; BSR set to: 0
  4046  00496E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4047  004970  A4D8               	btfss	status,2,c
  4048  004972  D00B               	goto	l1330
  4049                           
  4050                           ; BSR set to: 0
  4051                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  4052  004974  0101               	movlb	1	; () banked
  4053  004976  4B7A               	infsnz	_startup_timer& (0+255),f,b
  4054  004978  2B7B               	incf	(_startup_timer+1)& (0+255),f,b
  4055                           
  4056                           ; BSR set to: 1
  4057                           ;ui.c: 167: if(startup_timer==250)
  4058  00497A  0EFA               	movlw	250
  4059  00497C  197A               	xorwf	_startup_timer& (0+255),w,b
  4060  00497E  117B               	iorwf	(_startup_timer+1)& (0+255),w,b
  4061  004980  A4D8               	btfss	status,2,c
  4062  004982  D003               	goto	l1330
  4063                           
  4064                           ; BSR set to: 1
  4065                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4066  004984  0E10               	movlw	16
  4067  004986  0100               	movlb	0	; () banked
  4068  004988  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4069  00498A                     l1330:
  4070                           
  4071                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  4072                           
  4073                           ; BSR set to: 0
  4074  00498A  0100               	movlb	0	; () banked
  4075  00498C  51C5               	movf	_os& (0+255),w,b	;volatile
  4076  00498E  A4D8               	btfss	status,2,c
  4077  004990  D00C               	goto	l1331
  4078                           
  4079                           ; BSR set to: 0
  4080  004992  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4081  004994  A4D8               	btfss	status,2,c
  4082  004996  D009               	goto	l1331
  4083                           
  4084                           ; BSR set to: 0
  4085                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  4086  004998  0101               	movlb	1	; () banked
  4087  00499A  297C               	incf	_system_ui_inactive_count& (0+255),w,b
  4088  00499C  E103               	bnz	u12880
  4089  00499E  297D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4090  0049A0  B4D8               	btfsc	status,2,c
  4091  0049A2  0012               	return	
  4092  0049A4                     u12880:
  4093                           
  4094                           ; BSR set to: 1
  4095                           ;ui.c: 175: ++system_ui_inactive_count;
  4096  0049A4  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4097  0049A6  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4098                           
  4099                           ; BSR set to: 1
  4100                           ;ui.c: 176: }
  4101  0049A8  0012               	return	
  4102  0049AA                     l1331:
  4103                           
  4104                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  4105                           
  4106                           ; BSR set to: 1
  4107  0049AA  0E00               	movlw	0
  4108  0049AC  0101               	movlb	1	; () banked
  4109  0049AE  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4110  0049B0  0E00               	movlw	0
  4111  0049B2  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4112                           
  4113                           ; BSR set to: 1
  4114                           ;ui.c: 180: _ui_encoder();
  4115  0049B4  ECF5  F02B         	call	__ui_encoder	;wreg free
  4116                           
  4117                           ;ui.c: 183: }
  4118                           
  4119                           ;ui.c: 181: };ui.c: 182: break;
  4120  0049B8  0012               	return	
  4121  0049BA                     l1319:
  4122  0049BA  0100               	movlb	0	; () banked
  4123  0049BC  51E6               	movf	_userInterfaceStatus& (0+255),w,b
  4124                           
  4125                           ; Switch size 1, requested type "space"
  4126                           ; Number of cases is 6, Range of values is 0 to 5
  4127                           ; switch strategies available:
  4128                           ; Name         Instructions Cycles
  4129                           ; simple_byte           19    10 (average)
  4130                           ;	Chosen strategy is simple_byte
  4131  0049BE  0A00               	xorlw	0	; case 0
  4132  0049C0  B4D8               	btfsc	status,2,c
  4133  0049C2  D78E               	goto	l1320
  4134  0049C4  0A01               	xorlw	1	; case 1
  4135  0049C6  B4D8               	btfsc	status,2,c
  4136  0049C8  D795               	goto	l1323
  4137  0049CA  0A03               	xorlw	3	; case 2
  4138  0049CC  B4D8               	btfsc	status,2,c
  4139  0049CE  D79C               	goto	l1324
  4140  0049D0  0A01               	xorlw	1	; case 3
  4141  0049D2  B4D8               	btfsc	status,2,c
  4142  0049D4  D7A4               	goto	l1325
  4143  0049D6  0A07               	xorlw	7	; case 4
  4144  0049D8  B4D8               	btfsc	status,2,c
  4145  0049DA  D7B5               	goto	l1327
  4146  0049DC  0A01               	xorlw	1	; case 5
  4147  0049DE  A4D8               	btfss	status,2,c
  4148  0049E0  0012               	return	
  4149  0049E2  D7C5               	goto	l1328
  4150  0049E4                     __end_of_ui_run:
  4151                           	opt stack 0
  4152                           tblptru	equ	0xFF8
  4153                           tblptrh	equ	0xFF7
  4154                           tblptrl	equ	0xFF6
  4155                           tablat	equ	0xFF5
  4156                           postinc0	equ	0xFEE
  4157                           wreg	equ	0xFE8
  4158                           postdec1	equ	0xFE5
  4159                           fsr1h	equ	0xFE2
  4160                           fsr1l	equ	0xFE1
  4161                           status	equ	0xFD8
  4162                           
  4163 ;; *************** function _system_encoder_enable *****************
  4164 ;; Defined at:
  4165 ;;		line 96 in file "os.c"
  4166 ;; Parameters:    Size  Location     Type
  4167 ;;		None
  4168 ;; Auto vars:     Size  Location     Type
  4169 ;;		None
  4170 ;; Return value:  Size  Location     Type
  4171 ;;                  1    wreg      void 
  4172 ;; Registers used:
  4173 ;;		wreg, status,2
  4174 ;; Tracked objects:
  4175 ;;		On entry : 0/0
  4176 ;;		On exit  : 0/0
  4177 ;;		Unchanged: 0/0
  4178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4179 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4180 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4181 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4182 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4183 ;;Total ram usage:        0 bytes
  4184 ;; Hardware stack levels used:    1
  4185 ;; This function calls:
  4186 ;;		Nothing
  4187 ;; This function is called by:
  4188 ;;		_ui_run
  4189 ;; This function uses a non-reentrant model
  4190 ;;
  4191                           
  4192                           	psect	text2
  4193  008E76                     __ptext2:
  4194                           	opt stack 0
  4195  008E76                     _system_encoder_enable:
  4196                           	opt stack 29
  4197                           
  4198                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4199                           
  4200                           ;incstack = 0
  4201  008E76  92F0               	bcf	intcon3,1,c	;volatile
  4202                           
  4203                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4204  008E78  94F0               	bcf	intcon3,2,c	;volatile
  4205                           
  4206                           ;os.c: 103: os.encoderCount = 0;
  4207  008E7A  0E00               	movlw	0
  4208  008E7C  0100               	movlb	0	; () banked
  4209  008E7E  6FC5               	movwf	_os& (0+255),b	;volatile
  4210                           
  4211                           ; BSR set to: 0
  4212                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4213  008E80  88F0               	bsf	intcon3,4,c	;volatile
  4214                           
  4215                           ; BSR set to: 0
  4216                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4217  008E82  8AF0               	bsf	intcon3,5,c	;volatile
  4218                           
  4219                           ; BSR set to: 0
  4220  008E84  0012               	return		;funcret
  4221  008E86                     __end_of_system_encoder_enable:
  4222                           	opt stack 0
  4223                           tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           intcon3	equ	0xFF0
  4228                           postinc0	equ	0xFEE
  4229                           wreg	equ	0xFE8
  4230                           postdec1	equ	0xFE5
  4231                           fsr1h	equ	0xFE2
  4232                           fsr1l	equ	0xFE1
  4233                           status	equ	0xFD8
  4234                           
  4235 ;; *************** function _i2c_display_send_init_sequence *****************
  4236 ;; Defined at:
  4237 ;;		line 207 in file "i2c.c"
  4238 ;; Parameters:    Size  Location     Type
  4239 ;;		None
  4240 ;; Auto vars:     Size  Location     Type
  4241 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4242 ;; Return value:  Size  Location     Type
  4243 ;;                  1    wreg      void 
  4244 ;; Registers used:
  4245 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4246 ;; Tracked objects:
  4247 ;;		On entry : 0/0
  4248 ;;		On exit  : 0/0
  4249 ;;		Unchanged: 0/0
  4250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4251 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4252 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4254 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4255 ;;Total ram usage:        9 bytes
  4256 ;; Hardware stack levels used:    1
  4257 ;; Hardware stack levels required when called:    2
  4258 ;; This function calls:
  4259 ;;		__i2c_write
  4260 ;;		_i2c_set_frequency
  4261 ;; This function is called by:
  4262 ;;		_ui_run
  4263 ;; This function uses a non-reentrant model
  4264 ;;
  4265                           
  4266                           	psect	text3
  4267  008972                     __ptext3:
  4268                           	opt stack 0
  4269  008972                     _i2c_display_send_init_sequence:
  4270                           	opt stack 27
  4271                           
  4272                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4273                           
  4274                           ; BSR set to: 0
  4275                           ;incstack = 0
  4276  008972  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6808
  4277  008976  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4278  00897A  0E08               	movlw	8
  4279  00897C                     u12101:
  4280  00897C  CFDB FFE3          	movff	plusw2,plusw1
  4281  008980  06E8               	decf	wreg,f,c
  4282  008982  E2FC               	bc	u12101
  4283                           
  4284                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4285  008984  0E00               	movlw	0
  4286  008986  ECFB  F044         	call	_i2c_set_frequency
  4287                           
  4288                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4289  00898A  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4290  00898C  6E06               	movwf	__i2c_write@data,c
  4291  00898E  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4292  008990  6E07               	movwf	__i2c_write@data+1,c
  4293  008992  0E09               	movlw	9
  4294  008994  6E08               	movwf	__i2c_write@length,c
  4295  008996  0E78               	movlw	120
  4296  008998  EC85  F041         	call	__i2c_write
  4297  00899C  0012               	return		;funcret
  4298  00899E                     __end_of_i2c_display_send_init_sequence:
  4299                           	opt stack 0
  4300                           tblptru	equ	0xFF8
  4301                           tblptrh	equ	0xFF7
  4302                           tblptrl	equ	0xFF6
  4303                           tablat	equ	0xFF5
  4304                           intcon3	equ	0xFF0
  4305                           postinc0	equ	0xFEE
  4306                           wreg	equ	0xFE8
  4307                           postdec1	equ	0xFE5
  4308                           plusw1	equ	0xFE3
  4309                           fsr1h	equ	0xFE2
  4310                           fsr1l	equ	0xFE1
  4311                           plusw2	equ	0xFDB
  4312                           status	equ	0xFD8
  4313                           
  4314 ;; *************** function _i2c_digipot_reset_on *****************
  4315 ;; Defined at:
  4316 ;;		line 310 in file "i2c.c"
  4317 ;; Parameters:    Size  Location     Type
  4318 ;;		None
  4319 ;; Auto vars:     Size  Location     Type
  4320 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4321 ;; Return value:  Size  Location     Type
  4322 ;;                  1    wreg      void 
  4323 ;; Registers used:
  4324 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4325 ;; Tracked objects:
  4326 ;;		On entry : 0/0
  4327 ;;		On exit  : 0/0
  4328 ;;		Unchanged: 0/0
  4329 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4330 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4331 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4332 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4333 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4334 ;;Total ram usage:        2 bytes
  4335 ;; Hardware stack levels used:    1
  4336 ;; Hardware stack levels required when called:    2
  4337 ;; This function calls:
  4338 ;;		__i2c_write
  4339 ;;		_i2c_set_frequency
  4340 ;; This function is called by:
  4341 ;;		_ui_run
  4342 ;; This function uses a non-reentrant model
  4343 ;;
  4344                           
  4345                           	psect	text4
  4346  008BF2                     __ptext4:
  4347                           	opt stack 0
  4348  008BF2                     _i2c_digipot_reset_on:
  4349                           	opt stack 27
  4350                           
  4351                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4352                           
  4353                           ;incstack = 0
  4354  008BF2  0E10               	movlw	16
  4355  008BF4  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4356                           
  4357                           ;i2c.c: 315: data_array[1] = 0x00;
  4358  008BF6  0E00               	movlw	0
  4359  008BF8  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4360                           
  4361                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4362  008BFA  0E02               	movlw	2
  4363  008BFC  ECFB  F044         	call	_i2c_set_frequency
  4364                           
  4365                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4366  008C00  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4367  008C02  6E06               	movwf	__i2c_write@data,c
  4368  008C04  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4369  008C06  6E07               	movwf	__i2c_write@data+1,c
  4370  008C08  0E02               	movlw	2
  4371  008C0A  6E08               	movwf	__i2c_write@length,c
  4372  008C0C  0E5C               	movlw	92
  4373  008C0E  EC85  F041         	call	__i2c_write
  4374  008C12  0012               	return		;funcret
  4375  008C14                     __end_of_i2c_digipot_reset_on:
  4376                           	opt stack 0
  4377                           tblptru	equ	0xFF8
  4378                           tblptrh	equ	0xFF7
  4379                           tblptrl	equ	0xFF6
  4380                           tablat	equ	0xFF5
  4381                           intcon3	equ	0xFF0
  4382                           postinc0	equ	0xFEE
  4383                           wreg	equ	0xFE8
  4384                           postdec1	equ	0xFE5
  4385                           plusw1	equ	0xFE3
  4386                           fsr1h	equ	0xFE2
  4387                           fsr1l	equ	0xFE1
  4388                           plusw2	equ	0xFDB
  4389                           status	equ	0xFD8
  4390                           
  4391 ;; *************** function _i2c_digipot_reset_off *****************
  4392 ;; Defined at:
  4393 ;;		line 323 in file "i2c.c"
  4394 ;; Parameters:    Size  Location     Type
  4395 ;;		None
  4396 ;; Auto vars:     Size  Location     Type
  4397 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4398 ;; Return value:  Size  Location     Type
  4399 ;;                  1    wreg      void 
  4400 ;; Registers used:
  4401 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4402 ;; Tracked objects:
  4403 ;;		On entry : 0/0
  4404 ;;		On exit  : 0/0
  4405 ;;		Unchanged: 0/0
  4406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4408 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4410 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4411 ;;Total ram usage:        2 bytes
  4412 ;; Hardware stack levels used:    1
  4413 ;; Hardware stack levels required when called:    2
  4414 ;; This function calls:
  4415 ;;		__i2c_write
  4416 ;;		_i2c_set_frequency
  4417 ;; This function is called by:
  4418 ;;		_ui_run
  4419 ;; This function uses a non-reentrant model
  4420 ;;
  4421                           
  4422                           	psect	text5
  4423  008C14                     __ptext5:
  4424                           	opt stack 0
  4425  008C14                     _i2c_digipot_reset_off:
  4426                           	opt stack 27
  4427                           
  4428                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4429                           
  4430                           ;incstack = 0
  4431  008C14  0E10               	movlw	16
  4432  008C16  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4433                           
  4434                           ;i2c.c: 327: data_array[1] = 0x80;
  4435  008C18  0E80               	movlw	128
  4436  008C1A  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4437                           
  4438                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4439  008C1C  0E02               	movlw	2
  4440  008C1E  ECFB  F044         	call	_i2c_set_frequency
  4441                           
  4442                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4443  008C22  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4444  008C24  6E06               	movwf	__i2c_write@data,c
  4445  008C26  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4446  008C28  6E07               	movwf	__i2c_write@data+1,c
  4447  008C2A  0E02               	movlw	2
  4448  008C2C  6E08               	movwf	__i2c_write@length,c
  4449  008C2E  0E5C               	movlw	92
  4450  008C30  EC85  F041         	call	__i2c_write
  4451  008C34  0012               	return		;funcret
  4452  008C36                     __end_of_i2c_digipot_reset_off:
  4453                           	opt stack 0
  4454                           tblptru	equ	0xFF8
  4455                           tblptrh	equ	0xFF7
  4456                           tblptrl	equ	0xFF6
  4457                           tablat	equ	0xFF5
  4458                           intcon3	equ	0xFF0
  4459                           postinc0	equ	0xFEE
  4460                           wreg	equ	0xFE8
  4461                           postdec1	equ	0xFE5
  4462                           plusw1	equ	0xFE3
  4463                           fsr1h	equ	0xFE2
  4464                           fsr1l	equ	0xFE1
  4465                           plusw2	equ	0xFDB
  4466                           status	equ	0xFD8
  4467                           
  4468 ;; *************** function _i2c_digipot_backlight *****************
  4469 ;; Defined at:
  4470 ;;		line 335 in file "i2c.c"
  4471 ;; Parameters:    Size  Location     Type
  4472 ;;  level           1    wreg     unsigned char 
  4473 ;; Auto vars:     Size  Location     Type
  4474 ;;  level           1   10[COMRAM] unsigned char 
  4475 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4476 ;; Return value:  Size  Location     Type
  4477 ;;                  1    wreg      void 
  4478 ;; Registers used:
  4479 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4480 ;; Tracked objects:
  4481 ;;		On entry : 0/0
  4482 ;;		On exit  : 0/0
  4483 ;;		Unchanged: 0/0
  4484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4486 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4488 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4489 ;;Total ram usage:        3 bytes
  4490 ;; Hardware stack levels used:    1
  4491 ;; Hardware stack levels required when called:    2
  4492 ;; This function calls:
  4493 ;;		__i2c_write
  4494 ;;		_i2c_set_frequency
  4495 ;; This function is called by:
  4496 ;;		_ui_run
  4497 ;; This function uses a non-reentrant model
  4498 ;;
  4499                           
  4500                           	psect	text6
  4501  008AC8                     __ptext6:
  4502                           	opt stack 0
  4503  008AC8                     _i2c_digipot_backlight:
  4504                           	opt stack 27
  4505                           
  4506                           ;incstack = 0
  4507                           ;i2c_digipot_backlight@level stored from wreg
  4508  008AC8  6E0B               	movwf	i2c_digipot_backlight@level,c
  4509                           
  4510                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4511  008ACA  0E00               	movlw	0
  4512  008ACC  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4513                           
  4514                           ;i2c.c: 339: data_array[1] = level>>1;
  4515  008ACE  90D8               	bcf	status,0,c
  4516  008AD0  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4517  008AD2  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4518                           
  4519                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4520  008AD4  0E02               	movlw	2
  4521  008AD6  ECFB  F044         	call	_i2c_set_frequency
  4522                           
  4523                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4524  008ADA  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4525  008ADC  6E06               	movwf	__i2c_write@data,c
  4526  008ADE  0E00               	movlw	high i2c_digipot_backlight@data_array
  4527  008AE0  6E07               	movwf	__i2c_write@data+1,c
  4528  008AE2  0E02               	movlw	2
  4529  008AE4  6E08               	movwf	__i2c_write@length,c
  4530  008AE6  0E5C               	movlw	92
  4531  008AE8  EC85  F041         	call	__i2c_write
  4532  008AEC  0012               	return		;funcret
  4533  008AEE                     __end_of_i2c_digipot_backlight:
  4534                           	opt stack 0
  4535                           tblptru	equ	0xFF8
  4536                           tblptrh	equ	0xFF7
  4537                           tblptrl	equ	0xFF6
  4538                           tablat	equ	0xFF5
  4539                           intcon3	equ	0xFF0
  4540                           postinc0	equ	0xFEE
  4541                           wreg	equ	0xFE8
  4542                           postdec1	equ	0xFE5
  4543                           plusw1	equ	0xFE3
  4544                           fsr1h	equ	0xFE2
  4545                           fsr1l	equ	0xFE1
  4546                           plusw2	equ	0xFDB
  4547                           status	equ	0xFD8
  4548                           
  4549 ;; *************** function __ui_encoder *****************
  4550 ;; Defined at:
  4551 ;;		line 22 in file "ui.c"
  4552 ;; Parameters:    Size  Location     Type
  4553 ;;		None
  4554 ;; Auto vars:     Size  Location     Type
  4555 ;;		None
  4556 ;; Return value:  Size  Location     Type
  4557 ;;                  1    wreg      void 
  4558 ;; Registers used:
  4559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4560 ;; Tracked objects:
  4561 ;;		On entry : 0/0
  4562 ;;		On exit  : 0/0
  4563 ;;		Unchanged: 0/0
  4564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4565 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4568 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4569 ;;Total ram usage:        0 bytes
  4570 ;; Hardware stack levels used:    1
  4571 ;; Hardware stack levels required when called:    8
  4572 ;; This function calls:
  4573 ;;		_i2c_eeprom_writeByte
  4574 ;;		_reboot
  4575 ;;		_system_delay_ms
  4576 ;; This function is called by:
  4577 ;;		_ui_run
  4578 ;; This function uses a non-reentrant model
  4579 ;;
  4580                           
  4581                           	psect	text7
  4582  0057EA                     __ptext7:
  4583                           	opt stack 0
  4584  0057EA                     __ui_encoder:
  4585                           	opt stack 21
  4586                           
  4587                           ;ui.c: 24: switch(os.display_mode)
  4588                           
  4589                           ;incstack = 0
  4590  0057EA  D054               	goto	l1292
  4591  0057EC                     
  4592                           ;ui.c: 27: if(os.buttonCount>0)
  4593  0057EC  0100               	movlb	0	; () banked
  4594  0057EE  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4595  0057F0  0A80               	xorlw	128
  4596  0057F2  0F7F               	addlw	-129
  4597  0057F4  A0D8               	btfss	status,0,c
  4598  0057F6  0012               	return	
  4599                           
  4600                           ; BSR set to: 0
  4601                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4602  0057F8  0E00               	movlw	0
  4603  0057FA  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;ui.c: 30: };ui.c: 31: break;
  4607  0057FC  0012               	return	
  4608  0057FE                     
  4609                           ; BSR set to: 0
  4610                           ;ui.c: 34: if(os.buttonCount>0)
  4611                           
  4612                           ; BSR set to: 0
  4613  0057FE  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4614  005800  0A80               	xorlw	128
  4615  005802  0F7F               	addlw	-129
  4616  005804  A0D8               	btfss	status,0,c
  4617  005806  0012               	return	
  4618                           
  4619                           ; BSR set to: 0
  4620                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4621  005808  0E00               	movlw	0
  4622  00580A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4623                           
  4624                           ; BSR set to: 0
  4625                           ;ui.c: 37: };ui.c: 38: break;
  4626  00580C  0012               	return	
  4627  00580E                     
  4628                           ; BSR set to: 0
  4629                           ;ui.c: 41: if(os.buttonCount>0)
  4630                           
  4631                           ; BSR set to: 0
  4632  00580E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4633  005810  0A80               	xorlw	128
  4634  005812  0F7F               	addlw	-129
  4635  005814  A0D8               	btfss	status,0,c
  4636  005816  0012               	return	
  4637                           
  4638                           ; BSR set to: 0
  4639                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4640  005818  0E30               	movlw	48
  4641  00581A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4642                           
  4643                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4644  00581C  0E30               	movlw	48
  4645  00581E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4646                           
  4647                           ;ui.c: 45: os.buttonCount = 0;
  4648  005820  0E00               	movlw	0
  4649  005822  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4650                           
  4651                           ; BSR set to: 0
  4652                           ;ui.c: 46: };ui.c: 47: break;
  4653  005824  0012               	return	
  4654  005826                     
  4655                           ; BSR set to: 0
  4656                           ;ui.c: 50: if(os.buttonCount>0)
  4657                           
  4658                           ; BSR set to: 0
  4659  005826  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4660  005828  0A80               	xorlw	128
  4661  00582A  0F7F               	addlw	-129
  4662  00582C  A0D8               	btfss	status,0,c
  4663  00582E  0012               	return	
  4664                           
  4665                           ; BSR set to: 0
  4666                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4667  005830  0E00               	movlw	0
  4668  005832  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;ui.c: 53: };ui.c: 54: break;
  4672  005834  0012               	return	
  4673  005836                     
  4674                           ; BSR set to: 0
  4675                           ;ui.c: 57: if(os.buttonCount>0)
  4676                           
  4677                           ; BSR set to: 0
  4678  005836  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4679  005838  0A80               	xorlw	128
  4680  00583A  0F7F               	addlw	-129
  4681  00583C  A0D8               	btfss	status,0,c
  4682  00583E  0012               	return	
  4683                           
  4684                           ; BSR set to: 0
  4685                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4686  005840  0E00               	movlw	0
  4687  005842  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4688                           
  4689                           ; BSR set to: 0
  4690                           ;ui.c: 60: };ui.c: 61: break;
  4691  005844  0012               	return	
  4692  005846                     
  4693                           ; BSR set to: 0
  4694                           ;ui.c: 64: if(os.buttonCount>0)
  4695                           
  4696                           ; BSR set to: 0
  4697  005846  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4698  005848  0A80               	xorlw	128
  4699  00584A  0F7F               	addlw	-129
  4700  00584C  A0D8               	btfss	status,0,c
  4701  00584E  0012               	return	
  4702                           
  4703                           ; BSR set to: 0
  4704                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4705  005850  0E60               	movlw	96
  4706  005852  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4707                           
  4708                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4709  005854  0E60               	movlw	96
  4710  005856  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4711                           
  4712                           ;ui.c: 68: os.buttonCount = 0;
  4713  005858  0E00               	movlw	0
  4714  00585A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4715                           
  4716                           ; BSR set to: 0
  4717                           ;ui.c: 69: };ui.c: 70: break;
  4718  00585C  0012               	return	
  4719  00585E                     
  4720                           ; BSR set to: 0
  4721                           ;ui.c: 73: if(os.buttonCount>0)
  4722                           
  4723                           ; BSR set to: 0
  4724  00585E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4725  005860  0A80               	xorlw	128
  4726  005862  0F7F               	addlw	-129
  4727  005864  A0D8               	btfss	status,0,c
  4728  005866  0012               	return	
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4732  005868  0E00               	movlw	0
  4733  00586A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4734                           
  4735                           ; BSR set to: 0
  4736                           ;ui.c: 76: };ui.c: 77: break;
  4737  00586C  0012               	return	
  4738  00586E                     
  4739                           ; BSR set to: 0
  4740                           ;ui.c: 80: if(os.buttonCount>0)
  4741                           
  4742                           ; BSR set to: 0
  4743  00586E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4744  005870  0A80               	xorlw	128
  4745  005872  0F7F               	addlw	-129
  4746  005874  A0D8               	btfss	status,0,c
  4747  005876  0012               	return	
  4748                           
  4749                           ; BSR set to: 0
  4750                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4751  005878  0E01               	movlw	1
  4752  00587A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4753  00587C  0E00               	movlw	0
  4754  00587E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4755  005880  0E78               	movlw	120
  4756  005882  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4757  005884  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
  4758                           
  4759                           ;ui.c: 83: system_delay_ms(10);
  4760  005888  0E0A               	movlw	10
  4761  00588A  ECC3  F045         	call	_system_delay_ms
  4762                           
  4763                           ;ui.c: 84: reboot();
  4764  00588E  ECB1  F046         	call	_reboot	;wreg free
  4765                           
  4766                           ;ui.c: 87: }
  4767                           
  4768                           ;ui.c: 85: };ui.c: 86: break;
  4769  005892  0012               	return	
  4770  005894                     l1292:
  4771  005894  0100               	movlb	0	; () banked
  4772  005896  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4773                           
  4774                           ; Switch size 1, requested type "space"
  4775                           ; Number of cases is 8, Range of values is 0 to 112
  4776                           ; switch strategies available:
  4777                           ; Name         Instructions Cycles
  4778                           ; simple_byte           25    13 (average)
  4779                           ;	Chosen strategy is simple_byte
  4780  005898  0A00               	xorlw	0	; case 0
  4781  00589A  B4D8               	btfsc	status,2,c
  4782  00589C  D7A7               	goto	l1293
  4783  00589E  0A10               	xorlw	16	; case 16
  4784  0058A0  B4D8               	btfsc	status,2,c
  4785  0058A2  D7AD               	goto	l1296
  4786  0058A4  0A30               	xorlw	48	; case 32
  4787  0058A6  B4D8               	btfsc	status,2,c
  4788  0058A8  D7B2               	goto	l1298
  4789  0058AA  0A10               	xorlw	16	; case 48
  4790  0058AC  B4D8               	btfsc	status,2,c
  4791  0058AE  D7BB               	goto	l1300
  4792  0058B0  0A70               	xorlw	112	; case 64
  4793  0058B2  B4D8               	btfsc	status,2,c
  4794  0058B4  D7C8               	goto	l1304
  4795  0058B6  0A10               	xorlw	16	; case 80
  4796  0058B8  B4D8               	btfsc	status,2,c
  4797  0058BA  D7BD               	goto	l1302
  4798  0058BC  0A30               	xorlw	48	; case 96
  4799  0058BE  B4D8               	btfsc	status,2,c
  4800  0058C0  D7CE               	goto	l1306
  4801  0058C2  0A10               	xorlw	16	; case 112
  4802  0058C4  A4D8               	btfss	status,2,c
  4803  0058C6  0012               	return	
  4804  0058C8  D7D2               	goto	l1308
  4805  0058CA                     __end_of__ui_encoder:
  4806                           	opt stack 0
  4807                           tblptru	equ	0xFF8
  4808                           tblptrh	equ	0xFF7
  4809                           tblptrl	equ	0xFF6
  4810                           tablat	equ	0xFF5
  4811                           intcon3	equ	0xFF0
  4812                           postinc0	equ	0xFEE
  4813                           wreg	equ	0xFE8
  4814                           postdec1	equ	0xFE5
  4815                           plusw1	equ	0xFE3
  4816                           fsr1h	equ	0xFE2
  4817                           fsr1l	equ	0xFE1
  4818                           plusw2	equ	0xFDB
  4819                           status	equ	0xFD8
  4820                           
  4821 ;; *************** function _timer_pseudo_isr *****************
  4822 ;; Defined at:
  4823 ;;		line 19 in file "os.c"
  4824 ;; Parameters:    Size  Location     Type
  4825 ;;		None
  4826 ;; Auto vars:     Size  Location     Type
  4827 ;;		None
  4828 ;; Return value:  Size  Location     Type
  4829 ;;                  1    wreg      void 
  4830 ;; Registers used:
  4831 ;;		wreg, status,2, status,0
  4832 ;; Tracked objects:
  4833 ;;		On entry : 0/0
  4834 ;;		On exit  : 0/0
  4835 ;;		Unchanged: 0/0
  4836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4837 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4838 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4840 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4841 ;;Total ram usage:        0 bytes
  4842 ;; Hardware stack levels used:    1
  4843 ;; This function calls:
  4844 ;;		Nothing
  4845 ;; This function is called by:
  4846 ;;		_main
  4847 ;; This function uses a non-reentrant model
  4848 ;;
  4849                           
  4850                           	psect	text8
  4851  00874A                     __ptext8:
  4852                           	opt stack 0
  4853  00874A                     _timer_pseudo_isr:
  4854                           	opt stack 30
  4855                           
  4856                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4857                           
  4858                           ;incstack = 0
  4859  00874A  A4F2               	btfss	intcon,2,c	;volatile
  4860  00874C  0012               	return	
  4861                           
  4862                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4863                           
  4864                           ;os.c: 23: {;os.c: 24: return;
  4865  00874E  0ED1               	movlw	209
  4866  008750  6ED7               	movwf	4055,c	;volatile
  4867                           
  4868                           ;os.c: 30: TMR0L = 0x20;
  4869  008752  0E20               	movlw	32
  4870  008754  6ED6               	movwf	4054,c	;volatile
  4871                           
  4872                           ;os.c: 31: ++os.timeSlot;
  4873  008756  0100               	movlb	0	; () banked
  4874  008758  2BC7               	incf	(_os+2)& (0+255),f,b	;volatile
  4875                           
  4876                           ; BSR set to: 0
  4877                           ;os.c: 33: os.done = 0;
  4878  00875A  0E00               	movlw	0
  4879  00875C  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  4880                           
  4881                           ; BSR set to: 0
  4882                           ;os.c: 34: INTCONbits.T0IF = 0;
  4883  00875E  94F2               	bcf	intcon,2,c	;volatile
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4887  008760  A0F0               	btfss	intcon3,0,c	;volatile
  4888  008762  D002               	goto	l1083
  4889                           
  4890                           ; BSR set to: 0
  4891                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4892  008764  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4896  008766  90F0               	bcf	intcon3,0,c	;volatile
  4897  008768                     l1083:
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4901                           
  4902                           ; BSR set to: 0
  4903  008768  A2F0               	btfss	intcon3,1,c	;volatile
  4904  00876A  D003               	goto	l1084
  4905                           
  4906                           ; BSR set to: 0
  4907                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4908  00876C  AC81               	btfss	3969,6,c	;volatile
  4909                           
  4910                           ; BSR set to: 0
  4911                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4912  00876E  07C5               	decf	_os& (0+255),f,b	;volatile
  4913                           
  4914                           ; BSR set to: 0
  4915                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4916                           
  4917                           ; BSR set to: 0
  4918  008770  92F0               	bcf	intcon3,1,c	;volatile
  4919  008772                     l1084:
  4920                           
  4921                           ; BSR set to: 0
  4922                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4923                           
  4924                           ; BSR set to: 0
  4925  008772  A4F0               	btfss	intcon3,2,c	;volatile
  4926  008774  0012               	return	
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4930  008776  AE81               	btfss	3969,7,c	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4934  008778  2BC5               	incf	_os& (0+255),f,b	;volatile
  4935                           
  4936                           ; BSR set to: 0
  4937                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4938                           
  4939                           ; BSR set to: 0
  4940  00877A  94F0               	bcf	intcon3,2,c	;volatile
  4941  00877C  0012               	return	
  4942  00877E                     __end_of_timer_pseudo_isr:
  4943                           	opt stack 0
  4944                           tblptru	equ	0xFF8
  4945                           tblptrh	equ	0xFF7
  4946                           tblptrl	equ	0xFF6
  4947                           tablat	equ	0xFF5
  4948                           intcon	equ	0xFF2
  4949                           intcon3	equ	0xFF0
  4950                           postinc0	equ	0xFEE
  4951                           wreg	equ	0xFE8
  4952                           postdec1	equ	0xFE5
  4953                           plusw1	equ	0xFE3
  4954                           fsr1h	equ	0xFE2
  4955                           fsr1l	equ	0xFE1
  4956                           plusw2	equ	0xFDB
  4957                           status	equ	0xFD8
  4958                           
  4959 ;; *************** function _system_minimal_init_undo *****************
  4960 ;; Defined at:
  4961 ;;		line 157 in file "os.c"
  4962 ;; Parameters:    Size  Location     Type
  4963 ;;		None
  4964 ;; Auto vars:     Size  Location     Type
  4965 ;;		None
  4966 ;; Return value:  Size  Location     Type
  4967 ;;                  1    wreg      void 
  4968 ;; Registers used:
  4969 ;;		wreg, status,2, cstack
  4970 ;; Tracked objects:
  4971 ;;		On entry : 0/0
  4972 ;;		On exit  : 0/0
  4973 ;;		Unchanged: 0/0
  4974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4975 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4976 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4977 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4978 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4979 ;;Total ram usage:        0 bytes
  4980 ;; Hardware stack levels used:    1
  4981 ;; Hardware stack levels required when called:    1
  4982 ;; This function calls:
  4983 ;;		_i2c_reset
  4984 ;; This function is called by:
  4985 ;;		_main
  4986 ;; This function uses a non-reentrant model
  4987 ;;
  4988                           
  4989                           	psect	text9
  4990  008E86                     __ptext9:
  4991                           	opt stack 0
  4992  008E86                     _system_minimal_init_undo:
  4993                           	opt stack 29
  4994                           
  4995                           ;os.c: 160: i2c_reset();
  4996                           
  4997                           ;incstack = 0
  4998  008E86  EC5B  F047         	call	_i2c_reset	;wreg free
  4999                           
  5000                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  5001  008E8A  8092               	bsf	3986,0,c	;volatile
  5002                           
  5003                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  5004  008E8C  010F               	movlb	15	; () banked
  5005  008E8E  9148               	bcf	72,0,b	;volatile
  5006                           
  5007                           ; BSR set to: 15
  5008                           ;os.c: 167: LATCbits.LC2 = 0;
  5009  008E90  948B               	bcf	3979,2,c	;volatile
  5010                           
  5011                           ; BSR set to: 15
  5012                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  5013  008E92  8494               	bsf	3988,2,c	;volatile
  5014                           
  5015                           ; BSR set to: 15
  5016  008E94  0012               	return		;funcret
  5017  008E96                     __end_of_system_minimal_init_undo:
  5018                           	opt stack 0
  5019                           tblptru	equ	0xFF8
  5020                           tblptrh	equ	0xFF7
  5021                           tblptrl	equ	0xFF6
  5022                           tablat	equ	0xFF5
  5023                           intcon	equ	0xFF2
  5024                           intcon3	equ	0xFF0
  5025                           postinc0	equ	0xFEE
  5026                           wreg	equ	0xFE8
  5027                           postdec1	equ	0xFE5
  5028                           plusw1	equ	0xFE3
  5029                           fsr1h	equ	0xFE2
  5030                           fsr1l	equ	0xFE1
  5031                           plusw2	equ	0xFDB
  5032                           status	equ	0xFD8
  5033                           
  5034 ;; *************** function _i2c_reset *****************
  5035 ;; Defined at:
  5036 ;;		line 110 in file "i2c.c"
  5037 ;; Parameters:    Size  Location     Type
  5038 ;;		None
  5039 ;; Auto vars:     Size  Location     Type
  5040 ;;		None
  5041 ;; Return value:  Size  Location     Type
  5042 ;;                  1    wreg      void 
  5043 ;; Registers used:
  5044 ;;		wreg, status,2
  5045 ;; Tracked objects:
  5046 ;;		On entry : 0/0
  5047 ;;		On exit  : 0/0
  5048 ;;		Unchanged: 0/0
  5049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5050 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5053 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5054 ;;Total ram usage:        0 bytes
  5055 ;; Hardware stack levels used:    1
  5056 ;; This function calls:
  5057 ;;		Nothing
  5058 ;; This function is called by:
  5059 ;;		_system_minimal_init_undo
  5060 ;; This function uses a non-reentrant model
  5061 ;;
  5062                           
  5063                           	psect	text10
  5064  008EB6                     __ptext10:
  5065                           	opt stack 0
  5066  008EB6                     _i2c_reset:
  5067                           	opt stack 29
  5068                           
  5069                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  5070                           
  5071                           ; BSR set to: 15
  5072                           ;incstack = 0
  5073  008EB6  9EC7               	bcf	4039,7,c	;volatile
  5074                           
  5075                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  5076  008EB8  9CC7               	bcf	4039,6,c	;volatile
  5077                           
  5078                           ;i2c.c: 114: SSP1CON1 = 0x00;
  5079  008EBA  0E00               	movlw	0
  5080  008EBC  6EC6               	movwf	4038,c	;volatile
  5081                           
  5082                           ;i2c.c: 115: SSP1ADD = 0x00;
  5083  008EBE  0E00               	movlw	0
  5084  008EC0  6EC8               	movwf	4040,c	;volatile
  5085  008EC2  0012               	return		;funcret
  5086  008EC4                     __end_of_i2c_reset:
  5087                           	opt stack 0
  5088                           tblptru	equ	0xFF8
  5089                           tblptrh	equ	0xFF7
  5090                           tblptrl	equ	0xFF6
  5091                           tablat	equ	0xFF5
  5092                           intcon	equ	0xFF2
  5093                           intcon3	equ	0xFF0
  5094                           postinc0	equ	0xFEE
  5095                           wreg	equ	0xFE8
  5096                           postdec1	equ	0xFE5
  5097                           plusw1	equ	0xFE3
  5098                           fsr1h	equ	0xFE2
  5099                           fsr1l	equ	0xFE1
  5100                           plusw2	equ	0xFDB
  5101                           status	equ	0xFD8
  5102                           
  5103 ;; *************** function _system_minimal_init *****************
  5104 ;; Defined at:
  5105 ;;		line 139 in file "os.c"
  5106 ;; Parameters:    Size  Location     Type
  5107 ;;		None
  5108 ;; Auto vars:     Size  Location     Type
  5109 ;;		None
  5110 ;; Return value:  Size  Location     Type
  5111 ;;                  1    wreg      void 
  5112 ;; Registers used:
  5113 ;;		wreg, status,2, status,0, cstack
  5114 ;; Tracked objects:
  5115 ;;		On entry : 0/0
  5116 ;;		On exit  : 0/0
  5117 ;;		Unchanged: 0/0
  5118 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5119 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5120 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5121 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5122 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5123 ;;Total ram usage:        0 bytes
  5124 ;; Hardware stack levels used:    1
  5125 ;; Hardware stack levels required when called:    2
  5126 ;; This function calls:
  5127 ;;		_i2c_init
  5128 ;;		_system_delay_ms
  5129 ;; This function is called by:
  5130 ;;		_main
  5131 ;; This function uses a non-reentrant model
  5132 ;;
  5133                           
  5134                           	psect	text11
  5135  008DC4                     __ptext11:
  5136                           	opt stack 0
  5137  008DC4                     _system_minimal_init:
  5138                           	opt stack 28
  5139                           
  5140                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  5141                           
  5142                           ;incstack = 0
  5143  008DC4  9494               	bcf	3988,2,c	;volatile
  5144                           
  5145                           ;os.c: 143: LATCbits.LC2 = 1;
  5146  008DC6  848B               	bsf	3979,2,c	;volatile
  5147                           
  5148                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  5149  008DC8  8092               	bsf	3986,0,c	;volatile
  5150                           
  5151                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  5152  008DCA  010F               	movlb	15	; () banked
  5153  008DCC  8148               	bsf	72,0,b	;volatile
  5154                           
  5155                           ; BSR set to: 15
  5156                           ;os.c: 150: i2c_init();
  5157  008DCE  EC69  F047         	call	_i2c_init	;wreg free
  5158                           
  5159                           ;os.c: 153: system_delay_ms(50);
  5160  008DD2  0E32               	movlw	50
  5161  008DD4  ECC3  F045         	call	_system_delay_ms
  5162  008DD8  0012               	return		;funcret
  5163  008DDA                     __end_of_system_minimal_init:
  5164                           	opt stack 0
  5165                           tblptru	equ	0xFF8
  5166                           tblptrh	equ	0xFF7
  5167                           tblptrl	equ	0xFF6
  5168                           tablat	equ	0xFF5
  5169                           intcon	equ	0xFF2
  5170                           intcon3	equ	0xFF0
  5171                           postinc0	equ	0xFEE
  5172                           wreg	equ	0xFE8
  5173                           postdec1	equ	0xFE5
  5174                           plusw1	equ	0xFE3
  5175                           fsr1h	equ	0xFE2
  5176                           fsr1l	equ	0xFE1
  5177                           plusw2	equ	0xFDB
  5178                           status	equ	0xFD8
  5179                           
  5180 ;; *************** function _i2c_init *****************
  5181 ;; Defined at:
  5182 ;;		line 102 in file "i2c.c"
  5183 ;; Parameters:    Size  Location     Type
  5184 ;;		None
  5185 ;; Auto vars:     Size  Location     Type
  5186 ;;		None
  5187 ;; Return value:  Size  Location     Type
  5188 ;;                  1    wreg      void 
  5189 ;; Registers used:
  5190 ;;		wreg, status,2, status,0, cstack
  5191 ;; Tracked objects:
  5192 ;;		On entry : 0/0
  5193 ;;		On exit  : 0/0
  5194 ;;		Unchanged: 0/0
  5195 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5196 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5197 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5198 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5199 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5200 ;;Total ram usage:        0 bytes
  5201 ;; Hardware stack levels used:    1
  5202 ;; Hardware stack levels required when called:    1
  5203 ;; This function calls:
  5204 ;;		__i2c_open_1
  5205 ;;		_i2c_set_frequency
  5206 ;; This function is called by:
  5207 ;;		_system_minimal_init
  5208 ;; This function uses a non-reentrant model
  5209 ;;
  5210                           
  5211                           	psect	text12
  5212  008ED2                     __ptext12:
  5213                           	opt stack 0
  5214  008ED2                     _i2c_init:
  5215                           	opt stack 28
  5216                           
  5217                           ;i2c.c: 105: _i2c_open_1();
  5218                           
  5219                           ;incstack = 0
  5220  008ED2  ECBE  F046         	call	__i2c_open_1	;wreg free
  5221                           
  5222                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5223  008ED6  0E00               	movlw	0
  5224  008ED8  ECFB  F044         	call	_i2c_set_frequency
  5225  008EDC  0012               	return		;funcret
  5226  008EDE                     __end_of_i2c_init:
  5227                           	opt stack 0
  5228                           tblptru	equ	0xFF8
  5229                           tblptrh	equ	0xFF7
  5230                           tblptrl	equ	0xFF6
  5231                           tablat	equ	0xFF5
  5232                           intcon	equ	0xFF2
  5233                           intcon3	equ	0xFF0
  5234                           postinc0	equ	0xFEE
  5235                           wreg	equ	0xFE8
  5236                           postdec1	equ	0xFE5
  5237                           plusw1	equ	0xFE3
  5238                           fsr1h	equ	0xFE2
  5239                           fsr1l	equ	0xFE1
  5240                           plusw2	equ	0xFDB
  5241                           status	equ	0xFD8
  5242                           
  5243 ;; *************** function __i2c_open_1 *****************
  5244 ;; Defined at:
  5245 ;;		line 36 in file "i2c.c"
  5246 ;; Parameters:    Size  Location     Type
  5247 ;;		None
  5248 ;; Auto vars:     Size  Location     Type
  5249 ;;		None
  5250 ;; Return value:  Size  Location     Type
  5251 ;;                  1    wreg      void 
  5252 ;; Registers used:
  5253 ;;		wreg, status,2
  5254 ;; Tracked objects:
  5255 ;;		On entry : 0/0
  5256 ;;		On exit  : 0/0
  5257 ;;		Unchanged: 0/0
  5258 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5259 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5260 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5261 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5262 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5263 ;;Total ram usage:        0 bytes
  5264 ;; Hardware stack levels used:    1
  5265 ;; This function calls:
  5266 ;;		Nothing
  5267 ;; This function is called by:
  5268 ;;		_i2c_init
  5269 ;; This function uses a non-reentrant model
  5270 ;;
  5271                           
  5272                           	psect	text13
  5273  008D7C                     __ptext13:
  5274                           	opt stack 0
  5275  008D7C                     __i2c_open_1:
  5276                           	opt stack 28
  5277                           
  5278                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5279                           
  5280                           ;incstack = 0
  5281  008D7C  9EC7               	bcf	4039,7,c	;volatile
  5282                           
  5283                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5284  008D7E  9CC7               	bcf	4039,6,c	;volatile
  5285                           
  5286                           ;i2c.c: 40: SSP1ADD = 29;
  5287  008D80  0E1D               	movlw	29
  5288  008D82  6EC8               	movwf	4040,c	;volatile
  5289                           
  5290                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5291  008D84  9EC6               	bcf	4038,7,c	;volatile
  5292                           
  5293                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5294  008D86  9CC6               	bcf	4038,6,c	;volatile
  5295                           
  5296                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5297  008D88  50C6               	movf	4038,w,c	;volatile
  5298  008D8A  0BF0               	andlw	-16
  5299  008D8C  0908               	iorlw	8
  5300  008D8E  6EC6               	movwf	4038,c	;volatile
  5301                           
  5302                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5303  008D90  8AC6               	bsf	4038,5,c	;volatile
  5304  008D92  0012               	return		;funcret
  5305  008D94                     __end_of__i2c_open_1:
  5306                           	opt stack 0
  5307                           tblptru	equ	0xFF8
  5308                           tblptrh	equ	0xFF7
  5309                           tblptrl	equ	0xFF6
  5310                           tablat	equ	0xFF5
  5311                           intcon	equ	0xFF2
  5312                           intcon3	equ	0xFF0
  5313                           postinc0	equ	0xFEE
  5314                           wreg	equ	0xFE8
  5315                           postdec1	equ	0xFE5
  5316                           plusw1	equ	0xFE3
  5317                           fsr1h	equ	0xFE2
  5318                           fsr1l	equ	0xFE1
  5319                           plusw2	equ	0xFDB
  5320                           status	equ	0xFD8
  5321                           
  5322 ;; *************** function _system_full_init *****************
  5323 ;; Defined at:
  5324 ;;		line 172 in file "os.c"
  5325 ;; Parameters:    Size  Location     Type
  5326 ;;		None
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;		None
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  1    wreg      void 
  5331 ;; Registers used:
  5332 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5338 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5339 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5341 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5342 ;;Total ram usage:        0 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    7
  5345 ;; This function calls:
  5346 ;;		__system_encoder_init
  5347 ;;		__system_timer0_init
  5348 ;;		_fat_init
  5349 ;;		_flash_init
  5350 ;;		_ui_init
  5351 ;; This function is called by:
  5352 ;;		_main
  5353 ;; This function uses a non-reentrant model
  5354 ;;
  5355                           
  5356                           	psect	text14
  5357  007C6E                     __ptext14:
  5358                           	opt stack 0
  5359  007C6E                     _system_full_init:
  5360                           	opt stack 23
  5361                           
  5362                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5363                           
  5364                           ;incstack = 0
  5365  007C6E  9095               	bcf	3989,0,c	;volatile
  5366                           
  5367                           ;os.c: 180: LATDbits.LD0 = 0;
  5368  007C70  908C               	bcf	3980,0,c	;volatile
  5369                           
  5370                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5371  007C72  9695               	bcf	3989,3,c	;volatile
  5372                           
  5373                           ;os.c: 184: LATDbits.LD3 = 0;
  5374  007C74  968C               	bcf	3980,3,c	;volatile
  5375                           
  5376                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5377  007C76  9295               	bcf	3989,1,c	;volatile
  5378                           
  5379                           ;os.c: 188: LATDbits.LD1 = 0;
  5380  007C78  928C               	bcf	3980,1,c	;volatile
  5381                           
  5382                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5383  007C7A  9293               	bcf	3987,1,c	;volatile
  5384                           
  5385                           ;os.c: 192: LATBbits.LB1 = 0;
  5386  007C7C  928A               	bcf	3978,1,c	;volatile
  5387                           
  5388                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5389  007C7E  9493               	bcf	3987,2,c	;volatile
  5390                           
  5391                           ;os.c: 196: LATBbits.LB2 = 0;
  5392  007C80  948A               	bcf	3978,2,c	;volatile
  5393                           
  5394                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5395  007C82  9693               	bcf	3987,3,c	;volatile
  5396                           
  5397                           ;os.c: 198: LATBbits.LB3 = 0;
  5398  007C84  968A               	bcf	3978,3,c	;volatile
  5399                           
  5400                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5401  007C86  8C95               	bsf	3989,6,c	;volatile
  5402                           
  5403                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5404  007C88  9895               	bcf	3989,4,c	;volatile
  5405                           
  5406                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5407  007C8A  9A95               	bcf	3989,5,c	;volatile
  5408                           
  5409                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5410  007C8C  9E95               	bcf	3989,7,c	;volatile
  5411                           
  5412                           ;os.c: 205: LATDbits.LD7 = 1;
  5413  007C8E  8E8C               	bsf	3980,7,c	;volatile
  5414                           
  5415                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5416  007C90  8495               	bsf	3989,2,c	;volatile
  5417                           
  5418                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5419  007C92  9E94               	bcf	3988,7,c	;volatile
  5420                           
  5421                           ;os.c: 210: LATCbits.LC7 = 0;
  5422  007C94  9E8B               	bcf	3979,7,c	;volatile
  5423                           
  5424                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5425  007C96  9496               	bcf	3990,2,c	;volatile
  5426                           
  5427                           ;os.c: 214: LATEbits.LE2 = 1;
  5428  007C98  848D               	bsf	3981,2,c	;volatile
  5429                           
  5430                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5431  007C9A  9296               	bcf	3990,1,c	;volatile
  5432                           
  5433                           ;os.c: 216: LATEbits.LE1 = 1;
  5434  007C9C  828D               	bsf	3981,1,c	;volatile
  5435                           
  5436                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5437  007C9E  9096               	bcf	3990,0,c	;volatile
  5438                           
  5439                           ;os.c: 218: LATEbits.LE0 = 1;
  5440  007CA0  808D               	bsf	3981,0,c	;volatile
  5441                           
  5442                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5443  007CA2  9A92               	bcf	3986,5,c	;volatile
  5444                           
  5445                           ;os.c: 220: LATAbits.LA5 = 1;
  5446  007CA4  8A89               	bsf	3977,5,c	;volatile
  5447                           
  5448                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5449  007CA6  8E93               	bsf	3987,7,c	;volatile
  5450                           
  5451                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5452  007CA8  8C93               	bsf	3987,6,c	;volatile
  5453                           
  5454                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5455  007CAA  0E10               	movlw	16
  5456  007CAC  0100               	movlb	0	; () banked
  5457  007CAE  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5458                           
  5459                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5460  007CB0  0E00               	movlw	0
  5461  007CB2  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5462                           
  5463                           ; BSR set to: 0
  5464                           ;os.c: 231: flash_init();
  5465  007CB4  EC97  F046         	call	_flash_init	;wreg free
  5466                           
  5467                           ;os.c: 234: fat_init();
  5468  007CB8  EC4B  F047         	call	_fat_init	;wreg free
  5469                           
  5470                           ;os.c: 237: _system_encoder_init();
  5471  007CBC  EC35  F043         	call	__system_encoder_init	;wreg free
  5472                           
  5473                           ;os.c: 240: ui_init();
  5474  007CC0  EC03  F047         	call	_ui_init	;wreg free
  5475                           
  5476                           ;os.c: 243: _system_timer0_init();
  5477  007CC4  EC3D  F046         	call	__system_timer0_init	;wreg free
  5478  007CC8  0012               	return		;funcret
  5479  007CCA                     __end_of_system_full_init:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           intcon	equ	0xFF2
  5486                           intcon3	equ	0xFF0
  5487                           postinc0	equ	0xFEE
  5488                           wreg	equ	0xFE8
  5489                           postdec1	equ	0xFE5
  5490                           plusw1	equ	0xFE3
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           plusw2	equ	0xFDB
  5494                           status	equ	0xFD8
  5495                           
  5496 ;; *************** function _ui_init *****************
  5497 ;; Defined at:
  5498 ;;		line 101 in file "ui.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, status,2
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; This function calls:
  5519 ;;		Nothing
  5520 ;; This function is called by:
  5521 ;;		_system_full_init
  5522 ;;		_ui_run
  5523 ;; This function uses a non-reentrant model
  5524 ;;
  5525                           
  5526                           	psect	text15
  5527  008E06                     __ptext15:
  5528                           	opt stack 0
  5529  008E06                     _ui_init:
  5530                           	opt stack 29
  5531                           
  5532                           ;ui.c: 103: system_ui_inactive_count = 0;
  5533                           
  5534                           ;incstack = 0
  5535  008E06  0E00               	movlw	0
  5536  008E08  0101               	movlb	1	; () banked
  5537  008E0A  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5538  008E0C  0E00               	movlw	0
  5539  008E0E  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  5540                           
  5541                           ; BSR set to: 1
  5542                           ;ui.c: 105: LATCbits.LC2 = 1;
  5543  008E10  848B               	bsf	3979,2,c	;volatile
  5544                           
  5545                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5546  008E12  0E01               	movlw	1
  5547  008E14  0100               	movlb	0	; () banked
  5548  008E16  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  5549                           
  5550                           ; BSR set to: 0
  5551  008E18  0012               	return		;funcret
  5552  008E1A                     __end_of_ui_init:
  5553                           	opt stack 0
  5554                           tblptru	equ	0xFF8
  5555                           tblptrh	equ	0xFF7
  5556                           tblptrl	equ	0xFF6
  5557                           tablat	equ	0xFF5
  5558                           intcon	equ	0xFF2
  5559                           intcon3	equ	0xFF0
  5560                           postinc0	equ	0xFEE
  5561                           wreg	equ	0xFE8
  5562                           postdec1	equ	0xFE5
  5563                           plusw1	equ	0xFE3
  5564                           fsr1h	equ	0xFE2
  5565                           fsr1l	equ	0xFE1
  5566                           plusw2	equ	0xFDB
  5567                           status	equ	0xFD8
  5568                           
  5569 ;; *************** function _flash_init *****************
  5570 ;; Defined at:
  5571 ;;		line 337 in file "flash.c"
  5572 ;; Parameters:    Size  Location     Type
  5573 ;;		None
  5574 ;; Auto vars:     Size  Location     Type
  5575 ;;		None
  5576 ;; Return value:  Size  Location     Type
  5577 ;;                  1    wreg      void 
  5578 ;; Registers used:
  5579 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5580 ;; Tracked objects:
  5581 ;;		On entry : 0/0
  5582 ;;		On exit  : 0/0
  5583 ;;		Unchanged: 0/0
  5584 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5585 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5586 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5587 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5588 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5589 ;;Total ram usage:        0 bytes
  5590 ;; Hardware stack levels used:    1
  5591 ;; Hardware stack levels required when called:    4
  5592 ;; This function calls:
  5593 ;;		__flash_set_page_size
  5594 ;;		_spi_init
  5595 ;;		_spi_set_configuration
  5596 ;; This function is called by:
  5597 ;;		_system_full_init
  5598 ;; This function uses a non-reentrant model
  5599 ;;
  5600                           
  5601                           	psect	text16
  5602  008D2E                     __ptext16:
  5603                           	opt stack 0
  5604  008D2E                     _flash_init:
  5605                           	opt stack 25
  5606                           
  5607                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5608                           
  5609                           ; BSR set to: 0
  5610                           ;incstack = 0
  5611  008D2E  0E00               	movlw	0
  5612  008D30  ECF9  F042         	call	_spi_init
  5613                           
  5614                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5615  008D34  0E00               	movlw	0
  5616  008D36  EC66  F023         	call	_spi_set_configuration
  5617                           
  5618                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5619  008D3A  0E00               	movlw	0
  5620  008D3C  EC41  F03A         	call	__flash_set_page_size
  5621                           
  5622                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5623  008D40  0E01               	movlw	1
  5624  008D42  EC66  F023         	call	_spi_set_configuration
  5625  008D46  0012               	return		;funcret
  5626  008D48                     __end_of_flash_init:
  5627                           	opt stack 0
  5628                           tblptru	equ	0xFF8
  5629                           tblptrh	equ	0xFF7
  5630                           tblptrl	equ	0xFF6
  5631                           tablat	equ	0xFF5
  5632                           intcon	equ	0xFF2
  5633                           intcon3	equ	0xFF0
  5634                           postinc0	equ	0xFEE
  5635                           wreg	equ	0xFE8
  5636                           postdec1	equ	0xFE5
  5637                           plusw1	equ	0xFE3
  5638                           fsr1h	equ	0xFE2
  5639                           fsr1l	equ	0xFE1
  5640                           plusw2	equ	0xFDB
  5641                           status	equ	0xFD8
  5642                           
  5643 ;; *************** function _spi_init *****************
  5644 ;; Defined at:
  5645 ;;		line 122 in file "spi.c"
  5646 ;; Parameters:    Size  Location     Type
  5647 ;;  configuratio    1    wreg     enum E6749
  5648 ;; Auto vars:     Size  Location     Type
  5649 ;;  configuratio    1    3[COMRAM] enum E6749
  5650 ;; Return value:  Size  Location     Type
  5651 ;;                  1    wreg      void 
  5652 ;; Registers used:
  5653 ;;		wreg, status,2, status,0, cstack
  5654 ;; Tracked objects:
  5655 ;;		On entry : 0/0
  5656 ;;		On exit  : 0/0
  5657 ;;		Unchanged: 0/0
  5658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5659 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5660 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5661 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5662 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5663 ;;Total ram usage:        1 bytes
  5664 ;; Hardware stack levels used:    1
  5665 ;; Hardware stack levels required when called:    1
  5666 ;; This function calls:
  5667 ;;		__spi_init
  5668 ;; This function is called by:
  5669 ;;		_flash_init
  5670 ;; This function uses a non-reentrant model
  5671 ;;
  5672                           
  5673                           	psect	text17
  5674  0085F2                     __ptext17:
  5675                           	opt stack 0
  5676  0085F2                     _spi_init:
  5677                           	opt stack 27
  5678                           
  5679                           ;incstack = 0
  5680                           ;spi_init@configuration stored from wreg
  5681  0085F2  6E04               	movwf	spi_init@configuration,c
  5682                           
  5683                           ;spi.c: 124: switch(configuration)
  5684  0085F4  D012               	goto	l2967
  5685  0085F6                     
  5686                           ;spi.c: 127: _spi_init(config_internal);
  5687  0085F6  C169  F001         	movff	_config_internal,__spi_init@details
  5688  0085FA  C16A  F002         	movff	_config_internal+1,__spi_init@details+1
  5689  0085FE  C16B  F003         	movff	_config_internal+2,__spi_init@details+2
  5690  008602  EC52  F043         	call	__spi_init	;wreg free
  5691                           
  5692                           ;spi.c: 128: break;
  5693  008606  D010               	goto	l2969
  5694  008608                     
  5695                           ;spi.c: 131: _spi_init(config_external);
  5696  008608  C166  F001         	movff	_config_external,__spi_init@details
  5697  00860C  C167  F002         	movff	_config_external+1,__spi_init@details+1
  5698  008610  C168  F003         	movff	_config_external+2,__spi_init@details+2
  5699  008614  EC52  F043         	call	__spi_init	;wreg free
  5700                           
  5701                           ;spi.c: 133: }
  5702                           
  5703                           ;spi.c: 132: break;
  5704  008618  D007               	goto	l2969
  5705  00861A                     l2967:
  5706  00861A  5004               	movf	spi_init@configuration,w,c
  5707                           
  5708                           ; Switch size 1, requested type "space"
  5709                           ; Number of cases is 2, Range of values is 0 to 1
  5710                           ; switch strategies available:
  5711                           ; Name         Instructions Cycles
  5712                           ; simple_byte            7     4 (average)
  5713                           ;	Chosen strategy is simple_byte
  5714  00861C  0A00               	xorlw	0	; case 0
  5715  00861E  B4D8               	btfsc	status,2,c
  5716  008620  D7EA               	goto	l2968
  5717  008622  0A01               	xorlw	1	; case 1
  5718  008624  B4D8               	btfsc	status,2,c
  5719  008626  D7F0               	goto	l2970
  5720  008628                     l2969:
  5721                           
  5722                           ;spi.c: 135: active_configuration = configuration;
  5723  008628  C004  F18A         	movff	spi_init@configuration,_active_configuration
  5724  00862C  0012               	return		;funcret
  5725  00862E                     __end_of_spi_init:
  5726                           	opt stack 0
  5727                           tblptru	equ	0xFF8
  5728                           tblptrh	equ	0xFF7
  5729                           tblptrl	equ	0xFF6
  5730                           tablat	equ	0xFF5
  5731                           intcon	equ	0xFF2
  5732                           intcon3	equ	0xFF0
  5733                           postinc0	equ	0xFEE
  5734                           wreg	equ	0xFE8
  5735                           postdec1	equ	0xFE5
  5736                           plusw1	equ	0xFE3
  5737                           fsr1h	equ	0xFE2
  5738                           fsr1l	equ	0xFE1
  5739                           plusw2	equ	0xFDB
  5740                           status	equ	0xFD8
  5741                           
  5742 ;; *************** function __spi_init *****************
  5743 ;; Defined at:
  5744 ;;		line 25 in file "spi.c"
  5745 ;; Parameters:    Size  Location     Type
  5746 ;;  details         3    0[COMRAM] struct .
  5747 ;; Auto vars:     Size  Location     Type
  5748 ;;		None
  5749 ;; Return value:  Size  Location     Type
  5750 ;;                  1    wreg      void 
  5751 ;; Registers used:
  5752 ;;		wreg, status,2
  5753 ;; Tracked objects:
  5754 ;;		On entry : 0/0
  5755 ;;		On exit  : 0/0
  5756 ;;		Unchanged: 0/0
  5757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5758 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5759 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5760 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5761 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5762 ;;Total ram usage:        3 bytes
  5763 ;; Hardware stack levels used:    1
  5764 ;; This function calls:
  5765 ;;		Nothing
  5766 ;; This function is called by:
  5767 ;;		_spi_init
  5768 ;; This function uses a non-reentrant model
  5769 ;;
  5770                           
  5771                           	psect	text18
  5772  0086A4                     __ptext18:
  5773                           	opt stack 0
  5774  0086A4                     __spi_init:
  5775                           	opt stack 27
  5776                           
  5777                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5778                           
  5779                           ;incstack = 0
  5780  0086A4  0E55               	movlw	85
  5781  0086A6  6EA7               	movwf	4007,c	;volsfr
  5782  0086A8  0EAA               	movlw	170
  5783  0086AA  6EA7               	movwf	4007,c	;volsfr
  5784  0086AC  010E               	movlb	14	; () banked
  5785  0086AE  91BF               	bcf	191,0,b	;volatile
  5786                           
  5787                           ;spi.c: 32: RPINR21 = 23;
  5788  0086B0  0E17               	movlw	23
  5789  0086B2  6FFC               	movwf	252,b	;volatile
  5790                           
  5791                           ;spi.c: 33: RPOR21 = 10;
  5792  0086B4  0E0A               	movlw	10
  5793  0086B6  6FD5               	movwf	213,b	;volatile
  5794                           
  5795                           ;spi.c: 35: RPOR22 = 11;
  5796  0086B8  0E0B               	movlw	11
  5797  0086BA  6FD6               	movwf	214,b	;volatile
  5798                           
  5799                           ;spi.c: 36: RPINR22 = 22;
  5800  0086BC  0E16               	movlw	22
  5801  0086BE  6FFD               	movwf	253,b	;volatile
  5802                           
  5803                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5804  0086C0  0E55               	movlw	85
  5805  0086C2  6EA7               	movwf	4007,c	;volsfr
  5806  0086C4  0EAA               	movlw	170
  5807  0086C6  6EA7               	movwf	4007,c	;volsfr
  5808                           
  5809                           ; BSR set to: 14
  5810  0086C8  81BF               	bsf	191,0,b	;volatile
  5811                           
  5812                           ; BSR set to: 14
  5813                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5814  0086CA  8E73               	bsf	3955,7,c	;volatile
  5815                           
  5816                           ; BSR set to: 14
  5817                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5818  0086CC  8C73               	bsf	3955,6,c	;volatile
  5819                           
  5820                           ; BSR set to: 14
  5821                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5822  0086CE  9872               	bcf	3954,4,c	;volatile
  5823                           
  5824                           ; BSR set to: 14
  5825                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5826  0086D0  9072               	bcf	3954,0,c	;volatile
  5827  0086D2  9272               	bcf	3954,1,c	;volatile
  5828  0086D4  9472               	bcf	3954,2,c	;volatile
  5829  0086D6  9672               	bcf	3954,3,c	;volatile
  5830                           
  5831                           ; BSR set to: 14
  5832                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5833  0086D8  8A72               	bsf	3954,5,c	;volatile
  5834                           
  5835                           ; BSR set to: 14
  5836  0086DA  0012               	return		;funcret
  5837  0086DC                     __end_of__spi_init:
  5838                           	opt stack 0
  5839                           tblptru	equ	0xFF8
  5840                           tblptrh	equ	0xFF7
  5841                           tblptrl	equ	0xFF6
  5842                           tablat	equ	0xFF5
  5843                           intcon	equ	0xFF2
  5844                           intcon3	equ	0xFF0
  5845                           postinc0	equ	0xFEE
  5846                           wreg	equ	0xFE8
  5847                           postdec1	equ	0xFE5
  5848                           plusw1	equ	0xFE3
  5849                           fsr1h	equ	0xFE2
  5850                           fsr1l	equ	0xFE1
  5851                           plusw2	equ	0xFDB
  5852                           status	equ	0xFD8
  5853                           
  5854 ;; *************** function __flash_set_page_size *****************
  5855 ;; Defined at:
  5856 ;;		line 95 in file "flash.c"
  5857 ;; Parameters:    Size  Location     Type
  5858 ;;  size            1    wreg     enum E6898
  5859 ;; Auto vars:     Size  Location     Type
  5860 ;;  size            1   23[COMRAM] enum E6898
  5861 ;;  command         4   19[COMRAM] unsigned char [4]
  5862 ;; Return value:  Size  Location     Type
  5863 ;;                  1    wreg      void 
  5864 ;; Registers used:
  5865 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5866 ;; Tracked objects:
  5867 ;;		On entry : 0/0
  5868 ;;		On exit  : 0/0
  5869 ;;		Unchanged: 0/0
  5870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5871 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5872 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5873 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5874 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5875 ;;Total ram usage:        5 bytes
  5876 ;; Hardware stack levels used:    1
  5877 ;; Hardware stack levels required when called:    3
  5878 ;; This function calls:
  5879 ;;		__flash_is_busy
  5880 ;;		_memcpy
  5881 ;;		_spi_tx
  5882 ;; This function is called by:
  5883 ;;		_flash_init
  5884 ;; This function uses a non-reentrant model
  5885 ;;
  5886                           
  5887                           	psect	text19
  5888  007482                     __ptext19:
  5889                           	opt stack 0
  5890  007482                     __flash_set_page_size:
  5891                           	opt stack 25
  5892                           
  5893                           ; BSR set to: 14
  5894                           ;incstack = 0
  5895                           ;__flash_set_page_size@size stored from wreg
  5896  007482  6E18               	movwf	__flash_set_page_size@size,c
  5897  007484                     
  5898                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5899  007484  EC2C  F046         	call	__flash_is_busy	;wreg free
  5900  007488  0900               	iorlw	0
  5901  00748A  A4D8               	btfss	status,2,c
  5902  00748C  D7FB               	goto	l14211
  5903                           
  5904                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5905  00748E  5018               	movf	__flash_set_page_size@size,w,c
  5906  007490  A4D8               	btfss	status,2,c
  5907  007492  D013               	goto	l1741
  5908                           
  5909                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5910  007494  0E14               	movlw	low __flash_set_page_size@command
  5911  007496  6E01               	movwf	memcpy@d1,c
  5912  007498  0E00               	movlw	high __flash_set_page_size@command
  5913  00749A  6E02               	movwf	memcpy@d1+1,c
  5914  00749C  0EC4               	movlw	low _flash_command_pagesize_512
  5915  00749E  6E03               	movwf	memcpy@s1,c
  5916  0074A0  0E9F               	movlw	high _flash_command_pagesize_512
  5917  0074A2  6E04               	movwf	memcpy@s1+1,c
  5918  0074A4  5003               	movf	memcpy@s1,w,c
  5919  0074A6  1004               	iorwf	memcpy@s1+1,w,c
  5920  0074A8  A4D8               	btfss	status,2,c
  5921  0074AA  0E00               	movlw	low (__mediumconst shr (0+16))
  5922  0074AC  6E05               	movwf	memcpy@s1+2,c
  5923  0074AE  0E00               	movlw	0
  5924  0074B0  6E07               	movwf	memcpy@n+1,c
  5925  0074B2  0E04               	movlw	4
  5926  0074B4  6E06               	movwf	memcpy@n,c
  5927  0074B6  ECE1  F03C         	call	_memcpy	;wreg free
  5928  0074BA                     l1741:
  5929                           
  5930                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5931  0074BA  0418               	decf	__flash_set_page_size@size,w,c
  5932  0074BC  A4D8               	btfss	status,2,c
  5933  0074BE  D013               	goto	l1742
  5934                           
  5935                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5936  0074C0  0E14               	movlw	low __flash_set_page_size@command
  5937  0074C2  6E01               	movwf	memcpy@d1,c
  5938  0074C4  0E00               	movlw	high __flash_set_page_size@command
  5939  0074C6  6E02               	movwf	memcpy@d1+1,c
  5940  0074C8  0EC0               	movlw	low _flash_command_pagesize_528
  5941  0074CA  6E03               	movwf	memcpy@s1,c
  5942  0074CC  0E9F               	movlw	high _flash_command_pagesize_528
  5943  0074CE  6E04               	movwf	memcpy@s1+1,c
  5944  0074D0  5003               	movf	memcpy@s1,w,c
  5945  0074D2  1004               	iorwf	memcpy@s1+1,w,c
  5946  0074D4  A4D8               	btfss	status,2,c
  5947  0074D6  0E00               	movlw	low (__mediumconst shr (0+16))
  5948  0074D8  6E05               	movwf	memcpy@s1+2,c
  5949  0074DA  0E00               	movlw	0
  5950  0074DC  6E07               	movwf	memcpy@n+1,c
  5951  0074DE  0E04               	movlw	4
  5952  0074E0  6E06               	movwf	memcpy@n,c
  5953  0074E2  ECE1  F03C         	call	_memcpy	;wreg free
  5954  0074E6                     l1742:
  5955                           
  5956                           ;flash.c: 109: spi_tx(command, 4);
  5957  0074E6  0E14               	movlw	low __flash_set_page_size@command
  5958  0074E8  6E01               	movwf	spi_tx@data,c
  5959  0074EA  0E00               	movlw	high __flash_set_page_size@command
  5960  0074EC  6E02               	movwf	spi_tx@data+1,c
  5961  0074EE  0E00               	movlw	0
  5962  0074F0  6E04               	movwf	spi_tx@length+1,c
  5963  0074F2  0E04               	movlw	4
  5964  0074F4  6E03               	movwf	spi_tx@length,c
  5965  0074F6  EC16  F03F         	call	_spi_tx	;wreg free
  5966  0074FA  0012               	return		;funcret
  5967  0074FC                     __end_of__flash_set_page_size:
  5968                           	opt stack 0
  5969                           tblptru	equ	0xFF8
  5970                           tblptrh	equ	0xFF7
  5971                           tblptrl	equ	0xFF6
  5972                           tablat	equ	0xFF5
  5973                           intcon	equ	0xFF2
  5974                           intcon3	equ	0xFF0
  5975                           postinc0	equ	0xFEE
  5976                           wreg	equ	0xFE8
  5977                           postdec1	equ	0xFE5
  5978                           plusw1	equ	0xFE3
  5979                           fsr1h	equ	0xFE2
  5980                           fsr1l	equ	0xFE1
  5981                           plusw2	equ	0xFDB
  5982                           status	equ	0xFD8
  5983                           
  5984 ;; *************** function _fat_init *****************
  5985 ;; Defined at:
  5986 ;;		line 1317 in file "fat16.c"
  5987 ;; Parameters:    Size  Location     Type
  5988 ;;		None
  5989 ;; Auto vars:     Size  Location     Type
  5990 ;;		None
  5991 ;; Return value:  Size  Location     Type
  5992 ;;                  1    wreg      void 
  5993 ;; Registers used:
  5994 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5995 ;; Tracked objects:
  5996 ;;		On entry : 0/0
  5997 ;;		On exit  : 0/0
  5998 ;;		Unchanged: 0/0
  5999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6000 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6003 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6004 ;;Total ram usage:        0 bytes
  6005 ;; Hardware stack levels used:    1
  6006 ;; Hardware stack levels required when called:    6
  6007 ;; This function calls:
  6008 ;;		_fat_format
  6009 ;;		_fat_get_format_status
  6010 ;; This function is called by:
  6011 ;;		_system_full_init
  6012 ;; This function uses a non-reentrant model
  6013 ;;
  6014                           
  6015                           	psect	text20
  6016  008E96                     __ptext20:
  6017                           	opt stack 0
  6018  008E96                     _fat_init:
  6019                           	opt stack 23
  6020                           
  6021                           ;fat16.c: 1320: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6022                           
  6023                           ;incstack = 0
  6024  008E96  ECEA  F033         	call	_fat_get_format_status	;wreg free
  6025  008E9A  0900               	iorlw	0
  6026  008E9C  A4D8               	btfss	status,2,c
  6027  008E9E  0012               	return	
  6028                           
  6029                           ;fat16.c: 1321: {;fat16.c: 1322: fat_format();
  6030  008EA0  EC81  F014         	call	_fat_format	;wreg free
  6031  008EA4  0012               	return	
  6032  008EA6                     __end_of_fat_init:
  6033                           	opt stack 0
  6034                           tblptru	equ	0xFF8
  6035                           tblptrh	equ	0xFF7
  6036                           tblptrl	equ	0xFF6
  6037                           tablat	equ	0xFF5
  6038                           intcon	equ	0xFF2
  6039                           intcon3	equ	0xFF0
  6040                           postinc0	equ	0xFEE
  6041                           wreg	equ	0xFE8
  6042                           postdec1	equ	0xFE5
  6043                           plusw1	equ	0xFE3
  6044                           fsr1h	equ	0xFE2
  6045                           fsr1l	equ	0xFE1
  6046                           plusw2	equ	0xFDB
  6047                           status	equ	0xFD8
  6048                           
  6049 ;; *************** function _fat_get_format_status *****************
  6050 ;; Defined at:
  6051 ;;		line 1229 in file "fat16.c"
  6052 ;; Parameters:    Size  Location     Type
  6053 ;;		None
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  cntr            2   45[COMRAM] unsigned int 
  6056 ;; Return value:  Size  Location     Type
  6057 ;;                  1    wreg      enum E6872
  6058 ;; Registers used:
  6059 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6060 ;; Tracked objects:
  6061 ;;		On entry : 0/0
  6062 ;;		On exit  : 0/0
  6063 ;;		Unchanged: 0/0
  6064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6066 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6067 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6068 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6069 ;;Total ram usage:        4 bytes
  6070 ;; Hardware stack levels used:    1
  6071 ;; Hardware stack levels required when called:    5
  6072 ;; This function calls:
  6073 ;;		__get_fbr
  6074 ;;		__get_mbr
  6075 ;;		_flash_sector_read
  6076 ;; This function is called by:
  6077 ;;		_fat_init
  6078 ;; This function uses a non-reentrant model
  6079 ;;
  6080                           
  6081                           	psect	text21
  6082  0067D4                     __ptext21:
  6083                           	opt stack 0
  6084  0067D4                     _fat_get_format_status:
  6085                           	opt stack 23
  6086                           
  6087                           ;fat16.c: 1231: uint16_t cntr;;fat16.c: 1234: flash_sector_read(0, buffer);
  6088                           
  6089                           ;incstack = 0
  6090  0067D4  0E00               	movlw	0
  6091  0067D6  6E29               	movwf	flash_sector_read@page+1,c
  6092  0067D8  0E00               	movlw	0
  6093  0067DA  6E28               	movwf	flash_sector_read@page,c
  6094  0067DC  0EC0               	movlw	low _buffer
  6095  0067DE  6E2A               	movwf	flash_sector_read@data,c
  6096  0067E0  0E03               	movlw	high _buffer
  6097  0067E2  6E2B               	movwf	flash_sector_read@data+1,c
  6098  0067E4  EC3F  F044         	call	_flash_sector_read	;wreg free
  6099                           
  6100                           ;fat16.c: 1235: for(cntr=0; cntr<512; ++cntr)
  6101  0067E8  0E00               	movlw	0
  6102  0067EA  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6103  0067EC  0E00               	movlw	0
  6104  0067EE  6E2E               	movwf	fat_get_format_status@cntr,c
  6105  0067F0                     l14239:
  6106  0067F0  0E02               	movlw	2
  6107  0067F2  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6108  0067F4  B0D8               	btfsc	status,0,c
  6109  0067F6  D016               	goto	u11290
  6110                           
  6111                           ;fat16.c: 1236: {;fat16.c: 1237: if(buffer[cntr] != _get_mbr(cntr))
  6112  0067F8  0EC0               	movlw	low _buffer
  6113  0067FA  242E               	addwf	fat_get_format_status@cntr,w,c
  6114  0067FC  6ED9               	movwf	fsr2l,c
  6115  0067FE  0E03               	movlw	high _buffer
  6116  006800  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6117  006802  6EDA               	movwf	fsr2h,c
  6118  006804  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6119  006808  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6120  00680C  EC7D  F02E         	call	__get_mbr	;wreg free
  6121  006810  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6122  006812  50DE               	movf	postinc2,w,c
  6123  006814  182D               	xorwf	??_fat_get_format_status+1,w,c
  6124  006816  B4D8               	btfsc	status,2,c
  6125  006818  D002               	goto	l2244
  6126                           
  6127                           ;fat16.c: 1238: {;fat16.c: 1239: return DRIVE_NOT_FORMATED;
  6128  00681A  0E00               	movlw	0
  6129  00681C  0012               	return	
  6130  00681E                     l2244:
  6131  00681E  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6132  006820  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6133  006822  D7E6               	goto	l14239
  6134  006824                     u11290:
  6135                           
  6136                           ;fat16.c: 1240: };fat16.c: 1241: };fat16.c: 1244: flash_sector_read(1, buffer);
  6137  006824  0E00               	movlw	0
  6138  006826  6E29               	movwf	flash_sector_read@page+1,c
  6139  006828  0E01               	movlw	1
  6140  00682A  6E28               	movwf	flash_sector_read@page,c
  6141  00682C  0EC0               	movlw	low _buffer
  6142  00682E  6E2A               	movwf	flash_sector_read@data,c
  6143  006830  0E03               	movlw	high _buffer
  6144  006832  6E2B               	movwf	flash_sector_read@data+1,c
  6145  006834  EC3F  F044         	call	_flash_sector_read	;wreg free
  6146                           
  6147                           ;fat16.c: 1245: for(cntr=0; cntr<512; ++cntr)
  6148  006838  0E00               	movlw	0
  6149  00683A  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6150  00683C  0E00               	movlw	0
  6151  00683E  6E2E               	movwf	fat_get_format_status@cntr,c
  6152  006840                     l14257:
  6153  006840  0E02               	movlw	2
  6154  006842  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6155  006844  B0D8               	btfsc	status,0,c
  6156  006846  D016               	goto	u11320
  6157                           
  6158                           ;fat16.c: 1246: {;fat16.c: 1247: if(buffer[cntr] != _get_fbr(cntr))
  6159  006848  0EC0               	movlw	low _buffer
  6160  00684A  242E               	addwf	fat_get_format_status@cntr,w,c
  6161  00684C  6ED9               	movwf	fsr2l,c
  6162  00684E  0E03               	movlw	high _buffer
  6163  006850  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6164  006852  6EDA               	movwf	fsr2h,c
  6165  006854  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6166  006858  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6167  00685C  ECE6  F00E         	call	__get_fbr	;wreg free
  6168  006860  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6169  006862  50DE               	movf	postinc2,w,c
  6170  006864  182D               	xorwf	??_fat_get_format_status+1,w,c
  6171  006866  B4D8               	btfsc	status,2,c
  6172  006868  D002               	goto	l2248
  6173                           
  6174                           ;fat16.c: 1248: {;fat16.c: 1249: return DRIVE_NOT_FORMATED;
  6175  00686A  0E00               	movlw	0
  6176  00686C  0012               	return	
  6177  00686E                     l2248:
  6178  00686E  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6179  006870  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6180  006872  D7E6               	goto	l14257
  6181  006874                     u11320:
  6182                           
  6183                           ;fat16.c: 1250: };fat16.c: 1251: };fat16.c: 1254: return DRIVE_FORMATED;
  6184  006874  0E01               	movlw	1
  6185  006876  0012               	return	
  6186  006878                     __end_of_fat_get_format_status:
  6187                           	opt stack 0
  6188                           tblptru	equ	0xFF8
  6189                           tblptrh	equ	0xFF7
  6190                           tblptrl	equ	0xFF6
  6191                           tablat	equ	0xFF5
  6192                           intcon	equ	0xFF2
  6193                           intcon3	equ	0xFF0
  6194                           postinc0	equ	0xFEE
  6195                           wreg	equ	0xFE8
  6196                           postdec1	equ	0xFE5
  6197                           plusw1	equ	0xFE3
  6198                           fsr1h	equ	0xFE2
  6199                           fsr1l	equ	0xFE1
  6200                           postinc2	equ	0xFDE
  6201                           plusw2	equ	0xFDB
  6202                           fsr2h	equ	0xFDA
  6203                           fsr2l	equ	0xFD9
  6204                           status	equ	0xFD8
  6205                           
  6206 ;; *************** function __system_timer0_init *****************
  6207 ;; Defined at:
  6208 ;;		line 112 in file "os.c"
  6209 ;; Parameters:    Size  Location     Type
  6210 ;;		None
  6211 ;; Auto vars:     Size  Location     Type
  6212 ;;		None
  6213 ;; Return value:  Size  Location     Type
  6214 ;;                  1    wreg      void 
  6215 ;; Registers used:
  6216 ;;		wreg, status,2
  6217 ;; Tracked objects:
  6218 ;;		On entry : 0/0
  6219 ;;		On exit  : 0/0
  6220 ;;		Unchanged: 0/0
  6221 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6222 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6223 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6224 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6225 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6226 ;;Total ram usage:        0 bytes
  6227 ;; Hardware stack levels used:    1
  6228 ;; This function calls:
  6229 ;;		Nothing
  6230 ;; This function is called by:
  6231 ;;		_system_full_init
  6232 ;; This function uses a non-reentrant model
  6233 ;;
  6234                           
  6235                           	psect	text22
  6236  008C7A                     __ptext22:
  6237                           	opt stack 0
  6238  008C7A                     __system_timer0_init:
  6239                           	opt stack 29
  6240                           
  6241                           ;os.c: 115: T0CONbits.T0CS = 0;
  6242                           
  6243                           ;incstack = 0
  6244  008C7A  9AD5               	bcf	4053,5,c	;volatile
  6245                           
  6246                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6247  008C7C  9CD5               	bcf	4053,6,c	;volatile
  6248                           
  6249                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6250  008C7E  94D5               	bcf	4053,2,c	;volatile
  6251                           
  6252                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6253  008C80  82D5               	bsf	4053,1,c	;volatile
  6254                           
  6255                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6256  008C82  90D5               	bcf	4053,0,c	;volatile
  6257                           
  6258                           ;os.c: 123: T0CONbits.PSA = 0;
  6259  008C84  96D5               	bcf	4053,3,c	;volatile
  6260                           
  6261                           ;os.c: 125: TMR0H = 0xD1;
  6262  008C86  0ED1               	movlw	209
  6263  008C88  6ED7               	movwf	4055,c	;volatile
  6264                           
  6265                           ;os.c: 126: TMR0L = 0x20;
  6266  008C8A  0E20               	movlw	32
  6267  008C8C  6ED6               	movwf	4054,c	;volatile
  6268                           
  6269                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6270  008C8E  8ED5               	bsf	4053,7,c	;volatile
  6271                           
  6272                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6273  008C90  94F2               	bcf	intcon,2,c	;volatile
  6274                           
  6275                           ;os.c: 135: os.timeSlot = 0;
  6276  008C92  0E00               	movlw	0
  6277  008C94  0100               	movlb	0	; () banked
  6278  008C96  6FC7               	movwf	(_os+2)& (0+255),b	;volatile
  6279                           
  6280                           ; BSR set to: 0
  6281  008C98  0012               	return		;funcret
  6282  008C9A                     __end_of__system_timer0_init:
  6283                           	opt stack 0
  6284                           tblptru	equ	0xFF8
  6285                           tblptrh	equ	0xFF7
  6286                           tblptrl	equ	0xFF6
  6287                           tablat	equ	0xFF5
  6288                           intcon	equ	0xFF2
  6289                           intcon3	equ	0xFF0
  6290                           postinc0	equ	0xFEE
  6291                           wreg	equ	0xFE8
  6292                           postdec1	equ	0xFE5
  6293                           plusw1	equ	0xFE3
  6294                           fsr1h	equ	0xFE2
  6295                           fsr1l	equ	0xFE1
  6296                           postinc2	equ	0xFDE
  6297                           plusw2	equ	0xFDB
  6298                           fsr2h	equ	0xFDA
  6299                           fsr2l	equ	0xFD9
  6300                           status	equ	0xFD8
  6301                           
  6302 ;; *************** function __system_encoder_init *****************
  6303 ;; Defined at:
  6304 ;;		line 73 in file "os.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6318 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6319 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6320 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6321 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used:    1
  6324 ;; This function calls:
  6325 ;;		Nothing
  6326 ;; This function is called by:
  6327 ;;		_system_full_init
  6328 ;; This function uses a non-reentrant model
  6329 ;;
  6330                           
  6331                           	psect	text23
  6332  00866A                     __ptext23:
  6333                           	opt stack 0
  6334  00866A                     __system_encoder_init:
  6335                           	opt stack 29
  6336                           
  6337                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6338                           
  6339                           ; BSR set to: 0
  6340                           ;incstack = 0
  6341  00866A  0E55               	movlw	85
  6342  00866C  6EA7               	movwf	4007,c	;volsfr
  6343  00866E  0EAA               	movlw	170
  6344  008670  6EA7               	movwf	4007,c	;volsfr
  6345  008672  010E               	movlb	14	; () banked
  6346  008674  91BF               	bcf	191,0,b	;volatile
  6347                           
  6348                           ;os.c: 76: RPINR1 = 0;
  6349  008676  0E00               	movlw	0
  6350  008678  6FE1               	movwf	225,b	;volatile
  6351                           
  6352                           ;os.c: 77: RPINR3 = 9;
  6353  00867A  0E09               	movlw	9
  6354  00867C  6FE3               	movwf	227,b	;volatile
  6355                           
  6356                           ;os.c: 78: RPINR2 = 10;
  6357  00867E  0E0A               	movlw	10
  6358  008680  6FE2               	movwf	226,b	;volatile
  6359                           
  6360                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6361  008682  0E55               	movlw	85
  6362  008684  6EA7               	movwf	4007,c	;volsfr
  6363  008686  0EAA               	movlw	170
  6364  008688  6EA7               	movwf	4007,c	;volsfr
  6365                           
  6366                           ; BSR set to: 14
  6367  00868A  91BF               	bcf	191,0,b	;volatile
  6368                           
  6369                           ; BSR set to: 14
  6370                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6371  00868C  9AF1               	bcf	intcon2,5,c	;volatile
  6372                           
  6373                           ; BSR set to: 14
  6374                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6375  00868E  90F0               	bcf	intcon3,0,c	;volatile
  6376                           
  6377                           ; BSR set to: 14
  6378                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6379  008690  88F1               	bsf	intcon2,4,c	;volatile
  6380                           
  6381                           ; BSR set to: 14
  6382                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6383  008692  92F0               	bcf	intcon3,1,c	;volatile
  6384                           
  6385                           ; BSR set to: 14
  6386                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6387  008694  86F1               	bsf	intcon2,3,c	;volatile
  6388                           
  6389                           ; BSR set to: 14
  6390                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6391  008696  94F0               	bcf	intcon3,2,c	;volatile
  6392                           
  6393                           ;os.c: 91: os.encoderCount = 0;
  6394  008698  0E00               	movlw	0
  6395  00869A  0100               	movlb	0	; () banked
  6396  00869C  6FC5               	movwf	_os& (0+255),b	;volatile
  6397                           
  6398                           ;os.c: 92: os.buttonCount = 0;
  6399  00869E  0E00               	movlw	0
  6400  0086A0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  6401                           
  6402                           ; BSR set to: 0
  6403  0086A2  0012               	return		;funcret
  6404  0086A4                     __end_of__system_encoder_init:
  6405                           	opt stack 0
  6406                           tblptru	equ	0xFF8
  6407                           tblptrh	equ	0xFF7
  6408                           tblptrl	equ	0xFF6
  6409                           tablat	equ	0xFF5
  6410                           intcon	equ	0xFF2
  6411                           intcon2	equ	0xFF1
  6412                           intcon3	equ	0xFF0
  6413                           postinc0	equ	0xFEE
  6414                           wreg	equ	0xFE8
  6415                           postdec1	equ	0xFE5
  6416                           plusw1	equ	0xFE3
  6417                           fsr1h	equ	0xFE2
  6418                           fsr1l	equ	0xFE1
  6419                           postinc2	equ	0xFDE
  6420                           plusw2	equ	0xFDB
  6421                           fsr2h	equ	0xFDA
  6422                           fsr2l	equ	0xFD9
  6423                           status	equ	0xFD8
  6424                           
  6425 ;; *************** function _spi_get_external_tx_buffer *****************
  6426 ;; Defined at:
  6427 ;;		line 75 in file "spi.c"
  6428 ;; Parameters:    Size  Location     Type
  6429 ;;		None
  6430 ;; Auto vars:     Size  Location     Type
  6431 ;;		None
  6432 ;; Return value:  Size  Location     Type
  6433 ;;                  2    0[COMRAM] PTR unsigned char 
  6434 ;; Registers used:
  6435 ;;		wreg, status,2, status,0
  6436 ;; Tracked objects:
  6437 ;;		On entry : 0/0
  6438 ;;		On exit  : 0/0
  6439 ;;		Unchanged: 0/0
  6440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6441 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6443 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6444 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6445 ;;Total ram usage:        2 bytes
  6446 ;; Hardware stack levels used:    1
  6447 ;; This function calls:
  6448 ;;		Nothing
  6449 ;; This function is called by:
  6450 ;;		_main
  6451 ;; This function uses a non-reentrant model
  6452 ;;
  6453                           
  6454                           	psect	text24
  6455  008EDE                     __ptext24:
  6456                           	opt stack 0
  6457  008EDE                     _spi_get_external_tx_buffer:
  6458                           	opt stack 30
  6459                           
  6460                           ;spi.c: 77: return _spi_external_tx_buffer;
  6461                           
  6462                           ; BSR set to: 0
  6463                           ;incstack = 0
  6464  008EDE  0E40               	movlw	low __spi_external_tx_buffer
  6465  008EE0  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6466  008EE2  0E03               	movlw	high __spi_external_tx_buffer
  6467  008EE4  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6468  008EE6  0012               	return	
  6469  008EE8                     __end_of_spi_get_external_tx_buffer:
  6470                           	opt stack 0
  6471                           tblptru	equ	0xFF8
  6472                           tblptrh	equ	0xFF7
  6473                           tblptrl	equ	0xFF6
  6474                           tablat	equ	0xFF5
  6475                           intcon	equ	0xFF2
  6476                           intcon2	equ	0xFF1
  6477                           intcon3	equ	0xFF0
  6478                           postinc0	equ	0xFEE
  6479                           wreg	equ	0xFE8
  6480                           postdec1	equ	0xFE5
  6481                           plusw1	equ	0xFE3
  6482                           fsr1h	equ	0xFE2
  6483                           fsr1l	equ	0xFE1
  6484                           postinc2	equ	0xFDE
  6485                           plusw2	equ	0xFDB
  6486                           fsr2h	equ	0xFDA
  6487                           fsr2l	equ	0xFD9
  6488                           status	equ	0xFD8
  6489                           
  6490 ;; *************** function _spi_get_external_rx_buffer *****************
  6491 ;; Defined at:
  6492 ;;		line 80 in file "spi.c"
  6493 ;; Parameters:    Size  Location     Type
  6494 ;;		None
  6495 ;; Auto vars:     Size  Location     Type
  6496 ;;		None
  6497 ;; Return value:  Size  Location     Type
  6498 ;;                  2    0[COMRAM] PTR unsigned char 
  6499 ;; Registers used:
  6500 ;;		wreg, status,2, status,0
  6501 ;; Tracked objects:
  6502 ;;		On entry : 0/0
  6503 ;;		On exit  : 0/0
  6504 ;;		Unchanged: 0/0
  6505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6506 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6507 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6508 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6509 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6510 ;;Total ram usage:        2 bytes
  6511 ;; Hardware stack levels used:    1
  6512 ;; This function calls:
  6513 ;;		Nothing
  6514 ;; This function is called by:
  6515 ;;		_main
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text25
  6520  008EE8                     __ptext25:
  6521                           	opt stack 0
  6522  008EE8                     _spi_get_external_rx_buffer:
  6523                           	opt stack 30
  6524                           
  6525                           ;spi.c: 82: return _spi_external_rx_buffer;
  6526                           
  6527                           ;incstack = 0
  6528  008EE8  0E00               	movlw	low __spi_external_rx_buffer
  6529  008EEA  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6530  008EEC  0E03               	movlw	high __spi_external_rx_buffer
  6531  008EEE  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6532  008EF0  0012               	return	
  6533  008EF2                     __end_of_spi_get_external_rx_buffer:
  6534                           	opt stack 0
  6535                           tblptru	equ	0xFF8
  6536                           tblptrh	equ	0xFF7
  6537                           tblptrl	equ	0xFF6
  6538                           tablat	equ	0xFF5
  6539                           intcon	equ	0xFF2
  6540                           intcon2	equ	0xFF1
  6541                           intcon3	equ	0xFF0
  6542                           postinc0	equ	0xFEE
  6543                           wreg	equ	0xFE8
  6544                           postdec1	equ	0xFE5
  6545                           plusw1	equ	0xFE3
  6546                           fsr1h	equ	0xFE2
  6547                           fsr1l	equ	0xFE1
  6548                           postinc2	equ	0xFDE
  6549                           plusw2	equ	0xFDB
  6550                           fsr2h	equ	0xFDA
  6551                           fsr2l	equ	0xFD9
  6552                           status	equ	0xFD8
  6553                           
  6554 ;; *************** function _jump_to_main_program *****************
  6555 ;; Defined at:
  6556 ;;		line 251 in file "os.c"
  6557 ;; Parameters:    Size  Location     Type
  6558 ;;		None
  6559 ;; Auto vars:     Size  Location     Type
  6560 ;;		None
  6561 ;; Return value:  Size  Location     Type
  6562 ;;                  1    wreg      void 
  6563 ;; Registers used:
  6564 ;;		None
  6565 ;; Tracked objects:
  6566 ;;		On entry : 0/0
  6567 ;;		On exit  : 0/0
  6568 ;;		Unchanged: 0/0
  6569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6570 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6571 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6572 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6573 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6574 ;;Total ram usage:        0 bytes
  6575 ;; Hardware stack levels used:    1
  6576 ;; This function calls:
  6577 ;;		Nothing
  6578 ;; This function is called by:
  6579 ;;		_main
  6580 ;; This function uses a non-reentrant model
  6581 ;;
  6582                           
  6583                           	psect	text26
  6584  008F82                     __ptext26:
  6585                           	opt stack 0
  6586  008F82                     _jump_to_main_program:
  6587                           	opt stack 30
  6588                           
  6589                           ;incstack = 0
  6590  008F82  EF00 F050          	goto	40960	; ;# 
  6591  008F86  0012               	return		;funcret
  6592  008F88                     __end_of_jump_to_main_program:
  6593                           	opt stack 0
  6594                           tblptru	equ	0xFF8
  6595                           tblptrh	equ	0xFF7
  6596                           tblptrl	equ	0xFF6
  6597                           tablat	equ	0xFF5
  6598                           intcon	equ	0xFF2
  6599                           intcon2	equ	0xFF1
  6600                           intcon3	equ	0xFF0
  6601                           postinc0	equ	0xFEE
  6602                           wreg	equ	0xFE8
  6603                           postdec1	equ	0xFE5
  6604                           plusw1	equ	0xFE3
  6605                           fsr1h	equ	0xFE2
  6606                           fsr1l	equ	0xFE1
  6607                           postinc2	equ	0xFDE
  6608                           plusw2	equ	0xFDB
  6609                           fsr2h	equ	0xFDA
  6610                           fsr2l	equ	0xFD9
  6611                           status	equ	0xFD8
  6612                           
  6613 ;; *************** function _bootloader_run *****************
  6614 ;; Defined at:
  6615 ;;		line 63 in file "bootloader.c"
  6616 ;; Parameters:    Size  Location     Type
  6617 ;;  timeslot        1    wreg     unsigned char 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  timeslot        1   91[COMRAM] unsigned char 
  6620 ;; Return value:  Size  Location     Type
  6621 ;;                  1    wreg      void 
  6622 ;; Registers used:
  6623 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6624 ;; Tracked objects:
  6625 ;;		On entry : 0/0
  6626 ;;		On exit  : 0/0
  6627 ;;		Unchanged: 0/0
  6628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6629 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6630 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6631 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6632 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6633 ;;Total ram usage:        1 bytes
  6634 ;; Hardware stack levels used:    1
  6635 ;; Hardware stack levels required when called:    9
  6636 ;; This function calls:
  6637 ;;		__bootloader_find_file
  6638 ;;		__bootloader_program
  6639 ;;		__bootloader_verify_file
  6640 ;; This function is called by:
  6641 ;;		_main
  6642 ;; This function uses a non-reentrant model
  6643 ;;
  6644                           
  6645                           	psect	text27
  6646  007A28                     __ptext27:
  6647                           	opt stack 0
  6648  007A28                     _bootloader_run:
  6649                           	opt stack 21
  6650                           
  6651                           ;incstack = 0
  6652                           ;bootloader_run@timeslot stored from wreg
  6653  007A28  6E5C               	movwf	bootloader_run@timeslot,c
  6654                           
  6655                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6656  007A2A  0100               	movlb	0	; () banked
  6657  007A2C  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  6658  007A2E  B4D8               	btfsc	status,2,c
  6659  007A30  0012               	return	
  6660  007A32  D015               	goto	l2404
  6661  007A34                     
  6662                           ; BSR set to: 0
  6663                           ;bootloader.c: 74: if(timeslot==0)
  6664                           
  6665                           ; BSR set to: 0
  6666  007A34  505C               	movf	bootloader_run@timeslot,w,c
  6667  007A36  A4D8               	btfss	status,2,c
  6668  007A38  0012               	return	
  6669                           
  6670                           ; BSR set to: 0
  6671                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6672  007A3A  EC3C  F034         	call	__bootloader_find_file	;wreg free
  6673                           
  6674                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6675  007A3E  0012               	return	
  6676  007A40                     
  6677                           ;bootloader.c: 81: if(timeslot==0)
  6678  007A40  505C               	movf	bootloader_run@timeslot,w,c
  6679  007A42  A4D8               	btfss	status,2,c
  6680  007A44  0012               	return	
  6681                           
  6682                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6683  007A46  EC3C  F034         	call	__bootloader_find_file	;wreg free
  6684                           
  6685                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6686  007A4A  0012               	return	
  6687  007A4C                     
  6688                           ;bootloader.c: 88: _bootloader_verify_file();
  6689  007A4C  ECCC  F007         	call	__bootloader_verify_file	;wreg free
  6690                           
  6691                           ;bootloader.c: 95: break;
  6692                           
  6693                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6694                           
  6695                           ;bootloader.c: 92: break;
  6696                           
  6697                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6698                           
  6699                           ;bootloader.c: 89: break;
  6700  007A50  0012               	return	
  6701  007A52                     
  6702                           ;bootloader.c: 98: if(timeslot==0)
  6703  007A52  505C               	movf	bootloader_run@timeslot,w,c
  6704  007A54  A4D8               	btfss	status,2,c
  6705  007A56  0012               	return	
  6706                           
  6707                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6708  007A58  EC4E  F002         	call	__bootloader_program	;wreg free
  6709                           
  6710                           ;bootloader.c: 106: }
  6711                           
  6712                           ;bootloader.c: 105: break;
  6713                           
  6714                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6715                           
  6716                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6717  007A5C  0012               	return	
  6718  007A5E                     l2404:
  6719  007A5E  0100               	movlb	0	; () banked
  6720  007A60  51C9               	movf	(_os+4)& (0+255),w,b	;volatile
  6721                           
  6722                           ; Switch size 1, requested type "space"
  6723                           ; Number of cases is 7, Range of values is 16 to 112
  6724                           ; switch strategies available:
  6725                           ; Name         Instructions Cycles
  6726                           ; simple_byte           22    12 (average)
  6727                           ;	Chosen strategy is simple_byte
  6728  007A62  0A10               	xorlw	16	; case 16
  6729  007A64  B4D8               	btfsc	status,2,c
  6730  007A66  D7E6               	goto	l2405
  6731  007A68  0A30               	xorlw	48	; case 32
  6732  007A6A  B4D8               	btfsc	status,2,c
  6733  007A6C  D7E9               	goto	l2408
  6734  007A6E  0A10               	xorlw	16	; case 48
  6735  007A70  B4D8               	btfsc	status,2,c
  6736  007A72  D7EC               	goto	l2410
  6737  007A74  0A70               	xorlw	112	; case 64
  6738  007A76  B4D8               	btfsc	status,2,c
  6739  007A78  0012               	return	
  6740  007A7A  0A10               	xorlw	16	; case 80
  6741  007A7C  B4D8               	btfsc	status,2,c
  6742  007A7E  0012               	return	
  6743  007A80  0A30               	xorlw	48	; case 96
  6744  007A82  B4D8               	btfsc	status,2,c
  6745  007A84  D7E6               	goto	l2413
  6746  007A86  0A10               	xorlw	16	; case 112
  6747  007A88  0012               	return	
  6748  007A8A                     __end_of_bootloader_run:
  6749                           	opt stack 0
  6750                           tblptru	equ	0xFF8
  6751                           tblptrh	equ	0xFF7
  6752                           tblptrl	equ	0xFF6
  6753                           tablat	equ	0xFF5
  6754                           intcon	equ	0xFF2
  6755                           intcon2	equ	0xFF1
  6756                           intcon3	equ	0xFF0
  6757                           postinc0	equ	0xFEE
  6758                           wreg	equ	0xFE8
  6759                           postdec1	equ	0xFE5
  6760                           plusw1	equ	0xFE3
  6761                           fsr1h	equ	0xFE2
  6762                           fsr1l	equ	0xFE1
  6763                           postinc2	equ	0xFDE
  6764                           plusw2	equ	0xFDB
  6765                           fsr2h	equ	0xFDA
  6766                           fsr2l	equ	0xFD9
  6767                           status	equ	0xFD8
  6768                           
  6769 ;; *************** function __bootloader_verify_file *****************
  6770 ;; Defined at:
  6771 ;;		line 182 in file "bootloader.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;		None
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;  root           32   22[BANK0 ] struct .
  6776 ;;  address32       4   59[BANK0 ] unsigned long 
  6777 ;;  return_value    4   55[BANK0 ] unsigned long 
  6778 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6779 ;; Return value:  Size  Location     Type
  6780 ;;                  1    wreg      void 
  6781 ;; Registers used:
  6782 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6783 ;; Tracked objects:
  6784 ;;		On entry : 0/0
  6785 ;;		On exit  : 0/0
  6786 ;;		Unchanged: 0/0
  6787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6789 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6790 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6791 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6792 ;;Total ram usage:       49 bytes
  6793 ;; Hardware stack levels used:    1
  6794 ;; Hardware stack levels required when called:    8
  6795 ;; This function calls:
  6796 ;;		__bootloader_check_address
  6797 ;;		_fat_get_file_information
  6798 ;;		_fat_get_file_size
  6799 ;;		_fat_read_from_file_fast
  6800 ;;		_parseHexFileEntry
  6801 ;; This function is called by:
  6802 ;;		_bootloader_run
  6803 ;; This function uses a non-reentrant model
  6804 ;;
  6805                           
  6806                           	psect	text28
  6807  000F98                     __ptext28:
  6808                           	opt stack 0
  6809  000F98                     __bootloader_verify_file:
  6810                           	opt stack 21
  6811                           
  6812                           ;bootloader.c: 184: uint8_t rec_counter;;bootloader.c: 185: uint32_t return_value = 0;
  6813                           
  6814                           ;incstack = 0
  6815  000F98  0E00               	movlw	0
  6816  000F9A  0100               	movlb	0	; () banked
  6817  000F9C  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6818  000F9E  0E00               	movlw	0
  6819  000FA0  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6820  000FA2  0E00               	movlw	0
  6821  000FA4  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6822  000FA6  0E00               	movlw	0
  6823  000FA8  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6824                           
  6825                           ; BSR set to: 0
  6826                           ;bootloader.c: 186: uint32_t address32;;bootloader.c: 187: rootEntry_t root;;bootloader.
      +                          c: 189: if(hex_file_offset==0)
  6827  000FAA  51D7               	movf	_hex_file_offset& (0+255),w,b
  6828  000FAC  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6829  000FAE  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6830  000FB0  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6831  000FB2  A4D8               	btfss	status,2,c
  6832  000FB4  D010               	goto	l2435
  6833                           
  6834                           ; BSR set to: 0
  6835                           ;bootloader.c: 190: {;bootloader.c: 192: fat_get_file_information(file_number, &root);
  6836  000FB6  0E76               	movlw	low __bootloader_verify_file@root
  6837  000FB8  6E30               	movwf	fat_get_file_information@data,c
  6838  000FBA  0E00               	movlw	high __bootloader_verify_file@root
  6839  000FBC  6E31               	movwf	fat_get_file_information@data+1,c
  6840  000FBE  51FF               	movf	_file_number& (0+255),w,b
  6841  000FC0  EC2F  F03B         	call	_fat_get_file_information
  6842                           
  6843                           ;bootloader.c: 193: fast_read_cluster = root.firstCluster;
  6844  000FC4  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6845  000FC8  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6846                           
  6847                           ;bootloader.c: 194: fast_read_cluster_number = 0;
  6848  000FCC  0E00               	movlw	0
  6849  000FCE  0100               	movlb	0	; () banked
  6850  000FD0  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6851  000FD2  0E00               	movlw	0
  6852  000FD4  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  6853  000FD6                     l2435:
  6854                           
  6855                           ; BSR set to: 0
  6856                           ;bootloader.c: 195: };bootloader.c: 198: hex_file_size = fat_get_file_size(file_number);
  6857                           
  6858                           ; BSR set to: 0
  6859  000FD6  51FF               	movf	_file_number& (0+255),w,b
  6860  000FD8  EC0F  F03C         	call	_fat_get_file_size
  6861  000FDC  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
  6862  000FE0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6863  000FE4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6864  000FE8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6865                           
  6866                           ;bootloader.c: 201: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6867  000FEC  0E00               	movlw	0
  6868  000FEE  0100               	movlb	0	; () banked
  6869  000FF0  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6870  000FF2                     l15269:
  6871                           
  6872                           ; BSR set to: 0
  6873  000FF2  0E0F               	movlw	15
  6874  000FF4  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6875  000FF6  D001               	goto	l2436
  6876  000FF8  0012               	return	
  6877  000FFA                     l2436:
  6878                           
  6879                           ; BSR set to: 0
  6880                           ;bootloader.c: 202: {;bootloader.c: 204: if((hex_file_size-hex_file_offset)>=50)
  6881                           
  6882                           ; BSR set to: 0
  6883  000FFA  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6884  000FFE  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6885  001002  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6886  001006  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6887  00100A  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6888  00100C  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6889  00100E  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6890  001010  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6891  001012  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6892  001014  0E00               	movlw	0
  6893  001016  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6894  001018  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6895  00101A  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6896  00101C  0101               	movlb	1	; () banked
  6897  00101E  514A               	movf	_hex_file_size& (0+255),w,b
  6898  001020  0100               	movlb	0	; () banked
  6899  001022  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6900  001024  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6901  001026  0101               	movlb	1	; () banked
  6902  001028  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6903  00102A  0100               	movlb	0	; () banked
  6904  00102C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6905  00102E  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6906  001030  0101               	movlb	1	; () banked
  6907  001032  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6908  001034  0100               	movlb	0	; () banked
  6909  001036  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6910  001038  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6911  00103A  0101               	movlb	1	; () banked
  6912  00103C  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6913  00103E  0100               	movlb	0	; () banked
  6914  001040  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6915  001042  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6916  001044  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6917  001046  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6918  001048  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6919  00104A  E104               	bnz	u12220
  6920  00104C  0E32               	movlw	50
  6921  00104E  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6922  001050  A0D8               	btfss	status,0,c
  6923  001052  D01F               	goto	l2438
  6924  001054                     u12220:
  6925                           
  6926                           ; BSR set to: 0
  6927                           ;bootloader.c: 205: {;bootloader.c: 207: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6928  001054  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6929  001058  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6930  00105C  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6931  001060  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6932  001064  0E32               	movlw	50
  6933  001066  6E46               	movwf	fat_read_from_file_fast@length,c
  6934  001068  0E00               	movlw	0
  6935  00106A  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6936  00106C  0E00               	movlw	0
  6937  00106E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6938  001070  0E00               	movlw	0
  6939  001072  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6940  001074  0E90               	movlw	low _file_buffer
  6941  001076  6E4A               	movwf	fat_read_from_file_fast@data,c
  6942  001078  0E02               	movlw	high _file_buffer
  6943  00107A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6944  00107C  0EFB               	movlw	low _fast_read_cluster
  6945  00107E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6946  001080  0E00               	movlw	high _fast_read_cluster
  6947  001082  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6948  001084  0EF9               	movlw	low _fast_read_cluster_number
  6949  001086  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6950  001088  0E00               	movlw	high _fast_read_cluster_number
  6951  00108A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6952  00108C  EC60  F012         	call	_fat_read_from_file_fast	;wreg free
  6953                           
  6954                           ;bootloader.c: 208: }
  6955  001090  D03C               	goto	l2439
  6956  001092                     l2438:
  6957                           
  6958                           ;bootloader.c: 209: else;bootloader.c: 210: {;bootloader.c: 212: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6959  001092  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6960  001096  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6961  00109A  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6962  00109E  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6963  0010A2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6964  0010A6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6965  0010AA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6966  0010AE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6967  0010B2  0100               	movlb	0	; () banked
  6968  0010B4  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6969  0010B6  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6970  0010B8  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6971  0010BA  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6972  0010BC  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6973  0010BE  0E00               	movlw	0
  6974  0010C0  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6975  0010C2  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6976  0010C4  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6977  0010C6  0101               	movlb	1	; () banked
  6978  0010C8  514A               	movf	_hex_file_size& (0+255),w,b
  6979  0010CA  0100               	movlb	0	; () banked
  6980  0010CC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6981  0010CE  6E46               	movwf	fat_read_from_file_fast@length,c
  6982  0010D0  0101               	movlb	1	; () banked
  6983  0010D2  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6984  0010D4  0100               	movlb	0	; () banked
  6985  0010D6  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6986  0010D8  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6987  0010DA  0101               	movlb	1	; () banked
  6988  0010DC  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6989  0010DE  0100               	movlb	0	; () banked
  6990  0010E0  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6991  0010E2  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6992  0010E4  0101               	movlb	1	; () banked
  6993  0010E6  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6994  0010E8  0100               	movlb	0	; () banked
  6995  0010EA  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6996  0010EC  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6997  0010EE  0E90               	movlw	low _file_buffer
  6998  0010F0  6E4A               	movwf	fat_read_from_file_fast@data,c
  6999  0010F2  0E02               	movlw	high _file_buffer
  7000  0010F4  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7001  0010F6  0EFB               	movlw	low _fast_read_cluster
  7002  0010F8  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7003  0010FA  0E00               	movlw	high _fast_read_cluster
  7004  0010FC  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7005  0010FE  0EF9               	movlw	low _fast_read_cluster_number
  7006  001100  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7007  001102  0E00               	movlw	high _fast_read_cluster_number
  7008  001104  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7009  001106  EC60  F012         	call	_fat_read_from_file_fast	;wreg free
  7010  00110A                     l2439:
  7011                           
  7012                           ;bootloader.c: 213: };bootloader.c: 216: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7013  00110A  0E90               	movlw	low _file_buffer
  7014  00110C  6E0C               	movwf	parseHexFileEntry@data,c
  7015  00110E  0E02               	movlw	high _file_buffer
  7016  001110  6E0D               	movwf	parseHexFileEntry@data+1,c
  7017  001112  0E00               	movlw	0
  7018  001114  6E0E               	movwf	parseHexFileEntry@offset,c
  7019  001116  0E00               	movlw	0
  7020  001118  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7021  00111A  0E00               	movlw	0
  7022  00111C  6E10               	movwf	parseHexFileEntry@offset+2,c
  7023  00111E  0E00               	movlw	0
  7024  001120  6E11               	movwf	parseHexFileEntry@offset+3,c
  7025  001122  0E93               	movlw	low _hex_file_entry
  7026  001124  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7027  001126  0E01               	movlw	high _hex_file_entry
  7028  001128  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7029  00112A  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7030  00112E  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7031  001132  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7032  001136  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7033  00113A  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7034                           
  7035                           ;bootloader.c: 219: ++hex_file_entries;
  7036  00113E  0101               	movlb	1	; () banked
  7037  001140  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7038  001142  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7039                           
  7040                           ; BSR set to: 1
  7041                           ;bootloader.c: 222: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7042  001144  0E04               	movlw	4
  7043  001146  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7044  001148  A4D8               	btfss	status,2,c
  7045  00114A  D01C               	goto	l2440
  7046                           
  7047                           ; BSR set to: 1
  7048                           ;bootloader.c: 223: {;bootloader.c: 224: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7049  00114C  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7050  00114E  6F46               	movwf	_extended_linear_address& (0+255),b
  7051  001150  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7052  001152  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7053  001154  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7054                           
  7055                           ; BSR set to: 1
  7056                           ;bootloader.c: 225: extended_linear_address <<= 8;
  7057  001156  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7058  00115A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7059  00115E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7060  001162  6B46               	clrf	_extended_linear_address& (0+255),b
  7061                           
  7062                           ; BSR set to: 1
  7063                           ;bootloader.c: 226: extended_linear_address |= hex_file_entry.data[1];
  7064  001164  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7065  001166  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7066                           
  7067                           ; BSR set to: 1
  7068                           ;bootloader.c: 227: extended_linear_address <<= 8;
  7069  001168  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7070  00116C  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7071  001170  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7072  001174  6B46               	clrf	_extended_linear_address& (0+255),b
  7073                           
  7074                           ; BSR set to: 1
  7075                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7076  001176  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7077  00117A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7078  00117E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7079  001182  6B46               	clrf	_extended_linear_address& (0+255),b
  7080  001184                     l2440:
  7081                           
  7082                           ; BSR set to: 1
  7083                           ;bootloader.c: 229: };bootloader.c: 232: if(hex_file_entry.recordType==RecordTypeData)
  7084                           
  7085                           ; BSR set to: 1
  7086  001184  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7087  001186  A4D8               	btfss	status,2,c
  7088  001188  D05E               	goto	l2444
  7089                           
  7090                           ; BSR set to: 1
  7091                           ;bootloader.c: 233: {;bootloader.c: 235: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7092  00118A  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7093  00118C  2546               	addwf	_extended_linear_address& (0+255),w,b
  7094  00118E  0100               	movlb	0	; () banked
  7095  001190  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7096  001192  0101               	movlb	1	; () banked
  7097  001194  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7098  001196  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7099  001198  0100               	movlb	0	; () banked
  7100  00119A  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7101  00119C  0E00               	movlw	0
  7102  00119E  0101               	movlb	1	; () banked
  7103  0011A0  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7104  0011A2  0100               	movlb	0	; () banked
  7105  0011A4  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7106  0011A6  0E00               	movlw	0
  7107  0011A8  0101               	movlb	1	; () banked
  7108  0011AA  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7109  0011AC  0100               	movlb	0	; () banked
  7110  0011AE  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7111                           
  7112                           ;bootloader.c: 238: if(address32<file_minimum_address)
  7113  0011B0  0101               	movlb	1	; () banked
  7114  0011B2  5152               	movf	_file_minimum_address& (0+255),w,b
  7115  0011B4  0100               	movlb	0	; () banked
  7116  0011B6  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7117  0011B8  0101               	movlb	1	; () banked
  7118  0011BA  5153               	movf	(_file_minimum_address+1)& (0+255),w,b
  7119  0011BC  0100               	movlb	0	; () banked
  7120  0011BE  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7121  0011C0  0101               	movlb	1	; () banked
  7122  0011C2  5154               	movf	(_file_minimum_address+2)& (0+255),w,b
  7123  0011C4  0100               	movlb	0	; () banked
  7124  0011C6  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7125  0011C8  0101               	movlb	1	; () banked
  7126  0011CA  5155               	movf	(_file_minimum_address+3)& (0+255),w,b
  7127  0011CC  0100               	movlb	0	; () banked
  7128  0011CE  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7129  0011D0  B0D8               	btfsc	status,0,c
  7130  0011D2  D008               	goto	l2442
  7131                           
  7132                           ; BSR set to: 0
  7133                           ;bootloader.c: 239: {;bootloader.c: 240: file_minimum_address = address32;
  7134  0011D4  C09B  F152         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7135  0011D8  C09C  F153         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7136  0011DC  C09D  F154         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7137  0011E0  C09E  F155         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7138  0011E4                     l2442:
  7139                           
  7140                           ; BSR set to: 0
  7141                           ;bootloader.c: 241: };bootloader.c: 242: if(address32>file_maximum_address)
  7142                           
  7143                           ; BSR set to: 0
  7144  0011E4  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7145  0011E6  0101               	movlb	1	; () banked
  7146  0011E8  5D4E               	subwf	_file_maximum_address& (0+255),w,b
  7147  0011EA  0100               	movlb	0	; () banked
  7148  0011EC  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7149  0011EE  0101               	movlb	1	; () banked
  7150  0011F0  594F               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7151  0011F2  0100               	movlb	0	; () banked
  7152  0011F4  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7153  0011F6  0101               	movlb	1	; () banked
  7154  0011F8  5950               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7155  0011FA  0100               	movlb	0	; () banked
  7156  0011FC  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7157  0011FE  0101               	movlb	1	; () banked
  7158  001200  5951               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7159  001202  B0D8               	btfsc	status,0,c
  7160  001204  D008               	goto	l2443
  7161                           
  7162                           ; BSR set to: 1
  7163                           ;bootloader.c: 243: {;bootloader.c: 244: file_maximum_address = address32;
  7164  001206  C09B  F14E         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7165  00120A  C09C  F14F         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7166  00120E  C09D  F150         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7167  001212  C09E  F151         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7168  001216                     l2443:
  7169                           
  7170                           ; BSR set to: 1
  7171                           ;bootloader.c: 245: };bootloader.c: 248: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7172                           
  7173                           ; BSR set to: 1
  7174  001216  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7175  00121A  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7176  00121E  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7177  001222  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7178  001226  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7179  00122A  ECD5  F02C         	call	__bootloader_check_address	;wreg free
  7180  00122E  0AFF               	xorlw	255
  7181  001230  A4D8               	btfss	status,2,c
  7182  001232  D009               	goto	l2444
  7183                           
  7184                           ;bootloader.c: 249: {;bootloader.c: 251: last_error = ShortRecordErrorAddressRange;
  7185  001234  0E0B               	movlw	11
  7186  001236  0101               	movlb	1	; () banked
  7187  001238  6F8C               	movwf	_last_error& (0+255),b
  7188                           
  7189                           ;bootloader.c: 253: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7190  00123A  0E50               	movlw	80
  7191  00123C  0100               	movlb	0	; () banked
  7192  00123E  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7193                           
  7194                           ;bootloader.c: 254: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7195  001240  0E50               	movlw	80
  7196  001242  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7197                           
  7198                           ;bootloader.c: 255: break;
  7199  001244  0012               	return	
  7200  001246                     l2444:
  7201                           
  7202                           ;bootloader.c: 256: };bootloader.c: 257: };bootloader.c: 259: if(return_value==0)
  7203                           
  7204                           ; BSR set to: 0
  7205                           
  7206                           ; BSR set to: 0
  7207  001246  0100               	movlb	0	; () banked
  7208  001248  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7209  00124A  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7210  00124C  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7211  00124E  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7212  001250  A4D8               	btfss	status,2,c
  7213  001252  D027               	goto	l2445
  7214                           
  7215                           ; BSR set to: 0
  7216                           ;bootloader.c: 260: {;bootloader.c: 263: total_hex_file_entries = hex_file_entries;
  7217  001254  C178  F176         	movff	_hex_file_entries,_total_hex_file_entries
  7218  001258  C179  F177         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7219                           
  7220                           ; BSR set to: 0
  7221                           ;bootloader.c: 264: hex_file_entries = 0;
  7222  00125C  0E00               	movlw	0
  7223  00125E  0101               	movlb	1	; () banked
  7224  001260  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
  7225  001262  0E00               	movlw	0
  7226  001264  6F78               	movwf	_hex_file_entries& (0+255),b
  7227                           
  7228                           ;bootloader.c: 265: hex_file_offset = 0;
  7229  001266  0E00               	movlw	0
  7230  001268  0100               	movlb	0	; () banked
  7231  00126A  6FD7               	movwf	_hex_file_offset& (0+255),b
  7232  00126C  0E00               	movlw	0
  7233  00126E  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
  7234  001270  0E00               	movlw	0
  7235  001272  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
  7236  001274  0E00               	movlw	0
  7237  001276  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
  7238                           
  7239                           ;bootloader.c: 266: extended_linear_address = 0;
  7240  001278  0E00               	movlw	0
  7241  00127A  0101               	movlb	1	; () banked
  7242  00127C  6F46               	movwf	_extended_linear_address& (0+255),b
  7243  00127E  0E00               	movlw	0
  7244  001280  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7245  001282  0E00               	movlw	0
  7246  001284  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7247  001286  0E00               	movlw	0
  7248  001288  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7249                           
  7250                           ;bootloader.c: 267: flash_pages_written = 0;
  7251  00128A  0E00               	movlw	0
  7252  00128C  6F75               	movwf	(_flash_pages_written+1)& (0+255),b
  7253  00128E  0E00               	movlw	0
  7254  001290  6F74               	movwf	_flash_pages_written& (0+255),b
  7255                           
  7256                           ;bootloader.c: 268: start_from_byte_next = 0;
  7257  001292  0E00               	movlw	0
  7258  001294  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7259                           
  7260                           ;bootloader.c: 270: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7261  001296  0E40               	movlw	64
  7262  001298  0100               	movlb	0	; () banked
  7263  00129A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7264                           
  7265                           ;bootloader.c: 271: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7266  00129C  0E40               	movlw	64
  7267  00129E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7268                           
  7269                           ;bootloader.c: 272: break;
  7270  0012A0  0012               	return	
  7271  0012A2                     l2445:
  7272                           
  7273                           ; BSR set to: 0
  7274                           ;bootloader.c: 274: else if(return_value>0xFFFFFFF0)
  7275                           
  7276                           ; BSR set to: 0
  7277  0012A2  0EF1               	movlw	241
  7278  0012A4  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7279  0012A6  0EFF               	movlw	255
  7280  0012A8  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7281  0012AA  0EFF               	movlw	255
  7282  0012AC  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7283  0012AE  0EFF               	movlw	255
  7284  0012B0  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7285  0012B2  A0D8               	btfss	status,0,c
  7286  0012B4  D009               	goto	l2447
  7287                           
  7288                           ; BSR set to: 0
  7289                           ;bootloader.c: 275: {;bootloader.c: 277: last_error = return_value & 0xF;
  7290  0012B6  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7291  0012B8  0B0F               	andlw	15
  7292  0012BA  0101               	movlb	1	; () banked
  7293  0012BC  6F8C               	movwf	_last_error& (0+255),b
  7294                           
  7295                           ; BSR set to: 1
  7296                           ;bootloader.c: 279: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7297  0012BE  0E50               	movlw	80
  7298  0012C0  0100               	movlb	0	; () banked
  7299  0012C2  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7300                           
  7301                           ; BSR set to: 0
  7302                           ;bootloader.c: 280: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7303  0012C4  0E50               	movlw	80
  7304  0012C6  D7EB               	goto	L1
  7305  0012C8                     l2447:
  7306                           
  7307                           ; BSR set to: 0
  7308                           ;bootloader.c: 283: else;bootloader.c: 284: {;bootloader.c: 286: hex_file_offset += retu
      +                          rn_value;
  7309                           
  7310                           ; BSR set to: 0
  7311  0012C8  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7312  0012CA  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7313  0012CC  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7314  0012CE  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7315  0012D0  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7316  0012D2  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7317  0012D4  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7318  0012D6  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7319                           
  7320                           ; BSR set to: 0
  7321                           
  7322                           ; BSR set to: 0
  7323                           
  7324                           ; BSR set to: 0
  7325  0012D8  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7326  0012DA  D68B               	goto	l15269
  7327  0012DC                     __end_of__bootloader_verify_file:
  7328                           	opt stack 0
  7329                           tblptru	equ	0xFF8
  7330                           tblptrh	equ	0xFF7
  7331                           tblptrl	equ	0xFF6
  7332                           tablat	equ	0xFF5
  7333                           intcon	equ	0xFF2
  7334                           intcon2	equ	0xFF1
  7335                           intcon3	equ	0xFF0
  7336                           postinc0	equ	0xFEE
  7337                           wreg	equ	0xFE8
  7338                           postdec1	equ	0xFE5
  7339                           plusw1	equ	0xFE3
  7340                           fsr1h	equ	0xFE2
  7341                           fsr1l	equ	0xFE1
  7342                           postinc2	equ	0xFDE
  7343                           plusw2	equ	0xFDB
  7344                           fsr2h	equ	0xFDA
  7345                           fsr2l	equ	0xFD9
  7346                           status	equ	0xFD8
  7347                           
  7348 ;; *************** function __bootloader_program *****************
  7349 ;; Defined at:
  7350 ;;		line 291 in file "bootloader.c"
  7351 ;; Parameters:    Size  Location     Type
  7352 ;;		None
  7353 ;; Auto vars:     Size  Location     Type
  7354 ;;  root           32   28[BANK0 ] struct .
  7355 ;;  address32       4   64[BANK0 ] unsigned long 
  7356 ;;  return_value    4   60[BANK0 ] unsigned long 
  7357 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7358 ;;  cntr            2   69[BANK0 ] unsigned int 
  7359 ;;  address_with    2   26[BANK0 ] unsigned int 
  7360 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7361 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7362 ;;		 -> pageBuffer(1024), 
  7363 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7364 ;; Return value:  Size  Location     Type
  7365 ;;                  1    wreg      void 
  7366 ;; Registers used:
  7367 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7368 ;; Tracked objects:
  7369 ;;		On entry : 0/0
  7370 ;;		On exit  : 0/0
  7371 ;;		Unchanged: 0/0
  7372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7374 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7375 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7376 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7377 ;;Total ram usage:       59 bytes
  7378 ;; Hardware stack levels used:    1
  7379 ;; Hardware stack levels required when called:    8
  7380 ;; This function calls:
  7381 ;;		__bootloader_check_address
  7382 ;;		_fat_get_file_information
  7383 ;;		_fat_read_from_file_fast
  7384 ;;		_internalFlash_addressWithinPage
  7385 ;;		_internalFlash_erasePage
  7386 ;;		_internalFlash_getBuffer
  7387 ;;		_internalFlash_pageFromAddress
  7388 ;;		_internalFlash_readPage
  7389 ;;		_internalFlash_writePage
  7390 ;;		_parseHexFileEntry
  7391 ;; This function is called by:
  7392 ;;		_bootloader_run
  7393 ;; This function uses a non-reentrant model
  7394 ;;
  7395                           
  7396                           	psect	text29
  7397  00049C                     __ptext29:
  7398                           	opt stack 0
  7399  00049C                     __bootloader_program:
  7400                           	opt stack 21
  7401                           
  7402                           ;bootloader.c: 293: uint16_t cntr;;bootloader.c: 294: uint8_t* buffer;;bootloader.c: 295
      +                          : uint16_t entry_page;;bootloader.c: 296: uint16_t page_to_write = 0;
  7403                           
  7404                           ; BSR set to: 0
  7405                           ;incstack = 0
  7406  00049C  0E00               	movlw	0
  7407  00049E  0100               	movlb	0	; () banked
  7408  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7409  0004A2  0E00               	movlw	0
  7410  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7411                           
  7412                           ;bootloader.c: 297: uint8_t start_from_byte;;bootloader.c: 298: uint32_t address32;;boot
      +                          loader.c: 299: uint32_t return_value = 0;
  7413  0004A6  0E00               	movlw	0
  7414  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7415  0004AA  0E00               	movlw	0
  7416  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7417  0004AE  0E00               	movlw	0
  7418  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7419  0004B2  0E00               	movlw	0
  7420  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;bootloader.c: 300: uint16_t address_within_page;;bootloader.c: 301: rootEntry_t root;;b
      +                          ootloader.c: 303: if(hex_file_offset==0)
  7424  0004B6  51D7               	movf	_hex_file_offset& (0+255),w,b
  7425  0004B8  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7426  0004BA  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7427  0004BC  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7428  0004BE  A4D8               	btfss	status,2,c
  7429  0004C0  D010               	goto	l2452
  7430                           
  7431                           ; BSR set to: 0
  7432                           ;bootloader.c: 304: {;bootloader.c: 306: fat_get_file_information(file_number, &root);
  7433  0004C2  0E7C               	movlw	low __bootloader_program@root
  7434  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7435  0004C6  0E00               	movlw	high __bootloader_program@root
  7436  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7437  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7438  0004CC  EC2F  F03B         	call	_fat_get_file_information
  7439                           
  7440                           ;bootloader.c: 307: fast_read_cluster = root.firstCluster;
  7441  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7442  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7443                           
  7444                           ;bootloader.c: 308: fast_read_cluster_number = 0;
  7445  0004D8  0E00               	movlw	0
  7446  0004DA  0100               	movlb	0	; () banked
  7447  0004DC  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7448  0004DE  0E00               	movlw	0
  7449  0004E0  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7450  0004E2                     l2452:
  7451                           
  7452                           ;bootloader.c: 313: {;bootloader.c: 318: if((hex_file_size-hex_file_offset)>=50)
  7453                           
  7454                           ; BSR set to: 0
  7455                           
  7456                           ;bootloader.c: 309: };bootloader.c: 312: while(1)
  7457                           
  7458                           ; BSR set to: 0
  7459  0004E2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7460  0004E6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7461  0004EA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7462  0004EE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7463  0004F2  0100               	movlb	0	; () banked
  7464  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7465  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7466  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7467  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7468  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7469  0004FE  0E00               	movlw	0
  7470  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7471  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7472  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7473  000506  0101               	movlb	1	; () banked
  7474  000508  514A               	movf	_hex_file_size& (0+255),w,b
  7475  00050A  0100               	movlb	0	; () banked
  7476  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7477  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7478  000510  0101               	movlb	1	; () banked
  7479  000512  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7480  000514  0100               	movlb	0	; () banked
  7481  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7482  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7483  00051A  0101               	movlb	1	; () banked
  7484  00051C  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7485  00051E  0100               	movlb	0	; () banked
  7486  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7487  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7488  000524  0101               	movlb	1	; () banked
  7489  000526  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7490  000528  0100               	movlb	0	; () banked
  7491  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7492  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7493  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7494  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7495  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7496  000534  E104               	bnz	u12320
  7497  000536  0E32               	movlw	50
  7498  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7499  00053A  A0D8               	btfss	status,0,c
  7500  00053C  D01F               	goto	l2454
  7501  00053E                     u12320:
  7502                           
  7503                           ; BSR set to: 0
  7504                           ;bootloader.c: 319: {;bootloader.c: 321: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7505  00053E  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7506  000542  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7507  000546  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7508  00054A  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7509  00054E  0E32               	movlw	50
  7510  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7511  000552  0E00               	movlw	0
  7512  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7513  000556  0E00               	movlw	0
  7514  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7515  00055A  0E00               	movlw	0
  7516  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7517  00055E  0E90               	movlw	low _file_buffer
  7518  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7519  000562  0E02               	movlw	high _file_buffer
  7520  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7521  000566  0EFB               	movlw	low _fast_read_cluster
  7522  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7523  00056A  0E00               	movlw	high _fast_read_cluster
  7524  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7525  00056E  0EF9               	movlw	low _fast_read_cluster_number
  7526  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7527  000572  0E00               	movlw	high _fast_read_cluster_number
  7528  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7529  000576  EC60  F012         	call	_fat_read_from_file_fast	;wreg free
  7530                           
  7531                           ;bootloader.c: 322: }
  7532  00057A  D03C               	goto	l2455
  7533  00057C                     l2454:
  7534                           
  7535                           ;bootloader.c: 323: else;bootloader.c: 324: {;bootloader.c: 326: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7536  00057C  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7537  000580  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7538  000584  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7539  000588  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7540  00058C  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7541  000590  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7542  000594  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7543  000598  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7544  00059C  0100               	movlb	0	; () banked
  7545  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7546  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7547  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7548  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7549  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7550  0005A8  0E00               	movlw	0
  7551  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7552  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7553  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7554  0005B0  0101               	movlb	1	; () banked
  7555  0005B2  514A               	movf	_hex_file_size& (0+255),w,b
  7556  0005B4  0100               	movlb	0	; () banked
  7557  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7558  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7559  0005BA  0101               	movlb	1	; () banked
  7560  0005BC  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7561  0005BE  0100               	movlb	0	; () banked
  7562  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7563  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7564  0005C4  0101               	movlb	1	; () banked
  7565  0005C6  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7566  0005C8  0100               	movlb	0	; () banked
  7567  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7568  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7569  0005CE  0101               	movlb	1	; () banked
  7570  0005D0  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7571  0005D2  0100               	movlb	0	; () banked
  7572  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7573  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7574  0005D8  0E90               	movlw	low _file_buffer
  7575  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7576  0005DC  0E02               	movlw	high _file_buffer
  7577  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7578  0005E0  0EFB               	movlw	low _fast_read_cluster
  7579  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7580  0005E4  0E00               	movlw	high _fast_read_cluster
  7581  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7582  0005E8  0EF9               	movlw	low _fast_read_cluster_number
  7583  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7584  0005EC  0E00               	movlw	high _fast_read_cluster_number
  7585  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7586  0005F0  EC60  F012         	call	_fat_read_from_file_fast	;wreg free
  7587  0005F4                     l2455:
  7588                           
  7589                           ;bootloader.c: 327: };bootloader.c: 330: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7590  0005F4  0E90               	movlw	low _file_buffer
  7591  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7592  0005F8  0E02               	movlw	high _file_buffer
  7593  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7594  0005FC  0E00               	movlw	0
  7595  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7596  000600  0E00               	movlw	0
  7597  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7598  000604  0E00               	movlw	0
  7599  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7600  000608  0E00               	movlw	0
  7601  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7602  00060C  0E93               	movlw	low _hex_file_entry
  7603  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7604  000610  0E01               	movlw	high _hex_file_entry
  7605  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7606  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7607  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7608  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7609  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7610  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7611                           
  7612                           ;bootloader.c: 333: ++hex_file_entries;
  7613  000628  0101               	movlb	1	; () banked
  7614  00062A  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7615  00062C  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7616                           
  7617                           ; BSR set to: 1
  7618                           ;bootloader.c: 336: if(return_value>RecordErrorNoError)
  7619  00062E  0EF1               	movlw	241
  7620  000630  0100               	movlb	0	; () banked
  7621  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7622  000634  0EFF               	movlw	255
  7623  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7624  000638  0EFF               	movlw	255
  7625  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7626  00063C  0EFF               	movlw	255
  7627  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7628  000640  A0D8               	btfss	status,0,c
  7629  000642  D005               	goto	l2456
  7630                           
  7631                           ; BSR set to: 0
  7632                           ;bootloader.c: 337: {;bootloader.c: 339: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7633  000644  0E50               	movlw	80
  7634  000646  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7635                           
  7636                           ;bootloader.c: 340: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7637  000648  0E50               	movlw	80
  7638  00064A  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7639                           
  7640                           ; BSR set to: 0
  7641                           ;bootloader.c: 341: return;
  7642  00064C  0012               	return	
  7643  00064E                     l2456:
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;bootloader.c: 343: else;bootloader.c: 344: {;bootloader.c: 346: hex_file_offset += retu
      +                          rn_value;
  7647                           
  7648                           ; BSR set to: 0
  7649  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7650  000650  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7651  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7652  000654  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7653  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7654  000658  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7655  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7656  00065C  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;bootloader.c: 347: };bootloader.c: 349: switch(hex_file_entry.recordType)
  7660  00065E  D0FA               	goto	l2459
  7661  000660                     
  7662                           ;bootloader.c: 355: extended_linear_address = hex_file_entry.data[0];
  7663                           
  7664                           ; BSR set to: 0
  7665  000660  0101               	movlb	1	; () banked
  7666  000662  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7667  000664  6F46               	movwf	_extended_linear_address& (0+255),b
  7668  000666  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7669  000668  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7670  00066A  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7671                           
  7672                           ; BSR set to: 1
  7673                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7674  00066C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7675  000670  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7676  000674  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7677  000678  6B46               	clrf	_extended_linear_address& (0+255),b
  7678                           
  7679                           ; BSR set to: 1
  7680                           ;bootloader.c: 357: extended_linear_address |= hex_file_entry.data[1];
  7681  00067A  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7682  00067C  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7683                           
  7684                           ; BSR set to: 1
  7685                           ;bootloader.c: 358: extended_linear_address <<= 8;
  7686  00067E  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7687  000682  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7688  000686  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7689  00068A  6B46               	clrf	_extended_linear_address& (0+255),b
  7690                           
  7691                           ; BSR set to: 1
  7692                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7693  00068C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7694  000690  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7695  000694  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7696  000698  6B46               	clrf	_extended_linear_address& (0+255),b
  7697                           
  7698                           ; BSR set to: 1
  7699                           ;bootloader.c: 361: break;
  7700                           
  7701                           ;bootloader.c: 360: continue;
  7702  00069A  D723               	goto	l2452
  7703  00069C                     l2463:
  7704                           
  7705                           ; BSR set to: 1
  7706                           ;bootloader.c: 366: start_from_byte = start_from_byte_next;
  7707  00069C  C18B  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;bootloader.c: 368: start_from_byte_next = 0;
  7711  0006A0  0E00               	movlw	0
  7712  0006A2  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7713                           
  7714                           ; BSR set to: 1
  7715                           ;bootloader.c: 371: address32 = extended_linear_address + hex_file_entry.address;
  7716  0006A4  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7717  0006A6  2546               	addwf	_extended_linear_address& (0+255),w,b
  7718  0006A8  0100               	movlb	0	; () banked
  7719  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  7720  0006AC  0101               	movlb	1	; () banked
  7721  0006AE  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7722  0006B0  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7723  0006B2  0100               	movlb	0	; () banked
  7724  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7725  0006B6  0E00               	movlw	0
  7726  0006B8  0101               	movlb	1	; () banked
  7727  0006BA  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7728  0006BC  0100               	movlb	0	; () banked
  7729  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7730  0006C0  0E00               	movlw	0
  7731  0006C2  0101               	movlb	1	; () banked
  7732  0006C4  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7733  0006C6  0100               	movlb	0	; () banked
  7734  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7735                           
  7736                           ; BSR set to: 0
  7737                           ;bootloader.c: 372: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7738  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7739  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7740  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7741  0006D0  0E00               	movlw	0
  7742  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7743  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7744  0006D6  0E00               	movlw	0
  7745  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7746  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7747  0006DC  0E00               	movlw	0
  7748  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7749  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7750  0006E2  EC89  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7751  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7752  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7753                           
  7754                           ;bootloader.c: 375: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7755  0006EE  0100               	movlb	0	; () banked
  7756  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7757  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7758  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  7759  0006F6  0E00               	movlw	0
  7760  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7761  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  7762  0006FC  0E00               	movlw	0
  7763  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7764  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  7765  000702  0E00               	movlw	0
  7766  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7767  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  7768  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7769  00070A  0800               	sublw	0
  7770  00070C  0101               	movlb	1	; () banked
  7771  00070E  2593               	addwf	_hex_file_entry& (0+255),w,b
  7772  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  7773  000712  ECD5  F02C         	call	__bootloader_check_address	;wreg free
  7774  000716  0900               	iorlw	0
  7775  000718  A4D8               	btfss	status,2,c
  7776  00071A  D6E3               	goto	l2452
  7777                           
  7778                           ;bootloader.c: 378: };bootloader.c: 380: if(page_to_write==0)
  7779                           
  7780                           ;bootloader.c: 376: {;bootloader.c: 377: break;
  7781  00071C  0100               	movlb	0	; () banked
  7782  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7783  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7784  000722  A4D8               	btfss	status,2,c
  7785  000724  D010               	goto	l2465
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;bootloader.c: 381: {;bootloader.c: 385: page_to_write = entry_page;
  7789  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7790  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7791                           
  7792                           ; BSR set to: 0
  7793                           ;bootloader.c: 386: internalFlash_readPage(page_to_write);
  7794  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7795  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7796  000736  EC56  F042         	call	_internalFlash_readPage	;wreg free
  7797                           
  7798                           ;bootloader.c: 387: buffer = internalFlash_getBuffer();
  7799  00073A  EC79  F047         	call	_internalFlash_getBuffer	;wreg free
  7800  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7801  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7802  000746                     l2465:
  7803                           
  7804                           ;bootloader.c: 388: };bootloader.c: 390: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7805  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7806  00074A  0100               	movlb	0	; () banked
  7807  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7808  00074E  D05D               	goto	l2466
  7809  000750                     
  7810                           ; BSR set to: 0
  7811                           ;bootloader.c: 391: {;bootloader.c: 394: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7812                           
  7813                           ; BSR set to: 0
  7814  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7815  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7816  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7817  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7818  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7819  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7820  00075C  0E00               	movlw	0
  7821  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7822  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7823  000762  0E00               	movlw	0
  7824  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7825  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7826  000768  EC89  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7827  00076C  0100               	movlb	0	; () banked
  7828  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7829  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7830  000772  E12A               	bnz	l15401
  7831  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7832  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7833  000778  A4D8               	btfss	status,2,c
  7834  00077A  D026               	goto	l2468
  7835                           
  7836                           ; BSR set to: 0
  7837                           ;bootloader.c: 395: {;bootloader.c: 396: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7838  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7839  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7840  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7841  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7842  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7843  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7844  000788  0E00               	movlw	0
  7845  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7846  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7847  00078E  0E00               	movlw	0
  7848  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7849  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7850  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7851  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7852  00079C  ECD8  F03D         	call	_internalFlash_addressWithinPage	;wreg free
  7853  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7854  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7855                           
  7856                           ;bootloader.c: 397: buffer[address_within_page] = hex_file_entry.data[cntr];
  7857  0007A8  0E98               	movlw	low (_hex_file_entry+5)
  7858  0007AA  0100               	movlb	0	; () banked
  7859  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  7860  0007AE  6ED9               	movwf	fsr2l,c
  7861  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  7862  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7863  0007B4  6EDA               	movwf	fsr2h,c
  7864  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7865  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  7866  0007BA  6EE1               	movwf	fsr1l,c
  7867  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7868  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7869  0007C0  6EE2               	movwf	fsr1h,c
  7870  0007C2  CFDF FFE7          	movff	indf2,indf1
  7871                           
  7872                           ;bootloader.c: 398: }
  7873  0007C6  D01E               	goto	l2469
  7874  0007C8                     l2468:
  7875  0007C8                     l15401:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;bootloader.c: 399: else;bootloader.c: 400: {;bootloader.c: 402: hex_file_offset -= retu
      +                          rn_value;
  7879  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7880  0007CA  5FD7               	subwf	_hex_file_offset& (0+255),f,b
  7881  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7882  0007CE  5BD8               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7883  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7884  0007D2  5BD9               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7885  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7886  0007D6  5BDA               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7887                           
  7888                           ; BSR set to: 0
  7889                           ;bootloader.c: 403: --hex_file_entries;
  7890  0007D8  0101               	movlb	1	; () banked
  7891  0007DA  0778               	decf	_hex_file_entries& (0+255),f,b
  7892  0007DC  A0D8               	btfss	status,0,c
  7893  0007DE  0779               	decf	(_hex_file_entries+1)& (0+255),f,b
  7894                           
  7895                           ; BSR set to: 1
  7896                           ;bootloader.c: 405: start_from_byte_next = cntr;
  7897  0007E0  C0A5  F18B         	movff	__bootloader_program@cntr,_start_from_byte_next
  7898                           
  7899                           ; BSR set to: 1
  7900                           ;bootloader.c: 407: internalFlash_erasePage(page_to_write);
  7901  0007E4  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7902  0007E8  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7903  0007EC  ECBF  F043         	call	_internalFlash_erasePage	;wreg free
  7904                           
  7905                           ;bootloader.c: 408: internalFlash_writePage(page_to_write);
  7906  0007F0  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7907  0007F4  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7908  0007F8  EC02  F03A         	call	_internalFlash_writePage	;wreg free
  7909                           
  7910                           ;bootloader.c: 409: ++flash_pages_written;
  7911  0007FC  0101               	movlb	1	; () banked
  7912  0007FE  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7913  000800  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7914                           
  7915                           ; BSR set to: 1
  7916                           ;bootloader.c: 411: return;
  7917  000802  0012               	return	
  7918  000804                     l2469:
  7919                           
  7920                           ; BSR set to: 1
  7921  000804  0100               	movlb	0	; () banked
  7922  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7923  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7924  00080A                     l2466:
  7925                           
  7926                           ; BSR set to: 0
  7927                           
  7928                           ; BSR set to: 0
  7929  00080A  0101               	movlb	1	; () banked
  7930  00080C  5193               	movf	_hex_file_entry& (0+255),w,b
  7931  00080E  0100               	movlb	0	; () banked
  7932  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  7933  000812  0101               	movlb	1	; () banked
  7934  000814  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  7935  000816  0100               	movlb	0	; () banked
  7936  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7937  00081A  B0D8               	btfsc	status,0,c
  7938  00081C  D662               	goto	l2452
  7939  00081E  D798               	goto	l2467
  7940  000820                     
  7941                           ;bootloader.c: 419: if(page_to_write!=0)
  7942                           
  7943                           ; BSR set to: 0
  7944  000820  0100               	movlb	0	; () banked
  7945  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7946  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7947  000826  B4D8               	btfsc	status,2,c
  7948  000828  0012               	return	
  7949                           
  7950                           ; BSR set to: 0
  7951                           ;bootloader.c: 420: {;bootloader.c: 422: internalFlash_erasePage(page_to_write);
  7952  00082A  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7953  00082E  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7954  000832  ECBF  F043         	call	_internalFlash_erasePage	;wreg free
  7955                           
  7956                           ;bootloader.c: 423: internalFlash_writePage(page_to_write);
  7957  000836  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7958  00083A  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7959  00083E  EC02  F03A         	call	_internalFlash_writePage	;wreg free
  7960                           
  7961                           ;bootloader.c: 424: ++flash_pages_written;
  7962  000842  0101               	movlb	1	; () banked
  7963  000844  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7964  000846  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7965                           
  7966                           ; BSR set to: 1
  7967                           ;bootloader.c: 426: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7968  000848  0E70               	movlw	112
  7969  00084A  0100               	movlb	0	; () banked
  7970  00084C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7971                           
  7972                           ; BSR set to: 0
  7973                           ;bootloader.c: 427: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7974  00084E  0E70               	movlw	112
  7975  000850  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7976                           
  7977                           ; BSR set to: 0
  7978                           ;bootloader.c: 428: };bootloader.c: 430: return;
  7979                           
  7980                           ; BSR set to: 0
  7981  000852  0012               	return	
  7982  000854                     l2459:
  7983                           
  7984                           ; BSR set to: 0
  7985                           
  7986                           ; BSR set to: 0
  7987  000854  0101               	movlb	1	; () banked
  7988  000856  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7989                           
  7990                           ; Switch size 1, requested type "space"
  7991                           ; Number of cases is 3, Range of values is 0 to 4
  7992                           ; switch strategies available:
  7993                           ; Name         Instructions Cycles
  7994                           ; simple_byte           10     6 (average)
  7995                           ;	Chosen strategy is simple_byte
  7996  000858  0A00               	xorlw	0	; case 0
  7997  00085A  B4D8               	btfsc	status,2,c
  7998  00085C  D71F               	goto	l2463
  7999  00085E  0A01               	xorlw	1	; case 1
  8000  000860  B4D8               	btfsc	status,2,c
  8001  000862  D7DE               	goto	l2471
  8002  000864  0A05               	xorlw	5	; case 4
  8003  000866  B4D8               	btfsc	status,2,c
  8004  000868  D6FB               	goto	l2460
  8005                           
  8006                           ; BSR set to: 1
  8007                           
  8008                           ; BSR set to: 1
  8009  00086A  D63B               	goto	l2452
  8010  00086C                     __end_of__bootloader_program:
  8011                           	opt stack 0
  8012                           tblptru	equ	0xFF8
  8013                           tblptrh	equ	0xFF7
  8014                           tblptrl	equ	0xFF6
  8015                           tablat	equ	0xFF5
  8016                           intcon	equ	0xFF2
  8017                           intcon2	equ	0xFF1
  8018                           intcon3	equ	0xFF0
  8019                           postinc0	equ	0xFEE
  8020                           wreg	equ	0xFE8
  8021                           indf1	equ	0xFE7
  8022                           postdec1	equ	0xFE5
  8023                           plusw1	equ	0xFE3
  8024                           fsr1h	equ	0xFE2
  8025                           fsr1l	equ	0xFE1
  8026                           indf2	equ	0xFDF
  8027                           postinc2	equ	0xFDE
  8028                           plusw2	equ	0xFDB
  8029                           fsr2h	equ	0xFDA
  8030                           fsr2l	equ	0xFD9
  8031                           status	equ	0xFD8
  8032                           
  8033 ;; *************** function _parseHexFileEntry *****************
  8034 ;; Defined at:
  8035 ;;		line 59 in file "hex.c"
  8036 ;; Parameters:    Size  Location     Type
  8037 ;;  data            2   11[COMRAM] PTR unsigned char 
  8038 ;;		 -> file_buffer(50), 
  8039 ;;  offset          4   13[COMRAM] unsigned long 
  8040 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8041 ;;		 -> hex_file_entry(23), 
  8042 ;; Auto vars:     Size  Location     Type
  8043 ;;  i               1   27[COMRAM] unsigned char 
  8044 ;; Return value:  Size  Location     Type
  8045 ;;                  4   11[COMRAM] unsigned long 
  8046 ;; Registers used:
  8047 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8048 ;; Tracked objects:
  8049 ;;		On entry : 0/0
  8050 ;;		On exit  : 0/0
  8051 ;;		Unchanged: 0/0
  8052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8053 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8054 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8055 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8056 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8057 ;;Total ram usage:       17 bytes
  8058 ;; Hardware stack levels used:    1
  8059 ;; Hardware stack levels required when called:    2
  8060 ;; This function calls:
  8061 ;;		_hexCharsToUint16
  8062 ;;		_hexCharsToUint8
  8063 ;; This function is called by:
  8064 ;;		__bootloader_verify_file
  8065 ;;		__bootloader_program
  8066 ;; This function uses a non-reentrant model
  8067 ;;
  8068                           
  8069                           	psect	text30
  8070  000020                     __ptext30:
  8071                           	opt stack 0
  8072  000020                     _parseHexFileEntry:
  8073                           	opt stack 26
  8074                           
  8075                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8076                           
  8077                           ;incstack = 0
  8078  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8079  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8080  000024  6ED9               	movwf	fsr2l,c
  8081  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8082  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8083  00002A  6EDA               	movwf	fsr2h,c
  8084  00002C  0E3A               	movlw	58
  8085  00002E  18DE               	xorwf	postinc2,w,c
  8086  000030  B4D8               	btfsc	status,2,c
  8087  000032  D005               	goto	l2314
  8088                           
  8089                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8090  000034  680C               	setf	?_parseHexFileEntry,c
  8091  000036  680D               	setf	?_parseHexFileEntry+1,c
  8092  000038  680E               	setf	?_parseHexFileEntry+2,c
  8093  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8094  00003C  0012               	return	
  8095  00003E                     l2314:
  8096                           
  8097                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8098  00003E  0E02               	movlw	2
  8099  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8100  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8101  000044  0E00               	movlw	0
  8102  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8103  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8104  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8105  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8106  00004E  6ED9               	movwf	fsr2l,c
  8107  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8108  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8109  000054  6EDA               	movwf	fsr2h,c
  8110  000056  50DF               	movf	indf2,w,c
  8111  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8112  00005A  0E01               	movlw	1
  8113  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8114  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8115  000060  0E00               	movlw	0
  8116  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8117  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8118  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8119  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8120  00006A  6ED9               	movwf	fsr2l,c
  8121  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8122  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8123  000070  6EDA               	movwf	fsr2h,c
  8124  000072  50DF               	movf	indf2,w,c
  8125  000074  EC7B  F046         	call	_hexCharsToUint8
  8126  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8127  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8128  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8129  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8130  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8131  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8132                           
  8133                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8134  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8135  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8136  000094  0E01               	movlw	1
  8137  000096  50DB               	movf	plusw2,w,c
  8138  000098  E104               	bnz	u11340
  8139  00009A  0E11               	movlw	17
  8140  00009C  5CDE               	subwf	postinc2,w,c
  8141  00009E  A0D8               	btfss	status,0,c
  8142  0000A0  D009               	goto	l2316
  8143  0000A2                     u11340:
  8144                           
  8145                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8146  0000A2  0EFC               	movlw	252
  8147  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8148  0000A6  0EFF               	movlw	255
  8149  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8150  0000AA  0EFF               	movlw	255
  8151  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8152  0000AE  0EFF               	movlw	255
  8153  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8154  0000B2  0012               	return	
  8155  0000B4                     l2316:
  8156                           
  8157                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8158  0000B4  0E04               	movlw	4
  8159  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8160  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8161  0000BA  0E00               	movlw	0
  8162  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8163  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8164  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8165  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8166  0000C4  6ED9               	movwf	fsr2l,c
  8167  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8168  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8169  0000CA  6EDA               	movwf	fsr2h,c
  8170  0000CC  50DF               	movf	indf2,w,c
  8171  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8172  0000D0  0E05               	movlw	5
  8173  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8174  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8175  0000D6  0E00               	movlw	0
  8176  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8177  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8178  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8179  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8180  0000E0  6ED9               	movwf	fsr2l,c
  8181  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8182  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8183  0000E6  6EDA               	movwf	fsr2h,c
  8184  0000E8  50DF               	movf	indf2,w,c
  8185  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8186  0000EC  0E06               	movlw	6
  8187  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8188  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8189  0000F2  0E00               	movlw	0
  8190  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8191  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8192  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8193  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8194  0000FC  6ED9               	movwf	fsr2l,c
  8195  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8196  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8197  000102  6EDA               	movwf	fsr2h,c
  8198  000104  50DF               	movf	indf2,w,c
  8199  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8200  000108  0E03               	movlw	3
  8201  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8202  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8203  00010E  0E00               	movlw	0
  8204  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8205  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8206  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8207  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8208  000118  6ED9               	movwf	fsr2l,c
  8209  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8210  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8211  00011E  6EDA               	movwf	fsr2h,c
  8212  000120  50DF               	movf	indf2,w,c
  8213  000122  EC68  F03B         	call	_hexCharsToUint16
  8214  000126  EE20 F002          	lfsr	2,2
  8215  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8216  00012C  26D9               	addwf	fsr2l,f,c
  8217  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8218  000130  22DA               	addwfc	fsr2h,f,c
  8219  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8220  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8221                           
  8222                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8223  00013A  EE20 F004          	lfsr	2,4
  8224  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8225  000140  26D9               	addwf	fsr2l,f,c
  8226  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8227  000144  22DA               	addwfc	fsr2h,f,c
  8228  000146  0E08               	movlw	8
  8229  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8230  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8231  00014C  0E00               	movlw	0
  8232  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8233  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8234  000152  5014               	movf	??_parseHexFileEntry,w,c
  8235  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8236  000156  6EE1               	movwf	fsr1l,c
  8237  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8238  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8239  00015C  6EE2               	movwf	fsr1h,c
  8240  00015E  50E7               	movf	indf1,w,c
  8241  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8242  000162  0E07               	movlw	7
  8243  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8244  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8245  000168  0E00               	movlw	0
  8246  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8247  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8248  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8249  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8250  000172  6EE1               	movwf	fsr1l,c
  8251  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8252  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8253  000178  6EE2               	movwf	fsr1h,c
  8254  00017A  50E7               	movf	indf1,w,c
  8255  00017C  EC7B  F046         	call	_hexCharsToUint8
  8256  000180  6EDF               	movwf	indf2,c
  8257                           
  8258                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8259  000182  0E00               	movlw	0
  8260  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8261  000186  D03D               	goto	l2317
  8262  000188                     
  8263                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8264  000188  501C               	movf	parseHexFileEntry@i,w,c
  8265  00018A  0D01               	mullw	1
  8266  00018C  0E05               	movlw	5
  8267  00018E  26F3               	addwf	prodl,f,c
  8268  000190  0E00               	movlw	0
  8269  000192  22F4               	addwfc	prodh,f,c
  8270  000194  50F3               	movf	prodl,w,c
  8271  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8272  000198  6ED9               	movwf	fsr2l,c
  8273  00019A  50F4               	movf	prodh,w,c
  8274  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8275  00019E  6EDA               	movwf	fsr2h,c
  8276  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8277  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8278  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8279  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8280  0001AA  0E00               	movlw	0
  8281  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8282  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8283  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8284  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8285  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8286  0001B6  0E0A               	movlw	10
  8287  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8288  0001BA  0E00               	movlw	0
  8289  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8290  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8291  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8292  0001C2  6EE1               	movwf	fsr1l,c
  8293  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8294  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8295  0001C8  6EE2               	movwf	fsr1h,c
  8296  0001CA  50E7               	movf	indf1,w,c
  8297  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8298  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8299  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8300  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8301  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8302  0001D8  0E00               	movlw	0
  8303  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8304  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8305  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8306  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8307  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8308  0001E4  0E09               	movlw	9
  8309  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8310  0001E8  0E00               	movlw	0
  8311  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8312  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8313  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8314  0001F0  6EE1               	movwf	fsr1l,c
  8315  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8316  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8317  0001F6  6EE2               	movwf	fsr1h,c
  8318  0001F8  50E7               	movf	indf1,w,c
  8319  0001FA  EC7B  F046         	call	_hexCharsToUint8
  8320  0001FE  6EDF               	movwf	indf2,c
  8321  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8322  000202                     l2317:
  8323  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8324  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8325  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8326  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8327  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8328  000210  50DE               	movf	postinc2,w,c
  8329  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8330  000214  50DE               	movf	postinc2,w,c
  8331  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8332  000218  A0D8               	btfss	status,0,c
  8333  00021A  D7B6               	goto	l2318
  8334                           
  8335                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8336  00021C  EE20 F015          	lfsr	2,21
  8337  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8338  000222  26D9               	addwf	fsr2l,f,c
  8339  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8340  000226  22DA               	addwfc	fsr2h,f,c
  8341  000228  501C               	movf	parseHexFileEntry@i,w,c
  8342  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8343  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8344  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8345  000232  0E00               	movlw	0
  8346  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8347  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8348  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8349  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8350  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8351  00023E  0E0A               	movlw	10
  8352  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8353  000242  0E00               	movlw	0
  8354  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8355  000246  5014               	movf	??_parseHexFileEntry,w,c
  8356  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8357  00024A  6EE1               	movwf	fsr1l,c
  8358  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8359  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8360  000250  6EE2               	movwf	fsr1h,c
  8361  000252  50E7               	movf	indf1,w,c
  8362  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8363  000256  501C               	movf	parseHexFileEntry@i,w,c
  8364  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8365  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8366  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8367  000260  0E00               	movlw	0
  8368  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8369  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8370  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8371  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8372  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8373  00026C  0E09               	movlw	9
  8374  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8375  000270  0E00               	movlw	0
  8376  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8377  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8378  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8379  000278  6EE1               	movwf	fsr1l,c
  8380  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8381  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8382  00027E  6EE2               	movwf	fsr1h,c
  8383  000280  50E7               	movf	indf1,w,c
  8384  000282  EC7B  F046         	call	_hexCharsToUint8
  8385  000286  6EDF               	movwf	indf2,c
  8386                           
  8387                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8388  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8389  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8390  000290  EE10 F016          	lfsr	1,22
  8391  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8392  000296  26E1               	addwf	fsr1l,f,c
  8393  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8394  00029A  22E2               	addwfc	fsr1h,f,c
  8395  00029C  CFDF FFE7          	movff	indf2,indf1
  8396                           
  8397                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8398  0002A0  EE20 F002          	lfsr	2,2
  8399  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8400  0002A6  26D9               	addwf	fsr2l,f,c
  8401  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8402  0002AA  22DA               	addwfc	fsr2h,f,c
  8403  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8404  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8405  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8406  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8407  0002BA  EE20 F016          	lfsr	2,22
  8408  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8409  0002C0  26D9               	addwf	fsr2l,f,c
  8410  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8411  0002C4  22DA               	addwfc	fsr2h,f,c
  8412  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8413  0002C8  26DF               	addwf	indf2,f,c
  8414                           
  8415                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8416  0002CA  EE20 F002          	lfsr	2,2
  8417  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8418  0002D0  26D9               	addwf	fsr2l,f,c
  8419  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8420  0002D4  22DA               	addwfc	fsr2h,f,c
  8421  0002D6  50DF               	movf	indf2,w,c
  8422  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8423  0002DA  EE20 F016          	lfsr	2,22
  8424  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8425  0002E0  26D9               	addwf	fsr2l,f,c
  8426  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8427  0002E4  22DA               	addwfc	fsr2h,f,c
  8428  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8429  0002E8  26DF               	addwf	indf2,f,c
  8430                           
  8431                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8432  0002EA  EE20 F004          	lfsr	2,4
  8433  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8434  0002F0  26D9               	addwf	fsr2l,f,c
  8435  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8436  0002F4  22DA               	addwfc	fsr2h,f,c
  8437  0002F6  50DF               	movf	indf2,w,c
  8438  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8439  0002FA  EE20 F016          	lfsr	2,22
  8440  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8441  000300  26D9               	addwf	fsr2l,f,c
  8442  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8443  000304  22DA               	addwfc	fsr2h,f,c
  8444  000306  5014               	movf	??_parseHexFileEntry,w,c
  8445  000308  26DF               	addwf	indf2,f,c
  8446                           
  8447                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8448  00030A  0E00               	movlw	0
  8449  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8450  00030E  D017               	goto	l2320
  8451  000310                     
  8452                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8453  000310  501C               	movf	parseHexFileEntry@i,w,c
  8454  000312  0D01               	mullw	1
  8455  000314  0E05               	movlw	5
  8456  000316  26F3               	addwf	prodl,f,c
  8457  000318  0E00               	movlw	0
  8458  00031A  22F4               	addwfc	prodh,f,c
  8459  00031C  50F3               	movf	prodl,w,c
  8460  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8461  000320  6ED9               	movwf	fsr2l,c
  8462  000322  50F4               	movf	prodh,w,c
  8463  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8464  000326  6EDA               	movwf	fsr2h,c
  8465  000328  50DF               	movf	indf2,w,c
  8466  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8467  00032C  EE20 F016          	lfsr	2,22
  8468  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8469  000332  26D9               	addwf	fsr2l,f,c
  8470  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8471  000336  22DA               	addwfc	fsr2h,f,c
  8472  000338  5014               	movf	??_parseHexFileEntry,w,c
  8473  00033A  26DF               	addwf	indf2,f,c
  8474  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8475  00033E                     l2320:
  8476  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8477  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8478  000346  501C               	movf	parseHexFileEntry@i,w,c
  8479  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8480  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8481  00034C  50DE               	movf	postinc2,w,c
  8482  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8483  000350  50DE               	movf	postinc2,w,c
  8484  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8485  000354  A0D8               	btfss	status,0,c
  8486  000356  D7DC               	goto	l2321
  8487                           
  8488                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8489  000358  EE20 F015          	lfsr	2,21
  8490  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8491  00035E  26D9               	addwf	fsr2l,f,c
  8492  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8493  000362  22DA               	addwfc	fsr2h,f,c
  8494  000364  50DF               	movf	indf2,w,c
  8495  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8496  000368  EE20 F016          	lfsr	2,22
  8497  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8498  00036E  26D9               	addwf	fsr2l,f,c
  8499  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8500  000372  22DA               	addwfc	fsr2h,f,c
  8501  000374  5014               	movf	??_parseHexFileEntry,w,c
  8502  000376  26DF               	addwf	indf2,f,c
  8503                           
  8504                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8505  000378  EE20 F016          	lfsr	2,22
  8506  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8507  00037E  26D9               	addwf	fsr2l,f,c
  8508  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8509  000382  22DA               	addwfc	fsr2h,f,c
  8510  000384  50DF               	movf	indf2,w,c
  8511  000386  B4D8               	btfsc	status,2,c
  8512  000388  D009               	goto	l2323
  8513                           
  8514                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8515  00038A  0EFE               	movlw	254
  8516  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8517  00038E  0EFF               	movlw	255
  8518  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8519  000392  0EFF               	movlw	255
  8520  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8521  000396  0EFF               	movlw	255
  8522  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8523  00039A  0012               	return	
  8524  00039C                     l2323:
  8525                           
  8526                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8527  00039C  EE20 F004          	lfsr	2,4
  8528  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8529  0003A2  26D9               	addwf	fsr2l,f,c
  8530  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8531  0003A6  22DA               	addwfc	fsr2h,f,c
  8532  0003A8  04DE               	decf	postinc2,w,c
  8533  0003AA  A4D8               	btfss	status,2,c
  8534  0003AC  D009               	goto	l2324
  8535                           
  8536                           ;hex.c: 110: {;hex.c: 112: return 0;
  8537  0003AE  0E00               	movlw	0
  8538  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8539  0003B2  0E00               	movlw	0
  8540  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8541  0003B6  0E00               	movlw	0
  8542  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8543  0003BA  0E00               	movlw	0
  8544  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8545                           
  8546                           ;hex.c: 113: }
  8547  0003BE  0012               	return	
  8548  0003C0                     l2324:
  8549                           
  8550                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8551  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8552  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8553  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8554  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8555  0003CA  0E00               	movlw	0
  8556  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8557  0003CE  0E0B               	movlw	11
  8558  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8559  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8560  0003D4  0E00               	movlw	0
  8561  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8562  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8563  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8564  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8565  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8566  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8567  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8568  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8569  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8570  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8571  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8572  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8573  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8574  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8575  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8576                           
  8577                           ;hex.c: 117: if (data[++offset] == ':')
  8578  0003F4  0E01               	movlw	1
  8579  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8580  0003F8  0E00               	movlw	0
  8581  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8582  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8583  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8584  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8585  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8586  000404  6ED9               	movwf	fsr2l,c
  8587  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8588  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8589  00040A  6EDA               	movwf	fsr2h,c
  8590  00040C  0E3A               	movlw	58
  8591  00040E  18DE               	xorwf	postinc2,w,c
  8592  000410  A4D8               	btfss	status,2,c
  8593  000412  D009               	goto	l2326
  8594                           
  8595                           ;hex.c: 118: {;hex.c: 119: return offset;
  8596  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8597  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8598  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8599  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8600                           
  8601                           ;hex.c: 120: }
  8602  000424  0012               	return	
  8603  000426                     l2326:
  8604                           
  8605                           ;hex.c: 121: else if (data[++offset] == ':')
  8606  000426  0E01               	movlw	1
  8607  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8608  00042A  0E00               	movlw	0
  8609  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8610  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8611  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8612  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8613  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8614  000436  6ED9               	movwf	fsr2l,c
  8615  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8616  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8617  00043C  6EDA               	movwf	fsr2h,c
  8618  00043E  0E3A               	movlw	58
  8619  000440  18DE               	xorwf	postinc2,w,c
  8620  000442  A4D8               	btfss	status,2,c
  8621  000444  D009               	goto	l2328
  8622                           
  8623                           ;hex.c: 122: {;hex.c: 123: return offset;
  8624  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8625  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8626  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8627  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8628                           
  8629                           ;hex.c: 124: }
  8630  000456  0012               	return	
  8631  000458                     l2328:
  8632                           
  8633                           ;hex.c: 125: else if (data[++offset] == ':')
  8634  000458  0E01               	movlw	1
  8635  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8636  00045C  0E00               	movlw	0
  8637  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8638  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8639  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8640  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8641  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8642  000468  6ED9               	movwf	fsr2l,c
  8643  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8644  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8645  00046E  6EDA               	movwf	fsr2h,c
  8646  000470  0E3A               	movlw	58
  8647  000472  18DE               	xorwf	postinc2,w,c
  8648  000474  A4D8               	btfss	status,2,c
  8649  000476  D009               	goto	l2330
  8650                           
  8651                           ;hex.c: 126: {;hex.c: 127: return offset;
  8652  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8653  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8654  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8655  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8656                           
  8657                           ;hex.c: 128: }
  8658  000488  0012               	return	
  8659  00048A                     l2330:
  8660                           
  8661                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8662  00048A  0EFD               	movlw	253
  8663  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8664  00048E  0EFF               	movlw	255
  8665  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8666  000492  0EFF               	movlw	255
  8667  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8668  000496  0EFF               	movlw	255
  8669  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8670  00049A  0012               	return	
  8671  00049C                     __end_of_parseHexFileEntry:
  8672                           	opt stack 0
  8673                           tblptru	equ	0xFF8
  8674                           tblptrh	equ	0xFF7
  8675                           tblptrl	equ	0xFF6
  8676                           tablat	equ	0xFF5
  8677                           prodh	equ	0xFF4
  8678                           prodl	equ	0xFF3
  8679                           intcon	equ	0xFF2
  8680                           intcon2	equ	0xFF1
  8681                           intcon3	equ	0xFF0
  8682                           postinc0	equ	0xFEE
  8683                           wreg	equ	0xFE8
  8684                           indf1	equ	0xFE7
  8685                           postdec1	equ	0xFE5
  8686                           plusw1	equ	0xFE3
  8687                           fsr1h	equ	0xFE2
  8688                           fsr1l	equ	0xFE1
  8689                           indf2	equ	0xFDF
  8690                           postinc2	equ	0xFDE
  8691                           postdec2	equ	0xFDD
  8692                           plusw2	equ	0xFDB
  8693                           fsr2h	equ	0xFDA
  8694                           fsr2l	equ	0xFD9
  8695                           status	equ	0xFD8
  8696                           
  8697 ;; *************** function _hexCharsToUint8 *****************
  8698 ;; Defined at:
  8699 ;;		line 42 in file "hex.c"
  8700 ;; Parameters:    Size  Location     Type
  8701 ;;  c1              1    wreg     unsigned char 
  8702 ;;  c2              1    2[COMRAM] unsigned char 
  8703 ;; Auto vars:     Size  Location     Type
  8704 ;;  c1              1    4[COMRAM] unsigned char 
  8705 ;;  retVal          1    5[COMRAM] unsigned char 
  8706 ;; Return value:  Size  Location     Type
  8707 ;;                  1    wreg      unsigned char 
  8708 ;; Registers used:
  8709 ;;		wreg, status,2, status,0, cstack
  8710 ;; Tracked objects:
  8711 ;;		On entry : 0/0
  8712 ;;		On exit  : 0/0
  8713 ;;		Unchanged: 0/0
  8714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8715 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8716 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8717 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8718 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8719 ;;Total ram usage:        4 bytes
  8720 ;; Hardware stack levels used:    1
  8721 ;; Hardware stack levels required when called:    1
  8722 ;; This function calls:
  8723 ;;		_hexCharToUint8
  8724 ;; This function is called by:
  8725 ;;		_parseHexFileEntry
  8726 ;; This function uses a non-reentrant model
  8727 ;;
  8728                           
  8729                           	psect	text31
  8730  008CF6                     __ptext31:
  8731                           	opt stack 0
  8732  008CF6                     _hexCharsToUint8:
  8733                           	opt stack 26
  8734                           
  8735                           ;incstack = 0
  8736                           ;hexCharsToUint8@c1 stored from wreg
  8737  008CF6  6E05               	movwf	hexCharsToUint8@c1,c
  8738                           
  8739                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8740  008CF8  5005               	movf	hexCharsToUint8@c1,w,c
  8741  008CFA  ECCF  F044         	call	_hexCharToUint8
  8742  008CFE  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8743  008D00  3804               	swapf	??_hexCharsToUint8,w,c
  8744  008D02  0BF0               	andlw	240
  8745  008D04  6E06               	movwf	hexCharsToUint8@retVal,c
  8746                           
  8747                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8748  008D06  5003               	movf	hexCharsToUint8@c2,w,c
  8749  008D08  ECCF  F044         	call	_hexCharToUint8
  8750  008D0C  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8751                           
  8752                           ;hex.c: 46: return retVal;
  8753  008D0E  5006               	movf	hexCharsToUint8@retVal,w,c
  8754  008D10  0012               	return	
  8755  008D12                     __end_of_hexCharsToUint8:
  8756                           	opt stack 0
  8757                           tblptru	equ	0xFF8
  8758                           tblptrh	equ	0xFF7
  8759                           tblptrl	equ	0xFF6
  8760                           tablat	equ	0xFF5
  8761                           prodh	equ	0xFF4
  8762                           prodl	equ	0xFF3
  8763                           intcon	equ	0xFF2
  8764                           intcon2	equ	0xFF1
  8765                           intcon3	equ	0xFF0
  8766                           postinc0	equ	0xFEE
  8767                           wreg	equ	0xFE8
  8768                           indf1	equ	0xFE7
  8769                           postdec1	equ	0xFE5
  8770                           plusw1	equ	0xFE3
  8771                           fsr1h	equ	0xFE2
  8772                           fsr1l	equ	0xFE1
  8773                           indf2	equ	0xFDF
  8774                           postinc2	equ	0xFDE
  8775                           postdec2	equ	0xFDD
  8776                           plusw2	equ	0xFDB
  8777                           fsr2h	equ	0xFDA
  8778                           fsr2l	equ	0xFD9
  8779                           status	equ	0xFD8
  8780                           
  8781 ;; *************** function _hexCharsToUint16 *****************
  8782 ;; Defined at:
  8783 ;;		line 49 in file "hex.c"
  8784 ;; Parameters:    Size  Location     Type
  8785 ;;  c1              1    wreg     unsigned char 
  8786 ;;  c2              1    2[COMRAM] unsigned char 
  8787 ;;  c3              1    3[COMRAM] unsigned char 
  8788 ;;  c4              1    4[COMRAM] unsigned char 
  8789 ;; Auto vars:     Size  Location     Type
  8790 ;;  c1              1    8[COMRAM] unsigned char 
  8791 ;;  retVal          2    9[COMRAM] unsigned int 
  8792 ;; Return value:  Size  Location     Type
  8793 ;;                  2    2[COMRAM] unsigned int 
  8794 ;; Registers used:
  8795 ;;		wreg, status,2, status,0, cstack
  8796 ;; Tracked objects:
  8797 ;;		On entry : 0/0
  8798 ;;		On exit  : 0/0
  8799 ;;		Unchanged: 0/0
  8800 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8801 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8802 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8803 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8804 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8805 ;;Total ram usage:        9 bytes
  8806 ;; Hardware stack levels used:    1
  8807 ;; Hardware stack levels required when called:    1
  8808 ;; This function calls:
  8809 ;;		_hexCharToUint8
  8810 ;; This function is called by:
  8811 ;;		_parseHexFileEntry
  8812 ;; This function uses a non-reentrant model
  8813 ;;
  8814                           
  8815                           	psect	text32
  8816  0076D0                     __ptext32:
  8817                           	opt stack 0
  8818  0076D0                     _hexCharsToUint16:
  8819                           	opt stack 26
  8820                           
  8821                           ;incstack = 0
  8822                           ;hexCharsToUint16@c1 stored from wreg
  8823  0076D0  6E09               	movwf	hexCharsToUint16@c1,c
  8824                           
  8825                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8826  0076D2  5009               	movf	hexCharsToUint16@c1,w,c
  8827  0076D4  ECCF  F044         	call	_hexCharToUint8
  8828  0076D8  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8829  0076DA  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8830  0076DC  0E0C               	movlw	12
  8831  0076DE                     u10715:
  8832  0076DE  90D8               	bcf	status,0,c
  8833  0076E0  3606               	rlcf	??_hexCharsToUint16,f,c
  8834  0076E2  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8835  0076E4  2EE8               	decfsz	wreg,f,c
  8836  0076E6  D7FB               	goto	u10715
  8837  0076E8  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8838  0076EC  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8839                           
  8840                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8841  0076F0  5003               	movf	hexCharsToUint16@c2,w,c
  8842  0076F2  ECCF  F044         	call	_hexCharToUint8
  8843  0076F6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8844  0076F8  5006               	movf	??_hexCharsToUint16,w,c
  8845  0076FA  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8846  0076FC  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8847  0076FE  5007               	movf	??_hexCharsToUint16+1,w,c
  8848  007700  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8849  007702  5008               	movf	??_hexCharsToUint16+2,w,c
  8850  007704  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8851                           
  8852                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8853  007706  5004               	movf	hexCharsToUint16@c3,w,c
  8854  007708  ECCF  F044         	call	_hexCharToUint8
  8855  00770C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8856  00770E  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8857  007710  3A06               	swapf	??_hexCharsToUint16,f,c
  8858  007712  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8859  007714  0EF0               	movlw	240
  8860  007716  1607               	andwf	??_hexCharsToUint16+1,f,c
  8861  007718  5006               	movf	??_hexCharsToUint16,w,c
  8862  00771A  0B0F               	andlw	15
  8863  00771C  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8864  00771E  0EF0               	movlw	240
  8865  007720  1606               	andwf	??_hexCharsToUint16,f,c
  8866  007722  5006               	movf	??_hexCharsToUint16,w,c
  8867  007724  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8868  007726  5007               	movf	??_hexCharsToUint16+1,w,c
  8869  007728  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8870                           
  8871                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8872  00772A  5005               	movf	hexCharsToUint16@c4,w,c
  8873  00772C  ECCF  F044         	call	_hexCharToUint8
  8874  007730  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8875  007732  5006               	movf	??_hexCharsToUint16,w,c
  8876  007734  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8877                           
  8878                           ;hex.c: 55: return retVal;
  8879  007736  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8880  00773A  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8881  00773E  0012               	return	
  8882  007740                     __end_of_hexCharsToUint16:
  8883                           	opt stack 0
  8884                           tblptru	equ	0xFF8
  8885                           tblptrh	equ	0xFF7
  8886                           tblptrl	equ	0xFF6
  8887                           tablat	equ	0xFF5
  8888                           prodh	equ	0xFF4
  8889                           prodl	equ	0xFF3
  8890                           intcon	equ	0xFF2
  8891                           intcon2	equ	0xFF1
  8892                           intcon3	equ	0xFF0
  8893                           postinc0	equ	0xFEE
  8894                           wreg	equ	0xFE8
  8895                           indf1	equ	0xFE7
  8896                           postdec1	equ	0xFE5
  8897                           plusw1	equ	0xFE3
  8898                           fsr1h	equ	0xFE2
  8899                           fsr1l	equ	0xFE1
  8900                           indf2	equ	0xFDF
  8901                           postinc2	equ	0xFDE
  8902                           postdec2	equ	0xFDD
  8903                           plusw2	equ	0xFDB
  8904                           fsr2h	equ	0xFDA
  8905                           fsr2l	equ	0xFD9
  8906                           status	equ	0xFD8
  8907                           
  8908 ;; *************** function _hexCharToUint8 *****************
  8909 ;; Defined at:
  8910 ;;		line 11 in file "hex.c"
  8911 ;; Parameters:    Size  Location     Type
  8912 ;;  c               1    wreg     unsigned char 
  8913 ;; Auto vars:     Size  Location     Type
  8914 ;;  c               1    0[COMRAM] unsigned char 
  8915 ;;  ascii           1    1[COMRAM] unsigned char 
  8916 ;; Return value:  Size  Location     Type
  8917 ;;                  1    wreg      unsigned char 
  8918 ;; Registers used:
  8919 ;;		wreg, status,2, status,0
  8920 ;; Tracked objects:
  8921 ;;		On entry : 0/0
  8922 ;;		On exit  : 0/0
  8923 ;;		Unchanged: 0/0
  8924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8926 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8929 ;;Total ram usage:        2 bytes
  8930 ;; Hardware stack levels used:    1
  8931 ;; This function calls:
  8932 ;;		Nothing
  8933 ;; This function is called by:
  8934 ;;		_hexCharsToUint8
  8935 ;;		_hexCharsToUint16
  8936 ;; This function uses a non-reentrant model
  8937 ;;
  8938                           
  8939                           	psect	text33
  8940  00899E                     __ptext33:
  8941                           	opt stack 0
  8942  00899E                     _hexCharToUint8:
  8943                           	opt stack 26
  8944                           
  8945                           ;incstack = 0
  8946                           ;hexCharToUint8@c stored from wreg
  8947  00899E  6E01               	movwf	hexCharToUint8@c,c
  8948                           
  8949                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8950  0089A0  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8951                           
  8952                           ;hex.c: 16: if (ascii >= 97)
  8953  0089A4  0E60               	movlw	96
  8954  0089A6  6402               	cpfsgt	hexCharToUint8@ascii,c
  8955  0089A8  D002               	goto	l2299
  8956                           
  8957                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8958  0089AA  0E57               	movlw	87
  8959  0089AC  D006               	goto	L3
  8960  0089AE                     l2299:
  8961                           
  8962                           ;hex.c: 21: else if (ascii >= 65)
  8963  0089AE  0E40               	movlw	64
  8964  0089B0  6402               	cpfsgt	hexCharToUint8@ascii,c
  8965  0089B2  D002               	goto	l2301
  8966                           
  8967                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8968  0089B4  0E37               	movlw	55
  8969  0089B6  D001               	goto	L3
  8970  0089B8                     l2301:
  8971                           
  8972                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8973  0089B8  0E30               	movlw	48
  8974  0089BA                     L3:
  8975  0089BA  5E02               	subwf	hexCharToUint8@ascii,f,c
  8976                           
  8977                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8978  0089BC  0E0F               	movlw	15
  8979  0089BE  6402               	cpfsgt	hexCharToUint8@ascii,c
  8980  0089C0  D002               	goto	l2303
  8981                           
  8982                           ;hex.c: 32: {;hex.c: 33: return 0;
  8983  0089C2  0E00               	movlw	0
  8984                           
  8985                           ;hex.c: 34: }
  8986  0089C4  0012               	return	
  8987  0089C6                     l2303:
  8988                           
  8989                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  8990  0089C6  5002               	movf	hexCharToUint8@ascii,w,c
  8991  0089C8  0012               	return	
  8992  0089CA                     __end_of_hexCharToUint8:
  8993                           	opt stack 0
  8994                           tblptru	equ	0xFF8
  8995                           tblptrh	equ	0xFF7
  8996                           tblptrl	equ	0xFF6
  8997                           tablat	equ	0xFF5
  8998                           prodh	equ	0xFF4
  8999                           prodl	equ	0xFF3
  9000                           intcon	equ	0xFF2
  9001                           intcon2	equ	0xFF1
  9002                           intcon3	equ	0xFF0
  9003                           postinc0	equ	0xFEE
  9004                           wreg	equ	0xFE8
  9005                           indf1	equ	0xFE7
  9006                           postdec1	equ	0xFE5
  9007                           plusw1	equ	0xFE3
  9008                           fsr1h	equ	0xFE2
  9009                           fsr1l	equ	0xFE1
  9010                           indf2	equ	0xFDF
  9011                           postinc2	equ	0xFDE
  9012                           postdec2	equ	0xFDD
  9013                           plusw2	equ	0xFDB
  9014                           fsr2h	equ	0xFDA
  9015                           fsr2l	equ	0xFD9
  9016                           status	equ	0xFD8
  9017                           
  9018 ;; *************** function _internalFlash_writePage *****************
  9019 ;; Defined at:
  9020 ;;		line 63 in file "internal_flash.c"
  9021 ;; Parameters:    Size  Location     Type
  9022 ;;  page            2    2[COMRAM] unsigned int 
  9023 ;; Auto vars:     Size  Location     Type
  9024 ;;  address         4    4[COMRAM] unsigned long 
  9025 ;;  cntr            2    8[COMRAM] unsigned int 
  9026 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  9027 ;;  block_cntr      1   10[COMRAM] unsigned char 
  9028 ;;  i               1    0        unsigned char 
  9029 ;;  gie             1    0        unsigned char 
  9030 ;; Return value:  Size  Location     Type
  9031 ;;                  1    wreg      void 
  9032 ;; Registers used:
  9033 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9034 ;; Tracked objects:
  9035 ;;		On entry : 0/0
  9036 ;;		On exit  : 0/0
  9037 ;;		Unchanged: 0/0
  9038 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9039 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9040 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9041 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9042 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9043 ;;Total ram usage:       10 bytes
  9044 ;; Hardware stack levels used:    1
  9045 ;; Hardware stack levels required when called:    1
  9046 ;; This function calls:
  9047 ;;		__internalFlash_unlockAndActivate
  9048 ;; This function is called by:
  9049 ;;		__bootloader_program
  9050 ;; This function uses a non-reentrant model
  9051 ;;
  9052                           
  9053                           	psect	text34
  9054  007404                     __ptext34:
  9055                           	opt stack 0
  9056  007404                     _internalFlash_writePage:
  9057                           	opt stack 27
  9058                           
  9059                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  9060                           
  9061                           ;incstack = 0
  9062  007404  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  9063  007408  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  9064  00740C  6A07               	clrf	internalFlash_writePage@address+2,c
  9065  00740E  6A08               	clrf	internalFlash_writePage@address+3,c
  9066                           
  9067                           ;internal_flash.c: 74: address <<= 10;
  9068  007410  0E0A               	movlw	10
  9069  007412                     u11515:
  9070  007412  90D8               	bcf	status,0,c
  9071  007414  3605               	rlcf	internalFlash_writePage@address,f,c
  9072  007416  3606               	rlcf	internalFlash_writePage@address+1,f,c
  9073  007418  3607               	rlcf	internalFlash_writePage@address+2,f,c
  9074  00741A  3608               	rlcf	internalFlash_writePage@address+3,f,c
  9075  00741C  2EE8               	decfsz	wreg,f,c
  9076  00741E  D7F9               	goto	u11515
  9077                           
  9078                           ;internal_flash.c: 76: TBLPTR = address;
  9079  007420  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9080  007424  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9081  007428  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9082                           
  9083                           ;internal_flash.c: 79: cntr = 0;
  9084  00742C  0E00               	movlw	0
  9085  00742E  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  9086  007430  0E00               	movlw	0
  9087  007432  6E09               	movwf	internalFlash_writePage@cntr,c
  9088                           
  9089                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9090  007434  0E00               	movlw	0
  9091  007436  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  9092  007438                     l14431:
  9093  007438  0E0F               	movlw	15
  9094  00743A  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  9095  00743C  D001               	goto	l2551
  9096  00743E  0012               	return	
  9097  007440                     l2551:
  9098                           
  9099                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9100  007440  0E00               	movlw	0
  9101  007442  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  9102  007444                     l14437:
  9103  007444  0E3F               	movlw	63
  9104  007446  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9105  007448  D001               	goto	l2553
  9106  00744A  D00D               	goto	u11540
  9107  00744C                     l2553:
  9108                           
  9109                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  9110  00744C  0E00               	movlw	low _pageBuffer
  9111  00744E  2409               	addwf	internalFlash_writePage@cntr,w,c
  9112  007450  6ED9               	movwf	fsr2l,c
  9113  007452  0E08               	movlw	high _pageBuffer
  9114  007454  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  9115  007456  6EDA               	movwf	fsr2h,c
  9116  007458  50DF               	movf	indf2,w,c
  9117  00745A  6EF5               	movwf	tablat,c	;volatile
  9118  00745C  000D               	tblwt		*+	;# 
  9119                           
  9120                           ;internal_flash.c: 91: ++cntr;
  9121  00745E  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  9122  007460  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  9123  007462  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  9124  007464  D7EF               	goto	l14437
  9125  007466                     u11540:
  9126  007466  000A               	tblrd		*-	;# 
  9127                           
  9128                           ;internal_flash.c: 98: EECON1 = 0x84;
  9129  007468  0E84               	movlw	132
  9130  00746A  6EA6               	movwf	4006,c	;volsfr
  9131                           
  9132                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9133  00746C  0EB5               	movlw	181
  9134  00746E  EC3C  F045         	call	__internalFlash_unlockAndActivate
  9135                           
  9136                           ;internal_flash.c: 100: TBLPTR++;
  9137  007472  0E01               	movlw	1
  9138  007474  26F6               	addwf	tblptrl,f,c	;volatile
  9139  007476  0E00               	movlw	0
  9140  007478  22F7               	addwfc	tblptrh,f,c	;volatile
  9141  00747A  0E00               	movlw	0
  9142  00747C  22F8               	addwfc	tblptru,f,c	;volatile
  9143  00747E  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  9144  007480  D7DB               	goto	l14431
  9145  007482                     __end_of_internalFlash_writePage:
  9146                           	opt stack 0
  9147                           tblptru	equ	0xFF8
  9148                           tblptrh	equ	0xFF7
  9149                           tblptrl	equ	0xFF6
  9150                           tablat	equ	0xFF5
  9151                           prodh	equ	0xFF4
  9152                           prodl	equ	0xFF3
  9153                           intcon	equ	0xFF2
  9154                           intcon2	equ	0xFF1
  9155                           intcon3	equ	0xFF0
  9156                           postinc0	equ	0xFEE
  9157                           wreg	equ	0xFE8
  9158                           indf1	equ	0xFE7
  9159                           postdec1	equ	0xFE5
  9160                           plusw1	equ	0xFE3
  9161                           fsr1h	equ	0xFE2
  9162                           fsr1l	equ	0xFE1
  9163                           indf2	equ	0xFDF
  9164                           postinc2	equ	0xFDE
  9165                           postdec2	equ	0xFDD
  9166                           plusw2	equ	0xFDB
  9167                           fsr2h	equ	0xFDA
  9168                           fsr2l	equ	0xFD9
  9169                           status	equ	0xFD8
  9170                           
  9171 ;; *************** function _internalFlash_readPage *****************
  9172 ;; Defined at:
  9173 ;;		line 37 in file "internal_flash.c"
  9174 ;; Parameters:    Size  Location     Type
  9175 ;;  page            2   21[COMRAM] unsigned int 
  9176 ;; Auto vars:     Size  Location     Type
  9177 ;;  address         4   23[COMRAM] unsigned long 
  9178 ;; Return value:  Size  Location     Type
  9179 ;;                  1    wreg      void 
  9180 ;; Registers used:
  9181 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9182 ;; Tracked objects:
  9183 ;;		On entry : 0/0
  9184 ;;		On exit  : 0/0
  9185 ;;		Unchanged: 0/0
  9186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9187 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9188 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9190 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9191 ;;Total ram usage:        6 bytes
  9192 ;; Hardware stack levels used:    1
  9193 ;; Hardware stack levels required when called:    2
  9194 ;; This function calls:
  9195 ;;		_internalFlash_addressFromPage
  9196 ;;		_internalFlash_read
  9197 ;; This function is called by:
  9198 ;;		__bootloader_program
  9199 ;; This function uses a non-reentrant model
  9200 ;;
  9201                           
  9202                           	psect	text35
  9203  0084AC                     __ptext35:
  9204                           	opt stack 0
  9205  0084AC                     _internalFlash_readPage:
  9206                           	opt stack 26
  9207                           
  9208                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9209                           
  9210                           ;incstack = 0
  9211  0084AC  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9212  0084B0  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9213  0084B4  ECA2  F044         	call	_internalFlash_addressFromPage	;wreg free
  9214  0084B8  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9215  0084BC  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9216  0084C0  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9217  0084C4  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9218                           
  9219                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9220  0084C8  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9221  0084CC  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9222  0084D0  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9223  0084D4  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9224  0084D8  0E04               	movlw	4
  9225  0084DA  6E13               	movwf	internalFlash_read@data_length+1,c
  9226  0084DC  0E00               	movlw	0
  9227  0084DE  6E12               	movwf	internalFlash_read@data_length,c
  9228  0084E0  0E00               	movlw	low _pageBuffer
  9229  0084E2  6E14               	movwf	internalFlash_read@buffer,c
  9230  0084E4  0E08               	movlw	high _pageBuffer
  9231  0084E6  6E15               	movwf	internalFlash_read@buffer+1,c
  9232  0084E8  EC8A  F043         	call	_internalFlash_read	;wreg free
  9233  0084EC  0012               	return		;funcret
  9234  0084EE                     __end_of_internalFlash_readPage:
  9235                           	opt stack 0
  9236                           tblptru	equ	0xFF8
  9237                           tblptrh	equ	0xFF7
  9238                           tblptrl	equ	0xFF6
  9239                           tablat	equ	0xFF5
  9240                           prodh	equ	0xFF4
  9241                           prodl	equ	0xFF3
  9242                           intcon	equ	0xFF2
  9243                           intcon2	equ	0xFF1
  9244                           intcon3	equ	0xFF0
  9245                           postinc0	equ	0xFEE
  9246                           wreg	equ	0xFE8
  9247                           indf1	equ	0xFE7
  9248                           postdec1	equ	0xFE5
  9249                           plusw1	equ	0xFE3
  9250                           fsr1h	equ	0xFE2
  9251                           fsr1l	equ	0xFE1
  9252                           indf2	equ	0xFDF
  9253                           postinc2	equ	0xFDE
  9254                           postdec2	equ	0xFDD
  9255                           plusw2	equ	0xFDB
  9256                           fsr2h	equ	0xFDA
  9257                           fsr2l	equ	0xFD9
  9258                           status	equ	0xFD8
  9259                           
  9260 ;; *************** function _internalFlash_read *****************
  9261 ;; Defined at:
  9262 ;;		line 144 in file "internal_flash.c"
  9263 ;; Parameters:    Size  Location     Type
  9264 ;;  address         4   13[COMRAM] unsigned long 
  9265 ;;  data_length     2   17[COMRAM] unsigned int 
  9266 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9267 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9268 ;; Auto vars:     Size  Location     Type
  9269 ;;		None
  9270 ;; Return value:  Size  Location     Type
  9271 ;;                  1    wreg      unsigned char 
  9272 ;; Registers used:
  9273 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9274 ;; Tracked objects:
  9275 ;;		On entry : 0/0
  9276 ;;		On exit  : 0/0
  9277 ;;		Unchanged: 0/0
  9278 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9279 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9280 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9281 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9282 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9283 ;;Total ram usage:        8 bytes
  9284 ;; Hardware stack levels used:    1
  9285 ;; Hardware stack levels required when called:    1
  9286 ;; This function calls:
  9287 ;;		_memcpy
  9288 ;; This function is called by:
  9289 ;;		_internalFlash_readPage
  9290 ;;		__bootloader_verify_program_memory
  9291 ;; This function uses a non-reentrant model
  9292 ;;
  9293                           
  9294                           	psect	text36
  9295  008714                     __ptext36:
  9296                           	opt stack 0
  9297  008714                     _internalFlash_read:
  9298                           	opt stack 26
  9299                           
  9300                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9301                           
  9302                           ;incstack = 0
  9303  008714  5011               	movf	internalFlash_read@address+3,w,c
  9304  008716  E118               	bnz	l2567
  9305  008718  280E               	incf	internalFlash_read@address,w,c
  9306  00871A  0EFF               	movlw	255
  9307  00871C  580F               	subwfb	internalFlash_read@address+1,w,c
  9308  00871E  0E01               	movlw	1
  9309  008720  5810               	subwfb	internalFlash_read@address+2,w,c
  9310  008722  B0D8               	btfsc	status,0,c
  9311  008724  0012               	return	
  9312                           
  9313                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9314                           
  9315                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9316  008726  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9317  00872A  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9318  00872E  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9319  008732  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9320  008736  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9321  00873A  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9322  00873E  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9323  008742  ECE1  F03C         	call	_memcpy	;wreg free
  9324  008746  0012               	return	
  9325  008748                     l2567:
  9326  008748  0012               	return		;funcret
  9327  00874A                     __end_of_internalFlash_read:
  9328                           	opt stack 0
  9329                           tblptru	equ	0xFF8
  9330                           tblptrh	equ	0xFF7
  9331                           tblptrl	equ	0xFF6
  9332                           tablat	equ	0xFF5
  9333                           prodh	equ	0xFF4
  9334                           prodl	equ	0xFF3
  9335                           intcon	equ	0xFF2
  9336                           intcon2	equ	0xFF1
  9337                           intcon3	equ	0xFF0
  9338                           postinc0	equ	0xFEE
  9339                           wreg	equ	0xFE8
  9340                           indf1	equ	0xFE7
  9341                           postdec1	equ	0xFE5
  9342                           plusw1	equ	0xFE3
  9343                           fsr1h	equ	0xFE2
  9344                           fsr1l	equ	0xFE1
  9345                           indf2	equ	0xFDF
  9346                           postinc2	equ	0xFDE
  9347                           postdec2	equ	0xFDD
  9348                           plusw2	equ	0xFDB
  9349                           fsr2h	equ	0xFDA
  9350                           fsr2l	equ	0xFD9
  9351                           status	equ	0xFD8
  9352                           
  9353 ;; *************** function _internalFlash_pageFromAddress *****************
  9354 ;; Defined at:
  9355 ;;		line 308 in file "internal_flash.c"
  9356 ;; Parameters:    Size  Location     Type
  9357 ;;  address         4    0[COMRAM] unsigned long 
  9358 ;; Auto vars:     Size  Location     Type
  9359 ;;		None
  9360 ;; Return value:  Size  Location     Type
  9361 ;;                  2    0[COMRAM] unsigned int 
  9362 ;; Registers used:
  9363 ;;		wreg, status,2, status,0
  9364 ;; Tracked objects:
  9365 ;;		On entry : 0/0
  9366 ;;		On exit  : 0/0
  9367 ;;		Unchanged: 0/0
  9368 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9369 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9370 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9371 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9372 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9373 ;;Total ram usage:        5 bytes
  9374 ;; Hardware stack levels used:    1
  9375 ;; This function calls:
  9376 ;;		Nothing
  9377 ;; This function is called by:
  9378 ;;		__bootloader_program
  9379 ;; This function uses a non-reentrant model
  9380 ;;
  9381                           
  9382                           	psect	text37
  9383  008D12                     __ptext37:
  9384                           	opt stack 0
  9385  008D12                     _internalFlash_pageFromAddress:
  9386                           	opt stack 28
  9387                           
  9388                           ;internal_flash.c: 310: address >>= 10;
  9389                           
  9390                           ;incstack = 0
  9391  008D12  0E0A               	movlw	10
  9392  008D14  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9393  008D16                     u11495:
  9394  008D16  90D8               	bcf	status,0,c
  9395  008D18  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9396  008D1A  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9397  008D1C  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9398  008D1E  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9399  008D20  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9400  008D22  D7F9               	goto	u11495
  9401                           
  9402                           ;internal_flash.c: 311: return (uint16_t) address;
  9403  008D24  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9404  008D28  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9405  008D2C  0012               	return	
  9406  008D2E                     __end_of_internalFlash_pageFromAddress:
  9407                           	opt stack 0
  9408                           tblptru	equ	0xFF8
  9409                           tblptrh	equ	0xFF7
  9410                           tblptrl	equ	0xFF6
  9411                           tablat	equ	0xFF5
  9412                           prodh	equ	0xFF4
  9413                           prodl	equ	0xFF3
  9414                           intcon	equ	0xFF2
  9415                           intcon2	equ	0xFF1
  9416                           intcon3	equ	0xFF0
  9417                           postinc0	equ	0xFEE
  9418                           wreg	equ	0xFE8
  9419                           indf1	equ	0xFE7
  9420                           postdec1	equ	0xFE5
  9421                           plusw1	equ	0xFE3
  9422                           fsr1h	equ	0xFE2
  9423                           fsr1l	equ	0xFE1
  9424                           indf2	equ	0xFDF
  9425                           postinc2	equ	0xFDE
  9426                           postdec2	equ	0xFDD
  9427                           plusw2	equ	0xFDB
  9428                           fsr2h	equ	0xFDA
  9429                           fsr2l	equ	0xFD9
  9430                           status	equ	0xFD8
  9431                           
  9432 ;; *************** function _internalFlash_getBuffer *****************
  9433 ;; Defined at:
  9434 ;;		line 32 in file "internal_flash.c"
  9435 ;; Parameters:    Size  Location     Type
  9436 ;;		None
  9437 ;; Auto vars:     Size  Location     Type
  9438 ;;		None
  9439 ;; Return value:  Size  Location     Type
  9440 ;;                  2    0[COMRAM] PTR unsigned char 
  9441 ;; Registers used:
  9442 ;;		wreg, status,2, status,0
  9443 ;; Tracked objects:
  9444 ;;		On entry : 0/0
  9445 ;;		On exit  : 0/0
  9446 ;;		Unchanged: 0/0
  9447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9448 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9449 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9450 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9451 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9452 ;;Total ram usage:        2 bytes
  9453 ;; Hardware stack levels used:    1
  9454 ;; This function calls:
  9455 ;;		Nothing
  9456 ;; This function is called by:
  9457 ;;		__bootloader_program
  9458 ;; This function uses a non-reentrant model
  9459 ;;
  9460                           
  9461                           	psect	text38
  9462  008EF2                     __ptext38:
  9463                           	opt stack 0
  9464  008EF2                     _internalFlash_getBuffer:
  9465                           	opt stack 28
  9466                           
  9467                           ;internal_flash.c: 34: return pageBuffer;
  9468                           
  9469                           ;incstack = 0
  9470  008EF2  0E00               	movlw	low _pageBuffer
  9471  008EF4  6E01               	movwf	?_internalFlash_getBuffer,c
  9472  008EF6  0E08               	movlw	high _pageBuffer
  9473  008EF8  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9474  008EFA  0012               	return	
  9475  008EFC                     __end_of_internalFlash_getBuffer:
  9476                           	opt stack 0
  9477                           tblptru	equ	0xFF8
  9478                           tblptrh	equ	0xFF7
  9479                           tblptrl	equ	0xFF6
  9480                           tablat	equ	0xFF5
  9481                           prodh	equ	0xFF4
  9482                           prodl	equ	0xFF3
  9483                           intcon	equ	0xFF2
  9484                           intcon2	equ	0xFF1
  9485                           intcon3	equ	0xFF0
  9486                           postinc0	equ	0xFEE
  9487                           wreg	equ	0xFE8
  9488                           indf1	equ	0xFE7
  9489                           postdec1	equ	0xFE5
  9490                           plusw1	equ	0xFE3
  9491                           fsr1h	equ	0xFE2
  9492                           fsr1l	equ	0xFE1
  9493                           indf2	equ	0xFDF
  9494                           postinc2	equ	0xFDE
  9495                           postdec2	equ	0xFDD
  9496                           plusw2	equ	0xFDB
  9497                           fsr2h	equ	0xFDA
  9498                           fsr2l	equ	0xFD9
  9499                           status	equ	0xFD8
  9500                           
  9501 ;; *************** function _internalFlash_erasePage *****************
  9502 ;; Defined at:
  9503 ;;		line 44 in file "internal_flash.c"
  9504 ;; Parameters:    Size  Location     Type
  9505 ;;  page            2    2[COMRAM] unsigned int 
  9506 ;; Auto vars:     Size  Location     Type
  9507 ;;  address         4    4[COMRAM] unsigned long 
  9508 ;; Return value:  Size  Location     Type
  9509 ;;                  1    wreg      void 
  9510 ;; Registers used:
  9511 ;;		wreg, status,2, status,0, cstack
  9512 ;; Tracked objects:
  9513 ;;		On entry : 0/0
  9514 ;;		On exit  : 0/0
  9515 ;;		Unchanged: 0/0
  9516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9518 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9520 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9521 ;;Total ram usage:        6 bytes
  9522 ;; Hardware stack levels used:    1
  9523 ;; Hardware stack levels required when called:    1
  9524 ;; This function calls:
  9525 ;;		__internalFlash_unlockAndActivate
  9526 ;; This function is called by:
  9527 ;;		__bootloader_program
  9528 ;; This function uses a non-reentrant model
  9529 ;;
  9530                           
  9531                           	psect	text39
  9532  00877E                     __ptext39:
  9533                           	opt stack 0
  9534  00877E                     _internalFlash_erasePage:
  9535                           	opt stack 27
  9536                           
  9537                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9538                           
  9539                           ;incstack = 0
  9540  00877E  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9541  008782  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9542  008786  6A07               	clrf	internalFlash_erasePage@address+2,c
  9543  008788  6A08               	clrf	internalFlash_erasePage@address+3,c
  9544                           
  9545                           ;internal_flash.c: 50: address <<= 10;
  9546  00878A  0E0A               	movlw	10
  9547  00878C                     u11505:
  9548  00878C  90D8               	bcf	status,0,c
  9549  00878E  3605               	rlcf	internalFlash_erasePage@address,f,c
  9550  008790  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9551  008792  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9552  008794  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9553  008796  2EE8               	decfsz	wreg,f,c
  9554  008798  D7F9               	goto	u11505
  9555                           
  9556                           ;internal_flash.c: 51: TBLPTR = address;
  9557  00879A  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9558  00879E  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9559  0087A2  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9560                           
  9561                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9562  0087A6  84A6               	bsf	4006,2,c	;volsfr
  9563                           
  9564                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9565  0087A8  88A6               	bsf	4006,4,c	;volsfr
  9566                           
  9567                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9568  0087AA  0EB5               	movlw	181
  9569  0087AC  EC3C  F045         	call	__internalFlash_unlockAndActivate
  9570  0087B0  0012               	return		;funcret
  9571  0087B2                     __end_of_internalFlash_erasePage:
  9572                           	opt stack 0
  9573                           tblptru	equ	0xFF8
  9574                           tblptrh	equ	0xFF7
  9575                           tblptrl	equ	0xFF6
  9576                           tablat	equ	0xFF5
  9577                           prodh	equ	0xFF4
  9578                           prodl	equ	0xFF3
  9579                           intcon	equ	0xFF2
  9580                           intcon2	equ	0xFF1
  9581                           intcon3	equ	0xFF0
  9582                           postinc0	equ	0xFEE
  9583                           wreg	equ	0xFE8
  9584                           indf1	equ	0xFE7
  9585                           postdec1	equ	0xFE5
  9586                           plusw1	equ	0xFE3
  9587                           fsr1h	equ	0xFE2
  9588                           fsr1l	equ	0xFE1
  9589                           indf2	equ	0xFDF
  9590                           postinc2	equ	0xFDE
  9591                           postdec2	equ	0xFDD
  9592                           plusw2	equ	0xFDB
  9593                           fsr2h	equ	0xFDA
  9594                           fsr2l	equ	0xFD9
  9595                           status	equ	0xFD8
  9596                           
  9597 ;; *************** function __internalFlash_unlockAndActivate *****************
  9598 ;; Defined at:
  9599 ;;		line 106 in file "internal_flash.c"
  9600 ;; Parameters:    Size  Location     Type
  9601 ;;  UnlockKey       1    wreg     unsigned char 
  9602 ;; Auto vars:     Size  Location     Type
  9603 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9604 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9605 ;; Return value:  Size  Location     Type
  9606 ;;                  1    wreg      void 
  9607 ;; Registers used:
  9608 ;;		wreg, status,2, status,0
  9609 ;; Tracked objects:
  9610 ;;		On entry : 0/0
  9611 ;;		On exit  : 0/0
  9612 ;;		Unchanged: 0/0
  9613 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9614 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9615 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9616 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9617 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9618 ;;Total ram usage:        2 bytes
  9619 ;; Hardware stack levels used:    1
  9620 ;; This function calls:
  9621 ;;		Nothing
  9622 ;; This function is called by:
  9623 ;;		_internalFlash_erasePage
  9624 ;;		_internalFlash_writePage
  9625 ;;		_EraseBlock
  9626 ;; This function uses a non-reentrant model
  9627 ;;
  9628                           
  9629                           	psect	text40
  9630  008A78                     __ptext40:
  9631                           	opt stack 0
  9632  008A78                     __internalFlash_unlockAndActivate:
  9633                           	opt stack 27
  9634                           
  9635                           ;incstack = 0
  9636                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9637  008A78  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9638                           
  9639                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9640  008A7A  0EB5               	movlw	181
  9641  008A7C  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9642  008A7E  B4D8               	btfsc	status,2,c
  9643  008A80  D002               	goto	l2558
  9644                           
  9645                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9646  008A82  94A6               	bcf	4006,2,c	;volsfr
  9647                           
  9648                           ;internal_flash.c: 118: return;
  9649  008A84  0012               	return	
  9650  008A86                     l2558:
  9651                           
  9652                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9653  008A86  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9654                           
  9655                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9656  008A8A  9EF2               	bcf	intcon,7,c	;volatile
  9657                           
  9658                           ;internal_flash.c: 123: EECON2 = 0x55;
  9659  008A8C  0E55               	movlw	85
  9660  008A8E  6EA7               	movwf	4007,c	;volsfr
  9661                           
  9662                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9663  008A90  0EAA               	movlw	170
  9664  008A92  6EA7               	movwf	4007,c	;volsfr
  9665                           
  9666                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9667  008A94  82A6               	bsf	4006,1,c	;volsfr
  9668                           
  9669                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9670  008A96  94A6               	bcf	4006,2,c	;volsfr
  9671                           
  9672                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9673  008A98  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9674  008A9A  0012               	return	
  9675                           
  9676                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9677  008A9C  8EF2               	bsf	intcon,7,c	;volatile
  9678  008A9E  0012               	return	
  9679  008AA0                     __end_of__internalFlash_unlockAndActivate:
  9680                           	opt stack 0
  9681                           tblptru	equ	0xFF8
  9682                           tblptrh	equ	0xFF7
  9683                           tblptrl	equ	0xFF6
  9684                           tablat	equ	0xFF5
  9685                           prodh	equ	0xFF4
  9686                           prodl	equ	0xFF3
  9687                           intcon	equ	0xFF2
  9688                           intcon2	equ	0xFF1
  9689                           intcon3	equ	0xFF0
  9690                           postinc0	equ	0xFEE
  9691                           wreg	equ	0xFE8
  9692                           indf1	equ	0xFE7
  9693                           postdec1	equ	0xFE5
  9694                           plusw1	equ	0xFE3
  9695                           fsr1h	equ	0xFE2
  9696                           fsr1l	equ	0xFE1
  9697                           indf2	equ	0xFDF
  9698                           postinc2	equ	0xFDE
  9699                           postdec2	equ	0xFDD
  9700                           plusw2	equ	0xFDB
  9701                           fsr2h	equ	0xFDA
  9702                           fsr2l	equ	0xFD9
  9703                           status	equ	0xFD8
  9704                           
  9705 ;; *************** function _internalFlash_addressWithinPage *****************
  9706 ;; Defined at:
  9707 ;;		line 322 in file "internal_flash.c"
  9708 ;; Parameters:    Size  Location     Type
  9709 ;;  address         4    8[COMRAM] unsigned long 
  9710 ;;  page            2   12[COMRAM] unsigned int 
  9711 ;; Auto vars:     Size  Location     Type
  9712 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9713 ;; Return value:  Size  Location     Type
  9714 ;;                  2    8[COMRAM] unsigned int 
  9715 ;; Registers used:
  9716 ;;		wreg, status,2, status,0, cstack
  9717 ;; Tracked objects:
  9718 ;;		On entry : 0/0
  9719 ;;		On exit  : 0/0
  9720 ;;		Unchanged: 0/0
  9721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9722 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9723 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9724 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9725 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9726 ;;Total ram usage:       14 bytes
  9727 ;; Hardware stack levels used:    1
  9728 ;; Hardware stack levels required when called:    1
  9729 ;; This function calls:
  9730 ;;		_internalFlash_addressFromPage
  9731 ;; This function is called by:
  9732 ;;		__bootloader_program
  9733 ;; This function uses a non-reentrant model
  9734 ;;
  9735                           
  9736                           	psect	text41
  9737  007BB0                     __ptext41:
  9738                           	opt stack 0
  9739  007BB0                     _internalFlash_addressWithinPage:
  9740                           	opt stack 27
  9741                           
  9742                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9743                           
  9744                           ;incstack = 0
  9745  007BB0  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9746  007BB4  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9747  007BB8  ECA2  F044         	call	_internalFlash_addressFromPage	;wreg free
  9748  007BBC  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9749  007BC0  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9750  007BC4  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9751  007BC8  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9752                           
  9753                           ;internal_flash.c: 326: address = address - page_start_address;
  9754  007BCC  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9755  007BD0  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9756  007BD4  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9757  007BD8  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9758  007BDC  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9759  007BDE  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9760  007BE0  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9761  007BE2  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9762  007BE4  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9763  007BE6  0E00               	movlw	0
  9764  007BE8  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9765  007BEA  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9766  007BEC  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9767  007BEE  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9768  007BF0  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9769  007BF2  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9770  007BF4  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9771  007BF6  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9772  007BF8  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9773  007BFA  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9774  007BFC  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9775  007BFE  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9776  007C00  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9777  007C02  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9778  007C04  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9779                           
  9780                           ;internal_flash.c: 327: return (uint16_t) address;
  9781  007C06  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9782  007C0A  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9783  007C0E  0012               	return	
  9784  007C10                     __end_of_internalFlash_addressWithinPage:
  9785                           	opt stack 0
  9786                           tblptru	equ	0xFF8
  9787                           tblptrh	equ	0xFF7
  9788                           tblptrl	equ	0xFF6
  9789                           tablat	equ	0xFF5
  9790                           prodh	equ	0xFF4
  9791                           prodl	equ	0xFF3
  9792                           intcon	equ	0xFF2
  9793                           intcon2	equ	0xFF1
  9794                           intcon3	equ	0xFF0
  9795                           postinc0	equ	0xFEE
  9796                           wreg	equ	0xFE8
  9797                           indf1	equ	0xFE7
  9798                           postdec1	equ	0xFE5
  9799                           plusw1	equ	0xFE3
  9800                           fsr1h	equ	0xFE2
  9801                           fsr1l	equ	0xFE1
  9802                           indf2	equ	0xFDF
  9803                           postinc2	equ	0xFDE
  9804                           postdec2	equ	0xFDD
  9805                           plusw2	equ	0xFDB
  9806                           fsr2h	equ	0xFDA
  9807                           fsr2l	equ	0xFD9
  9808                           status	equ	0xFD8
  9809                           
  9810 ;; *************** function _internalFlash_addressFromPage *****************
  9811 ;; Defined at:
  9812 ;;		line 314 in file "internal_flash.c"
  9813 ;; Parameters:    Size  Location     Type
  9814 ;;  page            2    0[COMRAM] unsigned int 
  9815 ;; Auto vars:     Size  Location     Type
  9816 ;;  address         4    4[COMRAM] unsigned long 
  9817 ;; Return value:  Size  Location     Type
  9818 ;;                  4    0[COMRAM] unsigned long 
  9819 ;; Registers used:
  9820 ;;		wreg, status,2, status,0
  9821 ;; Tracked objects:
  9822 ;;		On entry : 0/0
  9823 ;;		On exit  : 0/0
  9824 ;;		Unchanged: 0/0
  9825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9827 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9829 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9830 ;;Total ram usage:        8 bytes
  9831 ;; Hardware stack levels used:    1
  9832 ;; This function calls:
  9833 ;;		Nothing
  9834 ;; This function is called by:
  9835 ;;		_internalFlash_readPage
  9836 ;;		_internalFlash_addressWithinPage
  9837 ;; This function uses a non-reentrant model
  9838 ;;
  9839                           
  9840                           	psect	text42
  9841  008944                     __ptext42:
  9842                           	opt stack 0
  9843  008944                     _internalFlash_addressFromPage:
  9844                           	opt stack 27
  9845                           
  9846                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9847                           
  9848                           ;incstack = 0
  9849  008944  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9850  008948  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9851  00894C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9852  00894E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9853                           
  9854                           ;internal_flash.c: 318: address <<= 10;
  9855  008950  0E0A               	movlw	10
  9856  008952                     u10735:
  9857  008952  90D8               	bcf	status,0,c
  9858  008954  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9859  008956  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9860  008958  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9861  00895A  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9862  00895C  2EE8               	decfsz	wreg,f,c
  9863  00895E  D7F9               	goto	u10735
  9864                           
  9865                           ;internal_flash.c: 319: return address;
  9866  008960  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9867  008964  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9868  008968  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9869  00896C  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9870  008970  0012               	return	
  9871  008972                     __end_of_internalFlash_addressFromPage:
  9872                           	opt stack 0
  9873                           tblptru	equ	0xFF8
  9874                           tblptrh	equ	0xFF7
  9875                           tblptrl	equ	0xFF6
  9876                           tablat	equ	0xFF5
  9877                           prodh	equ	0xFF4
  9878                           prodl	equ	0xFF3
  9879                           intcon	equ	0xFF2
  9880                           intcon2	equ	0xFF1
  9881                           intcon3	equ	0xFF0
  9882                           postinc0	equ	0xFEE
  9883                           wreg	equ	0xFE8
  9884                           indf1	equ	0xFE7
  9885                           postdec1	equ	0xFE5
  9886                           plusw1	equ	0xFE3
  9887                           fsr1h	equ	0xFE2
  9888                           fsr1l	equ	0xFE1
  9889                           indf2	equ	0xFDF
  9890                           postinc2	equ	0xFDE
  9891                           postdec2	equ	0xFDD
  9892                           plusw2	equ	0xFDB
  9893                           fsr2h	equ	0xFDA
  9894                           fsr2l	equ	0xFD9
  9895                           status	equ	0xFD8
  9896                           
  9897 ;; *************** function __bootloader_check_address *****************
  9898 ;; Defined at:
  9899 ;;		line 109 in file "bootloader.c"
  9900 ;; Parameters:    Size  Location     Type
  9901 ;;  address         4    0[COMRAM] unsigned long 
  9902 ;;  dataLength      1    4[COMRAM] unsigned char 
  9903 ;; Auto vars:     Size  Location     Type
  9904 ;;  cntr            1   11[COMRAM] unsigned char 
  9905 ;;  byte_status     1   10[COMRAM] enum E6963
  9906 ;;  worst_case      1    9[COMRAM] enum E6963
  9907 ;; Return value:  Size  Location     Type
  9908 ;;                  1    wreg      enum E6963
  9909 ;; Registers used:
  9910 ;;		wreg, status,2, status,0
  9911 ;; Tracked objects:
  9912 ;;		On entry : 0/0
  9913 ;;		On exit  : 0/0
  9914 ;;		Unchanged: 0/0
  9915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9916 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9917 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9918 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9919 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9920 ;;Total ram usage:       12 bytes
  9921 ;; Hardware stack levels used:    1
  9922 ;; This function calls:
  9923 ;;		Nothing
  9924 ;; This function is called by:
  9925 ;;		__bootloader_verify_file
  9926 ;;		__bootloader_program
  9927 ;; This function uses a non-reentrant model
  9928 ;;
  9929                           
  9930                           	psect	text43
  9931  0059AA                     __ptext43:
  9932                           	opt stack 0
  9933  0059AA                     __bootloader_check_address:
  9934                           	opt stack 28
  9935                           
  9936                           ;bootloader.c: 111: addressCheckResult_t byte_status;;bootloader.c: 112: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 113: uint8_t cntr;;bootloader.c: 115: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9937                           
  9938                           ;incstack = 0
  9939  0059AA  0E00               	movlw	0
  9940  0059AC  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9941                           
  9942                           ;bootloader.c: 118: for(cntr=0; cntr<dataLength; ++cntr)
  9943  0059AE  0E00               	movlw	0
  9944  0059B0  6E0C               	movwf	__bootloader_check_address@cntr,c
  9945  0059B2  D062               	goto	l2418
  9946  0059B4                     
  9947                           ;bootloader.c: 119: {;bootloader.c: 121: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
  9948  0059B4  500C               	movf	__bootloader_check_address@cntr,w,c
  9949  0059B6  2401               	addwf	__bootloader_check_address@address,w,c
  9950  0059B8  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9951  0059BA  0E00               	movlw	0
  9952  0059BC  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9953  0059BE  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9954  0059C0  0E00               	movlw	0
  9955  0059C2  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9956  0059C4  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9957  0059C6  0E00               	movlw	0
  9958  0059C8  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9959  0059CA  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9960  0059CC  5009               	movf	??__bootloader_check_address+3,w,c
  9961  0059CE  1008               	iorwf	??__bootloader_check_address+2,w,c
  9962  0059D0  E104               	bnz	u11420
  9963  0059D2  0EA0               	movlw	160
  9964  0059D4  5C07               	subwf	??__bootloader_check_address+1,w,c
  9965  0059D6  A0D8               	btfss	status,0,c
  9966  0059D8  D018               	goto	l2420
  9967  0059DA                     u11420:
  9968  0059DA  500C               	movf	__bootloader_check_address@cntr,w,c
  9969  0059DC  2401               	addwf	__bootloader_check_address@address,w,c
  9970  0059DE  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9971  0059E0  0E00               	movlw	0
  9972  0059E2  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9973  0059E4  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9974  0059E6  0E00               	movlw	0
  9975  0059E8  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9976  0059EA  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9977  0059EC  0E00               	movlw	0
  9978  0059EE  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9979  0059F0  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9980  0059F2  5009               	movf	??__bootloader_check_address+3,w,c
  9981  0059F4  E10A               	bnz	l14363
  9982  0059F6  0EF8               	movlw	248
  9983  0059F8  5C06               	subwf	??__bootloader_check_address,w,c
  9984  0059FA  0EFF               	movlw	255
  9985  0059FC  5807               	subwfb	??__bootloader_check_address+1,w,c
  9986  0059FE  0E01               	movlw	1
  9987  005A00  5808               	subwfb	??__bootloader_check_address+2,w,c
  9988  005A02  B0D8               	btfsc	status,0,c
  9989  005A04  D002               	goto	l2420
  9990                           
  9991                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_OK;
  9992  005A06  0E00               	movlw	0
  9993  005A08  D029               	goto	L4
  9994  005A0A                     l2420:
  9995  005A0A                     l14363:
  9996                           
  9997                           ;bootloader.c: 127: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
  9998  005A0A  500C               	movf	__bootloader_check_address@cntr,w,c
  9999  005A0C  2401               	addwf	__bootloader_check_address@address,w,c
 10000  005A0E  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10001  005A10  0E00               	movlw	0
 10002  005A12  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10003  005A14  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10004  005A16  0E00               	movlw	0
 10005  005A18  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10006  005A1A  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10007  005A1C  0E00               	movlw	0
 10008  005A1E  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10009  005A20  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10010  005A22  5009               	movf	??__bootloader_check_address+3,w,c
 10011  005A24  E108               	bnz	u11440
 10012  005A26  0EF8               	movlw	248
 10013  005A28  5C06               	subwf	??__bootloader_check_address,w,c
 10014  005A2A  0EFF               	movlw	255
 10015  005A2C  5807               	subwfb	??__bootloader_check_address+1,w,c
 10016  005A2E  0E01               	movlw	1
 10017  005A30  5808               	subwfb	??__bootloader_check_address+2,w,c
 10018  005A32  A0D8               	btfss	status,0,c
 10019  005A34  D015               	goto	l2422
 10020  005A36                     u11440:
 10021  005A36  500C               	movf	__bootloader_check_address@cntr,w,c
 10022  005A38  2401               	addwf	__bootloader_check_address@address,w,c
 10023  005A3A  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10024  005A3C  0E00               	movlw	0
 10025  005A3E  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10026  005A40  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10027  005A42  0E00               	movlw	0
 10028  005A44  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10029  005A46  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10030  005A48  0E00               	movlw	0
 10031  005A4A  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10032  005A4C  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10033  005A4E  5009               	movf	??__bootloader_check_address+3,w,c
 10034  005A50  E107               	bnz	l2422
 10035  005A52  0E02               	movlw	2
 10036  005A54  5C08               	subwf	??__bootloader_check_address+2,w,c
 10037  005A56  B0D8               	btfsc	status,0,c
 10038  005A58  D003               	goto	l2422
 10039                           
 10040                           ;bootloader.c: 128: {;bootloader.c: 129: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10041  005A5A  0E01               	movlw	1
 10042  005A5C                     L4:
 10043  005A5C  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10044                           
 10045                           ;bootloader.c: 130: }
 10046  005A5E  D001               	goto	l2423
 10047  005A60                     l2422:
 10048                           
 10049                           ;bootloader.c: 131: else;bootloader.c: 132: {;bootloader.c: 133: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10050  005A60  680B               	setf	__bootloader_check_address@byte_status,c
 10051  005A62                     l2423:
 10052                           
 10053                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10054  005A62  280B               	incf	__bootloader_check_address@byte_status,w,c
 10055  005A64  A4D8               	btfss	status,2,c
 10056  005A66  D002               	goto	l2424
 10057                           
 10058                           ;bootloader.c: 138: {;bootloader.c: 139: return ADDRESS_CHECK_RESULT_ERROR;
 10059  005A68  0EFF               	movlw	255
 10060  005A6A  0012               	return	
 10061  005A6C                     l2424:
 10062                           
 10063                           ;bootloader.c: 140: };bootloader.c: 143: if(byte_status > worst_case)
 10064  005A6C  500B               	movf	__bootloader_check_address@byte_status,w,c
 10065  005A6E  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10066  005A70  A0D8               	btfss	status,0,c
 10067                           
 10068                           ;bootloader.c: 144: {;bootloader.c: 145: worst_case = byte_status;
 10069  005A72  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10070  005A76  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10071  005A78                     l2418:
 10072  005A78  5005               	movf	__bootloader_check_address@dataLength,w,c
 10073  005A7A  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10074  005A7C  A0D8               	btfss	status,0,c
 10075  005A7E  D79A               	goto	l2419
 10076                           
 10077                           ;bootloader.c: 146: };bootloader.c: 147: };bootloader.c: 149: return worst_case;
 10078  005A80  500A               	movf	__bootloader_check_address@worst_case,w,c
 10079  005A82  0012               	return	
 10080  005A84                     __end_of__bootloader_check_address:
 10081                           	opt stack 0
 10082                           tblptru	equ	0xFF8
 10083                           tblptrh	equ	0xFF7
 10084                           tblptrl	equ	0xFF6
 10085                           tablat	equ	0xFF5
 10086                           prodh	equ	0xFF4
 10087                           prodl	equ	0xFF3
 10088                           intcon	equ	0xFF2
 10089                           intcon2	equ	0xFF1
 10090                           intcon3	equ	0xFF0
 10091                           postinc0	equ	0xFEE
 10092                           wreg	equ	0xFE8
 10093                           indf1	equ	0xFE7
 10094                           postdec1	equ	0xFE5
 10095                           plusw1	equ	0xFE3
 10096                           fsr1h	equ	0xFE2
 10097                           fsr1l	equ	0xFE1
 10098                           indf2	equ	0xFDF
 10099                           postinc2	equ	0xFDE
 10100                           postdec2	equ	0xFDD
 10101                           plusw2	equ	0xFDB
 10102                           fsr2h	equ	0xFDA
 10103                           fsr2l	equ	0xFD9
 10104                           status	equ	0xFD8
 10105                           
 10106 ;; *************** function __bootloader_find_file *****************
 10107 ;; Defined at:
 10108 ;;		line 152 in file "bootloader.c"
 10109 ;; Parameters:    Size  Location     Type
 10110 ;;		None
 10111 ;; Auto vars:     Size  Location     Type
 10112 ;;		None
 10113 ;; Return value:  Size  Location     Type
 10114 ;;                  1    wreg      void 
 10115 ;; Registers used:
 10116 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10117 ;; Tracked objects:
 10118 ;;		On entry : 0/0
 10119 ;;		On exit  : 0/0
 10120 ;;		Unchanged: 0/0
 10121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10122 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10123 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10124 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10125 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10126 ;;Total ram usage:        0 bytes
 10127 ;; Hardware stack levels used:    1
 10128 ;; Hardware stack levels required when called:    7
 10129 ;; This function calls:
 10130 ;;		_fat_find_file
 10131 ;;		_fat_get_file_size
 10132 ;; This function is called by:
 10133 ;;		_bootloader_run
 10134 ;; This function uses a non-reentrant model
 10135 ;;
 10136                           
 10137                           	psect	text44
 10138  006878                     __ptext44:
 10139                           	opt stack 0
 10140  006878                     __bootloader_find_file:
 10141                           	opt stack 22
 10142                           
 10143                           ;bootloader.c: 155: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10144                           
 10145                           ;incstack = 0
 10146  006878  0EB7               	movlw	low _bootloader_filename
 10147  00687A  6E2C               	movwf	fat_find_file@name,c
 10148  00687C  0E9F               	movlw	high _bootloader_filename
 10149  00687E  6E2D               	movwf	fat_find_file@name+1,c
 10150  006880  0EC8               	movlw	low _bootloader_extension
 10151  006882  6E2E               	movwf	fat_find_file@extension,c
 10152  006884  0E9F               	movlw	high _bootloader_extension
 10153  006886  6E2F               	movwf	fat_find_file@extension+1,c
 10154  006888  EC65  F02C         	call	_fat_find_file	;wreg free
 10155  00688C  0100               	movlb	0	; () banked
 10156  00688E  6FFF               	movwf	_file_number& (0+255),b
 10157                           
 10158                           ; BSR set to: 0
 10159                           ;bootloader.c: 158: if(file_number!=0xFF)
 10160  006890  29FF               	incf	_file_number& (0+255),w,b
 10161  006892  B4D8               	btfsc	status,2,c
 10162  006894  D034               	goto	l2430
 10163                           
 10164                           ; BSR set to: 0
 10165                           ;bootloader.c: 159: {;bootloader.c: 161: hex_file_size = fat_get_file_size(file_number);
 10166  006896  51FF               	movf	_file_number& (0+255),w,b
 10167  006898  EC0F  F03C         	call	_fat_get_file_size
 10168  00689C  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
 10169  0068A0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10170  0068A4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10171  0068A8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10172                           
 10173                           ;bootloader.c: 163: hex_file_entries = 0;
 10174  0068AC  0E00               	movlw	0
 10175  0068AE  0101               	movlb	1	; () banked
 10176  0068B0  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
 10177  0068B2  0E00               	movlw	0
 10178  0068B4  6F78               	movwf	_hex_file_entries& (0+255),b
 10179                           
 10180                           ; BSR set to: 1
 10181                           ;bootloader.c: 164: hex_file_offset = 0;
 10182  0068B6  0E00               	movlw	0
 10183  0068B8  0100               	movlb	0	; () banked
 10184  0068BA  6FD7               	movwf	_hex_file_offset& (0+255),b
 10185  0068BC  0E00               	movlw	0
 10186  0068BE  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
 10187  0068C0  0E00               	movlw	0
 10188  0068C2  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
 10189  0068C4  0E00               	movlw	0
 10190  0068C6  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
 10191                           
 10192                           ; BSR set to: 0
 10193                           ;bootloader.c: 165: file_minimum_address = 0xFFFFFFFF;
 10194  0068C8  0101               	movlb	1	; () banked
 10195  0068CA  6952               	setf	_file_minimum_address& (0+255),b
 10196  0068CC  6953               	setf	(_file_minimum_address+1)& (0+255),b
 10197  0068CE  6954               	setf	(_file_minimum_address+2)& (0+255),b
 10198  0068D0  6955               	setf	(_file_minimum_address+3)& (0+255),b
 10199                           
 10200                           ; BSR set to: 1
 10201                           ;bootloader.c: 166: file_maximum_address = 0x00000000;
 10202  0068D2  0E00               	movlw	0
 10203  0068D4  6F4E               	movwf	_file_maximum_address& (0+255),b
 10204  0068D6  0E00               	movlw	0
 10205  0068D8  6F4F               	movwf	(_file_maximum_address+1)& (0+255),b
 10206  0068DA  0E00               	movlw	0
 10207  0068DC  6F50               	movwf	(_file_maximum_address+2)& (0+255),b
 10208  0068DE  0E00               	movlw	0
 10209  0068E0  6F51               	movwf	(_file_maximum_address+3)& (0+255),b
 10210                           
 10211                           ; BSR set to: 1
 10212                           ;bootloader.c: 167: extended_linear_address = 0x00000000;
 10213  0068E2  0E00               	movlw	0
 10214  0068E4  6F46               	movwf	_extended_linear_address& (0+255),b
 10215  0068E6  0E00               	movlw	0
 10216  0068E8  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10217  0068EA  0E00               	movlw	0
 10218  0068EC  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10219  0068EE  0E00               	movlw	0
 10220  0068F0  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10221                           
 10222                           ; BSR set to: 1
 10223                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10224  0068F2  0E20               	movlw	32
 10225  0068F4  0100               	movlb	0	; () banked
 10226  0068F6  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10227                           
 10228                           ; BSR set to: 0
 10229                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10230  0068F8  0E20               	movlw	32
 10231  0068FA  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10232                           
 10233                           ;bootloader.c: 170: }
 10234  0068FC  0012               	return	
 10235  0068FE                     l2430:
 10236                           
 10237                           ; BSR set to: 0
 10238                           ;bootloader.c: 172: else;bootloader.c: 173: {;bootloader.c: 175: hex_file_size = 0;
 10239                           
 10240                           ; BSR set to: 0
 10241  0068FE  0E00               	movlw	0
 10242  006900  0101               	movlb	1	; () banked
 10243  006902  6F4A               	movwf	_hex_file_size& (0+255),b
 10244  006904  0E00               	movlw	0
 10245  006906  6F4B               	movwf	(_hex_file_size+1)& (0+255),b
 10246  006908  0E00               	movlw	0
 10247  00690A  6F4C               	movwf	(_hex_file_size+2)& (0+255),b
 10248  00690C  0E00               	movlw	0
 10249  00690E  6F4D               	movwf	(_hex_file_size+3)& (0+255),b
 10250                           
 10251                           ;bootloader.c: 177: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10252  006910  0E10               	movlw	16
 10253  006912  0100               	movlb	0	; () banked
 10254  006914  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10255                           
 10256                           ;bootloader.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10257  006916  0E10               	movlw	16
 10258  006918  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10259  00691A  0012               	return	
 10260  00691C                     __end_of__bootloader_find_file:
 10261                           	opt stack 0
 10262                           tblptru	equ	0xFF8
 10263                           tblptrh	equ	0xFF7
 10264                           tblptrl	equ	0xFF6
 10265                           tablat	equ	0xFF5
 10266                           prodh	equ	0xFF4
 10267                           prodl	equ	0xFF3
 10268                           intcon	equ	0xFF2
 10269                           intcon2	equ	0xFF1
 10270                           intcon3	equ	0xFF0
 10271                           postinc0	equ	0xFEE
 10272                           wreg	equ	0xFE8
 10273                           indf1	equ	0xFE7
 10274                           postdec1	equ	0xFE5
 10275                           plusw1	equ	0xFE3
 10276                           fsr1h	equ	0xFE2
 10277                           fsr1l	equ	0xFE1
 10278                           indf2	equ	0xFDF
 10279                           postinc2	equ	0xFDE
 10280                           postdec2	equ	0xFDD
 10281                           plusw2	equ	0xFDB
 10282                           fsr2h	equ	0xFDA
 10283                           fsr2l	equ	0xFD9
 10284                           status	equ	0xFD8
 10285                           
 10286 ;; *************** function __normal_mode *****************
 10287 ;; Defined at:
 10288 ;;		line 208 in file "main.c"
 10289 ;; Parameters:    Size  Location     Type
 10290 ;;		None
 10291 ;; Auto vars:     Size  Location     Type
 10292 ;;		None
 10293 ;; Return value:  Size  Location     Type
 10294 ;;                  1    wreg      unsigned char 
 10295 ;; Registers used:
 10296 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10297 ;; Tracked objects:
 10298 ;;		On entry : 0/0
 10299 ;;		On exit  : 0/0
 10300 ;;		Unchanged: 0/0
 10301 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10302 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10303 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10304 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10305 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10306 ;;Total ram usage:        0 bytes
 10307 ;; Hardware stack levels used:    1
 10308 ;; Hardware stack levels required when called:    3
 10309 ;; This function calls:
 10310 ;;		_i2c_eeprom_readByte
 10311 ;;		_i2c_eeprom_writeByte
 10312 ;; This function is called by:
 10313 ;;		_main
 10314 ;; This function uses a non-reentrant model
 10315 ;;
 10316                           
 10317                           	psect	text45
 10318  007C10                     __ptext45:
 10319                           	opt stack 0
 10320  007C10                     __normal_mode:
 10321                           	opt stack 27
 10322                           
 10323                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10324                           
 10325                           ; BSR set to: 0
 10326                           ;incstack = 0
 10327  007C10  0E01               	movlw	1
 10328  007C12  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10329  007C14  0E00               	movlw	0
 10330  007C16  6E12               	movwf	i2c_eeprom_readByte@address,c
 10331  007C18  ECEB  F040         	call	_i2c_eeprom_readByte	;wreg free
 10332  007C1C  0A94               	xorlw	148
 10333  007C1E  A4D8               	btfss	status,2,c
 10334  007C20  D00A               	goto	l914
 10335                           
 10336                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10337  007C22  0E01               	movlw	1
 10338  007C24  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10339  007C26  0E00               	movlw	0
 10340  007C28  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10341  007C2A  0E00               	movlw	0
 10342  007C2C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10343  007C2E  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10344                           
 10345                           ;main.c: 215: return 0;
 10346  007C32  0E00               	movlw	0
 10347  007C34  0012               	return	
 10348  007C36                     l914:
 10349                           
 10350                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10351  007C36  0E01               	movlw	1
 10352  007C38  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10353  007C3A  0E00               	movlw	0
 10354  007C3C  6E12               	movwf	i2c_eeprom_readByte@address,c
 10355  007C3E  ECEB  F040         	call	_i2c_eeprom_readByte	;wreg free
 10356  007C42  0A78               	xorlw	120
 10357  007C44  A4D8               	btfss	status,2,c
 10358  007C46  D00A               	goto	l917
 10359                           
 10360                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10361  007C48  0E01               	movlw	1
 10362  007C4A  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10363  007C4C  0E00               	movlw	0
 10364  007C4E  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10365  007C50  0E00               	movlw	0
 10366  007C52  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10367  007C54  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10368                           
 10369                           ;main.c: 222: return 1;
 10370  007C58  0E01               	movlw	1
 10371  007C5A  0012               	return	
 10372  007C5C                     l917:
 10373                           
 10374                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10375  007C5C  8089               	bsf	3977,0,c	;volatile
 10376                           
 10377                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10378  007C5E  9092               	bcf	3986,0,c	;volatile
 10379                           
 10380                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10381  007C60  8092               	bsf	3986,0,c	;volatile
 10382                           
 10383                           ;main.c: 233: if(!PORTAbits.RA0)
 10384  007C62  B080               	btfsc	3968,0,c	;volatile
 10385  007C64  D002               	goto	l918
 10386                           
 10387                           ;main.c: 234: {;main.c: 236: return 0;
 10388  007C66  0E00               	movlw	0
 10389                           
 10390                           ;main.c: 237: }
 10391  007C68  0012               	return	
 10392  007C6A                     l918:
 10393                           
 10394                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10395  007C6A  0E01               	movlw	1
 10396  007C6C  0012               	return	
 10397  007C6E                     __end_of__normal_mode:
 10398                           	opt stack 0
 10399                           tblptru	equ	0xFF8
 10400                           tblptrh	equ	0xFF7
 10401                           tblptrl	equ	0xFF6
 10402                           tablat	equ	0xFF5
 10403                           prodh	equ	0xFF4
 10404                           prodl	equ	0xFF3
 10405                           intcon	equ	0xFF2
 10406                           intcon2	equ	0xFF1
 10407                           intcon3	equ	0xFF0
 10408                           postinc0	equ	0xFEE
 10409                           wreg	equ	0xFE8
 10410                           indf1	equ	0xFE7
 10411                           postdec1	equ	0xFE5
 10412                           plusw1	equ	0xFE3
 10413                           fsr1h	equ	0xFE2
 10414                           fsr1l	equ	0xFE1
 10415                           indf2	equ	0xFDF
 10416                           postinc2	equ	0xFDE
 10417                           postdec2	equ	0xFDD
 10418                           plusw2	equ	0xFDB
 10419                           fsr2h	equ	0xFDA
 10420                           fsr2l	equ	0xFD9
 10421                           status	equ	0xFD8
 10422                           
 10423 ;; *************** function _i2c_eeprom_readByte *****************
 10424 ;; Defined at:
 10425 ;;		line 367 in file "i2c.c"
 10426 ;; Parameters:    Size  Location     Type
 10427 ;;  address         2   17[COMRAM] unsigned int 
 10428 ;; Auto vars:     Size  Location     Type
 10429 ;;  addr            1   23[COMRAM] unsigned char 
 10430 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10431 ;; Return value:  Size  Location     Type
 10432 ;;                  1    wreg      unsigned char 
 10433 ;; Registers used:
 10434 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10435 ;; Tracked objects:
 10436 ;;		On entry : 0/0
 10437 ;;		On exit  : 0/0
 10438 ;;		Unchanged: 0/0
 10439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10440 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10441 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10442 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10443 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10444 ;;Total ram usage:        7 bytes
 10445 ;; Hardware stack levels used:    1
 10446 ;; Hardware stack levels required when called:    2
 10447 ;; This function calls:
 10448 ;;		__i2c_read
 10449 ;;		__i2c_write
 10450 ;;		_i2c_set_frequency
 10451 ;; This function is called by:
 10452 ;;		__normal_mode
 10453 ;; This function uses a non-reentrant model
 10454 ;;
 10455                           
 10456                           	psect	text46
 10457  0081D6                     __ptext46:
 10458                           	opt stack 0
 10459  0081D6                     _i2c_eeprom_readByte:
 10460                           	opt stack 27
 10461                           
 10462                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10463                           
 10464                           ;incstack = 0
 10465  0081D6  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10466  0081DA  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10467  0081DE  0E07               	movlw	7
 10468  0081E0  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10469  0081E2                     u12085:
 10470  0081E2  90D8               	bcf	status,0,c
 10471  0081E4  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10472  0081E6  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10473  0081E8  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10474  0081EA  D7FB               	goto	u12085
 10475  0081EC  5014               	movf	??_i2c_eeprom_readByte,w,c
 10476  0081EE  0B0E               	andlw	14
 10477  0081F0  09A0               	iorlw	160
 10478  0081F2  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10479                           
 10480                           ;i2c.c: 372: addr = address & 0xFF;
 10481  0081F4  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10482                           
 10483                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10484  0081F8  0E02               	movlw	2
 10485  0081FA  ECFB  F044         	call	_i2c_set_frequency
 10486                           
 10487                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10488  0081FE  0E18               	movlw	low i2c_eeprom_readByte@addr
 10489  008200  6E06               	movwf	__i2c_write@data,c
 10490  008202  0E00               	movlw	high i2c_eeprom_readByte@addr
 10491  008204  6E07               	movwf	__i2c_write@data+1,c
 10492  008206  0E01               	movlw	1
 10493  008208  6E08               	movwf	__i2c_write@length,c
 10494  00820A  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10495  00820C  EC85  F041         	call	__i2c_write
 10496                           
 10497                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10498  008210  0E18               	movlw	low i2c_eeprom_readByte@addr
 10499  008212  6E06               	movwf	__i2c_read@data,c
 10500  008214  0E00               	movlw	high i2c_eeprom_readByte@addr
 10501  008216  6E07               	movwf	__i2c_read@data+1,c
 10502  008218  0E01               	movlw	1
 10503  00821A  6E08               	movwf	__i2c_read@length,c
 10504  00821C  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10505  00821E  EC29  F038         	call	__i2c_read
 10506                           
 10507                           ;i2c.c: 379: return addr;
 10508  008222  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10509  008224  0012               	return	
 10510  008226                     __end_of_i2c_eeprom_readByte:
 10511                           	opt stack 0
 10512                           tblptru	equ	0xFF8
 10513                           tblptrh	equ	0xFF7
 10514                           tblptrl	equ	0xFF6
 10515                           tablat	equ	0xFF5
 10516                           prodh	equ	0xFF4
 10517                           prodl	equ	0xFF3
 10518                           intcon	equ	0xFF2
 10519                           intcon2	equ	0xFF1
 10520                           intcon3	equ	0xFF0
 10521                           postinc0	equ	0xFEE
 10522                           wreg	equ	0xFE8
 10523                           indf1	equ	0xFE7
 10524                           postdec1	equ	0xFE5
 10525                           plusw1	equ	0xFE3
 10526                           fsr1h	equ	0xFE2
 10527                           fsr1l	equ	0xFE1
 10528                           indf2	equ	0xFDF
 10529                           postinc2	equ	0xFDE
 10530                           postdec2	equ	0xFDD
 10531                           plusw2	equ	0xFDB
 10532                           fsr2h	equ	0xFDA
 10533                           fsr2l	equ	0xFD9
 10534                           status	equ	0xFD8
 10535                           
 10536 ;; *************** function __i2c_read *****************
 10537 ;; Defined at:
 10538 ;;		line 161 in file "i2c.c"
 10539 ;; Parameters:    Size  Location     Type
 10540 ;;  slave_addres    1    wreg     unsigned char 
 10541 ;;  data            2    5[COMRAM] PTR unsigned char 
 10542 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10543 ;;  length          1    7[COMRAM] unsigned char 
 10544 ;; Auto vars:     Size  Location     Type
 10545 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10546 ;;  cntr            1   16[COMRAM] unsigned char 
 10547 ;; Return value:  Size  Location     Type
 10548 ;;                  1    wreg      void 
 10549 ;; Registers used:
 10550 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10551 ;; Tracked objects:
 10552 ;;		On entry : 0/0
 10553 ;;		On exit  : 0/0
 10554 ;;		Unchanged: 0/0
 10555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10556 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10557 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10558 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10559 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10560 ;;Total ram usage:       12 bytes
 10561 ;; Hardware stack levels used:    1
 10562 ;; Hardware stack levels required when called:    1
 10563 ;; This function calls:
 10564 ;;		__i2c_acknowledge
 10565 ;;		__i2c_get
 10566 ;;		__i2c_not_acknowledge
 10567 ;;		__i2c_send
 10568 ;;		__i2c_start
 10569 ;;		__i2c_stop
 10570 ;;		__i2c_wait_idle
 10571 ;; This function is called by:
 10572 ;;		_i2c_eeprom_readByte
 10573 ;;		_i2c_eeprom_read
 10574 ;; This function uses a non-reentrant model
 10575 ;;
 10576                           
 10577                           	psect	text47
 10578  007052                     __ptext47:
 10579                           	opt stack 0
 10580  007052                     __i2c_read:
 10581                           	opt stack 27
 10582                           
 10583                           ;incstack = 0
 10584                           ;__i2c_read@slave_address stored from wreg
 10585  007052  6E10               	movwf	__i2c_read@slave_address,c
 10586                           
 10587                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10588  007054  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 10589                           
 10590                           ;i2c.c: 166: _i2c_start();
 10591  007058  ECB9  F047         	call	__i2c_start	;wreg free
 10592                           
 10593                           ;i2c.c: 167: _i2c_wait_idle();
 10594  00705C  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 10595                           
 10596                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10597  007060  5010               	movf	__i2c_read@slave_address,w,c
 10598  007062  0901               	iorlw	1
 10599  007064  ECBD  F047         	call	__i2c_send
 10600                           
 10601                           ;i2c.c: 169: _i2c_wait_idle();
 10602  007068  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 10603                           
 10604                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10605  00706C  0E00               	movlw	0
 10606  00706E  6E11               	movwf	__i2c_read@cntr,c
 10607  007070  D00E               	goto	l1209
 10608  007072                     
 10609                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10610  007072  5011               	movf	__i2c_read@cntr,w,c
 10611  007074  0D01               	mullw	1
 10612  007076  50F3               	movf	prodl,w,c
 10613  007078  2406               	addwf	__i2c_read@data,w,c
 10614  00707A  6ED9               	movwf	fsr2l,c
 10615  00707C  50F4               	movf	prodh,w,c
 10616  00707E  2007               	addwfc	__i2c_read@data+1,w,c
 10617  007080  6EDA               	movwf	fsr2h,c
 10618  007082  EC83  F047         	call	__i2c_get	;wreg free
 10619  007086  6EDF               	movwf	indf2,c
 10620                           
 10621                           ;i2c.c: 174: _i2c_acknowledge();
 10622  007088  EC88  F047         	call	__i2c_acknowledge	;wreg free
 10623  00708C  2A11               	incf	__i2c_read@cntr,f,c
 10624  00708E                     l1209:
 10625  00708E  0EFF               	movlw	255
 10626  007090  6E09               	movwf	??__i2c_read& (0+255),c
 10627  007092  0EFF               	movlw	255
 10628  007094  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10629  007096  5008               	movf	__i2c_read@length,w,c
 10630  007098  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10631  00709A  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10632  00709C  5009               	movf	??__i2c_read,w,c
 10633  00709E  260B               	addwf	??__i2c_read+2,f,c
 10634  0070A0  500A               	movf	??__i2c_read+1,w,c
 10635  0070A2  220C               	addwfc	??__i2c_read+3,f,c
 10636  0070A4  5011               	movf	__i2c_read@cntr,w,c
 10637  0070A6  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10638  0070A8  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10639  0070AA  500B               	movf	??__i2c_read+2,w,c
 10640  0070AC  5C0D               	subwf	??__i2c_read+4,w,c
 10641  0070AE  500E               	movf	??__i2c_read+5,w,c
 10642  0070B0  0A80               	xorlw	128
 10643  0070B2  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10644  0070B4  500C               	movf	??__i2c_read+3,w,c
 10645  0070B6  0A80               	xorlw	128
 10646  0070B8  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10647  0070BA  A0D8               	btfss	status,0,c
 10648  0070BC  D7DA               	goto	l1210
 10649                           
 10650                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10651  0070BE  5011               	movf	__i2c_read@cntr,w,c
 10652  0070C0  0D01               	mullw	1
 10653  0070C2  50F3               	movf	prodl,w,c
 10654  0070C4  2406               	addwf	__i2c_read@data,w,c
 10655  0070C6  6ED9               	movwf	fsr2l,c
 10656  0070C8  50F4               	movf	prodh,w,c
 10657  0070CA  2007               	addwfc	__i2c_read@data+1,w,c
 10658  0070CC  6EDA               	movwf	fsr2h,c
 10659  0070CE  EC83  F047         	call	__i2c_get	;wreg free
 10660  0070D2  6EDF               	movwf	indf2,c
 10661                           
 10662                           ;i2c.c: 177: _i2c_not_acknowledge();
 10663  0070D4  EC7E  F047         	call	__i2c_not_acknowledge	;wreg free
 10664                           
 10665                           ;i2c.c: 179: _i2c_stop();
 10666  0070D8  ECB5  F047         	call	__i2c_stop	;wreg free
 10667  0070DC  0012               	return		;funcret
 10668  0070DE                     __end_of__i2c_read:
 10669                           	opt stack 0
 10670                           tblptru	equ	0xFF8
 10671                           tblptrh	equ	0xFF7
 10672                           tblptrl	equ	0xFF6
 10673                           tablat	equ	0xFF5
 10674                           prodh	equ	0xFF4
 10675                           prodl	equ	0xFF3
 10676                           intcon	equ	0xFF2
 10677                           intcon2	equ	0xFF1
 10678                           intcon3	equ	0xFF0
 10679                           postinc0	equ	0xFEE
 10680                           wreg	equ	0xFE8
 10681                           indf1	equ	0xFE7
 10682                           postdec1	equ	0xFE5
 10683                           plusw1	equ	0xFE3
 10684                           fsr1h	equ	0xFE2
 10685                           fsr1l	equ	0xFE1
 10686                           indf2	equ	0xFDF
 10687                           postinc2	equ	0xFDE
 10688                           postdec2	equ	0xFDD
 10689                           plusw2	equ	0xFDB
 10690                           fsr2h	equ	0xFDA
 10691                           fsr2l	equ	0xFD9
 10692                           status	equ	0xFD8
 10693                           
 10694 ;; *************** function __i2c_not_acknowledge *****************
 10695 ;; Defined at:
 10696 ;;		line 90 in file "i2c.c"
 10697 ;; Parameters:    Size  Location     Type
 10698 ;;		None
 10699 ;; Auto vars:     Size  Location     Type
 10700 ;;		None
 10701 ;; Return value:  Size  Location     Type
 10702 ;;                  1    wreg      void 
 10703 ;; Registers used:
 10704 ;;		None
 10705 ;; Tracked objects:
 10706 ;;		On entry : 0/0
 10707 ;;		On exit  : 0/0
 10708 ;;		Unchanged: 0/0
 10709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10710 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10711 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10713 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10714 ;;Total ram usage:        0 bytes
 10715 ;; Hardware stack levels used:    1
 10716 ;; This function calls:
 10717 ;;		Nothing
 10718 ;; This function is called by:
 10719 ;;		__i2c_read
 10720 ;; This function uses a non-reentrant model
 10721 ;;
 10722                           
 10723                           	psect	text48
 10724  008EFC                     __ptext48:
 10725                           	opt stack 0
 10726  008EFC                     __i2c_not_acknowledge:
 10727                           	opt stack 27
 10728                           
 10729                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10730                           
 10731                           ;incstack = 0
 10732  008EFC  8AC5               	bsf	4037,5,c	;volatile
 10733                           
 10734                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10735  008EFE  88C5               	bsf	4037,4,c	;volatile
 10736  008F00  A8C5               	btfss	4037,4,c	;volatile
 10737  008F02  0012               	return	
 10738  008F04  D7FD               	goto	l1181
 10739  008F06                     __end_of__i2c_not_acknowledge:
 10740                           	opt stack 0
 10741                           tblptru	equ	0xFF8
 10742                           tblptrh	equ	0xFF7
 10743                           tblptrl	equ	0xFF6
 10744                           tablat	equ	0xFF5
 10745                           prodh	equ	0xFF4
 10746                           prodl	equ	0xFF3
 10747                           intcon	equ	0xFF2
 10748                           intcon2	equ	0xFF1
 10749                           intcon3	equ	0xFF0
 10750                           postinc0	equ	0xFEE
 10751                           wreg	equ	0xFE8
 10752                           indf1	equ	0xFE7
 10753                           postdec1	equ	0xFE5
 10754                           plusw1	equ	0xFE3
 10755                           fsr1h	equ	0xFE2
 10756                           fsr1l	equ	0xFE1
 10757                           indf2	equ	0xFDF
 10758                           postinc2	equ	0xFDE
 10759                           postdec2	equ	0xFDD
 10760                           plusw2	equ	0xFDB
 10761                           fsr2h	equ	0xFDA
 10762                           fsr2l	equ	0xFD9
 10763                           status	equ	0xFD8
 10764                           
 10765 ;; *************** function __i2c_get *****************
 10766 ;; Defined at:
 10767 ;;		line 67 in file "i2c.c"
 10768 ;; Parameters:    Size  Location     Type
 10769 ;;		None
 10770 ;; Auto vars:     Size  Location     Type
 10771 ;;		None
 10772 ;; Return value:  Size  Location     Type
 10773 ;;                  1    wreg      unsigned char 
 10774 ;; Registers used:
 10775 ;;		wreg, status,2
 10776 ;; Tracked objects:
 10777 ;;		On entry : 0/0
 10778 ;;		On exit  : 0/0
 10779 ;;		Unchanged: 0/0
 10780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10781 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10782 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10783 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10784 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10785 ;;Total ram usage:        0 bytes
 10786 ;; Hardware stack levels used:    1
 10787 ;; This function calls:
 10788 ;;		Nothing
 10789 ;; This function is called by:
 10790 ;;		__i2c_read
 10791 ;; This function uses a non-reentrant model
 10792 ;;
 10793                           
 10794                           	psect	text49
 10795  008F06                     __ptext49:
 10796                           	opt stack 0
 10797  008F06                     __i2c_get:
 10798                           	opt stack 27
 10799                           
 10800                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10801                           
 10802                           ;incstack = 0
 10803  008F06  86C5               	bsf	4037,3,c	;volatile
 10804  008F08  B6C5               	btfsc	4037,3,c	;volatile
 10805  008F0A  D7FE               	goto	l1163
 10806                           
 10807                           ;i2c.c: 71: return SSP1BUF;
 10808  008F0C  50C9               	movf	4041,w,c	;volatile
 10809  008F0E  0012               	return	
 10810  008F10                     __end_of__i2c_get:
 10811                           	opt stack 0
 10812                           tblptru	equ	0xFF8
 10813                           tblptrh	equ	0xFF7
 10814                           tblptrl	equ	0xFF6
 10815                           tablat	equ	0xFF5
 10816                           prodh	equ	0xFF4
 10817                           prodl	equ	0xFF3
 10818                           intcon	equ	0xFF2
 10819                           intcon2	equ	0xFF1
 10820                           intcon3	equ	0xFF0
 10821                           postinc0	equ	0xFEE
 10822                           wreg	equ	0xFE8
 10823                           indf1	equ	0xFE7
 10824                           postdec1	equ	0xFE5
 10825                           plusw1	equ	0xFE3
 10826                           fsr1h	equ	0xFE2
 10827                           fsr1l	equ	0xFE1
 10828                           indf2	equ	0xFDF
 10829                           postinc2	equ	0xFDE
 10830                           postdec2	equ	0xFDD
 10831                           plusw2	equ	0xFDB
 10832                           fsr2h	equ	0xFDA
 10833                           fsr2l	equ	0xFD9
 10834                           status	equ	0xFD8
 10835                           
 10836 ;; *************** function __i2c_acknowledge *****************
 10837 ;; Defined at:
 10838 ;;		line 82 in file "i2c.c"
 10839 ;; Parameters:    Size  Location     Type
 10840 ;;		None
 10841 ;; Auto vars:     Size  Location     Type
 10842 ;;		None
 10843 ;; Return value:  Size  Location     Type
 10844 ;;                  1    wreg      void 
 10845 ;; Registers used:
 10846 ;;		None
 10847 ;; Tracked objects:
 10848 ;;		On entry : 0/0
 10849 ;;		On exit  : 0/0
 10850 ;;		Unchanged: 0/0
 10851 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10852 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10853 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10854 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10855 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10856 ;;Total ram usage:        0 bytes
 10857 ;; Hardware stack levels used:    1
 10858 ;; This function calls:
 10859 ;;		Nothing
 10860 ;; This function is called by:
 10861 ;;		__i2c_read
 10862 ;; This function uses a non-reentrant model
 10863 ;;
 10864                           
 10865                           	psect	text50
 10866  008F10                     __ptext50:
 10867                           	opt stack 0
 10868  008F10                     __i2c_acknowledge:
 10869                           	opt stack 27
 10870                           
 10871                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10872                           
 10873                           ;incstack = 0
 10874  008F10  9AC5               	bcf	4037,5,c	;volatile
 10875                           
 10876                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10877  008F12  88C5               	bsf	4037,4,c	;volatile
 10878  008F14  A8C5               	btfss	4037,4,c	;volatile
 10879  008F16  0012               	return	
 10880  008F18  D7FD               	goto	l1175
 10881  008F1A                     __end_of__i2c_acknowledge:
 10882                           	opt stack 0
 10883                           tblptru	equ	0xFF8
 10884                           tblptrh	equ	0xFF7
 10885                           tblptrl	equ	0xFF6
 10886                           tablat	equ	0xFF5
 10887                           prodh	equ	0xFF4
 10888                           prodl	equ	0xFF3
 10889                           intcon	equ	0xFF2
 10890                           intcon2	equ	0xFF1
 10891                           intcon3	equ	0xFF0
 10892                           postinc0	equ	0xFEE
 10893                           wreg	equ	0xFE8
 10894                           indf1	equ	0xFE7
 10895                           postdec1	equ	0xFE5
 10896                           plusw1	equ	0xFE3
 10897                           fsr1h	equ	0xFE2
 10898                           fsr1l	equ	0xFE1
 10899                           indf2	equ	0xFDF
 10900                           postinc2	equ	0xFDE
 10901                           postdec2	equ	0xFDD
 10902                           plusw2	equ	0xFDB
 10903                           fsr2h	equ	0xFDA
 10904                           fsr2l	equ	0xFD9
 10905                           status	equ	0xFD8
 10906                           
 10907 ;; *************** function _USBDeviceTasks *****************
 10908 ;; Defined at:
 10909 ;;		line 477 in file "usb_device.c"
 10910 ;; Parameters:    Size  Location     Type
 10911 ;;		None
 10912 ;; Auto vars:     Size  Location     Type
 10913 ;;  i               1   31[COMRAM] unsigned char 
 10914 ;; Return value:  Size  Location     Type
 10915 ;;                  1    wreg      void 
 10916 ;; Registers used:
 10917 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10918 ;; Tracked objects:
 10919 ;;		On entry : 0/0
 10920 ;;		On exit  : 0/0
 10921 ;;		Unchanged: 0/0
 10922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10924 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10926 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10927 ;;Total ram usage:        1 bytes
 10928 ;; Hardware stack levels used:    1
 10929 ;; Hardware stack levels required when called:    8
 10930 ;; This function calls:
 10931 ;;		_USBCtrlEPAllowStatusStage
 10932 ;;		_USBCtrlEPService
 10933 ;;		_USBDeviceInit
 10934 ;;		_USBIncrement1msInternalTimers
 10935 ;;		_USBStallHandler
 10936 ;;		_USBSuspend
 10937 ;;		_USBWakeFromSuspend
 10938 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10939 ;; This function is called by:
 10940 ;;		_main
 10941 ;; This function uses a non-reentrant model
 10942 ;;
 10943                           
 10944                           	psect	text51
 10945  003602                     __ptext51:
 10946                           	opt stack 0
 10947  003602                     _USBDeviceTasks:
 10948                           	opt stack 22
 10949                           
 10950                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10951                           
 10952                           ; BSR set to: 0
 10953                           
 10954                           ; BSR set to: 0
 10955                           ;usb_device.c: 543: return;
 10956                           
 10957                           ; BSR set to: 0
 10958                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10959                           
 10960                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10961                           
 10962                           ;usb_device.c: 511: UIE = 0;
 10963                           
 10964                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10965                           
 10966                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10967                           
 10968                           ;incstack = 0
 10969  003602  0100               	movlb	0	; () banked
 10970  003604  51F8               	movf	_USBDeviceState& (0+255),w,b
 10971  003606  A4D8               	btfss	status,2,c
 10972  003608  D012               	goto	l150
 10973                           
 10974                           ; BSR set to: 0
 10975                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10976  00360A  0E00               	movlw	0
 10977  00360C  6E65               	movwf	3941,c	;volatile
 10978                           
 10979                           ;usb_device.c: 572: UIE = 0;
 10980  00360E  0E00               	movlw	0
 10981  003610  010F               	movlb	15	; () banked
 10982  003612  6F36               	movwf	54,b	;volatile
 10983                           
 10984                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 10985  003614  0E16               	movlw	22
 10986  003616  6F39               	movwf	57,b	;volatile
 10987  003618  0E9F               	movlw	159
 10988  00361A  6F37               	movwf	55,b	;volatile
 10989  00361C  0E7B               	movlw	123
 10990  00361E  6F36               	movwf	54,b	;volatile
 10991                           
 10992                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 10993  003620  D001               	goto	l151
 10994  003622                     l152:
 10995  003622  8665               	bsf	3941,3,c	;volatile
 10996  003624                     l151:
 10997  003624  A665               	btfss	3941,3,c	;volatile
 10998  003626  D7FD               	goto	l152
 10999                           
 11000                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11001  003628  0E01               	movlw	1
 11002  00362A  0100               	movlb	0	; () banked
 11003  00362C  6FF8               	movwf	_USBDeviceState& (0+255),b
 11004  00362E                     l150:
 11005                           
 11006                           ; BSR set to: 0
 11007                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11008                           
 11009                           ; BSR set to: 0
 11010  00362E  05F8               	decf	_USBDeviceState& (0+255),w,b
 11011  003630  B4D8               	btfsc	status,2,c
 11012                           
 11013                           ; BSR set to: 0
 11014                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11015  003632  BA65               	btfsc	3941,5,c	;volatile
 11016  003634  D00A               	goto	l155
 11017                           
 11018                           ; BSR set to: 0
 11019                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11020  003636  0E00               	movlw	0
 11021  003638  6E62               	movwf	3938,c	;volatile
 11022                           
 11023                           ;usb_device.c: 612: UIE=0;
 11024  00363A  0E00               	movlw	0
 11025  00363C  010F               	movlb	15	; () banked
 11026  00363E  6F36               	movwf	54,b	;volatile
 11027                           
 11028                           ; BSR set to: 15
 11029                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11030  003640  8136               	bsf	54,0,b	;volatile
 11031                           
 11032                           ; BSR set to: 15
 11033                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11034  003642  8936               	bsf	54,4,b	;volatile
 11035                           
 11036                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11037  003644  0E02               	movlw	2
 11038  003646  0100               	movlb	0	; () banked
 11039  003648  6FF8               	movwf	_USBDeviceState& (0+255),b
 11040  00364A                     l155:
 11041                           
 11042                           ; BSR set to: 0
 11043                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11044                           
 11045                           ; BSR set to: 0
 11046                           
 11047                           ; BSR set to: 0
 11048  00364A  A462               	btfss	3938,2,c	;volatile
 11049  00364C  D006               	goto	l156
 11050                           
 11051                           ; BSR set to: 0
 11052  00364E  010F               	movlb	15	; () banked
 11053  003650  A536               	btfss	54,2,b	;volatile
 11054  003652  D003               	goto	l156
 11055                           
 11056                           ; BSR set to: 15
 11057                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11058  003654  9462               	bcf	3938,2,c	;volatile
 11059                           
 11060                           ; BSR set to: 15
 11061                           ;usb_device.c: 640: USBWakeFromSuspend();
 11062  003656  EC6E  F043         	call	_USBWakeFromSuspend	;wreg free
 11063  00365A                     l156:
 11064                           
 11065                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11066  00365A  A265               	btfss	3941,1,c	;volatile
 11067  00365C  D002               	goto	l157
 11068                           
 11069                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11070  00365E  98A1               	bcf	4001,4,c	;volatile
 11071                           
 11072                           ;usb_device.c: 650: return;
 11073  003660  0012               	return	
 11074  003662                     l157:
 11075                           
 11076                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11077  003662  A062               	btfss	3938,0,c	;volatile
 11078  003664  D009               	goto	l158
 11079  003666  010F               	movlb	15	; () banked
 11080  003668  A136               	btfss	54,0,b	;volatile
 11081  00366A  D006               	goto	l158
 11082                           
 11083                           ; BSR set to: 15
 11084                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11085  00366C  EC50  F01F         	call	_USBDeviceInit	;wreg free
 11086                           
 11087                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11088  003670  0E04               	movlw	4
 11089  003672  0100               	movlb	0	; () banked
 11090  003674  6FF8               	movwf	_USBDeviceState& (0+255),b
 11091                           
 11092                           ; BSR set to: 0
 11093                           ;usb_device.c: 681: (UIR &= 0xFE);
 11094  003676  9062               	bcf	3938,0,c	;volatile
 11095  003678                     l158:
 11096                           
 11097                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11098                           
 11099                           ; BSR set to: 0
 11100  003678  A862               	btfss	3938,4,c	;volatile
 11101  00367A  D004               	goto	l159
 11102  00367C  010F               	movlb	15	; () banked
 11103  00367E  B936               	btfsc	54,4,b	;volatile
 11104                           
 11105                           ; BSR set to: 15
 11106                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11107  003680  EC8A  F044         	call	_USBSuspend	;wreg free
 11108  003684                     l159:
 11109                           
 11110                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11111  003684  AC62               	btfss	3938,6,c	;volatile
 11112  003686  D01C               	goto	l163
 11113                           
 11114                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11115  003688  010F               	movlb	15	; () banked
 11116  00368A  AD36               	btfss	54,6,b	;volatile
 11117  00368C  D00E               	goto	l161
 11118                           
 11119                           ; BSR set to: 15
 11120                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11121  00368E  0E00               	movlw	0
 11122  003690  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11123  003692  0E73               	movlw	115
 11124  003694  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11125  003696  0E00               	movlw	0
 11126  003698  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11127  00369A  0E00               	movlw	0
 11128  00369C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11129  00369E  0E00               	movlw	0
 11130  0036A0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11131  0036A2  0E01               	movlw	1
 11132  0036A4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11133  0036A6  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11134  0036AA                     l161:
 11135                           
 11136                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11137  0036AA  9C62               	bcf	3938,6,c	;volatile
 11138                           
 11139                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11140  0036AC  EC4D  F046         	call	_USBIncrement1msInternalTimers	;wreg free
 11141                           
 11142                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11143  0036B0  0100               	movlb	0	; () banked
 11144  0036B2  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11145  0036B4  A4D8               	btfss	status,2,c
 11146                           
 11147                           ; BSR set to: 0
 11148                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11149  0036B6  07F3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11150                           
 11151                           ; BSR set to: 0
 11152                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11153                           
 11154                           ; BSR set to: 0
 11155  0036B8  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11156  0036BA  B4D8               	btfsc	status,2,c
 11157                           
 11158                           ; BSR set to: 0
 11159                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11160  0036BC  ECE4  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11161  0036C0                     l163:
 11162                           
 11163                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11164  0036C0  AA62               	btfss	3938,5,c	;volatile
 11165  0036C2  D004               	goto	l164
 11166  0036C4  010F               	movlb	15	; () banked
 11167  0036C6  BB36               	btfsc	54,5,b	;volatile
 11168                           
 11169                           ; BSR set to: 15
 11170                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11171  0036C8  ECF0  F041         	call	_USBStallHandler	;wreg free
 11172  0036CC                     l164:
 11173                           
 11174                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11175  0036CC  A262               	btfss	3938,1,c	;volatile
 11176  0036CE  D012               	goto	l165
 11177  0036D0  010F               	movlb	15	; () banked
 11178  0036D2  A336               	btfss	54,1,b	;volatile
 11179  0036D4  D00F               	goto	l165
 11180                           
 11181                           ; BSR set to: 15
 11182                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11183  0036D6  0E7F               	movlw	127
 11184  0036D8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11185  0036DA  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11186  0036DC  0E00               	movlw	0
 11187  0036DE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11188  0036E0  0E00               	movlw	0
 11189  0036E2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11190  0036E4  0E00               	movlw	0
 11191  0036E6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11192  0036E8  0E01               	movlw	1
 11193  0036EA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11194  0036EC  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11195                           
 11196                           ;usb_device.c: 759: {UEIR = 0;};
 11197  0036F0  0E00               	movlw	0
 11198  0036F2  6E63               	movwf	3939,c	;volatile
 11199  0036F4                     l165:
 11200                           
 11201                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11202  0036F4  0E04               	movlw	4
 11203  0036F6  0100               	movlb	0	; () banked
 11204  0036F8  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11205  0036FA  D002               	goto	l166
 11206                           
 11207                           ; BSR set to: 0
 11208                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11209  0036FC  98A1               	bcf	4001,4,c	;volatile
 11210                           
 11211                           ;usb_device.c: 777: return;
 11212  0036FE  0012               	return	
 11213  003700                     l166:
 11214                           
 11215                           ; BSR set to: 0
 11216                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11217  003700  010F               	movlb	15	; () banked
 11218  003702  A736               	btfss	54,3,b	;volatile
 11219  003704  D03C               	goto	u12640
 11220                           
 11221                           ; BSR set to: 15
 11222                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11223  003706  0E00               	movlw	0
 11224  003708  6E20               	movwf	USBDeviceTasks@i,c
 11225  00370A                     l15527:
 11226                           
 11227                           ; BSR set to: 15
 11228  00370A  0E03               	movlw	3
 11229  00370C  6420               	cpfsgt	USBDeviceTasks@i,c
 11230  00370E  D001               	goto	l168
 11231  003710  D036               	goto	u12640
 11232  003712                     l168:
 11233                           
 11234                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11235  003712  A662               	btfss	3938,3,c	;volatile
 11236  003714  D034               	goto	u12640
 11237                           
 11238                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11239  003716  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11240                           
 11241                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11242  00371A  0100               	movlb	0	; () banked
 11243  00371C  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11244  00371E  32E8               	rrcf	wreg,f,c
 11245  003720  32E8               	rrcf	wreg,f,c
 11246  003722  0B0F               	andlw	15
 11247  003724  6FF4               	movwf	_endpoint_number& (0+255),b
 11248                           
 11249                           ; BSR set to: 0
 11250                           ;usb_device.c: 793: (UIR &= 0xF7);
 11251  003726  9662               	bcf	3938,3,c	;volatile
 11252                           
 11253                           ; BSR set to: 0
 11254                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11255  003728  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11256  00372A  D007               	goto	l171
 11257                           
 11258                           ; BSR set to: 0
 11259                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11260  00372C  51F4               	movf	_endpoint_number& (0+255),w,b
 11261  00372E  0D01               	mullw	1
 11262  003730  0E6C               	movlw	low _ep_data_out
 11263  003732  24F3               	addwf	prodl,w,c
 11264  003734  6ED9               	movwf	fsr2l,c
 11265  003736  0E01               	movlw	high _ep_data_out
 11266  003738  D007               	goto	L5
 11267  00373A                     l171:
 11268                           
 11269                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11270                           
 11271                           ; BSR set to: 1
 11272  00373A  0100               	movlb	0	; () banked
 11273  00373C  51F4               	movf	_endpoint_number& (0+255),w,b
 11274  00373E  0D01               	mullw	1
 11275  003740  0E6F               	movlw	low _ep_data_in
 11276  003742  24F3               	addwf	prodl,w,c
 11277  003744  6ED9               	movwf	fsr2l,c
 11278  003746  0E01               	movlw	high _ep_data_in
 11279  003748                     L5:
 11280  003748  20F4               	addwfc	prodh,w,c
 11281  00374A  6EDA               	movwf	fsr2h,c
 11282  00374C  0101               	movlb	1	; () banked
 11283  00374E  70DF               	btg	indf2,0,c
 11284                           
 11285                           ; BSR set to: 1
 11286                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11287                           
 11288                           ; BSR set to: 1
 11289  003750  0100               	movlb	0	; () banked
 11290  003752  51F4               	movf	_endpoint_number& (0+255),w,b
 11291  003754  A4D8               	btfss	status,2,c
 11292  003756  D003               	goto	l173
 11293                           
 11294                           ; BSR set to: 0
 11295                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11296  003758  EC97  F032         	call	_USBCtrlEPService	;wreg free
 11297                           
 11298                           ;usb_device.c: 813: }
 11299  00375C  D00E               	goto	l175
 11300  00375E                     l173:
 11301                           
 11302                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11303  00375E  0E00               	movlw	0
 11304  003760  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11305  003762  0E72               	movlw	114
 11306  003764  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11307  003766  0EFD               	movlw	low _USTATcopy
 11308  003768  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11309  00376A  0E00               	movlw	high _USTATcopy
 11310  00376C  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11311  00376E  0E00               	movlw	0
 11312  003770  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11313  003772  0E00               	movlw	0
 11314  003774  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11315  003776  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11316  00377A                     l175:
 11317  00377A  2A20               	incf	USBDeviceTasks@i,f,c
 11318  00377C  D7C6               	goto	l15527
 11319  00377E                     u12640:
 11320                           
 11321                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11322  00377E  98A1               	bcf	4001,4,c	;volatile
 11323  003780  0012               	return		;funcret
 11324  003782                     __end_of_USBDeviceTasks:
 11325                           	opt stack 0
 11326                           tblptru	equ	0xFF8
 11327                           tblptrh	equ	0xFF7
 11328                           tblptrl	equ	0xFF6
 11329                           tablat	equ	0xFF5
 11330                           prodh	equ	0xFF4
 11331                           prodl	equ	0xFF3
 11332                           intcon	equ	0xFF2
 11333                           intcon2	equ	0xFF1
 11334                           intcon3	equ	0xFF0
 11335                           postinc0	equ	0xFEE
 11336                           wreg	equ	0xFE8
 11337                           indf1	equ	0xFE7
 11338                           postdec1	equ	0xFE5
 11339                           plusw1	equ	0xFE3
 11340                           fsr1h	equ	0xFE2
 11341                           fsr1l	equ	0xFE1
 11342                           indf2	equ	0xFDF
 11343                           postinc2	equ	0xFDE
 11344                           postdec2	equ	0xFDD
 11345                           plusw2	equ	0xFDB
 11346                           fsr2h	equ	0xFDA
 11347                           fsr2l	equ	0xFD9
 11348                           status	equ	0xFD8
 11349                           
 11350 ;; *************** function _USBWakeFromSuspend *****************
 11351 ;; Defined at:
 11352 ;;		line 2305 in file "usb_device.c"
 11353 ;; Parameters:    Size  Location     Type
 11354 ;;		None
 11355 ;; Auto vars:     Size  Location     Type
 11356 ;;		None
 11357 ;; Return value:  Size  Location     Type
 11358 ;;                  1    wreg      void 
 11359 ;; Registers used:
 11360 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11361 ;; Tracked objects:
 11362 ;;		On entry : 0/0
 11363 ;;		On exit  : 0/0
 11364 ;;		Unchanged: 0/0
 11365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11370 ;;Total ram usage:        0 bytes
 11371 ;; Hardware stack levels used:    1
 11372 ;; Hardware stack levels required when called:    4
 11373 ;; This function calls:
 11374 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11375 ;; This function is called by:
 11376 ;;		_USBDeviceTasks
 11377 ;; This function uses a non-reentrant model
 11378 ;;
 11379                           
 11380                           	psect	text52
 11381  0086DC                     __ptext52:
 11382                           	opt stack 0
 11383  0086DC                     _USBWakeFromSuspend:
 11384                           	opt stack 25
 11385                           
 11386                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11387                           
 11388                           ;incstack = 0
 11389  0086DC  0E00               	movlw	0
 11390  0086DE  0101               	movlb	1	; () banked
 11391  0086E0  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11392                           
 11393                           ; BSR set to: 1
 11394                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11395  0086E2  0E00               	movlw	0
 11396  0086E4  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11397  0086E6  0E74               	movlw	116
 11398  0086E8  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11399  0086EA  0E00               	movlw	0
 11400  0086EC  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11401  0086EE  0E00               	movlw	0
 11402  0086F0  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11403  0086F2  0E00               	movlw	0
 11404  0086F4  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11405  0086F6  0E00               	movlw	0
 11406  0086F8  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11407  0086FA  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11408                           
 11409                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11410  0086FE  9265               	bcf	3941,1,c	;volatile
 11411                           
 11412                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11413  008700  010F               	movlb	15	; () banked
 11414  008702  9536               	bcf	54,2,b	;volatile
 11415                           
 11416                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11417  008704  D001               	goto	l303
 11418  008706                     
 11419                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11420                           
 11421                           ; BSR set to: 15
 11422  008706  9462               	bcf	3938,2,c	;volatile
 11423  008708                     l303:
 11424  008708  B462               	btfsc	3938,2,c	;volatile
 11425  00870A  D7FD               	goto	l304
 11426                           
 11427                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11428  00870C  0E00               	movlw	0
 11429  00870E  0101               	movlb	1	; () banked
 11430  008710  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11431                           
 11432                           ; BSR set to: 1
 11433  008712  0012               	return		;funcret
 11434  008714                     __end_of_USBWakeFromSuspend:
 11435                           	opt stack 0
 11436                           tblptru	equ	0xFF8
 11437                           tblptrh	equ	0xFF7
 11438                           tblptrl	equ	0xFF6
 11439                           tablat	equ	0xFF5
 11440                           prodh	equ	0xFF4
 11441                           prodl	equ	0xFF3
 11442                           intcon	equ	0xFF2
 11443                           intcon2	equ	0xFF1
 11444                           intcon3	equ	0xFF0
 11445                           postinc0	equ	0xFEE
 11446                           wreg	equ	0xFE8
 11447                           indf1	equ	0xFE7
 11448                           postdec1	equ	0xFE5
 11449                           plusw1	equ	0xFE3
 11450                           fsr1h	equ	0xFE2
 11451                           fsr1l	equ	0xFE1
 11452                           indf2	equ	0xFDF
 11453                           postinc2	equ	0xFDE
 11454                           postdec2	equ	0xFDD
 11455                           plusw2	equ	0xFDB
 11456                           fsr2h	equ	0xFDA
 11457                           fsr2l	equ	0xFD9
 11458                           status	equ	0xFD8
 11459                           
 11460 ;; *************** function _USBSuspend *****************
 11461 ;; Defined at:
 11462 ;;		line 2247 in file "usb_device.c"
 11463 ;; Parameters:    Size  Location     Type
 11464 ;;		None
 11465 ;; Auto vars:     Size  Location     Type
 11466 ;;		None
 11467 ;; Return value:  Size  Location     Type
 11468 ;;                  1    wreg      void 
 11469 ;; Registers used:
 11470 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11471 ;; Tracked objects:
 11472 ;;		On entry : 0/0
 11473 ;;		On exit  : 0/0
 11474 ;;		Unchanged: 0/0
 11475 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11476 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11477 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11478 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11479 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11480 ;;Total ram usage:        0 bytes
 11481 ;; Hardware stack levels used:    1
 11482 ;; Hardware stack levels required when called:    4
 11483 ;; This function calls:
 11484 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11485 ;; This function is called by:
 11486 ;;		_USBDeviceTasks
 11487 ;; This function uses a non-reentrant model
 11488 ;;
 11489                           
 11490                           	psect	text53
 11491  008914                     __ptext53:
 11492                           	opt stack 0
 11493  008914                     _USBSuspend:
 11494                           	opt stack 25
 11495                           
 11496                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11497                           
 11498                           ; BSR set to: 1
 11499                           ;incstack = 0
 11500  008914  010F               	movlb	15	; () banked
 11501  008916  8536               	bsf	54,2,b	;volatile
 11502                           
 11503                           ; BSR set to: 15
 11504                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11505  008918  9862               	bcf	3938,4,c	;volatile
 11506                           
 11507                           ; BSR set to: 15
 11508                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11509  00891A  8265               	bsf	3941,1,c	;volatile
 11510                           
 11511                           ; BSR set to: 15
 11512                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11513  00891C  0E01               	movlw	1
 11514  00891E  0101               	movlb	1	; () banked
 11515  008920  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11516                           
 11517                           ; BSR set to: 1
 11518                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11519  008922  0E00               	movlw	0
 11520  008924  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11521                           
 11522                           ; BSR set to: 1
 11523                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11524  008926  0E00               	movlw	0
 11525  008928  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11526  00892A  0E75               	movlw	117
 11527  00892C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11528  00892E  0E00               	movlw	0
 11529  008930  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11530  008932  0E00               	movlw	0
 11531  008934  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11532  008936  0E00               	movlw	0
 11533  008938  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11534  00893A  0E00               	movlw	0
 11535  00893C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11536  00893E  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11537  008942  0012               	return		;funcret
 11538  008944                     __end_of_USBSuspend:
 11539                           	opt stack 0
 11540                           tblptru	equ	0xFF8
 11541                           tblptrh	equ	0xFF7
 11542                           tblptrl	equ	0xFF6
 11543                           tablat	equ	0xFF5
 11544                           prodh	equ	0xFF4
 11545                           prodl	equ	0xFF3
 11546                           intcon	equ	0xFF2
 11547                           intcon2	equ	0xFF1
 11548                           intcon3	equ	0xFF0
 11549                           postinc0	equ	0xFEE
 11550                           wreg	equ	0xFE8
 11551                           indf1	equ	0xFE7
 11552                           postdec1	equ	0xFE5
 11553                           plusw1	equ	0xFE3
 11554                           fsr1h	equ	0xFE2
 11555                           fsr1l	equ	0xFE1
 11556                           indf2	equ	0xFDF
 11557                           postinc2	equ	0xFDE
 11558                           postdec2	equ	0xFDD
 11559                           plusw2	equ	0xFDB
 11560                           fsr2h	equ	0xFDA
 11561                           fsr2l	equ	0xFD9
 11562                           status	equ	0xFD8
 11563                           
 11564 ;; *************** function _USBStallHandler *****************
 11565 ;; Defined at:
 11566 ;;		line 2204 in file "usb_device.c"
 11567 ;; Parameters:    Size  Location     Type
 11568 ;;		None
 11569 ;; Auto vars:     Size  Location     Type
 11570 ;;		None
 11571 ;; Return value:  Size  Location     Type
 11572 ;;                  1    wreg      void 
 11573 ;; Registers used:
 11574 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11575 ;; Tracked objects:
 11576 ;;		On entry : 0/0
 11577 ;;		On exit  : 0/0
 11578 ;;		Unchanged: 0/0
 11579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11580 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11582 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11583 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11584 ;;Total ram usage:        1 bytes
 11585 ;; Hardware stack levels used:    1
 11586 ;; This function calls:
 11587 ;;		Nothing
 11588 ;; This function is called by:
 11589 ;;		_USBDeviceTasks
 11590 ;; This function uses a non-reentrant model
 11591 ;;
 11592                           
 11593                           	psect	text54
 11594  0083E0                     __ptext54:
 11595                           	opt stack 0
 11596  0083E0                     _USBStallHandler:
 11597                           	opt stack 29
 11598                           
 11599                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11600                           
 11601                           ;incstack = 0
 11602  0083E0  010F               	movlb	15	; () banked
 11603  0083E2  A126               	btfss	38,0,b	;volatile
 11604  0083E4  D01D               	goto	l295
 11605                           
 11606                           ; BSR set to: 15
 11607                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11608  0083E6  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11609  0083EA  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11610  0083EE  0E80               	movlw	128
 11611  0083F0  18DE               	xorwf	postinc2,w,c
 11612  0083F2  A4D8               	btfss	status,2,c
 11613  0083F4  D014               	goto	l296
 11614                           
 11615                           ; BSR set to: 15
 11616  0083F6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 11617  0083FA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11618  0083FE  0E84               	movlw	132
 11619  008400  18DE               	xorwf	postinc2,w,c
 11620  008402  A4D8               	btfss	status,2,c
 11621  008404  D00C               	goto	l296
 11622                           
 11623                           ; BSR set to: 15
 11624                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11625  008406  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11626  00840A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11627  00840E  0E0C               	movlw	12
 11628  008410  6EDF               	movwf	indf2,c
 11629                           
 11630                           ; BSR set to: 15
 11631                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11632  008412  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11633  008416  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11634  00841A  0E00               	movlw	0
 11635  00841C  8EDB               	bsf	plusw2,7,c
 11636  00841E                     l296:
 11637                           
 11638                           ; BSR set to: 15
 11639                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11640                           
 11641                           ; BSR set to: 15
 11642  00841E  9126               	bcf	38,0,b	;volatile
 11643  008420                     l295:
 11644                           
 11645                           ; BSR set to: 15
 11646                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11647  008420  9A62               	bcf	3938,5,c	;volatile
 11648                           
 11649                           ; BSR set to: 15
 11650  008422  0012               	return		;funcret
 11651  008424                     __end_of_USBStallHandler:
 11652                           	opt stack 0
 11653                           tblptru	equ	0xFF8
 11654                           tblptrh	equ	0xFF7
 11655                           tblptrl	equ	0xFF6
 11656                           tablat	equ	0xFF5
 11657                           prodh	equ	0xFF4
 11658                           prodl	equ	0xFF3
 11659                           intcon	equ	0xFF2
 11660                           intcon2	equ	0xFF1
 11661                           intcon3	equ	0xFF0
 11662                           postinc0	equ	0xFEE
 11663                           wreg	equ	0xFE8
 11664                           indf1	equ	0xFE7
 11665                           postdec1	equ	0xFE5
 11666                           plusw1	equ	0xFE3
 11667                           fsr1h	equ	0xFE2
 11668                           fsr1l	equ	0xFE1
 11669                           indf2	equ	0xFDF
 11670                           postinc2	equ	0xFDE
 11671                           postdec2	equ	0xFDD
 11672                           plusw2	equ	0xFDB
 11673                           fsr2h	equ	0xFDA
 11674                           fsr2l	equ	0xFD9
 11675                           status	equ	0xFD8
 11676                           
 11677 ;; *************** function _USBIncrement1msInternalTimers *****************
 11678 ;; Defined at:
 11679 ;;		line 3027 in file "usb_device.c"
 11680 ;; Parameters:    Size  Location     Type
 11681 ;;		None
 11682 ;; Auto vars:     Size  Location     Type
 11683 ;;		None
 11684 ;; Return value:  Size  Location     Type
 11685 ;;                  1    wreg      void 
 11686 ;; Registers used:
 11687 ;;		wreg, status,2, status,0
 11688 ;; Tracked objects:
 11689 ;;		On entry : 0/0
 11690 ;;		On exit  : 0/0
 11691 ;;		Unchanged: 0/0
 11692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11693 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11696 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11697 ;;Total ram usage:        0 bytes
 11698 ;; Hardware stack levels used:    1
 11699 ;; This function calls:
 11700 ;;		Nothing
 11701 ;; This function is called by:
 11702 ;;		_USBDeviceTasks
 11703 ;; This function uses a non-reentrant model
 11704 ;;
 11705                           
 11706                           	psect	text55
 11707  008C9A                     __ptext55:
 11708                           	opt stack 0
 11709  008C9A                     _USBIncrement1msInternalTimers:
 11710                           	opt stack 29
 11711                           
 11712                           ;usb_device.c: 3035: USB1msTickCount++;
 11713                           
 11714                           ; BSR set to: 15
 11715                           ;incstack = 0
 11716  008C9A  0E01               	movlw	1
 11717  008C9C  0101               	movlb	1	; () banked
 11718  008C9E  2762               	addwf	_USB1msTickCount& (0+255),f,b
 11719  008CA0  0E00               	movlw	0
 11720  008CA2  2363               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11721  008CA4  2364               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11722  008CA6  2365               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11723                           
 11724                           ; BSR set to: 1
 11725                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11726  008CA8  5192               	movf	_USBBusIsSuspended& (0+255),w,b
 11727  008CAA  A4D8               	btfss	status,2,c
 11728  008CAC  0012               	return	
 11729                           
 11730                           ; BSR set to: 1
 11731                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11732  008CAE  2B90               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11733                           
 11734                           ; BSR set to: 1
 11735                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11736  008CB0  5190               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11737  008CB2  A4D8               	btfss	status,2,c
 11738  008CB4  0012               	return	
 11739                           
 11740                           ; BSR set to: 1
 11741                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11742  008CB6  6990               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11743                           
 11744                           ; BSR set to: 1
 11745  008CB8  0012               	return	
 11746  008CBA                     __end_of_USBIncrement1msInternalTimers:
 11747                           	opt stack 0
 11748                           tblptru	equ	0xFF8
 11749                           tblptrh	equ	0xFF7
 11750                           tblptrl	equ	0xFF6
 11751                           tablat	equ	0xFF5
 11752                           prodh	equ	0xFF4
 11753                           prodl	equ	0xFF3
 11754                           intcon	equ	0xFF2
 11755                           intcon2	equ	0xFF1
 11756                           intcon3	equ	0xFF0
 11757                           postinc0	equ	0xFEE
 11758                           wreg	equ	0xFE8
 11759                           indf1	equ	0xFE7
 11760                           postdec1	equ	0xFE5
 11761                           plusw1	equ	0xFE3
 11762                           fsr1h	equ	0xFE2
 11763                           fsr1l	equ	0xFE1
 11764                           indf2	equ	0xFDF
 11765                           postinc2	equ	0xFDE
 11766                           postdec2	equ	0xFDD
 11767                           plusw2	equ	0xFDB
 11768                           fsr2h	equ	0xFDA
 11769                           fsr2l	equ	0xFD9
 11770                           status	equ	0xFD8
 11771                           
 11772 ;; *************** function _USBDeviceInit *****************
 11773 ;; Defined at:
 11774 ;;		line 277 in file "usb_device.c"
 11775 ;; Parameters:    Size  Location     Type
 11776 ;;		None
 11777 ;; Auto vars:     Size  Location     Type
 11778 ;;  i               1    8[COMRAM] unsigned char 
 11779 ;; Return value:  Size  Location     Type
 11780 ;;                  1    wreg      void 
 11781 ;; Registers used:
 11782 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11783 ;; Tracked objects:
 11784 ;;		On entry : 0/0
 11785 ;;		On exit  : 0/0
 11786 ;;		Unchanged: 0/0
 11787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11788 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11789 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11790 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11791 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11792 ;;Total ram usage:        1 bytes
 11793 ;; Hardware stack levels used:    1
 11794 ;; Hardware stack levels required when called:    1
 11795 ;; This function calls:
 11796 ;;		_memset
 11797 ;; This function is called by:
 11798 ;;		_USBDeviceTasks
 11799 ;;		_main
 11800 ;; This function uses a non-reentrant model
 11801 ;;
 11802                           
 11803                           	psect	text56
 11804  003EA0                     __ptext56:
 11805                           	opt stack 0
 11806  003EA0                     _USBDeviceInit:
 11807                           	opt stack 28
 11808                           
 11809                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11810                           
 11811                           ; BSR set to: 1
 11812                           ;incstack = 0
 11813  003EA0  98A0               	bcf	4000,4,c	;volatile
 11814                           
 11815                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11816  003EA2  0E00               	movlw	0
 11817  003EA4  6E63               	movwf	3939,c	;volatile
 11818                           
 11819                           ;usb_device.c: 291: {UIR = 0;};
 11820  003EA6  0E00               	movlw	0
 11821  003EA8  6E62               	movwf	3938,c	;volatile
 11822                           
 11823                           ;usb_device.c: 294: UEP0 = 0;
 11824  003EAA  0E00               	movlw	0
 11825  003EAC  010F               	movlb	15	; () banked
 11826  003EAE  6F26               	movwf	38,b	;volatile
 11827                           
 11828                           ; BSR set to: 15
 11829                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11830  003EB0  0E27               	movlw	39
 11831  003EB2  6E01               	movwf	memset@p1,c
 11832  003EB4  0E0F               	movlw	15
 11833  003EB6  6E02               	movwf	memset@p1+1,c
 11834  003EB8  0E00               	movlw	0
 11835  003EBA  6E04               	movwf	memset@c+1,c
 11836  003EBC  0E00               	movlw	0
 11837  003EBE  6E03               	movwf	memset@c,c
 11838  003EC0  0E00               	movlw	0
 11839  003EC2  6E06               	movwf	memset@n+1,c
 11840  003EC4  0E02               	movlw	2
 11841  003EC6  6E05               	movwf	memset@n,c
 11842  003EC8  ECE5  F044         	call	_memset	;wreg free
 11843                           
 11844                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11845  003ECC  0E16               	movlw	22
 11846  003ECE  010F               	movlb	15	; () banked
 11847  003ED0  6F39               	movwf	57,b	;volatile
 11848                           
 11849                           ; BSR set to: 15
 11850  003ED2  0E9F               	movlw	159
 11851  003ED4  6F37               	movwf	55,b	;volatile
 11852                           
 11853                           ; BSR set to: 15
 11854  003ED6  0E7B               	movlw	123
 11855  003ED8  6F36               	movwf	54,b	;volatile
 11856                           
 11857                           ; BSR set to: 15
 11858                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11859  003EDA  0E00               	movlw	0
 11860  003EDC  6E09               	movwf	USBDeviceInit@i,c
 11861  003EDE                     l14791:
 11862                           
 11863                           ; BSR set to: 15
 11864  003EDE  0E0B               	movlw	11
 11865  003EE0  6409               	cpfsgt	USBDeviceInit@i,c
 11866  003EE2  D001               	goto	l139
 11867  003EE4  D00E               	goto	u11680
 11868  003EE6                     l139:
 11869                           
 11870                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11871                           
 11872                           ; BSR set to: 15
 11873  003EE6  5009               	movf	USBDeviceInit@i,w,c
 11874  003EE8  0D04               	mullw	4
 11875  003EEA  0E00               	movlw	0
 11876  003EEC  24F3               	addwf	prodl,w,c
 11877  003EEE  6ED9               	movwf	fsr2l,c
 11878  003EF0  0E0D               	movlw	13
 11879  003EF2  20F4               	addwfc	prodh,w,c
 11880  003EF4  6EDA               	movwf	fsr2h,c
 11881  003EF6  6ADE               	clrf	postinc2,c
 11882  003EF8  6ADE               	clrf	postinc2,c
 11883  003EFA  6ADE               	clrf	postinc2,c
 11884  003EFC  6ADD               	clrf	postdec2,c
 11885  003EFE  2A09               	incf	USBDeviceInit@i,f,c
 11886  003F00  D7EE               	goto	l14791
 11887  003F02                     u11680:
 11888                           
 11889                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11890  003F02  8C65               	bsf	3941,6,c	;volatile
 11891                           
 11892                           ;usb_device.c: 316: UADDR = 0x00;
 11893  003F04  0E00               	movlw	0
 11894  003F06  010F               	movlb	15	; () banked
 11895  003F08  6F38               	movwf	56,b	;volatile
 11896                           
 11897                           ; BSR set to: 15
 11898                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11899  003F0A  9865               	bcf	3941,4,c	;volatile
 11900                           
 11901                           ; BSR set to: 15
 11902                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11903  003F0C  9C65               	bcf	3941,6,c	;volatile
 11904  003F0E                     
 11905                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11906                           
 11907                           ; BSR set to: 15
 11908  003F0E  9662               	bcf	3938,3,c	;volatile
 11909                           
 11910                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11911  003F10  0E00               	movlw	0
 11912  003F12  0100               	movlb	0	; () banked
 11913  003F14  6FCE               	movwf	(_inPipes+3)& (0+255),b
 11914                           
 11915                           ; BSR set to: 0
 11916                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11917  003F16  0E00               	movlw	0
 11918  003F18  0101               	movlb	1	; () banked
 11919  003F1A  6F34               	movwf	(_outPipes+3)& (0+255),b
 11920                           
 11921                           ; BSR set to: 1
 11922                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11923  003F1C  0E00               	movlw	0
 11924  003F1E  6F36               	movwf	(_outPipes+5)& (0+255),b
 11925  003F20  0E00               	movlw	0
 11926  003F22  6F35               	movwf	(_outPipes+4)& (0+255),b
 11927                           
 11928                           ; BSR set to: 1
 11929                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11930  003F24  B662               	btfsc	3938,3,c	;volatile
 11931  003F26  D7F3               	goto	l141
 11932                           
 11933                           ; BSR set to: 1
 11934                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11935                           
 11936                           ; BSR set to: 1
 11937  003F28  0E01               	movlw	1
 11938  003F2A  0100               	movlb	0	; () banked
 11939  003F2C  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11940                           
 11941                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11942  003F2E  0E01               	movlw	1
 11943  003F30  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11944                           
 11945                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11946  003F32  0E00               	movlw	0
 11947  003F34  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11948                           
 11949                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11950  003F36  0E00               	movlw	0
 11951  003F38  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11952                           
 11953                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11954  003F3A  0E00               	movlw	0
 11955  003F3C  0101               	movlb	1	; () banked
 11956  003F3E  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11957                           
 11958                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11959  003F40  0E00               	movlw	0
 11960  003F42  6E09               	movwf	USBDeviceInit@i,c
 11961  003F44                     l14819:
 11962                           
 11963                           ; BSR set to: 1
 11964  003F44  0E02               	movlw	2
 11965  003F46  6409               	cpfsgt	USBDeviceInit@i,c
 11966  003F48  D001               	goto	l143
 11967  003F4A  D02E               	goto	u11710
 11968  003F4C                     l143:
 11969                           
 11970                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11971                           
 11972                           ; BSR set to: 1
 11973  003F4C  5009               	movf	USBDeviceInit@i,w,c
 11974  003F4E  0D02               	mullw	2
 11975  003F50  0ED1               	movlw	low _pBDTEntryIn
 11976  003F52  24F3               	addwf	prodl,w,c
 11977  003F54  6ED9               	movwf	fsr2l,c
 11978  003F56  0E00               	movlw	high _pBDTEntryIn
 11979  003F58  20F4               	addwfc	prodh,w,c
 11980  003F5A  6EDA               	movwf	fsr2h,c
 11981  003F5C  0E00               	movlw	0
 11982  003F5E  6EDE               	movwf	postinc2,c
 11983  003F60  0E00               	movlw	0
 11984  003F62  6EDD               	movwf	postdec2,c
 11985                           
 11986                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 11987  003F64  5009               	movf	USBDeviceInit@i,w,c
 11988  003F66  0D02               	mullw	2
 11989  003F68  0E40               	movlw	low _pBDTEntryOut
 11990  003F6A  24F3               	addwf	prodl,w,c
 11991  003F6C  6ED9               	movwf	fsr2l,c
 11992  003F6E  0E01               	movlw	high _pBDTEntryOut
 11993  003F70  20F4               	addwfc	prodh,w,c
 11994  003F72  6EDA               	movwf	fsr2h,c
 11995  003F74  0E00               	movlw	0
 11996  003F76  6EDE               	movwf	postinc2,c
 11997  003F78  0E00               	movlw	0
 11998  003F7A  6EDD               	movwf	postdec2,c
 11999                           
 12000                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12001  003F7C  5009               	movf	USBDeviceInit@i,w,c
 12002  003F7E  0D01               	mullw	1
 12003  003F80  0E6F               	movlw	low _ep_data_in
 12004  003F82  24F3               	addwf	prodl,w,c
 12005  003F84  6ED9               	movwf	fsr2l,c
 12006  003F86  0E01               	movlw	high _ep_data_in
 12007  003F88  20F4               	addwfc	prodh,w,c
 12008  003F8A  6EDA               	movwf	fsr2h,c
 12009  003F8C  0E00               	movlw	0
 12010  003F8E  6EDF               	movwf	indf2,c
 12011                           
 12012                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12013  003F90  5009               	movf	USBDeviceInit@i,w,c
 12014  003F92  0D01               	mullw	1
 12015  003F94  0E6C               	movlw	low _ep_data_out
 12016  003F96  24F3               	addwf	prodl,w,c
 12017  003F98  6ED9               	movwf	fsr2l,c
 12018  003F9A  0E01               	movlw	high _ep_data_out
 12019  003F9C  20F4               	addwfc	prodh,w,c
 12020  003F9E  6EDA               	movwf	fsr2h,c
 12021  003FA0  0E00               	movlw	0
 12022  003FA2  6EDF               	movwf	indf2,c
 12023  003FA4  2A09               	incf	USBDeviceInit@i,f,c
 12024  003FA6  D7CE               	goto	l14819
 12025  003FA8                     u11710:
 12026                           
 12027                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12028  003FA8  0E08               	movlw	8
 12029  003FAA  0100               	movlb	0	; () banked
 12030  003FAC  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12031  003FAE  0E0D               	movlw	13
 12032  003FB0  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12033                           
 12034                           ; BSR set to: 0
 12035                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12036  003FB2  0E16               	movlw	22
 12037  003FB4  010F               	movlb	15	; () banked
 12038  003FB6  6F26               	movwf	38,b	;volatile
 12039                           
 12040                           ; BSR set to: 15
 12041                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12042  003FB8  0E0D               	movlw	13
 12043  003FBA  010D               	movlb	13	; () banked
 12044  003FBC  6F03               	movwf	3,b	;volatile
 12045  003FBE  0E30               	movlw	48
 12046  003FC0  6F02               	movwf	2,b	;volatile
 12047                           
 12048                           ; BSR set to: 13
 12049                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12050  003FC2  0E08               	movlw	8
 12051  003FC4  6F01               	movwf	1,b	;volatile
 12052                           
 12053                           ; BSR set to: 13
 12054                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12055  003FC6  0E04               	movlw	4
 12056  003FC8  6F00               	movwf	0,b	;volatile
 12057                           
 12058                           ; BSR set to: 13
 12059                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12060  003FCA  8F00               	bsf	0,7,b	;volatile
 12061                           
 12062                           ; BSR set to: 13
 12063                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12064  003FCC  0E00               	movlw	0
 12065  003FCE  0100               	movlb	0	; () banked
 12066  003FD0  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12067                           
 12068                           ; BSR set to: 0
 12069                           ;usb_device.c: 366: USB1msTickCount = 0;
 12070  003FD2  0E00               	movlw	0
 12071  003FD4  0101               	movlb	1	; () banked
 12072  003FD6  6F62               	movwf	_USB1msTickCount& (0+255),b
 12073  003FD8  0E00               	movlw	0
 12074  003FDA  6F63               	movwf	(_USB1msTickCount+1)& (0+255),b
 12075  003FDC  0E00               	movlw	0
 12076  003FDE  6F64               	movwf	(_USB1msTickCount+2)& (0+255),b
 12077  003FE0  0E00               	movlw	0
 12078  003FE2  6F65               	movwf	(_USB1msTickCount+3)& (0+255),b
 12079                           
 12080                           ; BSR set to: 1
 12081                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12082  003FE4  0E00               	movlw	0
 12083  003FE6  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12084                           
 12085                           ; BSR set to: 1
 12086                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12087  003FE8  0E00               	movlw	0
 12088  003FEA  0100               	movlb	0	; () banked
 12089  003FEC  6FF8               	movwf	_USBDeviceState& (0+255),b
 12090                           
 12091                           ; BSR set to: 0
 12092  003FEE  0012               	return		;funcret
 12093  003FF0                     __end_of_USBDeviceInit:
 12094                           	opt stack 0
 12095                           tblptru	equ	0xFF8
 12096                           tblptrh	equ	0xFF7
 12097                           tblptrl	equ	0xFF6
 12098                           tablat	equ	0xFF5
 12099                           prodh	equ	0xFF4
 12100                           prodl	equ	0xFF3
 12101                           intcon	equ	0xFF2
 12102                           intcon2	equ	0xFF1
 12103                           intcon3	equ	0xFF0
 12104                           postinc0	equ	0xFEE
 12105                           wreg	equ	0xFE8
 12106                           indf1	equ	0xFE7
 12107                           postdec1	equ	0xFE5
 12108                           plusw1	equ	0xFE3
 12109                           fsr1h	equ	0xFE2
 12110                           fsr1l	equ	0xFE1
 12111                           indf2	equ	0xFDF
 12112                           postinc2	equ	0xFDE
 12113                           postdec2	equ	0xFDD
 12114                           plusw2	equ	0xFDB
 12115                           fsr2h	equ	0xFDA
 12116                           fsr2l	equ	0xFD9
 12117                           status	equ	0xFD8
 12118                           
 12119 ;; *************** function _USBCtrlEPService *****************
 12120 ;; Defined at:
 12121 ;;		line 2374 in file "usb_device.c"
 12122 ;; Parameters:    Size  Location     Type
 12123 ;;		None
 12124 ;; Auto vars:     Size  Location     Type
 12125 ;;		None
 12126 ;; Return value:  Size  Location     Type
 12127 ;;                  1    wreg      void 
 12128 ;; Registers used:
 12129 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12130 ;; Tracked objects:
 12131 ;;		On entry : 0/0
 12132 ;;		On exit  : 0/0
 12133 ;;		Unchanged: 0/0
 12134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12135 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12136 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12137 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12138 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12139 ;;Total ram usage:        2 bytes
 12140 ;; Hardware stack levels used:    1
 12141 ;; Hardware stack levels required when called:    7
 12142 ;; This function calls:
 12143 ;;		_USBCtrlTrfInHandler
 12144 ;;		_USBCtrlTrfOutHandler
 12145 ;;		_USBCtrlTrfSetupHandler
 12146 ;;		_memcpy
 12147 ;; This function is called by:
 12148 ;;		_USBDeviceTasks
 12149 ;; This function uses a non-reentrant model
 12150 ;;
 12151                           
 12152                           	psect	text57
 12153  00652E                     __ptext57:
 12154                           	opt stack 0
 12155  00652E                     _USBCtrlEPService:
 12156                           	opt stack 22
 12157                           
 12158                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12159                           
 12160                           ; BSR set to: 0
 12161                           ;incstack = 0
 12162  00652E  0E2D               	movlw	45
 12163  006530  0100               	movlb	0	; () banked
 12164  006532  6FF3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12165                           
 12166                           ; BSR set to: 0
 12167                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12168  006534  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12169  006538  0EFD               	movlw	253
 12170  00653A  161E               	andwf	??_USBCtrlEPService,f,c
 12171  00653C  A4D8               	btfss	status,2,c
 12172  00653E  D044               	goto	l309
 12173                           
 12174                           ; BSR set to: 0
 12175                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12176  006540  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12177  006544  90D8               	bcf	status,0,c
 12178  006546  321E               	rrcf	??_USBCtrlEPService,f,c
 12179  006548  0E3F               	movlw	63
 12180  00654A  161E               	andwf	??_USBCtrlEPService,f,c
 12181  00654C  501E               	movf	??_USBCtrlEPService,w,c
 12182  00654E  0D04               	mullw	4
 12183  006550  0E00               	movlw	0
 12184  006552  24F3               	addwf	prodl,w,c
 12185  006554  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12186  006556  0E0D               	movlw	13
 12187  006558  20F4               	addwfc	prodh,w,c
 12188  00655A  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12189                           
 12190                           ; BSR set to: 0
 12191                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12192  00655C  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12193  006560  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12194                           
 12195                           ; BSR set to: 0
 12196                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12197  006564  0E04               	movlw	4
 12198  006566  19E1               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12199  006568  6FE1               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12200  00656A  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12201  00656C  6FE2               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12202                           
 12203                           ; BSR set to: 0
 12204                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12205  00656E  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12206  006572  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12207  006576  30DF               	rrcf	223,w,c
 12208  006578  32E8               	rrcf	wreg,f,c
 12209  00657A  0B0F               	andlw	15
 12210  00657C  0A0D               	xorlw	13
 12211  00657E  A4D8               	btfss	status,2,c
 12212  006580  D020               	goto	l310
 12213                           
 12214                           ; BSR set to: 0
 12215                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12216  006582  0E30               	movlw	48
 12217  006584  6E01               	movwf	memcpy@d1,c
 12218  006586  0E0D               	movlw	13
 12219  006588  6E02               	movwf	memcpy@d1+1,c
 12220  00658A  EE20 F002          	lfsr	2,2
 12221  00658E  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12222  006590  26D9               	addwf	fsr2l,f,c
 12223  006592  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12224  006594  22DA               	addwfc	fsr2h,f,c
 12225  006596  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12226  00659A  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12227  00659E  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12228  0065A2  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12229  0065A6  5003               	movf	memcpy@s1,w,c
 12230  0065A8  1004               	iorwf	memcpy@s1+1,w,c
 12231  0065AA  A4D8               	btfss	status,2,c
 12232  0065AC  0E20               	movlw	32
 12233  0065AE  6E05               	movwf	memcpy@s1+2,c
 12234  0065B0  0E00               	movlw	0
 12235  0065B2  6E07               	movwf	memcpy@n+1,c
 12236  0065B4  0E08               	movlw	8
 12237  0065B6  6E06               	movwf	memcpy@n,c
 12238  0065B8  ECE1  F03C         	call	_memcpy	;wreg free
 12239                           
 12240                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12241  0065BC  ECB8  F036         	call	_USBCtrlTrfSetupHandler	;wreg free
 12242                           
 12243                           ;usb_device.c: 2411: }
 12244  0065C0  0012               	return	
 12245  0065C2                     l310:
 12246                           
 12247                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12248  0065C2  EC7B  F03C         	call	_USBCtrlTrfOutHandler	;wreg free
 12249                           
 12250                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12251  0065C6  0012               	return	
 12252  0065C8                     l309:
 12253                           
 12254                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12255  0065C8  0100               	movlb	0	; () banked
 12256  0065CA  51FD               	movf	_USTATcopy& (0+255),w,b
 12257  0065CC  0BFD               	andlw	253
 12258  0065CE  0A04               	xorlw	4
 12259  0065D0  A4D8               	btfss	status,2,c
 12260  0065D2  0012               	return	
 12261                           
 12262                           ; BSR set to: 0
 12263                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12264  0065D4  EC4A  F02F         	call	_USBCtrlTrfInHandler	;wreg free
 12265  0065D8  0012               	return	
 12266  0065DA                     __end_of_USBCtrlEPService:
 12267                           	opt stack 0
 12268                           tblptru	equ	0xFF8
 12269                           tblptrh	equ	0xFF7
 12270                           tblptrl	equ	0xFF6
 12271                           tablat	equ	0xFF5
 12272                           prodh	equ	0xFF4
 12273                           prodl	equ	0xFF3
 12274                           intcon	equ	0xFF2
 12275                           intcon2	equ	0xFF1
 12276                           intcon3	equ	0xFF0
 12277                           postinc0	equ	0xFEE
 12278                           wreg	equ	0xFE8
 12279                           indf1	equ	0xFE7
 12280                           postdec1	equ	0xFE5
 12281                           plusw1	equ	0xFE3
 12282                           fsr1h	equ	0xFE2
 12283                           fsr1l	equ	0xFE1
 12284                           indf2	equ	0xFDF
 12285                           postinc2	equ	0xFDE
 12286                           postdec2	equ	0xFDD
 12287                           plusw2	equ	0xFDB
 12288                           fsr2h	equ	0xFDA
 12289                           fsr2l	equ	0xFD9
 12290                           status	equ	0xFD8
 12291                           
 12292 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12293 ;; Defined at:
 12294 ;;		line 2467 in file "usb_device.c"
 12295 ;; Parameters:    Size  Location     Type
 12296 ;;		None
 12297 ;; Auto vars:     Size  Location     Type
 12298 ;;		None
 12299 ;; Return value:  Size  Location     Type
 12300 ;;                  1    wreg      void 
 12301 ;; Registers used:
 12302 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12303 ;; Tracked objects:
 12304 ;;		On entry : 0/0
 12305 ;;		On exit  : 0/0
 12306 ;;		Unchanged: 0/0
 12307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12308 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12309 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12310 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12311 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12312 ;;Total ram usage:        0 bytes
 12313 ;; Hardware stack levels used:    1
 12314 ;; Hardware stack levels required when called:    6
 12315 ;; This function calls:
 12316 ;;		_USBCheckStdRequest
 12317 ;;		_USBCtrlEPServiceComplete
 12318 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12319 ;; This function is called by:
 12320 ;;		_USBCtrlEPService
 12321 ;; This function uses a non-reentrant model
 12322 ;;
 12323                           
 12324                           	psect	text58
 12325  006D70                     __ptext58:
 12326                           	opt stack 0
 12327  006D70                     _USBCtrlTrfSetupHandler:
 12328                           	opt stack 22
 12329                           
 12330                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12331                           
 12332                           ;incstack = 0
 12333  006D70  0E00               	movlw	0
 12334  006D72  0100               	movlb	0	; () banked
 12335  006D74  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12336                           
 12337                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12338  006D76  0E00               	movlw	0
 12339  006D78  6FF2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12340                           
 12341                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12342  006D7A  0E00               	movlw	0
 12343  006D7C  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12344                           
 12345                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12346  006D7E  0E00               	movlw	0
 12347  006D80  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12348                           
 12349                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12350  006D82  0E00               	movlw	0
 12351  006D84  0101               	movlb	1	; () banked
 12352  006D86  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12353                           
 12354                           ;usb_device.c: 2477: controlTransferState = 0;
 12355  006D88  0E00               	movlw	0
 12356  006D8A  0100               	movlb	0	; () banked
 12357  006D8C  6FF6               	movwf	_controlTransferState& (0+255),b
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12361  006D8E  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12362  006D92  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12363  006D96  0E7F               	movlw	127
 12364  006D98  16DF               	andwf	indf2,f,c
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12368  006D9A  0E04               	movlw	4
 12369  006D9C  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12370  006D9E  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12371  006DA0  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12372  006DA2  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12373                           
 12374                           ; BSR set to: 0
 12375                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12376  006DA4  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12377  006DA8  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12378  006DAC  0E7F               	movlw	127
 12379  006DAE  16DF               	andwf	indf2,f,c
 12380                           
 12381                           ; BSR set to: 0
 12382                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12383  006DB0  0E04               	movlw	4
 12384  006DB2  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12385  006DB4  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12386  006DB6  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12387  006DB8  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12388                           
 12389                           ; BSR set to: 0
 12390                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12391  006DBA  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12392  006DBE  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12393  006DC2  0E7F               	movlw	127
 12394  006DC4  16DF               	andwf	indf2,f,c
 12395                           
 12396                           ; BSR set to: 0
 12397                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12398  006DC6  0E00               	movlw	0
 12399  006DC8  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12400                           
 12401                           ; BSR set to: 0
 12402                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12403  006DCA  0E00               	movlw	0
 12404  006DCC  6FD0               	movwf	(_inPipes+5)& (0+255),b
 12405  006DCE  0E00               	movlw	0
 12406  006DD0  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12407                           
 12408                           ; BSR set to: 0
 12409                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12410  006DD2  0E00               	movlw	0
 12411  006DD4  0101               	movlb	1	; () banked
 12412  006DD6  6F34               	movwf	(_outPipes+3)& (0+255),b
 12413                           
 12414                           ; BSR set to: 1
 12415                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12416  006DD8  0E00               	movlw	0
 12417  006DDA  6F36               	movwf	(_outPipes+5)& (0+255),b
 12418  006DDC  0E00               	movlw	0
 12419  006DDE  6F35               	movwf	(_outPipes+4)& (0+255),b
 12420                           
 12421                           ; BSR set to: 1
 12422                           ;usb_device.c: 2502: USBCheckStdRequest();
 12423  006DE0  ECDE  F028         	call	_USBCheckStdRequest	;wreg free
 12424                           
 12425                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12426  006DE4  0E00               	movlw	0
 12427  006DE6  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12428  006DE8  0E03               	movlw	3
 12429  006DEA  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12430  006DEC  0E00               	movlw	0
 12431  006DEE  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12432  006DF0  0E00               	movlw	0
 12433  006DF2  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12434  006DF4  0E00               	movlw	0
 12435  006DF6  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12436  006DF8  0E00               	movlw	0
 12437  006DFA  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12438  006DFC  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12439                           
 12440                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12441  006E00  EC77  F026         	call	_USBCtrlEPServiceComplete	;wreg free
 12442  006E04  0012               	return		;funcret
 12443  006E06                     __end_of_USBCtrlTrfSetupHandler:
 12444                           	opt stack 0
 12445                           tblptru	equ	0xFF8
 12446                           tblptrh	equ	0xFF7
 12447                           tblptrl	equ	0xFF6
 12448                           tablat	equ	0xFF5
 12449                           prodh	equ	0xFF4
 12450                           prodl	equ	0xFF3
 12451                           intcon	equ	0xFF2
 12452                           intcon2	equ	0xFF1
 12453                           intcon3	equ	0xFF0
 12454                           postinc0	equ	0xFEE
 12455                           wreg	equ	0xFE8
 12456                           indf1	equ	0xFE7
 12457                           postdec1	equ	0xFE5
 12458                           plusw1	equ	0xFE3
 12459                           fsr1h	equ	0xFE2
 12460                           fsr1l	equ	0xFE1
 12461                           indf2	equ	0xFDF
 12462                           postinc2	equ	0xFDE
 12463                           postdec2	equ	0xFDD
 12464                           plusw2	equ	0xFDB
 12465                           fsr2h	equ	0xFDA
 12466                           fsr2l	equ	0xFD9
 12467                           status	equ	0xFD8
 12468                           
 12469 ;; *************** function _USBCtrlEPServiceComplete *****************
 12470 ;; Defined at:
 12471 ;;		line 1618 in file "usb_device.c"
 12472 ;; Parameters:    Size  Location     Type
 12473 ;;		None
 12474 ;; Auto vars:     Size  Location     Type
 12475 ;;		None
 12476 ;; Return value:  Size  Location     Type
 12477 ;;                  1    wreg      void 
 12478 ;; Registers used:
 12479 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12480 ;; Tracked objects:
 12481 ;;		On entry : 0/0
 12482 ;;		On exit  : 0/0
 12483 ;;		Unchanged: 0/0
 12484 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12485 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12486 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12487 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12488 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12489 ;;Total ram usage:        0 bytes
 12490 ;; Hardware stack levels used:    1
 12491 ;; Hardware stack levels required when called:    2
 12492 ;; This function calls:
 12493 ;;		_USBCtrlEPAllowDataStage
 12494 ;;		_USBCtrlEPAllowStatusStage
 12495 ;; This function is called by:
 12496 ;;		_USBCtrlTrfSetupHandler
 12497 ;; This function uses a non-reentrant model
 12498 ;;
 12499                           
 12500                           	psect	text59
 12501  004CEE                     __ptext59:
 12502                           	opt stack 0
 12503  004CEE                     _USBCtrlEPServiceComplete:
 12504                           	opt stack 25
 12505                           
 12506                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12507                           
 12508                           ;incstack = 0
 12509  004CEE  9865               	bcf	3941,4,c	;volatile
 12510                           
 12511                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12512  004CF0  0100               	movlb	0	; () banked
 12513  004CF2  BFCE               	btfsc	(_inPipes+3)& (0+255),7,b
 12514  004CF4  D03C               	goto	l219
 12515                           
 12516                           ; BSR set to: 0
 12517                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12518  004CF6  0101               	movlb	1	; () banked
 12519  004CF8  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12520  004CFA  D00D               	goto	l220
 12521                           
 12522                           ; BSR set to: 1
 12523                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12524  004CFC  0E02               	movlw	2
 12525  004CFE  0100               	movlb	0	; () banked
 12526  004D00  6FF6               	movwf	_controlTransferState& (0+255),b
 12527                           
 12528                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12529  004D02  51EE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12530  004D04  B4D8               	btfsc	status,2,c
 12531                           
 12532                           ; BSR set to: 0
 12533                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12534  004D06  EC31  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12535                           
 12536                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12537  004D0A  0E00               	movlw	0
 12538  004D0C  0100               	movlb	0	; () banked
 12539  004D0E  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12540                           
 12541                           ; BSR set to: 0
 12542                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12543  004D10  0E00               	movlw	0
 12544  004D12  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12545                           
 12546                           ;usb_device.c: 1654: }
 12547  004D14  0012               	return	
 12548  004D16                     l220:
 12549                           
 12550                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12551                           
 12552                           ; BSR set to: 0
 12553  004D16  0100               	movlb	0	; () banked
 12554  004D18  EE20 F001          	lfsr	2,1
 12555  004D1C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12556  004D1E  26D9               	addwf	fsr2l,f,c
 12557  004D20  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12558  004D22  22DA               	addwfc	fsr2h,f,c
 12559  004D24  0E08               	movlw	8
 12560  004D26  6EDF               	movwf	indf2,c
 12561                           
 12562                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12563  004D28  EE20 F002          	lfsr	2,2
 12564  004D2C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12565  004D2E  26D9               	addwf	fsr2l,f,c
 12566  004D30  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12567  004D32  22DA               	addwfc	fsr2h,f,c
 12568  004D34  0E30               	movlw	48
 12569  004D36  6EDE               	movwf	postinc2,c
 12570  004D38  0E0D               	movlw	13
 12571  004D3A  6EDD               	movwf	postdec2,c
 12572                           
 12573                           ; BSR set to: 0
 12574                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12575  004D3C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12576  004D40  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12577  004D44  0E0C               	movlw	12
 12578  004D46  6EDF               	movwf	indf2,c
 12579                           
 12580                           ; BSR set to: 0
 12581                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12582  004D48  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12583  004D4C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12584  004D50  0E00               	movlw	0
 12585  004D52  8EDB               	bsf	plusw2,7,c
 12586                           
 12587                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12588  004D54  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12589  004D58  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12590  004D5C  0E04               	movlw	4
 12591  004D5E  6EDF               	movwf	indf2,c
 12592                           
 12593                           ; BSR set to: 0
 12594                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12595  004D60  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12596  004D64  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12597  004D68  0E00               	movlw	0
 12598  004D6A  8EDB               	bsf	plusw2,7,c
 12599                           
 12600                           ; BSR set to: 0
 12601                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12602  004D6C  0012               	return	
 12603  004D6E                     l219:
 12604                           
 12605                           ; BSR set to: 0
 12606                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12607  004D6E  010D               	movlb	13	; () banked
 12608  004D70  AF30               	btfss	48,7,b	;volatile
 12609  004D72  D012               	goto	l224
 12610                           
 12611                           ; BSR set to: 13
 12612                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12613  004D74  0E01               	movlw	1
 12614  004D76  0100               	movlb	0	; () banked
 12615  004D78  6FF6               	movwf	_controlTransferState& (0+255),b
 12616                           
 12617                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12618  004D7A  51EF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12619  004D7C  B4D8               	btfsc	status,2,c
 12620                           
 12621                           ; BSR set to: 0
 12622                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12623  004D7E  EC31  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12624                           
 12625                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12626  004D82  0E00               	movlw	0
 12627  004D84  0100               	movlb	0	; () banked
 12628  004D86  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12629                           
 12630                           ; BSR set to: 0
 12631                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12632  004D88  0E00               	movlw	0
 12633  004D8A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12634                           
 12635                           ; BSR set to: 0
 12636                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12637  004D8C  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12638  004D8E  A4D8               	btfss	status,2,c
 12639  004D90  0012               	return	
 12640                           
 12641                           ; BSR set to: 0
 12642                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12643  004D92  ECE4  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12644                           
 12645                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12646  004D96  0012               	return	
 12647  004D98                     l224:
 12648                           
 12649                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12650  004D98  0E02               	movlw	2
 12651  004D9A  0100               	movlb	0	; () banked
 12652  004D9C  6FF6               	movwf	_controlTransferState& (0+255),b
 12653                           
 12654                           ; BSR set to: 0
 12655                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12656  004D9E  EE20 F001          	lfsr	2,1
 12657  004DA2  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12658  004DA4  26D9               	addwf	fsr2l,f,c
 12659  004DA6  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12660  004DA8  22DA               	addwfc	fsr2h,f,c
 12661  004DAA  0E08               	movlw	8
 12662  004DAC  6EDF               	movwf	indf2,c
 12663                           
 12664                           ; BSR set to: 0
 12665                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12666  004DAE  EE20 F002          	lfsr	2,2
 12667  004DB2  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12668  004DB4  26D9               	addwf	fsr2l,f,c
 12669  004DB6  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12670  004DB8  22DA               	addwfc	fsr2h,f,c
 12671  004DBA  0E30               	movlw	48
 12672  004DBC  6EDE               	movwf	postinc2,c
 12673  004DBE  0E0D               	movlw	13
 12674  004DC0  6EDD               	movwf	postdec2,c
 12675                           
 12676                           ; BSR set to: 0
 12677                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12678  004DC2  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12679  004DC6  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12680  004DCA  0E04               	movlw	4
 12681  004DCC  6EDF               	movwf	indf2,c
 12682                           
 12683                           ; BSR set to: 0
 12684                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12685  004DCE  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12686  004DD2  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12687  004DD6  0E00               	movlw	0
 12688  004DD8  8EDB               	bsf	plusw2,7,c
 12689                           
 12690                           ; BSR set to: 0
 12691                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12692  004DDA  0E00               	movlw	0
 12693  004DDC  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12694                           
 12695                           ; BSR set to: 0
 12696                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12697  004DDE  0E00               	movlw	0
 12698  004DE0  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12699                           
 12700                           ; BSR set to: 0
 12701                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12702  004DE2  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12703  004DE4  A4D8               	btfss	status,2,c
 12704  004DE6  0012               	return	
 12705                           
 12706                           ; BSR set to: 0
 12707                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12708  004DE8  ECE4  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12709  004DEC  0012               	return	
 12710  004DEE                     __end_of_USBCtrlEPServiceComplete:
 12711                           	opt stack 0
 12712                           tblptru	equ	0xFF8
 12713                           tblptrh	equ	0xFF7
 12714                           tblptrl	equ	0xFF6
 12715                           tablat	equ	0xFF5
 12716                           prodh	equ	0xFF4
 12717                           prodl	equ	0xFF3
 12718                           intcon	equ	0xFF2
 12719                           intcon2	equ	0xFF1
 12720                           intcon3	equ	0xFF0
 12721                           postinc0	equ	0xFEE
 12722                           wreg	equ	0xFE8
 12723                           indf1	equ	0xFE7
 12724                           postdec1	equ	0xFE5
 12725                           plusw1	equ	0xFE3
 12726                           fsr1h	equ	0xFE2
 12727                           fsr1l	equ	0xFE1
 12728                           indf2	equ	0xFDF
 12729                           postinc2	equ	0xFDE
 12730                           postdec2	equ	0xFDD
 12731                           plusw2	equ	0xFDB
 12732                           fsr2h	equ	0xFDA
 12733                           fsr2l	equ	0xFD9
 12734                           status	equ	0xFD8
 12735                           
 12736 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12737 ;; Defined at:
 12738 ;;		line 1490 in file "usb_device.c"
 12739 ;; Parameters:    Size  Location     Type
 12740 ;;		None
 12741 ;; Auto vars:     Size  Location     Type
 12742 ;;		None
 12743 ;; Return value:  Size  Location     Type
 12744 ;;                  1    wreg      void 
 12745 ;; Registers used:
 12746 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12747 ;; Tracked objects:
 12748 ;;		On entry : 0/0
 12749 ;;		On exit  : 0/0
 12750 ;;		Unchanged: 0/0
 12751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12756 ;;Total ram usage:        0 bytes
 12757 ;; Hardware stack levels used:    1
 12758 ;; Hardware stack levels required when called:    1
 12759 ;; This function calls:
 12760 ;;		_USBCtrlTrfTxService
 12761 ;; This function is called by:
 12762 ;;		_USBCtrlEPServiceComplete
 12763 ;; This function uses a non-reentrant model
 12764 ;;
 12765                           
 12766                           	psect	text60
 12767  006A62                     __ptext60:
 12768                           	opt stack 0
 12769  006A62                     _USBCtrlEPAllowDataStage:
 12770                           	opt stack 25
 12771                           
 12772                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12773                           
 12774                           ;incstack = 0
 12775  006A62  0E00               	movlw	0
 12776  006A64  0100               	movlb	0	; () banked
 12777  006A66  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12778                           
 12779                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12780  006A68  0E00               	movlw	0
 12781  006A6A  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12782                           
 12783                           ; BSR set to: 0
 12784                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12785  006A6C  0E02               	movlw	2
 12786  006A6E  19F6               	xorwf	_controlTransferState& (0+255),w,b
 12787  006A70  A4D8               	btfss	status,2,c
 12788  006A72  D01F               	goto	l208
 12789                           
 12790                           ; BSR set to: 0
 12791                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12792  006A74  EE20 F001          	lfsr	2,1
 12793  006A78  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12794  006A7A  26D9               	addwf	fsr2l,f,c
 12795  006A7C  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12796  006A7E  22DA               	addwfc	fsr2h,f,c
 12797  006A80  0E08               	movlw	8
 12798  006A82  6EDF               	movwf	indf2,c
 12799                           
 12800                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12801  006A84  EE20 F002          	lfsr	2,2
 12802  006A88  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12803  006A8A  26D9               	addwf	fsr2l,f,c
 12804  006A8C  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12805  006A8E  22DA               	addwfc	fsr2h,f,c
 12806  006A90  0E38               	movlw	56
 12807  006A92  6EDE               	movwf	postinc2,c
 12808  006A94  0E0D               	movlw	13
 12809  006A96  6EDD               	movwf	postdec2,c
 12810                           
 12811                           ; BSR set to: 0
 12812                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12813  006A98  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12814  006A9C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12815  006AA0  0E48               	movlw	72
 12816  006AA2  6EDF               	movwf	indf2,c
 12817                           
 12818                           ; BSR set to: 0
 12819                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12820  006AA4  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12821  006AA8  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12822  006AAC  0E00               	movlw	0
 12823  006AAE  8EDB               	bsf	plusw2,7,c
 12824                           
 12825                           ;usb_device.c: 1502: }
 12826  006AB0  0012               	return	
 12827  006AB2                     l208:
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12831                           
 12832                           ; BSR set to: 0
 12833  006AB2  51CF               	movf	(_inPipes+4)& (0+255),w,b
 12834  006AB4  010D               	movlb	13	; () banked
 12835  006AB6  5D36               	subwf	54,w,b	;volatile
 12836  006AB8  0100               	movlb	0	; () banked
 12837  006ABA  51D0               	movf	(_inPipes+5)& (0+255),w,b
 12838  006ABC  010D               	movlb	13	; () banked
 12839  006ABE  5937               	subwfb	55,w,b	;volatile
 12840  006AC0  B0D8               	btfsc	status,0,c
 12841  006AC2  D004               	goto	l210
 12842                           
 12843                           ; BSR set to: 13
 12844                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12845  006AC4  CD36 F0CF          	movff	3382,_inPipes+4	;volatile
 12846  006AC8  CD37 F0D0          	movff	3383,_inPipes+5	;volatile
 12847  006ACC                     l210:
 12848                           
 12849                           ; BSR set to: 13
 12850                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12851                           
 12852                           ; BSR set to: 13
 12853  006ACC  EC42  F02D         	call	_USBCtrlTrfTxService	;wreg free
 12854                           
 12855                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12856  006AD0  0100               	movlb	0	; () banked
 12857  006AD2  EE20 F002          	lfsr	2,2
 12858  006AD6  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 12859  006AD8  26D9               	addwf	fsr2l,f,c
 12860  006ADA  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12861  006ADC  22DA               	addwfc	fsr2h,f,c
 12862  006ADE  0E38               	movlw	56
 12863  006AE0  6EDE               	movwf	postinc2,c
 12864  006AE2  0E0D               	movlw	13
 12865  006AE4  6EDD               	movwf	postdec2,c
 12866                           
 12867                           ; BSR set to: 0
 12868                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12869  006AE6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12870  006AEA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12871  006AEE  0E48               	movlw	72
 12872  006AF0  6EDF               	movwf	indf2,c
 12873                           
 12874                           ; BSR set to: 0
 12875                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12876  006AF2  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12877  006AF6  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12878  006AFA  0E00               	movlw	0
 12879  006AFC  8EDB               	bsf	plusw2,7,c
 12880  006AFE  0012               	return	
 12881  006B00                     __end_of_USBCtrlEPAllowDataStage:
 12882                           	opt stack 0
 12883                           tblptru	equ	0xFF8
 12884                           tblptrh	equ	0xFF7
 12885                           tblptrl	equ	0xFF6
 12886                           tablat	equ	0xFF5
 12887                           prodh	equ	0xFF4
 12888                           prodl	equ	0xFF3
 12889                           intcon	equ	0xFF2
 12890                           intcon2	equ	0xFF1
 12891                           intcon3	equ	0xFF0
 12892                           postinc0	equ	0xFEE
 12893                           wreg	equ	0xFE8
 12894                           indf1	equ	0xFE7
 12895                           postdec1	equ	0xFE5
 12896                           plusw1	equ	0xFE3
 12897                           fsr1h	equ	0xFE2
 12898                           fsr1l	equ	0xFE1
 12899                           indf2	equ	0xFDF
 12900                           postinc2	equ	0xFDE
 12901                           postdec2	equ	0xFDD
 12902                           plusw2	equ	0xFDB
 12903                           fsr2h	equ	0xFDA
 12904                           fsr2l	equ	0xFD9
 12905                           status	equ	0xFD8
 12906                           
 12907 ;; *************** function _USBCheckStdRequest *****************
 12908 ;; Defined at:
 12909 ;;		line 2688 in file "usb_device.c"
 12910 ;; Parameters:    Size  Location     Type
 12911 ;;		None
 12912 ;; Auto vars:     Size  Location     Type
 12913 ;;		None
 12914 ;; Return value:  Size  Location     Type
 12915 ;;                  1    wreg      void 
 12916 ;; Registers used:
 12917 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12918 ;; Tracked objects:
 12919 ;;		On entry : 0/0
 12920 ;;		On exit  : 0/0
 12921 ;;		Unchanged: 0/0
 12922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12923 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12924 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12925 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12926 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12927 ;;Total ram usage:        0 bytes
 12928 ;; Hardware stack levels used:    1
 12929 ;; Hardware stack levels required when called:    5
 12930 ;; This function calls:
 12931 ;;		_USBStdFeatureReqHandler
 12932 ;;		_USBStdGetDscHandler
 12933 ;;		_USBStdGetStatusHandler
 12934 ;;		_USBStdSetCfgHandler
 12935 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12936 ;; This function is called by:
 12937 ;;		_USBCtrlTrfSetupHandler
 12938 ;; This function uses a non-reentrant model
 12939 ;;
 12940                           
 12941                           	psect	text61
 12942  0051BC                     __ptext61:
 12943                           	opt stack 0
 12944  0051BC                     _USBCheckStdRequest:
 12945                           	opt stack 22
 12946                           
 12947                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12948                           
 12949                           ; BSR set to: 0
 12950                           ;incstack = 0
 12951  0051BC  010D               	movlb	13	; () banked
 12952  0051BE  3930               	swapf	48,w,b	;volatile
 12953  0051C0  32E8               	rrcf	wreg,f,c
 12954  0051C2  0B03               	andlw	3
 12955  0051C4  0900               	iorlw	0
 12956  0051C6  A4D8               	btfss	status,2,c
 12957  0051C8  0012               	return	
 12958  0051CA  D047               	goto	l343
 12959  0051CC                     l344:
 12960                           
 12961                           ; BSR set to: 13
 12962                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12963  0051CC  0100               	movlb	0	; () banked
 12964  0051CE  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12965                           
 12966                           ; BSR set to: 0
 12967                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12968  0051D0  0E08               	movlw	8
 12969  0051D2  6FF8               	movwf	_USBDeviceState& (0+255),b
 12970                           
 12971                           ;usb_device.c: 2698: break;
 12972  0051D4  0012               	return	
 12973  0051D6                     
 12974                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12975                           
 12976                           ; BSR set to: 0
 12977  0051D6  EC97  F020         	call	_USBStdGetDscHandler	;wreg free
 12978                           
 12979                           ;usb_device.c: 2701: break;
 12980  0051DA  0012               	return	
 12981  0051DC                     
 12982                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 12983  0051DC  EC4F  F029         	call	_USBStdSetCfgHandler	;wreg free
 12984                           
 12985                           ;usb_device.c: 2704: break;
 12986  0051E0  0012               	return	
 12987  0051E2                     
 12988                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 12989  0051E2  0EFE               	movlw	low _USBActiveConfiguration
 12990  0051E4  0100               	movlb	0	; () banked
 12991  0051E6  6FCB               	movwf	_inPipes& (0+255),b
 12992  0051E8  0E00               	movlw	high _USBActiveConfiguration
 12993  0051EA  6FCC               	movwf	(_inPipes+1)& (0+255),b
 12994                           
 12995                           ; BSR set to: 0
 12996                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 12997  0051EC  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 12998                           
 12999                           ; BSR set to: 0
 13000                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13001  0051EE  0E01               	movlw	1
 13002  0051F0  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13003                           
 13004                           ; BSR set to: 0
 13005                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13006  0051F2  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13007                           
 13008                           ;usb_device.c: 2710: break;
 13009  0051F4  0012               	return	
 13010  0051F6                     
 13011                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13012                           
 13013                           ; BSR set to: 0
 13014  0051F6  ECED  F032         	call	_USBStdGetStatusHandler	;wreg free
 13015                           
 13016                           ;usb_device.c: 2713: break;
 13017  0051FA  0012               	return	
 13018  0051FC                     
 13019                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13020  0051FC  ECA4  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 13021                           
 13022                           ;usb_device.c: 2717: break;
 13023  005200  0012               	return	
 13024  005202                     
 13025                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13026  005202  010D               	movlb	13	; () banked
 13027  005204  5134               	movf	52,w,b	;volatile
 13028  005206  0D01               	mullw	1
 13029  005208  0EAF               	movlw	low _USBAlternateInterface
 13030  00520A  24F3               	addwf	prodl,w,c
 13031  00520C  0100               	movlb	0	; () banked
 13032  00520E  6FCB               	movwf	_inPipes& (0+255),b
 13033  005210  0E01               	movlw	high _USBAlternateInterface
 13034  005212  20F4               	addwfc	prodh,w,c
 13035  005214  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13036                           
 13037                           ; BSR set to: 0
 13038                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13039  005216  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13040                           
 13041                           ; BSR set to: 0
 13042                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13043  005218  0E01               	movlw	1
 13044  00521A  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13045                           
 13046                           ; BSR set to: 0
 13047                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13048  00521C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13049                           
 13050                           ;usb_device.c: 2723: break;
 13051  00521E  0012               	return	
 13052  005220                     l353:
 13053                           
 13054                           ; BSR set to: 13
 13055                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13056  005220  0100               	movlb	0	; () banked
 13057  005222  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13061  005224  010D               	movlb	13	; () banked
 13062  005226  5134               	movf	52,w,b	;volatile
 13063  005228  0D01               	mullw	1
 13064  00522A  0EAF               	movlw	low _USBAlternateInterface
 13065  00522C  24F3               	addwf	prodl,w,c
 13066  00522E  6ED9               	movwf	fsr2l,c
 13067  005230  0E01               	movlw	high _USBAlternateInterface
 13068  005232  20F4               	addwfc	prodh,w,c
 13069  005234  6EDA               	movwf	fsr2h,c
 13070  005236  CD32 FFDF          	movff	3378,indf2	;volatile
 13071                           
 13072                           ;usb_device.c: 2727: break;
 13073  00523A  0012               	return	
 13074  00523C                     
 13075                           ; BSR set to: 13
 13076                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13077                           
 13078                           ; BSR set to: 13
 13079  00523C  0E00               	movlw	0
 13080  00523E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13081  005240  0E02               	movlw	2
 13082  005242  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13083  005244  0E00               	movlw	0
 13084  005246  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13085  005248  0E00               	movlw	0
 13086  00524A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13087  00524C  0E00               	movlw	0
 13088  00524E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13089  005250  0E00               	movlw	0
 13090  005252  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13091  005254  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13092                           
 13093                           ;usb_device.c: 2734: }
 13094                           
 13095                           ;usb_device.c: 2733: break;
 13096                           
 13097                           ;usb_device.c: 2732: default:
 13098                           
 13099                           ;usb_device.c: 2731: case 12:
 13100                           
 13101                           ;usb_device.c: 2730: break;
 13102  005258  0012               	return	
 13103  00525A                     l343:
 13104  00525A  010D               	movlb	13	; () banked
 13105  00525C  5131               	movf	49,w,b	;volatile
 13106                           
 13107                           ; Switch size 1, requested type "space"
 13108                           ; Number of cases is 11, Range of values is 0 to 12
 13109                           ; switch strategies available:
 13110                           ; Name         Instructions Cycles
 13111                           ; simple_byte           34    18 (average)
 13112                           ;	Chosen strategy is simple_byte
 13113  00525E  0A00               	xorlw	0	; case 0
 13114  005260  B4D8               	btfsc	status,2,c
 13115  005262  D7C9               	goto	l349
 13116  005264  0A01               	xorlw	1	; case 1
 13117  005266  B4D8               	btfsc	status,2,c
 13118  005268  D7C9               	goto	l350
 13119  00526A  0A02               	xorlw	2	; case 3
 13120  00526C  B4D8               	btfsc	status,2,c
 13121  00526E  D7C6               	goto	l350
 13122  005270  0A06               	xorlw	6	; case 5
 13123  005272  B4D8               	btfsc	status,2,c
 13124  005274  D7AB               	goto	l344
 13125  005276  0A03               	xorlw	3	; case 6
 13126  005278  B4D8               	btfsc	status,2,c
 13127  00527A  D7AD               	goto	l346
 13128  00527C  0A01               	xorlw	1	; case 7
 13129  00527E  B4D8               	btfsc	status,2,c
 13130  005280  D7DD               	goto	l354
 13131  005282  0A0F               	xorlw	15	; case 8
 13132  005284  B4D8               	btfsc	status,2,c
 13133  005286  D7AD               	goto	l348
 13134  005288  0A01               	xorlw	1	; case 9
 13135  00528A  B4D8               	btfsc	status,2,c
 13136  00528C  D7A7               	goto	l347
 13137  00528E  0A03               	xorlw	3	; case 10
 13138  005290  B4D8               	btfsc	status,2,c
 13139  005292  D7B7               	goto	l352
 13140  005294  0A01               	xorlw	1	; case 11
 13141  005296  B4D8               	btfsc	status,2,c
 13142  005298  D7C3               	goto	l353
 13143  00529A  0A07               	xorlw	7	; case 12
 13144  00529C  0012               	return	
 13145  00529E                     __end_of_USBCheckStdRequest:
 13146                           	opt stack 0
 13147                           tblptru	equ	0xFF8
 13148                           tblptrh	equ	0xFF7
 13149                           tblptrl	equ	0xFF6
 13150                           tablat	equ	0xFF5
 13151                           prodh	equ	0xFF4
 13152                           prodl	equ	0xFF3
 13153                           intcon	equ	0xFF2
 13154                           intcon2	equ	0xFF1
 13155                           intcon3	equ	0xFF0
 13156                           postinc0	equ	0xFEE
 13157                           wreg	equ	0xFE8
 13158                           indf1	equ	0xFE7
 13159                           postdec1	equ	0xFE5
 13160                           plusw1	equ	0xFE3
 13161                           fsr1h	equ	0xFE2
 13162                           fsr1l	equ	0xFE1
 13163                           indf2	equ	0xFDF
 13164                           postinc2	equ	0xFDE
 13165                           postdec2	equ	0xFDD
 13166                           plusw2	equ	0xFDB
 13167                           fsr2h	equ	0xFDA
 13168                           fsr2l	equ	0xFD9
 13169                           status	equ	0xFD8
 13170                           
 13171 ;; *************** function _USBStdSetCfgHandler *****************
 13172 ;; Defined at:
 13173 ;;		line 1970 in file "usb_device.c"
 13174 ;; Parameters:    Size  Location     Type
 13175 ;;		None
 13176 ;; Auto vars:     Size  Location     Type
 13177 ;;  i               1   23[COMRAM] unsigned char 
 13178 ;; Return value:  Size  Location     Type
 13179 ;;                  1    wreg      void 
 13180 ;; Registers used:
 13181 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13182 ;; Tracked objects:
 13183 ;;		On entry : 0/0
 13184 ;;		On exit  : 0/0
 13185 ;;		Unchanged: 0/0
 13186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13187 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13188 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13189 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13190 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13191 ;;Total ram usage:        1 bytes
 13192 ;; Hardware stack levels used:    1
 13193 ;; Hardware stack levels required when called:    4
 13194 ;; This function calls:
 13195 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13196 ;;		_memset
 13197 ;; This function is called by:
 13198 ;;		_USBCheckStdRequest
 13199 ;; This function uses a non-reentrant model
 13200 ;;
 13201                           
 13202                           	psect	text62
 13203  00529E                     __ptext62:
 13204                           	opt stack 0
 13205  00529E                     _USBStdSetCfgHandler:
 13206                           	opt stack 22
 13207                           
 13208                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13209                           
 13210                           ;incstack = 0
 13211  00529E  0100               	movlb	0	; () banked
 13212  0052A0  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13213                           
 13214                           ; BSR set to: 0
 13215                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13216  0052A2  0E27               	movlw	39
 13217  0052A4  6E01               	movwf	memset@p1,c
 13218  0052A6  0E0F               	movlw	15
 13219  0052A8  6E02               	movwf	memset@p1+1,c
 13220  0052AA  0E00               	movlw	0
 13221  0052AC  6E04               	movwf	memset@c+1,c
 13222  0052AE  0E00               	movlw	0
 13223  0052B0  6E03               	movwf	memset@c,c
 13224  0052B2  0E00               	movlw	0
 13225  0052B4  6E06               	movwf	memset@n+1,c
 13226  0052B6  0E02               	movlw	2
 13227  0052B8  6E05               	movwf	memset@n,c
 13228  0052BA  ECE5  F044         	call	_memset	;wreg free
 13229                           
 13230                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13231  0052BE  0E00               	movlw	0
 13232  0052C0  6E01               	movwf	memset@p1,c
 13233  0052C2  0E0D               	movlw	13
 13234  0052C4  6E02               	movwf	memset@p1+1,c
 13235  0052C6  0E00               	movlw	0
 13236  0052C8  6E04               	movwf	memset@c+1,c
 13237  0052CA  0E00               	movlw	0
 13238  0052CC  6E03               	movwf	memset@c,c
 13239  0052CE  0E00               	movlw	0
 13240  0052D0  6E06               	movwf	memset@n+1,c
 13241  0052D2  0E30               	movlw	48
 13242  0052D4  6E05               	movwf	memset@n,c
 13243  0052D6  ECE5  F044         	call	_memset	;wreg free
 13244                           
 13245                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13246  0052DA  8C65               	bsf	3941,6,c	;volatile
 13247                           
 13248                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13249  0052DC  0E00               	movlw	0
 13250  0052DE  6E18               	movwf	USBStdSetCfgHandler@i,c
 13251  0052E0                     l12831:
 13252  0052E0  0E02               	movlw	2
 13253  0052E2  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13254  0052E4  D001               	goto	l260
 13255  0052E6  D016               	goto	u9490
 13256  0052E8                     l260:
 13257                           
 13258                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13259  0052E8  5018               	movf	USBStdSetCfgHandler@i,w,c
 13260  0052EA  0D01               	mullw	1
 13261  0052EC  0E6F               	movlw	low _ep_data_in
 13262  0052EE  24F3               	addwf	prodl,w,c
 13263  0052F0  6ED9               	movwf	fsr2l,c
 13264  0052F2  0E01               	movlw	high _ep_data_in
 13265  0052F4  20F4               	addwfc	prodh,w,c
 13266  0052F6  6EDA               	movwf	fsr2h,c
 13267  0052F8  0E00               	movlw	0
 13268  0052FA  6EDF               	movwf	indf2,c
 13269                           
 13270                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13271  0052FC  5018               	movf	USBStdSetCfgHandler@i,w,c
 13272  0052FE  0D01               	mullw	1
 13273  005300  0E6C               	movlw	low _ep_data_out
 13274  005302  24F3               	addwf	prodl,w,c
 13275  005304  6ED9               	movwf	fsr2l,c
 13276  005306  0E01               	movlw	high _ep_data_out
 13277  005308  20F4               	addwfc	prodh,w,c
 13278  00530A  6EDA               	movwf	fsr2h,c
 13279  00530C  0E00               	movlw	0
 13280  00530E  6EDF               	movwf	indf2,c
 13281  005310  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13282  005312  D7E6               	goto	l12831
 13283  005314                     u9490:
 13284                           
 13285                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13286  005314  0EAF               	movlw	low _USBAlternateInterface
 13287  005316  6E01               	movwf	memset@p1,c
 13288  005318  0E01               	movlw	high _USBAlternateInterface
 13289  00531A  6E02               	movwf	memset@p1+1,c
 13290  00531C  0E00               	movlw	0
 13291  00531E  6E04               	movwf	memset@c+1,c
 13292  005320  0E00               	movlw	0
 13293  005322  6E03               	movwf	memset@c,c
 13294  005324  0E00               	movlw	0
 13295  005326  6E06               	movwf	memset@n+1,c
 13296  005328  0E02               	movlw	2
 13297  00532A  6E05               	movwf	memset@n,c
 13298  00532C  ECE5  F044         	call	_memset	;wreg free
 13299                           
 13300                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13301  005330  9C65               	bcf	3941,6,c	;volatile
 13302                           
 13303                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13304  005332  0E08               	movlw	8
 13305  005334  0100               	movlb	0	; () banked
 13306  005336  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 13307  005338  0E0D               	movlw	13
 13308  00533A  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13309                           
 13310                           ; BSR set to: 0
 13311                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13312  00533C  0E00               	movlw	0
 13313  00533E  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13314  005340  0E0D               	movlw	13
 13315  005342  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13316                           
 13317                           ; BSR set to: 0
 13318                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13319  005344  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13320  005348  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13321                           
 13322                           ; BSR set to: 0
 13323                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13324  00534C  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13325                           
 13326                           ; BSR set to: 0
 13327                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13328  005350  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13329  005352  A4D8               	btfss	status,2,c
 13330  005354  D003               	goto	l262
 13331                           
 13332                           ; BSR set to: 0
 13333                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13334  005356  0E10               	movlw	16
 13335  005358  6FF8               	movwf	_USBDeviceState& (0+255),b
 13336                           
 13337                           ;usb_device.c: 2015: }
 13338  00535A  0012               	return	
 13339  00535C                     l262:
 13340                           
 13341                           ; BSR set to: 0
 13342                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13343                           
 13344                           ; BSR set to: 0
 13345  00535C  0E00               	movlw	0
 13346  00535E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13347  005360  0E01               	movlw	1
 13348  005362  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13349  005364  0EFE               	movlw	low _USBActiveConfiguration
 13350  005366  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13351  005368  0E00               	movlw	high _USBActiveConfiguration
 13352  00536A  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13353  00536C  0E00               	movlw	0
 13354  00536E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13355  005370  0E01               	movlw	1
 13356  005372  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13357  005374  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13358                           
 13359                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13360  005378  0E20               	movlw	32
 13361  00537A  0100               	movlb	0	; () banked
 13362  00537C  6FF8               	movwf	_USBDeviceState& (0+255),b
 13363  00537E  0012               	return	
 13364  005380                     __end_of_USBStdSetCfgHandler:
 13365                           	opt stack 0
 13366                           tblptru	equ	0xFF8
 13367                           tblptrh	equ	0xFF7
 13368                           tblptrl	equ	0xFF6
 13369                           tablat	equ	0xFF5
 13370                           prodh	equ	0xFF4
 13371                           prodl	equ	0xFF3
 13372                           intcon	equ	0xFF2
 13373                           intcon2	equ	0xFF1
 13374                           intcon3	equ	0xFF0
 13375                           postinc0	equ	0xFEE
 13376                           wreg	equ	0xFE8
 13377                           indf1	equ	0xFE7
 13378                           postdec1	equ	0xFE5
 13379                           plusw1	equ	0xFE3
 13380                           fsr1h	equ	0xFE2
 13381                           fsr1l	equ	0xFE1
 13382                           indf2	equ	0xFDF
 13383                           postinc2	equ	0xFDE
 13384                           postdec2	equ	0xFDD
 13385                           plusw2	equ	0xFDB
 13386                           fsr2h	equ	0xFDA
 13387                           fsr2l	equ	0xFD9
 13388                           status	equ	0xFD8
 13389                           
 13390 ;; *************** function _memset *****************
 13391 ;; Defined at:
 13392 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13393 ;; Parameters:    Size  Location     Type
 13394 ;;  p1              2    0[COMRAM] PTR void 
 13395 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13396 ;;  c               2    2[COMRAM] int 
 13397 ;;  n               2    4[COMRAM] unsigned int 
 13398 ;; Auto vars:     Size  Location     Type
 13399 ;;  p               2    6[COMRAM] PTR unsigned char 
 13400 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13401 ;; Return value:  Size  Location     Type
 13402 ;;                  2    0[COMRAM] PTR void 
 13403 ;; Registers used:
 13404 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13405 ;; Tracked objects:
 13406 ;;		On entry : 0/0
 13407 ;;		On exit  : 0/0
 13408 ;;		Unchanged: 0/0
 13409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13410 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13411 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13413 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13414 ;;Total ram usage:        8 bytes
 13415 ;; Hardware stack levels used:    1
 13416 ;; This function calls:
 13417 ;;		Nothing
 13418 ;; This function is called by:
 13419 ;;		_USBDeviceInit
 13420 ;;		_USBStdSetCfgHandler
 13421 ;; This function uses a non-reentrant model
 13422 ;;
 13423                           
 13424                           	psect	text63
 13425  0089CA                     __ptext63:
 13426                           	opt stack 0
 13427  0089CA                     _memset:
 13428                           	opt stack 28
 13429                           
 13430                           ; BSR set to: 0
 13431                           ;incstack = 0
 13432  0089CA  C001  F007         	movff	memset@p1,memset@p
 13433  0089CE  C002  F008         	movff	memset@p1+1,memset@p+1
 13434  0089D2  D008               	goto	l3693
 13435  0089D4                     l11463:
 13436  0089D4  C007  FFD9         	movff	memset@p,fsr2l
 13437  0089D8  C008  FFDA         	movff	memset@p+1,fsr2h
 13438  0089DC  C003  FFDF         	movff	memset@c,indf2
 13439  0089E0  4A07               	infsnz	memset@p,f,c
 13440  0089E2  2A08               	incf	memset@p+1,f,c
 13441  0089E4                     l3693:
 13442  0089E4  0605               	decf	memset@n,f,c
 13443  0089E6  A0D8               	btfss	status,0,c
 13444  0089E8  0606               	decf	memset@n+1,f,c
 13445  0089EA  2805               	incf	memset@n,w,c
 13446  0089EC  E1F3               	bnz	l11463
 13447  0089EE  2806               	incf	memset@n+1,w,c
 13448  0089F0  B4D8               	btfsc	status,2,c
 13449  0089F2  0012               	return	
 13450  0089F4  D7EF               	goto	l3694
 13451  0089F6                     __end_of_memset:
 13452                           	opt stack 0
 13453                           tblptru	equ	0xFF8
 13454                           tblptrh	equ	0xFF7
 13455                           tblptrl	equ	0xFF6
 13456                           tablat	equ	0xFF5
 13457                           prodh	equ	0xFF4
 13458                           prodl	equ	0xFF3
 13459                           intcon	equ	0xFF2
 13460                           intcon2	equ	0xFF1
 13461                           intcon3	equ	0xFF0
 13462                           postinc0	equ	0xFEE
 13463                           wreg	equ	0xFE8
 13464                           indf1	equ	0xFE7
 13465                           postdec1	equ	0xFE5
 13466                           plusw1	equ	0xFE3
 13467                           fsr1h	equ	0xFE2
 13468                           fsr1l	equ	0xFE1
 13469                           indf2	equ	0xFDF
 13470                           postinc2	equ	0xFDE
 13471                           postdec2	equ	0xFDD
 13472                           plusw2	equ	0xFDB
 13473                           fsr2h	equ	0xFDA
 13474                           fsr2l	equ	0xFD9
 13475                           status	equ	0xFD8
 13476                           
 13477 ;; *************** function _USBStdGetStatusHandler *****************
 13478 ;; Defined at:
 13479 ;;		line 2131 in file "usb_device.c"
 13480 ;; Parameters:    Size  Location     Type
 13481 ;;		None
 13482 ;; Auto vars:     Size  Location     Type
 13483 ;;  p               2    1[COMRAM] PTR struct __BDT
 13484 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13485 ;; Return value:  Size  Location     Type
 13486 ;;                  1    wreg      void 
 13487 ;; Registers used:
 13488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13489 ;; Tracked objects:
 13490 ;;		On entry : 0/0
 13491 ;;		On exit  : 0/0
 13492 ;;		Unchanged: 0/0
 13493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13495 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13496 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13497 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13498 ;;Total ram usage:        3 bytes
 13499 ;; Hardware stack levels used:    1
 13500 ;; This function calls:
 13501 ;;		Nothing
 13502 ;; This function is called by:
 13503 ;;		_USBCheckStdRequest
 13504 ;; This function uses a non-reentrant model
 13505 ;;
 13506                           
 13507                           	psect	text64
 13508  0065DA                     __ptext64:
 13509                           	opt stack 0
 13510  0065DA                     _USBStdGetStatusHandler:
 13511                           	opt stack 26
 13512                           
 13513                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13514                           
 13515                           ;incstack = 0
 13516  0065DA  0E00               	movlw	0
 13517  0065DC  010D               	movlb	13	; () banked
 13518  0065DE  6F38               	movwf	56,b	;volatile
 13519                           
 13520                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13521  0065E0  0E00               	movlw	0
 13522  0065E2  6F39               	movwf	57,b	;volatile
 13523                           
 13524                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13525  0065E4  D039               	goto	l281
 13526  0065E6                     l282:
 13527                           
 13528                           ; BSR set to: 13
 13529                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13530  0065E6  0100               	movlb	0	; () banked
 13531  0065E8  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13532                           
 13533                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13534                           
 13535                           ; BSR set to: 13
 13536                           
 13537                           ; BSR set to: 0
 13538                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13539                           
 13540                           ;usb_device.c: 2144: if(0 == 1)
 13541  0065EA  0100               	movlb	0	; () banked
 13542  0065EC  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13543  0065EE  A4D8               	btfss	status,2,c
 13544  0065F0  D03E               	goto	l285
 13545                           
 13546                           ; BSR set to: 0
 13547                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13548  0065F2  010D               	movlb	13	; () banked
 13549  0065F4  8338               	bsf	56,1,b	;volatile
 13550                           
 13551                           ; BSR set to: 13
 13552                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13553  0065F6  D03B               	goto	l285
 13554  0065F8                     l286:
 13555                           
 13556                           ; BSR set to: 13
 13557                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13558  0065F8  0100               	movlb	0	; () banked
 13559  0065FA  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13560                           
 13561                           ;usb_device.c: 2156: break;
 13562  0065FC  D038               	goto	l285
 13563  0065FE                     l287:
 13564                           
 13565                           ; BSR set to: 13
 13566                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13567  0065FE  0100               	movlb	0	; () banked
 13568  006600  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13569                           
 13570                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13571  006602  010D               	movlb	13	; () banked
 13572  006604  BF34               	btfsc	52,7,b	;volatile
 13573  006606  D00A               	goto	l288
 13574                           
 13575                           ; BSR set to: 13
 13576                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13577  006608  5134               	movf	52,w,b	;volatile
 13578  00660A  0B0F               	andlw	15
 13579  00660C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13580  00660E  5001               	movf	??_USBStdGetStatusHandler,w,c
 13581  006610  0D02               	mullw	2
 13582  006612  0E40               	movlw	low _pBDTEntryOut
 13583  006614  24F3               	addwf	prodl,w,c
 13584  006616  6ED9               	movwf	fsr2l,c
 13585  006618  0E01               	movlw	high _pBDTEntryOut
 13586  00661A  D009               	goto	L6
 13587  00661C                     l288:
 13588                           
 13589                           ; BSR set to: 13
 13590                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13591                           
 13592                           ; BSR set to: 13
 13593  00661C  5134               	movf	52,w,b	;volatile
 13594  00661E  0B0F               	andlw	15
 13595  006620  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13596  006622  5001               	movf	??_USBStdGetStatusHandler,w,c
 13597  006624  0D02               	mullw	2
 13598  006626  0ED1               	movlw	low _pBDTEntryIn
 13599  006628  24F3               	addwf	prodl,w,c
 13600  00662A  6ED9               	movwf	fsr2l,c
 13601  00662C  0E00               	movlw	high _pBDTEntryIn
 13602  00662E                     L6:
 13603  00662E  20F4               	addwfc	prodh,w,c
 13604  006630  6EDA               	movwf	fsr2h,c
 13605  006632  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13606  006636  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13607                           
 13608                           ; BSR set to: 13
 13609                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13610                           
 13611                           ; BSR set to: 13
 13612  00663A  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13613  00663E  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13614  006642  AEDF               	btfss	indf2,7,c
 13615  006644  D014               	goto	l285
 13616                           
 13617                           ; BSR set to: 13
 13618  006646  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13619  00664A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13620  00664E  A4DF               	btfss	indf2,2,c
 13621  006650  D00E               	goto	l285
 13622                           
 13623                           ; BSR set to: 13
 13624                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13625  006652  0E01               	movlw	1
 13626  006654  6F38               	movwf	56,b	;volatile
 13627                           
 13628                           ; BSR set to: 13
 13629                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13630                           
 13631                           ; BSR set to: 13
 13632                           ;usb_device.c: 2176: break;
 13633  006656  D00B               	goto	l285
 13634  006658                     l281:
 13635                           
 13636                           ; BSR set to: 13
 13637                           
 13638                           ; BSR set to: 13
 13639  006658  5130               	movf	48,w,b	;volatile
 13640  00665A  0B1F               	andlw	31
 13641                           
 13642                           ; Switch size 1, requested type "space"
 13643                           ; Number of cases is 3, Range of values is 0 to 2
 13644                           ; switch strategies available:
 13645                           ; Name         Instructions Cycles
 13646                           ; simple_byte           10     6 (average)
 13647                           ;	Chosen strategy is simple_byte
 13648  00665C  0A00               	xorlw	0	; case 0
 13649  00665E  B4D8               	btfsc	status,2,c
 13650  006660  D7C2               	goto	l282
 13651  006662  0A01               	xorlw	1	; case 1
 13652  006664  B4D8               	btfsc	status,2,c
 13653  006666  D7C8               	goto	l286
 13654  006668  0A03               	xorlw	3	; case 2
 13655  00666A  B4D8               	btfsc	status,2,c
 13656  00666C  D7C8               	goto	l287
 13657  00666E                     l285:
 13658                           
 13659                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13660  00666E  0100               	movlb	0	; () banked
 13661  006670  AFCE               	btfss	(_inPipes+3)& (0+255),7,b
 13662  006672  0012               	return	
 13663                           
 13664                           ; BSR set to: 0
 13665                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13666  006674  0E38               	movlw	56
 13667  006676  6FCB               	movwf	_inPipes& (0+255),b
 13668  006678  0E0D               	movlw	13
 13669  00667A  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13670                           
 13671                           ; BSR set to: 0
 13672                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13673  00667C  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13674                           
 13675                           ; BSR set to: 0
 13676                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13677  00667E  0E02               	movlw	2
 13678  006680  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13679  006682  0012               	return	
 13680  006684                     __end_of_USBStdGetStatusHandler:
 13681                           	opt stack 0
 13682                           tblptru	equ	0xFF8
 13683                           tblptrh	equ	0xFF7
 13684                           tblptrl	equ	0xFF6
 13685                           tablat	equ	0xFF5
 13686                           prodh	equ	0xFF4
 13687                           prodl	equ	0xFF3
 13688                           intcon	equ	0xFF2
 13689                           intcon2	equ	0xFF1
 13690                           intcon3	equ	0xFF0
 13691                           postinc0	equ	0xFEE
 13692                           wreg	equ	0xFE8
 13693                           indf1	equ	0xFE7
 13694                           postdec1	equ	0xFE5
 13695                           plusw1	equ	0xFE3
 13696                           fsr1h	equ	0xFE2
 13697                           fsr1l	equ	0xFE1
 13698                           indf2	equ	0xFDF
 13699                           postinc2	equ	0xFDE
 13700                           postdec2	equ	0xFDD
 13701                           plusw2	equ	0xFDB
 13702                           fsr2h	equ	0xFDA
 13703                           fsr2l	equ	0xFD9
 13704                           status	equ	0xFD8
 13705                           
 13706 ;; *************** function _USBStdGetDscHandler *****************
 13707 ;; Defined at:
 13708 ;;		line 2045 in file "usb_device.c"
 13709 ;; Parameters:    Size  Location     Type
 13710 ;;		None
 13711 ;; Auto vars:     Size  Location     Type
 13712 ;;		None
 13713 ;; Return value:  Size  Location     Type
 13714 ;;                  1    wreg      void 
 13715 ;; Registers used:
 13716 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13717 ;; Tracked objects:
 13718 ;;		On entry : 0/0
 13719 ;;		On exit  : 0/0
 13720 ;;		Unchanged: 0/0
 13721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13722 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13724 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13725 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13726 ;;Total ram usage:        2 bytes
 13727 ;; Hardware stack levels used:    1
 13728 ;; This function calls:
 13729 ;;		Nothing
 13730 ;; This function is called by:
 13731 ;;		_USBCheckStdRequest
 13732 ;; This function uses a non-reentrant model
 13733 ;;
 13734                           
 13735                           	psect	text65
 13736  00412E                     __ptext65:
 13737                           	opt stack 0
 13738  00412E                     _USBStdGetDscHandler:
 13739                           	opt stack 26
 13740                           
 13741                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13742                           
 13743                           ; BSR set to: 0
 13744                           ;incstack = 0
 13745  00412E  0E80               	movlw	128
 13746  004130  010D               	movlb	13	; () banked
 13747  004132  1930               	xorwf	48,w,b	;volatile
 13748  004134  A4D8               	btfss	status,2,c
 13749  004136  0012               	return	
 13750                           
 13751                           ; BSR set to: 13
 13752                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13753  004138  0EC0               	movlw	192
 13754  00413A  0100               	movlb	0	; () banked
 13755  00413C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13756                           
 13757                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13758  00413E  D088               	goto	l268
 13759  004140                     
 13760                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13761                           
 13762                           ; BSR set to: 0
 13763  004140  0EA5               	movlw	low _device_dsc
 13764  004142  0100               	movlb	0	; () banked
 13765  004144  6FCB               	movwf	_inPipes& (0+255),b
 13766  004146  0E9F               	movlw	high _device_dsc
 13767  004148  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13768                           
 13769                           ; BSR set to: 0
 13770                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13771  00414A  0E00               	movlw	0
 13772  00414C  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13773  00414E  0E12               	movlw	18
 13774  004150  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13775                           
 13776                           ;usb_device.c: 2060: break;
 13777  004152  0012               	return	
 13778  004154                     
 13779                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13780                           
 13781                           ; BSR set to: 0
 13782  004154  010D               	movlb	13	; () banked
 13783  004156  5132               	movf	50,w,b	;volatile
 13784  004158  A4D8               	btfss	status,2,c
 13785  00415A  D043               	goto	l272
 13786                           
 13787                           ; BSR set to: 13
 13788                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13789  00415C  5132               	movf	50,w,b	;volatile
 13790  00415E  0D02               	mullw	2
 13791  004160  0EA5               	movlw	low _USB_CD_Ptr
 13792  004162  24F3               	addwf	prodl,w,c
 13793  004164  6EF6               	movwf	tblptrl,c
 13794  004166  0E9E               	movlw	high _USB_CD_Ptr
 13795  004168  20F4               	addwfc	prodh,w,c
 13796  00416A  6EF7               	movwf	tblptrh,c
 13797  00416C                     	if	1	;There are 3 active tblptr bytes
 13798  00416C  6AF8               	clrf	tblptru,c
 13799  00416E  0E00               	movlw	low (__mediumconst shr (0+16))
 13800  004170  22F8               	addwfc	tblptru,f,c
 13801  004172                     	endif
 13802  004172  0009               	tblrd		*+
 13803  004174  CFF5 F0CB          	movff	tablat,_inPipes
 13804  004178  000A               	tblrd		*-
 13805  00417A  CFF5 F0CC          	movff	tablat,_inPipes+1
 13806                           
 13807                           ; BSR set to: 13
 13808                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13809  00417E  0E02               	movlw	2
 13810  004180  0100               	movlb	0	; () banked
 13811  004182  25CB               	addwf	_inPipes& (0+255),w,b
 13812  004184  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13813  004186  0E00               	movlw	0
 13814  004188  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13815  00418A  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13816  00418C  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13817  004190  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13818  004194  6AF8               	clrf	tblptru,c
 13819  004196  0E0E               	movlw	(high __ramtop+-1)
 13820  004198  64F7               	cpfsgt	tblptrh,c
 13821  00419A  D003               	bra	u9537
 13822  00419C  0008               	tblrd		*
 13823  00419E  50F5               	movf	tablat,w,c
 13824  0041A0  D005               	bra	u9530
 13825  0041A2                     u9537:
 13826  0041A2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13827  0041A6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13828  0041AA  50EF               	movf	indf0,w,c
 13829  0041AC                     u9530:
 13830  0041AC  0100               	movlb	0	; () banked
 13831  0041AE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13832                           
 13833                           ; BSR set to: 0
 13834                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13835  0041B0  0E03               	movlw	3
 13836  0041B2  25CB               	addwf	_inPipes& (0+255),w,b
 13837  0041B4  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13838  0041B6  0E00               	movlw	0
 13839  0041B8  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13840  0041BA  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13841  0041BC  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13842  0041C0  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13843  0041C4  6AF8               	clrf	tblptru,c
 13844  0041C6  0E0E               	movlw	(high __ramtop+-1)
 13845  0041C8  64F7               	cpfsgt	tblptrh,c
 13846  0041CA  D003               	bra	u9547
 13847  0041CC  0008               	tblrd		*
 13848  0041CE  50F5               	movf	tablat,w,c
 13849  0041D0  D005               	bra	u9540
 13850  0041D2                     u9547:
 13851  0041D2  CFF6 FFE9          	movff	tblptrl,fsr0l
 13852  0041D6  CFF7 FFEA          	movff	tblptrh,fsr0h
 13853  0041DA  50EF               	movf	indf0,w,c
 13854  0041DC                     u9540:
 13855  0041DC  0100               	movlb	0	; () banked
 13856  0041DE  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13857                           
 13858                           ;usb_device.c: 2078: }
 13859  0041E0  0012               	return	
 13860  0041E2                     l272:
 13861                           
 13862                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13863                           
 13864                           ; BSR set to: 0
 13865  0041E2  0E00               	movlw	0
 13866  0041E4  0100               	movlb	0	; () banked
 13867  0041E6  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13868                           
 13869                           ; BSR set to: 0
 13870                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13871  0041E8  0012               	return	
 13872  0041EA                     
 13873                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13874                           
 13875                           ; BSR set to: 0
 13876  0041EA  0E04               	movlw	4
 13877  0041EC  010D               	movlb	13	; () banked
 13878  0041EE  6132               	cpfslt	50,b	;volatile
 13879  0041F0  D027               	goto	l275
 13880                           
 13881                           ; BSR set to: 13
 13882                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13883  0041F2  5132               	movf	50,w,b	;volatile
 13884  0041F4  0D02               	mullw	2
 13885  0041F6  0E7B               	movlw	low _USB_SD_Ptr
 13886  0041F8  24F3               	addwf	prodl,w,c
 13887  0041FA  6EF6               	movwf	tblptrl,c
 13888  0041FC  0E9E               	movlw	high _USB_SD_Ptr
 13889  0041FE  20F4               	addwfc	prodh,w,c
 13890  004200  6EF7               	movwf	tblptrh,c
 13891  004202                     	if	1	;There are 3 active tblptr bytes
 13892  004202  6AF8               	clrf	tblptru,c
 13893  004204  0E00               	movlw	low (__mediumconst shr (0+16))
 13894  004206  22F8               	addwfc	tblptru,f,c
 13895  004208                     	endif
 13896  004208  0009               	tblrd		*+
 13897  00420A  CFF5 F0CB          	movff	tablat,_inPipes
 13898  00420E  000A               	tblrd		*-
 13899  004210  CFF5 F0CC          	movff	tablat,_inPipes+1
 13900                           
 13901                           ; BSR set to: 13
 13902                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13903  004214  C0CB  FFF6         	movff	_inPipes,tblptrl
 13904  004218  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 13905  00421C  6AF8               	clrf	tblptru,c
 13906  00421E  0E0E               	movlw	(high __ramtop+-1)
 13907  004220  64F7               	cpfsgt	tblptrh,c
 13908  004222  D003               	bra	u9567
 13909  004224  0008               	tblrd		*
 13910  004226  50F5               	movf	tablat,w,c
 13911  004228  D005               	bra	u9560
 13912  00422A                     u9567:
 13913  00422A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13914  00422E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13915  004232  50EF               	movf	indf0,w,c
 13916  004234                     u9560:
 13917  004234  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13918  004236  5001               	movf	??_USBStdGetDscHandler,w,c
 13919  004238  0100               	movlb	0	; () banked
 13920  00423A  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13921  00423C  6BD0               	clrf	(_inPipes+5)& (0+255),b
 13922                           
 13923                           ;usb_device.c: 2094: }
 13924  00423E  0012               	return	
 13925  004240                     l275:
 13926                           
 13927                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13928                           
 13929                           ; BSR set to: 0
 13930  004240  0E00               	movlw	0
 13931  004242  0100               	movlb	0	; () banked
 13932  004244  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13933                           
 13934                           ; BSR set to: 0
 13935                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13936  004246  0012               	return	
 13937  004248                     
 13938                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13939                           
 13940                           ; BSR set to: 0
 13941  004248  0E00               	movlw	0
 13942  00424A  0100               	movlb	0	; () banked
 13943  00424C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13944                           
 13945                           ; BSR set to: 0
 13946                           ;usb_device.c: 2112: }
 13947                           
 13948                           ;usb_device.c: 2111: break;
 13949  00424E  0012               	return	
 13950  004250                     l268:
 13951                           
 13952                           ; BSR set to: 0
 13953                           
 13954                           ; BSR set to: 0
 13955  004250  010D               	movlb	13	; () banked
 13956  004252  5133               	movf	51,w,b	;volatile
 13957                           
 13958                           ; Switch size 1, requested type "space"
 13959                           ; Number of cases is 3, Range of values is 1 to 3
 13960                           ; switch strategies available:
 13961                           ; Name         Instructions Cycles
 13962                           ; simple_byte           10     6 (average)
 13963                           ;	Chosen strategy is simple_byte
 13964  004254  0A01               	xorlw	1	; case 1
 13965  004256  B4D8               	btfsc	status,2,c
 13966  004258  D773               	goto	l269
 13967  00425A  0A03               	xorlw	3	; case 2
 13968  00425C  B4D8               	btfsc	status,2,c
 13969  00425E  D77A               	goto	l271
 13970  004260  0A01               	xorlw	1	; case 3
 13971  004262  B4D8               	btfsc	status,2,c
 13972  004264  D7C2               	goto	l274
 13973  004266  D7F0               	goto	l277
 13974  004268                     __end_of_USBStdGetDscHandler:
 13975                           	opt stack 0
 13976                           tblptru	equ	0xFF8
 13977                           tblptrh	equ	0xFF7
 13978                           tblptrl	equ	0xFF6
 13979                           tablat	equ	0xFF5
 13980                           prodh	equ	0xFF4
 13981                           prodl	equ	0xFF3
 13982                           intcon	equ	0xFF2
 13983                           intcon2	equ	0xFF1
 13984                           intcon3	equ	0xFF0
 13985                           indf0	equ	0xFEF
 13986                           postinc0	equ	0xFEE
 13987                           fsr0h	equ	0xFEA
 13988                           fsr0l	equ	0xFE9
 13989                           wreg	equ	0xFE8
 13990                           indf1	equ	0xFE7
 13991                           postdec1	equ	0xFE5
 13992                           plusw1	equ	0xFE3
 13993                           fsr1h	equ	0xFE2
 13994                           fsr1l	equ	0xFE1
 13995                           indf2	equ	0xFDF
 13996                           postinc2	equ	0xFDE
 13997                           postdec2	equ	0xFDD
 13998                           plusw2	equ	0xFDB
 13999                           fsr2h	equ	0xFDA
 14000                           fsr2l	equ	0xFD9
 14001                           status	equ	0xFD8
 14002                           
 14003 ;; *************** function _USBStdFeatureReqHandler *****************
 14004 ;; Defined at:
 14005 ;;		line 2756 in file "usb_device.c"
 14006 ;; Parameters:    Size  Location     Type
 14007 ;;		None
 14008 ;; Auto vars:     Size  Location     Type
 14009 ;;  p               2   27[COMRAM] PTR struct __BDT
 14010 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14011 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14012 ;;		 -> UEP0(1), 
 14013 ;;  current_ep_d    1   26[COMRAM] struct .
 14014 ;; Return value:  Size  Location     Type
 14015 ;;                  1    wreg      void 
 14016 ;; Registers used:
 14017 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14018 ;; Tracked objects:
 14019 ;;		On entry : 0/0
 14020 ;;		On exit  : 0/0
 14021 ;;		Unchanged: 0/0
 14022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14023 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14024 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14025 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14026 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14027 ;;Total ram usage:        6 bytes
 14028 ;; Hardware stack levels used:    1
 14029 ;; Hardware stack levels required when called:    4
 14030 ;; This function calls:
 14031 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14032 ;; This function is called by:
 14033 ;;		_USBCheckStdRequest
 14034 ;; This function uses a non-reentrant model
 14035 ;;
 14036                           
 14037                           	psect	text66
 14038  001B48                     __ptext66:
 14039                           	opt stack 0
 14040  001B48                     _USBStdFeatureReqHandler:
 14041                           	opt stack 22
 14042                           
 14043                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14044                           
 14045                           ;incstack = 0
 14046  001B48  010D               	movlb	13	; () banked
 14047  001B4A  0532               	decf	50,w,b	;volatile
 14048  001B4C  A4D8               	btfss	status,2,c
 14049  001B4E  D011               	goto	l361
 14050                           
 14051                           ; BSR set to: 13
 14052  001B50  5130               	movf	48,w,b	;volatile
 14053  001B52  0B1F               	andlw	31
 14054  001B54  0900               	iorlw	0
 14055  001B56  A4D8               	btfss	status,2,c
 14056  001B58  D00C               	goto	l361
 14057                           
 14058                           ; BSR set to: 13
 14059                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14060  001B5A  0100               	movlb	0	; () banked
 14061  001B5C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14062                           
 14063                           ; BSR set to: 0
 14064                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14065  001B5E  0E03               	movlw	3
 14066  001B60  010D               	movlb	13	; () banked
 14067  001B62  1931               	xorwf	49,w,b	;volatile
 14068  001B64  A4D8               	btfss	status,2,c
 14069  001B66  D002               	goto	l360
 14070                           
 14071                           ; BSR set to: 13
 14072                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14073  001B68  0E01               	movlw	1
 14074  001B6A  D001               	goto	L7
 14075  001B6C                     l360:
 14076                           
 14077                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14078                           
 14079                           ; BSR set to: 0
 14080  001B6C  0E00               	movlw	0
 14081  001B6E                     L7:
 14082  001B6E  0100               	movlb	0	; () banked
 14083  001B70  6FF5               	movwf	_RemoteWakeup& (0+255),b
 14084  001B72                     l361:
 14085                           
 14086                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14087                           
 14088                           ; BSR set to: 0
 14089  001B72  010D               	movlb	13	; () banked
 14090  001B74  5132               	movf	50,w,b	;volatile
 14091  001B76  A4D8               	btfss	status,2,c
 14092  001B78  0012               	return	
 14093                           
 14094                           ; BSR set to: 13
 14095  001B7A  5130               	movf	48,w,b	;volatile
 14096  001B7C  0B1F               	andlw	31
 14097  001B7E  0A02               	xorlw	2
 14098  001B80  A4D8               	btfss	status,2,c
 14099  001B82  0012               	return	
 14100                           
 14101                           ; BSR set to: 13
 14102  001B84  5134               	movf	52,w,b	;volatile
 14103  001B86  0B0F               	andlw	15
 14104  001B88  0900               	iorlw	0
 14105  001B8A  B4D8               	btfsc	status,2,c
 14106  001B8C  0012               	return	
 14107                           
 14108                           ; BSR set to: 13
 14109  001B8E  5134               	movf	52,w,b	;volatile
 14110  001B90  0B0F               	andlw	15
 14111  001B92  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14112  001B94  0E03               	movlw	3
 14113  001B96  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14114  001B98  0012               	return	
 14115                           
 14116                           ; BSR set to: 13
 14117  001B9A  0E20               	movlw	32
 14118  001B9C  0100               	movlb	0	; () banked
 14119  001B9E  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14120  001BA0  A4D8               	btfss	status,2,c
 14121  001BA2  0012               	return	
 14122                           
 14123                           ; BSR set to: 0
 14124                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14125  001BA4  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14126                           
 14127                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14128  001BA6  010D               	movlb	13	; () banked
 14129  001BA8  BF34               	btfsc	52,7,b	;volatile
 14130  001BAA  D019               	goto	l363
 14131                           
 14132                           ; BSR set to: 13
 14133                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14134  001BAC  5134               	movf	52,w,b	;volatile
 14135  001BAE  0B0F               	andlw	15
 14136  001BB0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14137  001BB2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14138  001BB4  0D02               	mullw	2
 14139  001BB6  0E40               	movlw	low _pBDTEntryOut
 14140  001BB8  24F3               	addwf	prodl,w,c
 14141  001BBA  6ED9               	movwf	fsr2l,c
 14142  001BBC  0E01               	movlw	high _pBDTEntryOut
 14143  001BBE  20F4               	addwfc	prodh,w,c
 14144  001BC0  6EDA               	movwf	fsr2h,c
 14145  001BC2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14146  001BC6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14147                           
 14148                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14149  001BCA  5134               	movf	52,w,b	;volatile
 14150  001BCC  0B0F               	andlw	15
 14151  001BCE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14152  001BD0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14153  001BD2  0D01               	mullw	1
 14154  001BD4  0E6C               	movlw	low _ep_data_out
 14155  001BD6  24F3               	addwf	prodl,w,c
 14156  001BD8  6ED9               	movwf	fsr2l,c
 14157  001BDA  0E01               	movlw	high _ep_data_out
 14158  001BDC  D018               	goto	L8
 14159  001BDE                     l363:
 14160                           
 14161                           ; BSR set to: 13
 14162                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14163                           
 14164                           ; BSR set to: 13
 14165  001BDE  5134               	movf	52,w,b	;volatile
 14166  001BE0  0B0F               	andlw	15
 14167  001BE2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14168  001BE4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14169  001BE6  0D02               	mullw	2
 14170  001BE8  0ED1               	movlw	low _pBDTEntryIn
 14171  001BEA  24F3               	addwf	prodl,w,c
 14172  001BEC  6ED9               	movwf	fsr2l,c
 14173  001BEE  0E00               	movlw	high _pBDTEntryIn
 14174  001BF0  20F4               	addwfc	prodh,w,c
 14175  001BF2  6EDA               	movwf	fsr2h,c
 14176  001BF4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14177  001BF8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14178                           
 14179                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14180  001BFC  5134               	movf	52,w,b	;volatile
 14181  001BFE  0B0F               	andlw	15
 14182  001C00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14183  001C02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14184  001C04  0D01               	mullw	1
 14185  001C06  0E6F               	movlw	low _ep_data_in
 14186  001C08  24F3               	addwf	prodl,w,c
 14187  001C0A  6ED9               	movwf	fsr2l,c
 14188  001C0C  0E01               	movlw	high _ep_data_in
 14189  001C0E                     L8:
 14190  001C0E  20F4               	addwfc	prodh,w,c
 14191  001C10  6EDA               	movwf	fsr2h,c
 14192  001C12  50DF               	movf	indf2,w,c
 14193  001C14  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14194                           
 14195                           ; BSR set to: 13
 14196                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14197                           
 14198                           ; BSR set to: 13
 14199  001C16  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14200  001C18  D006               	goto	l365
 14201                           
 14202                           ; BSR set to: 13
 14203                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14204  001C1A  0EFB               	movlw	251
 14205  001C1C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14206  001C1E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14207  001C20  0EFF               	movlw	255
 14208  001C22  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14209  001C24  D004               	goto	L9
 14210  001C26                     l365:
 14211                           
 14212                           ; BSR set to: 13
 14213                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14214                           
 14215                           ; BSR set to: 13
 14216  001C26  0E04               	movlw	4
 14217  001C28  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14218  001C2A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14219  001C2C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14220  001C2E                     L9:
 14221  001C2E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14222                           
 14223                           ; BSR set to: 13
 14224                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14225                           
 14226                           ; BSR set to: 13
 14227  001C30  BF34               	btfsc	52,7,b	;volatile
 14228  001C32  D00A               	goto	l367
 14229                           
 14230                           ; BSR set to: 13
 14231                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14232  001C34  5134               	movf	52,w,b	;volatile
 14233  001C36  0B0F               	andlw	15
 14234  001C38  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14235  001C3A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14236  001C3C  0D02               	mullw	2
 14237  001C3E  0E40               	movlw	low _pBDTEntryOut
 14238  001C40  24F3               	addwf	prodl,w,c
 14239  001C42  6ED9               	movwf	fsr2l,c
 14240  001C44  0E01               	movlw	high _pBDTEntryOut
 14241  001C46  D009               	goto	L10
 14242  001C48                     l367:
 14243                           
 14244                           ; BSR set to: 13
 14245                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14246                           
 14247                           ; BSR set to: 13
 14248  001C48  5134               	movf	52,w,b	;volatile
 14249  001C4A  0B0F               	andlw	15
 14250  001C4C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14251  001C4E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14252  001C50  0D02               	mullw	2
 14253  001C52  0ED1               	movlw	low _pBDTEntryIn
 14254  001C54  24F3               	addwf	prodl,w,c
 14255  001C56  6ED9               	movwf	fsr2l,c
 14256  001C58  0E00               	movlw	high _pBDTEntryIn
 14257  001C5A                     L10:
 14258  001C5A  20F4               	addwfc	prodh,w,c
 14259  001C5C  6EDA               	movwf	fsr2h,c
 14260  001C5E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14261  001C62  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14262                           
 14263                           ; BSR set to: 13
 14264                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14265                           
 14266                           ; BSR set to: 13
 14267  001C66  0E03               	movlw	3
 14268  001C68  1931               	xorwf	49,w,b	;volatile
 14269  001C6A  A4D8               	btfss	status,2,c
 14270  001C6C  D02D               	goto	l369
 14271                           
 14272                           ; BSR set to: 13
 14273                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14274  001C6E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14275  001C72  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14276  001C76  AEDF               	btfss	indf2,7,c
 14277  001C78  D01A               	goto	l372
 14278                           
 14279                           ; BSR set to: 13
 14280                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14281  001C7A  BF34               	btfsc	52,7,b	;volatile
 14282  001C7C  D00A               	goto	l371
 14283                           
 14284                           ; BSR set to: 13
 14285                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14286  001C7E  5134               	movf	52,w,b	;volatile
 14287  001C80  0B0F               	andlw	15
 14288  001C82  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14289  001C84  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14290  001C86  0D01               	mullw	1
 14291  001C88  0E6C               	movlw	low _ep_data_out
 14292  001C8A  24F3               	addwf	prodl,w,c
 14293  001C8C  6ED9               	movwf	fsr2l,c
 14294  001C8E  0E01               	movlw	high _ep_data_out
 14295  001C90  D00A               	goto	L11
 14296  001C92                     l371:
 14297                           
 14298                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14299                           
 14300                           ; BSR set to: 1
 14301  001C92  010D               	movlb	13	; () banked
 14302  001C94  5134               	movf	52,w,b	;volatile
 14303  001C96  0B0F               	andlw	15
 14304  001C98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14305  001C9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14306  001C9C  0D01               	mullw	1
 14307  001C9E  0E6F               	movlw	low _ep_data_in
 14308  001CA0  24F3               	addwf	prodl,w,c
 14309  001CA2  6ED9               	movwf	fsr2l,c
 14310  001CA4  0E01               	movlw	high _ep_data_in
 14311  001CA6                     L11:
 14312  001CA6  20F4               	addwfc	prodh,w,c
 14313  001CA8  6EDA               	movwf	fsr2h,c
 14314  001CAA  0101               	movlb	1	; () banked
 14315  001CAC  82DF               	bsf	indf2,1,c
 14316  001CAE                     l372:
 14317                           
 14318                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14319                           
 14320                           ; BSR set to: 1
 14321                           
 14322                           ; BSR set to: 1
 14323  001CAE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14324  001CB2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14325  001CB6  0E00               	movlw	0
 14326  001CB8  84DB               	bsf	plusw2,2,c
 14327                           
 14328                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14329  001CBA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14330  001CBE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14331  001CC2  0E00               	movlw	0
 14332  001CC4  8EDB               	bsf	plusw2,7,c
 14333                           
 14334                           ;usb_device.c: 2878: }
 14335  001CC6  0012               	return	
 14336  001CC8                     l369:
 14337                           
 14338                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14339  001CC8  0E04               	movlw	4
 14340  001CCA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14341  001CCC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14342  001CCE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14343  001CD0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14344                           
 14345                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14346  001CD2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14347  001CD6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14348  001CDA  AEDF               	btfss	indf2,7,c
 14349  001CDC  D01B               	goto	l374
 14350                           
 14351                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14352  001CDE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14353  001CE2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14354  001CE6  0E7F               	movlw	127
 14355  001CE8  16DF               	andwf	indf2,f,c
 14356                           
 14357                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14358  001CEA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14359  001CEE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14360  001CF2  0E00               	movlw	0
 14361  001CF4  8CDB               	bsf	plusw2,6,c
 14362                           
 14363                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14364  001CF6  0E00               	movlw	0
 14365  001CF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14366  001CFA  0E05               	movlw	5
 14367  001CFC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14368  001CFE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14369  001D02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14370  001D06  0E00               	movlw	0
 14371  001D08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14372  001D0A  0E02               	movlw	2
 14373  001D0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14374  001D0E  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14375                           
 14376                           ;usb_device.c: 2893: }
 14377  001D12  D006               	goto	l375
 14378  001D14                     l374:
 14379                           
 14380                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14381  001D14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14382  001D18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14383  001D1C  0E00               	movlw	0
 14384  001D1E  8CDB               	bsf	plusw2,6,c
 14385  001D20                     l375:
 14386                           
 14387                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14388  001D20  0E04               	movlw	4
 14389  001D22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14390  001D24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14391  001D26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14392  001D28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14393                           
 14394                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14395  001D2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14396  001D2C  D006               	goto	u9780
 14397  001D2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14398  001D32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14399  001D36  AEDF               	btfss	indf2,7,c
 14400  001D38  D030               	goto	l376
 14401  001D3A                     u9780:
 14402                           
 14403                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14404  001D3A  010D               	movlb	13	; () banked
 14405  001D3C  BF34               	btfsc	52,7,b	;volatile
 14406  001D3E  D00A               	goto	l379
 14407                           
 14408                           ; BSR set to: 13
 14409                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14410  001D40  5134               	movf	52,w,b	;volatile
 14411  001D42  0B0F               	andlw	15
 14412  001D44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14413  001D46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14414  001D48  0D01               	mullw	1
 14415  001D4A  0E6C               	movlw	low _ep_data_out
 14416  001D4C  24F3               	addwf	prodl,w,c
 14417  001D4E  6ED9               	movwf	fsr2l,c
 14418  001D50  0E01               	movlw	high _ep_data_out
 14419  001D52  D00A               	goto	L12
 14420  001D54                     l379:
 14421                           
 14422                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14423                           
 14424                           ; BSR set to: 1
 14425  001D54  010D               	movlb	13	; () banked
 14426  001D56  5134               	movf	52,w,b	;volatile
 14427  001D58  0B0F               	andlw	15
 14428  001D5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14429  001D5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14430  001D5E  0D01               	mullw	1
 14431  001D60  0E6F               	movlw	low _ep_data_in
 14432  001D62  24F3               	addwf	prodl,w,c
 14433  001D64  6ED9               	movwf	fsr2l,c
 14434  001D66  0E01               	movlw	high _ep_data_in
 14435  001D68                     L12:
 14436  001D68  20F4               	addwfc	prodh,w,c
 14437  001D6A  6EDA               	movwf	fsr2h,c
 14438  001D6C  0101               	movlb	1	; () banked
 14439  001D6E  92DF               	bcf	indf2,1,c
 14440                           
 14441                           ; BSR set to: 1
 14442                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14443                           
 14444                           ; BSR set to: 1
 14445  001D70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14446  001D74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14447  001D78  0E3B               	movlw	59
 14448  001D7A  16DF               	andwf	indf2,f,c
 14449                           
 14450                           ; BSR set to: 1
 14451                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14452  001D7C  0E00               	movlw	0
 14453  001D7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14454  001D80  0E05               	movlw	5
 14455  001D82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14456  001D84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14457  001D88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14458  001D8C  0E00               	movlw	0
 14459  001D8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14460  001D90  0E02               	movlw	2
 14461  001D92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14462  001D94  EC3D  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14463                           
 14464                           ;usb_device.c: 2923: }
 14465  001D98  D006               	goto	l381
 14466  001D9A                     l376:
 14467                           
 14468                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14469  001D9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14470  001D9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14471  001DA2  0E3B               	movlw	59
 14472  001DA4  16DF               	andwf	indf2,f,c
 14473  001DA6                     l381:
 14474                           
 14475                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14476  001DA6  010D               	movlb	13	; () banked
 14477  001DA8  5134               	movf	52,w,b	;volatile
 14478  001DAA  0B0F               	andlw	15
 14479  001DAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14480  001DAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14481  001DB0  0D01               	mullw	1
 14482  001DB2  0E26               	movlw	38
 14483  001DB4  24F3               	addwf	prodl,w,c
 14484  001DB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14485  001DB8  0E0F               	movlw	15
 14486  001DBA  20F4               	addwfc	prodh,w,c
 14487  001DBC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14488                           
 14489                           ; BSR set to: 13
 14490                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14491  001DBE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14492  001DC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14493  001DC6  0EFE               	movlw	254
 14494  001DC8  16DF               	andwf	indf2,f,c
 14495                           
 14496                           ; BSR set to: 13
 14497  001DCA  0012               	return	
 14498  001DCC                     __end_of_USBStdFeatureReqHandler:
 14499                           	opt stack 0
 14500                           tblptru	equ	0xFF8
 14501                           tblptrh	equ	0xFF7
 14502                           tblptrl	equ	0xFF6
 14503                           tablat	equ	0xFF5
 14504                           prodh	equ	0xFF4
 14505                           prodl	equ	0xFF3
 14506                           intcon	equ	0xFF2
 14507                           intcon2	equ	0xFF1
 14508                           intcon3	equ	0xFF0
 14509                           indf0	equ	0xFEF
 14510                           postinc0	equ	0xFEE
 14511                           fsr0h	equ	0xFEA
 14512                           fsr0l	equ	0xFE9
 14513                           wreg	equ	0xFE8
 14514                           indf1	equ	0xFE7
 14515                           postdec1	equ	0xFE5
 14516                           plusw1	equ	0xFE3
 14517                           fsr1h	equ	0xFE2
 14518                           fsr1l	equ	0xFE1
 14519                           indf2	equ	0xFDF
 14520                           postinc2	equ	0xFDE
 14521                           postdec2	equ	0xFDD
 14522                           plusw2	equ	0xFDB
 14523                           fsr2h	equ	0xFDA
 14524                           fsr2l	equ	0xFD9
 14525                           status	equ	0xFD8
 14526                           
 14527 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14528 ;; Defined at:
 14529 ;;		line 54 in file "usb_events.c"
 14530 ;; Parameters:    Size  Location     Type
 14531 ;;  event           2   15[COMRAM] enum E6832
 14532 ;;  pdata           2   17[COMRAM] PTR void 
 14533 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14534 ;;		 -> BDT(48), 
 14535 ;;  size            2   19[COMRAM] unsigned int 
 14536 ;; Auto vars:     Size  Location     Type
 14537 ;;		None
 14538 ;; Return value:  Size  Location     Type
 14539 ;;                  1    wreg      unsigned char 
 14540 ;; Registers used:
 14541 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14542 ;; Tracked objects:
 14543 ;;		On entry : 0/0
 14544 ;;		On exit  : 0/0
 14545 ;;		Unchanged: 0/0
 14546 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14547 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14548 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14549 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14550 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14551 ;;Total ram usage:        8 bytes
 14552 ;; Hardware stack levels used:    1
 14553 ;; Hardware stack levels required when called:    3
 14554 ;; This function calls:
 14555 ;;		_APP_DeviceCustomHIDInitialize
 14556 ;;		_APP_DeviceMSDInitialize
 14557 ;;		_MSDTransferTerminated
 14558 ;;		_SYSTEM_Initialize
 14559 ;;		_USBCheckHIDRequest
 14560 ;;		_USBCheckMSDRequest
 14561 ;; This function is called by:
 14562 ;;		_USBDeviceTasks
 14563 ;;		_USBStdSetCfgHandler
 14564 ;;		_USBSuspend
 14565 ;;		_USBWakeFromSuspend
 14566 ;;		_USBCtrlTrfSetupHandler
 14567 ;;		_USBCheckStdRequest
 14568 ;;		_USBStdFeatureReqHandler
 14569 ;; This function uses a non-reentrant model
 14570 ;;
 14571                           
 14572                           	psect	text67
 14573  00727A                     __ptext67:
 14574                           	opt stack 0
 14575  00727A                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14576                           	opt stack 26
 14577                           
 14578                           ;usb_events.c: 56: switch((int)event)
 14579                           
 14580                           ;incstack = 0
 14581  00727A  D019               	goto	l800
 14582  00727C                     
 14583                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14584  00727C  0E01               	movlw	1
 14585  00727E  EC6F  F040         	call	_SYSTEM_Initialize
 14586                           
 14587                           ;usb_events.c: 79: break;
 14588  007282  0012               	return	
 14589  007284                     
 14590                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14591  007284  0E02               	movlw	2
 14592  007286  EC6F  F040         	call	_SYSTEM_Initialize
 14593                           
 14594                           ;usb_events.c: 90: break;
 14595  00728A  0012               	return	
 14596  00728C                     
 14597                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14598  00728C  ECD9  F043         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14599                           
 14600                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14601  007290  EC53  F047         	call	_APP_DeviceMSDInitialize	;wreg free
 14602                           
 14603                           ;usb_events.c: 100: break;
 14604                           
 14605                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14606                           
 14607                           ;usb_events.c: 97: break;
 14608  007294  0012               	return	
 14609  007296                     
 14610                           ;usb_events.c: 105: USBCheckHIDRequest();
 14611  007296  ECC0  F029         	call	_USBCheckHIDRequest	;wreg free
 14612                           
 14613                           ;usb_events.c: 108: USBCheckMSDRequest();
 14614  00729A  ECAE  F02F         	call	_USBCheckMSDRequest	;wreg free
 14615                           
 14616                           ;usb_events.c: 112: break;
 14617                           
 14618                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14619                           
 14620                           ;usb_events.c: 109: break;
 14621  00729E  0012               	return	
 14622  0072A0                     
 14623                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14624  0072A0  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14625  0072A4  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14626  0072A8  EC42  F03F         	call	_MSDTransferTerminated	;wreg free
 14627                           
 14628                           ;usb_events.c: 129: }
 14629                           
 14630                           ;usb_events.c: 128: break;
 14631                           
 14632                           ;usb_events.c: 127: default:
 14633                           
 14634                           ;usb_events.c: 125: break;
 14635  0072AC  0012               	return	
 14636  0072AE                     l800:
 14637  0072AE  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14638  0072B2  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14639                           
 14640                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14641                           ; Switch size 1, requested type "space"
 14642                           ; Number of cases is 2, Range of values is 0 to 127
 14643                           ; switch strategies available:
 14644                           ; Name         Instructions Cycles
 14645                           ; simple_byte            7     4 (average)
 14646                           ;	Chosen strategy is simple_byte
 14647  0072B6  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14648  0072B8  0A00               	xorlw	0	; case 0
 14649  0072BA  B4D8               	btfsc	status,2,c
 14650  0072BC  D004               	goto	l16261
 14651  0072BE  0A7F               	xorlw	127	; case 127
 14652  0072C0  A4D8               	btfss	status,2,c
 14653  0072C2  0012               	return	
 14654  0072C4  D01A               	goto	l16263
 14655  0072C6                     l16261:
 14656                           
 14657                           ; Switch size 1, requested type "space"
 14658                           ; Number of cases is 8, Range of values is 1 to 117
 14659                           ; switch strategies available:
 14660                           ; Name         Instructions Cycles
 14661                           ; simple_byte           25    13 (average)
 14662                           ;	Chosen strategy is simple_byte
 14663  0072C6  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14664  0072C8  0A01               	xorlw	1	; case 1
 14665  0072CA  B4D8               	btfsc	status,2,c
 14666  0072CC  D7DF               	goto	l806
 14667  0072CE  0A03               	xorlw	3	; case 2
 14668  0072D0  B4D8               	btfsc	status,2,c
 14669  0072D2  0012               	return	
 14670  0072D4  0A01               	xorlw	1	; case 3
 14671  0072D6  B4D8               	btfsc	status,2,c
 14672  0072D8  D7DE               	goto	l808
 14673  0072DA  0A06               	xorlw	6	; case 5
 14674  0072DC  B4D8               	btfsc	status,2,c
 14675  0072DE  D7E0               	goto	l810
 14676  0072E0  0A77               	xorlw	119	; case 114
 14677  0072E2  B4D8               	btfsc	status,2,c
 14678  0072E4  0012               	return	
 14679  0072E6  0A01               	xorlw	1	; case 115
 14680  0072E8  B4D8               	btfsc	status,2,c
 14681  0072EA  0012               	return	
 14682  0072EC  0A07               	xorlw	7	; case 116
 14683  0072EE  B4D8               	btfsc	status,2,c
 14684  0072F0  D7C9               	goto	l805
 14685  0072F2  0A01               	xorlw	1	; case 117
 14686  0072F4  A4D8               	btfss	status,2,c
 14687  0072F6  0012               	return	
 14688  0072F8  D7C1               	goto	l804
 14689  0072FA                     l16263:
 14690                           
 14691                           ; Switch size 1, requested type "space"
 14692                           ; Number of cases is 1, Range of values is 255 to 255
 14693                           ; switch strategies available:
 14694                           ; Name         Instructions Cycles
 14695                           ; simple_byte            4     3 (average)
 14696                           ;	Chosen strategy is simple_byte
 14697  0072FA  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14698  0072FC  0AFF               	xorlw	255	; case 255
 14699  0072FE  0012               	return	
 14700  007300                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14701                           	opt stack 0
 14702                           tblptru	equ	0xFF8
 14703                           tblptrh	equ	0xFF7
 14704                           tblptrl	equ	0xFF6
 14705                           tablat	equ	0xFF5
 14706                           prodh	equ	0xFF4
 14707                           prodl	equ	0xFF3
 14708                           intcon	equ	0xFF2
 14709                           intcon2	equ	0xFF1
 14710                           intcon3	equ	0xFF0
 14711                           indf0	equ	0xFEF
 14712                           postinc0	equ	0xFEE
 14713                           fsr0h	equ	0xFEA
 14714                           fsr0l	equ	0xFE9
 14715                           wreg	equ	0xFE8
 14716                           indf1	equ	0xFE7
 14717                           postdec1	equ	0xFE5
 14718                           plusw1	equ	0xFE3
 14719                           fsr1h	equ	0xFE2
 14720                           fsr1l	equ	0xFE1
 14721                           indf2	equ	0xFDF
 14722                           postinc2	equ	0xFDE
 14723                           postdec2	equ	0xFDD
 14724                           plusw2	equ	0xFDB
 14725                           fsr2h	equ	0xFDA
 14726                           fsr2l	equ	0xFD9
 14727                           status	equ	0xFD8
 14728                           
 14729 ;; *************** function _USBCheckMSDRequest *****************
 14730 ;; Defined at:
 14731 ;;		line 218 in file "usb_device_msd.c"
 14732 ;; Parameters:    Size  Location     Type
 14733 ;;		None
 14734 ;; Auto vars:     Size  Location     Type
 14735 ;;		None
 14736 ;; Return value:  Size  Location     Type
 14737 ;;                  1    wreg      void 
 14738 ;; Registers used:
 14739 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14740 ;; Tracked objects:
 14741 ;;		On entry : 0/0
 14742 ;;		On exit  : 0/0
 14743 ;;		Unchanged: 0/0
 14744 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14745 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14746 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14747 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14748 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14749 ;;Total ram usage:        4 bytes
 14750 ;; Hardware stack levels used:    1
 14751 ;; Hardware stack levels required when called:    1
 14752 ;; This function calls:
 14753 ;;		_USBTransferOnePacket
 14754 ;; This function is called by:
 14755 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14756 ;; This function uses a non-reentrant model
 14757 ;;
 14758                           
 14759                           	psect	text68
 14760  005F5C                     __ptext68:
 14761                           	opt stack 0
 14762  005F5C                     _USBCheckMSDRequest:
 14763                           	opt stack 27
 14764                           
 14765                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14766                           
 14767                           ;incstack = 0
 14768  005F5C  010D               	movlb	13	; () banked
 14769  005F5E  5130               	movf	48,w,b	;volatile
 14770  005F60  0B1F               	andlw	31
 14771  005F62  06E8               	decf	wreg,f,c
 14772  005F64  A4D8               	btfss	status,2,c
 14773  005F66  0012               	return	
 14774                           
 14775                           ; BSR set to: 13
 14776                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14777                           
 14778                           ; BSR set to: 13
 14779                           
 14780                           ; BSR set to: 13
 14781                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14782  005F68  5134               	movf	52,w,b	;volatile
 14783  005F6A  A4D8               	btfss	status,2,c
 14784  005F6C  0012               	return	
 14785  005F6E  D04F               	goto	l529
 14786  005F70                     
 14787                           ; BSR set to: 13
 14788                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14789                           
 14790                           ; BSR set to: 13
 14791  005F70  5132               	movf	50,w,b	;volatile
 14792  005F72  1133               	iorwf	51,w,b	;volatile
 14793  005F74  A4D8               	btfss	status,2,c
 14794  005F76  0012               	return	
 14795                           
 14796                           ; BSR set to: 13
 14797  005F78  5136               	movf	54,w,b	;volatile
 14798  005F7A  1137               	iorwf	55,w,b	;volatile
 14799  005F7C  A4D8               	btfss	status,2,c
 14800  005F7E  0012               	return	
 14801                           
 14802                           ; BSR set to: 13
 14803                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14804                           
 14805                           ; BSR set to: 13
 14806                           
 14807                           ; BSR set to: 13
 14808                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14809  005F80  0E00               	movlw	0
 14810  005F82  0100               	movlb	0	; () banked
 14811  005F84  6FED               	movwf	_MSD_State& (0+255),b
 14812                           
 14813                           ; BSR set to: 0
 14814                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14815  005F86  69EC               	setf	_MSDCommandState& (0+255),b
 14816                           
 14817                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14818  005F88  0E00               	movlw	0
 14819  005F8A  6FEB               	movwf	_MSDReadState& (0+255),b
 14820                           
 14821                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14822  005F8C  0E00               	movlw	0
 14823  005F8E  6FEA               	movwf	_MSDWriteState& (0+255),b
 14824                           
 14825                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14826  005F90  0E01               	movlw	1
 14827  005F92  0101               	movlb	1	; () banked
 14828  005F94  6F8E               	movwf	_MSDCBWValid& (0+255),b
 14829                           
 14830                           ; BSR set to: 1
 14831                           
 14832                           ; BSR set to: 1
 14833                           
 14834                           ; BSR set to: 1
 14835                           
 14836                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14837  005F96  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14838  005F9A  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14839                           
 14840                           ; BSR set to: 1
 14841  005F9E  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14842  005FA0  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14843  005FA2  B4D8               	btfsc	status,2,c
 14844  005FA4  D00A               	goto	u7630
 14845                           
 14846                           ; BSR set to: 1
 14847                           
 14848                           ; BSR set to: 1
 14849                           
 14850                           ; BSR set to: 1
 14851                           
 14852                           ; BSR set to: 1
 14853  005FA6  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14854  005FAA  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14855                           
 14856                           ; BSR set to: 1
 14857                           
 14858                           ; BSR set to: 1
 14859  005FAE  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14860  005FB2  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14861  005FB6  BEDF               	btfsc	indf2,7,c
 14862  005FB8  D00F               	goto	l534
 14863  005FBA                     u7630:
 14864                           
 14865                           ; BSR set to: 1
 14866                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14867                           
 14868                           ; BSR set to: 1
 14869  005FBA  0E00               	movlw	0
 14870  005FBC  6E01               	movwf	USBTransferOnePacket@dir,c
 14871  005FBE  0E40               	movlw	64
 14872  005FC0  6E02               	movwf	USBTransferOnePacket@data,c
 14873  005FC2  0E0D               	movlw	13
 14874  005FC4  6E03               	movwf	USBTransferOnePacket@data+1,c
 14875  005FC6  0E40               	movlw	64
 14876  005FC8  6E04               	movwf	USBTransferOnePacket@len,c
 14877  005FCA  0E02               	movlw	2
 14878  005FCC  ECF6  F025         	call	_USBTransferOnePacket
 14879  005FD0  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14880  005FD4  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14881  005FD8                     l534:
 14882                           
 14883                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14884  005FD8  0E80               	movlw	128
 14885  005FDA  0100               	movlb	0	; () banked
 14886  005FDC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14887                           
 14888                           ;usb_device_msd.c: 263: break;
 14889  005FDE  0012               	return	
 14890  005FE0                     
 14891                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14892                           
 14893                           ; BSR set to: 0
 14894  005FE0  010D               	movlb	13	; () banked
 14895  005FE2  5132               	movf	50,w,b	;volatile
 14896  005FE4  1133               	iorwf	51,w,b	;volatile
 14897  005FE6  A4D8               	btfss	status,2,c
 14898  005FE8  0012               	return	
 14899                           
 14900                           ; BSR set to: 13
 14901  005FEA  0536               	decf	54,w,b	;volatile
 14902  005FEC  1137               	iorwf	55,w,b	;volatile
 14903  005FEE  A4D8               	btfss	status,2,c
 14904  005FF0  0012               	return	
 14905                           
 14906                           ; BSR set to: 13
 14907                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14908                           
 14909                           ; BSR set to: 13
 14910                           
 14911                           ; BSR set to: 13
 14912                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14913  005FF2  0E00               	movlw	0
 14914  005FF4  6F38               	movwf	56,b	;volatile
 14915                           
 14916                           ; BSR set to: 13
 14917                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14918  005FF6  0E38               	movlw	56
 14919  005FF8  0100               	movlb	0	; () banked
 14920  005FFA  6FCB               	movwf	_inPipes& (0+255),b
 14921  005FFC  0E0D               	movlw	13
 14922  005FFE  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14923                           
 14924                           ; BSR set to: 0
 14925  006000  0E00               	movlw	0
 14926  006002  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14927  006004  0E01               	movlw	1
 14928  006006  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14929                           
 14930                           ; BSR set to: 0
 14931  006008  0EC1               	movlw	193
 14932  00600A  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14933                           
 14934                           ; BSR set to: 0
 14935                           ;usb_device_msd.c: 278: }
 14936                           
 14937                           ;usb_device_msd.c: 277: break;
 14938  00600C  0012               	return	
 14939  00600E                     l529:
 14940                           
 14941                           ; BSR set to: 0
 14942  00600E  010D               	movlb	13	; () banked
 14943  006010  5131               	movf	49,w,b	;volatile
 14944                           
 14945                           ; Switch size 1, requested type "space"
 14946                           ; Number of cases is 2, Range of values is 254 to 255
 14947                           ; switch strategies available:
 14948                           ; Name         Instructions Cycles
 14949                           ; simple_byte            7     4 (average)
 14950                           ;	Chosen strategy is simple_byte
 14951  006012  0AFE               	xorlw	254	; case 254
 14952  006014  B4D8               	btfsc	status,2,c
 14953  006016  D7E4               	goto	l546
 14954  006018  0A01               	xorlw	1	; case 255
 14955  00601A  A4D8               	btfss	status,2,c
 14956  00601C  0012               	return	
 14957  00601E  D7A8               	goto	l530
 14958  006020                     __end_of_USBCheckMSDRequest:
 14959                           	opt stack 0
 14960                           tblptru	equ	0xFF8
 14961                           tblptrh	equ	0xFF7
 14962                           tblptrl	equ	0xFF6
 14963                           tablat	equ	0xFF5
 14964                           prodh	equ	0xFF4
 14965                           prodl	equ	0xFF3
 14966                           intcon	equ	0xFF2
 14967                           intcon2	equ	0xFF1
 14968                           intcon3	equ	0xFF0
 14969                           indf0	equ	0xFEF
 14970                           postinc0	equ	0xFEE
 14971                           fsr0h	equ	0xFEA
 14972                           fsr0l	equ	0xFE9
 14973                           wreg	equ	0xFE8
 14974                           indf1	equ	0xFE7
 14975                           postdec1	equ	0xFE5
 14976                           plusw1	equ	0xFE3
 14977                           fsr1h	equ	0xFE2
 14978                           fsr1l	equ	0xFE1
 14979                           indf2	equ	0xFDF
 14980                           postinc2	equ	0xFDE
 14981                           postdec2	equ	0xFDD
 14982                           plusw2	equ	0xFDB
 14983                           fsr2h	equ	0xFDA
 14984                           fsr2l	equ	0xFD9
 14985                           status	equ	0xFD8
 14986                           
 14987 ;; *************** function _USBCheckHIDRequest *****************
 14988 ;; Defined at:
 14989 ;;		line 153 in file "usb_device_hid.c"
 14990 ;; Parameters:    Size  Location     Type
 14991 ;;		None
 14992 ;; Auto vars:     Size  Location     Type
 14993 ;;		None
 14994 ;; Return value:  Size  Location     Type
 14995 ;;                  1    wreg      void 
 14996 ;; Registers used:
 14997 ;;		wreg, status,2, status,0
 14998 ;; Tracked objects:
 14999 ;;		On entry : 0/0
 15000 ;;		On exit  : 0/0
 15001 ;;		Unchanged: 0/0
 15002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15003 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15004 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15005 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15006 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15007 ;;Total ram usage:        0 bytes
 15008 ;; Hardware stack levels used:    1
 15009 ;; This function calls:
 15010 ;;		Nothing
 15011 ;; This function is called by:
 15012 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15013 ;; This function uses a non-reentrant model
 15014 ;;
 15015                           
 15016                           	psect	text69
 15017  005380                     __ptext69:
 15018                           	opt stack 0
 15019  005380                     _USBCheckHIDRequest:
 15020                           	opt stack 28
 15021                           
 15022                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15023                           
 15024                           ;incstack = 0
 15025  005380  010D               	movlb	13	; () banked
 15026  005382  5130               	movf	48,w,b	;volatile
 15027  005384  0B1F               	andlw	31
 15028  005386  06E8               	decf	wreg,f,c
 15029  005388  A4D8               	btfss	status,2,c
 15030  00538A  0012               	return	
 15031                           
 15032                           ; BSR set to: 13
 15033                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15034                           
 15035                           ; BSR set to: 13
 15036                           
 15037                           ; BSR set to: 13
 15038  00538C  5134               	movf	52,w,b	;volatile
 15039  00538E  A4D8               	btfss	status,2,c
 15040  005390  0012               	return	
 15041                           
 15042                           ; BSR set to: 13
 15043                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15044                           
 15045                           ; BSR set to: 13
 15046                           
 15047                           ; BSR set to: 13
 15048  005392  0E06               	movlw	6
 15049  005394  1931               	xorwf	49,w,b	;volatile
 15050  005396  B4D8               	btfsc	status,2,c
 15051  005398  D01A               	goto	l411
 15052  00539A  D022               	goto	l414
 15053  00539C                     
 15054                           ; BSR set to: 13
 15055                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15056                           
 15057                           ; BSR set to: 13
 15058  00539C  0100               	movlb	0	; () banked
 15059  00539E  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15060  0053A0  A4D8               	btfss	status,2,c
 15061  0053A2  D01E               	goto	l414
 15062                           
 15063                           ; BSR set to: 0
 15064                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15065  0053A4  0EBA               	movlw	low (_configDescriptor1+18)
 15066  0053A6  6FCB               	movwf	_inPipes& (0+255),b
 15067  0053A8  0E9E               	movlw	high (_configDescriptor1+18)
 15068  0053AA  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15069                           
 15070                           ; BSR set to: 0
 15071  0053AC  0E00               	movlw	0
 15072  0053AE  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15073  0053B0  0E09               	movlw	9
 15074  0053B2  D00B               	goto	L13
 15075  0053B4                     l10959:
 15076                           
 15077                           ; BSR set to: 0
 15078  0053B4  0EC0               	movlw	192
 15079  0053B6  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15083  0053B8  D013               	goto	l414
 15084  0053BA                     
 15085                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15086                           
 15087                           ; BSR set to: 0
 15088  0053BA  0E6E               	movlw	low _hid_rpt01
 15089  0053BC  0100               	movlb	0	; () banked
 15090  0053BE  6FCB               	movwf	_inPipes& (0+255),b
 15091  0053C0  0E9F               	movlw	high _hid_rpt01
 15092  0053C2  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15093                           
 15094                           ; BSR set to: 0
 15095  0053C4  0E00               	movlw	0
 15096  0053C6  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15097  0053C8  0E1D               	movlw	29
 15098  0053CA                     L13:
 15099  0053CA  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15100  0053CC  D7F3               	goto	l10959
 15101  0053CE                     l411:
 15102                           
 15103                           ; BSR set to: 0
 15104  0053CE  010D               	movlb	13	; () banked
 15105  0053D0  5133               	movf	51,w,b	;volatile
 15106                           
 15107                           ; Switch size 1, requested type "space"
 15108                           ; Number of cases is 3, Range of values is 33 to 35
 15109                           ; switch strategies available:
 15110                           ; Name         Instructions Cycles
 15111                           ; simple_byte           10     6 (average)
 15112                           ;	Chosen strategy is simple_byte
 15113  0053D2  0A21               	xorlw	33	; case 33
 15114  0053D4  B4D8               	btfsc	status,2,c
 15115  0053D6  D7E2               	goto	l412
 15116  0053D8  0A03               	xorlw	3	; case 34
 15117  0053DA  B4D8               	btfsc	status,2,c
 15118  0053DC  D7EE               	goto	l415
 15119  0053DE  0A01               	xorlw	1	; case 35
 15120  0053E0                     l414:
 15121                           
 15122                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15123                           
 15124                           ; BSR set to: 13
 15125                           
 15126                           ; BSR set to: 13
 15127  0053E0  010D               	movlb	13	; () banked
 15128  0053E2  3930               	swapf	48,w,b	;volatile
 15129  0053E4  32E8               	rrcf	wreg,f,c
 15130  0053E6  0B03               	andlw	3
 15131  0053E8  06E8               	decf	wreg,f,c
 15132  0053EA  A4D8               	btfss	status,2,c
 15133  0053EC  0012               	return	
 15134  0053EE  D024               	goto	l418
 15135  0053F0                     
 15136                           ; BSR set to: 13
 15137                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15138                           
 15139                           ; BSR set to: 13
 15140  0053F0  0EB2               	movlw	low _idle_rate
 15141  0053F2  0100               	movlb	0	; () banked
 15142  0053F4  6FCB               	movwf	_inPipes& (0+255),b
 15143  0053F6  0E01               	movlw	high _idle_rate
 15144  0053F8  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15145                           
 15146                           ; BSR set to: 0
 15147  0053FA  0E00               	movlw	0
 15148  0053FC  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15149  0053FE  0E01               	movlw	1
 15150  005400  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15151                           
 15152                           ; BSR set to: 0
 15153  005402  0EC1               	movlw	193
 15154  005404  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15155                           
 15156                           ;usb_device_hid.c: 223: break;
 15157  005406  0012               	return	
 15158  005408                     
 15159                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15160                           
 15161                           ; BSR set to: 0
 15162  005408  0E80               	movlw	128
 15163  00540A  0100               	movlb	0	; () banked
 15164  00540C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15168  00540E  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15169                           
 15170                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15171  005412  0012               	return	
 15172  005414                     
 15173                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15174                           
 15175                           ; BSR set to: 0
 15176  005414  0EB1               	movlw	low _active_protocol
 15177  005416  0100               	movlb	0	; () banked
 15178  005418  6FCB               	movwf	_inPipes& (0+255),b
 15179  00541A  0E01               	movlw	high _active_protocol
 15180  00541C  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15181                           
 15182                           ; BSR set to: 0
 15183  00541E  0E00               	movlw	0
 15184  005420  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15185  005422  0E01               	movlw	1
 15186  005424  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15187                           
 15188                           ; BSR set to: 0
 15189  005426  0E81               	movlw	129
 15190  005428  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15191                           
 15192                           ;usb_device_hid.c: 234: break;
 15193  00542A  0012               	return	
 15194  00542C                     
 15195                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15196                           
 15197                           ; BSR set to: 0
 15198  00542C  0E80               	movlw	128
 15199  00542E  0100               	movlb	0	; () banked
 15200  005430  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15201                           
 15202                           ; BSR set to: 0
 15203                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15204  005432  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15205                           
 15206                           ; BSR set to: 0
 15207                           ;usb_device_hid.c: 239: }
 15208                           
 15209                           ;usb_device_hid.c: 238: break;
 15210  005436  0012               	return	
 15211  005438                     l418:
 15212                           
 15213                           ; BSR set to: 0
 15214  005438  010D               	movlb	13	; () banked
 15215  00543A  5131               	movf	49,w,b	;volatile
 15216                           
 15217                           ; Switch size 1, requested type "space"
 15218                           ; Number of cases is 6, Range of values is 1 to 11
 15219                           ; switch strategies available:
 15220                           ; Name         Instructions Cycles
 15221                           ; simple_byte           19    10 (average)
 15222                           ;	Chosen strategy is simple_byte
 15223  00543C  0A01               	xorlw	1	; case 1
 15224  00543E  B4D8               	btfsc	status,2,c
 15225  005440  0012               	return	
 15226  005442  0A03               	xorlw	3	; case 2
 15227  005444  B4D8               	btfsc	status,2,c
 15228  005446  D7D4               	goto	l422
 15229  005448  0A01               	xorlw	1	; case 3
 15230  00544A  B4D8               	btfsc	status,2,c
 15231  00544C  D7E3               	goto	l424
 15232  00544E  0A0A               	xorlw	10	; case 9
 15233  005450  B4D8               	btfsc	status,2,c
 15234  005452  0012               	return	
 15235  005454  0A03               	xorlw	3	; case 10
 15236  005456  B4D8               	btfsc	status,2,c
 15237  005458  D7D7               	goto	l423
 15238  00545A  0A01               	xorlw	1	; case 11
 15239  00545C  A4D8               	btfss	status,2,c
 15240  00545E  0012               	return	
 15241  005460  D7E5               	goto	l425
 15242  005462                     __end_of_USBCheckHIDRequest:
 15243                           	opt stack 0
 15244                           tblptru	equ	0xFF8
 15245                           tblptrh	equ	0xFF7
 15246                           tblptrl	equ	0xFF6
 15247                           tablat	equ	0xFF5
 15248                           prodh	equ	0xFF4
 15249                           prodl	equ	0xFF3
 15250                           intcon	equ	0xFF2
 15251                           intcon2	equ	0xFF1
 15252                           intcon3	equ	0xFF0
 15253                           indf0	equ	0xFEF
 15254                           postinc0	equ	0xFEE
 15255                           fsr0h	equ	0xFEA
 15256                           fsr0l	equ	0xFE9
 15257                           wreg	equ	0xFE8
 15258                           indf1	equ	0xFE7
 15259                           postdec1	equ	0xFE5
 15260                           plusw1	equ	0xFE3
 15261                           fsr1h	equ	0xFE2
 15262                           fsr1l	equ	0xFE1
 15263                           indf2	equ	0xFDF
 15264                           postinc2	equ	0xFDE
 15265                           postdec2	equ	0xFDD
 15266                           plusw2	equ	0xFDB
 15267                           fsr2h	equ	0xFDA
 15268                           fsr2l	equ	0xFD9
 15269                           status	equ	0xFD8
 15270                           
 15271 ;; *************** function _SYSTEM_Initialize *****************
 15272 ;; Defined at:
 15273 ;;		line 80 in file "system.c"
 15274 ;; Parameters:    Size  Location     Type
 15275 ;;  state           1    wreg     enum E6623
 15276 ;; Auto vars:     Size  Location     Type
 15277 ;;  state           1    4[COMRAM] enum E6623
 15278 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15279 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15280 ;; Return value:  Size  Location     Type
 15281 ;;                  1    wreg      void 
 15282 ;; Registers used:
 15283 ;;		wreg, status,2, status,0
 15284 ;; Tracked objects:
 15285 ;;		On entry : 0/0
 15286 ;;		On exit  : 0/0
 15287 ;;		Unchanged: 0/0
 15288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15289 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15290 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15291 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15292 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15293 ;;Total ram usage:        5 bytes
 15294 ;; Hardware stack levels used:    1
 15295 ;; This function calls:
 15296 ;;		Nothing
 15297 ;; This function is called by:
 15298 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15299 ;;		_main
 15300 ;; This function uses a non-reentrant model
 15301 ;;
 15302                           
 15303                           	psect	text70
 15304  0080DE                     __ptext70:
 15305                           	opt stack 0
 15306  0080DE                     _SYSTEM_Initialize:
 15307                           	opt stack 28
 15308                           
 15309                           ;incstack = 0
 15310                           ;SYSTEM_Initialize@state stored from wreg
 15311  0080DE  6E05               	movwf	SYSTEM_Initialize@state,c
 15312                           
 15313                           ;system.c: 82: switch(state)
 15314  0080E0  D01D               	goto	l926
 15315  0080E2                     
 15316                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15317  0080E2  0E02               	movlw	2
 15318  0080E4  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15319  0080E6  0E58               	movlw	88
 15320  0080E8  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15321                           
 15322                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15323  0080EA  8C9B               	bsf	3995,6,c	;volatile
 15324  0080EC                     l11145:
 15325  0080EC  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15326  0080EE  A0D8               	btfss	status,0,c
 15327  0080F0  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15328  0080F2  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15329  0080F4  E1FB               	bnz	l11145
 15330  0080F6  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15331  0080F8  B4D8               	btfsc	status,2,c
 15332  0080FA  0012               	return	
 15333  0080FC  D7F7               	goto	l929
 15334  0080FE                     
 15335                           ;system.c: 119: OSCCON = 0x70;
 15336  0080FE  0E70               	movlw	112
 15337  008100  6ED3               	movwf	4051,c	;volatile
 15338                           
 15339                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15340  008102  0E03               	movlw	3
 15341  008104  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15342  008106  0E20               	movlw	32
 15343  008108  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15344  00810A                     l11149:
 15345  00810A  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15346  00810C  A0D8               	btfss	status,0,c
 15347  00810E  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15348  008110  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15349  008112  E1FB               	bnz	l11149
 15350  008114  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15351  008116  B4D8               	btfsc	status,2,c
 15352  008118  0012               	return	
 15353  00811A  D7F7               	goto	l935
 15354  00811C                     l926:
 15355  00811C  5005               	movf	SYSTEM_Initialize@state,w,c
 15356                           
 15357                           ; Switch size 1, requested type "space"
 15358                           ; Number of cases is 3, Range of values is 0 to 2
 15359                           ; switch strategies available:
 15360                           ; Name         Instructions Cycles
 15361                           ; simple_byte           10     6 (average)
 15362                           ;	Chosen strategy is simple_byte
 15363  00811E  0A00               	xorlw	0	; case 0
 15364  008120  B4D8               	btfsc	status,2,c
 15365  008122  D7DF               	goto	l927
 15366  008124  0A01               	xorlw	1	; case 1
 15367  008126  B4D8               	btfsc	status,2,c
 15368  008128  0012               	return	
 15369  00812A  0A03               	xorlw	3	; case 2
 15370  00812C  A4D8               	btfss	status,2,c
 15371  00812E  0012               	return	
 15372  008130  D7E6               	goto	l933
 15373  008132                     __end_of_SYSTEM_Initialize:
 15374                           	opt stack 0
 15375                           tblptru	equ	0xFF8
 15376                           tblptrh	equ	0xFF7
 15377                           tblptrl	equ	0xFF6
 15378                           tablat	equ	0xFF5
 15379                           prodh	equ	0xFF4
 15380                           prodl	equ	0xFF3
 15381                           intcon	equ	0xFF2
 15382                           intcon2	equ	0xFF1
 15383                           intcon3	equ	0xFF0
 15384                           indf0	equ	0xFEF
 15385                           postinc0	equ	0xFEE
 15386                           fsr0h	equ	0xFEA
 15387                           fsr0l	equ	0xFE9
 15388                           wreg	equ	0xFE8
 15389                           indf1	equ	0xFE7
 15390                           postdec1	equ	0xFE5
 15391                           plusw1	equ	0xFE3
 15392                           fsr1h	equ	0xFE2
 15393                           fsr1l	equ	0xFE1
 15394                           indf2	equ	0xFDF
 15395                           postinc2	equ	0xFDE
 15396                           postdec2	equ	0xFDD
 15397                           plusw2	equ	0xFDB
 15398                           fsr2h	equ	0xFDA
 15399                           fsr2l	equ	0xFD9
 15400                           status	equ	0xFD8
 15401                           
 15402 ;; *************** function _MSDTransferTerminated *****************
 15403 ;; Defined at:
 15404 ;;		line 1674 in file "usb_device_msd.c"
 15405 ;; Parameters:    Size  Location     Type
 15406 ;;  handle          2   11[COMRAM] PTR void 
 15407 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15408 ;;		 -> BDT(48), 
 15409 ;; Auto vars:     Size  Location     Type
 15410 ;;		None
 15411 ;; Return value:  Size  Location     Type
 15412 ;;                  1    wreg      void 
 15413 ;; Registers used:
 15414 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15415 ;; Tracked objects:
 15416 ;;		On entry : 0/0
 15417 ;;		On exit  : 0/0
 15418 ;;		Unchanged: 0/0
 15419 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15420 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15421 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15422 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15423 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15424 ;;Total ram usage:        4 bytes
 15425 ;; Hardware stack levels used:    1
 15426 ;; Hardware stack levels required when called:    1
 15427 ;; This function calls:
 15428 ;;		_USBStallEndpoint
 15429 ;;		_USBTransferOnePacket
 15430 ;; This function is called by:
 15431 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15432 ;; This function uses a non-reentrant model
 15433 ;;
 15434                           
 15435                           	psect	text71
 15436  007E84                     __ptext71:
 15437                           	opt stack 0
 15438  007E84                     _MSDTransferTerminated:
 15439                           	opt stack 27
 15440                           
 15441                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15442                           
 15443                           ;incstack = 0
 15444  007E84  0101               	movlb	1	; () banked
 15445  007E86  518E               	movf	_MSDCBWValid& (0+255),w,b
 15446  007E88  A4D8               	btfss	status,2,c
 15447  007E8A  D00B               	goto	l764
 15448                           
 15449                           ; BSR set to: 1
 15450                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15451  007E8C  0E01               	movlw	1
 15452  007E8E  6E01               	movwf	USBStallEndpoint@dir,c
 15453  007E90  0E02               	movlw	2
 15454  007E92  ECEB  F023         	call	_USBStallEndpoint
 15455                           
 15456                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15457  007E96  0E00               	movlw	0
 15458  007E98  6E01               	movwf	USBStallEndpoint@dir,c
 15459  007E9A  0E02               	movlw	2
 15460  007E9C  ECEB  F023         	call	_USBStallEndpoint
 15461                           
 15462                           ;usb_device_msd.c: 1681: }
 15463  007EA0  0012               	return	
 15464  007EA2                     l764:
 15465  007EA2  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15466  007EA6  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15467  007EAA  500E               	movf	_MSDTransferTerminated$2407,w,c
 15468  007EAC  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15469  007EAE  E114               	bnz	l767
 15470  007EB0  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15471  007EB2  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15472  007EB4  A4D8               	btfss	status,2,c
 15473  007EB6  0012               	return	
 15474                           
 15475                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15476  007EB8  0E00               	movlw	0
 15477  007EBA  6E01               	movwf	USBTransferOnePacket@dir,c
 15478  007EBC  0E40               	movlw	64
 15479  007EBE  6E02               	movwf	USBTransferOnePacket@data,c
 15480  007EC0  0E0D               	movlw	13
 15481  007EC2  6E03               	movwf	USBTransferOnePacket@data+1,c
 15482  007EC4  0E40               	movlw	64
 15483  007EC6  6E04               	movwf	USBTransferOnePacket@len,c
 15484  007EC8  0E02               	movlw	2
 15485  007ECA  ECF6  F025         	call	_USBTransferOnePacket
 15486  007ECE  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15487  007ED2  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15488  007ED6  0012               	return	
 15489  007ED8                     l767:
 15490  007ED8  0012               	return		;funcret
 15491  007EDA                     __end_of_MSDTransferTerminated:
 15492                           	opt stack 0
 15493                           tblptru	equ	0xFF8
 15494                           tblptrh	equ	0xFF7
 15495                           tblptrl	equ	0xFF6
 15496                           tablat	equ	0xFF5
 15497                           prodh	equ	0xFF4
 15498                           prodl	equ	0xFF3
 15499                           intcon	equ	0xFF2
 15500                           intcon2	equ	0xFF1
 15501                           intcon3	equ	0xFF0
 15502                           indf0	equ	0xFEF
 15503                           postinc0	equ	0xFEE
 15504                           fsr0h	equ	0xFEA
 15505                           fsr0l	equ	0xFE9
 15506                           wreg	equ	0xFE8
 15507                           indf1	equ	0xFE7
 15508                           postdec1	equ	0xFE5
 15509                           plusw1	equ	0xFE3
 15510                           fsr1h	equ	0xFE2
 15511                           fsr1l	equ	0xFE1
 15512                           indf2	equ	0xFDF
 15513                           postinc2	equ	0xFDE
 15514                           postdec2	equ	0xFDD
 15515                           plusw2	equ	0xFDB
 15516                           fsr2h	equ	0xFDA
 15517                           fsr2l	equ	0xFD9
 15518                           status	equ	0xFD8
 15519                           
 15520 ;; *************** function _APP_DeviceMSDInitialize *****************
 15521 ;; Defined at:
 15522 ;;		line 84 in file "app_device_msd.c"
 15523 ;; Parameters:    Size  Location     Type
 15524 ;;		None
 15525 ;; Auto vars:     Size  Location     Type
 15526 ;;		None
 15527 ;; Return value:  Size  Location     Type
 15528 ;;                  1    wreg      void 
 15529 ;; Registers used:
 15530 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15531 ;; Tracked objects:
 15532 ;;		On entry : 0/0
 15533 ;;		On exit  : 0/0
 15534 ;;		Unchanged: 0/0
 15535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15536 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15537 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15538 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15539 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15540 ;;Total ram usage:        0 bytes
 15541 ;; Hardware stack levels used:    1
 15542 ;; Hardware stack levels required when called:    2
 15543 ;; This function calls:
 15544 ;;		_USBEnableEndpoint
 15545 ;;		_USBMSDInit
 15546 ;; This function is called by:
 15547 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15548 ;; This function uses a non-reentrant model
 15549 ;;
 15550                           
 15551                           	psect	text72
 15552  008EA6                     __ptext72:
 15553                           	opt stack 0
 15554  008EA6                     _APP_DeviceMSDInitialize:
 15555                           	opt stack 26
 15556                           
 15557                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15558                           
 15559                           ;incstack = 0
 15560  008EA6  0E1E               	movlw	30
 15561  008EA8  6E09               	movwf	USBEnableEndpoint@options,c
 15562  008EAA  0E02               	movlw	2
 15563  008EAC  EC17  F043         	call	_USBEnableEndpoint
 15564                           
 15565                           ;app_device_msd.c: 93: USBMSDInit();
 15566  008EB0  EC75  F025         	call	_USBMSDInit	;wreg free
 15567  008EB4  0012               	return		;funcret
 15568  008EB6                     __end_of_APP_DeviceMSDInitialize:
 15569                           	opt stack 0
 15570                           tblptru	equ	0xFF8
 15571                           tblptrh	equ	0xFF7
 15572                           tblptrl	equ	0xFF6
 15573                           tablat	equ	0xFF5
 15574                           prodh	equ	0xFF4
 15575                           prodl	equ	0xFF3
 15576                           intcon	equ	0xFF2
 15577                           intcon2	equ	0xFF1
 15578                           intcon3	equ	0xFF0
 15579                           indf0	equ	0xFEF
 15580                           postinc0	equ	0xFEE
 15581                           fsr0h	equ	0xFEA
 15582                           fsr0l	equ	0xFE9
 15583                           wreg	equ	0xFE8
 15584                           indf1	equ	0xFE7
 15585                           postdec1	equ	0xFE5
 15586                           plusw1	equ	0xFE3
 15587                           fsr1h	equ	0xFE2
 15588                           fsr1l	equ	0xFE1
 15589                           indf2	equ	0xFDF
 15590                           postinc2	equ	0xFDE
 15591                           postdec2	equ	0xFDD
 15592                           plusw2	equ	0xFDB
 15593                           fsr2h	equ	0xFDA
 15594                           fsr2l	equ	0xFD9
 15595                           status	equ	0xFD8
 15596                           
 15597 ;; *************** function _USBMSDInit *****************
 15598 ;; Defined at:
 15599 ;;		line 142 in file "usb_device_msd.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;		None
 15602 ;; Auto vars:     Size  Location     Type
 15603 ;;		None
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15613 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15615 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15617 ;;Total ram usage:        3 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    1
 15620 ;; This function calls:
 15621 ;;		_ExternalFlash_MediaDetect
 15622 ;;		_ExternalFlash_MediaInitialize
 15623 ;;		_ResetSenseData
 15624 ;;		_USBTransferOnePacket
 15625 ;; This function is called by:
 15626 ;;		_APP_DeviceMSDInitialize
 15627 ;; This function uses a non-reentrant model
 15628 ;;
 15629                           
 15630                           	psect	text73
 15631  004AEA                     __ptext73:
 15632                           	opt stack 0
 15633  004AEA                     _USBMSDInit:
 15634                           	opt stack 26
 15635                           
 15636                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15637                           
 15638                           ;incstack = 0
 15639  004AEA  0E00               	movlw	0
 15640  004AEC  6E01               	movwf	USBTransferOnePacket@dir,c
 15641  004AEE  0E40               	movlw	64
 15642  004AF0  6E02               	movwf	USBTransferOnePacket@data,c
 15643  004AF2  0E0D               	movlw	13
 15644  004AF4  6E03               	movwf	USBTransferOnePacket@data+1,c
 15645  004AF6  0E40               	movlw	64
 15646  004AF8  6E04               	movwf	USBTransferOnePacket@len,c
 15647  004AFA  0E02               	movlw	2
 15648  004AFC  ECF6  F025         	call	_USBTransferOnePacket
 15649  004B00  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15650  004B04  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15651  004B08  C0D5  F0DD         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15652  004B0C  C0D6  F0DE         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15653                           
 15654                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15655  004B10  0E00               	movlw	0
 15656  004B12  0100               	movlb	0	; () banked
 15657  004B14  6FED               	movwf	_MSD_State& (0+255),b
 15658                           
 15659                           ; BSR set to: 0
 15660                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15661  004B16  69EC               	setf	_MSDCommandState& (0+255),b
 15662                           
 15663                           ; BSR set to: 0
 15664                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15665  004B18  0E00               	movlw	0
 15666  004B1A  6FEB               	movwf	_MSDReadState& (0+255),b
 15667                           
 15668                           ; BSR set to: 0
 15669                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15670  004B1C  0E00               	movlw	0
 15671  004B1E  6FEA               	movwf	_MSDWriteState& (0+255),b
 15672                           
 15673                           ; BSR set to: 0
 15674                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15675  004B20  0E00               	movlw	0
 15676  004B22  6FE7               	movwf	_MSDHostNoData& (0+255),b
 15677                           
 15678                           ; BSR set to: 0
 15679                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15680  004B24  0E00               	movlw	0
 15681  004B26  0101               	movlb	1	; () banked
 15682  004B28  6F5A               	movwf	_gblNumBLKS& (0+255),b
 15683  004B2A  0E00               	movlw	0
 15684  004B2C  6F5B               	movwf	(_gblNumBLKS+1)& (0+255),b
 15685  004B2E  0E00               	movlw	0
 15686  004B30  6F5C               	movwf	(_gblNumBLKS+2)& (0+255),b
 15687  004B32  0E00               	movlw	0
 15688  004B34  6F5D               	movwf	(_gblNumBLKS+3)& (0+255),b
 15689                           
 15690                           ; BSR set to: 1
 15691                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15692  004B36  0E00               	movlw	0
 15693  004B38  6F56               	movwf	_gblBLKLen& (0+255),b
 15694  004B3A  0E00               	movlw	0
 15695  004B3C  6F57               	movwf	(_gblBLKLen+1)& (0+255),b
 15696  004B3E  0E00               	movlw	0
 15697  004B40  6F58               	movwf	(_gblBLKLen+2)& (0+255),b
 15698  004B42  0E00               	movlw	0
 15699  004B44  6F59               	movwf	(_gblBLKLen+3)& (0+255),b
 15700                           
 15701                           ; BSR set to: 1
 15702                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15703  004B46  0E01               	movlw	1
 15704  004B48  6F8E               	movwf	_MSDCBWValid& (0+255),b
 15705                           
 15706                           ; BSR set to: 1
 15707                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15708  004B4A  0E00               	movlw	0
 15709  004B4C  6F83               	movwf	(_gblMediaPresent+1)& (0+255),b
 15710  004B4E  0E00               	movlw	0
 15711  004B50  6F82               	movwf	_gblMediaPresent& (0+255),b
 15712                           
 15713                           ; BSR set to: 1
 15714                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15715  004B52  0E00               	movlw	0
 15716  004B54  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15717  004B56  D046               	goto	l518
 15718  004B58                     
 15719                           ; BSR set to: 1
 15720                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15721                           
 15722                           ; BSR set to: 1
 15723  004B58  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15724  004B5A  0D01               	mullw	1
 15725  004B5C  0EE8               	movlw	low _SoftDetach
 15726  004B5E  24F3               	addwf	prodl,w,c
 15727  004B60  6ED9               	movwf	fsr2l,c
 15728  004B62  0E00               	movlw	high _SoftDetach
 15729  004B64  20F4               	addwfc	prodh,w,c
 15730  004B66  6EDA               	movwf	fsr2h,c
 15731  004B68  0E00               	movlw	0
 15732  004B6A  6EDF               	movwf	indf2,c
 15733                           
 15734                           ; BSR set to: 1
 15735                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15736  004B6C  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15737  004B70  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15738  004B74  D801               	call	u7208
 15739  004B76  D009               	goto	u7209
 15740  004B78                     u7208:
 15741  004B78  0005               	push	
 15742  004B7A  6EFA               	movwf	pclath,c
 15743  004B7C  51B9               	movf	(_LUN+6)& (0+255),w,b
 15744  004B7E  6EFD               	movwf	tosl,c
 15745  004B80  51BA               	movf	(_LUN+7)& (0+255),w,b
 15746  004B82  6EFE               	movwf	tosh,c
 15747  004B84  6AFF               	clrf	tosu,c
 15748  004B86  50FA               	movf	pclath,w,c
 15749  004B88  0012               	return		;indir
 15750  004B8A                     u7209:
 15751  004B8A  0900               	iorlw	0
 15752  004B8C  B4D8               	btfsc	status,2,c
 15753  004B8E  D026               	goto	l521
 15754                           
 15755                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15756  004B90  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15757  004B94  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15758  004B98  D801               	call	u7228
 15759  004B9A  D00A               	goto	u7229
 15760  004B9C                     u7228:
 15761  004B9C  0005               	push	
 15762  004B9E  6EFA               	movwf	pclath,c
 15763  004BA0  0101               	movlb	1	; () banked
 15764  004BA2  51B3               	movf	_LUN& (0+255),w,b
 15765  004BA4  6EFD               	movwf	tosl,c
 15766  004BA6  51B4               	movf	(_LUN+1)& (0+255),w,b
 15767  004BA8  6EFE               	movwf	tosh,c
 15768  004BAA  6AFF               	clrf	tosu,c
 15769  004BAC  50FA               	movf	pclath,w,c
 15770  004BAE  0012               	return		;indir
 15771  004BB0                     u7229:
 15772  004BB0  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15773  004BB2  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15774  004BB4  B4D8               	btfsc	status,2,c
 15775  004BB6  D012               	goto	l521
 15776                           
 15777                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15778  004BB8  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15779  004BBC  0E01               	movlw	1
 15780  004BBE  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15781  004BC0  0E00               	movlw	0
 15782  004BC2  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15783  004BC4  2A0C               	incf	??_USBMSDInit,f,c
 15784  004BC6  D003               	goto	u7244
 15785  004BC8                     u7245:
 15786  004BC8  90D8               	bcf	status,0,c
 15787  004BCA  360D               	rlcf	??_USBMSDInit+1,f,c
 15788  004BCC  360E               	rlcf	??_USBMSDInit+2,f,c
 15789  004BCE                     u7244:
 15790  004BCE  2E0C               	decfsz	??_USBMSDInit,f,c
 15791  004BD0  D7FB               	goto	u7245
 15792  004BD2  500D               	movf	??_USBMSDInit+1,w,c
 15793  004BD4  0101               	movlb	1	; () banked
 15794  004BD6  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 15795  004BD8  500E               	movf	??_USBMSDInit+2,w,c
 15796  004BDA  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15797  004BDC                     l521:
 15798                           
 15799                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15800                           
 15801                           ; BSR set to: 1
 15802                           
 15803                           ; BSR set to: 1
 15804  004BDC  EC76  F03D         	call	_ResetSenseData	;wreg free
 15805  004BE0  0101               	movlb	1	; () banked
 15806  004BE2  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15807  004BE4                     l518:
 15808                           
 15809                           ; BSR set to: 1
 15810                           
 15811                           ; BSR set to: 1
 15812  004BE4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15813  004BE6  A4D8               	btfss	status,2,c
 15814  004BE8  0012               	return	
 15815  004BEA  D7B6               	goto	l519
 15816  004BEC                     __end_of_USBMSDInit:
 15817                           	opt stack 0
 15818                           tosu	equ	0xFFF
 15819                           tosh	equ	0xFFE
 15820                           tosl	equ	0xFFD
 15821                           pclath	equ	0xFFA
 15822                           tblptru	equ	0xFF8
 15823                           tblptrh	equ	0xFF7
 15824                           tblptrl	equ	0xFF6
 15825                           tablat	equ	0xFF5
 15826                           prodh	equ	0xFF4
 15827                           prodl	equ	0xFF3
 15828                           intcon	equ	0xFF2
 15829                           intcon2	equ	0xFF1
 15830                           intcon3	equ	0xFF0
 15831                           indf0	equ	0xFEF
 15832                           postinc0	equ	0xFEE
 15833                           fsr0h	equ	0xFEA
 15834                           fsr0l	equ	0xFE9
 15835                           wreg	equ	0xFE8
 15836                           indf1	equ	0xFE7
 15837                           postdec1	equ	0xFE5
 15838                           plusw1	equ	0xFE3
 15839                           fsr1h	equ	0xFE2
 15840                           fsr1l	equ	0xFE1
 15841                           indf2	equ	0xFDF
 15842                           postinc2	equ	0xFDE
 15843                           postdec2	equ	0xFDD
 15844                           plusw2	equ	0xFDB
 15845                           fsr2h	equ	0xFDA
 15846                           fsr2l	equ	0xFD9
 15847                           status	equ	0xFD8
 15848                           
 15849 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15850 ;; Defined at:
 15851 ;;		line 47 in file "app_device_custom_hid.c"
 15852 ;; Parameters:    Size  Location     Type
 15853 ;;		None
 15854 ;; Auto vars:     Size  Location     Type
 15855 ;;		None
 15856 ;; Return value:  Size  Location     Type
 15857 ;;                  1    wreg      void 
 15858 ;; Registers used:
 15859 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15860 ;; Tracked objects:
 15861 ;;		On entry : 0/0
 15862 ;;		On exit  : 0/0
 15863 ;;		Unchanged: 0/0
 15864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15865 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15866 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15867 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15868 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15869 ;;Total ram usage:        0 bytes
 15870 ;; Hardware stack levels used:    1
 15871 ;; Hardware stack levels required when called:    2
 15872 ;; This function calls:
 15873 ;;		_USBEnableEndpoint
 15874 ;;		_USBTransferOnePacket
 15875 ;; This function is called by:
 15876 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15877 ;; This function uses a non-reentrant model
 15878 ;;
 15879                           
 15880                           	psect	text74
 15881  0087B2                     __ptext74:
 15882                           	opt stack 0
 15883  0087B2                     _APP_DeviceCustomHIDInitialize:
 15884                           	opt stack 26
 15885                           
 15886                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15887                           
 15888                           ; BSR set to: 1
 15889                           ;incstack = 0
 15890  0087B2  0E00               	movlw	0
 15891  0087B4  0101               	movlb	1	; () banked
 15892  0087B6  6F7E               	movwf	_USBInHandle& (0+255),b
 15893  0087B8  0E00               	movlw	0
 15894  0087BA  6F7F               	movwf	(_USBInHandle+1)& (0+255),b
 15895                           
 15896                           ; BSR set to: 1
 15897                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15898  0087BC  0E1E               	movlw	30
 15899  0087BE  6E09               	movwf	USBEnableEndpoint@options,c
 15900  0087C0  0E01               	movlw	1
 15901  0087C2  EC17  F043         	call	_USBEnableEndpoint
 15902                           
 15903                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15904  0087C6  0E00               	movlw	0
 15905  0087C8  6E01               	movwf	USBTransferOnePacket@dir,c
 15906  0087CA  0E50               	movlw	low _ReceivedDataBuffer
 15907  0087CC  6E02               	movwf	USBTransferOnePacket@data,c
 15908  0087CE  0E02               	movlw	high _ReceivedDataBuffer
 15909  0087D0  6E03               	movwf	USBTransferOnePacket@data+1,c
 15910  0087D2  0E40               	movlw	64
 15911  0087D4  6E04               	movwf	USBTransferOnePacket@len,c
 15912  0087D6  0E01               	movlw	1
 15913  0087D8  ECF6  F025         	call	_USBTransferOnePacket
 15914  0087DC  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 15915  0087E0  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15916  0087E4  0012               	return		;funcret
 15917  0087E6                     __end_of_APP_DeviceCustomHIDInitialize:
 15918                           	opt stack 0
 15919                           tosu	equ	0xFFF
 15920                           tosh	equ	0xFFE
 15921                           tosl	equ	0xFFD
 15922                           pclath	equ	0xFFA
 15923                           tblptru	equ	0xFF8
 15924                           tblptrh	equ	0xFF7
 15925                           tblptrl	equ	0xFF6
 15926                           tablat	equ	0xFF5
 15927                           prodh	equ	0xFF4
 15928                           prodl	equ	0xFF3
 15929                           intcon	equ	0xFF2
 15930                           intcon2	equ	0xFF1
 15931                           intcon3	equ	0xFF0
 15932                           indf0	equ	0xFEF
 15933                           postinc0	equ	0xFEE
 15934                           fsr0h	equ	0xFEA
 15935                           fsr0l	equ	0xFE9
 15936                           wreg	equ	0xFE8
 15937                           indf1	equ	0xFE7
 15938                           postdec1	equ	0xFE5
 15939                           plusw1	equ	0xFE3
 15940                           fsr1h	equ	0xFE2
 15941                           fsr1l	equ	0xFE1
 15942                           indf2	equ	0xFDF
 15943                           postinc2	equ	0xFDE
 15944                           postdec2	equ	0xFDD
 15945                           plusw2	equ	0xFDB
 15946                           fsr2h	equ	0xFDA
 15947                           fsr2l	equ	0xFD9
 15948                           status	equ	0xFD8
 15949                           
 15950 ;; *************** function _USBEnableEndpoint *****************
 15951 ;; Defined at:
 15952 ;;		line 878 in file "usb_device.c"
 15953 ;; Parameters:    Size  Location     Type
 15954 ;;  ep              1    wreg     unsigned char 
 15955 ;;  options         1    8[COMRAM] unsigned char 
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;  ep              1   11[COMRAM] unsigned char 
 15958 ;;  p               2    9[COMRAM] PTR unsigned char 
 15959 ;;		 -> UEP0(1), 
 15960 ;; Return value:  Size  Location     Type
 15961 ;;                  1    wreg      void 
 15962 ;; Registers used:
 15963 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15964 ;; Tracked objects:
 15965 ;;		On entry : 0/0
 15966 ;;		On exit  : 0/0
 15967 ;;		Unchanged: 0/0
 15968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15969 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15970 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15971 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15972 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15973 ;;Total ram usage:        4 bytes
 15974 ;; Hardware stack levels used:    1
 15975 ;; Hardware stack levels required when called:    1
 15976 ;; This function calls:
 15977 ;;		_USBConfigureEndpoint
 15978 ;; This function is called by:
 15979 ;;		_APP_DeviceCustomHIDInitialize
 15980 ;;		_APP_DeviceMSDInitialize
 15981 ;; This function uses a non-reentrant model
 15982 ;;
 15983                           
 15984                           	psect	text75
 15985  00862E                     __ptext75:
 15986                           	opt stack 0
 15987  00862E                     _USBEnableEndpoint:
 15988                           	opt stack 26
 15989                           
 15990                           ;incstack = 0
 15991                           ;USBEnableEndpoint@ep stored from wreg
 15992  00862E  6E0C               	movwf	USBEnableEndpoint@ep,c
 15993                           
 15994                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 15995  008630  A409               	btfss	USBEnableEndpoint@options,2,c
 15996  008632  D005               	goto	l178
 15997                           
 15998                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 15999  008634  0E00               	movlw	0
 16000  008636  6E01               	movwf	USBConfigureEndpoint@direction,c
 16001  008638  500C               	movf	USBEnableEndpoint@ep,w,c
 16002  00863A  EC03  F037         	call	_USBConfigureEndpoint
 16003  00863E                     l178:
 16004                           
 16005                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16006  00863E  A209               	btfss	USBEnableEndpoint@options,1,c
 16007  008640  D005               	goto	l179
 16008                           
 16009                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16010  008642  0E01               	movlw	1
 16011  008644  6E01               	movwf	USBConfigureEndpoint@direction,c
 16012  008646  500C               	movf	USBEnableEndpoint@ep,w,c
 16013  008648  EC03  F037         	call	_USBConfigureEndpoint
 16014  00864C                     l179:
 16015                           
 16016                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16017  00864C  500C               	movf	USBEnableEndpoint@ep,w,c
 16018  00864E  0D01               	mullw	1
 16019  008650  0E26               	movlw	38
 16020  008652  24F3               	addwf	prodl,w,c
 16021  008654  6E0A               	movwf	USBEnableEndpoint@p,c
 16022  008656  0E0F               	movlw	15
 16023  008658  20F4               	addwfc	prodh,w,c
 16024  00865A  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16025                           
 16026                           ;usb_device.c: 901: *p = options;
 16027  00865C  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16028  008660  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16029  008664  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16030  008668  0012               	return		;funcret
 16031  00866A                     __end_of_USBEnableEndpoint:
 16032                           	opt stack 0
 16033                           tosu	equ	0xFFF
 16034                           tosh	equ	0xFFE
 16035                           tosl	equ	0xFFD
 16036                           pclath	equ	0xFFA
 16037                           tblptru	equ	0xFF8
 16038                           tblptrh	equ	0xFF7
 16039                           tblptrl	equ	0xFF6
 16040                           tablat	equ	0xFF5
 16041                           prodh	equ	0xFF4
 16042                           prodl	equ	0xFF3
 16043                           intcon	equ	0xFF2
 16044                           intcon2	equ	0xFF1
 16045                           intcon3	equ	0xFF0
 16046                           indf0	equ	0xFEF
 16047                           postinc0	equ	0xFEE
 16048                           fsr0h	equ	0xFEA
 16049                           fsr0l	equ	0xFE9
 16050                           wreg	equ	0xFE8
 16051                           indf1	equ	0xFE7
 16052                           postdec1	equ	0xFE5
 16053                           plusw1	equ	0xFE3
 16054                           fsr1h	equ	0xFE2
 16055                           fsr1l	equ	0xFE1
 16056                           indf2	equ	0xFDF
 16057                           postinc2	equ	0xFDE
 16058                           postdec2	equ	0xFDD
 16059                           plusw2	equ	0xFDB
 16060                           fsr2h	equ	0xFDA
 16061                           fsr2l	equ	0xFD9
 16062                           status	equ	0xFD8
 16063                           
 16064 ;; *************** function _USBConfigureEndpoint *****************
 16065 ;; Defined at:
 16066 ;;		line 1545 in file "usb_device.c"
 16067 ;; Parameters:    Size  Location     Type
 16068 ;;  EPNum           1    wreg     unsigned char 
 16069 ;;  direction       1    0[COMRAM] unsigned char 
 16070 ;; Auto vars:     Size  Location     Type
 16071 ;;  EPNum           1    5[COMRAM] unsigned char 
 16072 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16073 ;;		 -> BDT(48), 
 16074 ;; Return value:  Size  Location     Type
 16075 ;;                  1    wreg      void 
 16076 ;; Registers used:
 16077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16078 ;; Tracked objects:
 16079 ;;		On entry : 0/0
 16080 ;;		On exit  : 0/0
 16081 ;;		Unchanged: 0/0
 16082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16083 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16084 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16085 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16086 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16087 ;;Total ram usage:        8 bytes
 16088 ;; Hardware stack levels used:    1
 16089 ;; This function calls:
 16090 ;;		Nothing
 16091 ;; This function is called by:
 16092 ;;		_USBEnableEndpoint
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096                           	psect	text76
 16097  006E06                     __ptext76:
 16098                           	opt stack 0
 16099  006E06                     _USBConfigureEndpoint:
 16100                           	opt stack 26
 16101                           
 16102                           ;incstack = 0
 16103                           ;USBConfigureEndpoint@EPNum stored from wreg
 16104  006E06  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16105                           
 16106                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16107  006E08  0E00               	movlw	0
 16108  006E0A  6E07               	movwf	USBConfigureEndpoint@handle,c
 16109  006E0C  0E0D               	movlw	13
 16110  006E0E  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16111                           
 16112                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16113  006E10  5001               	movf	USBConfigureEndpoint@direction,w,c
 16114  006E12  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16115  006E14  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16116  006E16  90D8               	bcf	status,0,c
 16117  006E18  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16118  006E1A  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16119  006E1C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16120  006E1E  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16121  006E20  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16122  006E22  90D8               	bcf	status,0,c
 16123  006E24  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16124  006E26  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16125  006E28  90D8               	bcf	status,0,c
 16126  006E2A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16127  006E2C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16128  006E2E  5002               	movf	??_USBConfigureEndpoint,w,c
 16129  006E30  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16130  006E32  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16131  006E34  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16132  006E36  90D8               	bcf	status,0,c
 16133  006E38  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16134  006E3A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16135  006E3C  90D8               	bcf	status,0,c
 16136  006E3E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16137  006E40  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16138  006E42  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16139  006E44  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16140  006E46  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16141  006E48  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16142                           
 16143                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16144  006E4A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16145  006E4E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16146  006E52  9EDF               	bcf	indf2,7,c
 16147                           
 16148                           ;usb_device.c: 1559: if(direction == 0)
 16149  006E54  5001               	movf	USBConfigureEndpoint@direction,w,c
 16150  006E56  A4D8               	btfss	status,2,c
 16151  006E58  D007               	goto	l214
 16152                           
 16153                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16154  006E5A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16155  006E5C  0D02               	mullw	2
 16156  006E5E  0E40               	movlw	low _pBDTEntryOut
 16157  006E60  24F3               	addwf	prodl,w,c
 16158  006E62  6ED9               	movwf	fsr2l,c
 16159  006E64  0E01               	movlw	high _pBDTEntryOut
 16160  006E66  D006               	goto	L14
 16161  006E68                     l214:
 16162                           
 16163                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16164  006E68  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16165  006E6A  0D02               	mullw	2
 16166  006E6C  0ED1               	movlw	low _pBDTEntryIn
 16167  006E6E  24F3               	addwf	prodl,w,c
 16168  006E70  6ED9               	movwf	fsr2l,c
 16169  006E72  0E00               	movlw	high _pBDTEntryIn
 16170  006E74                     L14:
 16171  006E74  20F4               	addwfc	prodh,w,c
 16172  006E76  6EDA               	movwf	fsr2h,c
 16173  006E78  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16174  006E7C  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16175                           
 16176                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16177  006E80  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16178  006E84  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16179  006E88  9CDF               	bcf	indf2,6,c
 16180                           
 16181                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16182  006E8A  EE20 F004          	lfsr	2,4
 16183  006E8E  5007               	movf	USBConfigureEndpoint@handle,w,c
 16184  006E90  26D9               	addwf	fsr2l,f,c
 16185  006E92  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16186  006E94  22DA               	addwfc	fsr2h,f,c
 16187  006E96  8CDF               	bsf	indf2,6,c
 16188  006E98  0012               	return		;funcret
 16189  006E9A                     __end_of_USBConfigureEndpoint:
 16190                           	opt stack 0
 16191                           tosu	equ	0xFFF
 16192                           tosh	equ	0xFFE
 16193                           tosl	equ	0xFFD
 16194                           pclath	equ	0xFFA
 16195                           tblptru	equ	0xFF8
 16196                           tblptrh	equ	0xFF7
 16197                           tblptrl	equ	0xFF6
 16198                           tablat	equ	0xFF5
 16199                           prodh	equ	0xFF4
 16200                           prodl	equ	0xFF3
 16201                           intcon	equ	0xFF2
 16202                           intcon2	equ	0xFF1
 16203                           intcon3	equ	0xFF0
 16204                           indf0	equ	0xFEF
 16205                           postinc0	equ	0xFEE
 16206                           fsr0h	equ	0xFEA
 16207                           fsr0l	equ	0xFE9
 16208                           wreg	equ	0xFE8
 16209                           indf1	equ	0xFE7
 16210                           postdec1	equ	0xFE5
 16211                           plusw1	equ	0xFE3
 16212                           fsr1h	equ	0xFE2
 16213                           fsr1l	equ	0xFE1
 16214                           indf2	equ	0xFDF
 16215                           postinc2	equ	0xFDE
 16216                           postdec2	equ	0xFDD
 16217                           plusw2	equ	0xFDB
 16218                           fsr2h	equ	0xFDA
 16219                           fsr2l	equ	0xFD9
 16220                           status	equ	0xFD8
 16221                           
 16222 ;; *************** function _USBCtrlTrfOutHandler *****************
 16223 ;; Defined at:
 16224 ;;		line 2540 in file "usb_device.c"
 16225 ;; Parameters:    Size  Location     Type
 16226 ;;		None
 16227 ;; Auto vars:     Size  Location     Type
 16228 ;;		None
 16229 ;; Return value:  Size  Location     Type
 16230 ;;                  1    wreg      void 
 16231 ;; Registers used:
 16232 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16233 ;; Tracked objects:
 16234 ;;		On entry : 0/0
 16235 ;;		On exit  : 0/0
 16236 ;;		Unchanged: 0/0
 16237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16239 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16241 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16242 ;;Total ram usage:        0 bytes
 16243 ;; Hardware stack levels used:    1
 16244 ;; Hardware stack levels required when called:    2
 16245 ;; This function calls:
 16246 ;;		_USBCtrlTrfRxService
 16247 ;; This function is called by:
 16248 ;;		_USBCtrlEPService
 16249 ;; This function uses a non-reentrant model
 16250 ;;
 16251                           
 16252                           	psect	text77
 16253  0078F6                     __ptext77:
 16254                           	opt stack 0
 16255  0078F6                     _USBCtrlTrfOutHandler:
 16256                           	opt stack 26
 16257                           
 16258                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16259                           
 16260                           ;incstack = 0
 16261  0078F6  0E02               	movlw	2
 16262  0078F8  0100               	movlb	0	; () banked
 16263  0078FA  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16264  0078FC  A4D8               	btfss	status,2,c
 16265  0078FE  D003               	goto	l320
 16266                           
 16267                           ; BSR set to: 0
 16268                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16269  007900  ECCA  F021         	call	_USBCtrlTrfRxService	;wreg free
 16270                           
 16271                           ;usb_device.c: 2545: }
 16272  007904  0012               	return	
 16273  007906                     l320:
 16274                           
 16275                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16276  007906  0E00               	movlw	0
 16277  007908  0100               	movlb	0	; () banked
 16278  00790A  6FF6               	movwf	_controlTransferState& (0+255),b
 16279                           
 16280                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16281  00790C  0101               	movlb	1	; () banked
 16282  00790E  5191               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16283  007910  A4D8               	btfss	status,2,c
 16284  007912  D020               	goto	l322
 16285                           
 16286                           ; BSR set to: 1
 16287                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16288  007914  0100               	movlb	0	; () banked
 16289  007916  EE20 F001          	lfsr	2,1
 16290  00791A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16291  00791C  26D9               	addwf	fsr2l,f,c
 16292  00791E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16293  007920  22DA               	addwfc	fsr2h,f,c
 16294  007922  0E08               	movlw	8
 16295  007924  6EDF               	movwf	indf2,c
 16296                           
 16297                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16298  007926  EE20 F002          	lfsr	2,2
 16299  00792A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16300  00792C  26D9               	addwf	fsr2l,f,c
 16301  00792E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16302  007930  22DA               	addwfc	fsr2h,f,c
 16303  007932  0E30               	movlw	48
 16304  007934  6EDE               	movwf	postinc2,c
 16305  007936  0E0D               	movlw	13
 16306  007938  6EDD               	movwf	postdec2,c
 16307                           
 16308                           ; BSR set to: 0
 16309                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16310  00793A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16311  00793E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16312  007942  0E0C               	movlw	12
 16313  007944  6EDF               	movwf	indf2,c
 16314                           
 16315                           ; BSR set to: 0
 16316                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16317  007946  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16318  00794A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16319  00794E  0E00               	movlw	0
 16320  007950  8EDB               	bsf	plusw2,7,c
 16321                           
 16322                           ;usb_device.c: 2563: }
 16323  007952  0012               	return	
 16324  007954                     l322:
 16325                           
 16326                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16327                           
 16328                           ; BSR set to: 0
 16329  007954  0E00               	movlw	0
 16330  007956  0101               	movlb	1	; () banked
 16331  007958  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16332                           
 16333                           ; BSR set to: 1
 16334  00795A  0012               	return	
 16335  00795C                     __end_of_USBCtrlTrfOutHandler:
 16336                           	opt stack 0
 16337                           tosu	equ	0xFFF
 16338                           tosh	equ	0xFFE
 16339                           tosl	equ	0xFFD
 16340                           pclath	equ	0xFFA
 16341                           tblptru	equ	0xFF8
 16342                           tblptrh	equ	0xFF7
 16343                           tblptrl	equ	0xFF6
 16344                           tablat	equ	0xFF5
 16345                           prodh	equ	0xFF4
 16346                           prodl	equ	0xFF3
 16347                           intcon	equ	0xFF2
 16348                           intcon2	equ	0xFF1
 16349                           intcon3	equ	0xFF0
 16350                           indf0	equ	0xFEF
 16351                           postinc0	equ	0xFEE
 16352                           fsr0h	equ	0xFEA
 16353                           fsr0l	equ	0xFE9
 16354                           wreg	equ	0xFE8
 16355                           indf1	equ	0xFE7
 16356                           postdec1	equ	0xFE5
 16357                           plusw1	equ	0xFE3
 16358                           fsr1h	equ	0xFE2
 16359                           fsr1l	equ	0xFE1
 16360                           indf2	equ	0xFDF
 16361                           postinc2	equ	0xFDE
 16362                           postdec2	equ	0xFDD
 16363                           plusw2	equ	0xFDB
 16364                           fsr2h	equ	0xFDA
 16365                           fsr2l	equ	0xFD9
 16366                           status	equ	0xFD8
 16367                           
 16368 ;; *************** function _USBCtrlTrfRxService *****************
 16369 ;; Defined at:
 16370 ;;		line 1854 in file "usb_device.c"
 16371 ;; Parameters:    Size  Location     Type
 16372 ;;		None
 16373 ;; Auto vars:     Size  Location     Type
 16374 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16375 ;;  i               1    0[COMRAM] unsigned char 
 16376 ;; Return value:  Size  Location     Type
 16377 ;;                  1    wreg      void 
 16378 ;; Registers used:
 16379 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16380 ;; Tracked objects:
 16381 ;;		On entry : 0/0
 16382 ;;		On exit  : 0/0
 16383 ;;		Unchanged: 0/0
 16384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16385 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16386 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16389 ;;Total ram usage:        2 bytes
 16390 ;; Hardware stack levels used:    1
 16391 ;; Hardware stack levels required when called:    1
 16392 ;; This function calls:
 16393 ;;		_USBCtrlEPAllowStatusStage
 16394 ;; This function is called by:
 16395 ;;		_USBCtrlTrfOutHandler
 16396 ;; This function uses a non-reentrant model
 16397 ;;
 16398                           
 16399                           	psect	text78
 16400  004394                     __ptext78:
 16401                           	opt stack 0
 16402  004394                     _USBCtrlTrfRxService:
 16403                           	opt stack 26
 16404                           
 16405                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16406                           
 16407                           ;incstack = 0
 16408  004394  0100               	movlb	0	; () banked
 16409  004396  EE20 F001          	lfsr	2,1
 16410  00439A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16411  00439C  26D9               	addwf	fsr2l,f,c
 16412  00439E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16413  0043A0  22DA               	addwfc	fsr2h,f,c
 16414  0043A2  50DF               	movf	indf2,w,c
 16415  0043A4  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16416                           
 16417                           ; BSR set to: 0
 16418                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16419  0043A6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16420  0043A8  0101               	movlb	1	; () banked
 16421  0043AA  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16422  0043AC  0E00               	movlw	0
 16423  0043AE  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16424  0043B0  A0D8               	btfss	status,0,c
 16425                           
 16426                           ; BSR set to: 1
 16427                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16428  0043B2  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16429                           
 16430                           ; BSR set to: 1
 16431                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16432                           
 16433                           ; BSR set to: 1
 16434  0043B6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16435  0043B8  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16436  0043BA  0E00               	movlw	0
 16437  0043BC  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16438                           
 16439                           ; BSR set to: 1
 16440                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16441  0043BE  0E00               	movlw	0
 16442  0043C0  6E01               	movwf	USBCtrlTrfRxService@i,c
 16443  0043C2  D011               	goto	l248
 16444  0043C4                     
 16445                           ; BSR set to: 1
 16446                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16447                           
 16448                           ; BSR set to: 1
 16449  0043C4  5001               	movf	USBCtrlTrfRxService@i,w,c
 16450  0043C6  0D01               	mullw	1
 16451  0043C8  0E38               	movlw	56
 16452  0043CA  24F3               	addwf	prodl,w,c
 16453  0043CC  6ED9               	movwf	fsr2l,c
 16454  0043CE  0E0D               	movlw	13
 16455  0043D0  20F4               	addwfc	prodh,w,c
 16456  0043D2  6EDA               	movwf	fsr2h,c
 16457  0043D4  C131  FFE1         	movff	_outPipes,fsr1l
 16458  0043D8  C132  FFE2         	movff	_outPipes+1,fsr1h
 16459  0043DC  CFDF FFE7          	movff	indf2,indf1
 16460                           
 16461                           ; BSR set to: 1
 16462  0043E0  4B31               	infsnz	_outPipes& (0+255),f,b
 16463  0043E2  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16464                           
 16465                           ; BSR set to: 1
 16466  0043E4  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16467  0043E6                     l248:
 16468                           
 16469                           ; BSR set to: 1
 16470                           
 16471                           ; BSR set to: 1
 16472  0043E6  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16473  0043E8  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16474  0043EA  A0D8               	btfss	status,0,c
 16475  0043EC  D7EB               	goto	l249
 16476                           
 16477                           ; BSR set to: 1
 16478                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16479                           
 16480                           ; BSR set to: 1
 16481  0043EE  5135               	movf	(_outPipes+4)& (0+255),w,b
 16482  0043F0  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16483  0043F2  B4D8               	btfsc	status,2,c
 16484  0043F4  D033               	goto	l251
 16485                           
 16486                           ; BSR set to: 1
 16487                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16488  0043F6  0100               	movlb	0	; () banked
 16489  0043F8  EE20 F001          	lfsr	2,1
 16490  0043FC  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16491  0043FE  26D9               	addwf	fsr2l,f,c
 16492  004400  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16493  004402  22DA               	addwfc	fsr2h,f,c
 16494  004404  0E08               	movlw	8
 16495  004406  6EDF               	movwf	indf2,c
 16496                           
 16497                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16498  004408  EE20 F002          	lfsr	2,2
 16499  00440C  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16500  00440E  26D9               	addwf	fsr2l,f,c
 16501  004410  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16502  004412  22DA               	addwfc	fsr2h,f,c
 16503  004414  0E38               	movlw	56
 16504  004416  6EDE               	movwf	postinc2,c
 16505  004418  0E0D               	movlw	13
 16506  00441A  6EDD               	movwf	postdec2,c
 16507                           
 16508                           ; BSR set to: 0
 16509                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16510  00441C  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16511  004420  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16512  004424  BCDF               	btfsc	indf2,6,c
 16513  004426  D00D               	goto	l252
 16514                           
 16515                           ; BSR set to: 0
 16516                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16517  004428  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16518  00442C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16519  004430  0E48               	movlw	72
 16520  004432  6EDF               	movwf	indf2,c
 16521                           
 16522                           ; BSR set to: 0
 16523                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16524  004434  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16525  004438  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16526  00443C  0E00               	movlw	0
 16527  00443E  8EDB               	bsf	plusw2,7,c
 16528                           
 16529                           ;usb_device.c: 1891: }
 16530  004440  0012               	return	
 16531  004442                     l252:
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16535                           
 16536                           ; BSR set to: 0
 16537  004442  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16538  004446  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16539  00444A  0E08               	movlw	8
 16540  00444C  6EDF               	movwf	indf2,c
 16541                           
 16542                           ; BSR set to: 0
 16543                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16544  00444E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16545  004452  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16546  004456  0E00               	movlw	0
 16547  004458  8EDB               	bsf	plusw2,7,c
 16548                           
 16549                           ; BSR set to: 0
 16550                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16551  00445A  0012               	return	
 16552  00445C                     l251:
 16553                           
 16554                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16555                           
 16556                           ; BSR set to: 0
 16557  00445C  0100               	movlb	0	; () banked
 16558  00445E  EE20 F001          	lfsr	2,1
 16559  004462  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16560  004464  26D9               	addwf	fsr2l,f,c
 16561  004466  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16562  004468  22DA               	addwfc	fsr2h,f,c
 16563  00446A  0E08               	movlw	8
 16564  00446C  6EDF               	movwf	indf2,c
 16565                           
 16566                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16567  00446E  EE20 F002          	lfsr	2,2
 16568  004472  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16569  004474  26D9               	addwf	fsr2l,f,c
 16570  004476  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16571  004478  22DA               	addwfc	fsr2h,f,c
 16572  00447A  0E30               	movlw	48
 16573  00447C  6EDE               	movwf	postinc2,c
 16574  00447E  0E0D               	movlw	13
 16575  004480  6EDD               	movwf	postdec2,c
 16576                           
 16577                           ; BSR set to: 0
 16578                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16579  004482  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16580  004486  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16581  00448A  0E04               	movlw	4
 16582  00448C  6EDF               	movwf	indf2,c
 16583                           
 16584                           ; BSR set to: 0
 16585                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16586  00448E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16587  004492  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16588  004496  0E00               	movlw	0
 16589  004498  8EDB               	bsf	plusw2,7,c
 16590                           
 16591                           ; BSR set to: 0
 16592                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16593                           
 16594                           ; BSR set to: 0
 16595  00449A  0101               	movlb	1	; () banked
 16596  00449C  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16597                           
 16598                           ; BSR set to: 1
 16599                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16600  00449E  0100               	movlb	0	; () banked
 16601  0044A0  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16602  0044A2  A4D8               	btfss	status,2,c
 16603  0044A4  0012               	return	
 16604                           
 16605                           ; BSR set to: 0
 16606                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16607  0044A6  ECE4  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16608  0044AA  0012               	return	
 16609  0044AC                     __end_of_USBCtrlTrfRxService:
 16610                           	opt stack 0
 16611                           tosu	equ	0xFFF
 16612                           tosh	equ	0xFFE
 16613                           tosl	equ	0xFFD
 16614                           pclath	equ	0xFFA
 16615                           tblptru	equ	0xFF8
 16616                           tblptrh	equ	0xFF7
 16617                           tblptrl	equ	0xFF6
 16618                           tablat	equ	0xFF5
 16619                           prodh	equ	0xFF4
 16620                           prodl	equ	0xFF3
 16621                           intcon	equ	0xFF2
 16622                           intcon2	equ	0xFF1
 16623                           intcon3	equ	0xFF0
 16624                           indf0	equ	0xFEF
 16625                           postinc0	equ	0xFEE
 16626                           fsr0h	equ	0xFEA
 16627                           fsr0l	equ	0xFE9
 16628                           wreg	equ	0xFE8
 16629                           indf1	equ	0xFE7
 16630                           postdec1	equ	0xFE5
 16631                           plusw1	equ	0xFE3
 16632                           fsr1h	equ	0xFE2
 16633                           fsr1l	equ	0xFE1
 16634                           indf2	equ	0xFDF
 16635                           postinc2	equ	0xFDE
 16636                           postdec2	equ	0xFDD
 16637                           plusw2	equ	0xFDB
 16638                           fsr2h	equ	0xFDA
 16639                           fsr2l	equ	0xFD9
 16640                           status	equ	0xFD8
 16641                           
 16642 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16643 ;; Defined at:
 16644 ;;		line 1418 in file "usb_device.c"
 16645 ;; Parameters:    Size  Location     Type
 16646 ;;		None
 16647 ;; Auto vars:     Size  Location     Type
 16648 ;;		None
 16649 ;; Return value:  Size  Location     Type
 16650 ;;                  1    wreg      void 
 16651 ;; Registers used:
 16652 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16653 ;; Tracked objects:
 16654 ;;		On entry : 0/0
 16655 ;;		On exit  : 0/0
 16656 ;;		Unchanged: 0/0
 16657 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16658 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16659 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16660 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16661 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16662 ;;Total ram usage:        0 bytes
 16663 ;; Hardware stack levels used:    1
 16664 ;; This function calls:
 16665 ;;		Nothing
 16666 ;; This function is called by:
 16667 ;;		_USBDeviceTasks
 16668 ;;		_USBCtrlEPServiceComplete
 16669 ;;		_USBCtrlTrfRxService
 16670 ;; This function uses a non-reentrant model
 16671 ;;
 16672                           
 16673                           	psect	text79
 16674  005DC8                     __ptext79:
 16675                           	opt stack 0
 16676  005DC8                     _USBCtrlEPAllowStatusStage:
 16677                           	opt stack 26
 16678                           
 16679                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16680                           
 16681                           ;incstack = 0
 16682  005DC8  0100               	movlb	0	; () banked
 16683  005DCA  51F1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16684  005DCC  A4D8               	btfss	status,2,c
 16685  005DCE  0012               	return	
 16686                           
 16687                           ; BSR set to: 0
 16688                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16689  005DD0  0E01               	movlw	1
 16690  005DD2  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16691                           
 16692                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16693  005DD4  51F0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16694  005DD6  A4D8               	btfss	status,2,c
 16695  005DD8  0012               	return	
 16696                           
 16697                           ; BSR set to: 0
 16698                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16699  005DDA  0E01               	movlw	1
 16700  005DDC  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16701                           
 16702                           ; BSR set to: 0
 16703                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16704  005DDE  0E02               	movlw	2
 16705  005DE0  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16706  005DE2  A4D8               	btfss	status,2,c
 16707  005DE4  D015               	goto	l202
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16711  005DE6  EE20 F001          	lfsr	2,1
 16712  005DEA  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16713  005DEC  26D9               	addwf	fsr2l,f,c
 16714  005DEE  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16715  005DF0  22DA               	addwfc	fsr2h,f,c
 16716  005DF2  0E00               	movlw	0
 16717  005DF4  6EDF               	movwf	indf2,c
 16718                           
 16719                           ; BSR set to: 0
 16720                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16721  005DF6  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16722  005DFA  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16723  005DFE  0E48               	movlw	72
 16724  005E00  6EDF               	movwf	indf2,c
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16728  005E02  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16729  005E06  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16730  005E0A  0E00               	movlw	0
 16731  005E0C  8EDB               	bsf	plusw2,7,c
 16732                           
 16733                           ;usb_device.c: 1439: }
 16734  005E0E  0012               	return	
 16735  005E10                     l202:
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16739                           
 16740                           ; BSR set to: 0
 16741  005E10  05F6               	decf	_controlTransferState& (0+255),w,b
 16742  005E12  A4D8               	btfss	status,2,c
 16743  005E14  0012               	return	
 16744                           
 16745                           ; BSR set to: 0
 16746                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16747  005E16  0E00               	movlw	0
 16748  005E18  0101               	movlb	1	; () banked
 16749  005E1A  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16750                           
 16751                           ; BSR set to: 1
 16752                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16753  005E1C  0100               	movlb	0	; () banked
 16754  005E1E  EE20 F001          	lfsr	2,1
 16755  005E22  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16756  005E24  26D9               	addwf	fsr2l,f,c
 16757  005E26  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16758  005E28  22DA               	addwfc	fsr2h,f,c
 16759  005E2A  0E08               	movlw	8
 16760  005E2C  6EDF               	movwf	indf2,c
 16761                           
 16762                           ; BSR set to: 0
 16763                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16764  005E2E  EE20 F002          	lfsr	2,2
 16765  005E32  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16766  005E34  26D9               	addwf	fsr2l,f,c
 16767  005E36  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16768  005E38  22DA               	addwfc	fsr2h,f,c
 16769  005E3A  0E30               	movlw	48
 16770  005E3C  6EDE               	movwf	postinc2,c
 16771  005E3E  0E0D               	movlw	13
 16772  005E40  6EDD               	movwf	postdec2,c
 16773                           
 16774                           ; BSR set to: 0
 16775                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16776  005E42  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16777  005E46  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16778  005E4A  0E04               	movlw	4
 16779  005E4C  6EDF               	movwf	indf2,c
 16780                           
 16781                           ; BSR set to: 0
 16782                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16783  005E4E  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16784  005E52  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16785  005E56  0E00               	movlw	0
 16786  005E58  8EDB               	bsf	plusw2,7,c
 16787                           
 16788                           ; BSR set to: 0
 16789                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16790  005E5A  0E01               	movlw	1
 16791  005E5C  0101               	movlb	1	; () banked
 16792  005E5E  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16793                           
 16794                           ; BSR set to: 1
 16795                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16796  005E60  0100               	movlb	0	; () banked
 16797  005E62  EE20 F001          	lfsr	2,1
 16798  005E66  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16799  005E68  26D9               	addwf	fsr2l,f,c
 16800  005E6A  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16801  005E6C  22DA               	addwfc	fsr2h,f,c
 16802  005E6E  0E08               	movlw	8
 16803  005E70  6EDF               	movwf	indf2,c
 16804                           
 16805                           ; BSR set to: 0
 16806                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16807  005E72  EE20 F002          	lfsr	2,2
 16808  005E76  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16809  005E78  26D9               	addwf	fsr2l,f,c
 16810  005E7A  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16811  005E7C  22DA               	addwfc	fsr2h,f,c
 16812  005E7E  0E30               	movlw	48
 16813  005E80  6EDE               	movwf	postinc2,c
 16814  005E82  0E0D               	movlw	13
 16815  005E84  6EDD               	movwf	postdec2,c
 16816                           
 16817                           ; BSR set to: 0
 16818                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16819  005E86  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16820  005E8A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16821  005E8E  0E80               	movlw	128
 16822  005E90  6EDF               	movwf	indf2,c
 16823                           
 16824                           ; BSR set to: 0
 16825                           
 16826                           ; BSR set to: 0
 16827                           
 16828                           ; BSR set to: 0
 16829  005E92  0012               	return	
 16830  005E94                     __end_of_USBCtrlEPAllowStatusStage:
 16831                           	opt stack 0
 16832                           tosu	equ	0xFFF
 16833                           tosh	equ	0xFFE
 16834                           tosl	equ	0xFFD
 16835                           pclath	equ	0xFFA
 16836                           tblptru	equ	0xFF8
 16837                           tblptrh	equ	0xFF7
 16838                           tblptrl	equ	0xFF6
 16839                           tablat	equ	0xFF5
 16840                           prodh	equ	0xFF4
 16841                           prodl	equ	0xFF3
 16842                           intcon	equ	0xFF2
 16843                           intcon2	equ	0xFF1
 16844                           intcon3	equ	0xFF0
 16845                           indf0	equ	0xFEF
 16846                           postinc0	equ	0xFEE
 16847                           fsr0h	equ	0xFEA
 16848                           fsr0l	equ	0xFE9
 16849                           wreg	equ	0xFE8
 16850                           indf1	equ	0xFE7
 16851                           postdec1	equ	0xFE5
 16852                           plusw1	equ	0xFE3
 16853                           fsr1h	equ	0xFE2
 16854                           fsr1l	equ	0xFE1
 16855                           indf2	equ	0xFDF
 16856                           postinc2	equ	0xFDE
 16857                           postdec2	equ	0xFDD
 16858                           plusw2	equ	0xFDB
 16859                           fsr2h	equ	0xFDA
 16860                           fsr2l	equ	0xFD9
 16861                           status	equ	0xFD8
 16862                           
 16863 ;; *************** function _USBCtrlTrfInHandler *****************
 16864 ;; Defined at:
 16865 ;;		line 2594 in file "usb_device.c"
 16866 ;; Parameters:    Size  Location     Type
 16867 ;;		None
 16868 ;; Auto vars:     Size  Location     Type
 16869 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16870 ;; Return value:  Size  Location     Type
 16871 ;;                  1    wreg      void 
 16872 ;; Registers used:
 16873 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16874 ;; Tracked objects:
 16875 ;;		On entry : 0/0
 16876 ;;		On exit  : 0/0
 16877 ;;		Unchanged: 0/0
 16878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16879 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16880 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16882 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16883 ;;Total ram usage:        1 bytes
 16884 ;; Hardware stack levels used:    1
 16885 ;; Hardware stack levels required when called:    1
 16886 ;; This function calls:
 16887 ;;		_USBCtrlTrfTxService
 16888 ;; This function is called by:
 16889 ;;		_USBCtrlEPService
 16890 ;; This function uses a non-reentrant model
 16891 ;;
 16892                           
 16893                           	psect	text80
 16894  005E94                     __ptext80:
 16895                           	opt stack 0
 16896  005E94                     _USBCtrlTrfInHandler:
 16897                           	opt stack 27
 16898                           
 16899                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16900                           
 16901                           ; BSR set to: 0
 16902                           ;incstack = 0
 16903  005E94  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16904  005E98  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16905  005E9C  0100               	movlb	0	; () banked
 16906  005E9E  0E00               	movlw	0
 16907  005EA0  BCDF               	btfsc	indf2,6,c
 16908  005EA2  0E01               	movlw	1
 16909  005EA4  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16910                           
 16911                           ; BSR set to: 0
 16912                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16913  005EA6  0E04               	movlw	4
 16914  005EA8  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 16915  005EAA  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 16916  005EAC  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16917  005EAE  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16921  005EB0  0E08               	movlw	8
 16922  005EB2  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 16923  005EB4  A4D8               	btfss	status,2,c
 16924  005EB6  D00D               	goto	l329
 16925                           
 16926                           ; BSR set to: 0
 16927                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16928  005EB8  010D               	movlb	13	; () banked
 16929  005EBA  5132               	movf	50,w,b	;volatile
 16930  005EBC  0B7F               	andlw	127
 16931  005EBE  010F               	movlb	15	; () banked
 16932  005EC0  6F38               	movwf	56,b	;volatile
 16933                           
 16934                           ; BSR set to: 15
 16935                           ;usb_device.c: 2609: if(UADDR != 0u)
 16936  005EC2  5138               	movf	56,w,b	;volatile
 16937  005EC4  B4D8               	btfsc	status,2,c
 16938  005EC6  D002               	goto	l328
 16939                           
 16940                           ; BSR set to: 15
 16941                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16942  005EC8  0E10               	movlw	16
 16943  005ECA  D001               	goto	L15
 16944  005ECC                     l328:
 16945                           
 16946                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16947                           
 16948                           ; BSR set to: 0
 16949  005ECC  0E04               	movlw	4
 16950  005ECE                     L15:
 16951  005ECE  0100               	movlb	0	; () banked
 16952  005ED0  6FF8               	movwf	_USBDeviceState& (0+255),b
 16953  005ED2                     l329:
 16954                           
 16955                           ; BSR set to: 0
 16956                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16957                           
 16958                           ; BSR set to: 0
 16959                           
 16960                           ; BSR set to: 0
 16961  005ED2  05F6               	decf	_controlTransferState& (0+255),w,b
 16962  005ED4  A4D8               	btfss	status,2,c
 16963  005ED6  D03B               	goto	l330
 16964                           
 16965                           ; BSR set to: 0
 16966                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16967  005ED8  EE20 F002          	lfsr	2,2
 16968  005EDC  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16969  005EDE  26D9               	addwf	fsr2l,f,c
 16970  005EE0  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16971  005EE2  22DA               	addwfc	fsr2h,f,c
 16972  005EE4  0E38               	movlw	56
 16973  005EE6  6EDE               	movwf	postinc2,c
 16974  005EE8  0E0D               	movlw	13
 16975  005EEA  6EDD               	movwf	postdec2,c
 16976                           
 16977                           ; BSR set to: 0
 16978                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16979  005EEC  EC42  F02D         	call	_USBCtrlTrfTxService	;wreg free
 16980                           
 16981                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 16982  005EF0  0E02               	movlw	2
 16983  005EF2  0100               	movlb	0	; () banked
 16984  005EF4  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 16985  005EF6  A4D8               	btfss	status,2,c
 16986  005EF8  D00D               	goto	l331
 16987                           
 16988                           ; BSR set to: 0
 16989                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 16990  005EFA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16991  005EFE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16992  005F02  0E04               	movlw	4
 16993  005F04  6EDF               	movwf	indf2,c
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16997  005F06  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16998  005F0A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16999  005F0E  0E00               	movlw	0
 17000  005F10  8EDB               	bsf	plusw2,7,c
 17001                           
 17002                           ;usb_device.c: 2635: }
 17003  005F12  0012               	return	
 17004  005F14                     l331:
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17008                           
 17009                           ; BSR set to: 0
 17010  005F14  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17011  005F16  A4D8               	btfss	status,2,c
 17012  005F18  D00D               	goto	l333
 17013                           
 17014                           ; BSR set to: 0
 17015                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17016  005F1A  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17017  005F1E  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17018  005F22  0E48               	movlw	72
 17019  005F24  6EDF               	movwf	indf2,c
 17020                           
 17021                           ; BSR set to: 0
 17022                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17023  005F26  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17024  005F2A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17025  005F2E  0E00               	movlw	0
 17026  005F30  8EDB               	bsf	plusw2,7,c
 17027                           
 17028                           ;usb_device.c: 2642: }
 17029  005F32  0012               	return	
 17030  005F34                     l333:
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17034                           
 17035                           ; BSR set to: 0
 17036  005F34  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17037  005F38  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17038  005F3C  0E08               	movlw	8
 17039  005F3E  6EDF               	movwf	indf2,c
 17040                           
 17041                           ; BSR set to: 0
 17042                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17043  005F40  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17044  005F44  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17045  005F48  0E00               	movlw	0
 17046  005F4A  8EDB               	bsf	plusw2,7,c
 17047                           
 17048                           ; BSR set to: 0
 17049                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17050                           
 17051                           ; BSR set to: 0
 17052  005F4C  0012               	return	
 17053  005F4E                     l330:
 17054                           
 17055                           ; BSR set to: 0
 17056                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17057  005F4E  0101               	movlb	1	; () banked
 17058  005F50  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17059                           
 17060                           ; BSR set to: 1
 17061                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17062                           
 17063                           ; BSR set to: 1
 17064  005F52  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17065                           
 17066                           ; BSR set to: 1
 17067                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17068                           
 17069                           ; BSR set to: 1
 17070  005F54  0E00               	movlw	0
 17071  005F56  0100               	movlb	0	; () banked
 17072  005F58  6FF6               	movwf	_controlTransferState& (0+255),b
 17073  005F5A  0012               	return	
 17074  005F5C                     __end_of_USBCtrlTrfInHandler:
 17075                           	opt stack 0
 17076                           tosu	equ	0xFFF
 17077                           tosh	equ	0xFFE
 17078                           tosl	equ	0xFFD
 17079                           pclath	equ	0xFFA
 17080                           tblptru	equ	0xFF8
 17081                           tblptrh	equ	0xFF7
 17082                           tblptrl	equ	0xFF6
 17083                           tablat	equ	0xFF5
 17084                           prodh	equ	0xFF4
 17085                           prodl	equ	0xFF3
 17086                           intcon	equ	0xFF2
 17087                           intcon2	equ	0xFF1
 17088                           intcon3	equ	0xFF0
 17089                           indf0	equ	0xFEF
 17090                           postinc0	equ	0xFEE
 17091                           fsr0h	equ	0xFEA
 17092                           fsr0l	equ	0xFE9
 17093                           wreg	equ	0xFE8
 17094                           indf1	equ	0xFE7
 17095                           postdec1	equ	0xFE5
 17096                           plusw1	equ	0xFE3
 17097                           fsr1h	equ	0xFE2
 17098                           fsr1l	equ	0xFE1
 17099                           indf2	equ	0xFDF
 17100                           postinc2	equ	0xFDE
 17101                           postdec2	equ	0xFDD
 17102                           plusw2	equ	0xFDB
 17103                           fsr2h	equ	0xFDA
 17104                           fsr2l	equ	0xFD9
 17105                           status	equ	0xFD8
 17106                           
 17107 ;; *************** function _USBCtrlTrfTxService *****************
 17108 ;; Defined at:
 17109 ;;		line 1773 in file "usb_device.c"
 17110 ;; Parameters:    Size  Location     Type
 17111 ;;		None
 17112 ;; Auto vars:     Size  Location     Type
 17113 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17114 ;; Return value:  Size  Location     Type
 17115 ;;                  1    wreg      void 
 17116 ;; Registers used:
 17117 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17118 ;; Tracked objects:
 17119 ;;		On entry : 0/0
 17120 ;;		On exit  : 0/0
 17121 ;;		Unchanged: 0/0
 17122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17123 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17124 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17126 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17127 ;;Total ram usage:        1 bytes
 17128 ;; Hardware stack levels used:    1
 17129 ;; This function calls:
 17130 ;;		Nothing
 17131 ;; This function is called by:
 17132 ;;		_USBCtrlEPAllowDataStage
 17133 ;;		_USBCtrlTrfInHandler
 17134 ;; This function uses a non-reentrant model
 17135 ;;
 17136                           
 17137                           	psect	text81
 17138  005A84                     __ptext81:
 17139                           	opt stack 0
 17140  005A84                     _USBCtrlTrfTxService:
 17141                           	opt stack 25
 17142                           
 17143                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;incstack = 0
 17147  005A84  0E08               	movlw	8
 17148  005A86  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17149                           
 17150                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17151  005A88  0100               	movlb	0	; () banked
 17152  005A8A  51D0               	movf	(_inPipes+5)& (0+255),w,b
 17153  005A8C  E110               	bnz	l11511
 17154  005A8E  0E08               	movlw	8
 17155  005A90  5DCF               	subwf	(_inPipes+4)& (0+255),w,b
 17156  005A92  B0D8               	btfsc	status,0,c
 17157  005A94  D00C               	goto	l235
 17158                           
 17159                           ; BSR set to: 0
 17160                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17161  005A96  C0CF  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17165  005A9A  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17166  005A9C  A4D8               	btfss	status,2,c
 17167  005A9E  D002               	goto	l233
 17168                           
 17169                           ; BSR set to: 0
 17170                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17171  005AA0  0E01               	movlw	1
 17172  005AA2  D004               	goto	L16
 17173  005AA4                     l233:
 17174                           
 17175                           ; BSR set to: 0
 17176                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17177                           
 17178                           ; BSR set to: 0
 17179  005AA4  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17180  005AA6  A4D8               	btfss	status,2,c
 17181  005AA8  D002               	goto	l235
 17182                           
 17183                           ; BSR set to: 0
 17184                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17185  005AAA  0E02               	movlw	2
 17186  005AAC                     L16:
 17187  005AAC  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17188  005AAE                     l235:
 17189  005AAE                     l11511:
 17190                           
 17191                           ; BSR set to: 0
 17192                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17193  005AAE  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17194  005AB0  5FCF               	subwf	(_inPipes+4)& (0+255),f,b
 17195  005AB2  0E00               	movlw	0
 17196  005AB4  5BD0               	subwfb	(_inPipes+5)& (0+255),f,b
 17197                           
 17198                           ; BSR set to: 0
 17199                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17200  005AB6  EE20 F001          	lfsr	2,1
 17201  005ABA  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17202  005ABC  26D9               	addwf	fsr2l,f,c
 17203  005ABE  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17204  005AC0  22DA               	addwfc	fsr2h,f,c
 17205  005AC2  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17206                           
 17207                           ; BSR set to: 0
 17208                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17209  005AC6  0E38               	movlw	56
 17210  005AC8  0101               	movlb	1	; () banked
 17211  005ACA  6F88               	movwf	_pDst& (0+255),b
 17212  005ACC  0E0D               	movlw	13
 17213  005ACE  6F89               	movwf	(_pDst+1)& (0+255),b
 17214                           
 17215                           ; BSR set to: 1
 17216                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17217  005AD0  0100               	movlb	0	; () banked
 17218  005AD2  A1CE               	btfss	(_inPipes+3)& (0+255),0,b
 17219  005AD4  D01D               	goto	l237
 17220  005AD6  D03C               	goto	l241
 17221  005AD8                     
 17222                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17223                           
 17224                           ; BSR set to: 0
 17225  005AD8  C0CB  FFF6         	movff	_inPipes,tblptrl
 17226  005ADC  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17227  005AE0  6AF8               	clrf	tblptru,c
 17228  005AE2  C188  FFD9         	movff	_pDst,fsr2l
 17229  005AE6  C189  FFDA         	movff	_pDst+1,fsr2h
 17230  005AEA  0E0E               	movlw	(high __ramtop+-1)
 17231  005AEC  64F7               	cpfsgt	tblptrh,c
 17232  005AEE  D003               	bra	u8317
 17233  005AF0  0008               	tblrd		*
 17234  005AF2  50F5               	movf	tablat,w,c
 17235  005AF4  D005               	bra	u8310
 17236  005AF6                     u8317:
 17237  005AF6  CFF6 FFE9          	movff	tblptrl,fsr0l
 17238  005AFA  CFF7 FFEA          	movff	tblptrh,fsr0h
 17239  005AFE  50EF               	movf	indf0,w,c
 17240  005B00                     u8310:
 17241  005B00  6EDF               	movwf	indf2,c
 17242  005B02  0100               	movlb	0	; () banked
 17243  005B04  4BCB               	infsnz	_inPipes& (0+255),f,b
 17244  005B06  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17245                           
 17246                           ; BSR set to: 0
 17247  005B08  0101               	movlb	1	; () banked
 17248  005B0A  4B88               	infsnz	_pDst& (0+255),f,b
 17249  005B0C  2B89               	incf	(_pDst+1)& (0+255),f,b
 17250                           
 17251                           ; BSR set to: 1
 17252                           ;usb_device.c: 1816: byteToSend--;
 17253  005B0E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17254  005B10                     l237:
 17255                           
 17256                           ; BSR set to: 1
 17257  005B10  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17258  005B12  B4D8               	btfsc	status,2,c
 17259  005B14  0012               	return	
 17260  005B16  D7E0               	goto	l238
 17261  005B18                     
 17262                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17263  005B18  C0CB  FFF6         	movff	_inPipes,tblptrl
 17264  005B1C  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17265  005B20  6AF8               	clrf	tblptru,c
 17266  005B22  C188  FFD9         	movff	_pDst,fsr2l
 17267  005B26  C189  FFDA         	movff	_pDst+1,fsr2h
 17268  005B2A  0E0E               	movlw	(high __ramtop+-1)
 17269  005B2C  64F7               	cpfsgt	tblptrh,c
 17270  005B2E  D003               	bra	u8337
 17271  005B30  0008               	tblrd		*
 17272  005B32  50F5               	movf	tablat,w,c
 17273  005B34  D005               	bra	u8330
 17274  005B36                     u8337:
 17275  005B36  CFF6 FFE9          	movff	tblptrl,fsr0l
 17276  005B3A  CFF7 FFEA          	movff	tblptrh,fsr0h
 17277  005B3E  50EF               	movf	indf0,w,c
 17278  005B40                     u8330:
 17279  005B40  6EDF               	movwf	indf2,c
 17280  005B42  0100               	movlb	0	; () banked
 17281  005B44  4BCB               	infsnz	_inPipes& (0+255),f,b
 17282  005B46  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17283                           
 17284                           ; BSR set to: 0
 17285  005B48  0101               	movlb	1	; () banked
 17286  005B4A  4B88               	infsnz	_pDst& (0+255),f,b
 17287  005B4C  2B89               	incf	(_pDst+1)& (0+255),f,b
 17288                           
 17289                           ; BSR set to: 1
 17290                           ;usb_device.c: 1824: byteToSend--;
 17291  005B4E  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17292  005B50                     l241:
 17293                           
 17294                           ; BSR set to: 1
 17295  005B50  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17296  005B52  B4D8               	btfsc	status,2,c
 17297  005B54  0012               	return	
 17298  005B56  D7E0               	goto	l242
 17299  005B58                     __end_of_USBCtrlTrfTxService:
 17300                           	opt stack 0
 17301                           tosu	equ	0xFFF
 17302                           tosh	equ	0xFFE
 17303                           tosl	equ	0xFFD
 17304                           pclath	equ	0xFFA
 17305                           tblptru	equ	0xFF8
 17306                           tblptrh	equ	0xFF7
 17307                           tblptrl	equ	0xFF6
 17308                           tablat	equ	0xFF5
 17309                           prodh	equ	0xFF4
 17310                           prodl	equ	0xFF3
 17311                           intcon	equ	0xFF2
 17312                           intcon2	equ	0xFF1
 17313                           intcon3	equ	0xFF0
 17314                           indf0	equ	0xFEF
 17315                           postinc0	equ	0xFEE
 17316                           fsr0h	equ	0xFEA
 17317                           fsr0l	equ	0xFE9
 17318                           wreg	equ	0xFE8
 17319                           indf1	equ	0xFE7
 17320                           postdec1	equ	0xFE5
 17321                           plusw1	equ	0xFE3
 17322                           fsr1h	equ	0xFE2
 17323                           fsr1l	equ	0xFE1
 17324                           indf2	equ	0xFDF
 17325                           postinc2	equ	0xFDE
 17326                           postdec2	equ	0xFDD
 17327                           plusw2	equ	0xFDB
 17328                           fsr2h	equ	0xFDA
 17329                           fsr2l	equ	0xFD9
 17330                           status	equ	0xFD8
 17331                           
 17332 ;; *************** function _APP_DeviceMSDTasks *****************
 17333 ;; Defined at:
 17334 ;;		line 110 in file "app_device_msd.c"
 17335 ;; Parameters:    Size  Location     Type
 17336 ;;		None
 17337 ;; Auto vars:     Size  Location     Type
 17338 ;;		None
 17339 ;; Return value:  Size  Location     Type
 17340 ;;                  1    wreg      void 
 17341 ;; Registers used:
 17342 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17343 ;; Tracked objects:
 17344 ;;		On entry : 0/0
 17345 ;;		On exit  : 0/0
 17346 ;;		Unchanged: 0/0
 17347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17349 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17351 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17352 ;;Total ram usage:        0 bytes
 17353 ;; Hardware stack levels used:    1
 17354 ;; Hardware stack levels required when called:   11
 17355 ;; This function calls:
 17356 ;;		_MSDTasks
 17357 ;; This function is called by:
 17358 ;;		_main
 17359 ;; This function uses a non-reentrant model
 17360 ;;
 17361                           
 17362                           	psect	text82
 17363  008E1A                     __ptext82:
 17364                           	opt stack 0
 17365  008E1A                     _APP_DeviceMSDTasks:
 17366                           	opt stack 19
 17367                           
 17368                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17369                           
 17370                           ;incstack = 0
 17371  008E1A  0E20               	movlw	32
 17372  008E1C  0100               	movlb	0	; () banked
 17373  008E1E  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17374  008E20  D001               	goto	l1008
 17375  008E22  0012               	return	
 17376  008E24                     l1008:
 17377                           
 17378                           ; BSR set to: 0
 17379                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17380  008E24  B265               	btfsc	3941,1,c	;volatile
 17381  008E26  0012               	return	
 17382                           
 17383                           ; BSR set to: 0
 17384                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17385                           
 17386                           ; BSR set to: 0
 17387                           
 17388                           ; BSR set to: 0
 17389                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17390  008E28  EC18  F010         	call	_MSDTasks	;wreg free
 17391  008E2C  0012               	return		;funcret
 17392  008E2E                     __end_of_APP_DeviceMSDTasks:
 17393                           	opt stack 0
 17394                           tosu	equ	0xFFF
 17395                           tosh	equ	0xFFE
 17396                           tosl	equ	0xFFD
 17397                           pclath	equ	0xFFA
 17398                           tblptru	equ	0xFF8
 17399                           tblptrh	equ	0xFF7
 17400                           tblptrl	equ	0xFF6
 17401                           tablat	equ	0xFF5
 17402                           prodh	equ	0xFF4
 17403                           prodl	equ	0xFF3
 17404                           intcon	equ	0xFF2
 17405                           intcon2	equ	0xFF1
 17406                           intcon3	equ	0xFF0
 17407                           indf0	equ	0xFEF
 17408                           postinc0	equ	0xFEE
 17409                           fsr0h	equ	0xFEA
 17410                           fsr0l	equ	0xFE9
 17411                           wreg	equ	0xFE8
 17412                           indf1	equ	0xFE7
 17413                           postdec1	equ	0xFE5
 17414                           plusw1	equ	0xFE3
 17415                           fsr1h	equ	0xFE2
 17416                           fsr1l	equ	0xFE1
 17417                           indf2	equ	0xFDF
 17418                           postinc2	equ	0xFDE
 17419                           postdec2	equ	0xFDD
 17420                           plusw2	equ	0xFDB
 17421                           fsr2h	equ	0xFDA
 17422                           fsr2l	equ	0xFD9
 17423                           status	equ	0xFD8
 17424                           
 17425 ;; *************** function _MSDTasks *****************
 17426 ;; Defined at:
 17427 ;;		line 335 in file "usb_device_msd.c"
 17428 ;; Parameters:    Size  Location     Type
 17429 ;;		None
 17430 ;; Auto vars:     Size  Location     Type
 17431 ;;  i               1   81[COMRAM] unsigned char 
 17432 ;; Return value:  Size  Location     Type
 17433 ;;                  1    wreg      unsigned char 
 17434 ;; Registers used:
 17435 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17436 ;; Tracked objects:
 17437 ;;		On entry : 0/0
 17438 ;;		On exit  : 0/0
 17439 ;;		Unchanged: 0/0
 17440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17441 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17442 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17443 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17444 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17445 ;;Total ram usage:        6 bytes
 17446 ;; Hardware stack levels used:    1
 17447 ;; Hardware stack levels required when called:   10
 17448 ;; This function calls:
 17449 ;;		_MSDProcessCommand
 17450 ;;		_USBStallEndpoint
 17451 ;;		_USBTransferOnePacket
 17452 ;; This function is called by:
 17453 ;;		_APP_DeviceMSDTasks
 17454 ;; This function uses a non-reentrant model
 17455 ;;
 17456                           
 17457                           	psect	text83
 17458  002030                     __ptext83:
 17459                           	opt stack 0
 17460  002030                     _MSDTasks:
 17461                           	opt stack 19
 17462                           
 17463                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17464                           
 17465                           ;incstack = 0
 17466  002030  0E20               	movlw	32
 17467  002032  0100               	movlb	0	; () banked
 17468  002034  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17469  002036  A4D8               	btfss	status,2,c
 17470  002038  0012               	return	
 17471  00203A  D115               	goto	l554
 17472  00203C                     
 17473                           ; BSR set to: 0
 17474                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17475                           
 17476                           ; BSR set to: 0
 17477  00203C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17478  00203E  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17479  002040  B4D8               	btfsc	status,2,c
 17480  002042  D006               	goto	u11830
 17481                           
 17482                           ; BSR set to: 0
 17483  002044  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17484  002048  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17485  00204C  BEDF               	btfsc	indf2,7,c
 17486  00204E  0012               	return	
 17487  002050                     u11830:
 17488                           
 17489                           ; BSR set to: 0
 17490                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17491                           
 17492                           ; BSR set to: 0
 17493  002050  0E00               	movlw	0
 17494  002052  6E52               	movwf	MSDTasks@i,c
 17495  002054                     l14929:
 17496                           
 17497                           ; BSR set to: 0
 17498  002054  0E1E               	movlw	30
 17499  002056  6452               	cpfsgt	MSDTasks@i,c
 17500  002058  D001               	goto	l559
 17501  00205A  D014               	goto	u11850
 17502  00205C                     l559:
 17503                           
 17504                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17505                           
 17506                           ; BSR set to: 0
 17507  00205C  5052               	movf	MSDTasks@i,w,c
 17508  00205E  0D01               	mullw	1
 17509  002060  0E40               	movlw	64
 17510  002062  24F3               	addwf	prodl,w,c
 17511  002064  6ED9               	movwf	fsr2l,c
 17512  002066  0E0D               	movlw	13
 17513  002068  20F4               	addwfc	prodh,w,c
 17514  00206A  6EDA               	movwf	fsr2h,c
 17515  00206C  5052               	movf	MSDTasks@i,w,c
 17516  00206E  0D01               	mullw	1
 17517  002070  0E00               	movlw	low _gblCBW
 17518  002072  24F3               	addwf	prodl,w,c
 17519  002074  6EE1               	movwf	fsr1l,c
 17520  002076  0E01               	movlw	high _gblCBW
 17521  002078  20F4               	addwfc	prodh,w,c
 17522  00207A  6EE2               	movwf	fsr1h,c
 17523  00207C  CFDF FFE7          	movff	indf2,indf1
 17524  002080  2A52               	incf	MSDTasks@i,f,c
 17525  002082  D7E8               	goto	l14929
 17526  002084                     u11850:
 17527                           
 17528                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17529  002084  0100               	movlb	0	; () banked
 17530  002086  EE20 F001          	lfsr	2,1
 17531  00208A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17532  00208C  26D9               	addwf	fsr2l,f,c
 17533  00208E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17534  002090  22DA               	addwfc	fsr2h,f,c
 17535  002092  0E1F               	movlw	31
 17536  002094  18DE               	xorwf	postinc2,w,c
 17537  002096  A4D8               	btfss	status,2,c
 17538  002098  D070               	goto	l561
 17539                           
 17540                           ; BSR set to: 0
 17541  00209A  0E55               	movlw	85
 17542  00209C  0101               	movlb	1	; () banked
 17543  00209E  1900               	xorwf	_gblCBW& (0+255),w,b
 17544  0020A0  E16C               	bnz	l561
 17545  0020A2  0E53               	movlw	83
 17546  0020A4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17547  0020A6  E169               	bnz	l561
 17548  0020A8  0E42               	movlw	66
 17549  0020AA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17550  0020AC  E166               	bnz	l14979
 17551  0020AE  0E43               	movlw	67
 17552  0020B0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17553  0020B2  A4D8               	btfss	status,2,c
 17554  0020B4  D062               	goto	l561
 17555                           
 17556                           ; BSR set to: 1
 17557                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17558  0020B6  0E01               	movlw	1
 17559  0020B8  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17560                           
 17561                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17562  0020BA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17563  0020BC  A4D8               	btfss	status,2,c
 17564  0020BE  D052               	goto	l562
 17565                           
 17566                           ; BSR set to: 1
 17567  0020C0  0E11               	movlw	17
 17568  0020C2  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17569  0020C4  D04F               	goto	l562
 17570                           
 17571                           ; BSR set to: 1
 17572  0020C6  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17573  0020C8  B4D8               	btfsc	status,2,c
 17574  0020CA  D04C               	goto	l562
 17575                           
 17576                           ; BSR set to: 1
 17577  0020CC  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17578  0020D0  0E3F               	movlw	63
 17579  0020D2  164D               	andwf	??_MSDTasks,f,c
 17580  0020D4  A4D8               	btfss	status,2,c
 17581  0020D6  D046               	goto	l562
 17582                           
 17583                           ; BSR set to: 1
 17584                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17585  0020D8  0E55               	movlw	85
 17586  0020DA  010D               	movlb	13	; () banked
 17587  0020DC  6F80               	movwf	128,b	;volatile
 17588  0020DE  0E53               	movlw	83
 17589  0020E0  6F81               	movwf	129,b	;volatile
 17590  0020E2  0E42               	movlw	66
 17591  0020E4  6F82               	movwf	130,b	;volatile
 17592  0020E6  0E53               	movlw	83
 17593  0020E8  6F83               	movwf	131,b	;volatile
 17594                           
 17595                           ; BSR set to: 13
 17596                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17597  0020EA  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17598  0020EE  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17599  0020F2  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17600  0020F6  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17601                           
 17602                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17603  0020FA  0E00               	movlw	0
 17604  0020FC  6F88               	movwf	136,b	;volatile
 17605  0020FE  0E00               	movlw	0
 17606  002100  6F89               	movwf	137,b	;volatile
 17607  002102  0E00               	movlw	0
 17608  002104  6F8A               	movwf	138,b	;volatile
 17609  002106  0E00               	movlw	0
 17610  002108  6F8B               	movwf	139,b	;volatile
 17611                           
 17612                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17613  00210A  0E00               	movlw	0
 17614  00210C  6F8C               	movwf	140,b	;volatile
 17615                           
 17616                           ; BSR set to: 13
 17617                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17618  00210E  0100               	movlb	0	; () banked
 17619  002110  69EC               	setf	_MSDCommandState& (0+255),b
 17620                           
 17621                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17622  002112  0E00               	movlw	0
 17623  002114  6FEB               	movwf	_MSDReadState& (0+255),b
 17624                           
 17625                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17626  002116  0E00               	movlw	0
 17627  002118  6FEA               	movwf	_MSDWriteState& (0+255),b
 17628                           
 17629                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17630  00211A  0E00               	movlw	0
 17631  00211C  6FE9               	movwf	_MSDRetryAttempt& (0+255),b
 17632                           
 17633                           ; BSR set to: 0
 17634                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17635  00211E  0E03               	movlw	3
 17636  002120  0101               	movlb	1	; () banked
 17637  002122  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17638  002124  B4D8               	btfsc	status,2,c
 17639  002126  D008               	goto	l563
 17640                           
 17641                           ; BSR set to: 1
 17642                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17643  002128  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17644  00212A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17645  00212C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17646  00212E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17647                           
 17648                           ; BSR set to: 1
 17649                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17650  002130  0E00               	movlw	0
 17651  002132  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17652                           
 17653                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17654  002134  0E00               	movlw	0
 17655  002136  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17656  002138                     l563:
 17657                           
 17658                           ; BSR set to: 1
 17659                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17660                           
 17661                           ; BSR set to: 1
 17662  002138  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17663  00213A  D002               	goto	l564
 17664                           
 17665                           ; BSR set to: 1
 17666                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17667  00213C  0E01               	movlw	1
 17668  00213E  D001               	goto	L17
 17669  002140                     l564:
 17670                           
 17671                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17672                           
 17673                           ; BSR set to: 0
 17674  002140  0E02               	movlw	2
 17675  002142                     L17:
 17676  002142  0100               	movlb	0	; () banked
 17677  002144  6FED               	movwf	_MSD_State& (0+255),b
 17678                           
 17679                           ; BSR set to: 0
 17680                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17681                           
 17682                           ; BSR set to: 0
 17683  002146  0101               	movlb	1	; () banked
 17684  002148  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17685  00214A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17686  00214C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17687  00214E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17688  002150  B4D8               	btfsc	status,2,c
 17689  002152  D002               	goto	l566
 17690                           
 17691                           ; BSR set to: 1
 17692                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17693  002154  0E00               	movlw	0
 17694  002156  D001               	goto	L18
 17695  002158                     l566:
 17696                           
 17697                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17698                           
 17699                           ; BSR set to: 0
 17700  002158  0E01               	movlw	1
 17701  00215A                     L18:
 17702  00215A  0100               	movlb	0	; () banked
 17703  00215C  6FE7               	movwf	_MSDHostNoData& (0+255),b
 17704                           
 17705                           ; BSR set to: 0
 17706                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17707                           
 17708                           ; BSR set to: 0
 17709  00215E  C10F  F0EC         	movff	_gblCBW+15,_MSDCommandState
 17710                           
 17711                           ;usb_device_msd.c: 454: }
 17712  002162  0012               	return	
 17713  002164                     l562:
 17714                           
 17715                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17716                           
 17717                           ; BSR set to: 0
 17718  002164  0E01               	movlw	1
 17719  002166  6E01               	movwf	USBStallEndpoint@dir,c
 17720  002168  0E02               	movlw	2
 17721  00216A  ECEB  F023         	call	_USBStallEndpoint
 17722                           
 17723                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17724  00216E  0E00               	movlw	0
 17725  002170  6E01               	movwf	USBStallEndpoint@dir,c
 17726  002172  0E02               	movlw	2
 17727  002174  ECEB  F023         	call	_USBStallEndpoint
 17728                           
 17729                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17730  002178  0012               	return	
 17731  00217A                     l561:
 17732  00217A                     l14979:
 17733                           
 17734                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17735  00217A  0E01               	movlw	1
 17736  00217C  6E01               	movwf	USBStallEndpoint@dir,c
 17737  00217E  0E02               	movlw	2
 17738  002180  ECEB  F023         	call	_USBStallEndpoint
 17739                           
 17740                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17741  002184  0E00               	movlw	0
 17742  002186  6E01               	movwf	USBStallEndpoint@dir,c
 17743  002188  0E02               	movlw	2
 17744  00218A  ECEB  F023         	call	_USBStallEndpoint
 17745                           
 17746                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17747  00218E  0E00               	movlw	0
 17748  002190  0101               	movlb	1	; () banked
 17749  002192  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17750                           
 17751                           ; BSR set to: 1
 17752                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17753                           
 17754                           ; BSR set to: 1
 17755  002194  0012               	return	
 17756  002196                     
 17757                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17758                           
 17759                           ; BSR set to: 1
 17760  002196  EC56  F022         	call	_MSDProcessCommand	;wreg free
 17761  00219A  0AFF               	xorlw	255
 17762  00219C  A4D8               	btfss	status,2,c
 17763  00219E  0012               	return	
 17764                           
 17765                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17766  0021A0  0E03               	movlw	3
 17767  0021A2  0100               	movlb	0	; () banked
 17768  0021A4  6FED               	movwf	_MSD_State& (0+255),b
 17769                           
 17770                           ; BSR set to: 0
 17771                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17772  0021A6  0012               	return	
 17773  0021A8                     
 17774                           ; BSR set to: 0
 17775                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17776                           
 17777                           ; BSR set to: 0
 17778  0021A8  EC56  F022         	call	_MSDProcessCommand	;wreg free
 17779  0021AC  0AFF               	xorlw	255
 17780  0021AE  A4D8               	btfss	status,2,c
 17781  0021B0  0012               	return	
 17782                           
 17783                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17784  0021B2  010D               	movlb	13	; () banked
 17785  0021B4  518C               	movf	140,w,b	;volatile
 17786  0021B6  A4D8               	btfss	status,2,c
 17787  0021B8  D008               	goto	l575
 17788                           
 17789                           ; BSR set to: 13
 17790  0021BA  5188               	movf	136,w,b	;volatile
 17791  0021BC  1189               	iorwf	137,w,b	;volatile
 17792  0021BE  118A               	iorwf	138,w,b	;volatile
 17793  0021C0  118B               	iorwf	139,w,b	;volatile
 17794  0021C2  B4D8               	btfsc	status,2,c
 17795  0021C4  D002               	goto	l575
 17796                           
 17797                           ; BSR set to: 13
 17798                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17799  0021C6  0E02               	movlw	2
 17800  0021C8  6F8C               	movwf	140,b	;volatile
 17801  0021CA                     l575:
 17802                           
 17803                           ; BSR set to: 13
 17804                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17805  0021CA  0E03               	movlw	3
 17806  0021CC  0100               	movlb	0	; () banked
 17807  0021CE  6FED               	movwf	_MSD_State& (0+255),b
 17808                           
 17809                           ; BSR set to: 0
 17810                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17811  0021D0  0012               	return	
 17812  0021D2                     
 17813                           ; BSR set to: 0
 17814                           
 17815                           ; BSR set to: 0
 17816  0021D2  C0D5  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17817  0021D6  C0D6  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17818                           
 17819                           ; BSR set to: 0
 17820                           
 17821                           ; BSR set to: 0
 17822                           
 17823                           ; BSR set to: 0
 17824  0021DA  504E               	movf	_MSDTasks$2372,w,c
 17825  0021DC  104F               	iorwf	_MSDTasks$2372+1,w,c
 17826  0021DE  B4D8               	btfsc	status,2,c
 17827  0021E0  D00A               	goto	l577
 17828                           
 17829                           ; BSR set to: 0
 17830  0021E2  C0D5  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17831  0021E6  C0D6  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17832                           
 17833                           ; BSR set to: 0
 17834                           
 17835                           ; BSR set to: 0
 17836                           
 17837                           ; BSR set to: 0
 17838                           
 17839                           ; BSR set to: 0
 17840  0021EA  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17841  0021EE  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17842  0021F2  BEDF               	btfsc	indf2,7,c
 17843  0021F4  0012               	return	
 17844  0021F6                     l577:
 17845                           
 17846                           ; BSR set to: 0
 17847                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17848                           
 17849                           ; BSR set to: 0
 17850  0021F6  0E01               	movlw	1
 17851  0021F8  6E01               	movwf	USBTransferOnePacket@dir,c
 17852  0021FA  0E80               	movlw	128
 17853  0021FC  6E02               	movwf	USBTransferOnePacket@data,c
 17854  0021FE  0E0D               	movlw	13
 17855  002200  6E03               	movwf	USBTransferOnePacket@data+1,c
 17856  002202  0E0D               	movlw	13
 17857  002204  6E04               	movwf	USBTransferOnePacket@len,c
 17858  002206  0E02               	movlw	2
 17859  002208  ECF6  F025         	call	_USBTransferOnePacket
 17860  00220C  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17861  002210  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17862                           
 17863                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17864  002214  0100               	movlb	0	; () banked
 17865  002216  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17866  002218  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17867  00221A  B4D8               	btfsc	status,2,c
 17868  00221C  D006               	goto	u12020
 17869                           
 17870                           ; BSR set to: 0
 17871  00221E  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17872  002222  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17873  002226  BEDF               	btfsc	indf2,7,c
 17874  002228  D00F               	goto	l586
 17875  00222A                     u12020:
 17876                           
 17877                           ; BSR set to: 0
 17878                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17879                           
 17880                           ; BSR set to: 0
 17881  00222A  0E00               	movlw	0
 17882  00222C  6E01               	movwf	USBTransferOnePacket@dir,c
 17883  00222E  0E40               	movlw	64
 17884  002230  6E02               	movwf	USBTransferOnePacket@data,c
 17885  002232  0E0D               	movlw	13
 17886  002234  6E03               	movwf	USBTransferOnePacket@data+1,c
 17887  002236  0E40               	movlw	64
 17888  002238  6E04               	movwf	USBTransferOnePacket@len,c
 17889  00223A  0E02               	movlw	2
 17890  00223C  ECF6  F025         	call	_USBTransferOnePacket
 17891  002240  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17892  002244  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17893  002248                     l586:
 17894                           
 17895                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17896  002248  0E00               	movlw	0
 17897  00224A  0100               	movlb	0	; () banked
 17898  00224C  6FED               	movwf	_MSD_State& (0+255),b
 17899                           
 17900                           ;usb_device_msd.c: 513: break;
 17901  00224E  0012               	return	
 17902  002250                     
 17903                           ; BSR set to: 0
 17904                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17905                           
 17906                           ; BSR set to: 0
 17907  002250  0E00               	movlw	0
 17908  002252  6FED               	movwf	_MSD_State& (0+255),b
 17909                           
 17910                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17911  002254  0E02               	movlw	2
 17912  002256  010D               	movlb	13	; () banked
 17913  002258  6F8C               	movwf	140,b	;volatile
 17914                           
 17915                           ; BSR set to: 13
 17916                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17917  00225A  0E00               	movlw	0
 17918  00225C  6E01               	movwf	USBStallEndpoint@dir,c
 17919  00225E  0E02               	movlw	2
 17920  002260  ECEB  F023         	call	_USBStallEndpoint
 17921                           
 17922                           ;usb_device_msd.c: 521: }
 17923  002264  0012               	return	
 17924  002266                     l554:
 17925  002266  0100               	movlb	0	; () banked
 17926  002268  51ED               	movf	_MSD_State& (0+255),w,b
 17927                           
 17928                           ; Switch size 1, requested type "space"
 17929                           ; Number of cases is 4, Range of values is 0 to 3
 17930                           ; switch strategies available:
 17931                           ; Name         Instructions Cycles
 17932                           ; simple_byte           13     7 (average)
 17933                           ;	Chosen strategy is simple_byte
 17934  00226A  0A00               	xorlw	0	; case 0
 17935  00226C  B4D8               	btfsc	status,2,c
 17936  00226E  D6E6               	goto	l555
 17937  002270  0A01               	xorlw	1	; case 1
 17938  002272  B4D8               	btfsc	status,2,c
 17939  002274  D790               	goto	l571
 17940  002276  0A03               	xorlw	3	; case 2
 17941  002278  B4D8               	btfsc	status,2,c
 17942  00227A  D796               	goto	l573
 17943  00227C  0A01               	xorlw	1	; case 3
 17944  00227E  B4D8               	btfsc	status,2,c
 17945  002280  D7A8               	goto	l576
 17946  002282  D7E6               	goto	l589
 17947  002284                     __end_of_MSDTasks:
 17948                           	opt stack 0
 17949                           tosu	equ	0xFFF
 17950                           tosh	equ	0xFFE
 17951                           tosl	equ	0xFFD
 17952                           pclath	equ	0xFFA
 17953                           tblptru	equ	0xFF8
 17954                           tblptrh	equ	0xFF7
 17955                           tblptrl	equ	0xFF6
 17956                           tablat	equ	0xFF5
 17957                           prodh	equ	0xFF4
 17958                           prodl	equ	0xFF3
 17959                           intcon	equ	0xFF2
 17960                           intcon2	equ	0xFF1
 17961                           intcon3	equ	0xFF0
 17962                           indf0	equ	0xFEF
 17963                           postinc0	equ	0xFEE
 17964                           fsr0h	equ	0xFEA
 17965                           fsr0l	equ	0xFE9
 17966                           wreg	equ	0xFE8
 17967                           indf1	equ	0xFE7
 17968                           postdec1	equ	0xFE5
 17969                           plusw1	equ	0xFE3
 17970                           fsr1h	equ	0xFE2
 17971                           fsr1l	equ	0xFE1
 17972                           indf2	equ	0xFDF
 17973                           postinc2	equ	0xFDE
 17974                           postdec2	equ	0xFDD
 17975                           plusw2	equ	0xFDB
 17976                           fsr2h	equ	0xFDA
 17977                           fsr2l	equ	0xFD9
 17978                           status	equ	0xFD8
 17979                           
 17980 ;; *************** function _MSDProcessCommand *****************
 17981 ;; Defined at:
 17982 ;;		line 553 in file "usb_device_msd.c"
 17983 ;; Parameters:    Size  Location     Type
 17984 ;;		None
 17985 ;; Auto vars:     Size  Location     Type
 17986 ;;		None
 17987 ;; Return value:  Size  Location     Type
 17988 ;;                  1    wreg      unsigned char 
 17989 ;; Registers used:
 17990 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17991 ;; Tracked objects:
 17992 ;;		On entry : 0/0
 17993 ;;		On exit  : 0/0
 17994 ;;		Unchanged: 0/0
 17995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17996 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17997 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17998 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17999 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18000 ;;Total ram usage:        5 bytes
 18001 ;; Hardware stack levels used:    1
 18002 ;; Hardware stack levels required when called:    9
 18003 ;; This function calls:
 18004 ;;		_ExternalFlash_MediaDetect
 18005 ;;		_ExternalFlash_MediaInitialize
 18006 ;;		_MSDProcessCommandMediaAbsent
 18007 ;;		_MSDProcessCommandMediaPresent
 18008 ;; This function is called by:
 18009 ;;		_MSDTasks
 18010 ;; This function uses a non-reentrant model
 18011 ;;
 18012                           
 18013                           	psect	text84
 18014  0044AC                     __ptext84:
 18015                           	opt stack 0
 18016  0044AC                     _MSDProcessCommand:
 18017                           	opt stack 19
 18018                           
 18019                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18020                           
 18021                           ;incstack = 0
 18022  0044AC  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18023  0044B0  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18024  0044B4  D801               	call	u11148
 18025  0044B6  D00A               	goto	u11149
 18026  0044B8                     u11148:
 18027  0044B8  0005               	push	
 18028  0044BA  6EFA               	movwf	pclath,c
 18029  0044BC  0101               	movlb	1	; () banked
 18030  0044BE  51B9               	movf	(_LUN+6)& (0+255),w,b
 18031  0044C0  6EFD               	movwf	tosl,c
 18032  0044C2  51BA               	movf	(_LUN+7)& (0+255),w,b
 18033  0044C4  6EFE               	movwf	tosh,c
 18034  0044C6  6AFF               	clrf	tosu,c
 18035  0044C8  50FA               	movf	pclath,w,c
 18036  0044CA  0012               	return		;indir
 18037  0044CC                     u11149:
 18038  0044CC  0900               	iorlw	0
 18039  0044CE  B4D8               	btfsc	status,2,c
 18040  0044D0  D00C               	goto	u11160
 18041  0044D2  0101               	movlb	1	; () banked
 18042  0044D4  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18043  0044D6  0D01               	mullw	1
 18044  0044D8  0EE8               	movlw	low _SoftDetach
 18045  0044DA  24F3               	addwf	prodl,w,c
 18046  0044DC  6ED9               	movwf	fsr2l,c
 18047  0044DE  0E00               	movlw	high _SoftDetach
 18048  0044E0  20F4               	addwfc	prodh,w,c
 18049  0044E2  6EDA               	movwf	fsr2h,c
 18050  0044E4  04DE               	decf	postinc2,w,c
 18051  0044E6  A4D8               	btfss	status,2,c
 18052  0044E8  D019               	goto	l592
 18053  0044EA                     u11160:
 18054                           
 18055                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18056                           
 18057                           ; BSR set to: 1
 18058  0044EA  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18059  0044EE  0E01               	movlw	1
 18060  0044F0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18061  0044F2  0E00               	movlw	0
 18062  0044F4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18063  0044F6  2A48               	incf	??_MSDProcessCommand,f,c
 18064  0044F8  D003               	goto	u11174
 18065  0044FA                     u11175:
 18066  0044FA  90D8               	bcf	status,0,c
 18067  0044FC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18068  0044FE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18069  004500                     u11174:
 18070  004500  2E48               	decfsz	??_MSDProcessCommand,f,c
 18071  004502  D7FB               	goto	u11175
 18072  004504  1C49               	comf	??_MSDProcessCommand+1,w,c
 18073  004506  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18074  004508  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18075  00450A  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18076  00450C  504B               	movf	??_MSDProcessCommand+3,w,c
 18077  00450E  0101               	movlb	1	; () banked
 18078  004510  1782               	andwf	_gblMediaPresent& (0+255),f,b
 18079  004512  504C               	movf	??_MSDProcessCommand+4,w,c
 18080  004514  1783               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18081                           
 18082                           ; BSR set to: 1
 18083                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18084  004516  EC45  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18085                           
 18086                           ;usb_device_msd.c: 563: }
 18087  00451A  D04E               	goto	l599
 18088  00451C                     l592:
 18089                           
 18090                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18091  00451C  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18092  004520  0E01               	movlw	1
 18093  004522  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18094  004524  0E00               	movlw	0
 18095  004526  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18096  004528  2A48               	incf	??_MSDProcessCommand,f,c
 18097  00452A  D003               	goto	u11184
 18098  00452C                     u11185:
 18099  00452C  90D8               	bcf	status,0,c
 18100  00452E  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18101  004530  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18102  004532                     u11184:
 18103  004532  2E48               	decfsz	??_MSDProcessCommand,f,c
 18104  004534  D7FB               	goto	u11185
 18105  004536  0101               	movlb	1	; () banked
 18106  004538  5182               	movf	_gblMediaPresent& (0+255),w,b
 18107  00453A  1649               	andwf	??_MSDProcessCommand+1,f,c
 18108  00453C  5183               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18109  00453E  164A               	andwf	??_MSDProcessCommand+2,f,c
 18110  004540  5049               	movf	??_MSDProcessCommand+1,w,c
 18111  004542  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18112  004544  A4D8               	btfss	status,2,c
 18113  004546  D036               	goto	l596
 18114                           
 18115                           ; BSR set to: 1
 18116                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18117  004548  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18118  00454C  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18119  004550  D801               	call	u11208
 18120  004552  D009               	goto	u11209
 18121  004554                     u11208:
 18122  004554  0005               	push	
 18123  004556  6EFA               	movwf	pclath,c
 18124  004558  51B3               	movf	_LUN& (0+255),w,b
 18125  00455A  6EFD               	movwf	tosl,c
 18126  00455C  51B4               	movf	(_LUN+1)& (0+255),w,b
 18127  00455E  6EFE               	movwf	tosh,c
 18128  004560  6AFF               	clrf	tosu,c
 18129  004562  50FA               	movf	pclath,w,c
 18130  004564  0012               	return		;indir
 18131  004566                     u11209:
 18132  004566  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18133  004568  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18134  00456A  B4D8               	btfsc	status,2,c
 18135  00456C  D020               	goto	l597
 18136                           
 18137                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18138  00456E  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18139  004572  0E01               	movlw	1
 18140  004574  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18141  004576  0E00               	movlw	0
 18142  004578  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18143  00457A  2A48               	incf	??_MSDProcessCommand,f,c
 18144  00457C  D003               	goto	u11224
 18145  00457E                     u11225:
 18146  00457E  90D8               	bcf	status,0,c
 18147  004580  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18148  004582  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18149  004584                     u11224:
 18150  004584  2E48               	decfsz	??_MSDProcessCommand,f,c
 18151  004586  D7FB               	goto	u11225
 18152  004588  5049               	movf	??_MSDProcessCommand+1,w,c
 18153  00458A  0101               	movlb	1	; () banked
 18154  00458C  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 18155  00458E  504A               	movf	??_MSDProcessCommand+2,w,c
 18156  004590  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18157                           
 18158                           ; BSR set to: 1
 18159                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18160  004592  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18161  004594  0BF0               	andlw	-16
 18162  004596  0906               	iorlw	6
 18163  004598  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18164                           
 18165                           ; BSR set to: 1
 18166                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18167  00459A  0E28               	movlw	40
 18168  00459C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18169                           
 18170                           ; BSR set to: 1
 18171                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18172  00459E  0E00               	movlw	0
 18173  0045A0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18174                           
 18175                           ; BSR set to: 1
 18176                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18177  0045A2  0E01               	movlw	1
 18178  0045A4  010D               	movlb	13	; () banked
 18179  0045A6  6F8C               	movwf	140,b	;volatile
 18180                           
 18181                           ; BSR set to: 13
 18182                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18183  0045A8  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18184                           
 18185                           ;usb_device_msd.c: 589: }
 18186  0045AC  D005               	goto	l599
 18187  0045AE                     l597:
 18188                           
 18189                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18190  0045AE  EC45  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18191                           
 18192                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18193  0045B2  D002               	goto	l599
 18194  0045B4                     l596:
 18195                           
 18196                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18197  0045B4  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18198  0045B8                     l599:
 18199                           
 18200                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18201  0045B8  0100               	movlb	0	; () banked
 18202  0045BA  51EC               	movf	_MSDCommandState& (0+255),w,b
 18203  0045BC  0012               	return	
 18204  0045BE                     __end_of_MSDProcessCommand:
 18205                           	opt stack 0
 18206                           tosu	equ	0xFFF
 18207                           tosh	equ	0xFFE
 18208                           tosl	equ	0xFFD
 18209                           pclath	equ	0xFFA
 18210                           tblptru	equ	0xFF8
 18211                           tblptrh	equ	0xFF7
 18212                           tblptrl	equ	0xFF6
 18213                           tablat	equ	0xFF5
 18214                           prodh	equ	0xFF4
 18215                           prodl	equ	0xFF3
 18216                           intcon	equ	0xFF2
 18217                           intcon2	equ	0xFF1
 18218                           intcon3	equ	0xFF0
 18219                           indf0	equ	0xFEF
 18220                           postinc0	equ	0xFEE
 18221                           fsr0h	equ	0xFEA
 18222                           fsr0l	equ	0xFE9
 18223                           wreg	equ	0xFE8
 18224                           indf1	equ	0xFE7
 18225                           postdec1	equ	0xFE5
 18226                           plusw1	equ	0xFE3
 18227                           fsr1h	equ	0xFE2
 18228                           fsr1l	equ	0xFE1
 18229                           indf2	equ	0xFDF
 18230                           postinc2	equ	0xFDE
 18231                           postdec2	equ	0xFDD
 18232                           plusw2	equ	0xFDB
 18233                           fsr2h	equ	0xFDA
 18234                           fsr2l	equ	0xFD9
 18235                           status	equ	0xFD8
 18236                           
 18237 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18238 ;; Defined at:
 18239 ;;		line 635 in file "usb_device_msd.c"
 18240 ;; Parameters:    Size  Location     Type
 18241 ;;		None
 18242 ;; Auto vars:     Size  Location     Type
 18243 ;;		None
 18244 ;; Return value:  Size  Location     Type
 18245 ;;                  1    wreg      void 
 18246 ;; Registers used:
 18247 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18248 ;; Tracked objects:
 18249 ;;		On entry : 0/0
 18250 ;;		On exit  : 0/0
 18251 ;;		Unchanged: 0/0
 18252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18253 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18254 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18255 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18256 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18257 ;;Total ram usage:        0 bytes
 18258 ;; Hardware stack levels used:    1
 18259 ;; Hardware stack levels required when called:    8
 18260 ;; This function calls:
 18261 ;;		_MSDErrorHandler
 18262 ;;		_MSDProcessCommandMediaPresent
 18263 ;;		_ResetSenseData
 18264 ;; This function is called by:
 18265 ;;		_MSDProcessCommand
 18266 ;; This function uses a non-reentrant model
 18267 ;;
 18268                           
 18269                           	psect	text85
 18270  007A8A                     __ptext85:
 18271                           	opt stack 0
 18272  007A8A                     _MSDProcessCommandMediaAbsent:
 18273                           	opt stack 19
 18274                           
 18275                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18276                           
 18277                           ; BSR set to: 0
 18278                           ;incstack = 0
 18279  007A8A  D01E               	goto	l603
 18280  007A8C                     
 18281                           ;usb_device_msd.c: 646: ResetSenseData();
 18282  007A8C  EC76  F03D         	call	_ResetSenseData	;wreg free
 18283                           
 18284                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18285  007A90  0101               	movlb	1	; () banked
 18286  007A92  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18287  007A94  0BF0               	andlw	-16
 18288  007A96  0902               	iorlw	2
 18289  007A98  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18290                           
 18291                           ; BSR set to: 1
 18292                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18293  007A9A  0E3A               	movlw	58
 18294  007A9C  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18295                           
 18296                           ; BSR set to: 1
 18297                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18298  007A9E  0E00               	movlw	0
 18299  007AA0  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18300                           
 18301                           ; BSR set to: 1
 18302                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18303  007AA2  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18304                           
 18305                           ;usb_device_msd.c: 655: break;
 18306  007AA6  0012               	return	
 18307  007AA8                     
 18308                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18309  007AA8  0E01               	movlw	1
 18310  007AAA  010D               	movlb	13	; () banked
 18311  007AAC  6F8C               	movwf	140,b	;volatile
 18312                           
 18313                           ; BSR set to: 13
 18314                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18315  007AAE  0100               	movlb	0	; () banked
 18316  007AB0  69EC               	setf	_MSDCommandState& (0+255),b
 18317                           
 18318                           ;usb_device_msd.c: 665: break;
 18319  007AB2  0012               	return	
 18320  007AB4                     
 18321                           ; BSR set to: 0
 18322                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18323                           
 18324                           ; BSR set to: 0
 18325  007AB4  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18326                           
 18327                           ;usb_device_msd.c: 671: break;
 18328  007AB8  0012               	return	
 18329  007ABA                     
 18330                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18331  007ABA  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18332                           
 18333                           ;usb_device_msd.c: 677: break;
 18334  007ABE  0012               	return	
 18335  007AC0                     
 18336                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18337  007AC0  0E7F               	movlw	127
 18338  007AC2  ECF2  F024         	call	_MSDErrorHandler
 18339                           
 18340                           ;usb_device_msd.c: 685: }
 18341                           
 18342                           ;usb_device_msd.c: 684: break;
 18343  007AC6  0012               	return	
 18344  007AC8                     l603:
 18345  007AC8  0100               	movlb	0	; () banked
 18346  007ACA  51EC               	movf	_MSDCommandState& (0+255),w,b
 18347                           
 18348                           ; Switch size 1, requested type "space"
 18349                           ; Number of cases is 5, Range of values is 0 to 253
 18350                           ; switch strategies available:
 18351                           ; Name         Instructions Cycles
 18352                           ; simple_byte           16     9 (average)
 18353                           ;	Chosen strategy is simple_byte
 18354  007ACC  0A00               	xorlw	0	; case 0
 18355  007ACE  B4D8               	btfsc	status,2,c
 18356  007AD0  D7EB               	goto	l606
 18357  007AD2  0A03               	xorlw	3	; case 3
 18358  007AD4  B4D8               	btfsc	status,2,c
 18359  007AD6  D7DA               	goto	l604
 18360  007AD8  0A11               	xorlw	17	; case 18
 18361  007ADA  B4D8               	btfsc	status,2,c
 18362  007ADC  D7EB               	goto	l608
 18363  007ADE  0A0C               	xorlw	12	; case 30
 18364  007AE0  B4D8               	btfsc	status,2,c
 18365  007AE2  D7E2               	goto	l606
 18366  007AE4  0AE3               	xorlw	227	; case 253
 18367  007AE6  B4D8               	btfsc	status,2,c
 18368  007AE8  D7E8               	goto	l609
 18369  007AEA  D7EA               	goto	l610
 18370  007AEC                     __end_of_MSDProcessCommandMediaAbsent:
 18371                           	opt stack 0
 18372                           tosu	equ	0xFFF
 18373                           tosh	equ	0xFFE
 18374                           tosl	equ	0xFFD
 18375                           pclath	equ	0xFFA
 18376                           tblptru	equ	0xFF8
 18377                           tblptrh	equ	0xFF7
 18378                           tblptrl	equ	0xFF6
 18379                           tablat	equ	0xFF5
 18380                           prodh	equ	0xFF4
 18381                           prodl	equ	0xFF3
 18382                           intcon	equ	0xFF2
 18383                           intcon2	equ	0xFF1
 18384                           intcon3	equ	0xFF0
 18385                           indf0	equ	0xFEF
 18386                           postinc0	equ	0xFEE
 18387                           fsr0h	equ	0xFEA
 18388                           fsr0l	equ	0xFE9
 18389                           wreg	equ	0xFE8
 18390                           indf1	equ	0xFE7
 18391                           postdec1	equ	0xFE5
 18392                           plusw1	equ	0xFE3
 18393                           fsr1h	equ	0xFE2
 18394                           fsr1l	equ	0xFE1
 18395                           indf2	equ	0xFDF
 18396                           postinc2	equ	0xFDE
 18397                           postdec2	equ	0xFDD
 18398                           plusw2	equ	0xFDB
 18399                           fsr2h	equ	0xFDA
 18400                           fsr2l	equ	0xFD9
 18401                           status	equ	0xFD8
 18402                           
 18403 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18404 ;; Defined at:
 18405 ;;		line 712 in file "usb_device_msd.c"
 18406 ;; Parameters:    Size  Location     Type
 18407 ;;		None
 18408 ;; Auto vars:     Size  Location     Type
 18409 ;;  capacity        4   66[COMRAM] struct .
 18410 ;;  sectorSize      4   62[COMRAM] struct .
 18411 ;;  i               1   70[COMRAM] unsigned char 
 18412 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18413 ;; Return value:  Size  Location     Type
 18414 ;;                  1    wreg      void 
 18415 ;; Registers used:
 18416 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18417 ;; Tracked objects:
 18418 ;;		On entry : 0/0
 18419 ;;		On exit  : 0/0
 18420 ;;		Unchanged: 0/0
 18421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18422 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18423 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18424 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18425 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18426 ;;Total ram usage:       14 bytes
 18427 ;; Hardware stack levels used:    1
 18428 ;; Hardware stack levels required when called:    7
 18429 ;; This function calls:
 18430 ;;		_ExternalFlash_CapacityRead
 18431 ;;		_ExternalFlash_SectorSizeRead
 18432 ;;		_ExternalFlash_WriteProtectStateGet
 18433 ;;		_MSDCheckForErrorCases
 18434 ;;		_MSDComputeDeviceInAndResidue
 18435 ;;		_MSDErrorHandler
 18436 ;;		_MSDReadHandler
 18437 ;;		_MSDWriteHandler
 18438 ;;		_ResetSenseData
 18439 ;;		_USBTransferOnePacket
 18440 ;;		_memcpy
 18441 ;; This function is called by:
 18442 ;;		_MSDProcessCommand
 18443 ;;		_MSDProcessCommandMediaAbsent
 18444 ;; This function uses a non-reentrant model
 18445 ;;
 18446                           
 18447                           	psect	text86
 18448  00086C                     __ptext86:
 18449                           	opt stack 0
 18450  00086C                     _MSDProcessCommandMediaPresent:
 18451                           	opt stack 20
 18452                           
 18453                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18454                           
 18455                           ;incstack = 0
 18456  00086C  D1B9               	goto	l614
 18457  00086E                     
 18458                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18459  00086E  EC5E  F018         	call	_MSDReadHandler	;wreg free
 18460  000872  0900               	iorlw	0
 18461  000874  A4D8               	btfss	status,2,c
 18462  000876  0012               	return	
 18463                           
 18464                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18465  000878  0100               	movlb	0	; () banked
 18466  00087A  69EC               	setf	_MSDCommandState& (0+255),b
 18467                           
 18468                           ; BSR set to: 0
 18469                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18470  00087C  0012               	return	
 18471  00087E                     
 18472                           ; BSR set to: 0
 18473                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18474                           
 18475                           ; BSR set to: 0
 18476  00087E  EC48  F00C         	call	_MSDWriteHandler	;wreg free
 18477  000882  0900               	iorlw	0
 18478  000884  A4D8               	btfss	status,2,c
 18479  000886  0012               	return	
 18480                           
 18481                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18482  000888  0100               	movlb	0	; () banked
 18483  00088A  69EC               	setf	_MSDCommandState& (0+255),b
 18484                           
 18485                           ; BSR set to: 0
 18486                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18487  00088C  0012               	return	
 18488  00088E                     
 18489                           ; BSR set to: 0
 18490                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18491                           
 18492                           ; BSR set to: 0
 18493  00088E  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18494  000890  A4D8               	btfss	status,2,c
 18495  000892  D002               	goto	l621
 18496                           
 18497                           ; BSR set to: 0
 18498                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18499  000894  69EC               	setf	_MSDCommandState& (0+255),b
 18500                           
 18501                           ;usb_device_msd.c: 751: break;
 18502  000896  0012               	return	
 18503  000898                     l621:
 18504                           
 18505                           ; BSR set to: 0
 18506                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18507  000898  C112  F0DC         	movff	_gblCBW+18,_TransferLength+1
 18508                           
 18509                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18510  00089C  C113  F0DB         	movff	_gblCBW+19,_TransferLength
 18511                           
 18512                           ; BSR set to: 0
 18513                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18514  0008A0  C0DB  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18515  0008A4  C0DC  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18516  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18517  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18518  0008AC  EC31  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18519  0008B0  0900               	iorlw	0
 18520  0008B2  A4D8               	btfss	status,2,c
 18521  0008B4  0012               	return	
 18522                           
 18523                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18524                           
 18525                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18526  0008B6  0E00               	movlw	0
 18527  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18528  0008BA  0E24               	movlw	36
 18529  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18530  0008BE  EC1E  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18531                           
 18532                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18533  0008C2  0E00               	movlw	0
 18534  0008C4  6E01               	movwf	memcpy@d1,c
 18535  0008C6  0E06               	movlw	6
 18536  0008C8  6E02               	movwf	memcpy@d1+1,c
 18537  0008CA  0E4A               	movlw	low _inq_resp
 18538  0008CC  6E03               	movwf	memcpy@s1,c
 18539  0008CE  0E9F               	movlw	high _inq_resp
 18540  0008D0  6E04               	movwf	memcpy@s1+1,c
 18541  0008D2  5003               	movf	memcpy@s1,w,c
 18542  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18543  0008D6  A4D8               	btfss	status,2,c
 18544  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18545  0008DA  6E05               	movwf	memcpy@s1+2,c
 18546  0008DC  0E00               	movlw	0
 18547  0008DE  6E07               	movwf	memcpy@n+1,c
 18548  0008E0  0E24               	movlw	36
 18549  0008E2  6E06               	movwf	memcpy@n,c
 18550  0008E4  ECE1  F03C         	call	_memcpy	;wreg free
 18551                           
 18552                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18553  0008E8  0EFD               	movlw	253
 18554  0008EA  0100               	movlb	0	; () banked
 18555  0008EC  6FEC               	movwf	_MSDCommandState& (0+255),b
 18556                           
 18557                           ;usb_device_msd.c: 773: break;
 18558  0008EE  0012               	return	
 18559  0008F0                     
 18560                           ; BSR set to: 0
 18561                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18562                           
 18563                           ; BSR set to: 0
 18564  0008F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18565  0008F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18566  0008F8  D801               	call	u9848
 18567  0008FA  D00A               	goto	u9849
 18568  0008FC                     u9848:
 18569  0008FC  0005               	push	
 18570  0008FE  6EFA               	movwf	pclath,c
 18571  000900  0101               	movlb	1	; () banked
 18572  000902  51B5               	movf	(_LUN+2)& (0+255),w,b
 18573  000904  6EFD               	movwf	tosl,c
 18574  000906  51B6               	movf	(_LUN+3)& (0+255),w,b
 18575  000908  6EFE               	movwf	tosh,c
 18576  00090A  6AFF               	clrf	tosu,c
 18577  00090C  50FA               	movf	pclath,w,c
 18578  00090E  0012               	return		;indir
 18579  000910                     u9849:
 18580  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18581  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18582  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18583  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18584                           
 18585                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18586  000920  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18587  000924  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18588  000928  D801               	call	u9858
 18589  00092A  D00A               	goto	u9859
 18590  00092C                     u9858:
 18591  00092C  0005               	push	
 18592  00092E  6EFA               	movwf	pclath,c
 18593  000930  0101               	movlb	1	; () banked
 18594  000932  51B7               	movf	(_LUN+4)& (0+255),w,b
 18595  000934  6EFD               	movwf	tosl,c
 18596  000936  51B8               	movf	(_LUN+5)& (0+255),w,b
 18597  000938  6EFE               	movwf	tosh,c
 18598  00093A  6AFF               	clrf	tosu,c
 18599  00093C  50FA               	movf	pclath,w,c
 18600  00093E  0012               	return		;indir
 18601  000940                     u9859:
 18602  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18603  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18604  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18605  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18606                           
 18607                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18608  00094C  EE26 F000          	lfsr	2,1536
 18609  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18610                           
 18611                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18612  000954  EE26 F001          	lfsr	2,1537	;volatile
 18613  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18614                           
 18615                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18616  00095C  EE26 F002          	lfsr	2,1538	;volatile
 18617  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18618                           
 18619                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18620  000964  EE26 F003          	lfsr	2,1539	;volatile
 18621  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18622                           
 18623                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18624  00096C  EE26 F004          	lfsr	2,1540	;volatile
 18625  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18626                           
 18627                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18628  000974  EE26 F005          	lfsr	2,1541	;volatile
 18629  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18630                           
 18631                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18632  00097C  EE26 F006          	lfsr	2,1542	;volatile
 18633  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18634                           
 18635                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18636  000984  EE26 F007          	lfsr	2,1543	;volatile
 18637  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18638                           
 18639                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18640  00098C  0E00               	movlw	0
 18641  00098E  0100               	movlb	0	; () banked
 18642  000990  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18643  000992  0E08               	movlw	8
 18644  000994  6FDB               	movwf	_TransferLength& (0+255),b
 18645                           
 18646                           ; BSR set to: 0
 18647                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18648  000996  0E00               	movlw	0
 18649  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18650  00099A  0E08               	movlw	8
 18651  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18652  00099E  EC1E  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18653                           
 18654                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18655  0009A2  0EFD               	movlw	253
 18656  0009A4  0100               	movlb	0	; () banked
 18657  0009A6  6FEC               	movwf	_MSDCommandState& (0+255),b
 18658                           
 18659                           ;usb_device_msd.c: 802: break;
 18660  0009A8  0012               	return	
 18661  0009AA                     
 18662                           ; BSR set to: 0
 18663                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18664                           
 18665                           ; BSR set to: 0
 18666  0009AA  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18667  0009AC  A4D8               	btfss	status,2,c
 18668  0009AE  D002               	goto	l625
 18669                           
 18670                           ; BSR set to: 0
 18671                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18672  0009B0  69EC               	setf	_MSDCommandState& (0+255),b
 18673                           
 18674                           ;usb_device_msd.c: 814: break;
 18675  0009B2  0012               	return	
 18676  0009B4                     l625:
 18677                           
 18678                           ; BSR set to: 0
 18679                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18680                           
 18681                           ; BSR set to: 0
 18682  0009B4  0E00               	movlw	0
 18683  0009B6  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18684  0009B8  0E12               	movlw	18
 18685  0009BA  6FDB               	movwf	_TransferLength& (0+255),b
 18686                           
 18687                           ; BSR set to: 0
 18688                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18689  0009BC  0E00               	movlw	0
 18690  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18691  0009C0  0E12               	movlw	18
 18692  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18693  0009C4  EC1E  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18694                           
 18695                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18696  0009C8  0E00               	movlw	0
 18697  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18698  0009CC                     l13063:
 18699  0009CC  0E11               	movlw	17
 18700  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18701  0009D0  D001               	goto	l626
 18702  0009D2  D014               	goto	u9880
 18703  0009D4                     l626:
 18704                           
 18705                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18706  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18707  0009D6  0D01               	mullw	1
 18708  0009D8  0E1F               	movlw	low _gblSenseData
 18709  0009DA  24F3               	addwf	prodl,w,c
 18710  0009DC  6ED9               	movwf	fsr2l,c
 18711  0009DE  0E01               	movlw	high _gblSenseData
 18712  0009E0  20F4               	addwfc	prodh,w,c
 18713  0009E2  6EDA               	movwf	fsr2h,c
 18714  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18715  0009E6  0D01               	mullw	1
 18716  0009E8  0E00               	movlw	0
 18717  0009EA  24F3               	addwf	prodl,w,c
 18718  0009EC  6EE1               	movwf	fsr1l,c
 18719  0009EE  0E06               	movlw	6
 18720  0009F0  20F4               	addwfc	prodh,w,c
 18721  0009F2  6EE2               	movwf	fsr1h,c
 18722  0009F4  CFDF FFE7          	movff	indf2,indf1
 18723  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18724  0009FA  D7E8               	goto	l13063
 18725  0009FC                     u9880:
 18726                           
 18727                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18728  0009FC  0EFD               	movlw	253
 18729  0009FE  0100               	movlb	0	; () banked
 18730  000A00  6FEC               	movwf	_MSDCommandState& (0+255),b
 18731                           
 18732                           ;usb_device_msd.c: 827: break;
 18733  000A02  0012               	return	
 18734  000A04                     l628:
 18735                           
 18736                           ; BSR set to: 0
 18737                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18738  000A04  0E03               	movlw	3
 18739  000A06  CFE8 F600          	movff	wreg,1536
 18740                           
 18741                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18742  000A0A  0E00               	movlw	0
 18743  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18747  000A10  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18748  000A14  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18749  000A18  D801               	call	u9898
 18750  000A1A  D00A               	goto	u9899
 18751  000A1C                     u9898:
 18752  000A1C  0005               	push	
 18753  000A1E  6EFA               	movwf	pclath,c
 18754  000A20  0101               	movlb	1	; () banked
 18755  000A22  51BD               	movf	(_LUN+10)& (0+255),w,b
 18756  000A24  6EFD               	movwf	tosl,c
 18757  000A26  51BE               	movf	(_LUN+11)& (0+255),w,b
 18758  000A28  6EFE               	movwf	tosh,c
 18759  000A2A  6AFF               	clrf	tosu,c
 18760  000A2C  50FA               	movf	pclath,w,c
 18761  000A2E  0012               	return		;indir
 18762  000A30                     u9899:
 18763  000A30  0900               	iorlw	0
 18764  000A32  A4D8               	btfss	status,2,c
 18765  000A34  D004               	goto	l630
 18766  000A36  0E00               	movlw	0
 18767  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18768  000A3A  0E00               	movlw	0
 18769  000A3C  D003               	goto	L19
 18770  000A3E                     l630:
 18771  000A3E  0E00               	movlw	0
 18772  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18773  000A42  0E80               	movlw	128
 18774  000A44                     L19:
 18775  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18776  000A46  EE26 F002          	lfsr	2,1538	;volatile
 18777  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18778                           
 18779                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18780  000A4E  0E00               	movlw	0
 18781  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 18782                           
 18783                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18784  000A54  0E00               	movlw	0
 18785  000A56  0100               	movlb	0	; () banked
 18786  000A58  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18787  000A5A  0E04               	movlw	4
 18788  000A5C  6FDB               	movwf	_TransferLength& (0+255),b
 18789                           
 18790                           ; BSR set to: 0
 18791                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18792  000A5E  0E00               	movlw	0
 18793  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18794  000A62  0E04               	movlw	4
 18795  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18796  000A66  EC1E  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18797                           
 18798                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18799  000A6A  0EFD               	movlw	253
 18800  000A6C  0100               	movlb	0	; () banked
 18801  000A6E  6FEC               	movwf	_MSDCommandState& (0+255),b
 18802                           
 18803                           ;usb_device_msd.c: 839: break;
 18804  000A70  0012               	return	
 18805  000A72                     
 18806                           ; BSR set to: 0
 18807                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18808                           
 18809                           ; BSR set to: 0
 18810  000A72  0101               	movlb	1	; () banked
 18811  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18812  000A76  0BF0               	andlw	-16
 18813  000A78  0905               	iorlw	5
 18814  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18815                           
 18816                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18817  000A7C  0E20               	movlw	32
 18818  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18819                           
 18820                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18821  000A80  0E00               	movlw	0
 18822  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18823                           
 18824                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18825  000A84  0E01               	movlw	1
 18826  000A86  010D               	movlb	13	; () banked
 18827  000A88  6F8C               	movwf	140,b	;volatile
 18828                           
 18829                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18830  000A8A  0E00               	movlw	0
 18831  000A8C  6F88               	movwf	136,b	;volatile
 18832  000A8E  0E00               	movlw	0
 18833  000A90  6F89               	movwf	137,b	;volatile
 18834  000A92  0E00               	movlw	0
 18835  000A94  6F8A               	movwf	138,b	;volatile
 18836  000A96  0E00               	movlw	0
 18837  000A98  6F8B               	movwf	139,b	;volatile
 18838                           
 18839                           ; BSR set to: 13
 18840                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18841  000A9A  0100               	movlb	0	; () banked
 18842  000A9C  69EC               	setf	_MSDCommandState& (0+255),b
 18843                           
 18844                           ;usb_device_msd.c: 848: break;
 18845  000A9E  0012               	return	
 18846  000AA0                     
 18847                           ; BSR set to: 0
 18848                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18849                           
 18850                           ; BSR set to: 0
 18851  000AA0  0E00               	movlw	0
 18852  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18853  000AA4  0E00               	movlw	0
 18854  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18855  000AA8  0E00               	movlw	0
 18856  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18857  000AAC  0E00               	movlw	0
 18858  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18859  000AB0  EC31  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18860  000AB4  0900               	iorlw	0
 18861  000AB6  A4D8               	btfss	status,2,c
 18862  000AB8  0012               	return	
 18863                           
 18864                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18865                           
 18866                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18867  000ABA  0101               	movlb	1	; () banked
 18868  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18869  000ABE  0B0F               	andlw	15
 18870  000AC0  0A06               	xorlw	6
 18871  000AC2  A4D8               	btfss	status,2,c
 18872  000AC4  D007               	goto	l636
 18873                           
 18874                           ; BSR set to: 1
 18875  000AC6  010D               	movlb	13	; () banked
 18876  000AC8  058C               	decf	140,w,b	;volatile
 18877  000ACA  A4D8               	btfss	status,2,c
 18878  000ACC  D003               	goto	l636
 18879                           
 18880                           ; BSR set to: 13
 18881                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18882  000ACE  0100               	movlb	0	; () banked
 18883  000AD0  69EC               	setf	_MSDCommandState& (0+255),b
 18884                           
 18885                           ;usb_device_msd.c: 870: }
 18886  000AD2  0012               	return	
 18887  000AD4                     l636:
 18888                           
 18889                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18890                           
 18891                           ; BSR set to: 0
 18892  000AD4  EC76  F03D         	call	_ResetSenseData	;wreg free
 18893                           
 18894                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18895  000AD8  0E00               	movlw	0
 18896  000ADA  010D               	movlb	13	; () banked
 18897  000ADC  6F88               	movwf	136,b	;volatile
 18898  000ADE  0E00               	movlw	0
 18899  000AE0  6F89               	movwf	137,b	;volatile
 18900  000AE2  0E00               	movlw	0
 18901  000AE4  6F8A               	movwf	138,b	;volatile
 18902  000AE6  0E00               	movlw	0
 18903  000AE8  6F8B               	movwf	139,b	;volatile
 18904                           
 18905                           ; BSR set to: 13
 18906                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18907  000AEA  0100               	movlb	0	; () banked
 18908  000AEC  69EC               	setf	_MSDCommandState& (0+255),b
 18909                           
 18910                           ; BSR set to: 0
 18911                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18912  000AEE  0012               	return	
 18913  000AF0                     
 18914                           ; BSR set to: 0
 18915                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18916                           
 18917                           ; BSR set to: 0
 18918                           
 18919                           ; BSR set to: 0
 18920  000AF0  0E00               	movlw	0
 18921  000AF2  010D               	movlb	13	; () banked
 18922  000AF4  6F88               	movwf	136,b	;volatile
 18923  000AF6  0E00               	movlw	0
 18924  000AF8  6F89               	movwf	137,b	;volatile
 18925  000AFA  0E00               	movlw	0
 18926  000AFC  6F8A               	movwf	138,b	;volatile
 18927  000AFE  0E00               	movlw	0
 18928  000B00  6F8B               	movwf	139,b	;volatile
 18929                           
 18930                           ; BSR set to: 13
 18931                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18932  000B02  0100               	movlb	0	; () banked
 18933  000B04  69EC               	setf	_MSDCommandState& (0+255),b
 18934                           
 18935                           ;usb_device_msd.c: 885: break;
 18936  000B06  0012               	return	
 18937  000B08                     
 18938                           ; BSR set to: 0
 18939                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18940                           
 18941                           ; BSR set to: 0
 18942  000B08  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 18943  000B0A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18944  000B0C  B4D8               	btfsc	status,2,c
 18945  000B0E  D006               	goto	u9950
 18946                           
 18947                           ; BSR set to: 0
 18948  000B10  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 18949  000B14  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18950  000B18  BEDF               	btfsc	indf2,7,c
 18951  000B1A  0012               	return	
 18952  000B1C                     u9950:
 18953                           
 18954                           ; BSR set to: 0
 18955                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18956                           
 18957                           ; BSR set to: 0
 18958  000B1C  0101               	movlb	1	; () banked
 18959  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18960  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18961  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18962  000B24  E104               	bnz	u9960
 18963  000B26  0E40               	movlw	64
 18964  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18965  000B2A  A0D8               	btfss	status,0,c
 18966  000B2C  D009               	goto	l644
 18967  000B2E                     u9960:
 18968                           
 18969                           ; BSR set to: 1
 18970                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18971  000B2E  0E40               	movlw	64
 18972  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18973                           
 18974                           ; BSR set to: 1
 18975                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18976  000B32  0E40               	movlw	64
 18977  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18978  000B36  0E00               	movlw	0
 18979  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18980  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18981  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 18982                           
 18983                           ;usb_device_msd.c: 900: }
 18984  000B3E  D00A               	goto	l645
 18985  000B40                     l644:
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 18989  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 18990                           
 18991                           ; BSR set to: 1
 18992                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 18993  000B44  0E00               	movlw	0
 18994  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 18995  000B48  0E00               	movlw	0
 18996  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 18997  000B4C  0E00               	movlw	0
 18998  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 18999  000B50  0E00               	movlw	0
 19000  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19001  000B54                     l645:
 19002                           
 19003                           ; BSR set to: 1
 19004                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19005                           
 19006                           ; BSR set to: 1
 19007  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19008  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19009  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19010  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19011  000B5C  0100               	movlb	0	; () banked
 19012  000B5E  5DDB               	subwf	_TransferLength& (0+255),w,b
 19013  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19014  000B62  59DC               	subwfb	(_TransferLength+1)& (0+255),w,b
 19015  000B64  A0D8               	btfss	status,0,c
 19016  000B66  D005               	goto	l646
 19017                           
 19018                           ; BSR set to: 0
 19019                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19020  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19021  000B6A  5FDB               	subwf	_TransferLength& (0+255),f,b
 19022  000B6C  0E00               	movlw	0
 19023  000B6E  5BDC               	subwfb	(_TransferLength+1)& (0+255),f,b
 19024                           
 19025                           ;usb_device_msd.c: 918: }
 19026  000B70  D01A               	goto	u9990
 19027  000B72                     l646:
 19028                           
 19029                           ; BSR set to: 0
 19030                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19031                           
 19032                           ; BSR set to: 0
 19033  000B72  0E00               	movlw	0
 19034  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19035  000B76  D013               	goto	l648
 19036  000B78                     
 19037                           ; BSR set to: 0
 19038                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19039                           
 19040                           ; BSR set to: 0
 19041  000B78  51DB               	movf	_TransferLength& (0+255),w,b
 19042  000B7A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19043  000B7C  B4D8               	btfsc	status,2,c
 19044  000B7E  D004               	goto	l650
 19045                           
 19046                           ; BSR set to: 0
 19047                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19048  000B80  07DB               	decf	_TransferLength& (0+255),f,b
 19049  000B82  A0D8               	btfss	status,0,c
 19050  000B84  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19051                           
 19052                           ;usb_device_msd.c: 932: }
 19053  000B86  D00A               	goto	l651
 19054  000B88                     l650:
 19055                           
 19056                           ; BSR set to: 0
 19057                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19058                           
 19059                           ; BSR set to: 0
 19060  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19061  000B8A  0D01               	mullw	1
 19062  000B8C  0E00               	movlw	0
 19063  000B8E  24F3               	addwf	prodl,w,c
 19064  000B90  6ED9               	movwf	fsr2l,c
 19065  000B92  0E06               	movlw	6
 19066  000B94  20F4               	addwfc	prodh,w,c
 19067  000B96  6EDA               	movwf	fsr2h,c
 19068  000B98  0E00               	movlw	0
 19069  000B9A  6EDF               	movwf	indf2,c
 19070  000B9C                     l651:
 19071                           
 19072                           ; BSR set to: 0
 19073                           
 19074                           ; BSR set to: 0
 19075  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19076  000B9E                     l648:
 19077                           
 19078                           ; BSR set to: 0
 19079                           
 19080                           ; BSR set to: 0
 19081  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19082  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19083  000BA2  A0D8               	btfss	status,0,c
 19084  000BA4  D7E9               	goto	l649
 19085  000BA6                     u9990:
 19086                           
 19087                           ; BSR set to: 0
 19088                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19089                           
 19090                           ; BSR set to: 0
 19091                           
 19092                           ; BSR set to: 0
 19093  000BA6  0E01               	movlw	1
 19094  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19095  000BAA  0E00               	movlw	0
 19096  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19097  000BAE  0E06               	movlw	6
 19098  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19099  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19100  000BB6  0E02               	movlw	2
 19101  000BB8  ECF6  F025         	call	_USBTransferOnePacket
 19102  000BBC  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19103  000BC0  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19104                           
 19105                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19106  000BC4  0101               	movlb	1	; () banked
 19107  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19108  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19109  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19110  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19111  000BCE  A4D8               	btfss	status,2,c
 19112  000BD0  0012               	return	
 19113                           
 19114                           ; BSR set to: 1
 19115                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19116  000BD2  0100               	movlb	0	; () banked
 19117  000BD4  69EC               	setf	_MSDCommandState& (0+255),b
 19118                           
 19119                           ; BSR set to: 0
 19120                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19121                           
 19122                           ; BSR set to: 0
 19123                           
 19124                           ;usb_device_msd.c: 949: break;
 19125  000BD6  0012               	return	
 19126  000BD8                     
 19127                           ; BSR set to: 0
 19128                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19129                           
 19130                           ; BSR set to: 0
 19131                           
 19132                           ;usb_device_msd.c: 954: default:
 19133                           
 19134                           ; BSR set to: 0
 19135  000BD8  0E7F               	movlw	127
 19136  000BDA  ECF2  F024         	call	_MSDErrorHandler
 19137                           
 19138                           ;usb_device_msd.c: 960: }
 19139                           
 19140                           ;usb_device_msd.c: 959: break;
 19141  000BDE  0012               	return	
 19142  000BE0                     l614:
 19143  000BE0  0100               	movlb	0	; () banked
 19144  000BE2  51EC               	movf	_MSDCommandState& (0+255),w,b
 19145                           
 19146                           ; Switch size 1, requested type "space"
 19147                           ; Number of cases is 12, Range of values is 0 to 254
 19148                           ; switch strategies available:
 19149                           ; Name         Instructions Cycles
 19150                           ; simple_byte           37    19 (average)
 19151                           ;	Chosen strategy is simple_byte
 19152  000BE4  0A00               	xorlw	0	; case 0
 19153  000BE6  B4D8               	btfsc	status,2,c
 19154  000BE8  D75B               	goto	l634
 19155  000BEA  0A03               	xorlw	3	; case 3
 19156  000BEC  B4D8               	btfsc	status,2,c
 19157  000BEE  D6DD               	goto	l624
 19158  000BF0  0A11               	xorlw	17	; case 18
 19159  000BF2  B4D8               	btfsc	status,2,c
 19160  000BF4  D64C               	goto	l620
 19161  000BF6  0A08               	xorlw	8	; case 26
 19162  000BF8  B4D8               	btfsc	status,2,c
 19163  000BFA  D704               	goto	l628
 19164  000BFC  0A01               	xorlw	1	; case 27
 19165  000BFE  B4D8               	btfsc	status,2,c
 19166  000C00  D777               	goto	l638
 19167  000C02  0A05               	xorlw	5	; case 30
 19168  000C04  B4D8               	btfsc	status,2,c
 19169  000C06  D735               	goto	l633
 19170  000C08  0A3B               	xorlw	59	; case 37
 19171  000C0A  B4D8               	btfsc	status,2,c
 19172  000C0C  D671               	goto	l623
 19173  000C0E  0A0D               	xorlw	13	; case 40
 19174  000C10  B4D8               	btfsc	status,2,c
 19175  000C12  D62D               	goto	l615
 19176  000C14  0A02               	xorlw	2	; case 42
 19177  000C16  B4D8               	btfsc	status,2,c
 19178  000C18  D632               	goto	l618
 19179  000C1A  0A05               	xorlw	5	; case 47
 19180  000C1C  B4D8               	btfsc	status,2,c
 19181  000C1E  D768               	goto	l638
 19182  000C20  0AD2               	xorlw	210	; case 253
 19183  000C22  B4D8               	btfsc	status,2,c
 19184  000C24  D771               	goto	l640
 19185  000C26  0A03               	xorlw	3	; case 254
 19186  000C28  D7D7               	goto	l654
 19187  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19188                           	opt stack 0
 19189                           tosu	equ	0xFFF
 19190                           tosh	equ	0xFFE
 19191                           tosl	equ	0xFFD
 19192                           pclath	equ	0xFFA
 19193                           tblptru	equ	0xFF8
 19194                           tblptrh	equ	0xFF7
 19195                           tblptrl	equ	0xFF6
 19196                           tablat	equ	0xFF5
 19197                           prodh	equ	0xFF4
 19198                           prodl	equ	0xFF3
 19199                           intcon	equ	0xFF2
 19200                           intcon2	equ	0xFF1
 19201                           intcon3	equ	0xFF0
 19202                           indf0	equ	0xFEF
 19203                           postinc0	equ	0xFEE
 19204                           fsr0h	equ	0xFEA
 19205                           fsr0l	equ	0xFE9
 19206                           wreg	equ	0xFE8
 19207                           indf1	equ	0xFE7
 19208                           postdec1	equ	0xFE5
 19209                           plusw1	equ	0xFE3
 19210                           fsr1h	equ	0xFE2
 19211                           fsr1l	equ	0xFE1
 19212                           indf2	equ	0xFDF
 19213                           postinc2	equ	0xFDE
 19214                           postdec2	equ	0xFDD
 19215                           plusw2	equ	0xFDB
 19216                           fsr2h	equ	0xFDA
 19217                           fsr2l	equ	0xFD9
 19218                           status	equ	0xFD8
 19219                           
 19220 ;; *************** function _MSDWriteHandler *****************
 19221 ;; Defined at:
 19222 ;;		line 1188 in file "usb_device_msd.c"
 19223 ;; Parameters:    Size  Location     Type
 19224 ;;		None
 19225 ;; Auto vars:     Size  Location     Type
 19226 ;;		None
 19227 ;; Return value:  Size  Location     Type
 19228 ;;                  1    wreg      unsigned char 
 19229 ;; Registers used:
 19230 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19231 ;; Tracked objects:
 19232 ;;		On entry : 0/0
 19233 ;;		On exit  : 0/0
 19234 ;;		Unchanged: 0/0
 19235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19236 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19237 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19238 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19239 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19240 ;;Total ram usage:        5 bytes
 19241 ;; Hardware stack levels used:    1
 19242 ;; Hardware stack levels required when called:    6
 19243 ;; This function calls:
 19244 ;;		_ExternalFlash_SectorWrite
 19245 ;;		_ExternalFlash_WriteProtectStateGet
 19246 ;;		_MSDCheckForErrorCases
 19247 ;;		_USBStallEndpoint
 19248 ;;		_USBTransferOnePacket
 19249 ;; This function is called by:
 19250 ;;		_MSDProcessCommandMediaPresent
 19251 ;; This function uses a non-reentrant model
 19252 ;;
 19253                           
 19254                           	psect	text87
 19255  001890                     __ptext87:
 19256                           	opt stack 0
 19257  001890                     _MSDWriteHandler:
 19258                           	opt stack 20
 19259                           
 19260                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19261                           
 19262                           ;incstack = 0
 19263  001890  D146               	goto	l684
 19264  001892                     l685:
 19265                           
 19266                           ; BSR set to: 0
 19267                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19268  001892  C111  F161         	movff	_gblCBW+17,_LBA+3
 19269                           
 19270                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19271  001896  C112  F160         	movff	_gblCBW+18,_LBA+2
 19272                           
 19273                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19274  00189A  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19275                           
 19276                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19277  00189E  C114  F15E         	movff	_gblCBW+20,_LBA
 19278                           
 19279                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19280  0018A2  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19281                           
 19282                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19283  0018A6  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19284                           
 19285                           ; BSR set to: 0
 19286                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19287  0018AA  51DB               	movf	_TransferLength& (0+255),w,b
 19288  0018AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19289  0018AE  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19290  0018B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19291  0018B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19292  0018B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19293  0018B6  0E09               	movlw	9
 19294  0018B8                     u8485:
 19295  0018B8  90D8               	bcf	status,0,c
 19296  0018BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19297  0018BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19298  0018BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19299  0018C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19300  0018C2  2EE8               	decfsz	wreg,f,c
 19301  0018C4  D7F9               	goto	u8485
 19302  0018C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19303  0018CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19304  0018CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19305  0018D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19306  0018D6  EC31  F02A         	call	_MSDCheckForErrorCases	;wreg free
 19307  0018DA  0900               	iorlw	0
 19308  0018DC  A4D8               	btfss	status,2,c
 19309  0018DE  D131               	goto	l687
 19310                           
 19311                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19312                           
 19313                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19314  0018E0  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19315  0018E4  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19316  0018E8  D801               	call	u8508
 19317  0018EA  D00A               	goto	u8509
 19318  0018EC                     u8508:
 19319  0018EC  0005               	push	
 19320  0018EE  6EFA               	movwf	pclath,c
 19321  0018F0  0101               	movlb	1	; () banked
 19322  0018F2  51BD               	movf	(_LUN+10)& (0+255),w,b
 19323  0018F4  6EFD               	movwf	tosl,c
 19324  0018F6  51BE               	movf	(_LUN+11)& (0+255),w,b
 19325  0018F8  6EFE               	movwf	tosh,c
 19326  0018FA  6AFF               	clrf	tosu,c
 19327  0018FC  50FA               	movf	pclath,w,c
 19328  0018FE  0012               	return		;indir
 19329  001900                     u8509:
 19330  001900  0900               	iorlw	0
 19331  001902  B4D8               	btfsc	status,2,c
 19332  001904  D016               	goto	l688
 19333                           
 19334                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19335  001906  0E01               	movlw	1
 19336  001908  010D               	movlb	13	; () banked
 19337  00190A  6F8C               	movwf	140,b	;volatile
 19338                           
 19339                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19340  00190C  0101               	movlb	1	; () banked
 19341  00190E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19342  001910  0BF0               	andlw	-16
 19343  001912  0907               	iorlw	7
 19344  001914  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19345                           
 19346                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19347  001916  0E27               	movlw	39
 19348  001918  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19349                           
 19350                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19351  00191A  0E00               	movlw	0
 19352  00191C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19353                           
 19354                           ; BSR set to: 1
 19355                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19356  00191E  0E00               	movlw	0
 19357  001920  6E01               	movwf	USBStallEndpoint@dir,c
 19358  001922  0E02               	movlw	2
 19359  001924  ECEB  F023         	call	_USBStallEndpoint
 19360                           
 19361                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19362  001928  0E00               	movlw	0
 19363  00192A  0100               	movlb	0	; () banked
 19364  00192C  6FEA               	movwf	_MSDWriteState& (0+255),b
 19365                           
 19366                           ; BSR set to: 0
 19367                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19368  00192E  51EA               	movf	_MSDWriteState& (0+255),w,b
 19369                           
 19370                           ; BSR set to: 0
 19371  001930  0012               	return	
 19372  001932                     l688:
 19373                           
 19374                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19375                           
 19376                           ; BSR set to: 0
 19377  001932  0E01               	movlw	1
 19378  001934  0100               	movlb	0	; () banked
 19379  001936  6FED               	movwf	_MSD_State& (0+255),b
 19380  001938                     
 19381                           ; BSR set to: 0
 19382                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19383                           
 19384                           ; BSR set to: 0
 19385  001938  51DB               	movf	_TransferLength& (0+255),w,b
 19386  00193A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19387  00193C  A4D8               	btfss	status,2,c
 19388  00193E  D002               	goto	l691
 19389                           
 19390                           ; BSR set to: 0
 19391                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19392  001940  0E00               	movlw	0
 19393  001942  D056               	goto	L20
 19394  001944                     l691:
 19395                           
 19396                           ; BSR set to: 0
 19397                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19398                           
 19399                           ; BSR set to: 0
 19400  001944  0E03               	movlw	3
 19401  001946  6FEA               	movwf	_MSDWriteState& (0+255),b
 19402                           
 19403                           ; BSR set to: 0
 19404                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19405  001948  0E00               	movlw	0
 19406  00194A  0101               	movlb	1	; () banked
 19407  00194C  6F86               	movwf	_ptrNextData& (0+255),b
 19408  00194E  0E06               	movlw	6
 19409  001950  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 19410                           
 19411                           ; BSR set to: 1
 19412                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19413  001952  0E00               	movlw	0
 19414  001954  010D               	movlb	13	; () banked
 19415  001956  6F88               	movwf	136,b	;volatile
 19416  001958  0E02               	movlw	2
 19417  00195A  6F89               	movwf	137,b	;volatile
 19418  00195C  0E00               	movlw	0
 19419  00195E  6F8A               	movwf	138,b	;volatile
 19420  001960  0E00               	movlw	0
 19421  001962  6F8B               	movwf	139,b	;volatile
 19422  001964                     l692:
 19423                           
 19424                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19425  001964  010D               	movlb	13	; () banked
 19426  001966  5188               	movf	136,w,b	;volatile
 19427  001968  1189               	iorwf	137,w,b	;volatile
 19428  00196A  118A               	iorwf	138,w,b	;volatile
 19429  00196C  118B               	iorwf	139,w,b	;volatile
 19430  00196E  B4D8               	btfsc	status,2,c
 19431  001970  D01E               	goto	l693
 19432                           
 19433                           ; BSR set to: 13
 19434                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19435  001972  0100               	movlb	0	; () banked
 19436  001974  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19437  001976  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19438  001978  B4D8               	btfsc	status,2,c
 19439  00197A  D006               	goto	l694
 19440                           
 19441                           ; BSR set to: 0
 19442  00197C  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19443  001980  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19444  001984  BEDF               	btfsc	indf2,7,c
 19445  001986  D0DD               	goto	l687
 19446  001988                     l694:
 19447                           
 19448                           ; BSR set to: 0
 19449                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19450                           
 19451                           ; BSR set to: 0
 19452  001988  0E00               	movlw	0
 19453  00198A  6E01               	movwf	USBTransferOnePacket@dir,c
 19454  00198C  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19455  001990  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19456  001994  0E40               	movlw	64
 19457  001996  6E04               	movwf	USBTransferOnePacket@len,c
 19458  001998  0E02               	movlw	2
 19459  00199A  ECF6  F025         	call	_USBTransferOnePacket
 19460  00199E  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19461  0019A2  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19462                           
 19463                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19464  0019A6  0E04               	movlw	4
 19465  0019A8  0100               	movlb	0	; () banked
 19466  0019AA  6FEA               	movwf	_MSDWriteState& (0+255),b
 19467                           
 19468                           ;usb_device_msd.c: 1260: }
 19469  0019AC  D023               	goto	l695
 19470  0019AE                     l693:
 19471                           
 19472                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19473                           
 19474                           ; BSR set to: 0
 19475  0019AE  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19476  0019B2  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19477  0019B6  D801               	call	u8568
 19478  0019B8  D00A               	goto	u8569
 19479  0019BA                     u8568:
 19480  0019BA  0005               	push	
 19481  0019BC  6EFA               	movwf	pclath,c
 19482  0019BE  0101               	movlb	1	; () banked
 19483  0019C0  51BD               	movf	(_LUN+10)& (0+255),w,b
 19484  0019C2  6EFD               	movwf	tosl,c
 19485  0019C4  51BE               	movf	(_LUN+11)& (0+255),w,b
 19486  0019C6  6EFE               	movwf	tosh,c
 19487  0019C8  6AFF               	clrf	tosu,c
 19488  0019CA  50FA               	movf	pclath,w,c
 19489  0019CC  0012               	return		;indir
 19490  0019CE                     u8569:
 19491  0019CE  0900               	iorlw	0
 19492  0019D0  B4D8               	btfsc	status,2,c
 19493  0019D2  D00C               	goto	l696
 19494                           
 19495                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19496  0019D4  0E01               	movlw	1
 19497  0019D6  010D               	movlb	13	; () banked
 19498  0019D8  6F8C               	movwf	140,b	;volatile
 19499                           
 19500                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19501  0019DA  0101               	movlb	1	; () banked
 19502  0019DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19503  0019DE  0BF0               	andlw	-16
 19504  0019E0  0902               	iorlw	2
 19505  0019E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19506                           
 19507                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19508  0019E4  0E27               	movlw	39
 19509  0019E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19510                           
 19511                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19512  0019E8  0E00               	movlw	0
 19513  0019EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19514  0019EC                     l696:
 19515                           
 19516                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19517  0019EC  0E02               	movlw	2
 19518  0019EE  D095               	goto	L22
 19519  0019F0                     L20:
 19520  0019F0  6FEA               	movwf	_MSDWriteState& (0+255),b
 19521                           
 19522                           ;usb_device_msd.c: 1280: break;
 19523  0019F2  D0A7               	goto	l687
 19524  0019F4                     l695:
 19525                           
 19526                           ; BSR set to: 0
 19527                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19528                           
 19529                           ; BSR set to: 0
 19530                           
 19531                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19532                           
 19533                           ; BSR set to: 0
 19534  0019F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19535  0019F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19536  0019F8  B4D8               	btfsc	status,2,c
 19537  0019FA  D006               	goto	l698
 19538                           
 19539                           ; BSR set to: 0
 19540  0019FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19541  001A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19542  001A04  BEDF               	btfsc	indf2,7,c
 19543  001A06  D09D               	goto	l687
 19544  001A08                     l698:
 19545                           
 19546                           ; BSR set to: 0
 19547                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19548                           
 19549                           ; BSR set to: 0
 19550  001A08  EE20 F001          	lfsr	2,1
 19551  001A0C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19552  001A0E  26D9               	addwf	fsr2l,f,c
 19553  001A10  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19554  001A12  22DA               	addwfc	fsr2h,f,c
 19555  001A14  50DF               	movf	indf2,w,c
 19556  001A16  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19557  001A18  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19558  001A1C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19559  001A1E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19560  001A20  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19561  001A22  5031               	movf	??_MSDWriteHandler+1,w,c
 19562  001A24  0101               	movlb	1	; () banked
 19563  001A26  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19564  001A28  5032               	movf	??_MSDWriteHandler+2,w,c
 19565  001A2A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19566  001A2C  5033               	movf	??_MSDWriteHandler+3,w,c
 19567  001A2E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19568  001A30  5034               	movf	??_MSDWriteHandler+4,w,c
 19569  001A32  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19570                           
 19571                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19572  001A34  0100               	movlb	0	; () banked
 19573  001A36  EE20 F001          	lfsr	2,1
 19574  001A3A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19575  001A3C  26D9               	addwf	fsr2l,f,c
 19576  001A3E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19577  001A40  22DA               	addwfc	fsr2h,f,c
 19578  001A42  50DF               	movf	indf2,w,c
 19579  001A44  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19580  001A46  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19581  001A4A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19582  001A4C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19583  001A4E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19584  001A50  5031               	movf	??_MSDWriteHandler+1,w,c
 19585  001A52  010D               	movlb	13	; () banked
 19586  001A54  5F88               	subwf	136,f,b	;volatile
 19587  001A56  5032               	movf	??_MSDWriteHandler+2,w,c
 19588  001A58  5B89               	subwfb	137,f,b	;volatile
 19589  001A5A  5033               	movf	??_MSDWriteHandler+3,w,c
 19590  001A5C  5B8A               	subwfb	138,f,b	;volatile
 19591  001A5E  5034               	movf	??_MSDWriteHandler+4,w,c
 19592  001A60  5B8B               	subwfb	139,f,b	;volatile
 19593                           
 19594                           ; BSR set to: 13
 19595                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19596  001A62  0E40               	movlw	64
 19597  001A64  0101               	movlb	1	; () banked
 19598  001A66  2786               	addwf	_ptrNextData& (0+255),f,b
 19599  001A68  0E00               	movlw	0
 19600  001A6A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19601                           
 19602                           ; BSR set to: 1
 19603                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19604  001A6C  0E03               	movlw	3
 19605  001A6E  D055               	goto	L22
 19606  001A70                     
 19607                           ; BSR set to: 0
 19608                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19609                           
 19610                           ; BSR set to: 0
 19611  001A70  010D               	movlb	13	; () banked
 19612  001A72  518C               	movf	140,w,b	;volatile
 19613  001A74  A4D8               	btfss	status,2,c
 19614  001A76  D03B               	goto	l703
 19615                           
 19616                           ; BSR set to: 13
 19617                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19618  001A78  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19619  001A7C  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19620  001A80  C15E  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19621  001A84  C15F  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19622  001A88  C160  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19623  001A8C  C161  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19624  001A90  0E00               	movlw	0
 19625  001A92  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19626  001A94  0E06               	movlw	6
 19627  001A96  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19628  001A98  0101               	movlb	1	; () banked
 19629  001A9A  515E               	movf	_LBA& (0+255),w,b
 19630  001A9C  115F               	iorwf	(_LBA+1)& (0+255),w,b
 19631  001A9E  1160               	iorwf	(_LBA+2)& (0+255),w,b
 19632  001AA0  1161               	iorwf	(_LBA+3)& (0+255),w,b
 19633  001AA2  A4D8               	btfss	status,2,c
 19634  001AA4  D002               	goto	u8610
 19635  001AA6  0E01               	movlw	1
 19636  001AA8  D001               	goto	u8620
 19637  001AAA                     u8610:
 19638  001AAA  0E00               	movlw	0
 19639  001AAC                     u8620:
 19640  001AAC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19641  001AAE  D801               	call	u8638
 19642  001AB0  D009               	goto	u8639
 19643  001AB2                     u8638:
 19644  001AB2  0005               	push	
 19645  001AB4  6EFA               	movwf	pclath,c
 19646  001AB6  51BF               	movf	(_LUN+12)& (0+255),w,b
 19647  001AB8  6EFD               	movwf	tosl,c
 19648  001ABA  51C0               	movf	(_LUN+13)& (0+255),w,b
 19649  001ABC  6EFE               	movwf	tosh,c
 19650  001ABE  6AFF               	clrf	tosu,c
 19651  001AC0  50FA               	movf	pclath,w,c
 19652  001AC2  0012               	return		;indir
 19653  001AC4                     u8639:
 19654  001AC4  06E8               	decf	wreg,f,c
 19655  001AC6  B4D8               	btfsc	status,2,c
 19656  001AC8  D012               	goto	l703
 19657                           
 19658                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19659  001ACA  0E64               	movlw	100
 19660  001ACC  0100               	movlb	0	; () banked
 19661  001ACE  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 19662  001AD0  D002               	goto	l702
 19663                           
 19664                           ; BSR set to: 0
 19665                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19666  001AD2  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 19667                           
 19668                           ;usb_device_msd.c: 1314: break;
 19669  001AD4  D036               	goto	l687
 19670  001AD6                     l702:
 19671                           
 19672                           ; BSR set to: 0
 19673                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19674                           
 19675                           ; BSR set to: 0
 19676  001AD6  0E01               	movlw	1
 19677  001AD8  010D               	movlb	13	; () banked
 19678  001ADA  6F8C               	movwf	140,b	;volatile
 19679                           
 19680                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19681  001ADC  0101               	movlb	1	; () banked
 19682  001ADE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19683  001AE0  0BF0               	andlw	-16
 19684  001AE2  0903               	iorlw	3
 19685  001AE4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19686                           
 19687                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19688  001AE6  0E00               	movlw	0
 19689  001AE8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19690                           
 19691                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19692  001AEA  0E00               	movlw	0
 19693  001AEC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19694  001AEE                     l703:
 19695                           
 19696                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19697                           
 19698                           ; BSR set to: 1
 19699                           
 19700                           ; BSR set to: 1
 19701                           
 19702                           ; BSR set to: 1
 19703  001AEE  0E01               	movlw	1
 19704  001AF0  0101               	movlb	1	; () banked
 19705  001AF2  275E               	addwf	_LBA& (0+255),f,b
 19706  001AF4  0E00               	movlw	0
 19707  001AF6  235F               	addwfc	(_LBA+1)& (0+255),f,b
 19708  001AF8  2360               	addwfc	(_LBA+2)& (0+255),f,b
 19709  001AFA  2361               	addwfc	(_LBA+3)& (0+255),f,b
 19710                           
 19711                           ; BSR set to: 1
 19712                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19713  001AFC  0100               	movlb	0	; () banked
 19714  001AFE  07DB               	decf	_TransferLength& (0+255),f,b
 19715  001B00  A0D8               	btfss	status,0,c
 19716  001B02  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19717                           
 19718                           ; BSR set to: 0
 19719                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19720  001B04  0E01               	movlw	1
 19721  001B06  D774               	goto	L20
 19722  001B08                     
 19723                           ; BSR set to: 0
 19724                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19725                           
 19726                           ; BSR set to: 0
 19727  001B08  0E02               	movlw	2
 19728  001B0A  010D               	movlb	13	; () banked
 19729  001B0C  6F8C               	movwf	140,b	;volatile
 19730                           
 19731                           ; BSR set to: 13
 19732                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19733  001B0E  0E00               	movlw	0
 19734  001B10  6E01               	movwf	USBStallEndpoint@dir,c
 19735  001B12  0E02               	movlw	2
 19736  001B14  ECEB  F023         	call	_USBStallEndpoint
 19737                           
 19738                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19739  001B18  0E00               	movlw	0
 19740  001B1A                     L22:
 19741  001B1A  0100               	movlb	0	; () banked
 19742  001B1C  D769               	goto	L20
 19743  001B1E                     l684:
 19744                           
 19745                           ; BSR set to: 0
 19746  001B1E  0100               	movlb	0	; () banked
 19747  001B20  51EA               	movf	_MSDWriteState& (0+255),w,b
 19748                           
 19749                           ; Switch size 1, requested type "space"
 19750                           ; Number of cases is 5, Range of values is 0 to 4
 19751                           ; switch strategies available:
 19752                           ; Name         Instructions Cycles
 19753                           ; simple_byte           16     9 (average)
 19754                           ;	Chosen strategy is simple_byte
 19755  001B22  0A00               	xorlw	0	; case 0
 19756  001B24  B4D8               	btfsc	status,2,c
 19757  001B26  D6B5               	goto	l685
 19758  001B28  0A01               	xorlw	1	; case 1
 19759  001B2A  B4D8               	btfsc	status,2,c
 19760  001B2C  D705               	goto	l690
 19761  001B2E  0A03               	xorlw	3	; case 2
 19762  001B30  B4D8               	btfsc	status,2,c
 19763  001B32  D79E               	goto	l699
 19764  001B34  0A01               	xorlw	1	; case 3
 19765  001B36  B4D8               	btfsc	status,2,c
 19766  001B38  D715               	goto	l692
 19767  001B3A  0A07               	xorlw	7	; case 4
 19768  001B3C  B4D8               	btfsc	status,2,c
 19769  001B3E  D75A               	goto	l695
 19770  001B40  D7E3               	goto	l704
 19771  001B42                     l687:
 19772                           
 19773                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19774                           
 19775                           ; BSR set to: 0
 19776  001B42  0100               	movlb	0	; () banked
 19777  001B44  51EA               	movf	_MSDWriteState& (0+255),w,b
 19778  001B46  0012               	return	
 19779  001B48                     __end_of_MSDWriteHandler:
 19780                           	opt stack 0
 19781                           tosu	equ	0xFFF
 19782                           tosh	equ	0xFFE
 19783                           tosl	equ	0xFFD
 19784                           pclath	equ	0xFFA
 19785                           tblptru	equ	0xFF8
 19786                           tblptrh	equ	0xFF7
 19787                           tblptrl	equ	0xFF6
 19788                           tablat	equ	0xFF5
 19789                           prodh	equ	0xFF4
 19790                           prodl	equ	0xFF3
 19791                           intcon	equ	0xFF2
 19792                           intcon2	equ	0xFF1
 19793                           intcon3	equ	0xFF0
 19794                           indf0	equ	0xFEF
 19795                           postinc0	equ	0xFEE
 19796                           fsr0h	equ	0xFEA
 19797                           fsr0l	equ	0xFE9
 19798                           wreg	equ	0xFE8
 19799                           indf1	equ	0xFE7
 19800                           postdec1	equ	0xFE5
 19801                           plusw1	equ	0xFE3
 19802                           fsr1h	equ	0xFE2
 19803                           fsr1l	equ	0xFE1
 19804                           indf2	equ	0xFDF
 19805                           postinc2	equ	0xFDE
 19806                           postdec2	equ	0xFDD
 19807                           plusw2	equ	0xFDB
 19808                           fsr2h	equ	0xFDA
 19809                           fsr2l	equ	0xFD9
 19810                           status	equ	0xFD8
 19811                           
 19812 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19813 ;; Defined at:
 19814 ;;		line 34 in file "external_flash.c"
 19815 ;; Parameters:    Size  Location     Type
 19816 ;;  config          2    0[COMRAM] PTR void 
 19817 ;;		 -> NULL(0), 
 19818 ;; Auto vars:     Size  Location     Type
 19819 ;;		None
 19820 ;; Return value:  Size  Location     Type
 19821 ;;                  1    wreg      unsigned char 
 19822 ;; Registers used:
 19823 ;;		wreg
 19824 ;; Tracked objects:
 19825 ;;		On entry : 0/0
 19826 ;;		On exit  : 0/0
 19827 ;;		Unchanged: 0/0
 19828 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19829 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19830 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19831 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19832 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19833 ;;Total ram usage:        2 bytes
 19834 ;; Hardware stack levels used:    1
 19835 ;; This function calls:
 19836 ;;		Nothing
 19837 ;; This function is called by:
 19838 ;;		_MSDWriteHandler
 19839 ;;		_MSDProcessCommandMediaPresent
 19840 ;; This function uses a non-reentrant model
 19841 ;;
 19842                           
 19843                           	psect	text88
 19844  008FA6                     __ptext88:
 19845                           	opt stack 0
 19846  008FA6                     _ExternalFlash_WriteProtectStateGet:
 19847                           	opt stack 25
 19848                           
 19849                           ;external_flash.c: 37: return 0;
 19850                           
 19851                           ; BSR set to: 0
 19852                           ;incstack = 0
 19853  008FA6  0E00               	movlw	0
 19854  008FA8  0012               	return	
 19855  008FAA                     __end_of_ExternalFlash_WriteProtectStateGet:
 19856                           	opt stack 0
 19857                           tosu	equ	0xFFF
 19858                           tosh	equ	0xFFE
 19859                           tosl	equ	0xFFD
 19860                           pclath	equ	0xFFA
 19861                           tblptru	equ	0xFF8
 19862                           tblptrh	equ	0xFF7
 19863                           tblptrl	equ	0xFF6
 19864                           tablat	equ	0xFF5
 19865                           prodh	equ	0xFF4
 19866                           prodl	equ	0xFF3
 19867                           intcon	equ	0xFF2
 19868                           intcon2	equ	0xFF1
 19869                           intcon3	equ	0xFF0
 19870                           indf0	equ	0xFEF
 19871                           postinc0	equ	0xFEE
 19872                           fsr0h	equ	0xFEA
 19873                           fsr0l	equ	0xFE9
 19874                           wreg	equ	0xFE8
 19875                           indf1	equ	0xFE7
 19876                           postdec1	equ	0xFE5
 19877                           plusw1	equ	0xFE3
 19878                           fsr1h	equ	0xFE2
 19879                           fsr1l	equ	0xFE1
 19880                           indf2	equ	0xFDF
 19881                           postinc2	equ	0xFDE
 19882                           postdec2	equ	0xFDD
 19883                           plusw2	equ	0xFDB
 19884                           fsr2h	equ	0xFDA
 19885                           fsr2l	equ	0xFD9
 19886                           status	equ	0xFD8
 19887                           
 19888 ;; *************** function _ExternalFlash_SectorWrite *****************
 19889 ;; Defined at:
 19890 ;;		line 56 in file "external_flash.c"
 19891 ;; Parameters:    Size  Location     Type
 19892 ;;  config          2   36[COMRAM] PTR void 
 19893 ;;		 -> NULL(0), 
 19894 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19895 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19896 ;;		 -> msd_buffer(512), 
 19897 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19898 ;; Auto vars:     Size  Location     Type
 19899 ;;  page            2   45[COMRAM] unsigned int 
 19900 ;; Return value:  Size  Location     Type
 19901 ;;                  1    wreg      unsigned char 
 19902 ;; Registers used:
 19903 ;;		wreg, status,2, status,0, cstack
 19904 ;; Tracked objects:
 19905 ;;		On entry : 0/0
 19906 ;;		On exit  : 0/0
 19907 ;;		Unchanged: 0/0
 19908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19909 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19910 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19911 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19912 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19913 ;;Total ram usage:       11 bytes
 19914 ;; Hardware stack levels used:    1
 19915 ;; Hardware stack levels required when called:    5
 19916 ;; This function calls:
 19917 ;;		_flash_sector_write
 19918 ;; This function is called by:
 19919 ;;		_MSDWriteHandler
 19920 ;; This function uses a non-reentrant model
 19921 ;;
 19922                           
 19923                           	psect	text89
 19924  00881A                     __ptext89:
 19925                           	opt stack 0
 19926  00881A                     _ExternalFlash_SectorWrite:
 19927                           	opt stack 20
 19928                           
 19929                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19930                           
 19931                           ;incstack = 0
 19932  00881A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19933  00881E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19934                           
 19935                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19936  008822  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19937  008824  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19938  008826  E104               	bnz	u7940
 19939  008828  0E20               	movlw	32
 19940  00882A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19941  00882C  A0D8               	btfss	status,0,c
 19942  00882E  D002               	goto	l1892
 19943  008830                     u7940:
 19944                           
 19945                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19946  008830  0E00               	movlw	0
 19947  008832  0012               	return	
 19948  008834                     l1892:
 19949                           
 19950                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 19951  008834  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 19952  008838  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 19953  00883C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 19954  008840  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 19955  008844  ECEE  F03F         	call	_flash_sector_write	;wreg free
 19956                           
 19957                           ;external_flash.c: 69: return 1;
 19958  008848  0E01               	movlw	1
 19959  00884A  0012               	return	
 19960  00884C                     __end_of_ExternalFlash_SectorWrite:
 19961                           	opt stack 0
 19962                           tosu	equ	0xFFF
 19963                           tosh	equ	0xFFE
 19964                           tosl	equ	0xFFD
 19965                           pclath	equ	0xFFA
 19966                           tblptru	equ	0xFF8
 19967                           tblptrh	equ	0xFF7
 19968                           tblptrl	equ	0xFF6
 19969                           tablat	equ	0xFF5
 19970                           prodh	equ	0xFF4
 19971                           prodl	equ	0xFF3
 19972                           intcon	equ	0xFF2
 19973                           intcon2	equ	0xFF1
 19974                           intcon3	equ	0xFF0
 19975                           indf0	equ	0xFEF
 19976                           postinc0	equ	0xFEE
 19977                           fsr0h	equ	0xFEA
 19978                           fsr0l	equ	0xFE9
 19979                           wreg	equ	0xFE8
 19980                           indf1	equ	0xFE7
 19981                           postdec1	equ	0xFE5
 19982                           plusw1	equ	0xFE3
 19983                           fsr1h	equ	0xFE2
 19984                           fsr1l	equ	0xFE1
 19985                           indf2	equ	0xFDF
 19986                           postinc2	equ	0xFDE
 19987                           postdec2	equ	0xFDD
 19988                           plusw2	equ	0xFDB
 19989                           fsr2h	equ	0xFDA
 19990                           fsr2l	equ	0xFD9
 19991                           status	equ	0xFD8
 19992                           
 19993 ;; *************** function _MSDReadHandler *****************
 19994 ;; Defined at:
 19995 ;;		line 1038 in file "usb_device_msd.c"
 19996 ;; Parameters:    Size  Location     Type
 19997 ;;		None
 19998 ;; Auto vars:     Size  Location     Type
 19999 ;;		None
 20000 ;; Return value:  Size  Location     Type
 20001 ;;                  1    wreg      unsigned char 
 20002 ;; Registers used:
 20003 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20004 ;; Tracked objects:
 20005 ;;		On entry : 0/0
 20006 ;;		On exit  : 0/0
 20007 ;;		Unchanged: 0/0
 20008 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20009 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20010 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20011 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20012 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20013 ;;Total ram usage:        4 bytes
 20014 ;; Hardware stack levels used:    1
 20015 ;; Hardware stack levels required when called:    6
 20016 ;; This function calls:
 20017 ;;		_ExternalFlash_SectorRead
 20018 ;;		_MSDCheckForErrorCases
 20019 ;;		_USBStallEndpoint
 20020 ;;		_USBTransferOnePacket
 20021 ;; This function is called by:
 20022 ;;		_MSDProcessCommandMediaPresent
 20023 ;; This function uses a non-reentrant model
 20024 ;;
 20025                           
 20026                           	psect	text90
 20027  0030BC                     __ptext90:
 20028                           	opt stack 0
 20029  0030BC                     _MSDReadHandler:
 20030                           	opt stack 20
 20031                           
 20032                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20033                           
 20034                           ;incstack = 0
 20035  0030BC  D0D7               	goto	l665
 20036  0030BE                     l666:
 20037                           
 20038                           ; BSR set to: 0
 20039                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20040  0030BE  C111  F161         	movff	_gblCBW+17,_LBA+3
 20041                           
 20042                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20043  0030C2  C112  F160         	movff	_gblCBW+18,_LBA+2
 20044                           
 20045                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20046  0030C6  C113  F15F         	movff	_gblCBW+19,_LBA+1
 20047                           
 20048                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20049  0030CA  C114  F15E         	movff	_gblCBW+20,_LBA
 20050                           
 20051                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20052  0030CE  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 20053                           
 20054                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20055  0030D2  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 20056                           
 20057                           ; BSR set to: 0
 20058                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20059  0030D6  51DB               	movf	_TransferLength& (0+255),w,b
 20060  0030D8  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20061  0030DA  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 20062  0030DC  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20063  0030DE  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20064  0030E0  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20065  0030E2  0E09               	movlw	9
 20066  0030E4                     u8375:
 20067  0030E4  90D8               	bcf	status,0,c
 20068  0030E6  3636               	rlcf	??_MSDReadHandler,f,c
 20069  0030E8  3637               	rlcf	??_MSDReadHandler+1,f,c
 20070  0030EA  3638               	rlcf	??_MSDReadHandler+2,f,c
 20071  0030EC  3639               	rlcf	??_MSDReadHandler+3,f,c
 20072  0030EE  2EE8               	decfsz	wreg,f,c
 20073  0030F0  D7F9               	goto	u8375
 20074  0030F2  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20075  0030F6  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20076  0030FA  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20077  0030FE  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20078  003102  EC31  F02A         	call	_MSDCheckForErrorCases	;wreg free
 20079  003106  0900               	iorlw	0
 20080  003108  A4D8               	btfss	status,2,c
 20081  00310A  D0C2               	goto	l668
 20082                           
 20083                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20084                           
 20085                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20086  00310C  0E01               	movlw	1
 20087  00310E  0100               	movlb	0	; () banked
 20088  003110  6FEB               	movwf	_MSDReadState& (0+255),b
 20089  003112                     
 20090                           ; BSR set to: 0
 20091                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20092                           
 20093                           ; BSR set to: 0
 20094  003112  51DB               	movf	_TransferLength& (0+255),w,b
 20095  003114  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 20096  003116  A4D8               	btfss	status,2,c
 20097  003118  D002               	goto	l670
 20098                           
 20099                           ; BSR set to: 0
 20100                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20101  00311A  0E00               	movlw	0
 20102  00311C  D046               	goto	L23
 20103  00311E                     l670:
 20104                           
 20105                           ; BSR set to: 0
 20106                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20107                           
 20108                           ; BSR set to: 0
 20109  00311E  07DB               	decf	_TransferLength& (0+255),f,b
 20110  003120  A0D8               	btfss	status,0,c
 20111  003122  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20112                           
 20113                           ; BSR set to: 0
 20114                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20115  003124  0E02               	movlw	2
 20116  003126  6FEB               	movwf	_MSDReadState& (0+255),b
 20117  003128                     
 20118                           ; BSR set to: 0
 20119                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20120                           
 20121                           ; BSR set to: 0
 20122  003128  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20123  00312A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20124  00312C  B4D8               	btfsc	status,2,c
 20125  00312E  D006               	goto	l672
 20126                           
 20127                           ; BSR set to: 0
 20128  003130  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20129  003134  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20130  003138  BEDF               	btfsc	indf2,7,c
 20131  00313A  D0AA               	goto	l668
 20132  00313C                     l672:
 20133                           
 20134                           ; BSR set to: 0
 20135                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20136                           
 20137                           ; BSR set to: 0
 20138  00313C  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20139  003140  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20140  003144  C15E  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20141  003148  C15F  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20142  00314C  C160  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20143  003150  C161  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20144  003154  0E00               	movlw	0
 20145  003156  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20146  003158  0E06               	movlw	6
 20147  00315A  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20148  00315C  D801               	call	u8428
 20149  00315E  D00A               	goto	u8429
 20150  003160                     u8428:
 20151  003160  0005               	push	
 20152  003162  6EFA               	movwf	pclath,c
 20153  003164  0101               	movlb	1	; () banked
 20154  003166  51BB               	movf	(_LUN+8)& (0+255),w,b
 20155  003168  6EFD               	movwf	tosl,c
 20156  00316A  51BC               	movf	(_LUN+9)& (0+255),w,b
 20157  00316C  6EFE               	movwf	tosh,c
 20158  00316E  6AFF               	clrf	tosu,c
 20159  003170  50FA               	movf	pclath,w,c
 20160  003172  0012               	return		;indir
 20161  003174                     u8429:
 20162  003174  06E8               	decf	wreg,f,c
 20163  003176  B4D8               	btfsc	status,2,c
 20164  003178  D01A               	goto	l675
 20165                           
 20166                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20167  00317A  0E64               	movlw	100
 20168  00317C  0100               	movlb	0	; () banked
 20169  00317E  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20170  003180  D002               	goto	l674
 20171                           
 20172                           ; BSR set to: 0
 20173                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20174  003182  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20175                           
 20176                           ;usb_device_msd.c: 1088: break;
 20177  003184  D085               	goto	l668
 20178  003186                     l674:
 20179                           
 20180                           ; BSR set to: 0
 20181                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20182                           
 20183                           ; BSR set to: 0
 20184  003186  0E02               	movlw	2
 20185  003188  010D               	movlb	13	; () banked
 20186  00318A  6F8C               	movwf	140,b	;volatile
 20187                           
 20188                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20189  00318C  0101               	movlb	1	; () banked
 20190  00318E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20191  003190  0BF0               	andlw	-16
 20192  003192  0903               	iorlw	3
 20193  003194  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20194                           
 20195                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20196  003196  0E00               	movlw	0
 20197  003198  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20198                           
 20199                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20200  00319A  0E00               	movlw	0
 20201  00319C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20202                           
 20203                           ; BSR set to: 1
 20204                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20205  00319E  0E01               	movlw	1
 20206  0031A0  6E01               	movwf	USBStallEndpoint@dir,c
 20207  0031A2  0E02               	movlw	2
 20208  0031A4  ECEB  F023         	call	_USBStallEndpoint
 20209  0031A8  D05E               	goto	l11621
 20210  0031AA                     L23:
 20211  0031AA  6FEB               	movwf	_MSDReadState& (0+255),b
 20212                           
 20213                           ;usb_device_msd.c: 1109: break;
 20214  0031AC  D071               	goto	l668
 20215  0031AE                     l675:
 20216                           
 20217                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20218                           
 20219                           ; BSR set to: 0
 20220                           
 20221                           ; BSR set to: 0
 20222  0031AE  0E01               	movlw	1
 20223  0031B0  0101               	movlb	1	; () banked
 20224  0031B2  275E               	addwf	_LBA& (0+255),f,b
 20225  0031B4  0E00               	movlw	0
 20226  0031B6  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20227  0031B8  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20228  0031BA  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20229                           
 20230                           ; BSR set to: 1
 20231                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20232  0031BC  0E00               	movlw	0
 20233  0031BE  010D               	movlb	13	; () banked
 20234  0031C0  6F88               	movwf	136,b	;volatile
 20235  0031C2  0E02               	movlw	2
 20236  0031C4  6F89               	movwf	137,b	;volatile
 20237  0031C6  0E00               	movlw	0
 20238  0031C8  6F8A               	movwf	138,b	;volatile
 20239  0031CA  0E00               	movlw	0
 20240  0031CC  6F8B               	movwf	139,b	;volatile
 20241                           
 20242                           ; BSR set to: 13
 20243                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20244  0031CE  0E00               	movlw	0
 20245  0031D0  0101               	movlb	1	; () banked
 20246  0031D2  6F86               	movwf	_ptrNextData& (0+255),b
 20247  0031D4  0E06               	movlw	6
 20248  0031D6  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 20249                           
 20250                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20251  0031D8  0E03               	movlw	3
 20252  0031DA  0100               	movlb	0	; () banked
 20253  0031DC  6FEB               	movwf	_MSDReadState& (0+255),b
 20254  0031DE                     
 20255                           ; BSR set to: 0
 20256                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20257                           
 20258                           ; BSR set to: 0
 20259  0031DE  010D               	movlb	13	; () banked
 20260  0031E0  5188               	movf	136,w,b	;volatile
 20261  0031E2  1189               	iorwf	137,w,b	;volatile
 20262  0031E4  118A               	iorwf	138,w,b	;volatile
 20263  0031E6  118B               	iorwf	139,w,b	;volatile
 20264  0031E8  A4D8               	btfss	status,2,c
 20265  0031EA  D002               	goto	l677
 20266                           
 20267                           ; BSR set to: 13
 20268                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20269  0031EC  0E01               	movlw	1
 20270  0031EE  D03C               	goto	L25
 20271  0031F0                     l677:
 20272                           
 20273                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20274                           
 20275                           ; BSR set to: 0
 20276  0031F0  0E04               	movlw	4
 20277  0031F2  0100               	movlb	0	; () banked
 20278  0031F4  6FEB               	movwf	_MSDReadState& (0+255),b
 20279  0031F6                     
 20280                           ; BSR set to: 0
 20281                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20282                           
 20283                           ; BSR set to: 0
 20284  0031F6  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20285  0031F8  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20286  0031FA  B4D8               	btfsc	status,2,c
 20287  0031FC  D006               	goto	l679
 20288                           
 20289                           ; BSR set to: 0
 20290  0031FE  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20291  003202  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20292  003206  BEDF               	btfsc	indf2,7,c
 20293  003208  D043               	goto	l668
 20294  00320A                     l679:
 20295                           
 20296                           ; BSR set to: 0
 20297                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20298                           
 20299                           ; BSR set to: 0
 20300  00320A  0E01               	movlw	1
 20301  00320C  6E01               	movwf	USBTransferOnePacket@dir,c
 20302  00320E  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20303  003212  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20304  003216  0E40               	movlw	64
 20305  003218  6E04               	movwf	USBTransferOnePacket@len,c
 20306  00321A  0E02               	movlw	2
 20307  00321C  ECF6  F025         	call	_USBTransferOnePacket
 20308  003220  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20309  003224  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20310                           
 20311                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20312  003228  0E03               	movlw	3
 20313  00322A  0100               	movlb	0	; () banked
 20314  00322C  6FEB               	movwf	_MSDReadState& (0+255),b
 20315                           
 20316                           ; BSR set to: 0
 20317                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20318  00322E  0E40               	movlw	64
 20319  003230  0101               	movlb	1	; () banked
 20320  003232  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20321  003234  0E00               	movlw	0
 20322  003236  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20323  003238  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20324  00323A  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20325                           
 20326                           ; BSR set to: 1
 20327                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20328  00323C  0E40               	movlw	64
 20329  00323E  010D               	movlb	13	; () banked
 20330  003240  5F88               	subwf	136,f,b	;volatile
 20331  003242  0E00               	movlw	0
 20332  003244  5B89               	subwfb	137,f,b	;volatile
 20333  003246  5B8A               	subwfb	138,f,b	;volatile
 20334  003248  5B8B               	subwfb	139,f,b	;volatile
 20335                           
 20336                           ; BSR set to: 13
 20337                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20338  00324A  0E40               	movlw	64
 20339  00324C  0101               	movlb	1	; () banked
 20340  00324E  2786               	addwf	_ptrNextData& (0+255),f,b
 20341  003250  0E00               	movlw	0
 20342  003252  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20343                           
 20344                           ;usb_device_msd.c: 1149: break;
 20345  003254  D01D               	goto	l668
 20346  003256                     
 20347                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20348                           
 20349                           ; BSR set to: 1
 20350  003256  0E02               	movlw	2
 20351  003258  010D               	movlb	13	; () banked
 20352  00325A  6F8C               	movwf	140,b	;volatile
 20353                           
 20354                           ; BSR set to: 13
 20355                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20356  00325C  0E01               	movlw	1
 20357  00325E  6E01               	movwf	USBStallEndpoint@dir,c
 20358  003260  0E02               	movlw	2
 20359  003262  ECEB  F023         	call	_USBStallEndpoint
 20360  003266                     l11621:
 20361                           
 20362                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20363  003266  0E00               	movlw	0
 20364  003268                     L25:
 20365  003268  0100               	movlb	0	; () banked
 20366  00326A  D79F               	goto	L23
 20367  00326C                     l665:
 20368                           
 20369                           ; BSR set to: 0
 20370  00326C  0100               	movlb	0	; () banked
 20371  00326E  51EB               	movf	_MSDReadState& (0+255),w,b
 20372                           
 20373                           ; Switch size 1, requested type "space"
 20374                           ; Number of cases is 5, Range of values is 0 to 4
 20375                           ; switch strategies available:
 20376                           ; Name         Instructions Cycles
 20377                           ; simple_byte           16     9 (average)
 20378                           ;	Chosen strategy is simple_byte
 20379  003270  0A00               	xorlw	0	; case 0
 20380  003272  B4D8               	btfsc	status,2,c
 20381  003274  D724               	goto	l666
 20382  003276  0A01               	xorlw	1	; case 1
 20383  003278  B4D8               	btfsc	status,2,c
 20384  00327A  D74B               	goto	l669
 20385  00327C  0A03               	xorlw	3	; case 2
 20386  00327E  B4D8               	btfsc	status,2,c
 20387  003280  D753               	goto	l671
 20388  003282  0A01               	xorlw	1	; case 3
 20389  003284  B4D8               	btfsc	status,2,c
 20390  003286  D7AB               	goto	l676
 20391  003288  0A07               	xorlw	7	; case 4
 20392  00328A  B4D8               	btfsc	status,2,c
 20393  00328C  D7B4               	goto	l678
 20394  00328E  D7E3               	goto	l680
 20395  003290                     l668:
 20396                           
 20397                           ;usb_device_msd.c: 1161: return MSDReadState;
 20398                           
 20399                           ; BSR set to: 0
 20400  003290  0100               	movlb	0	; () banked
 20401  003292  51EB               	movf	_MSDReadState& (0+255),w,b
 20402  003294  0012               	return	
 20403  003296                     __end_of_MSDReadHandler:
 20404                           	opt stack 0
 20405                           tosu	equ	0xFFF
 20406                           tosh	equ	0xFFE
 20407                           tosl	equ	0xFFD
 20408                           pclath	equ	0xFFA
 20409                           tblptru	equ	0xFF8
 20410                           tblptrh	equ	0xFF7
 20411                           tblptrl	equ	0xFF6
 20412                           tablat	equ	0xFF5
 20413                           prodh	equ	0xFF4
 20414                           prodl	equ	0xFF3
 20415                           intcon	equ	0xFF2
 20416                           intcon2	equ	0xFF1
 20417                           intcon3	equ	0xFF0
 20418                           indf0	equ	0xFEF
 20419                           postinc0	equ	0xFEE
 20420                           fsr0h	equ	0xFEA
 20421                           fsr0l	equ	0xFE9
 20422                           wreg	equ	0xFE8
 20423                           indf1	equ	0xFE7
 20424                           postdec1	equ	0xFE5
 20425                           plusw1	equ	0xFE3
 20426                           fsr1h	equ	0xFE2
 20427                           fsr1l	equ	0xFE1
 20428                           indf2	equ	0xFDF
 20429                           postinc2	equ	0xFDE
 20430                           postdec2	equ	0xFDD
 20431                           plusw2	equ	0xFDB
 20432                           fsr2h	equ	0xFDA
 20433                           fsr2l	equ	0xFD9
 20434                           status	equ	0xFD8
 20435                           
 20436 ;; *************** function _MSDCheckForErrorCases *****************
 20437 ;; Defined at:
 20438 ;;		line 1434 in file "usb_device_msd.c"
 20439 ;; Parameters:    Size  Location     Type
 20440 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20441 ;; Auto vars:     Size  Location     Type
 20442 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20443 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20444 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20445 ;; Return value:  Size  Location     Type
 20446 ;;                  1    wreg      unsigned char 
 20447 ;; Registers used:
 20448 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20449 ;; Tracked objects:
 20450 ;;		On entry : 0/0
 20451 ;;		On exit  : 0/0
 20452 ;;		Unchanged: 0/0
 20453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20454 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20455 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20456 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20457 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20458 ;;Total ram usage:        7 bytes
 20459 ;; Hardware stack levels used:    1
 20460 ;; Hardware stack levels required when called:    2
 20461 ;; This function calls:
 20462 ;;		_MSDErrorHandler
 20463 ;; This function is called by:
 20464 ;;		_MSDProcessCommandMediaPresent
 20465 ;;		_MSDReadHandler
 20466 ;;		_MSDWriteHandler
 20467 ;; This function uses a non-reentrant model
 20468 ;;
 20469                           
 20470                           	psect	text91
 20471  005462                     __ptext91:
 20472                           	opt stack 0
 20473  005462                     _MSDCheckForErrorCases:
 20474                           	opt stack 23
 20475                           
 20476                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20477                           
 20478                           ; BSR set to: 0
 20479                           ;incstack = 0
 20480  005462  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20481  005464  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20482  005466  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20483  005468  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20484  00546A  A4D8               	btfss	status,2,c
 20485  00546C  D002               	goto	l710
 20486                           
 20487                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20488  00546E  0E01               	movlw	1
 20489  005470  D001               	goto	L26
 20490  005472                     l710:
 20491                           
 20492                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20493  005472  0E00               	movlw	0
 20494  005474                     L26:
 20495  005474  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20496                           
 20497                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20498  005476  0100               	movlb	0	; () banked
 20499  005478  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20500  00547A  A4D8               	btfss	status,2,c
 20501  00547C  D005               	goto	l712
 20502                           
 20503                           ; BSR set to: 0
 20504  00547E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20505  005480  A4D8               	btfss	status,2,c
 20506  005482  D002               	goto	l712
 20507                           
 20508                           ; BSR set to: 0
 20509                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20510  005484  0E00               	movlw	0
 20511                           
 20512                           ; BSR set to: 0
 20513  005486  0012               	return	
 20514  005488                     l712:
 20515                           
 20516                           ; BSR set to: 0
 20517                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20518                           
 20519                           ; BSR set to: 0
 20520  005488  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20521  00548A  0101               	movlb	1	; () banked
 20522  00548C  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20523  00548E  E11A               	bnz	l11077
 20524  005490  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20525  005492  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20526  005494  E117               	bnz	l11077
 20527  005496  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20528  005498  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20529  00549A  E114               	bnz	l11077
 20530  00549C  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20531  00549E  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20532  0054A0  A4D8               	btfss	status,2,c
 20533  0054A2  D010               	goto	l718
 20534                           
 20535                           ; BSR set to: 1
 20536                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20537  0054A4  0100               	movlb	0	; () banked
 20538  0054A6  05ED               	decf	_MSD_State& (0+255),w,b
 20539  0054A8  A4D8               	btfss	status,2,c
 20540  0054AA  D006               	goto	l715
 20541                           
 20542                           ; BSR set to: 0
 20543                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20544  0054AC  0E2A               	movlw	42
 20545  0054AE  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20546  0054B0  B4D8               	btfsc	status,2,c
 20547  0054B2  D008               	goto	l718
 20548                           
 20549                           ; BSR set to: 0
 20550                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20551  0054B4  0E00               	movlw	0
 20552                           
 20553                           ; BSR set to: 0
 20554  0054B6  0012               	return	
 20555  0054B8                     l715:
 20556                           
 20557                           ; BSR set to: 0
 20558                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20559                           
 20560                           ; BSR set to: 0
 20561  0054B8  0E2A               	movlw	42
 20562  0054BA  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20563  0054BC  A4D8               	btfss	status,2,c
 20564  0054BE  D002               	goto	l718
 20565                           
 20566                           ; BSR set to: 0
 20567                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20568  0054C0  0E00               	movlw	0
 20569                           
 20570                           ; BSR set to: 0
 20571  0054C2  0012               	return	
 20572  0054C4                     l718:
 20573  0054C4                     l11077:
 20574                           
 20575                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20576  0054C4  0101               	movlb	1	; () banked
 20577  0054C6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20578  0054C8  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20579  0054CA  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20580  0054CC  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20581  0054CE  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20582  0054D0  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20583  0054D2  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20584  0054D4  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20585  0054D6  B0D8               	btfsc	status,0,c
 20586  0054D8  D002               	goto	l719
 20587                           
 20588                           ; BSR set to: 1
 20589                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20590  0054DA  0E01               	movlw	1
 20591  0054DC  D001               	goto	L27
 20592  0054DE                     l719:
 20593                           
 20594                           ; BSR set to: 1
 20595                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20596                           
 20597                           ; BSR set to: 1
 20598  0054DE  0E00               	movlw	0
 20599  0054E0                     L27:
 20600  0054E0  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20601                           
 20602                           ; BSR set to: 1
 20603                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20604                           
 20605                           ; BSR set to: 1
 20606  0054E2  0E02               	movlw	2
 20607  0054E4  0100               	movlb	0	; () banked
 20608  0054E6  19ED               	xorwf	_MSD_State& (0+255),w,b
 20609  0054E8  A4D8               	btfss	status,2,c
 20610  0054EA  D014               	goto	l721
 20611                           
 20612                           ; BSR set to: 0
 20613                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20614  0054EC  0E2A               	movlw	42
 20615  0054EE  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20616  0054F0  B4D8               	btfsc	status,2,c
 20617  0054F2  D005               	goto	l722
 20618                           
 20619                           ; BSR set to: 0
 20620  0054F4  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20621  0054F6  A4D8               	btfss	status,2,c
 20622  0054F8  D002               	goto	l722
 20623  0054FA                     u7760:
 20624                           
 20625                           ; BSR set to: 0
 20626                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20627  0054FA  0E05               	movlw	5
 20628  0054FC  D01D               	goto	L30
 20629  0054FE                     l722:
 20630                           
 20631                           ; BSR set to: 0
 20632                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20633                           
 20634                           ; BSR set to: 0
 20635  0054FE  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20636  005500  B4D8               	btfsc	status,2,c
 20637  005502  D00F               	goto	u7810
 20638                           
 20639                           ; BSR set to: 0
 20640                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20641                           
 20642                           ; BSR set to: 0
 20643                           
 20644                           ; BSR set to: 0
 20645                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20646  005504  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20647  005506  B4D8               	btfsc	status,2,c
 20648  005508  D003               	goto	u7790
 20649                           
 20650                           ; BSR set to: 0
 20651                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20652                           
 20653                           ; BSR set to: 0
 20654                           
 20655                           ; BSR set to: 0
 20656                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20657  00550A  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20658  00550C  A4D8               	btfss	status,2,c
 20659  00550E  D7F5               	goto	u7760
 20660  005510                     u7790:
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20664  005510  0E04               	movlw	4
 20665  005512  D012               	goto	L30
 20666  005514                     l721:
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20670                           
 20671                           ; BSR set to: 0
 20672  005514  0E2A               	movlw	42
 20673  005516  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20674  005518  B4D8               	btfsc	status,2,c
 20675  00551A  D00D               	goto	l737
 20676                           
 20677                           ; BSR set to: 0
 20678                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20679                           
 20680                           ; BSR set to: 0
 20681                           
 20682                           ; BSR set to: 0
 20683                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20684  00551C  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20685  00551E  A4D8               	btfss	status,2,c
 20686  005520  D002               	goto	l733
 20687  005522                     u7810:
 20688                           
 20689                           ; BSR set to: 0
 20690                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20691  005522  0E01               	movlw	1
 20692  005524  D009               	goto	L30
 20693  005526                     l733:
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20697                           
 20698                           ; BSR set to: 0
 20699  005526  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20700  005528  B4D8               	btfsc	status,2,c
 20701  00552A  D003               	goto	u7830
 20702                           
 20703                           ; BSR set to: 0
 20704                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20705                           
 20706                           ; BSR set to: 0
 20707                           
 20708                           ; BSR set to: 0
 20709                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20710  00552C  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20711  00552E  A4D8               	btfss	status,2,c
 20712  005530  D002               	goto	l737
 20713  005532                     u7830:
 20714                           
 20715                           ; BSR set to: 0
 20716                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20717  005532  0E02               	movlw	2
 20718  005534  D001               	goto	L30
 20719  005536                     l737:
 20720                           
 20721                           ; BSR set to: 0
 20722                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20723                           
 20724                           ; BSR set to: 0
 20725  005536  0E03               	movlw	3
 20726  005538                     L30:
 20727  005538  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20728                           
 20729                           ; BSR set to: 0
 20730                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20731                           
 20732                           ; BSR set to: 0
 20733                           
 20734                           ; BSR set to: 0
 20735                           
 20736                           ; BSR set to: 0
 20737                           
 20738                           ; BSR set to: 0
 20739                           
 20740                           ; BSR set to: 0
 20741  00553A  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20742  00553C  ECF2  F024         	call	_MSDErrorHandler
 20743                           
 20744                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20745  005540  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20746  005542  0012               	return	
 20747  005544                     __end_of_MSDCheckForErrorCases:
 20748                           	opt stack 0
 20749                           tosu	equ	0xFFF
 20750                           tosh	equ	0xFFE
 20751                           tosl	equ	0xFFD
 20752                           pclath	equ	0xFFA
 20753                           tblptru	equ	0xFF8
 20754                           tblptrh	equ	0xFF7
 20755                           tblptrl	equ	0xFF6
 20756                           tablat	equ	0xFF5
 20757                           prodh	equ	0xFF4
 20758                           prodl	equ	0xFF3
 20759                           intcon	equ	0xFF2
 20760                           intcon2	equ	0xFF1
 20761                           intcon3	equ	0xFF0
 20762                           indf0	equ	0xFEF
 20763                           postinc0	equ	0xFEE
 20764                           fsr0h	equ	0xFEA
 20765                           fsr0l	equ	0xFE9
 20766                           wreg	equ	0xFE8
 20767                           indf1	equ	0xFE7
 20768                           postdec1	equ	0xFE5
 20769                           plusw1	equ	0xFE3
 20770                           fsr1h	equ	0xFE2
 20771                           fsr1l	equ	0xFE1
 20772                           indf2	equ	0xFDF
 20773                           postinc2	equ	0xFDE
 20774                           postdec2	equ	0xFDD
 20775                           plusw2	equ	0xFDB
 20776                           fsr2h	equ	0xFDA
 20777                           fsr2l	equ	0xFD9
 20778                           status	equ	0xFD8
 20779                           
 20780 ;; *************** function _MSDErrorHandler *****************
 20781 ;; Defined at:
 20782 ;;		line 1577 in file "usb_device_msd.c"
 20783 ;; Parameters:    Size  Location     Type
 20784 ;;  ErrorCase       1    wreg     unsigned char 
 20785 ;; Auto vars:     Size  Location     Type
 20786 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20787 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20788 ;; Return value:  Size  Location     Type
 20789 ;;                  1    wreg      void 
 20790 ;; Registers used:
 20791 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20792 ;; Tracked objects:
 20793 ;;		On entry : 0/0
 20794 ;;		On exit  : 0/0
 20795 ;;		Unchanged: 0/0
 20796 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20797 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20798 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20799 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20800 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20801 ;;Total ram usage:        2 bytes
 20802 ;; Hardware stack levels used:    1
 20803 ;; Hardware stack levels required when called:    1
 20804 ;; This function calls:
 20805 ;;		_ResetSenseData
 20806 ;;		_USBStallEndpoint
 20807 ;; This function is called by:
 20808 ;;		_MSDProcessCommandMediaAbsent
 20809 ;;		_MSDProcessCommandMediaPresent
 20810 ;;		_MSDCheckForErrorCases
 20811 ;; This function uses a non-reentrant model
 20812 ;;
 20813                           
 20814                           	psect	text92
 20815  0049E4                     __ptext92:
 20816                           	opt stack 0
 20817  0049E4                     _MSDErrorHandler:
 20818                           	opt stack 23
 20819                           
 20820                           ;incstack = 0
 20821                           ;MSDErrorHandler@ErrorCase stored from wreg
 20822  0049E4  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20823                           
 20824                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20825  0049E6  0100               	movlb	0	; () banked
 20826  0049E8  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20827  0049EA  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20828  0049EC  B4D8               	btfsc	status,2,c
 20829  0049EE  D006               	goto	u7270
 20830                           
 20831                           ; BSR set to: 0
 20832  0049F0  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20833  0049F4  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20834  0049F8  BEDF               	btfsc	indf2,7,c
 20835  0049FA  0012               	return	
 20836  0049FC                     u7270:
 20837                           
 20838                           ; BSR set to: 0
 20839                           
 20840                           ; BSR set to: 0
 20841  0049FC  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 20842  0049FE  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20843  004A00  B4D8               	btfsc	status,2,c
 20844  004A02  D006               	goto	l741
 20845                           
 20846                           ; BSR set to: 0
 20847  004A04  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20848  004A08  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20849  004A0C  BEDF               	btfsc	indf2,7,c
 20850  004A0E  0012               	return	
 20851  004A10                     l741:
 20852                           
 20853                           ; BSR set to: 0
 20854                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20855  004A10  C0ED  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20856                           
 20857                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20858  004A14  69EC               	setf	_MSDCommandState& (0+255),b
 20859                           
 20860                           ; BSR set to: 0
 20861                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20862  004A16  0E00               	movlw	0
 20863  004A18  6FEB               	movwf	_MSDReadState& (0+255),b
 20864                           
 20865                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20866  004A1A  0E00               	movlw	0
 20867  004A1C  6FEA               	movwf	_MSDWriteState& (0+255),b
 20868                           
 20869                           ; BSR set to: 0
 20870                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20871  004A1E  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20872  004A22  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20873  004A26  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20874  004A2A  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20875                           
 20876                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20877  004A2E  0E01               	movlw	1
 20878  004A30  010D               	movlb	13	; () banked
 20879  004A32  6F8C               	movwf	140,b	;volatile
 20880                           
 20881                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20882  004A34  0E03               	movlw	3
 20883  004A36  0100               	movlb	0	; () banked
 20884  004A38  6FED               	movwf	_MSD_State& (0+255),b
 20885                           
 20886                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20887  004A3A  D043               	goto	l747
 20888  004A3C                     
 20889                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20890                           
 20891                           ; BSR set to: 0
 20892  004A3C  0E02               	movlw	2
 20893  004A3E  010D               	movlb	13	; () banked
 20894  004A40  6F8C               	movwf	140,b	;volatile
 20895                           
 20896                           ;usb_device_msd.c: 1607: break;
 20897  004A42  0012               	return	
 20898  004A44                     
 20899                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20900                           
 20901                           ; BSR set to: 13
 20902  004A44  0E01               	movlw	1
 20903  004A46  6E01               	movwf	USBStallEndpoint@dir,c
 20904  004A48  0E02               	movlw	2
 20905  004A4A  ECEB  F023         	call	_USBStallEndpoint
 20906                           
 20907                           ;usb_device_msd.c: 1611: break;
 20908  004A4E  0012               	return	
 20909  004A50                     
 20910                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20911  004A50  0E02               	movlw	2
 20912  004A52  010D               	movlb	13	; () banked
 20913  004A54  6F8C               	movwf	140,b	;volatile
 20914                           
 20915                           ; BSR set to: 13
 20916                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20917  004A56  0E01               	movlw	1
 20918  004A58  6E01               	movwf	USBStallEndpoint@dir,c
 20919  004A5A  0E02               	movlw	2
 20920  004A5C  ECEB  F023         	call	_USBStallEndpoint
 20921                           
 20922                           ;usb_device_msd.c: 1616: break;
 20923  004A60  0012               	return	
 20924  004A62                     
 20925                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20926  004A62  0E00               	movlw	0
 20927  004A64  6E01               	movwf	USBStallEndpoint@dir,c
 20928  004A66  0E02               	movlw	2
 20929  004A68  ECEB  F023         	call	_USBStallEndpoint
 20930                           
 20931                           ;usb_device_msd.c: 1620: break;
 20932  004A6C  0012               	return	
 20933  004A6E                     
 20934                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20935  004A6E  0E02               	movlw	2
 20936  004A70  010D               	movlb	13	; () banked
 20937  004A72  6F8C               	movwf	140,b	;volatile
 20938                           
 20939                           ; BSR set to: 13
 20940                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20941  004A74  0E00               	movlw	0
 20942  004A76  6E01               	movwf	USBStallEndpoint@dir,c
 20943  004A78  0E02               	movlw	2
 20944  004A7A  ECEB  F023         	call	_USBStallEndpoint
 20945                           
 20946                           ;usb_device_msd.c: 1625: break;
 20947  004A7E  0012               	return	
 20948  004A80                     
 20949                           ;usb_device_msd.c: 1628: ResetSenseData();
 20950  004A80  EC76  F03D         	call	_ResetSenseData	;wreg free
 20951                           
 20952                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20953  004A84  0101               	movlb	1	; () banked
 20954  004A86  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20955  004A88  0BF0               	andlw	-16
 20956  004A8A  0905               	iorlw	5
 20957  004A8C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20958                           
 20959                           ; BSR set to: 1
 20960                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20961  004A8E  0E20               	movlw	32
 20962  004A90  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20963                           
 20964                           ; BSR set to: 1
 20965                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20966  004A92  0E00               	movlw	0
 20967  004A94  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20968                           
 20969                           ; BSR set to: 1
 20970                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20971  004A96  0E02               	movlw	2
 20972  004A98  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20973  004A9A  A4D8               	btfss	status,2,c
 20974  004A9C  D00C               	goto	l755
 20975                           
 20976                           ; BSR set to: 1
 20977  004A9E  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20978  004AA0  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20979  004AA2  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20980  004AA4  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20981  004AA6  B4D8               	btfsc	status,2,c
 20982  004AA8  D006               	goto	l755
 20983                           
 20984                           ; BSR set to: 1
 20985                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 20986  004AAA  0E00               	movlw	0
 20987  004AAC  6E01               	movwf	USBStallEndpoint@dir,c
 20988  004AAE  0E02               	movlw	2
 20989  004AB0  ECEB  F023         	call	_USBStallEndpoint
 20990                           
 20991                           ;usb_device_msd.c: 1636: }
 20992  004AB4  0012               	return	
 20993  004AB6                     l755:
 20994                           
 20995                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 20996  004AB6  0E01               	movlw	1
 20997  004AB8  6E01               	movwf	USBStallEndpoint@dir,c
 20998  004ABA  0E02               	movlw	2
 20999  004ABC  ECEB  F023         	call	_USBStallEndpoint
 21000                           
 21001                           ;usb_device_msd.c: 1644: }
 21002                           
 21003                           ;usb_device_msd.c: 1643: break;
 21004                           
 21005                           ;usb_device_msd.c: 1642: default:
 21006                           
 21007                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21008  004AC0  0012               	return	
 21009  004AC2                     l747:
 21010  004AC2  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21011                           
 21012                           ; Switch size 1, requested type "space"
 21013                           ; Number of cases is 6, Range of values is 1 to 127
 21014                           ; switch strategies available:
 21015                           ; Name         Instructions Cycles
 21016                           ; simple_byte           19    10 (average)
 21017                           ;	Chosen strategy is simple_byte
 21018  004AC4  0A01               	xorlw	1	; case 1
 21019  004AC6  B4D8               	btfsc	status,2,c
 21020  004AC8  D7B9               	goto	l748
 21021  004ACA  0A03               	xorlw	3	; case 2
 21022  004ACC  B4D8               	btfsc	status,2,c
 21023  004ACE  D7BA               	goto	l750
 21024  004AD0  0A01               	xorlw	1	; case 3
 21025  004AD2  B4D8               	btfsc	status,2,c
 21026  004AD4  D7BD               	goto	l751
 21027  004AD6  0A07               	xorlw	7	; case 4
 21028  004AD8  B4D8               	btfsc	status,2,c
 21029  004ADA  D7C3               	goto	l752
 21030  004ADC  0A01               	xorlw	1	; case 5
 21031  004ADE  B4D8               	btfsc	status,2,c
 21032  004AE0  D7C6               	goto	l753
 21033  004AE2  0A7A               	xorlw	122	; case 127
 21034  004AE4  A4D8               	btfss	status,2,c
 21035  004AE6  0012               	return	
 21036  004AE8  D7CB               	goto	l754
 21037  004AEA                     __end_of_MSDErrorHandler:
 21038                           	opt stack 0
 21039                           tosu	equ	0xFFF
 21040                           tosh	equ	0xFFE
 21041                           tosl	equ	0xFFD
 21042                           pclath	equ	0xFFA
 21043                           tblptru	equ	0xFF8
 21044                           tblptrh	equ	0xFF7
 21045                           tblptrl	equ	0xFF6
 21046                           tablat	equ	0xFF5
 21047                           prodh	equ	0xFF4
 21048                           prodl	equ	0xFF3
 21049                           intcon	equ	0xFF2
 21050                           intcon2	equ	0xFF1
 21051                           intcon3	equ	0xFF0
 21052                           indf0	equ	0xFEF
 21053                           postinc0	equ	0xFEE
 21054                           fsr0h	equ	0xFEA
 21055                           fsr0l	equ	0xFE9
 21056                           wreg	equ	0xFE8
 21057                           indf1	equ	0xFE7
 21058                           postdec1	equ	0xFE5
 21059                           plusw1	equ	0xFE3
 21060                           fsr1h	equ	0xFE2
 21061                           fsr1l	equ	0xFE1
 21062                           indf2	equ	0xFDF
 21063                           postinc2	equ	0xFDE
 21064                           postdec2	equ	0xFDD
 21065                           plusw2	equ	0xFDB
 21066                           fsr2h	equ	0xFDA
 21067                           fsr2l	equ	0xFD9
 21068                           status	equ	0xFD8
 21069                           
 21070 ;; *************** function _USBStallEndpoint *****************
 21071 ;; Defined at:
 21072 ;;		line 1073 in file "usb_device.c"
 21073 ;; Parameters:    Size  Location     Type
 21074 ;;  ep              1    wreg     unsigned char 
 21075 ;;  dir             1    0[COMRAM] unsigned char 
 21076 ;; Auto vars:     Size  Location     Type
 21077 ;;  ep              1    5[COMRAM] unsigned char 
 21078 ;;  p               2    6[COMRAM] PTR struct __BDT
 21079 ;;		 -> BDT(48), 
 21080 ;; Return value:  Size  Location     Type
 21081 ;;                  1    wreg      void 
 21082 ;; Registers used:
 21083 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21084 ;; Tracked objects:
 21085 ;;		On entry : 0/0
 21086 ;;		On exit  : 0/0
 21087 ;;		Unchanged: 0/0
 21088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21089 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21090 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21091 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21092 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21093 ;;Total ram usage:        8 bytes
 21094 ;; Hardware stack levels used:    1
 21095 ;; This function calls:
 21096 ;;		Nothing
 21097 ;; This function is called by:
 21098 ;;		_MSDTasks
 21099 ;;		_MSDReadHandler
 21100 ;;		_MSDWriteHandler
 21101 ;;		_MSDErrorHandler
 21102 ;;		_MSDTransferTerminated
 21103 ;; This function uses a non-reentrant model
 21104 ;;
 21105                           
 21106                           	psect	text93
 21107  0047D6                     __ptext93:
 21108                           	opt stack 0
 21109  0047D6                     _USBStallEndpoint:
 21110                           	opt stack 27
 21111                           
 21112                           ;incstack = 0
 21113                           ;USBStallEndpoint@ep stored from wreg
 21114  0047D6  6E06               	movwf	USBStallEndpoint@ep,c
 21115                           
 21116                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21117  0047D8  5006               	movf	USBStallEndpoint@ep,w,c
 21118  0047DA  A4D8               	btfss	status,2,c
 21119  0047DC  D02C               	goto	l191
 21120                           
 21121                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21122  0047DE  0100               	movlb	0	; () banked
 21123  0047E0  EE20 F001          	lfsr	2,1
 21124  0047E4  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21125  0047E6  26D9               	addwf	fsr2l,f,c
 21126  0047E8  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21127  0047EA  22DA               	addwfc	fsr2h,f,c
 21128  0047EC  0E08               	movlw	8
 21129  0047EE  6EDF               	movwf	indf2,c
 21130                           
 21131                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21132  0047F0  EE20 F002          	lfsr	2,2
 21133  0047F4  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21134  0047F6  26D9               	addwf	fsr2l,f,c
 21135  0047F8  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21136  0047FA  22DA               	addwfc	fsr2h,f,c
 21137  0047FC  0E30               	movlw	48
 21138  0047FE  6EDE               	movwf	postinc2,c
 21139  004800  0E0D               	movlw	13
 21140  004802  6EDD               	movwf	postdec2,c
 21141                           
 21142                           ; BSR set to: 0
 21143                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21144  004804  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21145  004808  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21146  00480C  0E0C               	movlw	12
 21147  00480E  6EDF               	movwf	indf2,c
 21148                           
 21149                           ; BSR set to: 0
 21150                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21151  004810  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21152  004814  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21153  004818  0E00               	movlw	0
 21154  00481A  8EDB               	bsf	plusw2,7,c
 21155                           
 21156                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21157  00481C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21158  004820  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21159  004824  0E04               	movlw	4
 21160  004826  6EDF               	movwf	indf2,c
 21161                           
 21162                           ; BSR set to: 0
 21163                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21164  004828  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21165  00482C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21166  004830  0E00               	movlw	0
 21167  004832  8EDB               	bsf	plusw2,7,c
 21168                           
 21169                           ;usb_device.c: 1089: }
 21170  004834  0012               	return	
 21171  004836                     l191:
 21172                           
 21173                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21174                           
 21175                           ; BSR set to: 0
 21176  004836  5001               	movf	USBStallEndpoint@dir,w,c
 21177  004838  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21178  00483A  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21179  00483C  90D8               	bcf	status,0,c
 21180  00483E  3602               	rlcf	??_USBStallEndpoint,f,c
 21181  004840  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21182  004842  5006               	movf	USBStallEndpoint@ep,w,c
 21183  004844  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21184  004846  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21185  004848  90D8               	bcf	status,0,c
 21186  00484A  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21187  00484C  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21188  00484E  90D8               	bcf	status,0,c
 21189  004850  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21190  004852  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21191  004854  5002               	movf	??_USBStallEndpoint,w,c
 21192  004856  2604               	addwf	??_USBStallEndpoint+2,f,c
 21193  004858  5003               	movf	??_USBStallEndpoint+1,w,c
 21194  00485A  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21195  00485C  90D8               	bcf	status,0,c
 21196  00485E  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21197  004860  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21198  004862  90D8               	bcf	status,0,c
 21199  004864  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21200  004866  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21201  004868  0E00               	movlw	0
 21202  00486A  2404               	addwf	??_USBStallEndpoint+2,w,c
 21203  00486C  6E07               	movwf	USBStallEndpoint@p,c
 21204  00486E  0E0D               	movlw	13
 21205  004870  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21206  004872  6E08               	movwf	USBStallEndpoint@p+1,c
 21207                           
 21208                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21209  004874  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21210  004878  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21211  00487C  0E00               	movlw	0
 21212  00487E  84DB               	bsf	plusw2,2,c
 21213                           
 21214                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21215  004880  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21216  004884  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21217  004888  0E00               	movlw	0
 21218  00488A  8EDB               	bsf	plusw2,7,c
 21219                           
 21220                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21221  00488C  5006               	movf	USBStallEndpoint@ep,w,c
 21222  00488E  0D04               	mullw	4
 21223  004890  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21224  004894  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21225  004898  5001               	movf	USBStallEndpoint@dir,w,c
 21226  00489A  0D02               	mullw	2
 21227  00489C  50F3               	movf	prodl,w,c
 21228  00489E  2602               	addwf	??_USBStallEndpoint,f,c
 21229  0048A0  50F4               	movf	prodh,w,c
 21230  0048A2  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21231  0048A4  90D8               	bcf	status,0,c
 21232  0048A6  3602               	rlcf	??_USBStallEndpoint,f,c
 21233  0048A8  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21234  0048AA  90D8               	bcf	status,0,c
 21235  0048AC  3602               	rlcf	??_USBStallEndpoint,f,c
 21236  0048AE  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21237  0048B0  0E04               	movlw	4
 21238  0048B2  2602               	addwf	??_USBStallEndpoint,f,c
 21239  0048B4  0E00               	movlw	0
 21240  0048B6  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21241  0048B8  0E00               	movlw	0
 21242  0048BA  2402               	addwf	??_USBStallEndpoint,w,c
 21243  0048BC  6E07               	movwf	USBStallEndpoint@p,c
 21244  0048BE  0E0D               	movlw	13
 21245  0048C0  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21246  0048C2  6E08               	movwf	USBStallEndpoint@p+1,c
 21247                           
 21248                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21249  0048C4  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21250  0048C8  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21251  0048CC  0E00               	movlw	0
 21252  0048CE  84DB               	bsf	plusw2,2,c
 21253                           
 21254                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21255  0048D0  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21256  0048D4  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21257  0048D8  0E00               	movlw	0
 21258  0048DA  8EDB               	bsf	plusw2,7,c
 21259  0048DC  0012               	return	
 21260  0048DE                     __end_of_USBStallEndpoint:
 21261                           	opt stack 0
 21262                           tosu	equ	0xFFF
 21263                           tosh	equ	0xFFE
 21264                           tosl	equ	0xFFD
 21265                           pclath	equ	0xFFA
 21266                           tblptru	equ	0xFF8
 21267                           tblptrh	equ	0xFF7
 21268                           tblptrl	equ	0xFF6
 21269                           tablat	equ	0xFF5
 21270                           prodh	equ	0xFF4
 21271                           prodl	equ	0xFF3
 21272                           intcon	equ	0xFF2
 21273                           intcon2	equ	0xFF1
 21274                           intcon3	equ	0xFF0
 21275                           indf0	equ	0xFEF
 21276                           postinc0	equ	0xFEE
 21277                           fsr0h	equ	0xFEA
 21278                           fsr0l	equ	0xFE9
 21279                           wreg	equ	0xFE8
 21280                           indf1	equ	0xFE7
 21281                           postdec1	equ	0xFE5
 21282                           plusw1	equ	0xFE3
 21283                           fsr1h	equ	0xFE2
 21284                           fsr1l	equ	0xFE1
 21285                           indf2	equ	0xFDF
 21286                           postinc2	equ	0xFDE
 21287                           postdec2	equ	0xFDD
 21288                           plusw2	equ	0xFDB
 21289                           fsr2h	equ	0xFDA
 21290                           fsr2l	equ	0xFD9
 21291                           status	equ	0xFD8
 21292                           
 21293 ;; *************** function _ResetSenseData *****************
 21294 ;; Defined at:
 21295 ;;		line 1373 in file "usb_device_msd.c"
 21296 ;; Parameters:    Size  Location     Type
 21297 ;;		None
 21298 ;; Auto vars:     Size  Location     Type
 21299 ;;		None
 21300 ;; Return value:  Size  Location     Type
 21301 ;;                  1    wreg      void 
 21302 ;; Registers used:
 21303 ;;		wreg, status,2
 21304 ;; Tracked objects:
 21305 ;;		On entry : 0/0
 21306 ;;		On exit  : 0/0
 21307 ;;		Unchanged: 0/0
 21308 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21309 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21310 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21311 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21312 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21313 ;;Total ram usage:        0 bytes
 21314 ;; Hardware stack levels used:    1
 21315 ;; This function calls:
 21316 ;;		Nothing
 21317 ;; This function is called by:
 21318 ;;		_USBMSDInit
 21319 ;;		_MSDProcessCommandMediaAbsent
 21320 ;;		_MSDProcessCommandMediaPresent
 21321 ;;		_MSDErrorHandler
 21322 ;; This function uses a non-reentrant model
 21323 ;;
 21324                           
 21325                           	psect	text94
 21326  007AEC                     __ptext94:
 21327                           	opt stack 0
 21328  007AEC                     _ResetSenseData:
 21329                           	opt stack 26
 21330                           
 21331                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21332                           
 21333                           ;incstack = 0
 21334  007AEC  0101               	movlb	1	; () banked
 21335  007AEE  911F               	bcf	_gblSenseData& (0+255),0,b
 21336  007AF0  931F               	bcf	_gblSenseData& (0+255),1,b
 21337  007AF2  951F               	bcf	_gblSenseData& (0+255),2,b
 21338  007AF4  971F               	bcf	_gblSenseData& (0+255),3,b
 21339  007AF6  891F               	bsf	_gblSenseData& (0+255),4,b
 21340  007AF8  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21341  007AFA  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21342                           
 21343                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21344  007AFC  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21345                           
 21346                           ; BSR set to: 1
 21347                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21348  007AFE  0E00               	movlw	0
 21349  007B00  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21350                           
 21351                           ; BSR set to: 1
 21352                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21353  007B02  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21354  007B04  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21355  007B06  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21356  007B08  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21357                           
 21358                           ; BSR set to: 1
 21359                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21360  007B0A  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21361                           
 21362                           ; BSR set to: 1
 21363                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21364  007B0C  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21365                           
 21366                           ; BSR set to: 1
 21367                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21368  007B0E  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21369                           
 21370                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21371  007B10  0E00               	movlw	0
 21372  007B12  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21373                           
 21374                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21375  007B14  0E00               	movlw	0
 21376  007B16  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21377                           
 21378                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21379  007B18  0E00               	movlw	0
 21380  007B1A  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21381                           
 21382                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21383  007B1C  0E00               	movlw	0
 21384  007B1E  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21385                           
 21386                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21387  007B20  0E0A               	movlw	10
 21388  007B22  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21389                           
 21390                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21391  007B24  0E00               	movlw	0
 21392  007B26  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21393  007B28  0E00               	movlw	0
 21394  007B2A  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21395  007B2C  0E00               	movlw	0
 21396  007B2E  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21397  007B30  0E00               	movlw	0
 21398  007B32  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21399                           
 21400                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21401  007B34  0E00               	movlw	0
 21402  007B36  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21403                           
 21404                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21405  007B38  0E00               	movlw	0
 21406  007B3A  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21407                           
 21408                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21409  007B3C  0E00               	movlw	0
 21410  007B3E  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21411                           
 21412                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21413  007B40  0E00               	movlw	0
 21414  007B42  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21415                           
 21416                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21417  007B44  0E00               	movlw	0
 21418  007B46  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21419                           
 21420                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21421  007B48  0E00               	movlw	0
 21422  007B4A  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21423                           
 21424                           ; BSR set to: 1
 21425  007B4C  0012               	return		;funcret
 21426  007B4E                     __end_of_ResetSenseData:
 21427                           	opt stack 0
 21428                           tosu	equ	0xFFF
 21429                           tosh	equ	0xFFE
 21430                           tosl	equ	0xFFD
 21431                           pclath	equ	0xFFA
 21432                           tblptru	equ	0xFF8
 21433                           tblptrh	equ	0xFF7
 21434                           tblptrl	equ	0xFF6
 21435                           tablat	equ	0xFF5
 21436                           prodh	equ	0xFF4
 21437                           prodl	equ	0xFF3
 21438                           intcon	equ	0xFF2
 21439                           intcon2	equ	0xFF1
 21440                           intcon3	equ	0xFF0
 21441                           indf0	equ	0xFEF
 21442                           postinc0	equ	0xFEE
 21443                           fsr0h	equ	0xFEA
 21444                           fsr0l	equ	0xFE9
 21445                           wreg	equ	0xFE8
 21446                           indf1	equ	0xFE7
 21447                           postdec1	equ	0xFE5
 21448                           plusw1	equ	0xFE3
 21449                           fsr1h	equ	0xFE2
 21450                           fsr1l	equ	0xFE1
 21451                           indf2	equ	0xFDF
 21452                           postinc2	equ	0xFDE
 21453                           postdec2	equ	0xFDD
 21454                           plusw2	equ	0xFDB
 21455                           fsr2h	equ	0xFDA
 21456                           fsr2l	equ	0xFD9
 21457                           status	equ	0xFD8
 21458                           
 21459 ;; *************** function _ExternalFlash_SectorRead *****************
 21460 ;; Defined at:
 21461 ;;		line 40 in file "external_flash.c"
 21462 ;; Parameters:    Size  Location     Type
 21463 ;;  config          2   43[COMRAM] PTR void 
 21464 ;;		 -> NULL(0), 
 21465 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21466 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21467 ;;		 -> msd_buffer(512), 
 21468 ;; Auto vars:     Size  Location     Type
 21469 ;;  page            2   51[COMRAM] unsigned int 
 21470 ;; Return value:  Size  Location     Type
 21471 ;;                  1    wreg      unsigned char 
 21472 ;; Registers used:
 21473 ;;		wreg, status,2, status,0, cstack
 21474 ;; Tracked objects:
 21475 ;;		On entry : 0/0
 21476 ;;		On exit  : 0/0
 21477 ;;		Unchanged: 0/0
 21478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21479 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21480 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21481 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21482 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21483 ;;Total ram usage:       10 bytes
 21484 ;; Hardware stack levels used:    1
 21485 ;; Hardware stack levels required when called:    5
 21486 ;; This function calls:
 21487 ;;		_flash_sector_read
 21488 ;; This function is called by:
 21489 ;;		_MSDReadHandler
 21490 ;; This function uses a non-reentrant model
 21491 ;;
 21492                           
 21493                           	psect	text95
 21494  00884C                     __ptext95:
 21495                           	opt stack 0
 21496  00884C                     _ExternalFlash_SectorRead:
 21497                           	opt stack 20
 21498                           
 21499                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21500                           
 21501                           ; BSR set to: 1
 21502                           ;incstack = 0
 21503  00884C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21504  008850  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21505                           
 21506                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21507  008854  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21508  008856  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21509  008858  E104               	bnz	u7930
 21510  00885A  0E20               	movlw	32
 21511  00885C  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21512  00885E  A0D8               	btfss	status,0,c
 21513  008860  D002               	goto	l1888
 21514  008862                     u7930:
 21515                           
 21516                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21517  008862  0E00               	movlw	0
 21518  008864  0012               	return	
 21519  008866                     l1888:
 21520                           
 21521                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21522  008866  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21523  00886A  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21524  00886E  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21525  008872  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21526  008876  EC3F  F044         	call	_flash_sector_read	;wreg free
 21527                           
 21528                           ;external_flash.c: 53: return 1;
 21529  00887A  0E01               	movlw	1
 21530  00887C  0012               	return	
 21531  00887E                     __end_of_ExternalFlash_SectorRead:
 21532                           	opt stack 0
 21533                           tosu	equ	0xFFF
 21534                           tosh	equ	0xFFE
 21535                           tosl	equ	0xFFD
 21536                           pclath	equ	0xFFA
 21537                           tblptru	equ	0xFF8
 21538                           tblptrh	equ	0xFF7
 21539                           tblptrl	equ	0xFF6
 21540                           tablat	equ	0xFF5
 21541                           prodh	equ	0xFF4
 21542                           prodl	equ	0xFF3
 21543                           intcon	equ	0xFF2
 21544                           intcon2	equ	0xFF1
 21545                           intcon3	equ	0xFF0
 21546                           indf0	equ	0xFEF
 21547                           postinc0	equ	0xFEE
 21548                           fsr0h	equ	0xFEA
 21549                           fsr0l	equ	0xFE9
 21550                           wreg	equ	0xFE8
 21551                           indf1	equ	0xFE7
 21552                           postdec1	equ	0xFE5
 21553                           plusw1	equ	0xFE3
 21554                           fsr1h	equ	0xFE2
 21555                           fsr1l	equ	0xFE1
 21556                           indf2	equ	0xFDF
 21557                           postinc2	equ	0xFDE
 21558                           postdec2	equ	0xFDD
 21559                           plusw2	equ	0xFDB
 21560                           fsr2h	equ	0xFDA
 21561                           fsr2l	equ	0xFD9
 21562                           status	equ	0xFD8
 21563                           
 21564 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21565 ;; Defined at:
 21566 ;;		line 993 in file "usb_device_msd.c"
 21567 ;; Parameters:    Size  Location     Type
 21568 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21569 ;; Auto vars:     Size  Location     Type
 21570 ;;		None
 21571 ;; Return value:  Size  Location     Type
 21572 ;;                  1    wreg      void 
 21573 ;; Registers used:
 21574 ;;		wreg, status,2, status,0
 21575 ;; Tracked objects:
 21576 ;;		On entry : 0/0
 21577 ;;		On exit  : 0/0
 21578 ;;		Unchanged: 0/0
 21579 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21580 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21581 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21582 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21583 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21584 ;;Total ram usage:        6 bytes
 21585 ;; Hardware stack levels used:    1
 21586 ;; This function calls:
 21587 ;;		Nothing
 21588 ;; This function is called by:
 21589 ;;		_MSDProcessCommandMediaPresent
 21590 ;; This function uses a non-reentrant model
 21591 ;;
 21592                           
 21593                           	psect	text96
 21594  006C3C                     __ptext96:
 21595                           	opt stack 0
 21596  006C3C                     _MSDComputeDeviceInAndResidue:
 21597                           	opt stack 26
 21598                           
 21599                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21600                           
 21601                           ;incstack = 0
 21602  006C3C  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21603  006C3E  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21604  006C40  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21605  006C42  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21606  006C44  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21607  006C46  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21608  006C48  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21609  006C4A  0101               	movlb	1	; () banked
 21610  006C4C  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21611  006C4E  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21612  006C50  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21613  006C52  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21614  006C54  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21615  006C56  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21616  006C58  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21617  006C5A  B0D8               	btfsc	status,0,c
 21618  006C5C  D00E               	goto	l659
 21619                           
 21620                           ; BSR set to: 1
 21621                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21622  006C5E  0E00               	movlw	0
 21623  006C60  010D               	movlb	13	; () banked
 21624  006C62  6F88               	movwf	136,b	;volatile
 21625  006C64  0E00               	movlw	0
 21626  006C66  6F89               	movwf	137,b	;volatile
 21627  006C68  0E00               	movlw	0
 21628  006C6A  6F8A               	movwf	138,b	;volatile
 21629  006C6C  0E00               	movlw	0
 21630  006C6E  6F8B               	movwf	139,b	;volatile
 21631                           
 21632                           ; BSR set to: 13
 21633                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21634  006C70  C108  F0DB         	movff	_gblCBW+8,_TransferLength
 21635  006C74  C109  F0DC         	movff	_gblCBW+9,_TransferLength+1
 21636                           
 21637                           ;usb_device_msd.c: 1002: }
 21638  006C78  0012               	return	
 21639  006C7A                     l659:
 21640                           
 21641                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21642                           
 21643                           ; BSR set to: 13
 21644  006C7A  0100               	movlb	0	; () banked
 21645  006C7C  51DB               	movf	_TransferLength& (0+255),w,b
 21646  006C7E  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21647  006C80  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21648  006C82  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21649  006C84  B0D8               	btfsc	status,0,c
 21650  006C86  D004               	goto	l661
 21651                           
 21652                           ; BSR set to: 0
 21653                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21654  006C88  C001  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21655  006C8C  C002  F0DC         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21656  006C90                     l661:
 21657                           
 21658                           ; BSR set to: 0
 21659                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21660                           
 21661                           ; BSR set to: 0
 21662  006C90  51DB               	movf	_TransferLength& (0+255),w,b
 21663  006C92  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21664  006C94  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21665  006C96  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21666  006C98  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21667  006C9A  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21668  006C9C  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21669  006C9E  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21670  006CA0  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21671  006CA2  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21672  006CA4  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21673  006CA6  0E00               	movlw	0
 21674  006CA8  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21675  006CAA  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21676  006CAC  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21677  006CAE  0101               	movlb	1	; () banked
 21678  006CB0  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21679  006CB2  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21680  006CB4  010D               	movlb	13	; () banked
 21681  006CB6  6F88               	movwf	136,b	;volatile
 21682  006CB8  0101               	movlb	1	; () banked
 21683  006CBA  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21684  006CBC  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21685  006CBE  010D               	movlb	13	; () banked
 21686  006CC0  6F89               	movwf	137,b	;volatile
 21687  006CC2  0101               	movlb	1	; () banked
 21688  006CC4  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21689  006CC6  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21690  006CC8  010D               	movlb	13	; () banked
 21691  006CCA  6F8A               	movwf	138,b	;volatile
 21692  006CCC  0101               	movlb	1	; () banked
 21693  006CCE  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21694  006CD0  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21695  006CD2  010D               	movlb	13	; () banked
 21696  006CD4  6F8B               	movwf	139,b	;volatile
 21697  006CD6  0012               	return	
 21698  006CD8                     __end_of_MSDComputeDeviceInAndResidue:
 21699                           	opt stack 0
 21700                           tosu	equ	0xFFF
 21701                           tosh	equ	0xFFE
 21702                           tosl	equ	0xFFD
 21703                           pclath	equ	0xFFA
 21704                           tblptru	equ	0xFF8
 21705                           tblptrh	equ	0xFF7
 21706                           tblptrl	equ	0xFF6
 21707                           tablat	equ	0xFF5
 21708                           prodh	equ	0xFF4
 21709                           prodl	equ	0xFF3
 21710                           intcon	equ	0xFF2
 21711                           intcon2	equ	0xFF1
 21712                           intcon3	equ	0xFF0
 21713                           indf0	equ	0xFEF
 21714                           postinc0	equ	0xFEE
 21715                           fsr0h	equ	0xFEA
 21716                           fsr0l	equ	0xFE9
 21717                           wreg	equ	0xFE8
 21718                           indf1	equ	0xFE7
 21719                           postdec1	equ	0xFE5
 21720                           plusw1	equ	0xFE3
 21721                           fsr1h	equ	0xFE2
 21722                           fsr1l	equ	0xFE1
 21723                           indf2	equ	0xFDF
 21724                           postinc2	equ	0xFDE
 21725                           postdec2	equ	0xFDD
 21726                           plusw2	equ	0xFDB
 21727                           fsr2h	equ	0xFDA
 21728                           fsr2l	equ	0xFD9
 21729                           status	equ	0xFD8
 21730                           
 21731 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21732 ;; Defined at:
 21733 ;;		line 18 in file "external_flash.c"
 21734 ;; Parameters:    Size  Location     Type
 21735 ;;  config          2    0[COMRAM] PTR void 
 21736 ;;		 -> NULL(0), 
 21737 ;; Auto vars:     Size  Location     Type
 21738 ;;		None
 21739 ;; Return value:  Size  Location     Type
 21740 ;;                  2    0[COMRAM] unsigned int 
 21741 ;; Registers used:
 21742 ;;		wreg, status,2
 21743 ;; Tracked objects:
 21744 ;;		On entry : 0/0
 21745 ;;		On exit  : 0/0
 21746 ;;		Unchanged: 0/0
 21747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21748 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21750 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21751 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21752 ;;Total ram usage:        2 bytes
 21753 ;; Hardware stack levels used:    1
 21754 ;; This function calls:
 21755 ;;		Nothing
 21756 ;; This function is called by:
 21757 ;;		_MSDProcessCommandMediaPresent
 21758 ;; This function uses a non-reentrant model
 21759 ;;
 21760                           
 21761                           	psect	text97
 21762  008F1A                     __ptext97:
 21763                           	opt stack 0
 21764  008F1A                     _ExternalFlash_SectorSizeRead:
 21765                           	opt stack 26
 21766                           
 21767                           ;external_flash.c: 20: return 512;
 21768                           
 21769                           ; BSR set to: 13
 21770                           ;incstack = 0
 21771  008F1A  0E02               	movlw	2
 21772  008F1C  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21773  008F1E  0E00               	movlw	0
 21774  008F20  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21775  008F22  0012               	return	
 21776  008F24                     __end_of_ExternalFlash_SectorSizeRead:
 21777                           	opt stack 0
 21778                           tosu	equ	0xFFF
 21779                           tosh	equ	0xFFE
 21780                           tosl	equ	0xFFD
 21781                           pclath	equ	0xFFA
 21782                           tblptru	equ	0xFF8
 21783                           tblptrh	equ	0xFF7
 21784                           tblptrl	equ	0xFF6
 21785                           tablat	equ	0xFF5
 21786                           prodh	equ	0xFF4
 21787                           prodl	equ	0xFF3
 21788                           intcon	equ	0xFF2
 21789                           intcon2	equ	0xFF1
 21790                           intcon3	equ	0xFF0
 21791                           indf0	equ	0xFEF
 21792                           postinc0	equ	0xFEE
 21793                           fsr0h	equ	0xFEA
 21794                           fsr0l	equ	0xFE9
 21795                           wreg	equ	0xFE8
 21796                           indf1	equ	0xFE7
 21797                           postdec1	equ	0xFE5
 21798                           plusw1	equ	0xFE3
 21799                           fsr1h	equ	0xFE2
 21800                           fsr1l	equ	0xFE1
 21801                           indf2	equ	0xFDF
 21802                           postinc2	equ	0xFDE
 21803                           postdec2	equ	0xFDD
 21804                           plusw2	equ	0xFDB
 21805                           fsr2h	equ	0xFDA
 21806                           fsr2l	equ	0xFD9
 21807                           status	equ	0xFD8
 21808                           
 21809 ;; *************** function _ExternalFlash_CapacityRead *****************
 21810 ;; Defined at:
 21811 ;;		line 23 in file "external_flash.c"
 21812 ;; Parameters:    Size  Location     Type
 21813 ;;  config          2    0[COMRAM] PTR void 
 21814 ;;		 -> NULL(0), 
 21815 ;; Auto vars:     Size  Location     Type
 21816 ;;		None
 21817 ;; Return value:  Size  Location     Type
 21818 ;;                  4    0[COMRAM] unsigned long 
 21819 ;; Registers used:
 21820 ;;		wreg, status,2
 21821 ;; Tracked objects:
 21822 ;;		On entry : 0/0
 21823 ;;		On exit  : 0/0
 21824 ;;		Unchanged: 0/0
 21825 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21826 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21827 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21828 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21829 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21830 ;;Total ram usage:        4 bytes
 21831 ;; Hardware stack levels used:    1
 21832 ;; This function calls:
 21833 ;;		Nothing
 21834 ;; This function is called by:
 21835 ;;		_MSDProcessCommandMediaPresent
 21836 ;; This function uses a non-reentrant model
 21837 ;;
 21838                           
 21839                           	psect	text98
 21840  008E2E                     __ptext98:
 21841                           	opt stack 0
 21842  008E2E                     _ExternalFlash_CapacityRead:
 21843                           	opt stack 26
 21844                           
 21845                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21846                           
 21847                           ;incstack = 0
 21848  008E2E  0EFF               	movlw	255
 21849  008E30  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21850  008E32  0E1F               	movlw	31
 21851  008E34  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21852  008E36  0E00               	movlw	0
 21853  008E38  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21854  008E3A  0E00               	movlw	0
 21855  008E3C  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21856  008E3E  0012               	return	
 21857  008E40                     __end_of_ExternalFlash_CapacityRead:
 21858                           	opt stack 0
 21859                           tosu	equ	0xFFF
 21860                           tosh	equ	0xFFE
 21861                           tosl	equ	0xFFD
 21862                           pclath	equ	0xFFA
 21863                           tblptru	equ	0xFF8
 21864                           tblptrh	equ	0xFF7
 21865                           tblptrl	equ	0xFF6
 21866                           tablat	equ	0xFF5
 21867                           prodh	equ	0xFF4
 21868                           prodl	equ	0xFF3
 21869                           intcon	equ	0xFF2
 21870                           intcon2	equ	0xFF1
 21871                           intcon3	equ	0xFF0
 21872                           indf0	equ	0xFEF
 21873                           postinc0	equ	0xFEE
 21874                           fsr0h	equ	0xFEA
 21875                           fsr0l	equ	0xFE9
 21876                           wreg	equ	0xFE8
 21877                           indf1	equ	0xFE7
 21878                           postdec1	equ	0xFE5
 21879                           plusw1	equ	0xFE3
 21880                           fsr1h	equ	0xFE2
 21881                           fsr1l	equ	0xFE1
 21882                           indf2	equ	0xFDF
 21883                           postinc2	equ	0xFDE
 21884                           postdec2	equ	0xFDD
 21885                           plusw2	equ	0xFDB
 21886                           fsr2h	equ	0xFDA
 21887                           fsr2l	equ	0xFD9
 21888                           status	equ	0xFD8
 21889                           
 21890 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21891 ;; Defined at:
 21892 ;;		line 10 in file "external_flash.c"
 21893 ;; Parameters:    Size  Location     Type
 21894 ;;  config          2    0[COMRAM] PTR void 
 21895 ;;		 -> NULL(0), 
 21896 ;; Auto vars:     Size  Location     Type
 21897 ;;		None
 21898 ;; Return value:  Size  Location     Type
 21899 ;;                  2    0[COMRAM] PTR struct .
 21900 ;; Registers used:
 21901 ;;		wreg, status,2, status,0
 21902 ;; Tracked objects:
 21903 ;;		On entry : 0/0
 21904 ;;		On exit  : 0/0
 21905 ;;		Unchanged: 0/0
 21906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21908 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21909 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21910 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21911 ;;Total ram usage:        2 bytes
 21912 ;; Hardware stack levels used:    1
 21913 ;; This function calls:
 21914 ;;		Nothing
 21915 ;; This function is called by:
 21916 ;;		_USBMSDInit
 21917 ;;		_MSDProcessCommand
 21918 ;; This function uses a non-reentrant model
 21919 ;;
 21920                           
 21921                           	psect	text99
 21922  008D48                     __ptext99:
 21923                           	opt stack 0
 21924  008D48                     _ExternalFlash_MediaInitialize:
 21925                           	opt stack 26
 21926                           
 21927                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21928                           
 21929                           ;incstack = 0
 21930  008D48  0101               	movlb	1	; () banked
 21931  008D4A  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 21932                           
 21933                           ; BSR set to: 1
 21934                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21935  008D4C  0E02               	movlw	2
 21936  008D4E  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 21937  008D50  0E00               	movlw	0
 21938  008D52  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 21939                           
 21940                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21941  008D54  0E00               	movlw	0
 21942  008D56  6FAA               	movwf	_mediaInformation& (0+255),b
 21943                           
 21944                           ; BSR set to: 1
 21945                           ;external_flash.c: 15: return &mediaInformation;
 21946  008D58  0EAA               	movlw	low _mediaInformation
 21947  008D5A  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21948  008D5C  0E01               	movlw	high _mediaInformation
 21949  008D5E  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21950  008D60  0012               	return	
 21951  008D62                     __end_of_ExternalFlash_MediaInitialize:
 21952                           	opt stack 0
 21953                           tosu	equ	0xFFF
 21954                           tosh	equ	0xFFE
 21955                           tosl	equ	0xFFD
 21956                           pclath	equ	0xFFA
 21957                           tblptru	equ	0xFF8
 21958                           tblptrh	equ	0xFF7
 21959                           tblptrl	equ	0xFF6
 21960                           tablat	equ	0xFF5
 21961                           prodh	equ	0xFF4
 21962                           prodl	equ	0xFF3
 21963                           intcon	equ	0xFF2
 21964                           intcon2	equ	0xFF1
 21965                           intcon3	equ	0xFF0
 21966                           indf0	equ	0xFEF
 21967                           postinc0	equ	0xFEE
 21968                           fsr0h	equ	0xFEA
 21969                           fsr0l	equ	0xFE9
 21970                           wreg	equ	0xFE8
 21971                           indf1	equ	0xFE7
 21972                           postdec1	equ	0xFE5
 21973                           plusw1	equ	0xFE3
 21974                           fsr1h	equ	0xFE2
 21975                           fsr1l	equ	0xFE1
 21976                           indf2	equ	0xFDF
 21977                           postinc2	equ	0xFDE
 21978                           postdec2	equ	0xFDD
 21979                           plusw2	equ	0xFDB
 21980                           fsr2h	equ	0xFDA
 21981                           fsr2l	equ	0xFD9
 21982                           status	equ	0xFD8
 21983                           
 21984 ;; *************** function _ExternalFlash_MediaDetect *****************
 21985 ;; Defined at:
 21986 ;;		line 29 in file "external_flash.c"
 21987 ;; Parameters:    Size  Location     Type
 21988 ;;  config          2    0[COMRAM] PTR void 
 21989 ;;		 -> NULL(0), 
 21990 ;; Auto vars:     Size  Location     Type
 21991 ;;		None
 21992 ;; Return value:  Size  Location     Type
 21993 ;;                  1    wreg      unsigned char 
 21994 ;; Registers used:
 21995 ;;		wreg
 21996 ;; Tracked objects:
 21997 ;;		On entry : 0/0
 21998 ;;		On exit  : 0/0
 21999 ;;		Unchanged: 0/0
 22000 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22001 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22002 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22003 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22004 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22005 ;;Total ram usage:        2 bytes
 22006 ;; Hardware stack levels used:    1
 22007 ;; This function calls:
 22008 ;;		Nothing
 22009 ;; This function is called by:
 22010 ;;		_USBMSDInit
 22011 ;;		_MSDProcessCommand
 22012 ;; This function uses a non-reentrant model
 22013 ;;
 22014                           
 22015                           	psect	text100
 22016  008FAA                     __ptext100:
 22017                           	opt stack 0
 22018  008FAA                     _ExternalFlash_MediaDetect:
 22019                           	opt stack 26
 22020                           
 22021                           ;external_flash.c: 31: return 1;
 22022                           
 22023                           ; BSR set to: 1
 22024                           ;incstack = 0
 22025  008FAA  0E01               	movlw	1
 22026  008FAC  0012               	return	
 22027  008FAE                     __end_of_ExternalFlash_MediaDetect:
 22028                           	opt stack 0
 22029                           tosu	equ	0xFFF
 22030                           tosh	equ	0xFFE
 22031                           tosl	equ	0xFFD
 22032                           pclath	equ	0xFFA
 22033                           tblptru	equ	0xFF8
 22034                           tblptrh	equ	0xFF7
 22035                           tblptrl	equ	0xFF6
 22036                           tablat	equ	0xFF5
 22037                           prodh	equ	0xFF4
 22038                           prodl	equ	0xFF3
 22039                           intcon	equ	0xFF2
 22040                           intcon2	equ	0xFF1
 22041                           intcon3	equ	0xFF0
 22042                           indf0	equ	0xFEF
 22043                           postinc0	equ	0xFEE
 22044                           fsr0h	equ	0xFEA
 22045                           fsr0l	equ	0xFE9
 22046                           wreg	equ	0xFE8
 22047                           indf1	equ	0xFE7
 22048                           postdec1	equ	0xFE5
 22049                           plusw1	equ	0xFE3
 22050                           fsr1h	equ	0xFE2
 22051                           fsr1l	equ	0xFE1
 22052                           indf2	equ	0xFDF
 22053                           postinc2	equ	0xFDE
 22054                           postdec2	equ	0xFDD
 22055                           plusw2	equ	0xFDB
 22056                           fsr2h	equ	0xFDA
 22057                           fsr2l	equ	0xFD9
 22058                           status	equ	0xFD8
 22059                           
 22060 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22061 ;; Defined at:
 22062 ;;		line 74 in file "app_device_custom_hid.c"
 22063 ;; Parameters:    Size  Location     Type
 22064 ;;		None
 22065 ;; Auto vars:     Size  Location     Type
 22066 ;;  idx             1    0        unsigned char 
 22067 ;; Return value:  Size  Location     Type
 22068 ;;                  1    wreg      void 
 22069 ;; Registers used:
 22070 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22071 ;; Tracked objects:
 22072 ;;		On entry : 0/0
 22073 ;;		On exit  : 0/0
 22074 ;;		Unchanged: 0/0
 22075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22076 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22078 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22079 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22080 ;;Total ram usage:        4 bytes
 22081 ;; Hardware stack levels used:    1
 22082 ;; Hardware stack levels required when called:   12
 22083 ;; This function calls:
 22084 ;;		_USBTransferOnePacket
 22085 ;;		_api_parse
 22086 ;;		_api_prepare
 22087 ;; This function is called by:
 22088 ;;		_main
 22089 ;; This function uses a non-reentrant model
 22090 ;;
 22091                           
 22092                           	psect	text101
 22093  006684                     __ptext101:
 22094                           	opt stack 0
 22095  006684                     _APP_DeviceCustomHIDTasks:
 22096                           	opt stack 18
 22097                           
 22098                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22099                           
 22100                           ;incstack = 0
 22101  006684  0E20               	movlw	32
 22102  006686  0100               	movlb	0	; () banked
 22103  006688  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22104  00668A  D001               	goto	l966
 22105  00668C  0012               	return	
 22106  00668E                     l966:
 22107                           
 22108                           ; BSR set to: 0
 22109                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22110  00668E  B265               	btfsc	3941,1,c	;volatile
 22111  006690  0012               	return	
 22112                           
 22113                           ; BSR set to: 0
 22114                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22115                           
 22116                           ; BSR set to: 0
 22117                           
 22118                           ; BSR set to: 0
 22119                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22120  006692  0101               	movlb	1	; () banked
 22121  006694  5180               	movf	_USBOutHandle& (0+255),w,b
 22122  006696  1181               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22123  006698  B4D8               	btfsc	status,2,c
 22124  00669A  D006               	goto	u12730
 22125                           
 22126                           ; BSR set to: 1
 22127  00669C  C180  FFD9         	movff	_USBOutHandle,fsr2l
 22128  0066A0  C181  FFDA         	movff	_USBOutHandle+1,fsr2h
 22129  0066A4  BEDF               	btfsc	indf2,7,c
 22130  0066A6  0012               	return	
 22131  0066A8                     u12730:
 22132                           
 22133                           ; BSR set to: 1
 22134                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22135                           
 22136                           ; BSR set to: 1
 22137  0066A8  517E               	movf	_USBInHandle& (0+255),w,b
 22138  0066AA  117F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22139  0066AC  B4D8               	btfsc	status,2,c
 22140  0066AE  D006               	goto	u12750
 22141                           
 22142                           ; BSR set to: 1
 22143  0066B0  C17E  FFD9         	movff	_USBInHandle,fsr2l
 22144  0066B4  C17F  FFDA         	movff	_USBInHandle+1,fsr2h
 22145  0066B8  BEDF               	btfsc	indf2,7,c
 22146  0066BA  D020               	goto	l972
 22147  0066BC                     u12750:
 22148                           
 22149                           ; BSR set to: 1
 22150                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22151                           
 22152                           ; BSR set to: 1
 22153  0066BC  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22154  0066BE  0100               	movlb	0	; () banked
 22155  0066C0  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22156  0066C2  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22157  0066C4  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22158  0066C8  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22159  0066CC  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22160  0066CE  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22161  0066D0  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22162  0066D2  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22163  0066D6  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22164  0066DA  ECF3  F01D         	call	_api_prepare	;wreg free
 22165                           
 22166                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22167  0066DE  0E01               	movlw	1
 22168  0066E0  6E01               	movwf	USBTransferOnePacket@dir,c
 22169  0066E2  0E80               	movlw	low _ToSendDataBuffer
 22170  0066E4  6E02               	movwf	USBTransferOnePacket@data,c
 22171  0066E6  0E03               	movlw	high _ToSendDataBuffer
 22172  0066E8  6E03               	movwf	USBTransferOnePacket@data+1,c
 22173  0066EA  0E40               	movlw	64
 22174  0066EC  6E04               	movwf	USBTransferOnePacket@len,c
 22175  0066EE  0E01               	movlw	1
 22176  0066F0  ECF6  F025         	call	_USBTransferOnePacket
 22177  0066F4  C001  F17E         	movff	?_USBTransferOnePacket,_USBInHandle
 22178  0066F8  C002  F17F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22179  0066FC                     l972:
 22180                           
 22181                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22182  0066FC  0E50               	movlw	low _ReceivedDataBuffer
 22183  0066FE  0100               	movlb	0	; () banked
 22184  006700  6F9B               	movwf	api_parse@inBuffer& (0+255),b
 22185  006702  0E02               	movlw	high _ReceivedDataBuffer
 22186  006704  6F9C               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22187  006706  0E40               	movlw	64
 22188  006708  6F9D               	movwf	api_parse@receivedDataLength& (0+255),b
 22189  00670A  EC15  F02E         	call	_api_parse	;wreg free
 22190                           
 22191                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22192  00670E  0E00               	movlw	0
 22193  006710  6E01               	movwf	USBTransferOnePacket@dir,c
 22194  006712  0E50               	movlw	low _ReceivedDataBuffer
 22195  006714  6E02               	movwf	USBTransferOnePacket@data,c
 22196  006716  0E02               	movlw	high _ReceivedDataBuffer
 22197  006718  6E03               	movwf	USBTransferOnePacket@data+1,c
 22198  00671A  0E40               	movlw	64
 22199  00671C  6E04               	movwf	USBTransferOnePacket@len,c
 22200  00671E  0E01               	movlw	1
 22201  006720  ECF6  F025         	call	_USBTransferOnePacket
 22202  006724  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 22203  006728  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22204  00672C  0012               	return	
 22205  00672E                     __end_of_APP_DeviceCustomHIDTasks:
 22206                           	opt stack 0
 22207                           tosu	equ	0xFFF
 22208                           tosh	equ	0xFFE
 22209                           tosl	equ	0xFFD
 22210                           pclath	equ	0xFFA
 22211                           tblptru	equ	0xFF8
 22212                           tblptrh	equ	0xFF7
 22213                           tblptrl	equ	0xFF6
 22214                           tablat	equ	0xFF5
 22215                           prodh	equ	0xFF4
 22216                           prodl	equ	0xFF3
 22217                           intcon	equ	0xFF2
 22218                           intcon2	equ	0xFF1
 22219                           intcon3	equ	0xFF0
 22220                           indf0	equ	0xFEF
 22221                           postinc0	equ	0xFEE
 22222                           fsr0h	equ	0xFEA
 22223                           fsr0l	equ	0xFE9
 22224                           wreg	equ	0xFE8
 22225                           indf1	equ	0xFE7
 22226                           postdec1	equ	0xFE5
 22227                           plusw1	equ	0xFE3
 22228                           fsr1h	equ	0xFE2
 22229                           fsr1l	equ	0xFE1
 22230                           indf2	equ	0xFDF
 22231                           postinc2	equ	0xFDE
 22232                           postdec2	equ	0xFDD
 22233                           plusw2	equ	0xFDB
 22234                           fsr2h	equ	0xFDA
 22235                           fsr2l	equ	0xFD9
 22236                           status	equ	0xFD8
 22237                           
 22238 ;; *************** function _api_prepare *****************
 22239 ;; Defined at:
 22240 ;;		line 57 in file "api.c"
 22241 ;; Parameters:    Size  Location     Type
 22242 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22243 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22244 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22245 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22246 ;; Auto vars:     Size  Location     Type
 22247 ;;  command         1   86[BANK0 ] enum E6715
 22248 ;; Return value:  Size  Location     Type
 22249 ;;                  1    wreg      void 
 22250 ;; Registers used:
 22251 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22252 ;; Tracked objects:
 22253 ;;		On entry : 0/0
 22254 ;;		On exit  : 0/0
 22255 ;;		Unchanged: 0/0
 22256 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22257 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22258 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22259 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22260 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22261 ;;Total ram usage:        5 bytes
 22262 ;; Hardware stack levels used:    1
 22263 ;; Hardware stack levels required when called:   10
 22264 ;; This function calls:
 22265 ;;		__fill_buffer_find_file
 22266 ;;		__fill_buffer_get_bootloader_details
 22267 ;;		__fill_buffer_get_configuration
 22268 ;;		__fill_buffer_get_display
 22269 ;;		__fill_buffer_get_file_details
 22270 ;;		__fill_buffer_get_status
 22271 ;;		__fill_buffer_read_buffer
 22272 ;;		__fill_buffer_read_file
 22273 ;;		_memcpy
 22274 ;; This function is called by:
 22275 ;;		_main
 22276 ;;		_APP_DeviceCustomHIDTasks
 22277 ;; This function uses a non-reentrant model
 22278 ;;
 22279                           
 22280                           	psect	text102
 22281  003BE6                     __ptext102:
 22282                           	opt stack 0
 22283  003BE6                     _api_prepare:
 22284                           	opt stack 20
 22285                           
 22286                           ;api.c: 59: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22287                           
 22288                           ;incstack = 0
 22289  003BE6  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22290  003BEA  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22291  003BEE  50DF               	movf	indf2,w,c
 22292  003BF0  0100               	movlb	0	; () banked
 22293  003BF2  6FB6               	movwf	api_prepare@command& (0+255),b
 22294                           
 22295                           ; BSR set to: 0
 22296                           ;api.c: 61: if(command>0x7F)
 22297  003BF4  0E7F               	movlw	127
 22298  003BF6  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22299  003BF8  D096               	goto	l2706
 22300  003BFA  D03C               	goto	l2698
 22301  003BFC                     
 22302                           ; BSR set to: 0
 22303                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22304                           
 22305                           ; BSR set to: 0
 22306  003BFC  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22307  003C00  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22308  003C04  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22309  003C08  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22310  003C0C  ECF6  F03A         	call	__fill_buffer_get_file_details	;wreg free
 22311                           
 22312                           ;api.c: 78: break;
 22313  003C10  0012               	return	
 22314  003C12                     
 22315                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22316  003C12  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22317  003C16  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22318  003C1A  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22319  003C1E  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22320  003C22  ECE0  F034         	call	__fill_buffer_find_file	;wreg free
 22321                           
 22322                           ;api.c: 83: break;
 22323  003C26  0012               	return	
 22324  003C28                     
 22325                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22326  003C28  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22327  003C2C  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22328  003C30  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22329  003C34  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22330  003C38  EC73  F013         	call	__fill_buffer_read_file	;wreg free
 22331                           
 22332                           ;api.c: 88: break;
 22333  003C3C  0012               	return	
 22334  003C3E                     
 22335                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22336  003C3E  C0B2  F00D         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22337  003C42  C0B3  F00E         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22338  003C46  C0B4  F00F         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22339  003C4A  C0B5  F010         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22340  003C4E  EC76  F027         	call	__fill_buffer_read_buffer	;wreg free
 22341                           
 22342                           ;api.c: 93: break;
 22343  003C52  0012               	return	
 22344  003C54                     
 22345                           ;api.c: 96: outBuffer[0] = 0x99;
 22346  003C54  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22347  003C58  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22348  003C5C  0E99               	movlw	153
 22349  003C5E  6EDF               	movwf	indf2,c
 22350                           
 22351                           ;api.c: 97: outBuffer[1] = 0x99;
 22352  003C60  0100               	movlb	0	; () banked
 22353  003C62  EE20 F001          	lfsr	2,1
 22354  003C66  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22355  003C68  26D9               	addwf	fsr2l,f,c
 22356  003C6A  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22357  003C6C  22DA               	addwfc	fsr2h,f,c
 22358  003C6E  0E99               	movlw	153
 22359  003C70  6EDF               	movwf	indf2,c
 22360                           
 22361                           ;api.c: 98: }
 22362  003C72  0012               	return	
 22363  003C74                     l2698:
 22364                           
 22365                           ; BSR set to: 0
 22366                           
 22367                           ; BSR set to: 0
 22368  003C74  51B6               	movf	api_prepare@command& (0+255),w,b
 22369                           
 22370                           ; Switch size 1, requested type "space"
 22371                           ; Number of cases is 4, Range of values is 128 to 131
 22372                           ; switch strategies available:
 22373                           ; Name         Instructions Cycles
 22374                           ; simple_byte           13     7 (average)
 22375                           ;	Chosen strategy is simple_byte
 22376  003C76  0A80               	xorlw	128	; case 128
 22377  003C78  B4D8               	btfsc	status,2,c
 22378  003C7A  D7C0               	goto	l2699
 22379  003C7C  0A01               	xorlw	1	; case 129
 22380  003C7E  B4D8               	btfsc	status,2,c
 22381  003C80  D7C8               	goto	l2701
 22382  003C82  0A03               	xorlw	3	; case 130
 22383  003C84  B4D8               	btfsc	status,2,c
 22384  003C86  D7D0               	goto	l2702
 22385  003C88  0A01               	xorlw	1	; case 131
 22386  003C8A  B4D8               	btfsc	status,2,c
 22387  003C8C  D7D8               	goto	l2703
 22388  003C8E  D7E2               	goto	l2704
 22389  003C90                     
 22390                           ; BSR set to: 0
 22391                           ;api.c: 107: _fill_buffer_get_status(outBuffer);
 22392                           
 22393                           ; BSR set to: 0
 22394  003C90  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22395  003C94  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22396  003C98  ECA2  F02A         	call	__fill_buffer_get_status	;wreg free
 22397                           
 22398                           ;api.c: 108: break;
 22399  003C9C  0012               	return	
 22400  003C9E                     
 22401                           ;api.c: 112: _fill_buffer_get_display(outBuffer, 0);
 22402  003C9E  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22403  003CA2  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22404  003CA6  0E00               	movlw	0
 22405  003CA8  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22406  003CAA  EC35  F031         	call	__fill_buffer_get_display	;wreg free
 22407                           
 22408                           ;api.c: 113: break;
 22409  003CAE  0012               	return	
 22410  003CB0                     
 22411                           ;api.c: 117: _fill_buffer_get_display(outBuffer, 1);
 22412  003CB0  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22413  003CB4  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22414  003CB8  0E01               	movlw	1
 22415  003CBA  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22416  003CBC  EC35  F031         	call	__fill_buffer_get_display	;wreg free
 22417                           
 22418                           ;api.c: 118: break;
 22419  003CC0  0012               	return	
 22420  003CC2                     
 22421                           ;api.c: 122: _fill_buffer_get_bootloader_details(outBuffer);
 22422  003CC2  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22423  003CC6  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22424  003CCA  EC78  F016         	call	__fill_buffer_get_bootloader_details	;wreg free
 22425                           
 22426                           ;api.c: 123: break;
 22427  003CCE  0012               	return	
 22428  003CD0                     
 22429                           ;api.c: 127: _fill_buffer_get_configuration(outBuffer);
 22430  003CD0  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22431  003CD4  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22432  003CD8  EC80  F035         	call	__fill_buffer_get_configuration	;wreg free
 22433                           
 22434                           ;api.c: 128: break;
 22435  003CDC  0012               	return	
 22436  003CDE                     
 22437                           ;api.c: 132: memcpy(outBuffer, inBuffer, 64);
 22438  003CDE  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22439  003CE2  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22440  003CE6  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22441  003CEA  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22442  003CEE  5003               	movf	memcpy@s1,w,c
 22443  003CF0  1004               	iorwf	memcpy@s1+1,w,c
 22444  003CF2  A4D8               	btfss	status,2,c
 22445  003CF4  0E20               	movlw	32
 22446  003CF6  6E05               	movwf	memcpy@s1+2,c
 22447  003CF8  0E00               	movlw	0
 22448  003CFA  6E07               	movwf	memcpy@n+1,c
 22449  003CFC  0E40               	movlw	64
 22450  003CFE  6E06               	movwf	memcpy@n,c
 22451  003D00  ECE1  F03C         	call	_memcpy	;wreg free
 22452                           
 22453                           ;api.c: 133: break;
 22454  003D04  0012               	return	
 22455  003D06                     
 22456                           ;api.c: 136: outBuffer[0] = 0x99;
 22457  003D06  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22458  003D0A  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22459  003D0E  0E99               	movlw	153
 22460  003D10  6EDF               	movwf	indf2,c
 22461                           
 22462                           ;api.c: 137: outBuffer[1] = 0x99;
 22463  003D12  0100               	movlb	0	; () banked
 22464  003D14  EE20 F001          	lfsr	2,1
 22465  003D18  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22466  003D1A  26D9               	addwf	fsr2l,f,c
 22467  003D1C  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22468  003D1E  22DA               	addwfc	fsr2h,f,c
 22469  003D20  0E99               	movlw	153
 22470  003D22  6EDF               	movwf	indf2,c
 22471                           
 22472                           ;api.c: 138: }
 22473  003D24  0012               	return	
 22474  003D26                     l2706:
 22475                           
 22476                           ; BSR set to: 0
 22477                           
 22478                           ; BSR set to: 0
 22479  003D26  51B6               	movf	api_prepare@command& (0+255),w,b
 22480                           
 22481                           ; Switch size 1, requested type "space"
 22482                           ; Number of cases is 6, Range of values is 16 to 32
 22483                           ; switch strategies available:
 22484                           ; Name         Instructions Cycles
 22485                           ; simple_byte           19    10 (average)
 22486                           ;	Chosen strategy is simple_byte
 22487  003D28  0A10               	xorlw	16	; case 16
 22488  003D2A  B4D8               	btfsc	status,2,c
 22489  003D2C  D7B1               	goto	l2707
 22490  003D2E  0A01               	xorlw	1	; case 17
 22491  003D30  B4D8               	btfsc	status,2,c
 22492  003D32  D7B5               	goto	l2709
 22493  003D34  0A03               	xorlw	3	; case 18
 22494  003D36  B4D8               	btfsc	status,2,c
 22495  003D38  D7BB               	goto	l2710
 22496  003D3A  0A01               	xorlw	1	; case 19
 22497  003D3C  B4D8               	btfsc	status,2,c
 22498  003D3E  D7C1               	goto	l2711
 22499  003D40  0A07               	xorlw	7	; case 20
 22500  003D42  B4D8               	btfsc	status,2,c
 22501  003D44  D7C5               	goto	l2712
 22502  003D46  0A34               	xorlw	52	; case 32
 22503  003D48  B4D8               	btfsc	status,2,c
 22504  003D4A  D7C9               	goto	l2713
 22505  003D4C  D7DC               	goto	l2714
 22506  003D4E                     __end_of_api_prepare:
 22507                           	opt stack 0
 22508                           tosu	equ	0xFFF
 22509                           tosh	equ	0xFFE
 22510                           tosl	equ	0xFFD
 22511                           pclath	equ	0xFFA
 22512                           tblptru	equ	0xFF8
 22513                           tblptrh	equ	0xFF7
 22514                           tblptrl	equ	0xFF6
 22515                           tablat	equ	0xFF5
 22516                           prodh	equ	0xFF4
 22517                           prodl	equ	0xFF3
 22518                           intcon	equ	0xFF2
 22519                           intcon2	equ	0xFF1
 22520                           intcon3	equ	0xFF0
 22521                           indf0	equ	0xFEF
 22522                           postinc0	equ	0xFEE
 22523                           fsr0h	equ	0xFEA
 22524                           fsr0l	equ	0xFE9
 22525                           wreg	equ	0xFE8
 22526                           indf1	equ	0xFE7
 22527                           postdec1	equ	0xFE5
 22528                           plusw1	equ	0xFE3
 22529                           fsr1h	equ	0xFE2
 22530                           fsr1l	equ	0xFE1
 22531                           indf2	equ	0xFDF
 22532                           postinc2	equ	0xFDE
 22533                           postdec2	equ	0xFDD
 22534                           plusw2	equ	0xFDB
 22535                           fsr2h	equ	0xFDA
 22536                           fsr2l	equ	0xFD9
 22537                           status	equ	0xFD8
 22538                           
 22539 ;; *************** function __fill_buffer_read_file *****************
 22540 ;; Defined at:
 22541 ;;		line 393 in file "api.c"
 22542 ;; Parameters:    Size  Location     Type
 22543 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22544 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22545 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22546 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22547 ;; Auto vars:     Size  Location     Type
 22548 ;;  start           4   78[BANK0 ] unsigned long 
 22549 ;;  data_length     4   74[BANK0 ] unsigned long 
 22550 ;;  file_size       4   70[BANK0 ] unsigned long 
 22551 ;; Return value:  Size  Location     Type
 22552 ;;                  1    wreg      void 
 22553 ;; Registers used:
 22554 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22555 ;; Tracked objects:
 22556 ;;		On entry : 0/0
 22557 ;;		On exit  : 0/0
 22558 ;;		Unchanged: 0/0
 22559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22560 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22561 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22562 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22563 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22564 ;;Total ram usage:       20 bytes
 22565 ;; Hardware stack levels used:    1
 22566 ;; Hardware stack levels required when called:    9
 22567 ;; This function calls:
 22568 ;;		_fat_get_file_size
 22569 ;;		_fat_read_from_file
 22570 ;; This function is called by:
 22571 ;;		_api_prepare
 22572 ;; This function uses a non-reentrant model
 22573 ;;
 22574                           
 22575                           	psect	text103
 22576  0026E6                     __ptext103:
 22577                           	opt stack 0
 22578  0026E6                     __fill_buffer_read_file:
 22579                           	opt stack 20
 22580                           
 22581                           ;api.c: 395: uint32_t start;;api.c: 396: uint32_t file_size;;api.c: 397: uint32_t data_l
      +                          ength;;api.c: 400: outBuffer[0] = DATAREQUEST_READ_FILE;
 22582                           
 22583                           ;incstack = 0
 22584  0026E6  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22585  0026EA  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22586  0026EE  0E82               	movlw	130
 22587  0026F0  6EDF               	movwf	indf2,c
 22588                           
 22589                           ;api.c: 403: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 22590  0026F2  0100               	movlb	0	; () banked
 22591  0026F4  EE20 F001          	lfsr	2,1
 22592  0026F8  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22593  0026FA  26D9               	addwf	fsr2l,f,c
 22594  0026FC  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22595  0026FE  22DA               	addwfc	fsr2h,f,c
 22596  002700  0EC1               	movlw	193
 22597  002702  6EDF               	movwf	indf2,c
 22598                           
 22599                           ; BSR set to: 0
 22600                           ;api.c: 404: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 22601  002704  EE20 F002          	lfsr	2,2
 22602  002708  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22603  00270A  26D9               	addwf	fsr2l,f,c
 22604  00270C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22605  00270E  22DA               	addwfc	fsr2h,f,c
 22606  002710  0E25               	movlw	37
 22607  002712  6EDF               	movwf	indf2,c
 22608                           
 22609                           ; BSR set to: 0
 22610                           ;api.c: 407: outBuffer[3] = inBuffer[1];
 22611  002714  EE20 F001          	lfsr	2,1
 22612  002718  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22613  00271A  26D9               	addwf	fsr2l,f,c
 22614  00271C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22615  00271E  22DA               	addwfc	fsr2h,f,c
 22616  002720  EE10 F003          	lfsr	1,3
 22617  002724  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22618  002726  26E1               	addwf	fsr1l,f,c
 22619  002728  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22620  00272A  22E2               	addwfc	fsr1h,f,c
 22621  00272C  CFDF FFE7          	movff	indf2,indf1
 22622                           
 22623                           ; BSR set to: 0
 22624                           ;api.c: 410: outBuffer[4] = inBuffer[2];
 22625  002730  EE20 F002          	lfsr	2,2
 22626  002734  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22627  002736  26D9               	addwf	fsr2l,f,c
 22628  002738  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22629  00273A  22DA               	addwfc	fsr2h,f,c
 22630  00273C  EE10 F004          	lfsr	1,4
 22631  002740  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22632  002742  26E1               	addwf	fsr1l,f,c
 22633  002744  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22634  002746  22E2               	addwfc	fsr1h,f,c
 22635  002748  CFDF FFE7          	movff	indf2,indf1
 22636                           
 22637                           ; BSR set to: 0
 22638                           ;api.c: 411: outBuffer[5] = inBuffer[3];
 22639  00274C  EE20 F003          	lfsr	2,3
 22640  002750  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22641  002752  26D9               	addwf	fsr2l,f,c
 22642  002754  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22643  002756  22DA               	addwfc	fsr2h,f,c
 22644  002758  EE10 F005          	lfsr	1,5
 22645  00275C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22646  00275E  26E1               	addwf	fsr1l,f,c
 22647  002760  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22648  002762  22E2               	addwfc	fsr1h,f,c
 22649  002764  CFDF FFE7          	movff	indf2,indf1
 22650                           
 22651                           ; BSR set to: 0
 22652                           ;api.c: 412: outBuffer[6] = inBuffer[4];
 22653  002768  EE20 F004          	lfsr	2,4
 22654  00276C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22655  00276E  26D9               	addwf	fsr2l,f,c
 22656  002770  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22657  002772  22DA               	addwfc	fsr2h,f,c
 22658  002774  EE10 F006          	lfsr	1,6
 22659  002778  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22660  00277A  26E1               	addwf	fsr1l,f,c
 22661  00277C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22662  00277E  22E2               	addwfc	fsr1h,f,c
 22663  002780  CFDF FFE7          	movff	indf2,indf1
 22664                           
 22665                           ; BSR set to: 0
 22666                           ;api.c: 413: outBuffer[7] = inBuffer[5];
 22667  002784  EE20 F005          	lfsr	2,5
 22668  002788  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22669  00278A  26D9               	addwf	fsr2l,f,c
 22670  00278C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22671  00278E  22DA               	addwfc	fsr2h,f,c
 22672  002790  EE10 F007          	lfsr	1,7
 22673  002794  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22674  002796  26E1               	addwf	fsr1l,f,c
 22675  002798  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22676  00279A  22E2               	addwfc	fsr1h,f,c
 22677  00279C  CFDF FFE7          	movff	indf2,indf1
 22678                           
 22679                           ; BSR set to: 0
 22680                           ;api.c: 416: start = inBuffer[2];
 22681  0027A0  EE20 F002          	lfsr	2,2
 22682  0027A4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22683  0027A6  26D9               	addwf	fsr2l,f,c
 22684  0027A8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22685  0027AA  22DA               	addwfc	fsr2h,f,c
 22686  0027AC  50DF               	movf	indf2,w,c
 22687  0027AE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22688  0027B0  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22689  0027B2  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 22690  0027B4  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22691  0027B6  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22692  0027B8  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22693                           
 22694                           ; BSR set to: 0
 22695                           ;api.c: 417: start <<= 8;
 22696  0027BA  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22697  0027BE  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22698  0027C2  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22699  0027C6  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22700                           
 22701                           ; BSR set to: 0
 22702                           ;api.c: 418: start |= inBuffer[3];
 22703  0027C8  EE20 F003          	lfsr	2,3
 22704  0027CC  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22705  0027CE  26D9               	addwf	fsr2l,f,c
 22706  0027D0  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22707  0027D2  22DA               	addwfc	fsr2h,f,c
 22708  0027D4  50DF               	movf	indf2,w,c
 22709  0027D6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22710  0027D8  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22711  0027DA  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22712                           
 22713                           ; BSR set to: 0
 22714                           ;api.c: 419: start <<= 8;
 22715  0027DC  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22716  0027E0  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22717  0027E4  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22718  0027E8  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22719                           
 22720                           ; BSR set to: 0
 22721                           ;api.c: 420: start |= inBuffer[4];
 22722  0027EA  EE20 F004          	lfsr	2,4
 22723  0027EE  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22724  0027F0  26D9               	addwf	fsr2l,f,c
 22725  0027F2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22726  0027F4  22DA               	addwfc	fsr2h,f,c
 22727  0027F6  50DF               	movf	indf2,w,c
 22728  0027F8  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22729  0027FA  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22730  0027FC  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22731                           
 22732                           ; BSR set to: 0
 22733                           ;api.c: 421: start <<= 8;
 22734  0027FE  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22735  002802  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22736  002806  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22737  00280A  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22738                           
 22739                           ; BSR set to: 0
 22740                           ;api.c: 422: start |= inBuffer[5];
 22741  00280C  EE20 F005          	lfsr	2,5
 22742  002810  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22743  002812  26D9               	addwf	fsr2l,f,c
 22744  002814  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22745  002816  22DA               	addwfc	fsr2h,f,c
 22746  002818  50DF               	movf	indf2,w,c
 22747  00281A  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22748  00281C  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22749  00281E  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;api.c: 425: file_size = fat_get_file_size(inBuffer[1]);
 22753  002820  EE20 F001          	lfsr	2,1
 22754  002824  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22755  002826  26D9               	addwf	fsr2l,f,c
 22756  002828  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22757  00282A  22DA               	addwfc	fsr2h,f,c
 22758  00282C  50DF               	movf	indf2,w,c
 22759  00282E  EC0F  F03C         	call	_fat_get_file_size
 22760  002832  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22761  002836  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22762  00283A  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22763  00283E  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22764                           
 22765                           ;api.c: 426: data_length = file_size - start;
 22766  002842  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22767  002846  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22768  00284A  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22769  00284E  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22770  002852  0100               	movlb	0	; () banked
 22771  002854  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 22772  002856  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22773  002858  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22774  00285A  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22775  00285C  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 22776  00285E  0E00               	movlw	0
 22777  002860  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22778  002862  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22779  002864  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22780  002866  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22781  002868  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22782  00286A  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22783  00286C  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22784  00286E  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22785  002870  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22786  002872  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22787  002874  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22788  002876  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22789  002878  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22790  00287A  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22791  00287C  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22792                           
 22793                           ; BSR set to: 0
 22794                           ;api.c: 427: if(data_length>54)
 22795  00287E  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22796  002880  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22797  002882  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22798  002884  E104               	bnz	u11580
 22799  002886  0E37               	movlw	55
 22800  002888  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22801  00288A  A0D8               	btfss	status,0,c
 22802  00288C  D008               	goto	l2766
 22803  00288E                     u11580:
 22804                           
 22805                           ; BSR set to: 0
 22806                           ;api.c: 428: {;api.c: 430: data_length = 54;
 22807  00288E  0E36               	movlw	54
 22808  002890  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22809  002892  0E00               	movlw	0
 22810  002894  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22811  002896  0E00               	movlw	0
 22812  002898  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22813  00289A  0E00               	movlw	0
 22814  00289C  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22815  00289E                     l2766:
 22816                           
 22817                           ; BSR set to: 0
 22818                           ;api.c: 431: };api.c: 434: outBuffer[8] = (uint8_t) data_length;
 22819                           
 22820                           ; BSR set to: 0
 22821  00289E  EE20 F008          	lfsr	2,8
 22822  0028A2  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22823  0028A4  26D9               	addwf	fsr2l,f,c
 22824  0028A6  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22825  0028A8  22DA               	addwfc	fsr2h,f,c
 22826  0028AA  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22827                           
 22828                           ; BSR set to: 0
 22829                           ;api.c: 437: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22830  0028AE  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22831  0028B2  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22832  0028B6  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22833  0028BA  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22834  0028BE  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22835  0028C2  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22836  0028C6  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22837  0028CA  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22838  0028CE  0E0A               	movlw	10
 22839  0028D0  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22840  0028D2  6F76               	movwf	fat_read_from_file@data& (0+255),b
 22841  0028D4  0E00               	movlw	0
 22842  0028D6  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22843  0028D8  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22844  0028DA  EE20 F001          	lfsr	2,1
 22845  0028DE  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22846  0028E0  26D9               	addwf	fsr2l,f,c
 22847  0028E2  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22848  0028E4  22DA               	addwfc	fsr2h,f,c
 22849  0028E6  50DF               	movf	indf2,w,c
 22850  0028E8  ECF1  F027         	call	_fat_read_from_file
 22851  0028EC  0100               	movlb	0	; () banked
 22852  0028EE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22853  0028F0  EE20 F009          	lfsr	2,9
 22854  0028F4  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22855  0028F6  26D9               	addwf	fsr2l,f,c
 22856  0028F8  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22857  0028FA  22DA               	addwfc	fsr2h,f,c
 22858  0028FC  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 22859                           
 22860                           ; BSR set to: 0
 22861  002900  0012               	return		;funcret
 22862  002902                     __end_of__fill_buffer_read_file:
 22863                           	opt stack 0
 22864                           tosu	equ	0xFFF
 22865                           tosh	equ	0xFFE
 22866                           tosl	equ	0xFFD
 22867                           pclath	equ	0xFFA
 22868                           tblptru	equ	0xFF8
 22869                           tblptrh	equ	0xFF7
 22870                           tblptrl	equ	0xFF6
 22871                           tablat	equ	0xFF5
 22872                           prodh	equ	0xFF4
 22873                           prodl	equ	0xFF3
 22874                           intcon	equ	0xFF2
 22875                           intcon2	equ	0xFF1
 22876                           intcon3	equ	0xFF0
 22877                           indf0	equ	0xFEF
 22878                           postinc0	equ	0xFEE
 22879                           fsr0h	equ	0xFEA
 22880                           fsr0l	equ	0xFE9
 22881                           wreg	equ	0xFE8
 22882                           indf1	equ	0xFE7
 22883                           postdec1	equ	0xFE5
 22884                           plusw1	equ	0xFE3
 22885                           fsr1h	equ	0xFE2
 22886                           fsr1l	equ	0xFE1
 22887                           indf2	equ	0xFDF
 22888                           postinc2	equ	0xFDE
 22889                           postdec2	equ	0xFDD
 22890                           plusw2	equ	0xFDB
 22891                           fsr2h	equ	0xFDA
 22892                           fsr2l	equ	0xFD9
 22893                           status	equ	0xFD8
 22894                           
 22895 ;; *************** function _fat_read_from_file *****************
 22896 ;; Defined at:
 22897 ;;		line 746 in file "fat16.c"
 22898 ;; Parameters:    Size  Location     Type
 22899 ;;  file_number     1    wreg     unsigned char 
 22900 ;;  start_byte      4   14[BANK0 ] unsigned long 
 22901 ;;  length          4   18[BANK0 ] unsigned long 
 22902 ;;  data            2   22[BANK0 ] PTR unsigned char 
 22903 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22904 ;; Auto vars:     Size  Location     Type
 22905 ;;  file_number     1   24[BANK0 ] unsigned char 
 22906 ;;  root           32   30[BANK0 ] struct .
 22907 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 22908 ;;  cluster         2   25[BANK0 ] unsigned int 
 22909 ;;  return_code     1   29[BANK0 ] unsigned char 
 22910 ;; Return value:  Size  Location     Type
 22911 ;;                  1    wreg      unsigned char 
 22912 ;; Registers used:
 22913 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22914 ;; Tracked objects:
 22915 ;;		On entry : 0/0
 22916 ;;		On exit  : 0/0
 22917 ;;		Unchanged: 0/0
 22918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22919 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22920 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22921 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22922 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22923 ;;Total ram usage:       52 bytes
 22924 ;; Hardware stack levels used:    1
 22925 ;; Hardware stack levels required when called:    8
 22926 ;; This function calls:
 22927 ;;		_fat_get_file_information
 22928 ;;		_fat_read_from_file_fast
 22929 ;; This function is called by:
 22930 ;;		__fill_buffer_read_file
 22931 ;; This function uses a non-reentrant model
 22932 ;;
 22933                           
 22934                           	psect	text104
 22935  004FE2                     __ptext104:
 22936                           	opt stack 0
 22937  004FE2                     _fat_read_from_file:
 22938                           	opt stack 20
 22939                           
 22940                           ; BSR set to: 0
 22941                           ;incstack = 0
 22942                           ;fat_read_from_file@file_number stored from wreg
 22943  004FE2  0100               	movlb	0	; () banked
 22944  004FE4  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 22945                           
 22946                           ;fat16.c: 748: rootEntry_t root;;fat16.c: 749: uint16_t cluster;;fat16.c: 750: uint16_t 
      +                          cluster_number;;fat16.c: 751: uint8_t return_code;;fat16.c: 754: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 22947  004FE6  0E7E               	movlw	low fat_read_from_file@root
 22948  004FE8  6E30               	movwf	fat_get_file_information@data,c
 22949  004FEA  0E00               	movlw	high fat_read_from_file@root
 22950  004FEC  6E31               	movwf	fat_get_file_information@data+1,c
 22951  004FEE  0100               	movlb	0	; () banked
 22952  004FF0  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 22953  004FF2  EC2F  F03B         	call	_fat_get_file_information
 22954  004FF6  0100               	movlb	0	; () banked
 22955  004FF8  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 22956                           
 22957                           ; BSR set to: 0
 22958                           ;fat16.c: 755: if(return_code!=0x00)
 22959  004FFA  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22960  004FFC  B4D8               	btfsc	status,2,c
 22961  004FFE  D002               	goto	l2083
 22962                           
 22963                           ; BSR set to: 0
 22964                           ;fat16.c: 756: {;fat16.c: 758: return return_code;
 22965  005000  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22966                           
 22967                           ; BSR set to: 0
 22968  005002  0012               	return	
 22969  005004                     l2083:
 22970                           
 22971                           ; BSR set to: 0
 22972                           ;fat16.c: 759: };fat16.c: 762: if(start_byte > root.fileSize)
 22973                           
 22974                           ; BSR set to: 0
 22975  005004  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 22976  005006  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22977  005008  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22978  00500A  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22979  00500C  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22980  00500E  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22981  005010  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 22982  005012  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 22983  005014  B0D8               	btfsc	status,0,c
 22984  005016  D002               	goto	l2085
 22985                           
 22986                           ; BSR set to: 0
 22987                           ;fat16.c: 763: {;fat16.c: 765: return 0xFF;
 22988  005018  0EFF               	movlw	255
 22989                           
 22990                           ; BSR set to: 0
 22991  00501A  0012               	return	
 22992  00501C                     l2085:
 22993                           
 22994                           ; BSR set to: 0
 22995                           ;fat16.c: 766: };fat16.c: 768: if(start_byte+length > root.fileSize)
 22996                           
 22997                           ; BSR set to: 0
 22998  00501C  5172               	movf	fat_read_from_file@length& (0+255),w,b
 22999  00501E  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23000  005020  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23001  005022  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23002  005024  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23003  005026  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23004  005028  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23005  00502A  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23006  00502C  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23007  00502E  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23008  005030  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23009  005032  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23010  005034  505C               	movf	??_fat_read_from_file,w,c
 23011  005036  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23012  005038  505D               	movf	??_fat_read_from_file+1,w,c
 23013  00503A  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23014  00503C  505E               	movf	??_fat_read_from_file+2,w,c
 23015  00503E  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23016  005040  505F               	movf	??_fat_read_from_file+3,w,c
 23017  005042  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23018  005044  B0D8               	btfsc	status,0,c
 23019  005046  D01D               	goto	l2086
 23020                           
 23021                           ; BSR set to: 0
 23022                           ;fat16.c: 769: {;fat16.c: 771: length = root.fileSize - start_byte;
 23023  005048  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23024  00504C  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23025  005050  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23026  005054  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23027  005058  1E5C               	comf	??_fat_read_from_file,f,c
 23028  00505A  1E5D               	comf	??_fat_read_from_file+1,f,c
 23029  00505C  1E5E               	comf	??_fat_read_from_file+2,f,c
 23030  00505E  1E5F               	comf	??_fat_read_from_file+3,f,c
 23031  005060  2A5C               	incf	??_fat_read_from_file,f,c
 23032  005062  0E00               	movlw	0
 23033  005064  225D               	addwfc	??_fat_read_from_file+1,f,c
 23034  005066  225E               	addwfc	??_fat_read_from_file+2,f,c
 23035  005068  225F               	addwfc	??_fat_read_from_file+3,f,c
 23036  00506A  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23037  00506C  245C               	addwf	??_fat_read_from_file,w,c
 23038  00506E  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23039  005070  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23040  005072  205D               	addwfc	??_fat_read_from_file+1,w,c
 23041  005074  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23042  005076  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23043  005078  205E               	addwfc	??_fat_read_from_file+2,w,c
 23044  00507A  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23045  00507C  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23046  00507E  205F               	addwfc	??_fat_read_from_file+3,w,c
 23047  005080  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23048  005082                     l2086:
 23049                           
 23050                           ; BSR set to: 0
 23051                           ;fat16.c: 772: };fat16.c: 775: cluster = root.firstCluster;
 23052                           
 23053                           ; BSR set to: 0
 23054  005082  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23055  005086  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23056                           
 23057                           ; BSR set to: 0
 23058                           ;fat16.c: 776: cluster_number = 0;
 23059  00508A  0E00               	movlw	0
 23060  00508C  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23061  00508E  0E00               	movlw	0
 23062  005090  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23063                           
 23064                           ; BSR set to: 0
 23065                           ;fat16.c: 779: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23066  005092  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23067  005096  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23068  00509A  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23069  00509E  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23070  0050A2  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23071  0050A6  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23072  0050AA  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23073  0050AE  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23074  0050B2  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23075  0050B6  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23076  0050BA  0E79               	movlw	low fat_read_from_file@cluster
 23077  0050BC  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23078  0050BE  0E00               	movlw	high fat_read_from_file@cluster
 23079  0050C0  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23080  0050C2  0E7B               	movlw	low fat_read_from_file@cluster_number
 23081  0050C4  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23082  0050C6  0E00               	movlw	high fat_read_from_file@cluster_number
 23083  0050C8  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23084  0050CA  EC60  F012         	call	_fat_read_from_file_fast	;wreg free
 23085  0050CE  0012               	return	
 23086  0050D0                     __end_of_fat_read_from_file:
 23087                           	opt stack 0
 23088                           tosu	equ	0xFFF
 23089                           tosh	equ	0xFFE
 23090                           tosl	equ	0xFFD
 23091                           pclath	equ	0xFFA
 23092                           tblptru	equ	0xFF8
 23093                           tblptrh	equ	0xFF7
 23094                           tblptrl	equ	0xFF6
 23095                           tablat	equ	0xFF5
 23096                           prodh	equ	0xFF4
 23097                           prodl	equ	0xFF3
 23098                           intcon	equ	0xFF2
 23099                           intcon2	equ	0xFF1
 23100                           intcon3	equ	0xFF0
 23101                           indf0	equ	0xFEF
 23102                           postinc0	equ	0xFEE
 23103                           fsr0h	equ	0xFEA
 23104                           fsr0l	equ	0xFE9
 23105                           wreg	equ	0xFE8
 23106                           indf1	equ	0xFE7
 23107                           postdec1	equ	0xFE5
 23108                           plusw1	equ	0xFE3
 23109                           fsr1h	equ	0xFE2
 23110                           fsr1l	equ	0xFE1
 23111                           indf2	equ	0xFDF
 23112                           postinc2	equ	0xFDE
 23113                           postdec2	equ	0xFDD
 23114                           plusw2	equ	0xFDB
 23115                           fsr2h	equ	0xFDA
 23116                           fsr2l	equ	0xFD9
 23117                           status	equ	0xFD8
 23118                           
 23119 ;; *************** function _fat_read_from_file_fast *****************
 23120 ;; Defined at:
 23121 ;;		line 782 in file "fat16.c"
 23122 ;; Parameters:    Size  Location     Type
 23123 ;;  start_byte      4   65[COMRAM] unsigned long 
 23124 ;;  length          4   69[COMRAM] unsigned long 
 23125 ;;  data            2   73[COMRAM] PTR unsigned char 
 23126 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23127 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23128 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23129 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23130 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23131 ;; Auto vars:     Size  Location     Type
 23132 ;;  position        4   10[BANK0 ] unsigned long 
 23133 ;;  read_length     2    8[BANK0 ] unsigned int 
 23134 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23135 ;;  offset          2    4[BANK0 ] unsigned int 
 23136 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23137 ;;  sector          2    0[BANK0 ] unsigned int 
 23138 ;; Return value:  Size  Location     Type
 23139 ;;                  1    wreg      unsigned char 
 23140 ;; Registers used:
 23141 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23142 ;; Tracked objects:
 23143 ;;		On entry : 0/0
 23144 ;;		On exit  : 0/0
 23145 ;;		Unchanged: 0/0
 23146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23147 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23148 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23149 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23150 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23151 ;;Total ram usage:       40 bytes
 23152 ;; Hardware stack levels used:    1
 23153 ;; Hardware stack levels required when called:    7
 23154 ;; This function calls:
 23155 ;;		__data_sector_from_cluster
 23156 ;;		__find_nth_cluster
 23157 ;;		__read_fat
 23158 ;;		_flash_partial_read
 23159 ;; This function is called by:
 23160 ;;		_fat_read_from_file
 23161 ;;		__bootloader_verify_file
 23162 ;;		__bootloader_program
 23163 ;; This function uses a non-reentrant model
 23164 ;;
 23165                           
 23166                           	psect	text105
 23167  0024C0                     __ptext105:
 23168                           	opt stack 0
 23169  0024C0                     _fat_read_from_file_fast:
 23170                           	opt stack 21
 23171                           
 23172                           ;fat16.c: 784: uint32_t position;;fat16.c: 785: uint16_t offset;;fat16.c: 786: uint16_t 
      +                          sector;;fat16.c: 787: uint16_t read_length;;fat16.c: 788: uint16_t working_cluster;;fat1
      +                          6.c: 789: uint16_t needed_cluster;;fat16.c: 792: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23173                           
 23174                           ;incstack = 0
 23175  0024C0  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23176  0024C4  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23177  0024C8  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23178  0024CC  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23179  0024D0  0E0A               	movlw	10
 23180  0024D2  D005               	goto	u10160
 23181  0024D4                     u10165:
 23182  0024D4  90D8               	bcf	status,0,c
 23183  0024D6  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23184  0024D8  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23185  0024DA  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23186  0024DC  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23187  0024DE                     u10160:
 23188  0024DE  2EE8               	decfsz	wreg,f,c
 23189  0024E0  D7F9               	goto	u10165
 23190  0024E2  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23191  0024E6  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23192                           
 23193                           ;fat16.c: 795: if((*cluster_number) > needed_cluster)
 23194  0024EA  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23195  0024EE  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23196  0024F2  50DE               	movf	postinc2,w,c
 23197  0024F4  0100               	movlb	0	; () banked
 23198  0024F6  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23199  0024F8  50DE               	movf	postinc2,w,c
 23200  0024FA  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23201  0024FC  B0D8               	btfsc	status,0,c
 23202  0024FE  D002               	goto	l2089
 23203                           
 23204                           ; BSR set to: 0
 23205                           ;fat16.c: 796: {;fat16.c: 797: return 0xFF;
 23206  002500  0EFF               	movlw	255
 23207                           
 23208                           ; BSR set to: 0
 23209  002502  0012               	return	
 23210  002504                     l2089:
 23211                           
 23212                           ; BSR set to: 0
 23213                           ;fat16.c: 798: };fat16.c: 801: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23214                           
 23215                           ; BSR set to: 0
 23216  002504  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23217  002508  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23218  00250C  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23219  002510  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23220  002514  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23221  002518  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23222  00251C  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23223  002520  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23224  002524  1E50               	comf	??_fat_read_from_file_fast,f,c
 23225  002526  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23226  002528  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23227  00252A  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23228  00252C  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23229  00252E  2450               	addwf	??_fat_read_from_file_fast,w,c
 23230  002530  6E3A               	movwf	__find_nth_cluster@n,c
 23231  002532  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23232  002534  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23233  002536  6E3B               	movwf	__find_nth_cluster@n+1,c
 23234  002538  ECCF  F035         	call	__find_nth_cluster	;wreg free
 23235  00253C  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23236  002540  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23237  002544  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23238  002548  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23239                           
 23240                           ;fat16.c: 804: (*cluster_number) = needed_cluster;
 23241  00254C  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23242  002550  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23243  002554  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23244  002558  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23245                           
 23246                           ;fat16.c: 808: working_cluster = (*cluster);
 23247  00255C  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23248  002560  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23249  002564  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23250  002568  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23251                           
 23252                           ;fat16.c: 811: position = (needed_cluster << 9);
 23253  00256C  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23254  002570  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23255  002574  0E09               	movlw	9
 23256  002576                     u10185:
 23257  002576  90D8               	bcf	status,0,c
 23258  002578  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23259  00257A  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23260  00257C  2EE8               	decfsz	wreg,f,c
 23261  00257E  D7FB               	goto	u10185
 23262  002580  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23263  002584  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23264  002588  0100               	movlb	0	; () banked
 23265  00258A  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23266  00258C  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23267                           
 23268                           ; BSR set to: 0
 23269                           ;fat16.c: 812: offset = start_byte - position;
 23270  00258E  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23271  002592  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23272  002596  1E50               	comf	??_fat_read_from_file_fast,f,c
 23273  002598  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23274  00259A  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23275  00259C  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23276  00259E  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23277  0025A0  2450               	addwf	??_fat_read_from_file_fast,w,c
 23278  0025A2  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23279  0025A4  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23280  0025A6  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23281  0025A8  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23282                           
 23283                           ; BSR set to: 0
 23284                           ;fat16.c: 815: position = 0;
 23285  0025AA  0E00               	movlw	0
 23286  0025AC  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23287  0025AE  0E00               	movlw	0
 23288  0025B0  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23289  0025B2  0E00               	movlw	0
 23290  0025B4  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23291  0025B6  0E00               	movlw	0
 23292  0025B8  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23293                           
 23294                           ;fat16.c: 816: while(position < length)
 23295  0025BA  D089               	goto	l2091
 23296  0025BC                     
 23297                           ; BSR set to: 0
 23298                           ;fat16.c: 817: {;fat16.c: 819: if(offset==512)
 23299                           
 23300                           ; BSR set to: 0
 23301  0025BC  0E02               	movlw	2
 23302  0025BE  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23303  0025C0  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23304  0025C2  A4D8               	btfss	status,2,c
 23305  0025C4  D00F               	goto	l2093
 23306                           
 23307                           ; BSR set to: 0
 23308                           ;fat16.c: 820: {;fat16.c: 822: working_cluster = _read_fat(working_cluster);
 23309  0025C6  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23310  0025CA  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23311  0025CE  EC19  F040         	call	__read_fat	;wreg free
 23312  0025D2  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23313  0025D6  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23314                           
 23315                           ;fat16.c: 823: offset = 0;
 23316  0025DA  0E00               	movlw	0
 23317  0025DC  0100               	movlb	0	; () banked
 23318  0025DE  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23319  0025E0  0E00               	movlw	0
 23320  0025E2  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23321  0025E4                     l2093:
 23322                           
 23323                           ; BSR set to: 0
 23324                           ;fat16.c: 824: };fat16.c: 827: sector = _data_sector_from_cluster(working_cluster);
 23325                           
 23326                           ; BSR set to: 0
 23327  0025E4  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23328  0025E8  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23329  0025EC  EC62  F047         	call	__data_sector_from_cluster	;wreg free
 23330  0025F0  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23331  0025F4  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23332                           
 23333                           ;fat16.c: 830: read_length = 512 - offset;
 23334  0025F8  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23335  0025FC  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23336  002600  1E50               	comf	??_fat_read_from_file_fast,f,c
 23337  002602  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23338  002604  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23339  002606  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23340  002608  0E00               	movlw	0
 23341  00260A  2450               	addwf	??_fat_read_from_file_fast,w,c
 23342  00260C  0100               	movlb	0	; () banked
 23343  00260E  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23344  002610  0E02               	movlw	2
 23345  002612  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23346  002614  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23347                           
 23348                           ; BSR set to: 0
 23349                           ;fat16.c: 831: if(read_length > (length-position))
 23350  002616  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23351  002618  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23352  00261A  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23353  00261C  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23354  00261E  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23355  002620  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23356  002622  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23357  002626  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23358  00262A  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23359  00262E  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23360  002632  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23361  002634  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23362  002636  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23363  002638  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23364  00263A  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23365  00263C  0E00               	movlw	0
 23366  00263E  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23367  002640  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23368  002642  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23369  002644  5046               	movf	fat_read_from_file_fast@length,w,c
 23370  002646  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23371  002648  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23372  00264A  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23373  00264C  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23374  00264E  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23375  002650  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23376  002652  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23377  002654  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23378  002656  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23379  002658  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23380  00265A  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23381  00265C  5050               	movf	??_fat_read_from_file_fast,w,c
 23382  00265E  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23383  002660  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23384  002662  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23385  002664  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23386  002666  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23387  002668  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23388  00266A  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23389  00266C  B0D8               	btfsc	status,0,c
 23390  00266E  D00E               	goto	l2094
 23391                           
 23392                           ; BSR set to: 0
 23393                           ;fat16.c: 832: {;fat16.c: 834: read_length = length - position;
 23394  002670  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23395  002674  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23396  002678  1E50               	comf	??_fat_read_from_file_fast,f,c
 23397  00267A  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23398  00267C  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23399  00267E  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23400  002680  5046               	movf	fat_read_from_file_fast@length,w,c
 23401  002682  2450               	addwf	??_fat_read_from_file_fast,w,c
 23402  002684  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23403  002686  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23404  002688  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23405  00268A  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23406  00268C                     l2094:
 23407                           
 23408                           ; BSR set to: 0
 23409                           ;fat16.c: 835: };fat16.c: 838: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23410                           
 23411                           ; BSR set to: 0
 23412  00268C  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23413  002690  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23414  002694  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23415  002698  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23416  00269C  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23417  0026A0  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23418  0026A4  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23419  0026A6  244A               	addwf	fat_read_from_file_fast@data,w,c
 23420  0026A8  6E2E               	movwf	flash_partial_read@data,c
 23421  0026AA  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23422  0026AC  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23423  0026AE  6E2F               	movwf	flash_partial_read@data+1,c
 23424  0026B0  EC58  F044         	call	_flash_partial_read	;wreg free
 23425                           
 23426                           ;fat16.c: 841: position += read_length;
 23427  0026B4  0100               	movlb	0	; () banked
 23428  0026B6  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23429  0026B8  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23430  0026BA  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23431  0026BC  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23432  0026BE  0E00               	movlw	0
 23433  0026C0  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23434  0026C2  0E00               	movlw	0
 23435  0026C4  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23436                           
 23437                           ; BSR set to: 0
 23438                           ;fat16.c: 842: offset += read_length;
 23439  0026C6  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23440  0026C8  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23441  0026CA  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23442  0026CC  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23443  0026CE                     l2091:
 23444                           
 23445                           ; BSR set to: 0
 23446                           
 23447                           ; BSR set to: 0
 23448  0026CE  5046               	movf	fat_read_from_file_fast@length,w,c
 23449  0026D0  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23450  0026D2  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23451  0026D4  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23452  0026D6  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23453  0026D8  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23454  0026DA  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23455  0026DC  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23456  0026DE  A0D8               	btfss	status,0,c
 23457  0026E0  D76D               	goto	l2092
 23458                           
 23459                           ; BSR set to: 0
 23460                           ;fat16.c: 843: };fat16.c: 846: return 0x00;
 23461                           
 23462                           ; BSR set to: 0
 23463  0026E2  0E00               	movlw	0
 23464  0026E4  0012               	return	
 23465  0026E6                     __end_of_fat_read_from_file_fast:
 23466                           	opt stack 0
 23467                           tosu	equ	0xFFF
 23468                           tosh	equ	0xFFE
 23469                           tosl	equ	0xFFD
 23470                           pclath	equ	0xFFA
 23471                           tblptru	equ	0xFF8
 23472                           tblptrh	equ	0xFF7
 23473                           tblptrl	equ	0xFF6
 23474                           tablat	equ	0xFF5
 23475                           prodh	equ	0xFF4
 23476                           prodl	equ	0xFF3
 23477                           intcon	equ	0xFF2
 23478                           intcon2	equ	0xFF1
 23479                           intcon3	equ	0xFF0
 23480                           indf0	equ	0xFEF
 23481                           postinc0	equ	0xFEE
 23482                           fsr0h	equ	0xFEA
 23483                           fsr0l	equ	0xFE9
 23484                           wreg	equ	0xFE8
 23485                           indf1	equ	0xFE7
 23486                           postdec1	equ	0xFE5
 23487                           plusw1	equ	0xFE3
 23488                           fsr1h	equ	0xFE2
 23489                           fsr1l	equ	0xFE1
 23490                           indf2	equ	0xFDF
 23491                           postinc2	equ	0xFDE
 23492                           postdec2	equ	0xFDD
 23493                           plusw2	equ	0xFDB
 23494                           fsr2h	equ	0xFDA
 23495                           fsr2l	equ	0xFD9
 23496                           status	equ	0xFD8
 23497                           
 23498 ;; *************** function __fill_buffer_read_buffer *****************
 23499 ;; Defined at:
 23500 ;;		line 440 in file "api.c"
 23501 ;; Parameters:    Size  Location     Type
 23502 ;;  inBuffer        2   12[COMRAM] PTR unsigned char 
 23503 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23504 ;;  outBuffer       2   14[COMRAM] PTR unsigned char 
 23505 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23506 ;; Auto vars:     Size  Location     Type
 23507 ;;  data_length     2   20[COMRAM] unsigned int 
 23508 ;;  start           2   18[COMRAM] unsigned int 
 23509 ;; Return value:  Size  Location     Type
 23510 ;;                  1    wreg      void 
 23511 ;; Registers used:
 23512 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23513 ;; Tracked objects:
 23514 ;;		On entry : 0/0
 23515 ;;		On exit  : 0/0
 23516 ;;		Unchanged: 0/0
 23517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23518 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23519 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23520 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23521 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23522 ;;Total ram usage:       10 bytes
 23523 ;; Hardware stack levels used:    1
 23524 ;; Hardware stack levels required when called:    2
 23525 ;; This function calls:
 23526 ;;		_fat_read_from_buffer
 23527 ;; This function is called by:
 23528 ;;		_api_prepare
 23529 ;; This function uses a non-reentrant model
 23530 ;;
 23531                           
 23532                           	psect	text106
 23533  004EEC                     __ptext106:
 23534                           	opt stack 0
 23535  004EEC                     __fill_buffer_read_buffer:
 23536                           	opt stack 27
 23537                           
 23538                           ;api.c: 442: uint16_t start;;api.c: 443: uint16_t data_length;;api.c: 446: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23539                           
 23540                           ; BSR set to: 0
 23541                           ;incstack = 0
 23542  004EEC  C00F  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23543  004EF0  C010  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23544  004EF4  0E83               	movlw	131
 23545  004EF6  6EDF               	movwf	indf2,c
 23546                           
 23547                           ;api.c: 449: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23548  004EF8  EE20 F001          	lfsr	2,1
 23549  004EFC  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23550  004EFE  26D9               	addwf	fsr2l,f,c
 23551  004F00  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23552  004F02  22DA               	addwfc	fsr2h,f,c
 23553  004F04  0EC1               	movlw	193
 23554  004F06  6EDF               	movwf	indf2,c
 23555                           
 23556                           ;api.c: 450: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23557  004F08  EE20 F002          	lfsr	2,2
 23558  004F0C  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23559  004F0E  26D9               	addwf	fsr2l,f,c
 23560  004F10  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23561  004F12  22DA               	addwfc	fsr2h,f,c
 23562  004F14  0E25               	movlw	37
 23563  004F16  6EDF               	movwf	indf2,c
 23564                           
 23565                           ;api.c: 453: outBuffer[3] = inBuffer[1];
 23566  004F18  EE20 F001          	lfsr	2,1
 23567  004F1C  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23568  004F1E  26D9               	addwf	fsr2l,f,c
 23569  004F20  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23570  004F22  22DA               	addwfc	fsr2h,f,c
 23571  004F24  EE10 F003          	lfsr	1,3
 23572  004F28  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23573  004F2A  26E1               	addwf	fsr1l,f,c
 23574  004F2C  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23575  004F2E  22E2               	addwfc	fsr1h,f,c
 23576  004F30  CFDF FFE7          	movff	indf2,indf1
 23577                           
 23578                           ;api.c: 454: outBuffer[4] = inBuffer[2];
 23579  004F34  EE20 F002          	lfsr	2,2
 23580  004F38  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23581  004F3A  26D9               	addwf	fsr2l,f,c
 23582  004F3C  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23583  004F3E  22DA               	addwfc	fsr2h,f,c
 23584  004F40  EE10 F004          	lfsr	1,4
 23585  004F44  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23586  004F46  26E1               	addwf	fsr1l,f,c
 23587  004F48  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23588  004F4A  22E2               	addwfc	fsr1h,f,c
 23589  004F4C  CFDF FFE7          	movff	indf2,indf1
 23590                           
 23591                           ;api.c: 457: start = inBuffer[1];
 23592  004F50  EE20 F001          	lfsr	2,1
 23593  004F54  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23594  004F56  26D9               	addwf	fsr2l,f,c
 23595  004F58  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23596  004F5A  22DA               	addwfc	fsr2h,f,c
 23597  004F5C  50DF               	movf	indf2,w,c
 23598  004F5E  6E11               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23599  004F60  5011               	movf	??__fill_buffer_read_buffer,w,c
 23600  004F62  6E13               	movwf	__fill_buffer_read_buffer@start,c
 23601  004F64  6A14               	clrf	__fill_buffer_read_buffer@start+1,c
 23602                           
 23603                           ;api.c: 458: start <<= 8;
 23604  004F66  5013               	movf	__fill_buffer_read_buffer@start,w,c
 23605  004F68  6E14               	movwf	__fill_buffer_read_buffer@start+1,c
 23606  004F6A  6A13               	clrf	__fill_buffer_read_buffer@start,c
 23607                           
 23608                           ;api.c: 459: start |= inBuffer[2];
 23609  004F6C  EE20 F002          	lfsr	2,2
 23610  004F70  500D               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23611  004F72  26D9               	addwf	fsr2l,f,c
 23612  004F74  500E               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23613  004F76  22DA               	addwfc	fsr2h,f,c
 23614  004F78  50DF               	movf	indf2,w,c
 23615  004F7A  6E11               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23616  004F7C  5011               	movf	??__fill_buffer_read_buffer,w,c
 23617  004F7E  1213               	iorwf	__fill_buffer_read_buffer@start,f,c
 23618                           
 23619                           ;api.c: 462: data_length = 512 - start;
 23620  004F80  C013  F011         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 23621  004F84  C014  F012         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 23622  004F88  1E11               	comf	??__fill_buffer_read_buffer,f,c
 23623  004F8A  1E12               	comf	??__fill_buffer_read_buffer+1,f,c
 23624  004F8C  4A11               	infsnz	??__fill_buffer_read_buffer,f,c
 23625  004F8E  2A12               	incf	??__fill_buffer_read_buffer+1,f,c
 23626  004F90  0E00               	movlw	0
 23627  004F92  2411               	addwf	??__fill_buffer_read_buffer,w,c
 23628  004F94  6E15               	movwf	__fill_buffer_read_buffer@data_length,c
 23629  004F96  0E02               	movlw	2
 23630  004F98  2012               	addwfc	??__fill_buffer_read_buffer+1,w,c
 23631  004F9A  6E16               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23632                           
 23633                           ;api.c: 463: if(data_length>54)
 23634  004F9C  5016               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 23635  004F9E  E104               	bnz	u11590
 23636  004FA0  0E37               	movlw	55
 23637  004FA2  5C15               	subwf	__fill_buffer_read_buffer@data_length,w,c
 23638  004FA4  A0D8               	btfss	status,0,c
 23639  004FA6  D004               	goto	l2770
 23640  004FA8                     u11590:
 23641                           
 23642                           ;api.c: 464: {;api.c: 466: data_length = 58;
 23643  004FA8  0E00               	movlw	0
 23644  004FAA  6E16               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23645  004FAC  0E3A               	movlw	58
 23646  004FAE  6E15               	movwf	__fill_buffer_read_buffer@data_length,c
 23647  004FB0                     l2770:
 23648                           
 23649                           ;api.c: 467: };api.c: 470: outBuffer[5] = (uint8_t) data_length;
 23650  004FB0  EE20 F005          	lfsr	2,5
 23651  004FB4  500F               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23652  004FB6  26D9               	addwf	fsr2l,f,c
 23653  004FB8  5010               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23654  004FBA  22DA               	addwfc	fsr2h,f,c
 23655  004FBC  C015  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 23656                           
 23657                           ;api.c: 473: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 23658  004FC0  C013  F007         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 23659  004FC4  C014  F008         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 23660  004FC8  C015  F009         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 23661  004FCC  C016  F00A         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 23662  004FD0  0E06               	movlw	6
 23663  004FD2  240F               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 23664  004FD4  6E0B               	movwf	fat_read_from_buffer@data,c
 23665  004FD6  0E00               	movlw	0
 23666  004FD8  2010               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 23667  004FDA  6E0C               	movwf	fat_read_from_buffer@data+1,c
 23668  004FDC  EC5D  F046         	call	_fat_read_from_buffer	;wreg free
 23669  004FE0  0012               	return		;funcret
 23670  004FE2                     __end_of__fill_buffer_read_buffer:
 23671                           	opt stack 0
 23672                           tosu	equ	0xFFF
 23673                           tosh	equ	0xFFE
 23674                           tosl	equ	0xFFD
 23675                           pclath	equ	0xFFA
 23676                           tblptru	equ	0xFF8
 23677                           tblptrh	equ	0xFF7
 23678                           tblptrl	equ	0xFF6
 23679                           tablat	equ	0xFF5
 23680                           prodh	equ	0xFF4
 23681                           prodl	equ	0xFF3
 23682                           intcon	equ	0xFF2
 23683                           intcon2	equ	0xFF1
 23684                           intcon3	equ	0xFF0
 23685                           indf0	equ	0xFEF
 23686                           postinc0	equ	0xFEE
 23687                           fsr0h	equ	0xFEA
 23688                           fsr0l	equ	0xFE9
 23689                           wreg	equ	0xFE8
 23690                           indf1	equ	0xFE7
 23691                           postdec1	equ	0xFE5
 23692                           plusw1	equ	0xFE3
 23693                           fsr1h	equ	0xFE2
 23694                           fsr1l	equ	0xFE1
 23695                           indf2	equ	0xFDF
 23696                           postinc2	equ	0xFDE
 23697                           postdec2	equ	0xFDD
 23698                           plusw2	equ	0xFDB
 23699                           fsr2h	equ	0xFDA
 23700                           fsr2l	equ	0xFD9
 23701                           status	equ	0xFD8
 23702                           
 23703 ;; *************** function _fat_read_from_buffer *****************
 23704 ;; Defined at:
 23705 ;;		line 1431 in file "fat16.c"
 23706 ;; Parameters:    Size  Location     Type
 23707 ;;  start           2    6[COMRAM] unsigned int 
 23708 ;;  length          2    8[COMRAM] unsigned int 
 23709 ;;  data            2   10[COMRAM] PTR unsigned char 
 23710 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23711 ;; Auto vars:     Size  Location     Type
 23712 ;;		None
 23713 ;; Return value:  Size  Location     Type
 23714 ;;                  1    wreg      void 
 23715 ;; Registers used:
 23716 ;;		wreg, status,2, status,0, cstack
 23717 ;; Tracked objects:
 23718 ;;		On entry : 0/0
 23719 ;;		On exit  : 0/0
 23720 ;;		Unchanged: 0/0
 23721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23722 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23723 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23724 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23725 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23726 ;;Total ram usage:        6 bytes
 23727 ;; Hardware stack levels used:    1
 23728 ;; Hardware stack levels required when called:    1
 23729 ;; This function calls:
 23730 ;;		_flash_read_from_buffer
 23731 ;; This function is called by:
 23732 ;;		__fill_buffer_read_buffer
 23733 ;; This function uses a non-reentrant model
 23734 ;;
 23735                           
 23736                           	psect	text107
 23737  008CBA                     __ptext107:
 23738                           	opt stack 0
 23739  008CBA                     _fat_read_from_buffer:
 23740                           	opt stack 27
 23741                           
 23742                           ;fat16.c: 1433: flash_read_from_buffer(start, length, data);
 23743                           
 23744                           ;incstack = 0
 23745  008CBA  C007  F001         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 23746  008CBE  C008  F002         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 23747  008CC2  C009  F003         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 23748  008CC6  C00A  F004         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 23749  008CCA  C00B  F005         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 23750  008CCE  C00C  F006         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 23751  008CD2  ECD7  F047         	call	_flash_read_from_buffer	;wreg free
 23752  008CD6  0012               	return		;funcret
 23753  008CD8                     __end_of_fat_read_from_buffer:
 23754                           	opt stack 0
 23755                           tosu	equ	0xFFF
 23756                           tosh	equ	0xFFE
 23757                           tosl	equ	0xFFD
 23758                           pclath	equ	0xFFA
 23759                           tblptru	equ	0xFF8
 23760                           tblptrh	equ	0xFF7
 23761                           tblptrl	equ	0xFF6
 23762                           tablat	equ	0xFF5
 23763                           prodh	equ	0xFF4
 23764                           prodl	equ	0xFF3
 23765                           intcon	equ	0xFF2
 23766                           intcon2	equ	0xFF1
 23767                           intcon3	equ	0xFF0
 23768                           indf0	equ	0xFEF
 23769                           postinc0	equ	0xFEE
 23770                           fsr0h	equ	0xFEA
 23771                           fsr0l	equ	0xFE9
 23772                           wreg	equ	0xFE8
 23773                           indf1	equ	0xFE7
 23774                           postdec1	equ	0xFE5
 23775                           plusw1	equ	0xFE3
 23776                           fsr1h	equ	0xFE2
 23777                           fsr1l	equ	0xFE1
 23778                           indf2	equ	0xFDF
 23779                           postinc2	equ	0xFDE
 23780                           postdec2	equ	0xFDD
 23781                           plusw2	equ	0xFDB
 23782                           fsr2h	equ	0xFDA
 23783                           fsr2l	equ	0xFD9
 23784                           status	equ	0xFD8
 23785                           
 23786 ;; *************** function _flash_read_from_buffer *****************
 23787 ;; Defined at:
 23788 ;;		line 510 in file "flash.c"
 23789 ;; Parameters:    Size  Location     Type
 23790 ;;  start           2    0[COMRAM] unsigned int 
 23791 ;;  length          2    2[COMRAM] unsigned int 
 23792 ;;  data            2    4[COMRAM] PTR unsigned char 
 23793 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23794 ;; Auto vars:     Size  Location     Type
 23795 ;;		None
 23796 ;; Return value:  Size  Location     Type
 23797 ;;                  1    wreg      void 
 23798 ;; Registers used:
 23799 ;;		None
 23800 ;; Tracked objects:
 23801 ;;		On entry : 0/0
 23802 ;;		On exit  : 0/0
 23803 ;;		Unchanged: 0/0
 23804 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23805 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23806 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23807 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23808 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23809 ;;Total ram usage:        6 bytes
 23810 ;; Hardware stack levels used:    1
 23811 ;; This function calls:
 23812 ;;		Nothing
 23813 ;; This function is called by:
 23814 ;;		_fat_read_from_buffer
 23815 ;; This function uses a non-reentrant model
 23816 ;;
 23817                           
 23818                           	psect	text108
 23819  008FAE                     __ptext108:
 23820                           	opt stack 0
 23821  008FAE                     _flash_read_from_buffer:
 23822                           	opt stack 27
 23823                           
 23824                           ;incstack = 0
 23825  008FAE  0012               	return		;funcret
 23826  008FB0                     __end_of_flash_read_from_buffer:
 23827                           	opt stack 0
 23828                           tosu	equ	0xFFF
 23829                           tosh	equ	0xFFE
 23830                           tosl	equ	0xFFD
 23831                           pclath	equ	0xFFA
 23832                           tblptru	equ	0xFF8
 23833                           tblptrh	equ	0xFF7
 23834                           tblptrl	equ	0xFF6
 23835                           tablat	equ	0xFF5
 23836                           prodh	equ	0xFF4
 23837                           prodl	equ	0xFF3
 23838                           intcon	equ	0xFF2
 23839                           intcon2	equ	0xFF1
 23840                           intcon3	equ	0xFF0
 23841                           indf0	equ	0xFEF
 23842                           postinc0	equ	0xFEE
 23843                           fsr0h	equ	0xFEA
 23844                           fsr0l	equ	0xFE9
 23845                           wreg	equ	0xFE8
 23846                           indf1	equ	0xFE7
 23847                           postdec1	equ	0xFE5
 23848                           plusw1	equ	0xFE3
 23849                           fsr1h	equ	0xFE2
 23850                           fsr1l	equ	0xFE1
 23851                           indf2	equ	0xFDF
 23852                           postinc2	equ	0xFDE
 23853                           postdec2	equ	0xFDD
 23854                           plusw2	equ	0xFDB
 23855                           fsr2h	equ	0xFDA
 23856                           fsr2l	equ	0xFD9
 23857                           status	equ	0xFD8
 23858                           
 23859 ;; *************** function __fill_buffer_get_status *****************
 23860 ;; Defined at:
 23861 ;;		line 201 in file "api.c"
 23862 ;; Parameters:    Size  Location     Type
 23863 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 23864 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23865 ;; Auto vars:     Size  Location     Type
 23866 ;;		None
 23867 ;; Return value:  Size  Location     Type
 23868 ;;                  1    wreg      void 
 23869 ;; Registers used:
 23870 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23871 ;; Tracked objects:
 23872 ;;		On entry : 0/0
 23873 ;;		On exit  : 0/0
 23874 ;;		Unchanged: 0/0
 23875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23876 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23877 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23878 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23879 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23880 ;;Total ram usage:        2 bytes
 23881 ;; Hardware stack levels used:    1
 23882 ;; Hardware stack levels required when called:    4
 23883 ;; This function calls:
 23884 ;;		_flash_is_busy
 23885 ;;		_ui_get_status
 23886 ;; This function is called by:
 23887 ;;		_api_prepare
 23888 ;; This function uses a non-reentrant model
 23889 ;;
 23890                           
 23891                           	psect	text109
 23892  005544                     __ptext109:
 23893                           	opt stack 0
 23894  005544                     __fill_buffer_get_status:
 23895                           	opt stack 25
 23896                           
 23897                           ;api.c: 204: outBuffer[0] = DATAREQUEST_GET_STATUS;
 23898                           
 23899                           ;incstack = 0
 23900  005544  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 23901  005548  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 23902  00554C  0E10               	movlw	16
 23903  00554E  6EDF               	movwf	indf2,c
 23904                           
 23905                           ;api.c: 207: outBuffer[1] = 0xC125 >> 8;
 23906  005550  EE20 F001          	lfsr	2,1
 23907  005554  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23908  005556  26D9               	addwf	fsr2l,f,c
 23909  005558  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23910  00555A  22DA               	addwfc	fsr2h,f,c
 23911  00555C  0EC1               	movlw	193
 23912  00555E  6EDF               	movwf	indf2,c
 23913                           
 23914                           ;api.c: 208: outBuffer[2] = (uint8_t) 0xC125;
 23915  005560  EE20 F002          	lfsr	2,2
 23916  005564  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23917  005566  26D9               	addwf	fsr2l,f,c
 23918  005568  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23919  00556A  22DA               	addwfc	fsr2h,f,c
 23920  00556C  0E25               	movlw	37
 23921  00556E  6EDF               	movwf	indf2,c
 23922                           
 23923                           ;api.c: 212: outBuffer[3] = (uint8_t) flash_is_busy();
 23924  005570  EE20 F003          	lfsr	2,3
 23925  005574  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23926  005576  26D9               	addwf	fsr2l,f,c
 23927  005578  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23928  00557A  22DA               	addwfc	fsr2h,f,c
 23929  00557C  ECED  F046         	call	_flash_is_busy	;wreg free
 23930  005580  6EDF               	movwf	indf2,c
 23931                           
 23932                           ;api.c: 215: outBuffer[4] = 0x00;
 23933  005582  EE20 F004          	lfsr	2,4
 23934  005586  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23935  005588  26D9               	addwf	fsr2l,f,c
 23936  00558A  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23937  00558C  22DA               	addwfc	fsr2h,f,c
 23938  00558E  0E00               	movlw	0
 23939  005590  6EDF               	movwf	indf2,c
 23940                           
 23941                           ;api.c: 216: outBuffer[5] = 0x03;
 23942  005592  EE20 F005          	lfsr	2,5
 23943  005596  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23944  005598  26D9               	addwf	fsr2l,f,c
 23945  00559A  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23946  00559C  22DA               	addwfc	fsr2h,f,c
 23947  00559E  0E03               	movlw	3
 23948  0055A0  6EDF               	movwf	indf2,c
 23949                           
 23950                           ;api.c: 217: outBuffer[6] = 0x02;
 23951  0055A2  EE20 F006          	lfsr	2,6
 23952  0055A6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23953  0055A8  26D9               	addwf	fsr2l,f,c
 23954  0055AA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23955  0055AC  22DA               	addwfc	fsr2h,f,c
 23956  0055AE  0E02               	movlw	2
 23957  0055B0  6EDF               	movwf	indf2,c
 23958                           
 23959                           ;api.c: 220: outBuffer[7] = ui_get_status();
 23960  0055B2  EE20 F007          	lfsr	2,7
 23961  0055B6  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23962  0055B8  26D9               	addwf	fsr2l,f,c
 23963  0055BA  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23964  0055BC  22DA               	addwfc	fsr2h,f,c
 23965  0055BE  ECCD  F047         	call	_ui_get_status	;wreg free
 23966  0055C2  6EDF               	movwf	indf2,c
 23967                           
 23968                           ;api.c: 223: outBuffer[8] = os.encoderCount;
 23969  0055C4  EE20 F008          	lfsr	2,8
 23970  0055C8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23971  0055CA  26D9               	addwf	fsr2l,f,c
 23972  0055CC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23973  0055CE  22DA               	addwfc	fsr2h,f,c
 23974  0055D0  C0C5  FFDF         	movff	_os,indf2	;volatile
 23975                           
 23976                           ;api.c: 224: outBuffer[9] = os.buttonCount;
 23977  0055D4  EE20 F009          	lfsr	2,9
 23978  0055D8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23979  0055DA  26D9               	addwf	fsr2l,f,c
 23980  0055DC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23981  0055DE  22DA               	addwfc	fsr2h,f,c
 23982  0055E0  C0C6  FFDF         	movff	_os+1,indf2	;volatile
 23983                           
 23984                           ;api.c: 225: outBuffer[10] = os.timeSlot;
 23985  0055E4  EE20 F00A          	lfsr	2,10
 23986  0055E8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23987  0055EA  26D9               	addwf	fsr2l,f,c
 23988  0055EC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23989  0055EE  22DA               	addwfc	fsr2h,f,c
 23990  0055F0  C0C7  FFDF         	movff	_os+2,indf2	;volatile
 23991                           
 23992                           ;api.c: 226: outBuffer[11] = os.done;
 23993  0055F4  EE20 F00B          	lfsr	2,11
 23994  0055F8  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 23995  0055FA  26D9               	addwf	fsr2l,f,c
 23996  0055FC  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 23997  0055FE  22DA               	addwfc	fsr2h,f,c
 23998  005600  C0C8  FFDF         	movff	_os+3,indf2	;volatile
 23999                           
 24000                           ;api.c: 227: outBuffer[12] = os.bootloader_mode;
 24001  005604  EE20 F00C          	lfsr	2,12
 24002  005608  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24003  00560A  26D9               	addwf	fsr2l,f,c
 24004  00560C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24005  00560E  22DA               	addwfc	fsr2h,f,c
 24006  005610  C0C9  FFDF         	movff	_os+4,indf2	;volatile
 24007                           
 24008                           ;api.c: 228: outBuffer[13] = os.display_mode;
 24009  005614  EE20 F00D          	lfsr	2,13
 24010  005618  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24011  00561A  26D9               	addwf	fsr2l,f,c
 24012  00561C  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24013  00561E  22DA               	addwfc	fsr2h,f,c
 24014  005620  C0CA  FFDF         	movff	_os+5,indf2	;volatile
 24015  005624  0012               	return		;funcret
 24016  005626                     __end_of__fill_buffer_get_status:
 24017                           	opt stack 0
 24018                           tosu	equ	0xFFF
 24019                           tosh	equ	0xFFE
 24020                           tosl	equ	0xFFD
 24021                           pclath	equ	0xFFA
 24022                           tblptru	equ	0xFF8
 24023                           tblptrh	equ	0xFF7
 24024                           tblptrl	equ	0xFF6
 24025                           tablat	equ	0xFF5
 24026                           prodh	equ	0xFF4
 24027                           prodl	equ	0xFF3
 24028                           intcon	equ	0xFF2
 24029                           intcon2	equ	0xFF1
 24030                           intcon3	equ	0xFF0
 24031                           indf0	equ	0xFEF
 24032                           postinc0	equ	0xFEE
 24033                           fsr0h	equ	0xFEA
 24034                           fsr0l	equ	0xFE9
 24035                           wreg	equ	0xFE8
 24036                           indf1	equ	0xFE7
 24037                           postdec1	equ	0xFE5
 24038                           plusw1	equ	0xFE3
 24039                           fsr1h	equ	0xFE2
 24040                           fsr1l	equ	0xFE1
 24041                           indf2	equ	0xFDF
 24042                           postinc2	equ	0xFDE
 24043                           postdec2	equ	0xFDD
 24044                           plusw2	equ	0xFDB
 24045                           fsr2h	equ	0xFDA
 24046                           fsr2l	equ	0xFD9
 24047                           status	equ	0xFD8
 24048                           
 24049 ;; *************** function _flash_is_busy *****************
 24050 ;; Defined at:
 24051 ;;		line 354 in file "flash.c"
 24052 ;; Parameters:    Size  Location     Type
 24053 ;;		None
 24054 ;; Auto vars:     Size  Location     Type
 24055 ;;  result          1   19[COMRAM] unsigned char 
 24056 ;; Return value:  Size  Location     Type
 24057 ;;                  1    wreg      unsigned char 
 24058 ;; Registers used:
 24059 ;;		wreg, status,2, status,0, cstack
 24060 ;; Tracked objects:
 24061 ;;		On entry : 0/0
 24062 ;;		On exit  : 0/0
 24063 ;;		Unchanged: 0/0
 24064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24065 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24066 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24067 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24068 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24069 ;;Total ram usage:        1 bytes
 24070 ;; Hardware stack levels used:    1
 24071 ;; Hardware stack levels required when called:    3
 24072 ;; This function calls:
 24073 ;;		__flash_is_busy
 24074 ;;		_spi_set_configuration
 24075 ;; This function is called by:
 24076 ;;		__fill_buffer_get_status
 24077 ;; This function uses a non-reentrant model
 24078 ;;
 24079                           
 24080                           	psect	text110
 24081  008DDA                     __ptext110:
 24082                           	opt stack 0
 24083  008DDA                     _flash_is_busy:
 24084                           	opt stack 25
 24085                           
 24086                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24087                           
 24088                           ;incstack = 0
 24089  008DDA  0E00               	movlw	0
 24090  008DDC  EC66  F023         	call	_spi_set_configuration
 24091                           
 24092                           ;flash.c: 362: result = _flash_is_busy();
 24093  008DE0  EC2C  F046         	call	__flash_is_busy	;wreg free
 24094  008DE4  6E14               	movwf	flash_is_busy@result,c
 24095                           
 24096                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24097  008DE6  0E01               	movlw	1
 24098  008DE8  EC66  F023         	call	_spi_set_configuration
 24099                           
 24100                           ;flash.c: 368: return result;
 24101  008DEC  5014               	movf	flash_is_busy@result,w,c
 24102  008DEE  0012               	return	
 24103  008DF0                     __end_of_flash_is_busy:
 24104                           	opt stack 0
 24105                           tosu	equ	0xFFF
 24106                           tosh	equ	0xFFE
 24107                           tosl	equ	0xFFD
 24108                           pclath	equ	0xFFA
 24109                           tblptru	equ	0xFF8
 24110                           tblptrh	equ	0xFF7
 24111                           tblptrl	equ	0xFF6
 24112                           tablat	equ	0xFF5
 24113                           prodh	equ	0xFF4
 24114                           prodl	equ	0xFF3
 24115                           intcon	equ	0xFF2
 24116                           intcon2	equ	0xFF1
 24117                           intcon3	equ	0xFF0
 24118                           indf0	equ	0xFEF
 24119                           postinc0	equ	0xFEE
 24120                           fsr0h	equ	0xFEA
 24121                           fsr0l	equ	0xFE9
 24122                           wreg	equ	0xFE8
 24123                           indf1	equ	0xFE7
 24124                           postdec1	equ	0xFE5
 24125                           plusw1	equ	0xFE3
 24126                           fsr1h	equ	0xFE2
 24127                           fsr1l	equ	0xFE1
 24128                           indf2	equ	0xFDF
 24129                           postinc2	equ	0xFDE
 24130                           postdec2	equ	0xFDD
 24131                           plusw2	equ	0xFDB
 24132                           fsr2h	equ	0xFDA
 24133                           fsr2l	equ	0xFD9
 24134                           status	equ	0xFD8
 24135                           
 24136 ;; *************** function __fill_buffer_get_file_details *****************
 24137 ;; Defined at:
 24138 ;;		line 354 in file "api.c"
 24139 ;; Parameters:    Size  Location     Type
 24140 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24141 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24142 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24143 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24144 ;; Auto vars:     Size  Location     Type
 24145 ;;  file_number     1   60[COMRAM] unsigned char 
 24146 ;; Return value:  Size  Location     Type
 24147 ;;                  1    wreg      void 
 24148 ;; Registers used:
 24149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24150 ;; Tracked objects:
 24151 ;;		On entry : 0/0
 24152 ;;		On exit  : 0/0
 24153 ;;		Unchanged: 0/0
 24154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24155 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24156 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24157 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24158 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24159 ;;Total ram usage:        6 bytes
 24160 ;; Hardware stack levels used:    1
 24161 ;; Hardware stack levels required when called:    6
 24162 ;; This function calls:
 24163 ;;		_fat_get_file_information
 24164 ;; This function is called by:
 24165 ;;		_api_prepare
 24166 ;; This function uses a non-reentrant model
 24167 ;;
 24168                           
 24169                           	psect	text111
 24170  0075EC                     __ptext111:
 24171                           	opt stack 0
 24172  0075EC                     __fill_buffer_get_file_details:
 24173                           	opt stack 23
 24174                           
 24175                           ;api.c: 356: uint8_t file_number = inBuffer[1];
 24176                           
 24177                           ;incstack = 0
 24178  0075EC  EE20 F001          	lfsr	2,1
 24179  0075F0  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24180  0075F2  26D9               	addwf	fsr2l,f,c
 24181  0075F4  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24182  0075F6  22DA               	addwfc	fsr2h,f,c
 24183  0075F8  50DF               	movf	indf2,w,c
 24184  0075FA  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24185                           
 24186                           ;api.c: 359: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24187  0075FC  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24188  007600  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24189  007604  0E80               	movlw	128
 24190  007606  6EDF               	movwf	indf2,c
 24191                           
 24192                           ;api.c: 362: outBuffer[1] = 0xC125 >> 8;
 24193  007608  EE20 F001          	lfsr	2,1
 24194  00760C  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24195  00760E  26D9               	addwf	fsr2l,f,c
 24196  007610  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24197  007612  22DA               	addwfc	fsr2h,f,c
 24198  007614  0EC1               	movlw	193
 24199  007616  6EDF               	movwf	indf2,c
 24200                           
 24201                           ;api.c: 363: outBuffer[2] = (uint8_t) 0xC125;
 24202  007618  EE20 F002          	lfsr	2,2
 24203  00761C  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24204  00761E  26D9               	addwf	fsr2l,f,c
 24205  007620  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24206  007622  22DA               	addwfc	fsr2h,f,c
 24207  007624  0E25               	movlw	37
 24208  007626  6EDF               	movwf	indf2,c
 24209                           
 24210                           ;api.c: 366: outBuffer[3] = file_number;
 24211  007628  EE20 F003          	lfsr	2,3
 24212  00762C  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24213  00762E  26D9               	addwf	fsr2l,f,c
 24214  007630  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24215  007632  22DA               	addwfc	fsr2h,f,c
 24216  007634  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24217                           
 24218                           ;api.c: 369: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24219  007638  0E05               	movlw	5
 24220  00763A  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24221  00763C  6E30               	movwf	fat_get_file_information@data,c
 24222  00763E  0E00               	movlw	0
 24223  007640  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24224  007642  6E31               	movwf	fat_get_file_information@data+1,c
 24225  007644  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24226  007646  EC2F  F03B         	call	_fat_get_file_information
 24227  00764A  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24228  00764C  EE20 F004          	lfsr	2,4
 24229  007650  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24230  007652  26D9               	addwf	fsr2l,f,c
 24231  007654  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24232  007656  22DA               	addwfc	fsr2h,f,c
 24233  007658  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24234  00765C  0012               	return		;funcret
 24235  00765E                     __end_of__fill_buffer_get_file_details:
 24236                           	opt stack 0
 24237                           tosu	equ	0xFFF
 24238                           tosh	equ	0xFFE
 24239                           tosl	equ	0xFFD
 24240                           pclath	equ	0xFFA
 24241                           tblptru	equ	0xFF8
 24242                           tblptrh	equ	0xFF7
 24243                           tblptrl	equ	0xFF6
 24244                           tablat	equ	0xFF5
 24245                           prodh	equ	0xFF4
 24246                           prodl	equ	0xFF3
 24247                           intcon	equ	0xFF2
 24248                           intcon2	equ	0xFF1
 24249                           intcon3	equ	0xFF0
 24250                           indf0	equ	0xFEF
 24251                           postinc0	equ	0xFEE
 24252                           fsr0h	equ	0xFEA
 24253                           fsr0l	equ	0xFE9
 24254                           wreg	equ	0xFE8
 24255                           indf1	equ	0xFE7
 24256                           postdec1	equ	0xFE5
 24257                           plusw1	equ	0xFE3
 24258                           fsr1h	equ	0xFE2
 24259                           fsr1l	equ	0xFE1
 24260                           indf2	equ	0xFDF
 24261                           postinc2	equ	0xFDE
 24262                           postdec2	equ	0xFDD
 24263                           plusw2	equ	0xFDB
 24264                           fsr2h	equ	0xFDA
 24265                           fsr2l	equ	0xFD9
 24266                           status	equ	0xFD8
 24267                           
 24268 ;; *************** function __fill_buffer_get_display *****************
 24269 ;; Defined at:
 24270 ;;		line 232 in file "api.c"
 24271 ;; Parameters:    Size  Location     Type
 24272 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24273 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24274 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24275 ;; Auto vars:     Size  Location     Type
 24276 ;;  position        1   15[COMRAM] unsigned char 
 24277 ;;  start_line      1   14[COMRAM] unsigned char 
 24278 ;;  line            1   13[COMRAM] unsigned char 
 24279 ;;  cntr            1   12[COMRAM] unsigned char 
 24280 ;; Return value:  Size  Location     Type
 24281 ;;                  1    wreg      void 
 24282 ;; Registers used:
 24283 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24284 ;; Tracked objects:
 24285 ;;		On entry : 0/0
 24286 ;;		On exit  : 0/0
 24287 ;;		Unchanged: 0/0
 24288 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24289 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24290 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24291 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24292 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24293 ;;Total ram usage:       12 bytes
 24294 ;; Hardware stack levels used:    1
 24295 ;; Hardware stack levels required when called:    1
 24296 ;; This function calls:
 24297 ;;		_display_get_character
 24298 ;; This function is called by:
 24299 ;;		_api_prepare
 24300 ;; This function uses a non-reentrant model
 24301 ;;
 24302                           
 24303                           	psect	text112
 24304  00626A                     __ptext112:
 24305                           	opt stack 0
 24306  00626A                     __fill_buffer_get_display:
 24307                           	opt stack 28
 24308                           
 24309                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 24310                           
 24311                           ;incstack = 0
 24312  00626A  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24313  00626C  B4D8               	btfsc	status,2,c
 24314  00626E  D006               	goto	l2736
 24315                           
 24316                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24317  006270  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24318  006274  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24319  006278  0E12               	movlw	18
 24320  00627A  D005               	goto	L31
 24321  00627C                     l2736:
 24322                           
 24323                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24324  00627C  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24325  006280  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24326  006284  0E11               	movlw	17
 24327  006286                     L31:
 24328  006286  6EDF               	movwf	indf2,c
 24329                           
 24330                           ;api.c: 247: };api.c: 250: outBuffer[1] = 0xC125 >> 8;
 24331  006288  EE20 F001          	lfsr	2,1
 24332  00628C  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24333  00628E  26D9               	addwf	fsr2l,f,c
 24334  006290  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24335  006292  22DA               	addwfc	fsr2h,f,c
 24336  006294  0EC1               	movlw	193
 24337  006296  6EDF               	movwf	indf2,c
 24338                           
 24339                           ;api.c: 251: outBuffer[2] = (uint8_t) 0xC125;
 24340  006298  EE20 F002          	lfsr	2,2
 24341  00629C  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24342  00629E  26D9               	addwf	fsr2l,f,c
 24343  0062A0  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24344  0062A2  22DA               	addwfc	fsr2h,f,c
 24345  0062A4  0E25               	movlw	37
 24346  0062A6  6EDF               	movwf	indf2,c
 24347                           
 24348                           ;api.c: 254: cntr = 3;
 24349  0062A8  0E03               	movlw	3
 24350  0062AA  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24351                           
 24352                           ;api.c: 255: if(secondHalf)
 24353  0062AC  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24354  0062AE  B4D8               	btfsc	status,2,c
 24355  0062B0  D002               	goto	l2738
 24356                           
 24357                           ;api.c: 256: {;api.c: 257: start_line = 2;
 24358  0062B2  0E02               	movlw	2
 24359  0062B4  D001               	goto	L32
 24360  0062B6                     l2738:
 24361                           
 24362                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 24363  0062B6  0E00               	movlw	0
 24364  0062B8                     L32:
 24365  0062B8  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24366                           
 24367                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 24368  0062BA  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24369  0062BE  D01A               	goto	l2740
 24370  0062C0                     
 24371                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 24372  0062C0  0E00               	movlw	0
 24373  0062C2  6E10               	movwf	__fill_buffer_get_display@position,c
 24374  0062C4                     l14609:
 24375  0062C4  0E13               	movlw	19
 24376  0062C6  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24377  0062C8  D001               	goto	l2742
 24378  0062CA  D013               	goto	u11630
 24379  0062CC                     l2742:
 24380                           
 24381                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = display_get_character(line, position);
 24382  0062CC  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24383  0062D0  500E               	movf	__fill_buffer_get_display@line,w,c
 24384  0062D2  EC27  F045         	call	_display_get_character
 24385  0062D6  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24386  0062D8  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24387  0062DA  0D01               	mullw	1
 24388  0062DC  50F3               	movf	prodl,w,c
 24389  0062DE  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24390  0062E0  6ED9               	movwf	fsr2l,c
 24391  0062E2  50F4               	movf	prodh,w,c
 24392  0062E4  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24393  0062E6  6EDA               	movwf	fsr2h,c
 24394  0062E8  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24395                           
 24396                           ;api.c: 268: ++cntr;
 24397  0062EC  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24398  0062EE  2A10               	incf	__fill_buffer_get_display@position,f,c
 24399  0062F0  D7E9               	goto	l14609
 24400  0062F2                     u11630:
 24401  0062F2  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24402  0062F4                     l2740:
 24403  0062F4  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24404  0062F6  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24405  0062F8  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24406  0062FA  0E02               	movlw	2
 24407  0062FC  2608               	addwf	??__fill_buffer_get_display,f,c
 24408  0062FE  0E00               	movlw	0
 24409  006300  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24410  006302  500E               	movf	__fill_buffer_get_display@line,w,c
 24411  006304  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24412  006306  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24413  006308  5008               	movf	??__fill_buffer_get_display,w,c
 24414  00630A  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24415  00630C  500B               	movf	??__fill_buffer_get_display+3,w,c
 24416  00630E  0A80               	xorlw	128
 24417  006310  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24418  006312  5009               	movf	??__fill_buffer_get_display+1,w,c
 24419  006314  0A80               	xorlw	128
 24420  006316  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24421  006318  B0D8               	btfsc	status,0,c
 24422  00631A  0012               	return	
 24423  00631C  D7D1               	goto	l2741
 24424  00631E                     __end_of__fill_buffer_get_display:
 24425                           	opt stack 0
 24426                           tosu	equ	0xFFF
 24427                           tosh	equ	0xFFE
 24428                           tosl	equ	0xFFD
 24429                           pclath	equ	0xFFA
 24430                           tblptru	equ	0xFF8
 24431                           tblptrh	equ	0xFF7
 24432                           tblptrl	equ	0xFF6
 24433                           tablat	equ	0xFF5
 24434                           prodh	equ	0xFF4
 24435                           prodl	equ	0xFF3
 24436                           intcon	equ	0xFF2
 24437                           intcon2	equ	0xFF1
 24438                           intcon3	equ	0xFF0
 24439                           indf0	equ	0xFEF
 24440                           postinc0	equ	0xFEE
 24441                           fsr0h	equ	0xFEA
 24442                           fsr0l	equ	0xFE9
 24443                           wreg	equ	0xFE8
 24444                           indf1	equ	0xFE7
 24445                           postdec1	equ	0xFE5
 24446                           plusw1	equ	0xFE3
 24447                           fsr1h	equ	0xFE2
 24448                           fsr1l	equ	0xFE1
 24449                           indf2	equ	0xFDF
 24450                           postinc2	equ	0xFDE
 24451                           postdec2	equ	0xFDD
 24452                           plusw2	equ	0xFDB
 24453                           fsr2h	equ	0xFDA
 24454                           fsr2l	equ	0xFD9
 24455                           status	equ	0xFD8
 24456                           
 24457 ;; *************** function _display_get_character *****************
 24458 ;; Defined at:
 24459 ;;		line 70 in file "display.c"
 24460 ;; Parameters:    Size  Location     Type
 24461 ;;  line            1    wreg     unsigned char 
 24462 ;;  position        1    0[COMRAM] unsigned char 
 24463 ;; Auto vars:     Size  Location     Type
 24464 ;;  line            1    3[COMRAM] unsigned char 
 24465 ;; Return value:  Size  Location     Type
 24466 ;;                  1    wreg      unsigned char 
 24467 ;; Registers used:
 24468 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24469 ;; Tracked objects:
 24470 ;;		On entry : 0/0
 24471 ;;		On exit  : 0/0
 24472 ;;		Unchanged: 0/0
 24473 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24474 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24475 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24476 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24477 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24478 ;;Total ram usage:        4 bytes
 24479 ;; Hardware stack levels used:    1
 24480 ;; This function calls:
 24481 ;;		Nothing
 24482 ;; This function is called by:
 24483 ;;		__fill_buffer_get_display
 24484 ;; This function uses a non-reentrant model
 24485 ;;
 24486                           
 24487                           	psect	text113
 24488  008A4E                     __ptext113:
 24489                           	opt stack 0
 24490  008A4E                     _display_get_character:
 24491                           	opt stack 28
 24492                           
 24493                           ;incstack = 0
 24494                           ;display_get_character@line stored from wreg
 24495  008A4E  6E04               	movwf	display_get_character@line,c
 24496                           
 24497                           ;display.c: 72: return display_content[line][position];
 24498  008A50  5004               	movf	display_get_character@line,w,c
 24499  008A52  0D14               	mullw	20
 24500  008A54  0E00               	movlw	low _display_content
 24501  008A56  6E02               	movwf	??_display_get_character& (0+255),c
 24502  008A58  0E02               	movlw	high _display_content
 24503  008A5A  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24504  008A5C  50F3               	movf	prodl,w,c
 24505  008A5E  2602               	addwf	??_display_get_character,f,c
 24506  008A60  50F4               	movf	prodh,w,c
 24507  008A62  2203               	addwfc	??_display_get_character+1,f,c
 24508  008A64  5001               	movf	display_get_character@position,w,c
 24509  008A66  0D01               	mullw	1
 24510  008A68  50F3               	movf	prodl,w,c
 24511  008A6A  2402               	addwf	??_display_get_character,w,c
 24512  008A6C  6ED9               	movwf	fsr2l,c
 24513  008A6E  50F4               	movf	prodh,w,c
 24514  008A70  2003               	addwfc	??_display_get_character+1,w,c
 24515  008A72  6EDA               	movwf	fsr2h,c
 24516  008A74  50DF               	movf	indf2,w,c
 24517  008A76  0012               	return	
 24518  008A78                     __end_of_display_get_character:
 24519                           	opt stack 0
 24520                           tosu	equ	0xFFF
 24521                           tosh	equ	0xFFE
 24522                           tosl	equ	0xFFD
 24523                           pclath	equ	0xFFA
 24524                           tblptru	equ	0xFF8
 24525                           tblptrh	equ	0xFF7
 24526                           tblptrl	equ	0xFF6
 24527                           tablat	equ	0xFF5
 24528                           prodh	equ	0xFF4
 24529                           prodl	equ	0xFF3
 24530                           intcon	equ	0xFF2
 24531                           intcon2	equ	0xFF1
 24532                           intcon3	equ	0xFF0
 24533                           indf0	equ	0xFEF
 24534                           postinc0	equ	0xFEE
 24535                           fsr0h	equ	0xFEA
 24536                           fsr0l	equ	0xFE9
 24537                           wreg	equ	0xFE8
 24538                           indf1	equ	0xFE7
 24539                           postdec1	equ	0xFE5
 24540                           plusw1	equ	0xFE3
 24541                           fsr1h	equ	0xFE2
 24542                           fsr1l	equ	0xFE1
 24543                           indf2	equ	0xFDF
 24544                           postinc2	equ	0xFDE
 24545                           postdec2	equ	0xFDD
 24546                           plusw2	equ	0xFDB
 24547                           fsr2h	equ	0xFDA
 24548                           fsr2l	equ	0xFD9
 24549                           status	equ	0xFD8
 24550                           
 24551 ;; *************** function __fill_buffer_get_configuration *****************
 24552 ;; Defined at:
 24553 ;;		line 333 in file "api.c"
 24554 ;; Parameters:    Size  Location     Type
 24555 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24556 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24557 ;; Auto vars:     Size  Location     Type
 24558 ;;		None
 24559 ;; Return value:  Size  Location     Type
 24560 ;;                  1    wreg      void 
 24561 ;; Registers used:
 24562 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24563 ;; Tracked objects:
 24564 ;;		On entry : 0/0
 24565 ;;		On exit  : 0/0
 24566 ;;		Unchanged: 0/0
 24567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24568 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24569 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24570 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24571 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24572 ;;Total ram usage:        2 bytes
 24573 ;; Hardware stack levels used:    1
 24574 ;; This function calls:
 24575 ;;		Nothing
 24576 ;; This function is called by:
 24577 ;;		_api_prepare
 24578 ;; This function uses a non-reentrant model
 24579 ;;
 24580                           
 24581                           	psect	text114
 24582  006B00                     __ptext114:
 24583                           	opt stack 0
 24584  006B00                     __fill_buffer_get_configuration:
 24585                           	opt stack 29
 24586                           
 24587                           ;api.c: 336: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24588                           
 24589                           ;incstack = 0
 24590  006B00  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24591  006B04  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24592  006B08  0E10               	movlw	16
 24593  006B0A  6EDF               	movwf	indf2,c
 24594                           
 24595                           ;api.c: 339: outBuffer[1] = 0xC125 >> 8;
 24596  006B0C  EE20 F001          	lfsr	2,1
 24597  006B10  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24598  006B12  26D9               	addwf	fsr2l,f,c
 24599  006B14  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24600  006B16  22DA               	addwfc	fsr2h,f,c
 24601  006B18  0EC1               	movlw	193
 24602  006B1A  6EDF               	movwf	indf2,c
 24603                           
 24604                           ;api.c: 340: outBuffer[2] = (uint8_t) 0xC125;
 24605  006B1C  EE20 F002          	lfsr	2,2
 24606  006B20  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24607  006B22  26D9               	addwf	fsr2l,f,c
 24608  006B24  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24609  006B26  22DA               	addwfc	fsr2h,f,c
 24610  006B28  0E25               	movlw	37
 24611  006B2A  6EDF               	movwf	indf2,c
 24612                           
 24613                           ;api.c: 343: outBuffer[3] = communicationSettings.spiMode;
 24614  006B2C  EE20 F003          	lfsr	2,3
 24615  006B30  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24616  006B32  26D9               	addwf	fsr2l,f,c
 24617  006B34  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24618  006B36  22DA               	addwfc	fsr2h,f,c
 24619  006B38  C139  FFDF         	movff	_communicationSettings,indf2
 24620                           
 24621                           ;api.c: 344: outBuffer[4] = communicationSettings.spiFrequency;
 24622  006B3C  EE20 F004          	lfsr	2,4
 24623  006B40  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24624  006B42  26D9               	addwf	fsr2l,f,c
 24625  006B44  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24626  006B46  22DA               	addwfc	fsr2h,f,c
 24627  006B48  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24628                           
 24629                           ;api.c: 345: outBuffer[5] = communicationSettings.spiPolarity;
 24630  006B4C  EE20 F005          	lfsr	2,5
 24631  006B50  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24632  006B52  26D9               	addwf	fsr2l,f,c
 24633  006B54  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24634  006B56  22DA               	addwfc	fsr2h,f,c
 24635  006B58  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24636                           
 24637                           ;api.c: 348: outBuffer[6] = communicationSettings.i2cMode;
 24638  006B5C  EE20 F006          	lfsr	2,6
 24639  006B60  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24640  006B62  26D9               	addwf	fsr2l,f,c
 24641  006B64  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24642  006B66  22DA               	addwfc	fsr2h,f,c
 24643  006B68  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24644                           
 24645                           ;api.c: 349: outBuffer[7] = communicationSettings.i2cFrequency;
 24646  006B6C  EE20 F007          	lfsr	2,7
 24647  006B70  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24648  006B72  26D9               	addwf	fsr2l,f,c
 24649  006B74  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24650  006B76  22DA               	addwfc	fsr2h,f,c
 24651  006B78  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24652                           
 24653                           ;api.c: 350: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24654  006B7C  EE20 F008          	lfsr	2,8
 24655  006B80  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24656  006B82  26D9               	addwf	fsr2l,f,c
 24657  006B84  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24658  006B86  22DA               	addwfc	fsr2h,f,c
 24659  006B88  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24660                           
 24661                           ;api.c: 351: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24662  006B8C  EE20 F009          	lfsr	2,9
 24663  006B90  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24664  006B92  26D9               	addwf	fsr2l,f,c
 24665  006B94  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24666  006B96  22DA               	addwfc	fsr2h,f,c
 24667  006B98  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24668  006B9C  0012               	return		;funcret
 24669  006B9E                     __end_of__fill_buffer_get_configuration:
 24670                           	opt stack 0
 24671                           tosu	equ	0xFFF
 24672                           tosh	equ	0xFFE
 24673                           tosl	equ	0xFFD
 24674                           pclath	equ	0xFFA
 24675                           tblptru	equ	0xFF8
 24676                           tblptrh	equ	0xFF7
 24677                           tblptrl	equ	0xFF6
 24678                           tablat	equ	0xFF5
 24679                           prodh	equ	0xFF4
 24680                           prodl	equ	0xFF3
 24681                           intcon	equ	0xFF2
 24682                           intcon2	equ	0xFF1
 24683                           intcon3	equ	0xFF0
 24684                           indf0	equ	0xFEF
 24685                           postinc0	equ	0xFEE
 24686                           fsr0h	equ	0xFEA
 24687                           fsr0l	equ	0xFE9
 24688                           wreg	equ	0xFE8
 24689                           indf1	equ	0xFE7
 24690                           postdec1	equ	0xFE5
 24691                           plusw1	equ	0xFE3
 24692                           fsr1h	equ	0xFE2
 24693                           fsr1l	equ	0xFE1
 24694                           indf2	equ	0xFDF
 24695                           postinc2	equ	0xFDE
 24696                           postdec2	equ	0xFDD
 24697                           plusw2	equ	0xFDB
 24698                           fsr2h	equ	0xFDA
 24699                           fsr2l	equ	0xFD9
 24700                           status	equ	0xFD8
 24701                           
 24702 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24703 ;; Defined at:
 24704 ;;		line 273 in file "api.c"
 24705 ;; Parameters:    Size  Location     Type
 24706 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24707 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24708 ;; Auto vars:     Size  Location     Type
 24709 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24710 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24711 ;;  cntr            1   10[COMRAM] unsigned char 
 24712 ;;  data_length     1    9[COMRAM] unsigned char 
 24713 ;; Return value:  Size  Location     Type
 24714 ;;                  1    wreg      void 
 24715 ;; Registers used:
 24716 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24717 ;; Tracked objects:
 24718 ;;		On entry : 0/0
 24719 ;;		On exit  : 0/0
 24720 ;;		Unchanged: 0/0
 24721 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24722 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24723 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24724 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24725 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24726 ;;Total ram usage:       13 bytes
 24727 ;; Hardware stack levels used:    1
 24728 ;; Hardware stack levels required when called:    1
 24729 ;; This function calls:
 24730 ;;		_bootloader_get_entries
 24731 ;;		_bootloader_get_error
 24732 ;;		_bootloader_get_file_size
 24733 ;;		_bootloader_get_flashPagesWritten
 24734 ;;		_bootloader_get_rec_address
 24735 ;;		_bootloader_get_rec_checksum
 24736 ;;		_bootloader_get_rec_checksumCheck
 24737 ;;		_bootloader_get_rec_data
 24738 ;;		_bootloader_get_rec_dataLength
 24739 ;;		_bootloader_get_rec_recordType
 24740 ;;		_bootloader_get_total_entries
 24741 ;; This function is called by:
 24742 ;;		_api_prepare
 24743 ;; This function uses a non-reentrant model
 24744 ;;
 24745                           
 24746                           	psect	text115
 24747  002CF0                     __ptext115:
 24748                           	opt stack 0
 24749  002CF0                     __fill_buffer_get_bootloader_details:
 24750                           	opt stack 28
 24751                           
 24752                           ;api.c: 275: uint8_t cntr;;api.c: 276: uint8_t data_length;;api.c: 277: uint16_t buffer_
      +                          small;;api.c: 278: uint32_t buffer_large;;api.c: 281: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24753                           
 24754                           ;incstack = 0
 24755  002CF0  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24756  002CF4  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24757  002CF8  0E13               	movlw	19
 24758  002CFA  6EDF               	movwf	indf2,c
 24759                           
 24760                           ;api.c: 284: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24761  002CFC  EE20 F001          	lfsr	2,1
 24762  002D00  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24763  002D02  26D9               	addwf	fsr2l,f,c
 24764  002D04  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24765  002D06  22DA               	addwfc	fsr2h,f,c
 24766  002D08  0EC1               	movlw	193
 24767  002D0A  6EDF               	movwf	indf2,c
 24768                           
 24769                           ;api.c: 285: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24770  002D0C  EE20 F002          	lfsr	2,2
 24771  002D10  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24772  002D12  26D9               	addwf	fsr2l,f,c
 24773  002D14  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24774  002D16  22DA               	addwfc	fsr2h,f,c
 24775  002D18  0E25               	movlw	37
 24776  002D1A  6EDF               	movwf	indf2,c
 24777                           
 24778                           ;api.c: 288: buffer_large = bootloader_get_file_size();
 24779  002D1C  EC20  F047         	call	_bootloader_get_file_size	;wreg free
 24780  002D20  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24781  002D24  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24782  002D28  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24783  002D2C  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24784                           
 24785                           ;api.c: 289: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24786  002D30  EE20 F003          	lfsr	2,3
 24787  002D34  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24788  002D36  26D9               	addwf	fsr2l,f,c
 24789  002D38  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24790  002D3A  22DA               	addwfc	fsr2h,f,c
 24791  002D3C  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24792  002D3E  6EDF               	movwf	indf2,c
 24793                           
 24794                           ;api.c: 290: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24795  002D40  EE20 F004          	lfsr	2,4
 24796  002D44  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24797  002D46  26D9               	addwf	fsr2l,f,c
 24798  002D48  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24799  002D4A  22DA               	addwfc	fsr2h,f,c
 24800  002D4C  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24801                           
 24802                           ;api.c: 291: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24803  002D50  EE20 F005          	lfsr	2,5
 24804  002D54  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24805  002D56  26D9               	addwf	fsr2l,f,c
 24806  002D58  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24807  002D5A  22DA               	addwfc	fsr2h,f,c
 24808  002D5C  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24809  002D5E  6EDF               	movwf	indf2,c
 24810                           
 24811                           ;api.c: 292: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24812  002D60  EE20 F006          	lfsr	2,6
 24813  002D64  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24814  002D66  26D9               	addwf	fsr2l,f,c
 24815  002D68  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24816  002D6A  22DA               	addwfc	fsr2h,f,c
 24817  002D6C  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24818                           
 24819                           ;api.c: 294: buffer_small = bootloader_get_entries();
 24820  002D70  EC9C  F047         	call	_bootloader_get_entries	;wreg free
 24821  002D74  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24822  002D78  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24823                           
 24824                           ;api.c: 295: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24825  002D7C  EE20 F007          	lfsr	2,7
 24826  002D80  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24827  002D82  26D9               	addwf	fsr2l,f,c
 24828  002D84  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24829  002D86  22DA               	addwfc	fsr2h,f,c
 24830  002D88  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24831  002D8A  6EDF               	movwf	indf2,c
 24832                           
 24833                           ;api.c: 296: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 24834  002D8C  EE20 F008          	lfsr	2,8
 24835  002D90  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24836  002D92  26D9               	addwf	fsr2l,f,c
 24837  002D94  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24838  002D96  22DA               	addwfc	fsr2h,f,c
 24839  002D98  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24840                           
 24841                           ;api.c: 298: buffer_small = bootloader_get_total_entries();
 24842  002D9C  ECA6  F047         	call	_bootloader_get_total_entries	;wreg free
 24843  002DA0  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 24844  002DA4  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 24845                           
 24846                           ;api.c: 299: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24847  002DA8  EE20 F009          	lfsr	2,9
 24848  002DAC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24849  002DAE  26D9               	addwf	fsr2l,f,c
 24850  002DB0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24851  002DB2  22DA               	addwfc	fsr2h,f,c
 24852  002DB4  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24853  002DB6  6EDF               	movwf	indf2,c
 24854                           
 24855                           ;api.c: 300: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 24856  002DB8  EE20 F00A          	lfsr	2,10
 24857  002DBC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24858  002DBE  26D9               	addwf	fsr2l,f,c
 24859  002DC0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24860  002DC2  22DA               	addwfc	fsr2h,f,c
 24861  002DC4  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24862                           
 24863                           ;api.c: 302: outBuffer[11] = (uint8_t) bootloader_get_error();
 24864  002DC8  EE20 F00B          	lfsr	2,11
 24865  002DCC  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24866  002DCE  26D9               	addwf	fsr2l,f,c
 24867  002DD0  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24868  002DD2  22DA               	addwfc	fsr2h,f,c
 24869  002DD4  ECD0  F047         	call	_bootloader_get_error	;wreg free
 24870  002DD8  6EDF               	movwf	indf2,c
 24871                           
 24872                           ;api.c: 304: buffer_small = bootloader_get_flashPagesWritten();
 24873  002DDA  ECA1  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 24874  002DDE  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 24875  002DE2  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 24876                           
 24877                           ;api.c: 305: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24878  002DE6  EE20 F00C          	lfsr	2,12
 24879  002DEA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24880  002DEC  26D9               	addwf	fsr2l,f,c
 24881  002DEE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24882  002DF0  22DA               	addwfc	fsr2h,f,c
 24883  002DF2  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24884  002DF4  6EDF               	movwf	indf2,c
 24885                           
 24886                           ;api.c: 306: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 24887  002DF6  EE20 F00D          	lfsr	2,13
 24888  002DFA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24889  002DFC  26D9               	addwf	fsr2l,f,c
 24890  002DFE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24891  002E00  22DA               	addwfc	fsr2h,f,c
 24892  002E02  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24893                           
 24894                           ;api.c: 309: buffer_small = bootloader_get_rec_dataLength();
 24895  002E06  EC92  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 24896  002E0A  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 24897  002E0E  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 24898                           
 24899                           ;api.c: 310: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24900  002E12  EE20 F00E          	lfsr	2,14
 24901  002E16  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24902  002E18  26D9               	addwf	fsr2l,f,c
 24903  002E1A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24904  002E1C  22DA               	addwfc	fsr2h,f,c
 24905  002E1E  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24906  002E20  6EDF               	movwf	indf2,c
 24907                           
 24908                           ;api.c: 311: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 24909  002E22  EE20 F00F          	lfsr	2,15
 24910  002E26  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24911  002E28  26D9               	addwf	fsr2l,f,c
 24912  002E2A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24913  002E2C  22DA               	addwfc	fsr2h,f,c
 24914  002E2E  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24915                           
 24916                           ;api.c: 313: buffer_small = bootloader_get_rec_address();
 24917  002E32  EC97  F047         	call	_bootloader_get_rec_address	;wreg free
 24918  002E36  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 24919  002E3A  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 24920                           
 24921                           ;api.c: 314: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24922  002E3E  EE20 F010          	lfsr	2,16
 24923  002E42  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24924  002E44  26D9               	addwf	fsr2l,f,c
 24925  002E46  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24926  002E48  22DA               	addwfc	fsr2h,f,c
 24927  002E4A  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24928  002E4C  6EDF               	movwf	indf2,c
 24929                           
 24930                           ;api.c: 315: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 24931  002E4E  EE20 F011          	lfsr	2,17
 24932  002E52  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24933  002E54  26D9               	addwf	fsr2l,f,c
 24934  002E56  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24935  002E58  22DA               	addwfc	fsr2h,f,c
 24936  002E5A  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 24937                           
 24938                           ;api.c: 317: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 24939  002E5E  EE20 F012          	lfsr	2,18
 24940  002E62  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24941  002E64  26D9               	addwf	fsr2l,f,c
 24942  002E66  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24943  002E68  22DA               	addwfc	fsr2h,f,c
 24944  002E6A  ECC4  F047         	call	_bootloader_get_rec_recordType	;wreg free
 24945  002E6E  6EDF               	movwf	indf2,c
 24946                           
 24947                           ;api.c: 318: outBuffer[19] = bootloader_get_rec_checksum();
 24948  002E70  EE20 F013          	lfsr	2,19
 24949  002E74  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24950  002E76  26D9               	addwf	fsr2l,f,c
 24951  002E78  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24952  002E7A  22DA               	addwfc	fsr2h,f,c
 24953  002E7C  ECCA  F047         	call	_bootloader_get_rec_checksum	;wreg free
 24954  002E80  6EDF               	movwf	indf2,c
 24955                           
 24956                           ;api.c: 319: outBuffer[20] = bootloader_get_rec_checksumCheck();
 24957  002E82  EE20 F014          	lfsr	2,20
 24958  002E86  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24959  002E88  26D9               	addwf	fsr2l,f,c
 24960  002E8A  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24961  002E8C  22DA               	addwfc	fsr2h,f,c
 24962  002E8E  ECC7  F047         	call	_bootloader_get_rec_checksumCheck	;wreg free
 24963  002E92  6EDF               	movwf	indf2,c
 24964                           
 24965                           ;api.c: 321: data_length = (uint8_t) bootloader_get_rec_dataLength();
 24966  002E94  EC92  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 24967  002E98  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 24968  002E9A  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24969                           
 24970                           ;api.c: 322: if(data_length>43)
 24971  002E9C  0E2B               	movlw	43
 24972  002E9E  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 24973  002EA0  D002               	goto	l2748
 24974                           
 24975                           ;api.c: 323: {;api.c: 325: data_length = 43;
 24976  002EA2  0E2B               	movlw	43
 24977  002EA4  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 24978  002EA6                     l2748:
 24979                           
 24980                           ;api.c: 326: };api.c: 327: for(cntr=0; cntr<data_length; ++cntr)
 24981  002EA6  0E00               	movlw	0
 24982  002EA8  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 24983  002EAA  D014               	goto	l2749
 24984  002EAC                     
 24985                           ;api.c: 328: {;api.c: 329: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 24986  002EAC  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24987  002EAE  ECF8  F046         	call	_bootloader_get_rec_data
 24988  002EB2  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 24989  002EB4  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 24990  002EB6  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 24991  002EB8  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 24992  002EBA  0E15               	movlw	21
 24993  002EBC  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 24994  002EBE  0E00               	movlw	0
 24995  002EC0  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 24996  002EC2  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 24997  002EC4  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24998  002EC6  6ED9               	movwf	fsr2l,c
 24999  002EC8  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25000  002ECA  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25001  002ECC  6EDA               	movwf	fsr2h,c
 25002  002ECE  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25003  002ED2  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25004  002ED4                     l2749:
 25005  002ED4  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25006  002ED6  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25007  002ED8  B0D8               	btfsc	status,0,c
 25008  002EDA  0012               	return	
 25009  002EDC  D7E7               	goto	l2750
 25010  002EDE                     __end_of__fill_buffer_get_bootloader_details:
 25011                           	opt stack 0
 25012                           tosu	equ	0xFFF
 25013                           tosh	equ	0xFFE
 25014                           tosl	equ	0xFFD
 25015                           pclath	equ	0xFFA
 25016                           tblptru	equ	0xFF8
 25017                           tblptrh	equ	0xFF7
 25018                           tblptrl	equ	0xFF6
 25019                           tablat	equ	0xFF5
 25020                           prodh	equ	0xFF4
 25021                           prodl	equ	0xFF3
 25022                           intcon	equ	0xFF2
 25023                           intcon2	equ	0xFF1
 25024                           intcon3	equ	0xFF0
 25025                           indf0	equ	0xFEF
 25026                           postinc0	equ	0xFEE
 25027                           fsr0h	equ	0xFEA
 25028                           fsr0l	equ	0xFE9
 25029                           wreg	equ	0xFE8
 25030                           indf1	equ	0xFE7
 25031                           postdec1	equ	0xFE5
 25032                           plusw1	equ	0xFE3
 25033                           fsr1h	equ	0xFE2
 25034                           fsr1l	equ	0xFE1
 25035                           indf2	equ	0xFDF
 25036                           postinc2	equ	0xFDE
 25037                           postdec2	equ	0xFDD
 25038                           plusw2	equ	0xFDB
 25039                           fsr2h	equ	0xFDA
 25040                           fsr2l	equ	0xFD9
 25041                           status	equ	0xFD8
 25042                           
 25043 ;; *************** function _bootloader_get_rec_recordType *****************
 25044 ;; Defined at:
 25045 ;;		line 491 in file "bootloader.c"
 25046 ;; Parameters:    Size  Location     Type
 25047 ;;		None
 25048 ;; Auto vars:     Size  Location     Type
 25049 ;;		None
 25050 ;; Return value:  Size  Location     Type
 25051 ;;                  1    wreg      enum E6772
 25052 ;; Registers used:
 25053 ;;		wreg, status,2
 25054 ;; Tracked objects:
 25055 ;;		On entry : 0/0
 25056 ;;		On exit  : 0/0
 25057 ;;		Unchanged: 0/0
 25058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25063 ;;Total ram usage:        0 bytes
 25064 ;; Hardware stack levels used:    1
 25065 ;; This function calls:
 25066 ;;		Nothing
 25067 ;; This function is called by:
 25068 ;;		__fill_buffer_get_bootloader_details
 25069 ;; This function uses a non-reentrant model
 25070 ;;
 25071                           
 25072                           	psect	text116
 25073  008F88                     __ptext116:
 25074                           	opt stack 0
 25075  008F88                     _bootloader_get_rec_recordType:
 25076                           	opt stack 28
 25077                           
 25078                           ;bootloader.c: 493: return hex_file_entry.recordType;
 25079                           
 25080                           ;incstack = 0
 25081  008F88  0101               	movlb	1	; () banked
 25082  008F8A  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 25083  008F8C  0012               	return	
 25084  008F8E                     __end_of_bootloader_get_rec_recordType:
 25085                           	opt stack 0
 25086                           tosu	equ	0xFFF
 25087                           tosh	equ	0xFFE
 25088                           tosl	equ	0xFFD
 25089                           pclath	equ	0xFFA
 25090                           tblptru	equ	0xFF8
 25091                           tblptrh	equ	0xFF7
 25092                           tblptrl	equ	0xFF6
 25093                           tablat	equ	0xFF5
 25094                           prodh	equ	0xFF4
 25095                           prodl	equ	0xFF3
 25096                           intcon	equ	0xFF2
 25097                           intcon2	equ	0xFF1
 25098                           intcon3	equ	0xFF0
 25099                           indf0	equ	0xFEF
 25100                           postinc0	equ	0xFEE
 25101                           fsr0h	equ	0xFEA
 25102                           fsr0l	equ	0xFE9
 25103                           wreg	equ	0xFE8
 25104                           indf1	equ	0xFE7
 25105                           postdec1	equ	0xFE5
 25106                           plusw1	equ	0xFE3
 25107                           fsr1h	equ	0xFE2
 25108                           fsr1l	equ	0xFE1
 25109                           indf2	equ	0xFDF
 25110                           postinc2	equ	0xFDE
 25111                           postdec2	equ	0xFDD
 25112                           plusw2	equ	0xFDB
 25113                           fsr2h	equ	0xFDA
 25114                           fsr2l	equ	0xFD9
 25115                           status	equ	0xFD8
 25116                           
 25117 ;; *************** function _bootloader_get_rec_dataLength *****************
 25118 ;; Defined at:
 25119 ;;		line 480 in file "bootloader.c"
 25120 ;; Parameters:    Size  Location     Type
 25121 ;;		None
 25122 ;; Auto vars:     Size  Location     Type
 25123 ;;		None
 25124 ;; Return value:  Size  Location     Type
 25125 ;;                  2    0[COMRAM] unsigned int 
 25126 ;; Registers used:
 25127 ;;		None
 25128 ;; Tracked objects:
 25129 ;;		On entry : 0/0
 25130 ;;		On exit  : 0/0
 25131 ;;		Unchanged: 0/0
 25132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25133 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25134 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25135 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25136 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25137 ;;Total ram usage:        2 bytes
 25138 ;; Hardware stack levels used:    1
 25139 ;; This function calls:
 25140 ;;		Nothing
 25141 ;; This function is called by:
 25142 ;;		__fill_buffer_get_bootloader_details
 25143 ;; This function uses a non-reentrant model
 25144 ;;
 25145                           
 25146                           	psect	text117
 25147  008F24                     __ptext117:
 25148                           	opt stack 0
 25149  008F24                     _bootloader_get_rec_dataLength:
 25150                           	opt stack 28
 25151                           
 25152                           ;bootloader.c: 482: return hex_file_entry.dataLength;
 25153                           
 25154                           ; BSR set to: 1
 25155                           ;incstack = 0
 25156  008F24  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25157  008F28  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25158  008F2C  0012               	return		;funcret
 25159  008F2E                     __end_of_bootloader_get_rec_dataLength:
 25160                           	opt stack 0
 25161                           tosu	equ	0xFFF
 25162                           tosh	equ	0xFFE
 25163                           tosl	equ	0xFFD
 25164                           pclath	equ	0xFFA
 25165                           tblptru	equ	0xFF8
 25166                           tblptrh	equ	0xFF7
 25167                           tblptrl	equ	0xFF6
 25168                           tablat	equ	0xFF5
 25169                           prodh	equ	0xFF4
 25170                           prodl	equ	0xFF3
 25171                           intcon	equ	0xFF2
 25172                           intcon2	equ	0xFF1
 25173                           intcon3	equ	0xFF0
 25174                           indf0	equ	0xFEF
 25175                           postinc0	equ	0xFEE
 25176                           fsr0h	equ	0xFEA
 25177                           fsr0l	equ	0xFE9
 25178                           wreg	equ	0xFE8
 25179                           indf1	equ	0xFE7
 25180                           postdec1	equ	0xFE5
 25181                           plusw1	equ	0xFE3
 25182                           fsr1h	equ	0xFE2
 25183                           fsr1l	equ	0xFE1
 25184                           indf2	equ	0xFDF
 25185                           postinc2	equ	0xFDE
 25186                           postdec2	equ	0xFDD
 25187                           plusw2	equ	0xFDB
 25188                           fsr2h	equ	0xFDA
 25189                           fsr2l	equ	0xFD9
 25190                           status	equ	0xFD8
 25191                           
 25192 ;; *************** function _bootloader_get_rec_data *****************
 25193 ;; Defined at:
 25194 ;;		line 496 in file "bootloader.c"
 25195 ;; Parameters:    Size  Location     Type
 25196 ;;  index           1    wreg     unsigned char 
 25197 ;; Auto vars:     Size  Location     Type
 25198 ;;  index           1    0[COMRAM] unsigned char 
 25199 ;; Return value:  Size  Location     Type
 25200 ;;                  1    wreg      unsigned char 
 25201 ;; Registers used:
 25202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25203 ;; Tracked objects:
 25204 ;;		On entry : 0/0
 25205 ;;		On exit  : 0/0
 25206 ;;		Unchanged: 0/0
 25207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25212 ;;Total ram usage:        1 bytes
 25213 ;; Hardware stack levels used:    1
 25214 ;; This function calls:
 25215 ;;		Nothing
 25216 ;; This function is called by:
 25217 ;;		__fill_buffer_get_bootloader_details
 25218 ;; This function uses a non-reentrant model
 25219 ;;
 25220                           
 25221                           	psect	text118
 25222  008DF0                     __ptext118:
 25223                           	opt stack 0
 25224  008DF0                     _bootloader_get_rec_data:
 25225                           	opt stack 28
 25226                           
 25227                           ;incstack = 0
 25228                           ;bootloader_get_rec_data@index stored from wreg
 25229  008DF0  6E01               	movwf	bootloader_get_rec_data@index,c
 25230                           
 25231                           ;bootloader.c: 498: return hex_file_entry.data[index];
 25232  008DF2  5001               	movf	bootloader_get_rec_data@index,w,c
 25233  008DF4  0D01               	mullw	1
 25234  008DF6  0E98               	movlw	low (_hex_file_entry+5)
 25235  008DF8  24F3               	addwf	prodl,w,c
 25236  008DFA  6ED9               	movwf	fsr2l,c
 25237  008DFC  0E01               	movlw	high (_hex_file_entry+5)
 25238  008DFE  20F4               	addwfc	prodh,w,c
 25239  008E00  6EDA               	movwf	fsr2h,c
 25240  008E02  50DF               	movf	indf2,w,c
 25241  008E04  0012               	return	
 25242  008E06                     __end_of_bootloader_get_rec_data:
 25243                           	opt stack 0
 25244                           tosu	equ	0xFFF
 25245                           tosh	equ	0xFFE
 25246                           tosl	equ	0xFFD
 25247                           pclath	equ	0xFFA
 25248                           tblptru	equ	0xFF8
 25249                           tblptrh	equ	0xFF7
 25250                           tblptrl	equ	0xFF6
 25251                           tablat	equ	0xFF5
 25252                           prodh	equ	0xFF4
 25253                           prodl	equ	0xFF3
 25254                           intcon	equ	0xFF2
 25255                           intcon2	equ	0xFF1
 25256                           intcon3	equ	0xFF0
 25257                           indf0	equ	0xFEF
 25258                           postinc0	equ	0xFEE
 25259                           fsr0h	equ	0xFEA
 25260                           fsr0l	equ	0xFE9
 25261                           wreg	equ	0xFE8
 25262                           indf1	equ	0xFE7
 25263                           postdec1	equ	0xFE5
 25264                           plusw1	equ	0xFE3
 25265                           fsr1h	equ	0xFE2
 25266                           fsr1l	equ	0xFE1
 25267                           indf2	equ	0xFDF
 25268                           postinc2	equ	0xFDE
 25269                           postdec2	equ	0xFDD
 25270                           plusw2	equ	0xFDB
 25271                           fsr2h	equ	0xFDA
 25272                           fsr2l	equ	0xFD9
 25273                           status	equ	0xFD8
 25274                           
 25275 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25276 ;; Defined at:
 25277 ;;		line 506 in file "bootloader.c"
 25278 ;; Parameters:    Size  Location     Type
 25279 ;;		None
 25280 ;; Auto vars:     Size  Location     Type
 25281 ;;		None
 25282 ;; Return value:  Size  Location     Type
 25283 ;;                  1    wreg      unsigned char 
 25284 ;; Registers used:
 25285 ;;		wreg, status,2
 25286 ;; Tracked objects:
 25287 ;;		On entry : 0/0
 25288 ;;		On exit  : 0/0
 25289 ;;		Unchanged: 0/0
 25290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25291 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25292 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25293 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25294 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25295 ;;Total ram usage:        0 bytes
 25296 ;; Hardware stack levels used:    1
 25297 ;; This function calls:
 25298 ;;		Nothing
 25299 ;; This function is called by:
 25300 ;;		__fill_buffer_get_bootloader_details
 25301 ;; This function uses a non-reentrant model
 25302 ;;
 25303                           
 25304                           	psect	text119
 25305  008F8E                     __ptext119:
 25306                           	opt stack 0
 25307  008F8E                     _bootloader_get_rec_checksumCheck:
 25308                           	opt stack 28
 25309                           
 25310                           ;bootloader.c: 508: return hex_file_entry.checksumCheck;
 25311                           
 25312                           ;incstack = 0
 25313  008F8E  0101               	movlb	1	; () banked
 25314  008F90  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 25315  008F92  0012               	return	
 25316  008F94                     __end_of_bootloader_get_rec_checksumCheck:
 25317                           	opt stack 0
 25318                           tosu	equ	0xFFF
 25319                           tosh	equ	0xFFE
 25320                           tosl	equ	0xFFD
 25321                           pclath	equ	0xFFA
 25322                           tblptru	equ	0xFF8
 25323                           tblptrh	equ	0xFF7
 25324                           tblptrl	equ	0xFF6
 25325                           tablat	equ	0xFF5
 25326                           prodh	equ	0xFF4
 25327                           prodl	equ	0xFF3
 25328                           intcon	equ	0xFF2
 25329                           intcon2	equ	0xFF1
 25330                           intcon3	equ	0xFF0
 25331                           indf0	equ	0xFEF
 25332                           postinc0	equ	0xFEE
 25333                           fsr0h	equ	0xFEA
 25334                           fsr0l	equ	0xFE9
 25335                           wreg	equ	0xFE8
 25336                           indf1	equ	0xFE7
 25337                           postdec1	equ	0xFE5
 25338                           plusw1	equ	0xFE3
 25339                           fsr1h	equ	0xFE2
 25340                           fsr1l	equ	0xFE1
 25341                           indf2	equ	0xFDF
 25342                           postinc2	equ	0xFDE
 25343                           postdec2	equ	0xFDD
 25344                           plusw2	equ	0xFDB
 25345                           fsr2h	equ	0xFDA
 25346                           fsr2l	equ	0xFD9
 25347                           status	equ	0xFD8
 25348                           
 25349 ;; *************** function _bootloader_get_rec_checksum *****************
 25350 ;; Defined at:
 25351 ;;		line 501 in file "bootloader.c"
 25352 ;; Parameters:    Size  Location     Type
 25353 ;;		None
 25354 ;; Auto vars:     Size  Location     Type
 25355 ;;		None
 25356 ;; Return value:  Size  Location     Type
 25357 ;;                  1    wreg      unsigned char 
 25358 ;; Registers used:
 25359 ;;		wreg, status,2
 25360 ;; Tracked objects:
 25361 ;;		On entry : 0/0
 25362 ;;		On exit  : 0/0
 25363 ;;		Unchanged: 0/0
 25364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25366 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25368 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25369 ;;Total ram usage:        0 bytes
 25370 ;; Hardware stack levels used:    1
 25371 ;; This function calls:
 25372 ;;		Nothing
 25373 ;; This function is called by:
 25374 ;;		__fill_buffer_get_bootloader_details
 25375 ;; This function uses a non-reentrant model
 25376 ;;
 25377                           
 25378                           	psect	text120
 25379  008F94                     __ptext120:
 25380                           	opt stack 0
 25381  008F94                     _bootloader_get_rec_checksum:
 25382                           	opt stack 28
 25383                           
 25384                           ;bootloader.c: 503: return hex_file_entry.checksum;
 25385                           
 25386                           ; BSR set to: 1
 25387                           ;incstack = 0
 25388  008F94  0101               	movlb	1	; () banked
 25389  008F96  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 25390  008F98  0012               	return	
 25391  008F9A                     __end_of_bootloader_get_rec_checksum:
 25392                           	opt stack 0
 25393                           tosu	equ	0xFFF
 25394                           tosh	equ	0xFFE
 25395                           tosl	equ	0xFFD
 25396                           pclath	equ	0xFFA
 25397                           tblptru	equ	0xFF8
 25398                           tblptrh	equ	0xFF7
 25399                           tblptrl	equ	0xFF6
 25400                           tablat	equ	0xFF5
 25401                           prodh	equ	0xFF4
 25402                           prodl	equ	0xFF3
 25403                           intcon	equ	0xFF2
 25404                           intcon2	equ	0xFF1
 25405                           intcon3	equ	0xFF0
 25406                           indf0	equ	0xFEF
 25407                           postinc0	equ	0xFEE
 25408                           fsr0h	equ	0xFEA
 25409                           fsr0l	equ	0xFE9
 25410                           wreg	equ	0xFE8
 25411                           indf1	equ	0xFE7
 25412                           postdec1	equ	0xFE5
 25413                           plusw1	equ	0xFE3
 25414                           fsr1h	equ	0xFE2
 25415                           fsr1l	equ	0xFE1
 25416                           indf2	equ	0xFDF
 25417                           postinc2	equ	0xFDE
 25418                           postdec2	equ	0xFDD
 25419                           plusw2	equ	0xFDB
 25420                           fsr2h	equ	0xFDA
 25421                           fsr2l	equ	0xFD9
 25422                           status	equ	0xFD8
 25423                           
 25424 ;; *************** function __fill_buffer_find_file *****************
 25425 ;; Defined at:
 25426 ;;		line 372 in file "api.c"
 25427 ;; Parameters:    Size  Location     Type
 25428 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25429 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25430 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25431 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25432 ;; Auto vars:     Size  Location     Type
 25433 ;;  cntr            1   62[COMRAM] unsigned char 
 25434 ;; Return value:  Size  Location     Type
 25435 ;;                  1    wreg      void 
 25436 ;; Registers used:
 25437 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25438 ;; Tracked objects:
 25439 ;;		On entry : 0/0
 25440 ;;		On exit  : 0/0
 25441 ;;		Unchanged: 0/0
 25442 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25443 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25444 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25445 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25446 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25447 ;;Total ram usage:        9 bytes
 25448 ;; Hardware stack levels used:    1
 25449 ;; Hardware stack levels required when called:    6
 25450 ;; This function calls:
 25451 ;;		_fat_find_file
 25452 ;; This function is called by:
 25453 ;;		_api_prepare
 25454 ;; This function uses a non-reentrant model
 25455 ;;
 25456                           
 25457                           	psect	text121
 25458  0069C0                     __ptext121:
 25459                           	opt stack 0
 25460  0069C0                     __fill_buffer_find_file:
 25461                           	opt stack 23
 25462                           
 25463                           ;api.c: 374: uint8_t cntr;;api.c: 377: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25464                           
 25465                           ; BSR set to: 1
 25466                           ;incstack = 0
 25467  0069C0  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25468  0069C4  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25469  0069C8  0E81               	movlw	129
 25470  0069CA  6EDF               	movwf	indf2,c
 25471                           
 25472                           ;api.c: 380: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25473  0069CC  EE20 F001          	lfsr	2,1
 25474  0069D0  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25475  0069D2  26D9               	addwf	fsr2l,f,c
 25476  0069D4  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25477  0069D6  22DA               	addwfc	fsr2h,f,c
 25478  0069D8  0EC1               	movlw	193
 25479  0069DA  6EDF               	movwf	indf2,c
 25480                           
 25481                           ;api.c: 381: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25482  0069DC  EE20 F002          	lfsr	2,2
 25483  0069E0  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25484  0069E2  26D9               	addwf	fsr2l,f,c
 25485  0069E4  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25486  0069E6  22DA               	addwfc	fsr2h,f,c
 25487  0069E8  0E25               	movlw	37
 25488  0069EA  6EDF               	movwf	indf2,c
 25489                           
 25490                           ;api.c: 384: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25491  0069EC  0E01               	movlw	1
 25492  0069EE  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25493  0069F0  6E2C               	movwf	fat_find_file@name,c
 25494  0069F2  0E00               	movlw	0
 25495  0069F4  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25496  0069F6  6E2D               	movwf	fat_find_file@name+1,c
 25497  0069F8  0E09               	movlw	9
 25498  0069FA  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25499  0069FC  6E2E               	movwf	fat_find_file@extension,c
 25500  0069FE  0E00               	movlw	0
 25501  006A00  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25502  006A02  6E2F               	movwf	fat_find_file@extension+1,c
 25503  006A04  EC65  F02C         	call	_fat_find_file	;wreg free
 25504  006A08  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25505  006A0A  EE20 F003          	lfsr	2,3
 25506  006A0E  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25507  006A10  26D9               	addwf	fsr2l,f,c
 25508  006A12  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25509  006A14  22DA               	addwfc	fsr2h,f,c
 25510  006A16  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 25511                           
 25512                           ;api.c: 387: for(cntr=0; cntr<11; ++cntr)
 25513  006A1A  0E00               	movlw	0
 25514  006A1C  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 25515  006A1E                     l14481:
 25516  006A1E  0E0A               	movlw	10
 25517  006A20  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 25518  006A22  D001               	goto	l2761
 25519  006A24  0012               	return	
 25520  006A26                     l2761:
 25521                           
 25522                           ;api.c: 388: {;api.c: 389: outBuffer[cntr+12] = inBuffer[cntr+1];
 25523  006A26  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25524  006A28  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25525  006A2A  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25526  006A2C  0E01               	movlw	1
 25527  006A2E  263B               	addwf	??__fill_buffer_find_file,f,c
 25528  006A30  0E00               	movlw	0
 25529  006A32  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 25530  006A34  503B               	movf	??__fill_buffer_find_file,w,c
 25531  006A36  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25532  006A38  6ED9               	movwf	fsr2l,c
 25533  006A3A  503C               	movf	??__fill_buffer_find_file+1,w,c
 25534  006A3C  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25535  006A3E  6EDA               	movwf	fsr2h,c
 25536  006A40  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25537  006A42  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25538  006A44  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25539  006A46  0E0C               	movlw	12
 25540  006A48  263D               	addwf	??__fill_buffer_find_file+2,f,c
 25541  006A4A  0E00               	movlw	0
 25542  006A4C  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 25543  006A4E  503D               	movf	??__fill_buffer_find_file+2,w,c
 25544  006A50  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25545  006A52  6EE1               	movwf	fsr1l,c
 25546  006A54  503E               	movf	??__fill_buffer_find_file+3,w,c
 25547  006A56  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25548  006A58  6EE2               	movwf	fsr1h,c
 25549  006A5A  CFDF FFE7          	movff	indf2,indf1
 25550  006A5E  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 25551  006A60  D7DE               	goto	l14481
 25552  006A62                     __end_of__fill_buffer_find_file:
 25553                           	opt stack 0
 25554                           tosu	equ	0xFFF
 25555                           tosh	equ	0xFFE
 25556                           tosl	equ	0xFFD
 25557                           pclath	equ	0xFFA
 25558                           tblptru	equ	0xFF8
 25559                           tblptrh	equ	0xFF7
 25560                           tblptrl	equ	0xFF6
 25561                           tablat	equ	0xFF5
 25562                           prodh	equ	0xFF4
 25563                           prodl	equ	0xFF3
 25564                           intcon	equ	0xFF2
 25565                           intcon2	equ	0xFF1
 25566                           intcon3	equ	0xFF0
 25567                           indf0	equ	0xFEF
 25568                           postinc0	equ	0xFEE
 25569                           fsr0h	equ	0xFEA
 25570                           fsr0l	equ	0xFE9
 25571                           wreg	equ	0xFE8
 25572                           indf1	equ	0xFE7
 25573                           postdec1	equ	0xFE5
 25574                           plusw1	equ	0xFE3
 25575                           fsr1h	equ	0xFE2
 25576                           fsr1l	equ	0xFE1
 25577                           indf2	equ	0xFDF
 25578                           postinc2	equ	0xFDE
 25579                           postdec2	equ	0xFDD
 25580                           plusw2	equ	0xFDB
 25581                           fsr2h	equ	0xFDA
 25582                           fsr2l	equ	0xFD9
 25583                           status	equ	0xFD8
 25584                           
 25585 ;; *************** function _api_parse *****************
 25586 ;; Defined at:
 25587 ;;		line 142 in file "api.c"
 25588 ;; Parameters:    Size  Location     Type
 25589 ;;  inBuffer        2   59[BANK0 ] PTR unsigned char 
 25590 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25591 ;;  receivedData    1   61[BANK0 ] unsigned char 
 25592 ;; Auto vars:     Size  Location     Type
 25593 ;;  idx             1   64[BANK0 ] unsigned char 
 25594 ;; Return value:  Size  Location     Type
 25595 ;;                  1    wreg      void 
 25596 ;; Registers used:
 25597 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25598 ;; Tracked objects:
 25599 ;;		On entry : 0/0
 25600 ;;		On exit  : 0/0
 25601 ;;		Unchanged: 0/0
 25602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25603 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25604 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25605 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25606 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25607 ;;Total ram usage:        6 bytes
 25608 ;; Hardware stack levels used:    1
 25609 ;; Hardware stack levels required when called:   11
 25610 ;; This function calls:
 25611 ;;		__parse_command_long
 25612 ;;		__parse_command_short
 25613 ;; This function is called by:
 25614 ;;		_main
 25615 ;;		_APP_DeviceCustomHIDTasks
 25616 ;; This function uses a non-reentrant model
 25617 ;;
 25618                           
 25619                           	psect	text122
 25620  005C2A                     __ptext122:
 25621                           	opt stack 0
 25622  005C2A                     _api_parse:
 25623                           	opt stack 19
 25624                           
 25625                           ;api.c: 146: uint8_t idx;;api.c: 148: if(inBuffer[0]>0x7F)
 25626                           
 25627                           ;incstack = 0
 25628  005C2A  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25629  005C2E  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25630  005C32  0E7F               	movlw	127
 25631  005C34  64DF               	cpfsgt	indf2,c
 25632  005C36  D001               	goto	l2718
 25633  005C38  0012               	return	
 25634  005C3A                     l2718:
 25635                           
 25636                           ;api.c: 153: };api.c: 155: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25637  005C3A  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25638  005C3E  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25639  005C42  0E20               	movlw	32
 25640  005C44  18DE               	xorwf	postinc2,w,c
 25641  005C46  B4D8               	btfsc	status,2,c
 25642  005C48  0012               	return	
 25643                           
 25644                           ;api.c: 160: };api.c: 162: idx = 1;
 25645                           
 25646                           ;api.c: 156: {;api.c: 159: return;
 25647  005C4A  0E01               	movlw	1
 25648  005C4C  0100               	movlb	0	; () banked
 25649  005C4E  6FA0               	movwf	api_parse@idx& (0+255),b
 25650                           
 25651                           ;api.c: 163: while(idx<receivedDataLength)
 25652  005C50  D04F               	goto	l2726
 25653  005C52                     
 25654                           ; BSR set to: 0
 25655                           ;api.c: 164: {;api.c: 166: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25656                           
 25657                           ; BSR set to: 0
 25658  005C52  51A0               	movf	api_parse@idx& (0+255),w,b
 25659  005C54  0D01               	mullw	1
 25660  005C56  50F3               	movf	prodl,w,c
 25661  005C58  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25662  005C5A  6ED9               	movwf	fsr2l,c
 25663  005C5C  50F4               	movf	prodh,w,c
 25664  005C5E  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25665  005C60  6EDA               	movwf	fsr2h,c
 25666  005C62  0E99               	movlw	153
 25667  005C64  18DE               	xorwf	postinc2,w,c
 25668  005C66  B4D8               	btfsc	status,2,c
 25669  005C68  0012               	return	
 25670  005C6A  D027               	goto	l2724
 25671  005C6C                     
 25672                           ; BSR set to: 0
 25673                           ;api.c: 174: _parse_command_short(inBuffer[idx]);
 25674                           
 25675                           ; BSR set to: 0
 25676  005C6C  51A0               	movf	api_parse@idx& (0+255),w,b
 25677  005C6E  0D01               	mullw	1
 25678  005C70  50F3               	movf	prodl,w,c
 25679  005C72  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25680  005C74  6ED9               	movwf	fsr2l,c
 25681  005C76  50F4               	movf	prodh,w,c
 25682  005C78  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25683  005C7A  6EDA               	movwf	fsr2h,c
 25684  005C7C  50DF               	movf	indf2,w,c
 25685  005C7E  EC8F  F031         	call	__parse_command_short
 25686  005C82  D00B               	goto	l15081
 25687  005C84                     
 25688                           ; BSR set to: 0
 25689                           ;api.c: 179: _parse_command_short(inBuffer[idx]);
 25690                           
 25691                           ; BSR set to: 0
 25692  005C84  51A0               	movf	api_parse@idx& (0+255),w,b
 25693  005C86  0D01               	mullw	1
 25694  005C88  50F3               	movf	prodl,w,c
 25695  005C8A  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25696  005C8C  6ED9               	movwf	fsr2l,c
 25697  005C8E  50F4               	movf	prodh,w,c
 25698  005C90  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25699  005C92  6EDA               	movwf	fsr2h,c
 25700  005C94  50DF               	movf	indf2,w,c
 25701  005C96  EC8F  F031         	call	__parse_command_short
 25702  005C9A                     l15081:
 25703                           
 25704                           ;api.c: 180: ++idx;
 25705  005C9A  0100               	movlb	0	; () banked
 25706  005C9C  2BA0               	incf	api_parse@idx& (0+255),f,b
 25707                           
 25708                           ;api.c: 181: break;
 25709  005C9E  D028               	goto	l2726
 25710  005CA0                     
 25711                           ; BSR set to: 0
 25712                           ;api.c: 184: idx += _parse_command_long(&inBuffer[idx]);
 25713                           
 25714                           ; BSR set to: 0
 25715  005CA0  51A0               	movf	api_parse@idx& (0+255),w,b
 25716  005CA2  0D01               	mullw	1
 25717  005CA4  50F3               	movf	prodl,w,c
 25718  005CA6  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25719  005CA8  6F98               	movwf	__parse_command_long@data& (0+255),b
 25720  005CAA  50F4               	movf	prodh,w,c
 25721  005CAC  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25722  005CAE  6F99               	movwf	(__parse_command_long@data+1)& (0+255),b
 25723  005CB0  EC13  F02B         	call	__parse_command_long	;wreg free
 25724  005CB4  0100               	movlb	0	; () banked
 25725  005CB6  27A0               	addwf	api_parse@idx& (0+255),f,b
 25726                           
 25727                           ;api.c: 185: break;
 25728  005CB8  D01B               	goto	l2726
 25729  005CBA                     l2724:
 25730                           
 25731                           ; BSR set to: 0
 25732                           
 25733                           ; BSR set to: 0
 25734  005CBA  51A0               	movf	api_parse@idx& (0+255),w,b
 25735  005CBC  0D01               	mullw	1
 25736  005CBE  50F3               	movf	prodl,w,c
 25737  005CC0  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25738  005CC2  6ED9               	movwf	fsr2l,c
 25739  005CC4  50F4               	movf	prodh,w,c
 25740  005CC6  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25741  005CC8  6EDA               	movwf	fsr2h,c
 25742  005CCA  50DF               	movf	indf2,w,c
 25743  005CCC  0BF0               	andlw	240
 25744  005CCE  6F9E               	movwf	??_api_parse& (0+255),b
 25745  005CD0  6B9F               	clrf	(??_api_parse+1)& (0+255),b
 25746                           
 25747                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25748                           ; Switch size 1, requested type "space"
 25749                           ; Number of cases is 1, Range of values is 0 to 0
 25750                           ; switch strategies available:
 25751                           ; Name         Instructions Cycles
 25752                           ; simple_byte            4     3 (average)
 25753                           ;	Chosen strategy is simple_byte
 25754  005CD2  519F               	movf	(??_api_parse+1)& (0+255),w,b
 25755  005CD4  0A00               	xorlw	0	; case 0
 25756  005CD6  A4D8               	btfss	status,2,c
 25757  005CD8  0012               	return	
 25758                           
 25759                           ; BSR set to: 0
 25760                           ; Switch size 1, requested type "space"
 25761                           ; Number of cases is 3, Range of values is 32 to 80
 25762                           ; switch strategies available:
 25763                           ; Name         Instructions Cycles
 25764                           ; simple_byte           10     6 (average)
 25765                           ;	Chosen strategy is simple_byte
 25766  005CDA  519E               	movf	??_api_parse& (0+255),w,b
 25767  005CDC  0A20               	xorlw	32	; case 32
 25768  005CDE  B4D8               	btfsc	status,2,c
 25769  005CE0  D7C5               	goto	l2725
 25770  005CE2  0A10               	xorlw	16	; case 48
 25771  005CE4  B4D8               	btfsc	status,2,c
 25772  005CE6  D7CE               	goto	l2727
 25773  005CE8  0A60               	xorlw	96	; case 80
 25774  005CEA  A4D8               	btfss	status,2,c
 25775  005CEC  0012               	return	
 25776  005CEE  D7D8               	goto	l2728
 25777  005CF0                     l2726:
 25778                           
 25779                           ; BSR set to: 0
 25780                           
 25781                           ; BSR set to: 0
 25782                           
 25783                           ; BSR set to: 0
 25784  005CF0  519D               	movf	api_parse@receivedDataLength& (0+255),w,b
 25785  005CF2  5DA0               	subwf	api_parse@idx& (0+255),w,b
 25786  005CF4  B0D8               	btfsc	status,0,c
 25787  005CF6  0012               	return	
 25788  005CF8  D7AC               	goto	l2722
 25789  005CFA                     __end_of_api_parse:
 25790                           	opt stack 0
 25791                           tosu	equ	0xFFF
 25792                           tosh	equ	0xFFE
 25793                           tosl	equ	0xFFD
 25794                           pclath	equ	0xFFA
 25795                           tblptru	equ	0xFF8
 25796                           tblptrh	equ	0xFF7
 25797                           tblptrl	equ	0xFF6
 25798                           tablat	equ	0xFF5
 25799                           prodh	equ	0xFF4
 25800                           prodl	equ	0xFF3
 25801                           intcon	equ	0xFF2
 25802                           intcon2	equ	0xFF1
 25803                           intcon3	equ	0xFF0
 25804                           indf0	equ	0xFEF
 25805                           postinc0	equ	0xFEE
 25806                           fsr0h	equ	0xFEA
 25807                           fsr0l	equ	0xFE9
 25808                           wreg	equ	0xFE8
 25809                           indf1	equ	0xFE7
 25810                           postdec1	equ	0xFE5
 25811                           plusw1	equ	0xFE3
 25812                           fsr1h	equ	0xFE2
 25813                           fsr1l	equ	0xFE1
 25814                           indf2	equ	0xFDF
 25815                           postinc2	equ	0xFDE
 25816                           postdec2	equ	0xFDD
 25817                           plusw2	equ	0xFDB
 25818                           fsr2h	equ	0xFDA
 25819                           fsr2l	equ	0xFD9
 25820                           status	equ	0xFD8
 25821                           
 25822 ;; *************** function __parse_command_short *****************
 25823 ;; Defined at:
 25824 ;;		line 477 in file "api.c"
 25825 ;; Parameters:    Size  Location     Type
 25826 ;;  cmd             1    wreg     unsigned char 
 25827 ;; Auto vars:     Size  Location     Type
 25828 ;;  cmd             1   43[COMRAM] unsigned char 
 25829 ;; Return value:  Size  Location     Type
 25830 ;;                  1    wreg      void 
 25831 ;; Registers used:
 25832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25833 ;; Tracked objects:
 25834 ;;		On entry : 0/0
 25835 ;;		On exit  : 0/0
 25836 ;;		Unchanged: 0/0
 25837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25842 ;;Total ram usage:        1 bytes
 25843 ;; Hardware stack levels used:    1
 25844 ;; Hardware stack levels required when called:    8
 25845 ;; This function calls:
 25846 ;;		_i2c_eeprom_writeByte
 25847 ;;		_reboot
 25848 ;;		_system_delay_ms
 25849 ;; This function is called by:
 25850 ;;		_api_parse
 25851 ;; This function uses a non-reentrant model
 25852 ;;
 25853                           
 25854                           	psect	text123
 25855  00631E                     __ptext123:
 25856                           	opt stack 0
 25857  00631E                     __parse_command_short:
 25858                           	opt stack 21
 25859                           
 25860                           ;incstack = 0
 25861                           ;__parse_command_short@cmd stored from wreg
 25862  00631E  6E2C               	movwf	__parse_command_short@cmd,c
 25863                           
 25864                           ;api.c: 479: switch(cmd)
 25865  006320  D041               	goto	l2774
 25866  006322                     
 25867                           ;api.c: 482: i2c_eeprom_writeByte(0x100, 0x00);
 25868  006322  0E01               	movlw	1
 25869  006324  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25870  006326  0E00               	movlw	0
 25871  006328  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25872  00632A  0E00               	movlw	0
 25873  00632C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25874  00632E  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25875                           
 25876                           ;api.c: 483: system_delay_ms(10);
 25877  006332  0E0A               	movlw	10
 25878  006334  ECC3  F045         	call	_system_delay_ms
 25879                           
 25880                           ;api.c: 484: reboot();
 25881  006338  ECB1  F046         	call	_reboot	;wreg free
 25882                           
 25883                           ;api.c: 485: break;
 25884  00633C  0012               	return	
 25885  00633E                     
 25886                           ;api.c: 488: i2c_eeprom_writeByte(0x100, 0x94);
 25887  00633E  0E01               	movlw	1
 25888  006340  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25889  006342  0E00               	movlw	0
 25890  006344  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25891  006346  0E94               	movlw	148
 25892  006348  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25893  00634A  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25894                           
 25895                           ;api.c: 489: system_delay_ms(10);
 25896  00634E  0E0A               	movlw	10
 25897  006350  ECC3  F045         	call	_system_delay_ms
 25898                           
 25899                           ;api.c: 490: reboot();
 25900  006354  ECB1  F046         	call	_reboot	;wreg free
 25901                           
 25902                           ;api.c: 491: break;
 25903  006358  0012               	return	
 25904  00635A                     
 25905                           ;api.c: 494: i2c_eeprom_writeByte(0x100, 0x78);
 25906  00635A  0E01               	movlw	1
 25907  00635C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25908  00635E  0E00               	movlw	0
 25909  006360  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25910  006362  0E78               	movlw	120
 25911  006364  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25912  006366  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25913                           
 25914                           ;api.c: 495: system_delay_ms(10);
 25915  00636A  0E0A               	movlw	10
 25916  00636C  ECC3  F045         	call	_system_delay_ms
 25917                           
 25918                           ;api.c: 496: reboot();
 25919  006370  ECB1  F046         	call	_reboot	;wreg free
 25920                           
 25921                           ;api.c: 497: break;
 25922  006374  0012               	return	
 25923  006376                     
 25924                           ;api.c: 501: i2c_eeprom_writeByte(0x100, 0x78);
 25925  006376  0E01               	movlw	1
 25926  006378  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 25927  00637A  0E00               	movlw	0
 25928  00637C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 25929  00637E  0E78               	movlw	120
 25930  006380  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 25931  006382  ECB9  F042         	call	_i2c_eeprom_writeByte	;wreg free
 25932                           
 25933                           ;api.c: 502: system_delay_ms(10);
 25934  006386  0E0A               	movlw	10
 25935  006388  ECC3  F045         	call	_system_delay_ms
 25936                           
 25937                           ;api.c: 503: reboot();
 25938  00638C  ECB1  F046         	call	_reboot	;wreg free
 25939                           
 25940                           ;api.c: 504: break;
 25941  006390  0012               	return	
 25942  006392                     
 25943                           ;api.c: 507: --os.encoderCount;
 25944  006392  0100               	movlb	0	; () banked
 25945  006394  07C5               	decf	_os& (0+255),f,b	;volatile
 25946                           
 25947                           ;api.c: 508: break;
 25948  006396  0012               	return	
 25949  006398                     
 25950                           ;api.c: 511: ++os.encoderCount;
 25951                           
 25952                           ; BSR set to: 0
 25953  006398  0100               	movlb	0	; () banked
 25954  00639A  2BC5               	incf	_os& (0+255),f,b	;volatile
 25955                           
 25956                           ;api.c: 512: break;
 25957  00639C  0012               	return	
 25958  00639E                     
 25959                           ;api.c: 515: ++os.buttonCount;
 25960                           
 25961                           ; BSR set to: 0
 25962  00639E  0100               	movlb	0	; () banked
 25963  0063A0  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
 25964                           
 25965                           ; BSR set to: 0
 25966                           ;api.c: 517: }
 25967                           
 25968                           ;api.c: 516: break;
 25969  0063A2  0012               	return	
 25970  0063A4                     l2774:
 25971                           
 25972                           ; BSR set to: 0
 25973  0063A4  502C               	movf	__parse_command_short@cmd,w,c
 25974                           
 25975                           ; Switch size 1, requested type "space"
 25976                           ; Number of cases is 7, Range of values is 32 to 62
 25977                           ; switch strategies available:
 25978                           ; Name         Instructions Cycles
 25979                           ; simple_byte           22    12 (average)
 25980                           ;	Chosen strategy is simple_byte
 25981  0063A6  0A20               	xorlw	32	; case 32
 25982  0063A8  B4D8               	btfsc	status,2,c
 25983  0063AA  D7BB               	goto	l2775
 25984  0063AC  0A01               	xorlw	1	; case 33
 25985  0063AE  B4D8               	btfsc	status,2,c
 25986  0063B0  D7C6               	goto	l2777
 25987  0063B2  0A03               	xorlw	3	; case 34
 25988  0063B4  B4D8               	btfsc	status,2,c
 25989  0063B6  D7D1               	goto	l2778
 25990  0063B8  0A01               	xorlw	1	; case 35
 25991  0063BA  B4D8               	btfsc	status,2,c
 25992  0063BC  D7DC               	goto	l2779
 25993  0063BE  0A1F               	xorlw	31	; case 60
 25994  0063C0  B4D8               	btfsc	status,2,c
 25995  0063C2  D7E7               	goto	l2780
 25996  0063C4  0A01               	xorlw	1	; case 61
 25997  0063C6  B4D8               	btfsc	status,2,c
 25998  0063C8  D7E7               	goto	l2781
 25999  0063CA  0A03               	xorlw	3	; case 62
 26000  0063CC  A4D8               	btfss	status,2,c
 26001  0063CE  0012               	return	
 26002  0063D0  D7E6               	goto	l2782
 26003  0063D2                     __end_of__parse_command_short:
 26004                           	opt stack 0
 26005                           tosu	equ	0xFFF
 26006                           tosh	equ	0xFFE
 26007                           tosl	equ	0xFFD
 26008                           pclath	equ	0xFFA
 26009                           tblptru	equ	0xFF8
 26010                           tblptrh	equ	0xFF7
 26011                           tblptrl	equ	0xFF6
 26012                           tablat	equ	0xFF5
 26013                           prodh	equ	0xFF4
 26014                           prodl	equ	0xFF3
 26015                           intcon	equ	0xFF2
 26016                           intcon2	equ	0xFF1
 26017                           intcon3	equ	0xFF0
 26018                           indf0	equ	0xFEF
 26019                           postinc0	equ	0xFEE
 26020                           fsr0h	equ	0xFEA
 26021                           fsr0l	equ	0xFE9
 26022                           wreg	equ	0xFE8
 26023                           indf1	equ	0xFE7
 26024                           postdec1	equ	0xFE5
 26025                           plusw1	equ	0xFE3
 26026                           fsr1h	equ	0xFE2
 26027                           fsr1l	equ	0xFE1
 26028                           indf2	equ	0xFDF
 26029                           postinc2	equ	0xFDE
 26030                           postdec2	equ	0xFDD
 26031                           plusw2	equ	0xFDB
 26032                           fsr2h	equ	0xFDA
 26033                           fsr2l	equ	0xFD9
 26034                           status	equ	0xFD8
 26035                           
 26036 ;; *************** function _system_delay_ms *****************
 26037 ;; Defined at:
 26038 ;;		line 63 in file "os.c"
 26039 ;; Parameters:    Size  Location     Type
 26040 ;;  ms              1    wreg     unsigned char 
 26041 ;; Auto vars:     Size  Location     Type
 26042 ;;  ms              1    1[COMRAM] unsigned char 
 26043 ;;  cntr            1    2[COMRAM] unsigned char 
 26044 ;; Return value:  Size  Location     Type
 26045 ;;                  1    wreg      void 
 26046 ;; Registers used:
 26047 ;;		wreg, status,2, status,0, cstack
 26048 ;; Tracked objects:
 26049 ;;		On entry : 0/0
 26050 ;;		On exit  : 0/0
 26051 ;;		Unchanged: 0/0
 26052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26054 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26056 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26057 ;;Total ram usage:        3 bytes
 26058 ;; Hardware stack levels used:    1
 26059 ;; This function calls:
 26060 ;;		Nothing
 26061 ;; This function is called by:
 26062 ;;		_system_minimal_init
 26063 ;;		__ui_encoder
 26064 ;;		__parse_command_short
 26065 ;; This function uses a non-reentrant model
 26066 ;;
 26067                           
 26068                           	psect	text124
 26069  008B86                     __ptext124:
 26070                           	opt stack 0
 26071  008B86                     _system_delay_ms:
 26072                           	opt stack 28
 26073                           
 26074                           ;incstack = 0
 26075                           ;system_delay_ms@ms stored from wreg
 26076  008B86  6E02               	movwf	system_delay_ms@ms,c
 26077                           
 26078                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 26079  008B88  0E00               	movlw	0
 26080  008B8A  6E03               	movwf	system_delay_ms@cntr,c
 26081  008B8C  D009               	goto	l1090
 26082  008B8E                     
 26083                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 26084  008B8E  0E10               	movlw	16
 26085  008B90  6E01               	movwf	??_system_delay_ms& (0+255),c
 26086  008B92  0E94               	movlw	148
 26087  008B94                     u13237:
 26088  008B94  2EE8               	decfsz	wreg,f,c
 26089  008B96  D7FE               	bra	u13237
 26090  008B98  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26091  008B9A  D7FC               	bra	u13237
 26092  008B9C  D000               	nop2	
 26093  008B9E  2A03               	incf	system_delay_ms@cntr,f,c
 26094  008BA0                     l1090:
 26095  008BA0  5002               	movf	system_delay_ms@ms,w,c
 26096  008BA2  5C03               	subwf	system_delay_ms@cntr,w,c
 26097  008BA4  B0D8               	btfsc	status,0,c
 26098  008BA6  0012               	return	
 26099  008BA8  D7F2               	goto	l1091
 26100  008BAA                     __end_of_system_delay_ms:
 26101                           	opt stack 0
 26102                           tosu	equ	0xFFF
 26103                           tosh	equ	0xFFE
 26104                           tosl	equ	0xFFD
 26105                           pclath	equ	0xFFA
 26106                           tblptru	equ	0xFF8
 26107                           tblptrh	equ	0xFF7
 26108                           tblptrl	equ	0xFF6
 26109                           tablat	equ	0xFF5
 26110                           prodh	equ	0xFF4
 26111                           prodl	equ	0xFF3
 26112                           intcon	equ	0xFF2
 26113                           intcon2	equ	0xFF1
 26114                           intcon3	equ	0xFF0
 26115                           indf0	equ	0xFEF
 26116                           postinc0	equ	0xFEE
 26117                           fsr0h	equ	0xFEA
 26118                           fsr0l	equ	0xFE9
 26119                           wreg	equ	0xFE8
 26120                           indf1	equ	0xFE7
 26121                           postdec1	equ	0xFE5
 26122                           plusw1	equ	0xFE3
 26123                           fsr1h	equ	0xFE2
 26124                           fsr1l	equ	0xFE1
 26125                           indf2	equ	0xFDF
 26126                           postinc2	equ	0xFDE
 26127                           postdec2	equ	0xFDD
 26128                           plusw2	equ	0xFDB
 26129                           fsr2h	equ	0xFDA
 26130                           fsr2l	equ	0xFD9
 26131                           status	equ	0xFD8
 26132                           
 26133 ;; *************** function _reboot *****************
 26134 ;; Defined at:
 26135 ;;		line 259 in file "os.c"
 26136 ;; Parameters:    Size  Location     Type
 26137 ;;		None
 26138 ;; Auto vars:     Size  Location     Type
 26139 ;;		None
 26140 ;; Return value:  Size  Location     Type
 26141 ;;                  1    wreg      void 
 26142 ;; Registers used:
 26143 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26144 ;; Tracked objects:
 26145 ;;		On entry : 0/0
 26146 ;;		On exit  : 0/0
 26147 ;;		Unchanged: 0/0
 26148 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26149 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26150 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26151 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26152 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26153 ;;Total ram usage:        0 bytes
 26154 ;; Hardware stack levels used:    1
 26155 ;; Hardware stack levels required when called:    7
 26156 ;; This function calls:
 26157 ;;		_display_prepare
 26158 ;;		_display_update
 26159 ;;		_ui_get_status
 26160 ;; This function is called by:
 26161 ;;		__ui_encoder
 26162 ;;		__parse_command_short
 26163 ;; This function uses a non-reentrant model
 26164 ;;
 26165                           
 26166                           	psect	text125
 26167  008D62                     __ptext125:
 26168                           	opt stack 0
 26169  008D62                     _reboot:
 26170                           	opt stack 21
 26171                           
 26172                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26173                           
 26174                           ;incstack = 0
 26175  008D62  0E80               	movlw	128
 26176  008D64  0100               	movlb	0	; () banked
 26177  008D66  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 26178                           
 26179                           ; BSR set to: 0
 26180                           ;os.c: 263: display_prepare(os.display_mode);
 26181  008D68  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
 26182  008D6A  ECAC  F02D         	call	_display_prepare
 26183                           
 26184                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26185  008D6E  ECCD  F047         	call	_ui_get_status	;wreg free
 26186  008D72  0A05               	xorlw	5
 26187  008D74  B4D8               	btfsc	status,2,c
 26188                           
 26189                           ;os.c: 265: {;os.c: 266: display_update();
 26190  008D76  EC46  F03C         	call	_display_update	;wreg free
 26191  008D7A                     
 26192                           ;os.c: 267: };os.c: 270: while(1);
 26193  008D7A  D7FF               	goto	l1117
 26194  008D7C                     __end_of_reboot:
 26195                           	opt stack 0
 26196                           tosu	equ	0xFFF
 26197                           tosh	equ	0xFFE
 26198                           tosl	equ	0xFFD
 26199                           pclath	equ	0xFFA
 26200                           tblptru	equ	0xFF8
 26201                           tblptrh	equ	0xFF7
 26202                           tblptrl	equ	0xFF6
 26203                           tablat	equ	0xFF5
 26204                           prodh	equ	0xFF4
 26205                           prodl	equ	0xFF3
 26206                           intcon	equ	0xFF2
 26207                           intcon2	equ	0xFF1
 26208                           intcon3	equ	0xFF0
 26209                           indf0	equ	0xFEF
 26210                           postinc0	equ	0xFEE
 26211                           fsr0h	equ	0xFEA
 26212                           fsr0l	equ	0xFE9
 26213                           wreg	equ	0xFE8
 26214                           indf1	equ	0xFE7
 26215                           postdec1	equ	0xFE5
 26216                           plusw1	equ	0xFE3
 26217                           fsr1h	equ	0xFE2
 26218                           fsr1l	equ	0xFE1
 26219                           indf2	equ	0xFDF
 26220                           postinc2	equ	0xFDE
 26221                           postdec2	equ	0xFDD
 26222                           plusw2	equ	0xFDB
 26223                           fsr2h	equ	0xFDA
 26224                           fsr2l	equ	0xFD9
 26225                           status	equ	0xFD8
 26226                           
 26227 ;; *************** function _ui_get_status *****************
 26228 ;; Defined at:
 26229 ;;		line 95 in file "ui.c"
 26230 ;; Parameters:    Size  Location     Type
 26231 ;;		None
 26232 ;; Auto vars:     Size  Location     Type
 26233 ;;		None
 26234 ;; Return value:  Size  Location     Type
 26235 ;;                  1    wreg      enum E7928
 26236 ;; Registers used:
 26237 ;;		wreg, status,2
 26238 ;; Tracked objects:
 26239 ;;		On entry : 0/0
 26240 ;;		On exit  : 0/0
 26241 ;;		Unchanged: 0/0
 26242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26245 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26246 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26247 ;;Total ram usage:        0 bytes
 26248 ;; Hardware stack levels used:    1
 26249 ;; This function calls:
 26250 ;;		Nothing
 26251 ;; This function is called by:
 26252 ;;		_main
 26253 ;;		_reboot
 26254 ;;		__fill_buffer_get_status
 26255 ;; This function uses a non-reentrant model
 26256 ;;
 26257                           
 26258                           	psect	text126
 26259  008F9A                     __ptext126:
 26260                           	opt stack 0
 26261  008F9A                     _ui_get_status:
 26262                           	opt stack 27
 26263                           
 26264                           ;ui.c: 97: return userInterfaceStatus;
 26265                           
 26266                           ;incstack = 0
 26267  008F9A  0100               	movlb	0	; () banked
 26268  008F9C  51E6               	movf	_userInterfaceStatus& (0+255),w,b
 26269  008F9E  0012               	return	
 26270  008FA0                     __end_of_ui_get_status:
 26271                           	opt stack 0
 26272                           tosu	equ	0xFFF
 26273                           tosh	equ	0xFFE
 26274                           tosl	equ	0xFFD
 26275                           pclath	equ	0xFFA
 26276                           tblptru	equ	0xFF8
 26277                           tblptrh	equ	0xFF7
 26278                           tblptrl	equ	0xFF6
 26279                           tablat	equ	0xFF5
 26280                           prodh	equ	0xFF4
 26281                           prodl	equ	0xFF3
 26282                           intcon	equ	0xFF2
 26283                           intcon2	equ	0xFF1
 26284                           intcon3	equ	0xFF0
 26285                           indf0	equ	0xFEF
 26286                           postinc0	equ	0xFEE
 26287                           fsr0h	equ	0xFEA
 26288                           fsr0l	equ	0xFE9
 26289                           wreg	equ	0xFE8
 26290                           indf1	equ	0xFE7
 26291                           postdec1	equ	0xFE5
 26292                           plusw1	equ	0xFE3
 26293                           fsr1h	equ	0xFE2
 26294                           fsr1l	equ	0xFE1
 26295                           indf2	equ	0xFDF
 26296                           postinc2	equ	0xFDE
 26297                           postdec2	equ	0xFDD
 26298                           plusw2	equ	0xFDB
 26299                           fsr2h	equ	0xFDA
 26300                           fsr2l	equ	0xFD9
 26301                           status	equ	0xFD8
 26302                           
 26303 ;; *************** function _display_update *****************
 26304 ;; Defined at:
 26305 ;;		line 555 in file "display.c"
 26306 ;; Parameters:    Size  Location     Type
 26307 ;;		None
 26308 ;; Auto vars:     Size  Location     Type
 26309 ;;		None
 26310 ;; Return value:  Size  Location     Type
 26311 ;;                  1    wreg      void 
 26312 ;; Registers used:
 26313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26314 ;; Tracked objects:
 26315 ;;		On entry : 0/0
 26316 ;;		On exit  : 0/0
 26317 ;;		Unchanged: 0/0
 26318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26319 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26320 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26321 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26322 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26323 ;;Total ram usage:        0 bytes
 26324 ;; Hardware stack levels used:    1
 26325 ;; Hardware stack levels required when called:    4
 26326 ;; This function calls:
 26327 ;;		_i2c_display_cursor
 26328 ;;		_i2c_display_write_fixed
 26329 ;; This function is called by:
 26330 ;;		_main
 26331 ;;		_reboot
 26332 ;; This function uses a non-reentrant model
 26333 ;;
 26334                           
 26335                           	psect	text127
 26336  00788C                     __ptext127:
 26337                           	opt stack 0
 26338  00788C                     _display_update:
 26339                           	opt stack 23
 26340                           
 26341                           ;display.c: 557: i2c_display_cursor(0, 0);
 26342                           
 26343                           ; BSR set to: 0
 26344                           ;incstack = 0
 26345  00788C  0E00               	movlw	0
 26346  00788E  6E0E               	movwf	i2c_display_cursor@position,c
 26347  007890  0E00               	movlw	0
 26348  007892  ECD5  F045         	call	_i2c_display_cursor
 26349                           
 26350                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 26351  007896  0E00               	movlw	low _display_content
 26352  007898  6E06               	movwf	i2c_display_write_fixed@data,c
 26353  00789A  0E02               	movlw	high _display_content
 26354  00789C  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26355  00789E  0E14               	movlw	20
 26356  0078A0  6E08               	movwf	i2c_display_write_fixed@length,c
 26357  0078A2  EC6D  F03F         	call	_i2c_display_write_fixed	;wreg free
 26358                           
 26359                           ;display.c: 559: i2c_display_cursor(1, 0);
 26360  0078A6  0E00               	movlw	0
 26361  0078A8  6E0E               	movwf	i2c_display_cursor@position,c
 26362  0078AA  0E01               	movlw	1
 26363  0078AC  ECD5  F045         	call	_i2c_display_cursor
 26364                           
 26365                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 26366  0078B0  0E14               	movlw	low (_display_content+20)
 26367  0078B2  6E06               	movwf	i2c_display_write_fixed@data,c
 26368  0078B4  0E02               	movlw	high (_display_content+20)
 26369  0078B6  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26370  0078B8  0E14               	movlw	20
 26371  0078BA  6E08               	movwf	i2c_display_write_fixed@length,c
 26372  0078BC  EC6D  F03F         	call	_i2c_display_write_fixed	;wreg free
 26373                           
 26374                           ;display.c: 561: i2c_display_cursor(2, 0);
 26375  0078C0  0E00               	movlw	0
 26376  0078C2  6E0E               	movwf	i2c_display_cursor@position,c
 26377  0078C4  0E02               	movlw	2
 26378  0078C6  ECD5  F045         	call	_i2c_display_cursor
 26379                           
 26380                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 26381  0078CA  0E28               	movlw	low (_display_content+40)
 26382  0078CC  6E06               	movwf	i2c_display_write_fixed@data,c
 26383  0078CE  0E02               	movlw	high (_display_content+40)
 26384  0078D0  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26385  0078D2  0E14               	movlw	20
 26386  0078D4  6E08               	movwf	i2c_display_write_fixed@length,c
 26387  0078D6  EC6D  F03F         	call	_i2c_display_write_fixed	;wreg free
 26388                           
 26389                           ;display.c: 563: i2c_display_cursor(3, 0);
 26390  0078DA  0E00               	movlw	0
 26391  0078DC  6E0E               	movwf	i2c_display_cursor@position,c
 26392  0078DE  0E03               	movlw	3
 26393  0078E0  ECD5  F045         	call	_i2c_display_cursor
 26394                           
 26395                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 26396  0078E4  0E3C               	movlw	low (_display_content+60)
 26397  0078E6  6E06               	movwf	i2c_display_write_fixed@data,c
 26398  0078E8  0E02               	movlw	high (_display_content+60)
 26399  0078EA  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26400  0078EC  0E14               	movlw	20
 26401  0078EE  6E08               	movwf	i2c_display_write_fixed@length,c
 26402  0078F0  EC6D  F03F         	call	_i2c_display_write_fixed	;wreg free
 26403  0078F4  0012               	return		;funcret
 26404  0078F6                     __end_of_display_update:
 26405                           	opt stack 0
 26406                           tosu	equ	0xFFF
 26407                           tosh	equ	0xFFE
 26408                           tosl	equ	0xFFD
 26409                           pclath	equ	0xFFA
 26410                           tblptru	equ	0xFF8
 26411                           tblptrh	equ	0xFF7
 26412                           tblptrl	equ	0xFF6
 26413                           tablat	equ	0xFF5
 26414                           prodh	equ	0xFF4
 26415                           prodl	equ	0xFF3
 26416                           intcon	equ	0xFF2
 26417                           intcon2	equ	0xFF1
 26418                           intcon3	equ	0xFF0
 26419                           indf0	equ	0xFEF
 26420                           postinc0	equ	0xFEE
 26421                           fsr0h	equ	0xFEA
 26422                           fsr0l	equ	0xFE9
 26423                           wreg	equ	0xFE8
 26424                           indf1	equ	0xFE7
 26425                           postdec1	equ	0xFE5
 26426                           plusw1	equ	0xFE3
 26427                           fsr1h	equ	0xFE2
 26428                           fsr1l	equ	0xFE1
 26429                           indf2	equ	0xFDF
 26430                           postinc2	equ	0xFDE
 26431                           postdec2	equ	0xFDD
 26432                           plusw2	equ	0xFDB
 26433                           fsr2h	equ	0xFDA
 26434                           fsr2l	equ	0xFD9
 26435                           status	equ	0xFD8
 26436                           
 26437 ;; *************** function _i2c_display_write_fixed *****************
 26438 ;; Defined at:
 26439 ;;		line 270 in file "i2c.c"
 26440 ;; Parameters:    Size  Location     Type
 26441 ;;  data            2    5[COMRAM] PTR unsigned char 
 26442 ;;		 -> display_content(80), 
 26443 ;;  length          1    7[COMRAM] unsigned char 
 26444 ;; Auto vars:     Size  Location     Type
 26445 ;;  pos             1    8[COMRAM] unsigned char 
 26446 ;; Return value:  Size  Location     Type
 26447 ;;                  1    wreg      void 
 26448 ;; Registers used:
 26449 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26450 ;; Tracked objects:
 26451 ;;		On entry : 0/0
 26452 ;;		On exit  : 0/0
 26453 ;;		Unchanged: 0/0
 26454 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26455 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26456 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26457 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26458 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26459 ;;Total ram usage:        4 bytes
 26460 ;; Hardware stack levels used:    1
 26461 ;; Hardware stack levels required when called:    1
 26462 ;; This function calls:
 26463 ;;		__i2c_send
 26464 ;;		__i2c_start
 26465 ;;		__i2c_stop
 26466 ;;		__i2c_wait_idle
 26467 ;;		_i2c_set_frequency
 26468 ;; This function is called by:
 26469 ;;		_display_update
 26470 ;; This function uses a non-reentrant model
 26471 ;;
 26472                           
 26473                           	psect	text128
 26474  007EDA                     __ptext128:
 26475                           	opt stack 0
 26476  007EDA                     _i2c_display_write_fixed:
 26477                           	opt stack 25
 26478                           
 26479                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26480                           
 26481                           ;incstack = 0
 26482  007EDA  0E02               	movlw	2
 26483  007EDC  ECFB  F044         	call	_i2c_set_frequency
 26484                           
 26485                           ;i2c.c: 277: _i2c_wait_idle();
 26486  007EE0  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 26487                           
 26488                           ;i2c.c: 278: _i2c_start();
 26489  007EE4  ECB9  F047         	call	__i2c_start	;wreg free
 26490                           
 26491                           ;i2c.c: 279: _i2c_wait_idle();
 26492  007EE8  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 26493                           
 26494                           ;i2c.c: 280: _i2c_send(0b01111000);
 26495  007EEC  0E78               	movlw	120
 26496  007EEE  ECBD  F047         	call	__i2c_send
 26497                           
 26498                           ;i2c.c: 281: _i2c_wait_idle();
 26499  007EF2  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 26500                           
 26501                           ;i2c.c: 282: _i2c_send(0b01000000);
 26502  007EF6  0E40               	movlw	64
 26503  007EF8  ECBD  F047         	call	__i2c_send
 26504                           
 26505                           ;i2c.c: 283: _i2c_wait_idle();
 26506  007EFC  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 26507                           
 26508                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26509  007F00  0E00               	movlw	0
 26510  007F02  6E09               	movwf	i2c_display_write_fixed@pos,c
 26511  007F04  D00E               	goto	l1232
 26512  007F06                     
 26513                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26514  007F06  5009               	movf	i2c_display_write_fixed@pos,w,c
 26515  007F08  0D01               	mullw	1
 26516  007F0A  50F3               	movf	prodl,w,c
 26517  007F0C  2406               	addwf	i2c_display_write_fixed@data,w,c
 26518  007F0E  6ED9               	movwf	fsr2l,c
 26519  007F10  50F4               	movf	prodh,w,c
 26520  007F12  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26521  007F14  6EDA               	movwf	fsr2h,c
 26522  007F16  50DF               	movf	indf2,w,c
 26523  007F18  ECBD  F047         	call	__i2c_send
 26524                           
 26525                           ;i2c.c: 289: _i2c_wait_idle();
 26526  007F1C  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 26527  007F20  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26528  007F22                     l1232:
 26529  007F22  5008               	movf	i2c_display_write_fixed@length,w,c
 26530  007F24  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26531  007F26  A0D8               	btfss	status,0,c
 26532  007F28  D7EE               	goto	l1233
 26533                           
 26534                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26535  007F2A  ECB5  F047         	call	__i2c_stop	;wreg free
 26536  007F2E  0012               	return		;funcret
 26537  007F30                     __end_of_i2c_display_write_fixed:
 26538                           	opt stack 0
 26539                           tosu	equ	0xFFF
 26540                           tosh	equ	0xFFE
 26541                           tosl	equ	0xFFD
 26542                           pclath	equ	0xFFA
 26543                           tblptru	equ	0xFF8
 26544                           tblptrh	equ	0xFF7
 26545                           tblptrl	equ	0xFF6
 26546                           tablat	equ	0xFF5
 26547                           prodh	equ	0xFF4
 26548                           prodl	equ	0xFF3
 26549                           intcon	equ	0xFF2
 26550                           intcon2	equ	0xFF1
 26551                           intcon3	equ	0xFF0
 26552                           indf0	equ	0xFEF
 26553                           postinc0	equ	0xFEE
 26554                           fsr0h	equ	0xFEA
 26555                           fsr0l	equ	0xFE9
 26556                           wreg	equ	0xFE8
 26557                           indf1	equ	0xFE7
 26558                           postdec1	equ	0xFE5
 26559                           plusw1	equ	0xFE3
 26560                           fsr1h	equ	0xFE2
 26561                           fsr1l	equ	0xFE1
 26562                           indf2	equ	0xFDF
 26563                           postinc2	equ	0xFDE
 26564                           postdec2	equ	0xFDD
 26565                           plusw2	equ	0xFDB
 26566                           fsr2h	equ	0xFDA
 26567                           fsr2l	equ	0xFD9
 26568                           status	equ	0xFD8
 26569                           
 26570 ;; *************** function _i2c_display_cursor *****************
 26571 ;; Defined at:
 26572 ;;		line 230 in file "i2c.c"
 26573 ;; Parameters:    Size  Location     Type
 26574 ;;  line            1    wreg     unsigned char 
 26575 ;;  position        1   13[COMRAM] unsigned char 
 26576 ;; Auto vars:     Size  Location     Type
 26577 ;;  line            1   14[COMRAM] unsigned char 
 26578 ;;  address         1   15[COMRAM] unsigned char 
 26579 ;; Return value:  Size  Location     Type
 26580 ;;                  1    wreg      void 
 26581 ;; Registers used:
 26582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26583 ;; Tracked objects:
 26584 ;;		On entry : 0/0
 26585 ;;		On exit  : 0/0
 26586 ;;		Unchanged: 0/0
 26587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26588 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26591 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26592 ;;Total ram usage:        3 bytes
 26593 ;; Hardware stack levels used:    1
 26594 ;; Hardware stack levels required when called:    3
 26595 ;; This function calls:
 26596 ;;		__ic2_display_set_address
 26597 ;;		_i2c_set_frequency
 26598 ;; This function is called by:
 26599 ;;		_display_update
 26600 ;; This function uses a non-reentrant model
 26601 ;;
 26602                           
 26603                           	psect	text129
 26604  008BAA                     __ptext129:
 26605                           	opt stack 0
 26606  008BAA                     _i2c_display_cursor:
 26607                           	opt stack 23
 26608                           
 26609                           ;incstack = 0
 26610                           ;i2c_display_cursor@line stored from wreg
 26611  008BAA  6E0F               	movwf	i2c_display_cursor@line,c
 26612                           
 26613                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26614  008BAC  0E03               	movlw	3
 26615  008BAE  160F               	andwf	i2c_display_cursor@line,f,c
 26616                           
 26617                           ;i2c.c: 236: address = line<<5;
 26618  008BB0  380F               	swapf	i2c_display_cursor@line,w,c
 26619  008BB2  46E8               	rlncf	wreg,f,c
 26620  008BB4  0BE0               	andlw	224
 26621  008BB6  6E10               	movwf	i2c_display_cursor@address,c
 26622                           
 26623                           ;i2c.c: 237: position &= 0b11111;
 26624  008BB8  0E1F               	movlw	31
 26625  008BBA  160E               	andwf	i2c_display_cursor@position,f,c
 26626                           
 26627                           ;i2c.c: 238: address |= position;
 26628  008BBC  500E               	movf	i2c_display_cursor@position,w,c
 26629  008BBE  1210               	iorwf	i2c_display_cursor@address,f,c
 26630                           
 26631                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26632  008BC0  0E02               	movlw	2
 26633  008BC2  ECFB  F044         	call	_i2c_set_frequency
 26634                           
 26635                           ;i2c.c: 244: _ic2_display_set_address(address);
 26636  008BC6  5010               	movf	i2c_display_cursor@address,w,c
 26637  008BC8  EC77  F045         	call	__ic2_display_set_address
 26638  008BCC  0012               	return		;funcret
 26639  008BCE                     __end_of_i2c_display_cursor:
 26640                           	opt stack 0
 26641                           tosu	equ	0xFFF
 26642                           tosh	equ	0xFFE
 26643                           tosl	equ	0xFFD
 26644                           pclath	equ	0xFFA
 26645                           tblptru	equ	0xFF8
 26646                           tblptrh	equ	0xFF7
 26647                           tblptrl	equ	0xFF6
 26648                           tablat	equ	0xFF5
 26649                           prodh	equ	0xFF4
 26650                           prodl	equ	0xFF3
 26651                           intcon	equ	0xFF2
 26652                           intcon2	equ	0xFF1
 26653                           intcon3	equ	0xFF0
 26654                           indf0	equ	0xFEF
 26655                           postinc0	equ	0xFEE
 26656                           fsr0h	equ	0xFEA
 26657                           fsr0l	equ	0xFE9
 26658                           wreg	equ	0xFE8
 26659                           indf1	equ	0xFE7
 26660                           postdec1	equ	0xFE5
 26661                           plusw1	equ	0xFE3
 26662                           fsr1h	equ	0xFE2
 26663                           fsr1l	equ	0xFE1
 26664                           indf2	equ	0xFDF
 26665                           postinc2	equ	0xFDE
 26666                           postdec2	equ	0xFDD
 26667                           plusw2	equ	0xFDB
 26668                           fsr2h	equ	0xFDA
 26669                           fsr2l	equ	0xFD9
 26670                           status	equ	0xFD8
 26671                           
 26672 ;; *************** function __ic2_display_set_address *****************
 26673 ;; Defined at:
 26674 ;;		line 194 in file "i2c.c"
 26675 ;; Parameters:    Size  Location     Type
 26676 ;;  address         1    wreg     unsigned char 
 26677 ;; Auto vars:     Size  Location     Type
 26678 ;;  address         1   10[COMRAM] unsigned char 
 26679 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26680 ;; Return value:  Size  Location     Type
 26681 ;;                  1    wreg      void 
 26682 ;; Registers used:
 26683 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26684 ;; Tracked objects:
 26685 ;;		On entry : 0/0
 26686 ;;		On exit  : 0/0
 26687 ;;		Unchanged: 0/0
 26688 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26689 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26690 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26691 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26692 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26693 ;;Total ram usage:        3 bytes
 26694 ;; Hardware stack levels used:    1
 26695 ;; Hardware stack levels required when called:    2
 26696 ;; This function calls:
 26697 ;;		__i2c_write
 26698 ;;		_i2c_set_frequency
 26699 ;; This function is called by:
 26700 ;;		_i2c_display_cursor
 26701 ;; This function uses a non-reentrant model
 26702 ;;
 26703                           
 26704                           	psect	text130
 26705  008AEE                     __ptext130:
 26706                           	opt stack 0
 26707  008AEE                     __ic2_display_set_address:
 26708                           	opt stack 23
 26709                           
 26710                           ;incstack = 0
 26711                           ;__ic2_display_set_address@address stored from wreg
 26712  008AEE  6E0B               	movwf	__ic2_display_set_address@address,c
 26713                           
 26714                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26715  008AF0  0E00               	movlw	0
 26716  008AF2  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26717                           
 26718                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26719  008AF4  500B               	movf	__ic2_display_set_address@address,w,c
 26720  008AF6  0980               	iorlw	128
 26721  008AF8  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26722                           
 26723                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26724  008AFA  0E02               	movlw	2
 26725  008AFC  ECFB  F044         	call	_i2c_set_frequency
 26726                           
 26727                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26728  008B00  0E0C               	movlw	low __ic2_display_set_address@data_array
 26729  008B02  6E06               	movwf	__i2c_write@data,c
 26730  008B04  0E00               	movlw	high __ic2_display_set_address@data_array
 26731  008B06  6E07               	movwf	__i2c_write@data+1,c
 26732  008B08  0E02               	movlw	2
 26733  008B0A  6E08               	movwf	__i2c_write@length,c
 26734  008B0C  0E78               	movlw	120
 26735  008B0E  EC85  F041         	call	__i2c_write
 26736  008B12  0012               	return		;funcret
 26737  008B14                     __end_of__ic2_display_set_address:
 26738                           	opt stack 0
 26739                           tosu	equ	0xFFF
 26740                           tosh	equ	0xFFE
 26741                           tosl	equ	0xFFD
 26742                           pclath	equ	0xFFA
 26743                           tblptru	equ	0xFF8
 26744                           tblptrh	equ	0xFF7
 26745                           tblptrl	equ	0xFF6
 26746                           tablat	equ	0xFF5
 26747                           prodh	equ	0xFF4
 26748                           prodl	equ	0xFF3
 26749                           intcon	equ	0xFF2
 26750                           intcon2	equ	0xFF1
 26751                           intcon3	equ	0xFF0
 26752                           indf0	equ	0xFEF
 26753                           postinc0	equ	0xFEE
 26754                           fsr0h	equ	0xFEA
 26755                           fsr0l	equ	0xFE9
 26756                           wreg	equ	0xFE8
 26757                           indf1	equ	0xFE7
 26758                           postdec1	equ	0xFE5
 26759                           plusw1	equ	0xFE3
 26760                           fsr1h	equ	0xFE2
 26761                           fsr1l	equ	0xFE1
 26762                           indf2	equ	0xFDF
 26763                           postinc2	equ	0xFDE
 26764                           postdec2	equ	0xFDD
 26765                           plusw2	equ	0xFDB
 26766                           fsr2h	equ	0xFDA
 26767                           fsr2l	equ	0xFD9
 26768                           status	equ	0xFD8
 26769                           
 26770 ;; *************** function _display_prepare *****************
 26771 ;; Defined at:
 26772 ;;		line 286 in file "display.c"
 26773 ;; Parameters:    Size  Location     Type
 26774 ;;  mode            1    wreg     unsigned char 
 26775 ;; Auto vars:     Size  Location     Type
 26776 ;;  mode            1   42[COMRAM] unsigned char 
 26777 ;; Return value:  Size  Location     Type
 26778 ;;                  1    wreg      void 
 26779 ;; Registers used:
 26780 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26781 ;; Tracked objects:
 26782 ;;		On entry : 0/0
 26783 ;;		On exit  : 0/0
 26784 ;;		Unchanged: 0/0
 26785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26786 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26787 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26788 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26789 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26790 ;;Total ram usage:        3 bytes
 26791 ;; Hardware stack levels used:    1
 26792 ;; Hardware stack levels required when called:    6
 26793 ;; This function calls:
 26794 ;;		__display_checked
 26795 ;;		__display_clear
 26796 ;;		__display_done
 26797 ;;		__display_failed
 26798 ;;		__display_found
 26799 ;;		__display_programming
 26800 ;;		__display_rebooting
 26801 ;;		__display_search
 26802 ;;		__display_start
 26803 ;;		__display_verify
 26804 ;; This function is called by:
 26805 ;;		_main
 26806 ;;		_reboot
 26807 ;; This function uses a non-reentrant model
 26808 ;;
 26809                           
 26810                           	psect	text131
 26811  005B58                     __ptext131:
 26812                           	opt stack 0
 26813  005B58                     _display_prepare:
 26814                           	opt stack 21
 26815                           
 26816                           ;incstack = 0
 26817                           ;display_prepare@mode stored from wreg
 26818  005B58  6E2B               	movwf	display_prepare@mode,c
 26819                           
 26820                           ;display.c: 288: _display_clear();
 26821  005B5A  EC61  F041         	call	__display_clear	;wreg free
 26822                           
 26823                           ;display.c: 290: switch(mode&0xF0)
 26824  005B5E  D01B               	goto	l1542
 26825  005B60                     
 26826                           ;display.c: 293: _display_start();
 26827  005B60  EC80  F015         	call	__display_start	;wreg free
 26828                           
 26829                           ;display.c: 294: break;
 26830  005B64  D047               	goto	l1553
 26831  005B66                     
 26832                           ;display.c: 297: _display_search();
 26833  005B66  ECA7  F01E         	call	__display_search	;wreg free
 26834                           
 26835                           ;display.c: 298: break;
 26836  005B6A  D044               	goto	l1553
 26837  005B6C                     
 26838                           ;display.c: 301: _display_found();
 26839  005B6C  EC6F  F017         	call	__display_found	;wreg free
 26840                           
 26841                           ;display.c: 302: break;
 26842  005B70  D041               	goto	l1553
 26843  005B72                     
 26844                           ;display.c: 305: _display_verify();
 26845  005B72  EC34  F021         	call	__display_verify	;wreg free
 26846                           
 26847                           ;display.c: 306: break;
 26848  005B76  D03E               	goto	l1553
 26849  005B78                     
 26850                           ;display.c: 309: _display_checked();
 26851  005B78  ECC1  F01B         	call	__display_checked	;wreg free
 26852                           
 26853                           ;display.c: 310: break;
 26854  005B7C  D03B               	goto	l1553
 26855  005B7E                     
 26856                           ;display.c: 313: _display_failed();
 26857  005B7E  EC6E  F009         	call	__display_failed	;wreg free
 26858                           
 26859                           ;display.c: 314: break;
 26860  005B82  D038               	goto	l1553
 26861  005B84                     
 26862                           ;display.c: 317: _display_programming();
 26863  005B84  EC4B  F019         	call	__display_programming	;wreg free
 26864                           
 26865                           ;display.c: 318: break;
 26866  005B88  D035               	goto	l1553
 26867  005B8A                     
 26868                           ;display.c: 321: _display_done();
 26869  005B8A  EC7F  F01C         	call	__display_done	;wreg free
 26870                           
 26871                           ;display.c: 322: break;
 26872  005B8E  D032               	goto	l1553
 26873  005B90                     
 26874                           ;display.c: 325: _display_rebooting();
 26875  005B90  EC98  F03F         	call	__display_rebooting	;wreg free
 26876                           
 26877                           ;display.c: 327: }
 26878                           
 26879                           ;display.c: 326: break;
 26880  005B94  D02F               	goto	l1553
 26881  005B96                     l1542:
 26882  005B96  502B               	movf	display_prepare@mode,w,c
 26883  005B98  0BF0               	andlw	240
 26884  005B9A  6E29               	movwf	??_display_prepare& (0+255),c
 26885  005B9C  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26886                           
 26887                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26888                           ; Switch size 1, requested type "space"
 26889                           ; Number of cases is 1, Range of values is 0 to 0
 26890                           ; switch strategies available:
 26891                           ; Name         Instructions Cycles
 26892                           ; simple_byte            4     3 (average)
 26893                           ;	Chosen strategy is simple_byte
 26894  005B9E  502A               	movf	??_display_prepare+1,w,c
 26895  005BA0  0A00               	xorlw	0	; case 0
 26896  005BA2  A4D8               	btfss	status,2,c
 26897  005BA4  D027               	goto	l1553
 26898                           
 26899                           ; Switch size 1, requested type "space"
 26900                           ; Number of cases is 9, Range of values is 0 to 128
 26901                           ; switch strategies available:
 26902                           ; Name         Instructions Cycles
 26903                           ; simple_byte           28    15 (average)
 26904                           ;	Chosen strategy is simple_byte
 26905  005BA6  5029               	movf	??_display_prepare,w,c
 26906  005BA8  0A00               	xorlw	0	; case 0
 26907  005BAA  B4D8               	btfsc	status,2,c
 26908  005BAC  D7D9               	goto	l1543
 26909  005BAE  0A10               	xorlw	16	; case 16
 26910  005BB0  B4D8               	btfsc	status,2,c
 26911  005BB2  D7D9               	goto	l1545
 26912  005BB4  0A30               	xorlw	48	; case 32
 26913  005BB6  B4D8               	btfsc	status,2,c
 26914  005BB8  D7D9               	goto	l1546
 26915  005BBA  0A10               	xorlw	16	; case 48
 26916  005BBC  B4D8               	btfsc	status,2,c
 26917  005BBE  D7D9               	goto	l1547
 26918  005BC0  0A70               	xorlw	112	; case 64
 26919  005BC2  B4D8               	btfsc	status,2,c
 26920  005BC4  D7D9               	goto	l1548
 26921  005BC6  0A10               	xorlw	16	; case 80
 26922  005BC8  B4D8               	btfsc	status,2,c
 26923  005BCA  D7D9               	goto	l1549
 26924  005BCC  0A30               	xorlw	48	; case 96
 26925  005BCE  B4D8               	btfsc	status,2,c
 26926  005BD0  D7D9               	goto	l1550
 26927  005BD2  0A10               	xorlw	16	; case 112
 26928  005BD4  B4D8               	btfsc	status,2,c
 26929  005BD6  D7D9               	goto	l1551
 26930  005BD8  0AF0               	xorlw	240	; case 128
 26931  005BDA  B4D8               	btfsc	status,2,c
 26932  005BDC  D7D9               	goto	l1552
 26933                           
 26934                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 26935  005BDE  D00A               	goto	l1553
 26936  005BE0                     
 26937                           ;display.c: 333: display_content[0][17] = '.';
 26938  005BE0  0E2E               	movlw	46
 26939  005BE2  0102               	movlb	2	; () banked
 26940  005BE4  6F11               	movwf	(_display_content+17)& (0+255),b
 26941  005BE6                     l1555:
 26942                           
 26943                           ;display.c: 336: display_content[0][16] = '.';
 26944  005BE6  0E2E               	movlw	46
 26945  005BE8  0102               	movlb	2	; () banked
 26946  005BEA  6F10               	movwf	(_display_content+16)& (0+255),b
 26947  005BEC                     l1556:
 26948                           
 26949                           ;display.c: 339: display_content[0][15] = '.';
 26950  005BEC  0E2E               	movlw	46
 26951  005BEE  0102               	movlb	2	; () banked
 26952  005BF0  6F0F               	movwf	(_display_content+15)& (0+255),b
 26953                           
 26954                           ;display.c: 341: }
 26955  005BF2  D015               	goto	l1557
 26956  005BF4                     l1553:
 26957                           
 26958                           ; BSR set to: 2
 26959  005BF4  0100               	movlb	0	; () banked
 26960  005BF6  39C7               	swapf	(_os+2)& (0+255),w,b	;volatile
 26961  005BF8  42E8               	rrncf	wreg,f,c
 26962  005BFA  0B07               	andlw	7
 26963  005BFC  0B03               	andlw	3
 26964  005BFE  6E29               	movwf	??_display_prepare& (0+255),c
 26965  005C00  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 26966                           
 26967                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 26968                           ; Switch size 1, requested type "space"
 26969                           ; Number of cases is 1, Range of values is 0 to 0
 26970                           ; switch strategies available:
 26971                           ; Name         Instructions Cycles
 26972                           ; simple_byte            4     3 (average)
 26973                           ;	Chosen strategy is simple_byte
 26974  005C02  502A               	movf	??_display_prepare+1,w,c
 26975  005C04  0A00               	xorlw	0	; case 0
 26976  005C06  A4D8               	btfss	status,2,c
 26977  005C08  D00A               	goto	l1557
 26978                           
 26979                           ; BSR set to: 0
 26980                           ; Switch size 1, requested type "space"
 26981                           ; Number of cases is 3, Range of values is 1 to 3
 26982                           ; switch strategies available:
 26983                           ; Name         Instructions Cycles
 26984                           ; simple_byte           10     6 (average)
 26985                           ;	Chosen strategy is simple_byte
 26986  005C0A  5029               	movf	??_display_prepare,w,c
 26987  005C0C  0A01               	xorlw	1	; case 1
 26988  005C0E  B4D8               	btfsc	status,2,c
 26989  005C10  D7ED               	goto	l1556
 26990  005C12  0A03               	xorlw	3	; case 2
 26991  005C14  B4D8               	btfsc	status,2,c
 26992  005C16  D7E7               	goto	l1555
 26993  005C18  0A01               	xorlw	1	; case 3
 26994  005C1A  B4D8               	btfsc	status,2,c
 26995  005C1C  D7E1               	goto	l1554
 26996  005C1E                     l1557:
 26997                           
 26998                           ;display.c: 345: if(INTCONbits.GIE)
 26999  005C1E  AEF2               	btfss	intcon,7,c	;volatile
 27000  005C20  0012               	return	
 27001                           
 27002                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 27003  005C22  0E49               	movlw	73
 27004  005C24  0102               	movlb	2	; () banked
 27005  005C26  6F12               	movwf	(_display_content+18)& (0+255),b
 27006  005C28  0012               	return	
 27007  005C2A                     __end_of_display_prepare:
 27008                           	opt stack 0
 27009                           tosu	equ	0xFFF
 27010                           tosh	equ	0xFFE
 27011                           tosl	equ	0xFFD
 27012                           pclath	equ	0xFFA
 27013                           tblptru	equ	0xFF8
 27014                           tblptrh	equ	0xFF7
 27015                           tblptrl	equ	0xFF6
 27016                           tablat	equ	0xFF5
 27017                           prodh	equ	0xFF4
 27018                           prodl	equ	0xFF3
 27019                           intcon	equ	0xFF2
 27020                           intcon2	equ	0xFF1
 27021                           intcon3	equ	0xFF0
 27022                           indf0	equ	0xFEF
 27023                           postinc0	equ	0xFEE
 27024                           fsr0h	equ	0xFEA
 27025                           fsr0l	equ	0xFE9
 27026                           wreg	equ	0xFE8
 27027                           indf1	equ	0xFE7
 27028                           postdec1	equ	0xFE5
 27029                           plusw1	equ	0xFE3
 27030                           fsr1h	equ	0xFE2
 27031                           fsr1l	equ	0xFE1
 27032                           indf2	equ	0xFDF
 27033                           postinc2	equ	0xFDE
 27034                           postdec2	equ	0xFDD
 27035                           plusw2	equ	0xFDB
 27036                           fsr2h	equ	0xFDA
 27037                           fsr2l	equ	0xFD9
 27038                           status	equ	0xFD8
 27039                           
 27040 ;; *************** function __display_verify *****************
 27041 ;; Defined at:
 27042 ;;		line 417 in file "display.c"
 27043 ;; Parameters:    Size  Location     Type
 27044 ;;		None
 27045 ;; Auto vars:     Size  Location     Type
 27046 ;;  cntr            1   32[COMRAM] unsigned char 
 27047 ;;  start           1    0        unsigned char 
 27048 ;; Return value:  Size  Location     Type
 27049 ;;                  1    wreg      void 
 27050 ;; Registers used:
 27051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27052 ;; Tracked objects:
 27053 ;;		On entry : 0/0
 27054 ;;		On exit  : 0/0
 27055 ;;		Unchanged: 0/0
 27056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27057 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27058 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27059 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27060 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27061 ;;Total ram usage:        3 bytes
 27062 ;; Hardware stack levels used:    1
 27063 ;; Hardware stack levels required when called:    4
 27064 ;; This function calls:
 27065 ;;		__display_itoa_u16
 27066 ;;		_bootloader_get_entries
 27067 ;; This function is called by:
 27068 ;;		_display_prepare
 27069 ;; This function uses a non-reentrant model
 27070 ;;
 27071                           
 27072                           	psect	text132
 27073  004268                     __ptext132:
 27074                           	opt stack 0
 27075  004268                     __display_verify:
 27076                           	opt stack 22
 27077                           
 27078                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 27079                           
 27080                           ;incstack = 0
 27081  004268  0E00               	movlw	0
 27082  00426A  6E21               	movwf	__display_verify@cntr,c
 27083                           
 27084                           ;display.c: 422: while(verify_line1[cntr])
 27085  00426C  D017               	goto	l1610
 27086  00426E                     
 27087                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 27088  00426E  5021               	movf	__display_verify@cntr,w,c
 27089  004270  0D01               	mullw	1
 27090  004272  0EC4               	movlw	low _verify_line1
 27091  004274  24F3               	addwf	prodl,w,c
 27092  004276  6EF6               	movwf	tblptrl,c
 27093  004278  0E9D               	movlw	high _verify_line1
 27094  00427A  20F4               	addwfc	prodh,w,c
 27095  00427C  6EF7               	movwf	tblptrh,c
 27096  00427E                     	if	1	;There are 3 active tblptr bytes
 27097  00427E  6AF8               	clrf	tblptru,c
 27098  004280  0E00               	movlw	low (__mediumconst shr (0+16))
 27099  004282  22F8               	addwfc	tblptru,f,c
 27100  004284                     	endif
 27101  004284  5021               	movf	__display_verify@cntr,w,c
 27102  004286  0D01               	mullw	1
 27103  004288  0E00               	movlw	low _display_content
 27104  00428A  24F3               	addwf	prodl,w,c
 27105  00428C  6ED9               	movwf	fsr2l,c
 27106  00428E  0E02               	movlw	high _display_content
 27107  004290  20F4               	addwfc	prodh,w,c
 27108  004292  6EDA               	movwf	fsr2h,c
 27109  004294  0008               	tblrd		*
 27110  004296  CFF5 FFDF          	movff	tablat,indf2
 27111  00429A  2A21               	incf	__display_verify@cntr,f,c
 27112  00429C                     l1610:
 27113  00429C  5021               	movf	__display_verify@cntr,w,c
 27114  00429E  0D01               	mullw	1
 27115  0042A0  0EC4               	movlw	low _verify_line1
 27116  0042A2  24F3               	addwf	prodl,w,c
 27117  0042A4  6EF6               	movwf	tblptrl,c
 27118  0042A6  0E9D               	movlw	high _verify_line1
 27119  0042A8  20F4               	addwfc	prodh,w,c
 27120  0042AA  6EF7               	movwf	tblptrh,c
 27121  0042AC                     	if	1	;There are 3 active tblptr bytes
 27122  0042AC  6AF8               	clrf	tblptru,c
 27123  0042AE  0E00               	movlw	low (__mediumconst shr (0+16))
 27124  0042B0  22F8               	addwfc	tblptru,f,c
 27125  0042B2                     	endif
 27126  0042B2  0008               	tblrd		*
 27127  0042B4  50F5               	movf	tablat,w,c
 27128  0042B6  0900               	iorlw	0
 27129  0042B8  A4D8               	btfss	status,2,c
 27130  0042BA  D7D9               	goto	l1611
 27131                           
 27132                           ;display.c: 424: cntr = 0;
 27133  0042BC  0E00               	movlw	0
 27134  0042BE  6E21               	movwf	__display_verify@cntr,c
 27135                           
 27136                           ;display.c: 425: while(verify_line2[cntr])
 27137  0042C0  D017               	goto	l1613
 27138  0042C2                     
 27139                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 27140  0042C2  5021               	movf	__display_verify@cntr,w,c
 27141  0042C4  0D01               	mullw	1
 27142  0042C6  0E4C               	movlw	low _verify_line2
 27143  0042C8  24F3               	addwf	prodl,w,c
 27144  0042CA  6EF6               	movwf	tblptrl,c
 27145  0042CC  0E9E               	movlw	high _verify_line2
 27146  0042CE  20F4               	addwfc	prodh,w,c
 27147  0042D0  6EF7               	movwf	tblptrh,c
 27148  0042D2                     	if	1	;There are 3 active tblptr bytes
 27149  0042D2  6AF8               	clrf	tblptru,c
 27150  0042D4  0E00               	movlw	low (__mediumconst shr (0+16))
 27151  0042D6  22F8               	addwfc	tblptru,f,c
 27152  0042D8                     	endif
 27153  0042D8  5021               	movf	__display_verify@cntr,w,c
 27154  0042DA  0D01               	mullw	1
 27155  0042DC  0E14               	movlw	low (_display_content+20)
 27156  0042DE  24F3               	addwf	prodl,w,c
 27157  0042E0  6ED9               	movwf	fsr2l,c
 27158  0042E2  0E02               	movlw	high (_display_content+20)
 27159  0042E4  20F4               	addwfc	prodh,w,c
 27160  0042E6  6EDA               	movwf	fsr2h,c
 27161  0042E8  0008               	tblrd		*
 27162  0042EA  CFF5 FFDF          	movff	tablat,indf2
 27163  0042EE  2A21               	incf	__display_verify@cntr,f,c
 27164  0042F0                     l1613:
 27165  0042F0  5021               	movf	__display_verify@cntr,w,c
 27166  0042F2  0D01               	mullw	1
 27167  0042F4  0E4C               	movlw	low _verify_line2
 27168  0042F6  24F3               	addwf	prodl,w,c
 27169  0042F8  6EF6               	movwf	tblptrl,c
 27170  0042FA  0E9E               	movlw	high _verify_line2
 27171  0042FC  20F4               	addwfc	prodh,w,c
 27172  0042FE  6EF7               	movwf	tblptrh,c
 27173  004300                     	if	1	;There are 3 active tblptr bytes
 27174  004300  6AF8               	clrf	tblptru,c
 27175  004302  0E00               	movlw	low (__mediumconst shr (0+16))
 27176  004304  22F8               	addwfc	tblptru,f,c
 27177  004306                     	endif
 27178  004306  0008               	tblrd		*
 27179  004308  50F5               	movf	tablat,w,c
 27180  00430A  0900               	iorlw	0
 27181  00430C  A4D8               	btfss	status,2,c
 27182  00430E  D7D9               	goto	l1614
 27183                           
 27184                           ;display.c: 427: cntr = 0;
 27185  004310  0E00               	movlw	0
 27186  004312  6E21               	movwf	__display_verify@cntr,c
 27187                           
 27188                           ;display.c: 428: while(verify_line3[cntr])
 27189  004314  D017               	goto	l1616
 27190  004316                     
 27191                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 27192  004316  5021               	movf	__display_verify@cntr,w,c
 27193  004318  0D01               	mullw	1
 27194  00431A  0E8A               	movlw	low _verify_line3
 27195  00431C  24F3               	addwf	prodl,w,c
 27196  00431E  6EF6               	movwf	tblptrl,c
 27197  004320  0E9E               	movlw	high _verify_line3
 27198  004322  20F4               	addwfc	prodh,w,c
 27199  004324  6EF7               	movwf	tblptrh,c
 27200  004326                     	if	1	;There are 3 active tblptr bytes
 27201  004326  6AF8               	clrf	tblptru,c
 27202  004328  0E00               	movlw	low (__mediumconst shr (0+16))
 27203  00432A  22F8               	addwfc	tblptru,f,c
 27204  00432C                     	endif
 27205  00432C  5021               	movf	__display_verify@cntr,w,c
 27206  00432E  0D01               	mullw	1
 27207  004330  0E28               	movlw	low (_display_content+40)
 27208  004332  24F3               	addwf	prodl,w,c
 27209  004334  6ED9               	movwf	fsr2l,c
 27210  004336  0E02               	movlw	high (_display_content+40)
 27211  004338  20F4               	addwfc	prodh,w,c
 27212  00433A  6EDA               	movwf	fsr2h,c
 27213  00433C  0008               	tblrd		*
 27214  00433E  CFF5 FFDF          	movff	tablat,indf2
 27215  004342  2A21               	incf	__display_verify@cntr,f,c
 27216  004344                     l1616:
 27217  004344  5021               	movf	__display_verify@cntr,w,c
 27218  004346  0D01               	mullw	1
 27219  004348  0E8A               	movlw	low _verify_line3
 27220  00434A  24F3               	addwf	prodl,w,c
 27221  00434C  6EF6               	movwf	tblptrl,c
 27222  00434E  0E9E               	movlw	high _verify_line3
 27223  004350  20F4               	addwfc	prodh,w,c
 27224  004352  6EF7               	movwf	tblptrh,c
 27225  004354                     	if	1	;There are 3 active tblptr bytes
 27226  004354  6AF8               	clrf	tblptru,c
 27227  004356  0E00               	movlw	low (__mediumconst shr (0+16))
 27228  004358  22F8               	addwfc	tblptru,f,c
 27229  00435A                     	endif
 27230  00435A  0008               	tblrd		*
 27231  00435C  50F5               	movf	tablat,w,c
 27232  00435E  0900               	iorlw	0
 27233  004360  A4D8               	btfss	status,2,c
 27234  004362  D7D9               	goto	l1617
 27235                           
 27236                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27237  004364  EC9C  F047         	call	_bootloader_get_entries	;wreg free
 27238  004368  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27239  00436C  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27240  004370  6A1B               	clrf	__display_itoa_u16@value+2,c
 27241  004372  6A1C               	clrf	__display_itoa_u16@value+3,c
 27242  004374  5021               	movf	__display_verify@cntr,w,c
 27243  004376  6E1F               	movwf	??__display_verify& (0+255),c
 27244  004378  6A20               	clrf	(??__display_verify+1)& (0+255),c
 27245  00437A  0E01               	movlw	1
 27246  00437C  261F               	addwf	??__display_verify,f,c
 27247  00437E  0E00               	movlw	0
 27248  004380  2220               	addwfc	??__display_verify+1,f,c
 27249  004382  0E28               	movlw	low (_display_content+40)
 27250  004384  241F               	addwf	??__display_verify,w,c
 27251  004386  6E1D               	movwf	__display_itoa_u16@text,c
 27252  004388  0E02               	movlw	high (_display_content+40)
 27253  00438A  2020               	addwfc	??__display_verify+1,w,c
 27254  00438C  6E1E               	movwf	__display_itoa_u16@text+1,c
 27255  00438E  EC10  F030         	call	__display_itoa_u16	;wreg free
 27256  004392  0012               	return		;funcret
 27257  004394                     __end_of__display_verify:
 27258                           	opt stack 0
 27259                           tosu	equ	0xFFF
 27260                           tosh	equ	0xFFE
 27261                           tosl	equ	0xFFD
 27262                           pclath	equ	0xFFA
 27263                           tblptru	equ	0xFF8
 27264                           tblptrh	equ	0xFF7
 27265                           tblptrl	equ	0xFF6
 27266                           tablat	equ	0xFF5
 27267                           prodh	equ	0xFF4
 27268                           prodl	equ	0xFF3
 27269                           intcon	equ	0xFF2
 27270                           intcon2	equ	0xFF1
 27271                           intcon3	equ	0xFF0
 27272                           indf0	equ	0xFEF
 27273                           postinc0	equ	0xFEE
 27274                           fsr0h	equ	0xFEA
 27275                           fsr0l	equ	0xFE9
 27276                           wreg	equ	0xFE8
 27277                           indf1	equ	0xFE7
 27278                           postdec1	equ	0xFE5
 27279                           plusw1	equ	0xFE3
 27280                           fsr1h	equ	0xFE2
 27281                           fsr1l	equ	0xFE1
 27282                           indf2	equ	0xFDF
 27283                           postinc2	equ	0xFDE
 27284                           postdec2	equ	0xFDD
 27285                           plusw2	equ	0xFDB
 27286                           fsr2h	equ	0xFDA
 27287                           fsr2l	equ	0xFD9
 27288                           status	equ	0xFD8
 27289                           
 27290 ;; *************** function __display_start *****************
 27291 ;; Defined at:
 27292 ;;		line 351 in file "display.c"
 27293 ;; Parameters:    Size  Location     Type
 27294 ;;		None
 27295 ;; Auto vars:     Size  Location     Type
 27296 ;;  cntr            1   36[COMRAM] unsigned char 
 27297 ;; Return value:  Size  Location     Type
 27298 ;;                  1    wreg      void 
 27299 ;; Registers used:
 27300 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27301 ;; Tracked objects:
 27302 ;;		On entry : 0/0
 27303 ;;		On exit  : 0/0
 27304 ;;		Unchanged: 0/0
 27305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27306 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27307 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27308 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27309 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27310 ;;Total ram usage:        1 bytes
 27311 ;; Hardware stack levels used:    1
 27312 ;; Hardware stack levels required when called:    5
 27313 ;; This function calls:
 27314 ;;		__display_itoa_u32
 27315 ;; This function is called by:
 27316 ;;		_display_prepare
 27317 ;; This function uses a non-reentrant model
 27318 ;;
 27319                           
 27320                           	psect	text133
 27321  002B00                     __ptext133:
 27322                           	opt stack 0
 27323  002B00                     __display_start:
 27324                           	opt stack 21
 27325                           
 27326                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 27327                           
 27328                           ;incstack = 0
 27329  002B00  0E00               	movlw	0
 27330  002B02  6E25               	movwf	__display_start@cntr,c
 27331                           
 27332                           ;display.c: 355: while(start_line1[cntr])
 27333  002B04  D017               	goto	l1562
 27334  002B06                     
 27335                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 27336  002B06  5025               	movf	__display_start@cntr,w,c
 27337  002B08  0D01               	mullw	1
 27338  002B0A  0EF4               	movlw	low _start_line1
 27339  002B0C  24F3               	addwf	prodl,w,c
 27340  002B0E  6EF6               	movwf	tblptrl,c
 27341  002B10  0E9D               	movlw	high _start_line1
 27342  002B12  20F4               	addwfc	prodh,w,c
 27343  002B14  6EF7               	movwf	tblptrh,c
 27344  002B16                     	if	1	;There are 3 active tblptr bytes
 27345  002B16  6AF8               	clrf	tblptru,c
 27346  002B18  0E00               	movlw	low (__mediumconst shr (0+16))
 27347  002B1A  22F8               	addwfc	tblptru,f,c
 27348  002B1C                     	endif
 27349  002B1C  5025               	movf	__display_start@cntr,w,c
 27350  002B1E  0D01               	mullw	1
 27351  002B20  0E00               	movlw	low _display_content
 27352  002B22  24F3               	addwf	prodl,w,c
 27353  002B24  6ED9               	movwf	fsr2l,c
 27354  002B26  0E02               	movlw	high _display_content
 27355  002B28  20F4               	addwfc	prodh,w,c
 27356  002B2A  6EDA               	movwf	fsr2h,c
 27357  002B2C  0008               	tblrd		*
 27358  002B2E  CFF5 FFDF          	movff	tablat,indf2
 27359  002B32  2A25               	incf	__display_start@cntr,f,c
 27360  002B34                     l1562:
 27361  002B34  5025               	movf	__display_start@cntr,w,c
 27362  002B36  0D01               	mullw	1
 27363  002B38  0EF4               	movlw	low _start_line1
 27364  002B3A  24F3               	addwf	prodl,w,c
 27365  002B3C  6EF6               	movwf	tblptrl,c
 27366  002B3E  0E9D               	movlw	high _start_line1
 27367  002B40  20F4               	addwfc	prodh,w,c
 27368  002B42  6EF7               	movwf	tblptrh,c
 27369  002B44                     	if	1	;There are 3 active tblptr bytes
 27370  002B44  6AF8               	clrf	tblptru,c
 27371  002B46  0E00               	movlw	low (__mediumconst shr (0+16))
 27372  002B48  22F8               	addwfc	tblptru,f,c
 27373  002B4A                     	endif
 27374  002B4A  0008               	tblrd		*
 27375  002B4C  50F5               	movf	tablat,w,c
 27376  002B4E  0900               	iorlw	0
 27377  002B50  A4D8               	btfss	status,2,c
 27378  002B52  D7D9               	goto	l1563
 27379                           
 27380                           ;display.c: 357: cntr = 0;
 27381  002B54  0E00               	movlw	0
 27382  002B56  6E25               	movwf	__display_start@cntr,c
 27383                           
 27384                           ;display.c: 358: while(start_line2[cntr])
 27385  002B58  D017               	goto	l1565
 27386  002B5A                     
 27387                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 27388  002B5A  5025               	movf	__display_start@cntr,w,c
 27389  002B5C  0D01               	mullw	1
 27390  002B5E  0E62               	movlw	low _start_line2
 27391  002B60  24F3               	addwf	prodl,w,c
 27392  002B62  6EF6               	movwf	tblptrl,c
 27393  002B64  0E9E               	movlw	high _start_line2
 27394  002B66  20F4               	addwfc	prodh,w,c
 27395  002B68  6EF7               	movwf	tblptrh,c
 27396  002B6A                     	if	1	;There are 3 active tblptr bytes
 27397  002B6A  6AF8               	clrf	tblptru,c
 27398  002B6C  0E00               	movlw	low (__mediumconst shr (0+16))
 27399  002B6E  22F8               	addwfc	tblptru,f,c
 27400  002B70                     	endif
 27401  002B70  5025               	movf	__display_start@cntr,w,c
 27402  002B72  0D01               	mullw	1
 27403  002B74  0E14               	movlw	low (_display_content+20)
 27404  002B76  24F3               	addwf	prodl,w,c
 27405  002B78  6ED9               	movwf	fsr2l,c
 27406  002B7A  0E02               	movlw	high (_display_content+20)
 27407  002B7C  20F4               	addwfc	prodh,w,c
 27408  002B7E  6EDA               	movwf	fsr2h,c
 27409  002B80  0008               	tblrd		*
 27410  002B82  CFF5 FFDF          	movff	tablat,indf2
 27411  002B86  2A25               	incf	__display_start@cntr,f,c
 27412  002B88                     l1565:
 27413  002B88  5025               	movf	__display_start@cntr,w,c
 27414  002B8A  0D01               	mullw	1
 27415  002B8C  0E62               	movlw	low _start_line2
 27416  002B8E  24F3               	addwf	prodl,w,c
 27417  002B90  6EF6               	movwf	tblptrl,c
 27418  002B92  0E9E               	movlw	high _start_line2
 27419  002B94  20F4               	addwfc	prodh,w,c
 27420  002B96  6EF7               	movwf	tblptrh,c
 27421  002B98                     	if	1	;There are 3 active tblptr bytes
 27422  002B98  6AF8               	clrf	tblptru,c
 27423  002B9A  0E00               	movlw	low (__mediumconst shr (0+16))
 27424  002B9C  22F8               	addwfc	tblptru,f,c
 27425  002B9E                     	endif
 27426  002B9E  0008               	tblrd		*
 27427  002BA0  50F5               	movf	tablat,w,c
 27428  002BA2  0900               	iorlw	0
 27429  002BA4  A4D8               	btfss	status,2,c
 27430  002BA6  D7D9               	goto	l1566
 27431                           
 27432                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 27433  002BA8  0E00               	movlw	0
 27434  002BAA  6E1F               	movwf	__display_itoa_u32@value,c
 27435  002BAC  0E00               	movlw	0
 27436  002BAE  6E20               	movwf	__display_itoa_u32@value+1,c
 27437  002BB0  0E00               	movlw	0
 27438  002BB2  6E21               	movwf	__display_itoa_u32@value+2,c
 27439  002BB4  0E00               	movlw	0
 27440  002BB6  6E22               	movwf	__display_itoa_u32@value+3,c
 27441  002BB8  5025               	movf	__display_start@cntr,w,c
 27442  002BBA  0D01               	mullw	1
 27443  002BBC  0E14               	movlw	low (_display_content+20)
 27444  002BBE  24F3               	addwf	prodl,w,c
 27445  002BC0  6E23               	movwf	__display_itoa_u32@text,c
 27446  002BC2  0E02               	movlw	high (_display_content+20)
 27447  002BC4  20F4               	addwfc	prodh,w,c
 27448  002BC6  6E24               	movwf	__display_itoa_u32@text+1,c
 27449  002BC8  EC15  F006         	call	__display_itoa_u32	;wreg free
 27450  002BCC  2625               	addwf	__display_start@cntr,f,c
 27451                           
 27452                           ;display.c: 361: display_content[1][cntr++] = '.';
 27453  002BCE  5025               	movf	__display_start@cntr,w,c
 27454  002BD0  0D01               	mullw	1
 27455  002BD2  0E14               	movlw	low (_display_content+20)
 27456  002BD4  24F3               	addwf	prodl,w,c
 27457  002BD6  6ED9               	movwf	fsr2l,c
 27458  002BD8  0E02               	movlw	high (_display_content+20)
 27459  002BDA  20F4               	addwfc	prodh,w,c
 27460  002BDC  6EDA               	movwf	fsr2h,c
 27461  002BDE  0E2E               	movlw	46
 27462  002BE0  6EDF               	movwf	indf2,c
 27463  002BE2  2A25               	incf	__display_start@cntr,f,c
 27464                           
 27465                           ;display.c: 362: cntr += _display_itoa_u32(0x03, &display_content[1][cntr]);
 27466  002BE4  0E03               	movlw	3
 27467  002BE6  6E1F               	movwf	__display_itoa_u32@value,c
 27468  002BE8  0E00               	movlw	0
 27469  002BEA  6E20               	movwf	__display_itoa_u32@value+1,c
 27470  002BEC  0E00               	movlw	0
 27471  002BEE  6E21               	movwf	__display_itoa_u32@value+2,c
 27472  002BF0  0E00               	movlw	0
 27473  002BF2  6E22               	movwf	__display_itoa_u32@value+3,c
 27474  002BF4  5025               	movf	__display_start@cntr,w,c
 27475  002BF6  0D01               	mullw	1
 27476  002BF8  0E14               	movlw	low (_display_content+20)
 27477  002BFA  24F3               	addwf	prodl,w,c
 27478  002BFC  6E23               	movwf	__display_itoa_u32@text,c
 27479  002BFE  0E02               	movlw	high (_display_content+20)
 27480  002C00  20F4               	addwfc	prodh,w,c
 27481  002C02  6E24               	movwf	__display_itoa_u32@text+1,c
 27482  002C04  EC15  F006         	call	__display_itoa_u32	;wreg free
 27483  002C08  2625               	addwf	__display_start@cntr,f,c
 27484                           
 27485                           ;display.c: 363: display_content[1][cntr++] = '.';
 27486  002C0A  5025               	movf	__display_start@cntr,w,c
 27487  002C0C  0D01               	mullw	1
 27488  002C0E  0E14               	movlw	low (_display_content+20)
 27489  002C10  24F3               	addwf	prodl,w,c
 27490  002C12  6ED9               	movwf	fsr2l,c
 27491  002C14  0E02               	movlw	high (_display_content+20)
 27492  002C16  20F4               	addwfc	prodh,w,c
 27493  002C18  6EDA               	movwf	fsr2h,c
 27494  002C1A  0E2E               	movlw	46
 27495  002C1C  6EDF               	movwf	indf2,c
 27496  002C1E  2A25               	incf	__display_start@cntr,f,c
 27497                           
 27498                           ;display.c: 364: cntr += _display_itoa_u32(0x02, &display_content[1][cntr]);
 27499  002C20  0E02               	movlw	2
 27500  002C22  6E1F               	movwf	__display_itoa_u32@value,c
 27501  002C24  0E00               	movlw	0
 27502  002C26  6E20               	movwf	__display_itoa_u32@value+1,c
 27503  002C28  0E00               	movlw	0
 27504  002C2A  6E21               	movwf	__display_itoa_u32@value+2,c
 27505  002C2C  0E00               	movlw	0
 27506  002C2E  6E22               	movwf	__display_itoa_u32@value+3,c
 27507  002C30  5025               	movf	__display_start@cntr,w,c
 27508  002C32  0D01               	mullw	1
 27509  002C34  0E14               	movlw	low (_display_content+20)
 27510  002C36  24F3               	addwf	prodl,w,c
 27511  002C38  6E23               	movwf	__display_itoa_u32@text,c
 27512  002C3A  0E02               	movlw	high (_display_content+20)
 27513  002C3C  20F4               	addwfc	prodh,w,c
 27514  002C3E  6E24               	movwf	__display_itoa_u32@text+1,c
 27515  002C40  EC15  F006         	call	__display_itoa_u32	;wreg free
 27516  002C44  2625               	addwf	__display_start@cntr,f,c
 27517                           
 27518                           ;display.c: 365: cntr = 0;
 27519  002C46  0E00               	movlw	0
 27520  002C48  6E25               	movwf	__display_start@cntr,c
 27521                           
 27522                           ;display.c: 366: while(start_line3[cntr])
 27523  002C4A  D017               	goto	l1568
 27524  002C4C                     
 27525                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27526  002C4C  5025               	movf	__display_start@cntr,w,c
 27527  002C4E  0D01               	mullw	1
 27528  002C50  0EA7               	movlw	low _start_line3
 27529  002C52  24F3               	addwf	prodl,w,c
 27530  002C54  6EF6               	movwf	tblptrl,c
 27531  002C56  0E9E               	movlw	high _start_line3
 27532  002C58  20F4               	addwfc	prodh,w,c
 27533  002C5A  6EF7               	movwf	tblptrh,c
 27534  002C5C                     	if	1	;There are 3 active tblptr bytes
 27535  002C5C  6AF8               	clrf	tblptru,c
 27536  002C5E  0E00               	movlw	low (__mediumconst shr (0+16))
 27537  002C60  22F8               	addwfc	tblptru,f,c
 27538  002C62                     	endif
 27539  002C62  5025               	movf	__display_start@cntr,w,c
 27540  002C64  0D01               	mullw	1
 27541  002C66  0E28               	movlw	low (_display_content+40)
 27542  002C68  24F3               	addwf	prodl,w,c
 27543  002C6A  6ED9               	movwf	fsr2l,c
 27544  002C6C  0E02               	movlw	high (_display_content+40)
 27545  002C6E  20F4               	addwfc	prodh,w,c
 27546  002C70  6EDA               	movwf	fsr2h,c
 27547  002C72  0008               	tblrd		*
 27548  002C74  CFF5 FFDF          	movff	tablat,indf2
 27549  002C78  2A25               	incf	__display_start@cntr,f,c
 27550  002C7A                     l1568:
 27551  002C7A  5025               	movf	__display_start@cntr,w,c
 27552  002C7C  0D01               	mullw	1
 27553  002C7E  0EA7               	movlw	low _start_line3
 27554  002C80  24F3               	addwf	prodl,w,c
 27555  002C82  6EF6               	movwf	tblptrl,c
 27556  002C84  0E9E               	movlw	high _start_line3
 27557  002C86  20F4               	addwfc	prodh,w,c
 27558  002C88  6EF7               	movwf	tblptrh,c
 27559  002C8A                     	if	1	;There are 3 active tblptr bytes
 27560  002C8A  6AF8               	clrf	tblptru,c
 27561  002C8C  0E00               	movlw	low (__mediumconst shr (0+16))
 27562  002C8E  22F8               	addwfc	tblptru,f,c
 27563  002C90                     	endif
 27564  002C90  0008               	tblrd		*
 27565  002C92  50F5               	movf	tablat,w,c
 27566  002C94  0900               	iorlw	0
 27567  002C96  A4D8               	btfss	status,2,c
 27568  002C98  D7D9               	goto	l1569
 27569                           
 27570                           ;display.c: 368: cntr = 0;
 27571  002C9A  0E00               	movlw	0
 27572  002C9C  6E25               	movwf	__display_start@cntr,c
 27573                           
 27574                           ;display.c: 369: while(start_line4[cntr])
 27575  002C9E  D017               	goto	l1571
 27576  002CA0                     
 27577                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27578  002CA0  5025               	movf	__display_start@cntr,w,c
 27579  002CA2  0D01               	mullw	1
 27580  002CA4  0E22               	movlw	low _start_line4
 27581  002CA6  24F3               	addwf	prodl,w,c
 27582  002CA8  6EF6               	movwf	tblptrl,c
 27583  002CAA  0E9E               	movlw	high _start_line4
 27584  002CAC  20F4               	addwfc	prodh,w,c
 27585  002CAE  6EF7               	movwf	tblptrh,c
 27586  002CB0                     	if	1	;There are 3 active tblptr bytes
 27587  002CB0  6AF8               	clrf	tblptru,c
 27588  002CB2  0E00               	movlw	low (__mediumconst shr (0+16))
 27589  002CB4  22F8               	addwfc	tblptru,f,c
 27590  002CB6                     	endif
 27591  002CB6  5025               	movf	__display_start@cntr,w,c
 27592  002CB8  0D01               	mullw	1
 27593  002CBA  0E3C               	movlw	low (_display_content+60)
 27594  002CBC  24F3               	addwf	prodl,w,c
 27595  002CBE  6ED9               	movwf	fsr2l,c
 27596  002CC0  0E02               	movlw	high (_display_content+60)
 27597  002CC2  20F4               	addwfc	prodh,w,c
 27598  002CC4  6EDA               	movwf	fsr2h,c
 27599  002CC6  0008               	tblrd		*
 27600  002CC8  CFF5 FFDF          	movff	tablat,indf2
 27601  002CCC  2A25               	incf	__display_start@cntr,f,c
 27602  002CCE                     l1571:
 27603  002CCE  5025               	movf	__display_start@cntr,w,c
 27604  002CD0  0D01               	mullw	1
 27605  002CD2  0E22               	movlw	low _start_line4
 27606  002CD4  24F3               	addwf	prodl,w,c
 27607  002CD6  6EF6               	movwf	tblptrl,c
 27608  002CD8  0E9E               	movlw	high _start_line4
 27609  002CDA  20F4               	addwfc	prodh,w,c
 27610  002CDC  6EF7               	movwf	tblptrh,c
 27611  002CDE                     	if	1	;There are 3 active tblptr bytes
 27612  002CDE  6AF8               	clrf	tblptru,c
 27613  002CE0  0E00               	movlw	low (__mediumconst shr (0+16))
 27614  002CE2  22F8               	addwfc	tblptru,f,c
 27615  002CE4                     	endif
 27616  002CE4  0008               	tblrd		*
 27617  002CE6  50F5               	movf	tablat,w,c
 27618  002CE8  0900               	iorlw	0
 27619  002CEA  B4D8               	btfsc	status,2,c
 27620  002CEC  0012               	return	
 27621  002CEE  D7D8               	goto	l1572
 27622  002CF0                     __end_of__display_start:
 27623                           	opt stack 0
 27624                           tosu	equ	0xFFF
 27625                           tosh	equ	0xFFE
 27626                           tosl	equ	0xFFD
 27627                           pclath	equ	0xFFA
 27628                           tblptru	equ	0xFF8
 27629                           tblptrh	equ	0xFF7
 27630                           tblptrl	equ	0xFF6
 27631                           tablat	equ	0xFF5
 27632                           prodh	equ	0xFF4
 27633                           prodl	equ	0xFF3
 27634                           intcon	equ	0xFF2
 27635                           intcon2	equ	0xFF1
 27636                           intcon3	equ	0xFF0
 27637                           indf0	equ	0xFEF
 27638                           postinc0	equ	0xFEE
 27639                           fsr0h	equ	0xFEA
 27640                           fsr0l	equ	0xFE9
 27641                           wreg	equ	0xFE8
 27642                           indf1	equ	0xFE7
 27643                           postdec1	equ	0xFE5
 27644                           plusw1	equ	0xFE3
 27645                           fsr1h	equ	0xFE2
 27646                           fsr1l	equ	0xFE1
 27647                           indf2	equ	0xFDF
 27648                           postinc2	equ	0xFDE
 27649                           postdec2	equ	0xFDD
 27650                           plusw2	equ	0xFDB
 27651                           fsr2h	equ	0xFDA
 27652                           fsr2l	equ	0xFD9
 27653                           status	equ	0xFD8
 27654                           
 27655 ;; *************** function __display_search *****************
 27656 ;; Defined at:
 27657 ;;		line 373 in file "display.c"
 27658 ;; Parameters:    Size  Location     Type
 27659 ;;		None
 27660 ;; Auto vars:     Size  Location     Type
 27661 ;;  cntr            1    0[COMRAM] unsigned char 
 27662 ;; Return value:  Size  Location     Type
 27663 ;;                  1    wreg      void 
 27664 ;; Registers used:
 27665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27666 ;; Tracked objects:
 27667 ;;		On entry : 0/0
 27668 ;;		On exit  : 0/0
 27669 ;;		Unchanged: 0/0
 27670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27672 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27674 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27675 ;;Total ram usage:        1 bytes
 27676 ;; Hardware stack levels used:    1
 27677 ;; This function calls:
 27678 ;;		Nothing
 27679 ;; This function is called by:
 27680 ;;		_display_prepare
 27681 ;; This function uses a non-reentrant model
 27682 ;;
 27683                           
 27684                           	psect	text134
 27685  003D4E                     __ptext134:
 27686                           	opt stack 0
 27687  003D4E                     __display_search:
 27688                           	opt stack 26
 27689                           
 27690                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27691                           
 27692                           ;incstack = 0
 27693  003D4E  0E00               	movlw	0
 27694  003D50  6E01               	movwf	__display_search@cntr,c
 27695                           
 27696                           ;display.c: 377: while(search_line1[cntr])
 27697  003D52  D017               	goto	l1577
 27698  003D54                     
 27699                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27700  003D54  5001               	movf	__display_search@cntr,w,c
 27701  003D56  0D01               	mullw	1
 27702  003D58  0EE4               	movlw	low _search_line1
 27703  003D5A  24F3               	addwf	prodl,w,c
 27704  003D5C  6EF6               	movwf	tblptrl,c
 27705  003D5E  0E9D               	movlw	high _search_line1
 27706  003D60  20F4               	addwfc	prodh,w,c
 27707  003D62  6EF7               	movwf	tblptrh,c
 27708  003D64                     	if	1	;There are 3 active tblptr bytes
 27709  003D64  6AF8               	clrf	tblptru,c
 27710  003D66  0E00               	movlw	low (__mediumconst shr (0+16))
 27711  003D68  22F8               	addwfc	tblptru,f,c
 27712  003D6A                     	endif
 27713  003D6A  5001               	movf	__display_search@cntr,w,c
 27714  003D6C  0D01               	mullw	1
 27715  003D6E  0E00               	movlw	low _display_content
 27716  003D70  24F3               	addwf	prodl,w,c
 27717  003D72  6ED9               	movwf	fsr2l,c
 27718  003D74  0E02               	movlw	high _display_content
 27719  003D76  20F4               	addwfc	prodh,w,c
 27720  003D78  6EDA               	movwf	fsr2h,c
 27721  003D7A  0008               	tblrd		*
 27722  003D7C  CFF5 FFDF          	movff	tablat,indf2
 27723  003D80  2A01               	incf	__display_search@cntr,f,c
 27724  003D82                     l1577:
 27725  003D82  5001               	movf	__display_search@cntr,w,c
 27726  003D84  0D01               	mullw	1
 27727  003D86  0EE4               	movlw	low _search_line1
 27728  003D88  24F3               	addwf	prodl,w,c
 27729  003D8A  6EF6               	movwf	tblptrl,c
 27730  003D8C  0E9D               	movlw	high _search_line1
 27731  003D8E  20F4               	addwfc	prodh,w,c
 27732  003D90  6EF7               	movwf	tblptrh,c
 27733  003D92                     	if	1	;There are 3 active tblptr bytes
 27734  003D92  6AF8               	clrf	tblptru,c
 27735  003D94  0E00               	movlw	low (__mediumconst shr (0+16))
 27736  003D96  22F8               	addwfc	tblptru,f,c
 27737  003D98                     	endif
 27738  003D98  0008               	tblrd		*
 27739  003D9A  50F5               	movf	tablat,w,c
 27740  003D9C  0900               	iorlw	0
 27741  003D9E  A4D8               	btfss	status,2,c
 27742  003DA0  D7D9               	goto	l1578
 27743                           
 27744                           ;display.c: 379: cntr = 0;
 27745  003DA2  0E00               	movlw	0
 27746  003DA4  6E01               	movwf	__display_search@cntr,c
 27747                           
 27748                           ;display.c: 380: while(search_line2[cntr])
 27749  003DA6  D017               	goto	l1580
 27750  003DA8                     
 27751                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27752  003DA8  5001               	movf	__display_search@cntr,w,c
 27753  003DAA  0D01               	mullw	1
 27754  003DAC  0E43               	movlw	low _search_line2
 27755  003DAE  24F3               	addwf	prodl,w,c
 27756  003DB0  6EF6               	movwf	tblptrl,c
 27757  003DB2  0E9D               	movlw	high _search_line2
 27758  003DB4  20F4               	addwfc	prodh,w,c
 27759  003DB6  6EF7               	movwf	tblptrh,c
 27760  003DB8                     	if	1	;There are 3 active tblptr bytes
 27761  003DB8  6AF8               	clrf	tblptru,c
 27762  003DBA  0E00               	movlw	low (__mediumconst shr (0+16))
 27763  003DBC  22F8               	addwfc	tblptru,f,c
 27764  003DBE                     	endif
 27765  003DBE  5001               	movf	__display_search@cntr,w,c
 27766  003DC0  0D01               	mullw	1
 27767  003DC2  0E14               	movlw	low (_display_content+20)
 27768  003DC4  24F3               	addwf	prodl,w,c
 27769  003DC6  6ED9               	movwf	fsr2l,c
 27770  003DC8  0E02               	movlw	high (_display_content+20)
 27771  003DCA  20F4               	addwfc	prodh,w,c
 27772  003DCC  6EDA               	movwf	fsr2h,c
 27773  003DCE  0008               	tblrd		*
 27774  003DD0  CFF5 FFDF          	movff	tablat,indf2
 27775  003DD4  2A01               	incf	__display_search@cntr,f,c
 27776  003DD6                     l1580:
 27777  003DD6  5001               	movf	__display_search@cntr,w,c
 27778  003DD8  0D01               	mullw	1
 27779  003DDA  0E43               	movlw	low _search_line2
 27780  003DDC  24F3               	addwf	prodl,w,c
 27781  003DDE  6EF6               	movwf	tblptrl,c
 27782  003DE0  0E9D               	movlw	high _search_line2
 27783  003DE2  20F4               	addwfc	prodh,w,c
 27784  003DE4  6EF7               	movwf	tblptrh,c
 27785  003DE6                     	if	1	;There are 3 active tblptr bytes
 27786  003DE6  6AF8               	clrf	tblptru,c
 27787  003DE8  0E00               	movlw	low (__mediumconst shr (0+16))
 27788  003DEA  22F8               	addwfc	tblptru,f,c
 27789  003DEC                     	endif
 27790  003DEC  0008               	tblrd		*
 27791  003DEE  50F5               	movf	tablat,w,c
 27792  003DF0  0900               	iorlw	0
 27793  003DF2  A4D8               	btfss	status,2,c
 27794  003DF4  D7D9               	goto	l1581
 27795                           
 27796                           ;display.c: 382: cntr = 0;
 27797  003DF6  0E00               	movlw	0
 27798  003DF8  6E01               	movwf	__display_search@cntr,c
 27799                           
 27800                           ;display.c: 383: while(search_line3[cntr])
 27801  003DFA  D017               	goto	l1583
 27802  003DFC                     
 27803                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27804  003DFC  5001               	movf	__display_search@cntr,w,c
 27805  003DFE  0D01               	mullw	1
 27806  003E00  0EC2               	movlw	low _search_line3
 27807  003E02  24F3               	addwf	prodl,w,c
 27808  003E04  6EF6               	movwf	tblptrl,c
 27809  003E06  0E9C               	movlw	high _search_line3
 27810  003E08  20F4               	addwfc	prodh,w,c
 27811  003E0A  6EF7               	movwf	tblptrh,c
 27812  003E0C                     	if	1	;There are 3 active tblptr bytes
 27813  003E0C  6AF8               	clrf	tblptru,c
 27814  003E0E  0E00               	movlw	low (__mediumconst shr (0+16))
 27815  003E10  22F8               	addwfc	tblptru,f,c
 27816  003E12                     	endif
 27817  003E12  5001               	movf	__display_search@cntr,w,c
 27818  003E14  0D01               	mullw	1
 27819  003E16  0E28               	movlw	low (_display_content+40)
 27820  003E18  24F3               	addwf	prodl,w,c
 27821  003E1A  6ED9               	movwf	fsr2l,c
 27822  003E1C  0E02               	movlw	high (_display_content+40)
 27823  003E1E  20F4               	addwfc	prodh,w,c
 27824  003E20  6EDA               	movwf	fsr2h,c
 27825  003E22  0008               	tblrd		*
 27826  003E24  CFF5 FFDF          	movff	tablat,indf2
 27827  003E28  2A01               	incf	__display_search@cntr,f,c
 27828  003E2A                     l1583:
 27829  003E2A  5001               	movf	__display_search@cntr,w,c
 27830  003E2C  0D01               	mullw	1
 27831  003E2E  0EC2               	movlw	low _search_line3
 27832  003E30  24F3               	addwf	prodl,w,c
 27833  003E32  6EF6               	movwf	tblptrl,c
 27834  003E34  0E9C               	movlw	high _search_line3
 27835  003E36  20F4               	addwfc	prodh,w,c
 27836  003E38  6EF7               	movwf	tblptrh,c
 27837  003E3A                     	if	1	;There are 3 active tblptr bytes
 27838  003E3A  6AF8               	clrf	tblptru,c
 27839  003E3C  0E00               	movlw	low (__mediumconst shr (0+16))
 27840  003E3E  22F8               	addwfc	tblptru,f,c
 27841  003E40                     	endif
 27842  003E40  0008               	tblrd		*
 27843  003E42  50F5               	movf	tablat,w,c
 27844  003E44  0900               	iorlw	0
 27845  003E46  A4D8               	btfss	status,2,c
 27846  003E48  D7D9               	goto	l1584
 27847                           
 27848                           ;display.c: 385: cntr = 0;
 27849  003E4A  0E00               	movlw	0
 27850  003E4C  6E01               	movwf	__display_search@cntr,c
 27851                           
 27852                           ;display.c: 386: while(search_line4[cntr])
 27853  003E4E  D017               	goto	l1586
 27854  003E50                     
 27855                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 27856  003E50  5001               	movf	__display_search@cntr,w,c
 27857  003E52  0D01               	mullw	1
 27858  003E54  0E59               	movlw	low _search_line4
 27859  003E56  24F3               	addwf	prodl,w,c
 27860  003E58  6EF6               	movwf	tblptrl,c
 27861  003E5A  0E9E               	movlw	high _search_line4
 27862  003E5C  20F4               	addwfc	prodh,w,c
 27863  003E5E  6EF7               	movwf	tblptrh,c
 27864  003E60                     	if	1	;There are 3 active tblptr bytes
 27865  003E60  6AF8               	clrf	tblptru,c
 27866  003E62  0E00               	movlw	low (__mediumconst shr (0+16))
 27867  003E64  22F8               	addwfc	tblptru,f,c
 27868  003E66                     	endif
 27869  003E66  5001               	movf	__display_search@cntr,w,c
 27870  003E68  0D01               	mullw	1
 27871  003E6A  0E3C               	movlw	low (_display_content+60)
 27872  003E6C  24F3               	addwf	prodl,w,c
 27873  003E6E  6ED9               	movwf	fsr2l,c
 27874  003E70  0E02               	movlw	high (_display_content+60)
 27875  003E72  20F4               	addwfc	prodh,w,c
 27876  003E74  6EDA               	movwf	fsr2h,c
 27877  003E76  0008               	tblrd		*
 27878  003E78  CFF5 FFDF          	movff	tablat,indf2
 27879  003E7C  2A01               	incf	__display_search@cntr,f,c
 27880  003E7E                     l1586:
 27881  003E7E  5001               	movf	__display_search@cntr,w,c
 27882  003E80  0D01               	mullw	1
 27883  003E82  0E59               	movlw	low _search_line4
 27884  003E84  24F3               	addwf	prodl,w,c
 27885  003E86  6EF6               	movwf	tblptrl,c
 27886  003E88  0E9E               	movlw	high _search_line4
 27887  003E8A  20F4               	addwfc	prodh,w,c
 27888  003E8C  6EF7               	movwf	tblptrh,c
 27889  003E8E                     	if	1	;There are 3 active tblptr bytes
 27890  003E8E  6AF8               	clrf	tblptru,c
 27891  003E90  0E00               	movlw	low (__mediumconst shr (0+16))
 27892  003E92  22F8               	addwfc	tblptru,f,c
 27893  003E94                     	endif
 27894  003E94  0008               	tblrd		*
 27895  003E96  50F5               	movf	tablat,w,c
 27896  003E98  0900               	iorlw	0
 27897  003E9A  B4D8               	btfsc	status,2,c
 27898  003E9C  0012               	return	
 27899  003E9E  D7D8               	goto	l1587
 27900  003EA0                     __end_of__display_search:
 27901                           	opt stack 0
 27902                           tosu	equ	0xFFF
 27903                           tosh	equ	0xFFE
 27904                           tosl	equ	0xFFD
 27905                           pclath	equ	0xFFA
 27906                           tblptru	equ	0xFF8
 27907                           tblptrh	equ	0xFF7
 27908                           tblptrl	equ	0xFF6
 27909                           tablat	equ	0xFF5
 27910                           prodh	equ	0xFF4
 27911                           prodl	equ	0xFF3
 27912                           intcon	equ	0xFF2
 27913                           intcon2	equ	0xFF1
 27914                           intcon3	equ	0xFF0
 27915                           indf0	equ	0xFEF
 27916                           postinc0	equ	0xFEE
 27917                           fsr0h	equ	0xFEA
 27918                           fsr0l	equ	0xFE9
 27919                           wreg	equ	0xFE8
 27920                           indf1	equ	0xFE7
 27921                           postdec1	equ	0xFE5
 27922                           plusw1	equ	0xFE3
 27923                           fsr1h	equ	0xFE2
 27924                           fsr1l	equ	0xFE1
 27925                           indf2	equ	0xFDF
 27926                           postinc2	equ	0xFDE
 27927                           postdec2	equ	0xFDD
 27928                           plusw2	equ	0xFDB
 27929                           fsr2h	equ	0xFDA
 27930                           fsr2l	equ	0xFD9
 27931                           status	equ	0xFD8
 27932                           
 27933 ;; *************** function __display_rebooting *****************
 27934 ;; Defined at:
 27935 ;;		line 547 in file "display.c"
 27936 ;; Parameters:    Size  Location     Type
 27937 ;;		None
 27938 ;; Auto vars:     Size  Location     Type
 27939 ;;  cntr            1    0[COMRAM] unsigned char 
 27940 ;; Return value:  Size  Location     Type
 27941 ;;                  1    wreg      void 
 27942 ;; Registers used:
 27943 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27944 ;; Tracked objects:
 27945 ;;		On entry : 0/0
 27946 ;;		On exit  : 0/0
 27947 ;;		Unchanged: 0/0
 27948 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27949 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27950 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27951 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27952 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27953 ;;Total ram usage:        1 bytes
 27954 ;; Hardware stack levels used:    1
 27955 ;; This function calls:
 27956 ;;		Nothing
 27957 ;; This function is called by:
 27958 ;;		_display_prepare
 27959 ;; This function uses a non-reentrant model
 27960 ;;
 27961                           
 27962                           	psect	text135
 27963  007F30                     __ptext135:
 27964                           	opt stack 0
 27965  007F30                     __display_rebooting:
 27966                           	opt stack 26
 27967                           
 27968                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 27969                           
 27970                           ;incstack = 0
 27971  007F30  0E00               	movlw	0
 27972  007F32  6E01               	movwf	__display_rebooting@cntr,c
 27973                           
 27974                           ;display.c: 551: while(reboot_line1[cntr])
 27975  007F34  D017               	goto	l1701
 27976  007F36                     
 27977                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 27978  007F36  5001               	movf	__display_rebooting@cntr,w,c
 27979  007F38  0D01               	mullw	1
 27980  007F3A  0E3F               	movlw	low _reboot_line1
 27981  007F3C  24F3               	addwf	prodl,w,c
 27982  007F3E  6EF6               	movwf	tblptrl,c
 27983  007F40  0E9E               	movlw	high _reboot_line1
 27984  007F42  20F4               	addwfc	prodh,w,c
 27985  007F44  6EF7               	movwf	tblptrh,c
 27986  007F46                     	if	1	;There are 3 active tblptr bytes
 27987  007F46  6AF8               	clrf	tblptru,c
 27988  007F48  0E00               	movlw	low (__mediumconst shr (0+16))
 27989  007F4A  22F8               	addwfc	tblptru,f,c
 27990  007F4C                     	endif
 27991  007F4C  5001               	movf	__display_rebooting@cntr,w,c
 27992  007F4E  0D01               	mullw	1
 27993  007F50  0E00               	movlw	low _display_content
 27994  007F52  24F3               	addwf	prodl,w,c
 27995  007F54  6ED9               	movwf	fsr2l,c
 27996  007F56  0E02               	movlw	high _display_content
 27997  007F58  20F4               	addwfc	prodh,w,c
 27998  007F5A  6EDA               	movwf	fsr2h,c
 27999  007F5C  0008               	tblrd		*
 28000  007F5E  CFF5 FFDF          	movff	tablat,indf2
 28001  007F62  2A01               	incf	__display_rebooting@cntr,f,c
 28002  007F64                     l1701:
 28003  007F64  5001               	movf	__display_rebooting@cntr,w,c
 28004  007F66  0D01               	mullw	1
 28005  007F68  0E3F               	movlw	low _reboot_line1
 28006  007F6A  24F3               	addwf	prodl,w,c
 28007  007F6C  6EF6               	movwf	tblptrl,c
 28008  007F6E  0E9E               	movlw	high _reboot_line1
 28009  007F70  20F4               	addwfc	prodh,w,c
 28010  007F72  6EF7               	movwf	tblptrh,c
 28011  007F74                     	if	1	;There are 3 active tblptr bytes
 28012  007F74  6AF8               	clrf	tblptru,c
 28013  007F76  0E00               	movlw	low (__mediumconst shr (0+16))
 28014  007F78  22F8               	addwfc	tblptru,f,c
 28015  007F7A                     	endif
 28016  007F7A  0008               	tblrd		*
 28017  007F7C  50F5               	movf	tablat,w,c
 28018  007F7E  0900               	iorlw	0
 28019  007F80  B4D8               	btfsc	status,2,c
 28020  007F82  0012               	return	
 28021  007F84  D7D8               	goto	l1702
 28022  007F86                     __end_of__display_rebooting:
 28023                           	opt stack 0
 28024                           tosu	equ	0xFFF
 28025                           tosh	equ	0xFFE
 28026                           tosl	equ	0xFFD
 28027                           pclath	equ	0xFFA
 28028                           tblptru	equ	0xFF8
 28029                           tblptrh	equ	0xFF7
 28030                           tblptrl	equ	0xFF6
 28031                           tablat	equ	0xFF5
 28032                           prodh	equ	0xFF4
 28033                           prodl	equ	0xFF3
 28034                           intcon	equ	0xFF2
 28035                           intcon2	equ	0xFF1
 28036                           intcon3	equ	0xFF0
 28037                           indf0	equ	0xFEF
 28038                           postinc0	equ	0xFEE
 28039                           fsr0h	equ	0xFEA
 28040                           fsr0l	equ	0xFE9
 28041                           wreg	equ	0xFE8
 28042                           indf1	equ	0xFE7
 28043                           postdec1	equ	0xFE5
 28044                           plusw1	equ	0xFE3
 28045                           fsr1h	equ	0xFE2
 28046                           fsr1l	equ	0xFE1
 28047                           indf2	equ	0xFDF
 28048                           postinc2	equ	0xFDE
 28049                           postdec2	equ	0xFDD
 28050                           plusw2	equ	0xFDB
 28051                           fsr2h	equ	0xFDA
 28052                           fsr2l	equ	0xFD9
 28053                           status	equ	0xFD8
 28054                           
 28055 ;; *************** function __display_programming *****************
 28056 ;; Defined at:
 28057 ;;		line 505 in file "display.c"
 28058 ;; Parameters:    Size  Location     Type
 28059 ;;		None
 28060 ;; Auto vars:     Size  Location     Type
 28061 ;;  cntr            1   30[COMRAM] unsigned char 
 28062 ;; Return value:  Size  Location     Type
 28063 ;;                  1    wreg      void 
 28064 ;; Registers used:
 28065 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28066 ;; Tracked objects:
 28067 ;;		On entry : 0/0
 28068 ;;		On exit  : 0/0
 28069 ;;		Unchanged: 0/0
 28070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28071 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28073 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28074 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28075 ;;Total ram usage:        1 bytes
 28076 ;; Hardware stack levels used:    1
 28077 ;; Hardware stack levels required when called:    4
 28078 ;; This function calls:
 28079 ;;		__display_itoa_u16
 28080 ;;		_bootloader_get_entries
 28081 ;;		_bootloader_get_flashPagesWritten
 28082 ;;		_bootloader_get_total_entries
 28083 ;; This function is called by:
 28084 ;;		_display_prepare
 28085 ;; This function uses a non-reentrant model
 28086 ;;
 28087                           
 28088                           	psect	text136
 28089  003296                     __ptext136:
 28090                           	opt stack 0
 28091  003296                     __display_programming:
 28092                           	opt stack 22
 28093                           
 28094                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 28095                           
 28096                           ;incstack = 0
 28097  003296  0E00               	movlw	0
 28098  003298  6E1F               	movwf	__display_programming@cntr,c
 28099                           
 28100                           ;display.c: 509: while(programming_line1[cntr])
 28101  00329A  D017               	goto	l1671
 28102  00329C                     
 28103                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 28104  00329C  501F               	movf	__display_programming@cntr,w,c
 28105  00329E  0D01               	mullw	1
 28106  0032A0  0E94               	movlw	low _programming_line1
 28107  0032A2  24F3               	addwf	prodl,w,c
 28108  0032A4  6EF6               	movwf	tblptrl,c
 28109  0032A6  0E9D               	movlw	high _programming_line1
 28110  0032A8  20F4               	addwfc	prodh,w,c
 28111  0032AA  6EF7               	movwf	tblptrh,c
 28112  0032AC                     	if	1	;There are 3 active tblptr bytes
 28113  0032AC  6AF8               	clrf	tblptru,c
 28114  0032AE  0E00               	movlw	low (__mediumconst shr (0+16))
 28115  0032B0  22F8               	addwfc	tblptru,f,c
 28116  0032B2                     	endif
 28117  0032B2  501F               	movf	__display_programming@cntr,w,c
 28118  0032B4  0D01               	mullw	1
 28119  0032B6  0E00               	movlw	low _display_content
 28120  0032B8  24F3               	addwf	prodl,w,c
 28121  0032BA  6ED9               	movwf	fsr2l,c
 28122  0032BC  0E02               	movlw	high _display_content
 28123  0032BE  20F4               	addwfc	prodh,w,c
 28124  0032C0  6EDA               	movwf	fsr2h,c
 28125  0032C2  0008               	tblrd		*
 28126  0032C4  CFF5 FFDF          	movff	tablat,indf2
 28127  0032C8  2A1F               	incf	__display_programming@cntr,f,c
 28128  0032CA                     l1671:
 28129  0032CA  501F               	movf	__display_programming@cntr,w,c
 28130  0032CC  0D01               	mullw	1
 28131  0032CE  0E94               	movlw	low _programming_line1
 28132  0032D0  24F3               	addwf	prodl,w,c
 28133  0032D2  6EF6               	movwf	tblptrl,c
 28134  0032D4  0E9D               	movlw	high _programming_line1
 28135  0032D6  20F4               	addwfc	prodh,w,c
 28136  0032D8  6EF7               	movwf	tblptrh,c
 28137  0032DA                     	if	1	;There are 3 active tblptr bytes
 28138  0032DA  6AF8               	clrf	tblptru,c
 28139  0032DC  0E00               	movlw	low (__mediumconst shr (0+16))
 28140  0032DE  22F8               	addwfc	tblptru,f,c
 28141  0032E0                     	endif
 28142  0032E0  0008               	tblrd		*
 28143  0032E2  50F5               	movf	tablat,w,c
 28144  0032E4  0900               	iorlw	0
 28145  0032E6  A4D8               	btfss	status,2,c
 28146  0032E8  D7D9               	goto	l1672
 28147                           
 28148                           ;display.c: 512: cntr = 0;
 28149  0032EA  0E00               	movlw	0
 28150  0032EC  6E1F               	movwf	__display_programming@cntr,c
 28151                           
 28152                           ;display.c: 513: while(programming_line2[cntr])
 28153  0032EE  D017               	goto	l1674
 28154  0032F0                     
 28155                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 28156  0032F0  501F               	movf	__display_programming@cntr,w,c
 28157  0032F2  0D01               	mullw	1
 28158  0032F4  0EFC               	movlw	low _programming_line2
 28159  0032F6  24F3               	addwf	prodl,w,c
 28160  0032F8  6EF6               	movwf	tblptrl,c
 28161  0032FA  0E9C               	movlw	high _programming_line2
 28162  0032FC  20F4               	addwfc	prodh,w,c
 28163  0032FE  6EF7               	movwf	tblptrh,c
 28164  003300                     	if	1	;There are 3 active tblptr bytes
 28165  003300  6AF8               	clrf	tblptru,c
 28166  003302  0E00               	movlw	low (__mediumconst shr (0+16))
 28167  003304  22F8               	addwfc	tblptru,f,c
 28168  003306                     	endif
 28169  003306  501F               	movf	__display_programming@cntr,w,c
 28170  003308  0D01               	mullw	1
 28171  00330A  0E14               	movlw	low (_display_content+20)
 28172  00330C  24F3               	addwf	prodl,w,c
 28173  00330E  6ED9               	movwf	fsr2l,c
 28174  003310  0E02               	movlw	high (_display_content+20)
 28175  003312  20F4               	addwfc	prodh,w,c
 28176  003314  6EDA               	movwf	fsr2h,c
 28177  003316  0008               	tblrd		*
 28178  003318  CFF5 FFDF          	movff	tablat,indf2
 28179  00331C  2A1F               	incf	__display_programming@cntr,f,c
 28180  00331E                     l1674:
 28181  00331E  501F               	movf	__display_programming@cntr,w,c
 28182  003320  0D01               	mullw	1
 28183  003322  0EFC               	movlw	low _programming_line2
 28184  003324  24F3               	addwf	prodl,w,c
 28185  003326  6EF6               	movwf	tblptrl,c
 28186  003328  0E9C               	movlw	high _programming_line2
 28187  00332A  20F4               	addwfc	prodh,w,c
 28188  00332C  6EF7               	movwf	tblptrh,c
 28189  00332E                     	if	1	;There are 3 active tblptr bytes
 28190  00332E  6AF8               	clrf	tblptru,c
 28191  003330  0E00               	movlw	low (__mediumconst shr (0+16))
 28192  003332  22F8               	addwfc	tblptru,f,c
 28193  003334                     	endif
 28194  003334  0008               	tblrd		*
 28195  003336  50F5               	movf	tablat,w,c
 28196  003338  0900               	iorlw	0
 28197  00333A  A4D8               	btfss	status,2,c
 28198  00333C  D7D9               	goto	l1675
 28199                           
 28200                           ;display.c: 516: cntr = 0;
 28201  00333E  0E00               	movlw	0
 28202  003340  6E1F               	movwf	__display_programming@cntr,c
 28203                           
 28204                           ;display.c: 517: while(programming_line3[cntr])
 28205  003342  D017               	goto	l1677
 28206  003344                     
 28207                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 28208  003344  501F               	movf	__display_programming@cntr,w,c
 28209  003346  0D01               	mullw	1
 28210  003348  0E83               	movlw	low _programming_line3
 28211  00334A  24F3               	addwf	prodl,w,c
 28212  00334C  6EF6               	movwf	tblptrl,c
 28213  00334E  0E9E               	movlw	high _programming_line3
 28214  003350  20F4               	addwfc	prodh,w,c
 28215  003352  6EF7               	movwf	tblptrh,c
 28216  003354                     	if	1	;There are 3 active tblptr bytes
 28217  003354  6AF8               	clrf	tblptru,c
 28218  003356  0E00               	movlw	low (__mediumconst shr (0+16))
 28219  003358  22F8               	addwfc	tblptru,f,c
 28220  00335A                     	endif
 28221  00335A  501F               	movf	__display_programming@cntr,w,c
 28222  00335C  0D01               	mullw	1
 28223  00335E  0E28               	movlw	low (_display_content+40)
 28224  003360  24F3               	addwf	prodl,w,c
 28225  003362  6ED9               	movwf	fsr2l,c
 28226  003364  0E02               	movlw	high (_display_content+40)
 28227  003366  20F4               	addwfc	prodh,w,c
 28228  003368  6EDA               	movwf	fsr2h,c
 28229  00336A  0008               	tblrd		*
 28230  00336C  CFF5 FFDF          	movff	tablat,indf2
 28231  003370  2A1F               	incf	__display_programming@cntr,f,c
 28232  003372                     l1677:
 28233  003372  501F               	movf	__display_programming@cntr,w,c
 28234  003374  0D01               	mullw	1
 28235  003376  0E83               	movlw	low _programming_line3
 28236  003378  24F3               	addwf	prodl,w,c
 28237  00337A  6EF6               	movwf	tblptrl,c
 28238  00337C  0E9E               	movlw	high _programming_line3
 28239  00337E  20F4               	addwfc	prodh,w,c
 28240  003380  6EF7               	movwf	tblptrh,c
 28241  003382                     	if	1	;There are 3 active tblptr bytes
 28242  003382  6AF8               	clrf	tblptru,c
 28243  003384  0E00               	movlw	low (__mediumconst shr (0+16))
 28244  003386  22F8               	addwfc	tblptru,f,c
 28245  003388                     	endif
 28246  003388  0008               	tblrd		*
 28247  00338A  50F5               	movf	tablat,w,c
 28248  00338C  0900               	iorlw	0
 28249  00338E  A4D8               	btfss	status,2,c
 28250  003390  D7D9               	goto	l1678
 28251                           
 28252                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28253  003392  EC9C  F047         	call	_bootloader_get_entries	;wreg free
 28254  003396  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28255  00339A  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28256  00339E  6A1B               	clrf	__display_itoa_u16@value+2,c
 28257  0033A0  6A1C               	clrf	__display_itoa_u16@value+3,c
 28258  0033A2  501F               	movf	__display_programming@cntr,w,c
 28259  0033A4  0D01               	mullw	1
 28260  0033A6  0E28               	movlw	low (_display_content+40)
 28261  0033A8  24F3               	addwf	prodl,w,c
 28262  0033AA  6E1D               	movwf	__display_itoa_u16@text,c
 28263  0033AC  0E02               	movlw	high (_display_content+40)
 28264  0033AE  20F4               	addwfc	prodh,w,c
 28265  0033B0  6E1E               	movwf	__display_itoa_u16@text+1,c
 28266  0033B2  EC10  F030         	call	__display_itoa_u16	;wreg free
 28267  0033B6  261F               	addwf	__display_programming@cntr,f,c
 28268                           
 28269                           ;display.c: 520: display_content[2][cntr++] = '/';
 28270  0033B8  501F               	movf	__display_programming@cntr,w,c
 28271  0033BA  0D01               	mullw	1
 28272  0033BC  0E28               	movlw	low (_display_content+40)
 28273  0033BE  24F3               	addwf	prodl,w,c
 28274  0033C0  6ED9               	movwf	fsr2l,c
 28275  0033C2  0E02               	movlw	high (_display_content+40)
 28276  0033C4  20F4               	addwfc	prodh,w,c
 28277  0033C6  6EDA               	movwf	fsr2h,c
 28278  0033C8  0E2F               	movlw	47
 28279  0033CA  6EDF               	movwf	indf2,c
 28280  0033CC  2A1F               	incf	__display_programming@cntr,f,c
 28281                           
 28282                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28283  0033CE  ECA6  F047         	call	_bootloader_get_total_entries	;wreg free
 28284  0033D2  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28285  0033D6  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28286  0033DA  6A1B               	clrf	__display_itoa_u16@value+2,c
 28287  0033DC  6A1C               	clrf	__display_itoa_u16@value+3,c
 28288  0033DE  501F               	movf	__display_programming@cntr,w,c
 28289  0033E0  0D01               	mullw	1
 28290  0033E2  0E28               	movlw	low (_display_content+40)
 28291  0033E4  24F3               	addwf	prodl,w,c
 28292  0033E6  6E1D               	movwf	__display_itoa_u16@text,c
 28293  0033E8  0E02               	movlw	high (_display_content+40)
 28294  0033EA  20F4               	addwfc	prodh,w,c
 28295  0033EC  6E1E               	movwf	__display_itoa_u16@text+1,c
 28296  0033EE  EC10  F030         	call	__display_itoa_u16	;wreg free
 28297                           
 28298                           ;display.c: 523: cntr = 0;
 28299  0033F2  0E00               	movlw	0
 28300  0033F4  6E1F               	movwf	__display_programming@cntr,c
 28301                           
 28302                           ;display.c: 524: while(programming_line4[cntr])
 28303  0033F6  D017               	goto	l1680
 28304  0033F8                     
 28305                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 28306  0033F8  501F               	movf	__display_programming@cntr,w,c
 28307  0033FA  0D01               	mullw	1
 28308  0033FC  0E84               	movlw	low _programming_line4
 28309  0033FE  24F3               	addwf	prodl,w,c
 28310  003400  6EF6               	movwf	tblptrl,c
 28311  003402  0E9D               	movlw	high _programming_line4
 28312  003404  20F4               	addwfc	prodh,w,c
 28313  003406  6EF7               	movwf	tblptrh,c
 28314  003408                     	if	1	;There are 3 active tblptr bytes
 28315  003408  6AF8               	clrf	tblptru,c
 28316  00340A  0E00               	movlw	low (__mediumconst shr (0+16))
 28317  00340C  22F8               	addwfc	tblptru,f,c
 28318  00340E                     	endif
 28319  00340E  501F               	movf	__display_programming@cntr,w,c
 28320  003410  0D01               	mullw	1
 28321  003412  0E3C               	movlw	low (_display_content+60)
 28322  003414  24F3               	addwf	prodl,w,c
 28323  003416  6ED9               	movwf	fsr2l,c
 28324  003418  0E02               	movlw	high (_display_content+60)
 28325  00341A  20F4               	addwfc	prodh,w,c
 28326  00341C  6EDA               	movwf	fsr2h,c
 28327  00341E  0008               	tblrd		*
 28328  003420  CFF5 FFDF          	movff	tablat,indf2
 28329  003424  2A1F               	incf	__display_programming@cntr,f,c
 28330  003426                     l1680:
 28331  003426  501F               	movf	__display_programming@cntr,w,c
 28332  003428  0D01               	mullw	1
 28333  00342A  0E84               	movlw	low _programming_line4
 28334  00342C  24F3               	addwf	prodl,w,c
 28335  00342E  6EF6               	movwf	tblptrl,c
 28336  003430  0E9D               	movlw	high _programming_line4
 28337  003432  20F4               	addwfc	prodh,w,c
 28338  003434  6EF7               	movwf	tblptrh,c
 28339  003436                     	if	1	;There are 3 active tblptr bytes
 28340  003436  6AF8               	clrf	tblptru,c
 28341  003438  0E00               	movlw	low (__mediumconst shr (0+16))
 28342  00343A  22F8               	addwfc	tblptru,f,c
 28343  00343C                     	endif
 28344  00343C  0008               	tblrd		*
 28345  00343E  50F5               	movf	tablat,w,c
 28346  003440  0900               	iorlw	0
 28347  003442  A4D8               	btfss	status,2,c
 28348  003444  D7D9               	goto	l1681
 28349                           
 28350                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28351  003446  ECA1  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 28352  00344A  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28353  00344E  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28354  003452  6A1B               	clrf	__display_itoa_u16@value+2,c
 28355  003454  6A1C               	clrf	__display_itoa_u16@value+3,c
 28356  003456  501F               	movf	__display_programming@cntr,w,c
 28357  003458  0D01               	mullw	1
 28358  00345A  0E3C               	movlw	low (_display_content+60)
 28359  00345C  24F3               	addwf	prodl,w,c
 28360  00345E  6E1D               	movwf	__display_itoa_u16@text,c
 28361  003460  0E02               	movlw	high (_display_content+60)
 28362  003462  20F4               	addwfc	prodh,w,c
 28363  003464  6E1E               	movwf	__display_itoa_u16@text+1,c
 28364  003466  EC10  F030         	call	__display_itoa_u16	;wreg free
 28365  00346A  0012               	return		;funcret
 28366  00346C                     __end_of__display_programming:
 28367                           	opt stack 0
 28368                           tosu	equ	0xFFF
 28369                           tosh	equ	0xFFE
 28370                           tosl	equ	0xFFD
 28371                           pclath	equ	0xFFA
 28372                           tblptru	equ	0xFF8
 28373                           tblptrh	equ	0xFF7
 28374                           tblptrl	equ	0xFF6
 28375                           tablat	equ	0xFF5
 28376                           prodh	equ	0xFF4
 28377                           prodl	equ	0xFF3
 28378                           intcon	equ	0xFF2
 28379                           intcon2	equ	0xFF1
 28380                           intcon3	equ	0xFF0
 28381                           indf0	equ	0xFEF
 28382                           postinc0	equ	0xFEE
 28383                           fsr0h	equ	0xFEA
 28384                           fsr0l	equ	0xFE9
 28385                           wreg	equ	0xFE8
 28386                           indf1	equ	0xFE7
 28387                           postdec1	equ	0xFE5
 28388                           plusw1	equ	0xFE3
 28389                           fsr1h	equ	0xFE2
 28390                           fsr1l	equ	0xFE1
 28391                           indf2	equ	0xFDF
 28392                           postinc2	equ	0xFDE
 28393                           postdec2	equ	0xFDD
 28394                           plusw2	equ	0xFDB
 28395                           fsr2h	equ	0xFDA
 28396                           fsr2l	equ	0xFD9
 28397                           status	equ	0xFD8
 28398                           
 28399 ;; *************** function __display_found *****************
 28400 ;; Defined at:
 28401 ;;		line 390 in file "display.c"
 28402 ;; Parameters:    Size  Location     Type
 28403 ;;		None
 28404 ;; Auto vars:     Size  Location     Type
 28405 ;;  cntr            1   39[COMRAM] unsigned char 
 28406 ;;  start           1   38[COMRAM] unsigned char 
 28407 ;; Return value:  Size  Location     Type
 28408 ;;                  1    wreg      void 
 28409 ;; Registers used:
 28410 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28411 ;; Tracked objects:
 28412 ;;		On entry : 0/0
 28413 ;;		On exit  : 0/0
 28414 ;;		Unchanged: 0/0
 28415 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28416 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28417 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28418 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28419 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28420 ;;Total ram usage:        4 bytes
 28421 ;; Hardware stack levels used:    1
 28422 ;; Hardware stack levels required when called:    5
 28423 ;; This function calls:
 28424 ;;		__display_itoa_u32
 28425 ;;		_bootloader_get_file_size
 28426 ;; This function is called by:
 28427 ;;		_display_prepare
 28428 ;; This function uses a non-reentrant model
 28429 ;;
 28430                           
 28431                           	psect	text137
 28432  002EDE                     __ptext137:
 28433                           	opt stack 0
 28434  002EDE                     __display_found:
 28435                           	opt stack 21
 28436                           
 28437                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 28438                           
 28439                           ;incstack = 0
 28440  002EDE  0E00               	movlw	0
 28441  002EE0  6E28               	movwf	__display_found@cntr,c
 28442                           
 28443                           ;display.c: 396: while(found_line1[cntr])
 28444  002EE2  D017               	goto	l1592
 28445  002EE4                     
 28446                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 28447  002EE4  5028               	movf	__display_found@cntr,w,c
 28448  002EE6  0D01               	mullw	1
 28449  002EE8  0ED4               	movlw	low _found_line1
 28450  002EEA  24F3               	addwf	prodl,w,c
 28451  002EEC  6EF6               	movwf	tblptrl,c
 28452  002EEE  0E9D               	movlw	high _found_line1
 28453  002EF0  20F4               	addwfc	prodh,w,c
 28454  002EF2  6EF7               	movwf	tblptrh,c
 28455  002EF4                     	if	1	;There are 3 active tblptr bytes
 28456  002EF4  6AF8               	clrf	tblptru,c
 28457  002EF6  0E00               	movlw	low (__mediumconst shr (0+16))
 28458  002EF8  22F8               	addwfc	tblptru,f,c
 28459  002EFA                     	endif
 28460  002EFA  5028               	movf	__display_found@cntr,w,c
 28461  002EFC  0D01               	mullw	1
 28462  002EFE  0E00               	movlw	low _display_content
 28463  002F00  24F3               	addwf	prodl,w,c
 28464  002F02  6ED9               	movwf	fsr2l,c
 28465  002F04  0E02               	movlw	high _display_content
 28466  002F06  20F4               	addwfc	prodh,w,c
 28467  002F08  6EDA               	movwf	fsr2h,c
 28468  002F0A  0008               	tblrd		*
 28469  002F0C  CFF5 FFDF          	movff	tablat,indf2
 28470  002F10  2A28               	incf	__display_found@cntr,f,c
 28471  002F12                     l1592:
 28472  002F12  5028               	movf	__display_found@cntr,w,c
 28473  002F14  0D01               	mullw	1
 28474  002F16  0ED4               	movlw	low _found_line1
 28475  002F18  24F3               	addwf	prodl,w,c
 28476  002F1A  6EF6               	movwf	tblptrl,c
 28477  002F1C  0E9D               	movlw	high _found_line1
 28478  002F1E  20F4               	addwfc	prodh,w,c
 28479  002F20  6EF7               	movwf	tblptrh,c
 28480  002F22                     	if	1	;There are 3 active tblptr bytes
 28481  002F22  6AF8               	clrf	tblptru,c
 28482  002F24  0E00               	movlw	low (__mediumconst shr (0+16))
 28483  002F26  22F8               	addwfc	tblptru,f,c
 28484  002F28                     	endif
 28485  002F28  0008               	tblrd		*
 28486  002F2A  50F5               	movf	tablat,w,c
 28487  002F2C  0900               	iorlw	0
 28488  002F2E  A4D8               	btfss	status,2,c
 28489  002F30  D7D9               	goto	l1593
 28490                           
 28491                           ;display.c: 399: cntr = 0;
 28492  002F32  0E00               	movlw	0
 28493  002F34  6E28               	movwf	__display_found@cntr,c
 28494                           
 28495                           ;display.c: 400: while(found_line2[cntr])
 28496  002F36  D017               	goto	l1595
 28497  002F38                     
 28498                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28499  002F38  5028               	movf	__display_found@cntr,w,c
 28500  002F3A  0D01               	mullw	1
 28501  002F3C  0EE9               	movlw	low _found_line2
 28502  002F3E  24F3               	addwf	prodl,w,c
 28503  002F40  6EF6               	movwf	tblptrl,c
 28504  002F42  0E9C               	movlw	high _found_line2
 28505  002F44  20F4               	addwfc	prodh,w,c
 28506  002F46  6EF7               	movwf	tblptrh,c
 28507  002F48                     	if	1	;There are 3 active tblptr bytes
 28508  002F48  6AF8               	clrf	tblptru,c
 28509  002F4A  0E00               	movlw	low (__mediumconst shr (0+16))
 28510  002F4C  22F8               	addwfc	tblptru,f,c
 28511  002F4E                     	endif
 28512  002F4E  5028               	movf	__display_found@cntr,w,c
 28513  002F50  0D01               	mullw	1
 28514  002F52  0E14               	movlw	low (_display_content+20)
 28515  002F54  24F3               	addwf	prodl,w,c
 28516  002F56  6ED9               	movwf	fsr2l,c
 28517  002F58  0E02               	movlw	high (_display_content+20)
 28518  002F5A  20F4               	addwfc	prodh,w,c
 28519  002F5C  6EDA               	movwf	fsr2h,c
 28520  002F5E  0008               	tblrd		*
 28521  002F60  CFF5 FFDF          	movff	tablat,indf2
 28522  002F64  2A28               	incf	__display_found@cntr,f,c
 28523  002F66                     l1595:
 28524  002F66  5028               	movf	__display_found@cntr,w,c
 28525  002F68  0D01               	mullw	1
 28526  002F6A  0EE9               	movlw	low _found_line2
 28527  002F6C  24F3               	addwf	prodl,w,c
 28528  002F6E  6EF6               	movwf	tblptrl,c
 28529  002F70  0E9C               	movlw	high _found_line2
 28530  002F72  20F4               	addwfc	prodh,w,c
 28531  002F74  6EF7               	movwf	tblptrh,c
 28532  002F76                     	if	1	;There are 3 active tblptr bytes
 28533  002F76  6AF8               	clrf	tblptru,c
 28534  002F78  0E00               	movlw	low (__mediumconst shr (0+16))
 28535  002F7A  22F8               	addwfc	tblptru,f,c
 28536  002F7C                     	endif
 28537  002F7C  0008               	tblrd		*
 28538  002F7E  50F5               	movf	tablat,w,c
 28539  002F80  0900               	iorlw	0
 28540  002F82  A4D8               	btfss	status,2,c
 28541  002F84  D7D9               	goto	l1596
 28542                           
 28543                           ;display.c: 403: cntr = 0;
 28544  002F86  0E00               	movlw	0
 28545  002F88  6E28               	movwf	__display_found@cntr,c
 28546                           
 28547                           ;display.c: 404: while(found_line3[cntr])
 28548  002F8A  D017               	goto	l1598
 28549  002F8C                     
 28550                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28551  002F8C  5028               	movf	__display_found@cntr,w,c
 28552  002F8E  0D01               	mullw	1
 28553  002F90  0E98               	movlw	low _found_line3
 28554  002F92  24F3               	addwf	prodl,w,c
 28555  002F94  6EF6               	movwf	tblptrl,c
 28556  002F96  0E9E               	movlw	high _found_line3
 28557  002F98  20F4               	addwfc	prodh,w,c
 28558  002F9A  6EF7               	movwf	tblptrh,c
 28559  002F9C                     	if	1	;There are 3 active tblptr bytes
 28560  002F9C  6AF8               	clrf	tblptru,c
 28561  002F9E  0E00               	movlw	low (__mediumconst shr (0+16))
 28562  002FA0  22F8               	addwfc	tblptru,f,c
 28563  002FA2                     	endif
 28564  002FA2  5028               	movf	__display_found@cntr,w,c
 28565  002FA4  0D01               	mullw	1
 28566  002FA6  0E28               	movlw	low (_display_content+40)
 28567  002FA8  24F3               	addwf	prodl,w,c
 28568  002FAA  6ED9               	movwf	fsr2l,c
 28569  002FAC  0E02               	movlw	high (_display_content+40)
 28570  002FAE  20F4               	addwfc	prodh,w,c
 28571  002FB0  6EDA               	movwf	fsr2h,c
 28572  002FB2  0008               	tblrd		*
 28573  002FB4  CFF5 FFDF          	movff	tablat,indf2
 28574  002FB8  2A28               	incf	__display_found@cntr,f,c
 28575  002FBA                     l1598:
 28576  002FBA  5028               	movf	__display_found@cntr,w,c
 28577  002FBC  0D01               	mullw	1
 28578  002FBE  0E98               	movlw	low _found_line3
 28579  002FC0  24F3               	addwf	prodl,w,c
 28580  002FC2  6EF6               	movwf	tblptrl,c
 28581  002FC4  0E9E               	movlw	high _found_line3
 28582  002FC6  20F4               	addwfc	prodh,w,c
 28583  002FC8  6EF7               	movwf	tblptrh,c
 28584  002FCA                     	if	1	;There are 3 active tblptr bytes
 28585  002FCA  6AF8               	clrf	tblptru,c
 28586  002FCC  0E00               	movlw	low (__mediumconst shr (0+16))
 28587  002FCE  22F8               	addwfc	tblptru,f,c
 28588  002FD0                     	endif
 28589  002FD0  0008               	tblrd		*
 28590  002FD2  50F5               	movf	tablat,w,c
 28591  002FD4  0900               	iorlw	0
 28592  002FD6  A4D8               	btfss	status,2,c
 28593  002FD8  D7D9               	goto	l1599
 28594                           
 28595                           ;display.c: 406: start = cntr;
 28596  002FDA  C028  F027         	movff	__display_found@cntr,__display_found@start
 28597                           
 28598                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28599  002FDE  EC20  F047         	call	_bootloader_get_file_size	;wreg free
 28600  002FE2  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28601  002FE6  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28602  002FEA  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28603  002FEE  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28604  002FF2  5028               	movf	__display_found@cntr,w,c
 28605  002FF4  0D01               	mullw	1
 28606  002FF6  0E28               	movlw	low (_display_content+40)
 28607  002FF8  24F3               	addwf	prodl,w,c
 28608  002FFA  6E23               	movwf	__display_itoa_u32@text,c
 28609  002FFC  0E02               	movlw	high (_display_content+40)
 28610  002FFE  20F4               	addwfc	prodh,w,c
 28611  003000  6E24               	movwf	__display_itoa_u32@text+1,c
 28612  003002  EC15  F006         	call	__display_itoa_u32	;wreg free
 28613  003006  2627               	addwf	__display_found@start,f,c
 28614                           
 28615                           ;display.c: 408: cntr = 0;
 28616  003008  0E00               	movlw	0
 28617  00300A  6E28               	movwf	__display_found@cntr,c
 28618                           
 28619                           ;display.c: 409: while(found_line3b[cntr])
 28620  00300C  D01C               	goto	l1601
 28621  00300E                     
 28622                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28623  00300E  5028               	movf	__display_found@cntr,w,c
 28624  003010  0D01               	mullw	1
 28625  003012  0E91               	movlw	low _found_line3b
 28626  003014  24F3               	addwf	prodl,w,c
 28627  003016  6EF6               	movwf	tblptrl,c
 28628  003018  0E9E               	movlw	high _found_line3b
 28629  00301A  20F4               	addwfc	prodh,w,c
 28630  00301C  6EF7               	movwf	tblptrh,c
 28631  00301E                     	if	1	;There are 3 active tblptr bytes
 28632  00301E  6AF8               	clrf	tblptru,c
 28633  003020  0E00               	movlw	low (__mediumconst shr (0+16))
 28634  003022  22F8               	addwfc	tblptru,f,c
 28635  003024                     	endif
 28636  003024  5028               	movf	__display_found@cntr,w,c
 28637  003026  C027  F025         	movff	__display_found@start,??__display_found
 28638  00302A  6A26               	clrf	(??__display_found+1)& (0+255),c
 28639  00302C  2625               	addwf	??__display_found,f,c
 28640  00302E  0E00               	movlw	0
 28641  003030  2226               	addwfc	??__display_found+1,f,c
 28642  003032  0E28               	movlw	low (_display_content+40)
 28643  003034  2425               	addwf	??__display_found,w,c
 28644  003036  6ED9               	movwf	fsr2l,c
 28645  003038  0E02               	movlw	high (_display_content+40)
 28646  00303A  2026               	addwfc	??__display_found+1,w,c
 28647  00303C  6EDA               	movwf	fsr2h,c
 28648  00303E  0008               	tblrd		*
 28649  003040  CFF5 FFDF          	movff	tablat,indf2
 28650  003044  2A28               	incf	__display_found@cntr,f,c
 28651  003046                     l1601:
 28652  003046  5028               	movf	__display_found@cntr,w,c
 28653  003048  0D01               	mullw	1
 28654  00304A  0E91               	movlw	low _found_line3b
 28655  00304C  24F3               	addwf	prodl,w,c
 28656  00304E  6EF6               	movwf	tblptrl,c
 28657  003050  0E9E               	movlw	high _found_line3b
 28658  003052  20F4               	addwfc	prodh,w,c
 28659  003054  6EF7               	movwf	tblptrh,c
 28660  003056                     	if	1	;There are 3 active tblptr bytes
 28661  003056  6AF8               	clrf	tblptru,c
 28662  003058  0E00               	movlw	low (__mediumconst shr (0+16))
 28663  00305A  22F8               	addwfc	tblptru,f,c
 28664  00305C                     	endif
 28665  00305C  0008               	tblrd		*
 28666  00305E  50F5               	movf	tablat,w,c
 28667  003060  0900               	iorlw	0
 28668  003062  A4D8               	btfss	status,2,c
 28669  003064  D7D4               	goto	l1602
 28670                           
 28671                           ;display.c: 412: cntr = 0;
 28672  003066  0E00               	movlw	0
 28673  003068  6E28               	movwf	__display_found@cntr,c
 28674                           
 28675                           ;display.c: 413: while(found_line4[cntr])
 28676  00306A  D017               	goto	l1604
 28677  00306C                     
 28678                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28679  00306C  5028               	movf	__display_found@cntr,w,c
 28680  00306E  0D01               	mullw	1
 28681  003070  0E20               	movlw	low _found_line4
 28682  003072  24F3               	addwf	prodl,w,c
 28683  003074  6EF6               	movwf	tblptrl,c
 28684  003076  0E9D               	movlw	high _found_line4
 28685  003078  20F4               	addwfc	prodh,w,c
 28686  00307A  6EF7               	movwf	tblptrh,c
 28687  00307C                     	if	1	;There are 3 active tblptr bytes
 28688  00307C  6AF8               	clrf	tblptru,c
 28689  00307E  0E00               	movlw	low (__mediumconst shr (0+16))
 28690  003080  22F8               	addwfc	tblptru,f,c
 28691  003082                     	endif
 28692  003082  5028               	movf	__display_found@cntr,w,c
 28693  003084  0D01               	mullw	1
 28694  003086  0E3C               	movlw	low (_display_content+60)
 28695  003088  24F3               	addwf	prodl,w,c
 28696  00308A  6ED9               	movwf	fsr2l,c
 28697  00308C  0E02               	movlw	high (_display_content+60)
 28698  00308E  20F4               	addwfc	prodh,w,c
 28699  003090  6EDA               	movwf	fsr2h,c
 28700  003092  0008               	tblrd		*
 28701  003094  CFF5 FFDF          	movff	tablat,indf2
 28702  003098  2A28               	incf	__display_found@cntr,f,c
 28703  00309A                     l1604:
 28704  00309A  5028               	movf	__display_found@cntr,w,c
 28705  00309C  0D01               	mullw	1
 28706  00309E  0E20               	movlw	low _found_line4
 28707  0030A0  24F3               	addwf	prodl,w,c
 28708  0030A2  6EF6               	movwf	tblptrl,c
 28709  0030A4  0E9D               	movlw	high _found_line4
 28710  0030A6  20F4               	addwfc	prodh,w,c
 28711  0030A8  6EF7               	movwf	tblptrh,c
 28712  0030AA                     	if	1	;There are 3 active tblptr bytes
 28713  0030AA  6AF8               	clrf	tblptru,c
 28714  0030AC  0E00               	movlw	low (__mediumconst shr (0+16))
 28715  0030AE  22F8               	addwfc	tblptru,f,c
 28716  0030B0                     	endif
 28717  0030B0  0008               	tblrd		*
 28718  0030B2  50F5               	movf	tablat,w,c
 28719  0030B4  0900               	iorlw	0
 28720  0030B6  B4D8               	btfsc	status,2,c
 28721  0030B8  0012               	return	
 28722  0030BA  D7D8               	goto	l1605
 28723  0030BC                     __end_of__display_found:
 28724                           	opt stack 0
 28725                           tosu	equ	0xFFF
 28726                           tosh	equ	0xFFE
 28727                           tosl	equ	0xFFD
 28728                           pclath	equ	0xFFA
 28729                           tblptru	equ	0xFF8
 28730                           tblptrh	equ	0xFF7
 28731                           tblptrl	equ	0xFF6
 28732                           tablat	equ	0xFF5
 28733                           prodh	equ	0xFF4
 28734                           prodl	equ	0xFF3
 28735                           intcon	equ	0xFF2
 28736                           intcon2	equ	0xFF1
 28737                           intcon3	equ	0xFF0
 28738                           indf0	equ	0xFEF
 28739                           postinc0	equ	0xFEE
 28740                           fsr0h	equ	0xFEA
 28741                           fsr0l	equ	0xFE9
 28742                           wreg	equ	0xFE8
 28743                           indf1	equ	0xFE7
 28744                           postdec1	equ	0xFE5
 28745                           plusw1	equ	0xFE3
 28746                           fsr1h	equ	0xFE2
 28747                           fsr1l	equ	0xFE1
 28748                           indf2	equ	0xFDF
 28749                           postinc2	equ	0xFDE
 28750                           postdec2	equ	0xFDD
 28751                           plusw2	equ	0xFDB
 28752                           fsr2h	equ	0xFDA
 28753                           fsr2l	equ	0xFD9
 28754                           status	equ	0xFD8
 28755                           
 28756 ;; *************** function _bootloader_get_file_size *****************
 28757 ;; Defined at:
 28758 ;;		line 460 in file "bootloader.c"
 28759 ;; Parameters:    Size  Location     Type
 28760 ;;		None
 28761 ;; Auto vars:     Size  Location     Type
 28762 ;;		None
 28763 ;; Return value:  Size  Location     Type
 28764 ;;                  4    0[COMRAM] unsigned long 
 28765 ;; Registers used:
 28766 ;;		None
 28767 ;; Tracked objects:
 28768 ;;		On entry : 0/0
 28769 ;;		On exit  : 0/0
 28770 ;;		Unchanged: 0/0
 28771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28772 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28773 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28774 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28775 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28776 ;;Total ram usage:        4 bytes
 28777 ;; Hardware stack levels used:    1
 28778 ;; This function calls:
 28779 ;;		Nothing
 28780 ;; This function is called by:
 28781 ;;		__display_found
 28782 ;;		__fill_buffer_get_bootloader_details
 28783 ;; This function uses a non-reentrant model
 28784 ;;
 28785                           
 28786                           	psect	text138
 28787  008E40                     __ptext138:
 28788                           	opt stack 0
 28789  008E40                     _bootloader_get_file_size:
 28790                           	opt stack 25
 28791                           
 28792                           ;bootloader.c: 462: return hex_file_size;
 28793                           
 28794                           ;incstack = 0
 28795  008E40  C14A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28796  008E44  C14B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28797  008E48  C14C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28798  008E4C  C14D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28799  008E50  0012               	return		;funcret
 28800  008E52                     __end_of_bootloader_get_file_size:
 28801                           	opt stack 0
 28802                           tosu	equ	0xFFF
 28803                           tosh	equ	0xFFE
 28804                           tosl	equ	0xFFD
 28805                           pclath	equ	0xFFA
 28806                           tblptru	equ	0xFF8
 28807                           tblptrh	equ	0xFF7
 28808                           tblptrl	equ	0xFF6
 28809                           tablat	equ	0xFF5
 28810                           prodh	equ	0xFF4
 28811                           prodl	equ	0xFF3
 28812                           intcon	equ	0xFF2
 28813                           intcon2	equ	0xFF1
 28814                           intcon3	equ	0xFF0
 28815                           indf0	equ	0xFEF
 28816                           postinc0	equ	0xFEE
 28817                           fsr0h	equ	0xFEA
 28818                           fsr0l	equ	0xFE9
 28819                           wreg	equ	0xFE8
 28820                           indf1	equ	0xFE7
 28821                           postdec1	equ	0xFE5
 28822                           plusw1	equ	0xFE3
 28823                           fsr1h	equ	0xFE2
 28824                           fsr1l	equ	0xFE1
 28825                           indf2	equ	0xFDF
 28826                           postinc2	equ	0xFDE
 28827                           postdec2	equ	0xFDD
 28828                           plusw2	equ	0xFDB
 28829                           fsr2h	equ	0xFDA
 28830                           fsr2l	equ	0xFD9
 28831                           status	equ	0xFD8
 28832                           
 28833 ;; *************** function __display_failed *****************
 28834 ;; Defined at:
 28835 ;;		line 455 in file "display.c"
 28836 ;; Parameters:    Size  Location     Type
 28837 ;;		None
 28838 ;; Auto vars:     Size  Location     Type
 28839 ;;  cntr            1   36[COMRAM] unsigned char 
 28840 ;;  start           1    0        unsigned char 
 28841 ;; Return value:  Size  Location     Type
 28842 ;;                  1    wreg      void 
 28843 ;; Registers used:
 28844 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28845 ;; Tracked objects:
 28846 ;;		On entry : 0/0
 28847 ;;		On exit  : 0/0
 28848 ;;		Unchanged: 0/0
 28849 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28850 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28851 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28852 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28853 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28854 ;;Total ram usage:        1 bytes
 28855 ;; Hardware stack levels used:    1
 28856 ;; Hardware stack levels required when called:    5
 28857 ;; This function calls:
 28858 ;;		__display_itoa_u16
 28859 ;;		__display_itoa_u32
 28860 ;;		_bootloader_get_entries
 28861 ;;		_bootloader_get_error
 28862 ;;		_bootloader_get_rec_address
 28863 ;; This function is called by:
 28864 ;;		_display_prepare
 28865 ;; This function uses a non-reentrant model
 28866 ;;
 28867                           
 28868                           	psect	text139
 28869  0012DC                     __ptext139:
 28870                           	opt stack 0
 28871  0012DC                     __display_failed:
 28872                           	opt stack 21
 28873                           
 28874                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 28875                           
 28876                           ;incstack = 0
 28877  0012DC  0E00               	movlw	0
 28878  0012DE  6E25               	movwf	__display_failed@cntr,c
 28879                           
 28880                           ;display.c: 460: while(failed_line1[cntr])
 28881  0012E0  D017               	goto	l1637
 28882  0012E2                     
 28883                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 28884  0012E2  5025               	movf	__display_failed@cntr,w,c
 28885  0012E4  0D01               	mullw	1
 28886  0012E6  0EA4               	movlw	low _failed_line1
 28887  0012E8  24F3               	addwf	prodl,w,c
 28888  0012EA  6EF6               	movwf	tblptrl,c
 28889  0012EC  0E9D               	movlw	high _failed_line1
 28890  0012EE  20F4               	addwfc	prodh,w,c
 28891  0012F0  6EF7               	movwf	tblptrh,c
 28892  0012F2                     	if	1	;There are 3 active tblptr bytes
 28893  0012F2  6AF8               	clrf	tblptru,c
 28894  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
 28895  0012F6  22F8               	addwfc	tblptru,f,c
 28896  0012F8                     	endif
 28897  0012F8  5025               	movf	__display_failed@cntr,w,c
 28898  0012FA  0D01               	mullw	1
 28899  0012FC  0E00               	movlw	low _display_content
 28900  0012FE  24F3               	addwf	prodl,w,c
 28901  001300  6ED9               	movwf	fsr2l,c
 28902  001302  0E02               	movlw	high _display_content
 28903  001304  20F4               	addwfc	prodh,w,c
 28904  001306  6EDA               	movwf	fsr2h,c
 28905  001308  0008               	tblrd		*
 28906  00130A  CFF5 FFDF          	movff	tablat,indf2
 28907  00130E  2A25               	incf	__display_failed@cntr,f,c
 28908  001310                     l1637:
 28909  001310  5025               	movf	__display_failed@cntr,w,c
 28910  001312  0D01               	mullw	1
 28911  001314  0EA4               	movlw	low _failed_line1
 28912  001316  24F3               	addwf	prodl,w,c
 28913  001318  6EF6               	movwf	tblptrl,c
 28914  00131A  0E9D               	movlw	high _failed_line1
 28915  00131C  20F4               	addwfc	prodh,w,c
 28916  00131E  6EF7               	movwf	tblptrh,c
 28917  001320                     	if	1	;There are 3 active tblptr bytes
 28918  001320  6AF8               	clrf	tblptru,c
 28919  001322  0E00               	movlw	low (__mediumconst shr (0+16))
 28920  001324  22F8               	addwfc	tblptru,f,c
 28921  001326                     	endif
 28922  001326  0008               	tblrd		*
 28923  001328  50F5               	movf	tablat,w,c
 28924  00132A  0900               	iorlw	0
 28925  00132C  A4D8               	btfss	status,2,c
 28926  00132E  D7D9               	goto	l1638
 28927                           
 28928                           ;display.c: 462: cntr = 0;
 28929  001330  0E00               	movlw	0
 28930  001332  6E25               	movwf	__display_failed@cntr,c
 28931                           
 28932                           ;display.c: 463: while(failed_line2[cntr])
 28933  001334  D017               	goto	l1640
 28934  001336                     
 28935                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 28936  001336  5025               	movf	__display_failed@cntr,w,c
 28937  001338  0D01               	mullw	1
 28938  00133A  0E0E               	movlw	low _failed_line2
 28939  00133C  24F3               	addwf	prodl,w,c
 28940  00133E  6EF6               	movwf	tblptrl,c
 28941  001340  0E9D               	movlw	high _failed_line2
 28942  001342  20F4               	addwfc	prodh,w,c
 28943  001344  6EF7               	movwf	tblptrh,c
 28944  001346                     	if	1	;There are 3 active tblptr bytes
 28945  001346  6AF8               	clrf	tblptru,c
 28946  001348  0E00               	movlw	low (__mediumconst shr (0+16))
 28947  00134A  22F8               	addwfc	tblptru,f,c
 28948  00134C                     	endif
 28949  00134C  5025               	movf	__display_failed@cntr,w,c
 28950  00134E  0D01               	mullw	1
 28951  001350  0E14               	movlw	low (_display_content+20)
 28952  001352  24F3               	addwf	prodl,w,c
 28953  001354  6ED9               	movwf	fsr2l,c
 28954  001356  0E02               	movlw	high (_display_content+20)
 28955  001358  20F4               	addwfc	prodh,w,c
 28956  00135A  6EDA               	movwf	fsr2h,c
 28957  00135C  0008               	tblrd		*
 28958  00135E  CFF5 FFDF          	movff	tablat,indf2
 28959  001362  2A25               	incf	__display_failed@cntr,f,c
 28960  001364                     l1640:
 28961  001364  5025               	movf	__display_failed@cntr,w,c
 28962  001366  0D01               	mullw	1
 28963  001368  0E0E               	movlw	low _failed_line2
 28964  00136A  24F3               	addwf	prodl,w,c
 28965  00136C  6EF6               	movwf	tblptrl,c
 28966  00136E  0E9D               	movlw	high _failed_line2
 28967  001370  20F4               	addwfc	prodh,w,c
 28968  001372  6EF7               	movwf	tblptrh,c
 28969  001374                     	if	1	;There are 3 active tblptr bytes
 28970  001374  6AF8               	clrf	tblptru,c
 28971  001376  0E00               	movlw	low (__mediumconst shr (0+16))
 28972  001378  22F8               	addwfc	tblptru,f,c
 28973  00137A                     	endif
 28974  00137A  0008               	tblrd		*
 28975  00137C  50F5               	movf	tablat,w,c
 28976  00137E  0900               	iorlw	0
 28977  001380  A4D8               	btfss	status,2,c
 28978  001382  D7D9               	goto	l1641
 28979                           
 28980                           ;display.c: 466: cntr = 0;
 28981  001384  0E00               	movlw	0
 28982  001386  6E25               	movwf	__display_failed@cntr,c
 28983                           
 28984                           ;display.c: 467: switch(bootloader_get_error())
 28985  001388  D0D6               	goto	l1643
 28986  00138A                     
 28987                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 28988  00138A  5025               	movf	__display_failed@cntr,w,c
 28989  00138C  0D01               	mullw	1
 28990  00138E  0ED6               	movlw	low _failed_line3_startCode
 28991  001390  24F3               	addwf	prodl,w,c
 28992  001392  6EF6               	movwf	tblptrl,c
 28993  001394  0E9C               	movlw	high _failed_line3_startCode
 28994  001396  20F4               	addwfc	prodh,w,c
 28995  001398  6EF7               	movwf	tblptrh,c
 28996  00139A                     	if	1	;There are 3 active tblptr bytes
 28997  00139A  6AF8               	clrf	tblptru,c
 28998  00139C  0E00               	movlw	low (__mediumconst shr (0+16))
 28999  00139E  22F8               	addwfc	tblptru,f,c
 29000  0013A0                     	endif
 29001  0013A0  5025               	movf	__display_failed@cntr,w,c
 29002  0013A2  0D01               	mullw	1
 29003  0013A4  0E28               	movlw	low (_display_content+40)
 29004  0013A6  24F3               	addwf	prodl,w,c
 29005  0013A8  6ED9               	movwf	fsr2l,c
 29006  0013AA  0E02               	movlw	high (_display_content+40)
 29007  0013AC  20F4               	addwfc	prodh,w,c
 29008  0013AE  6EDA               	movwf	fsr2h,c
 29009  0013B0  0008               	tblrd		*
 29010  0013B2  CFF5 FFDF          	movff	tablat,indf2
 29011  0013B6  2A25               	incf	__display_failed@cntr,f,c
 29012  0013B8  5025               	movf	__display_failed@cntr,w,c
 29013  0013BA  0D01               	mullw	1
 29014  0013BC  0ED6               	movlw	low _failed_line3_startCode
 29015  0013BE  24F3               	addwf	prodl,w,c
 29016  0013C0  6EF6               	movwf	tblptrl,c
 29017  0013C2  0E9C               	movlw	high _failed_line3_startCode
 29018  0013C4  20F4               	addwfc	prodh,w,c
 29019  0013C6  6EF7               	movwf	tblptrh,c
 29020  0013C8                     	if	1	;There are 3 active tblptr bytes
 29021  0013C8  6AF8               	clrf	tblptru,c
 29022  0013CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29023  0013CC  22F8               	addwfc	tblptru,f,c
 29024  0013CE                     	endif
 29025  0013CE  0008               	tblrd		*
 29026  0013D0  50F5               	movf	tablat,w,c
 29027  0013D2  0900               	iorlw	0
 29028  0013D4  B4D8               	btfsc	status,2,c
 29029  0013D6  D0C0               	goto	l1648
 29030  0013D8  D7D8               	goto	l1646
 29031  0013DA                     
 29032                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29033  0013DA  5025               	movf	__display_failed@cntr,w,c
 29034  0013DC  0D01               	mullw	1
 29035  0013DE  0E04               	movlw	low _failed_line3_checksum
 29036  0013E0  24F3               	addwf	prodl,w,c
 29037  0013E2  6EF6               	movwf	tblptrl,c
 29038  0013E4  0E9E               	movlw	high _failed_line3_checksum
 29039  0013E6  20F4               	addwfc	prodh,w,c
 29040  0013E8  6EF7               	movwf	tblptrh,c
 29041  0013EA                     	if	1	;There are 3 active tblptr bytes
 29042  0013EA  6AF8               	clrf	tblptru,c
 29043  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29044  0013EE  22F8               	addwfc	tblptru,f,c
 29045  0013F0                     	endif
 29046  0013F0  5025               	movf	__display_failed@cntr,w,c
 29047  0013F2  0D01               	mullw	1
 29048  0013F4  0E28               	movlw	low (_display_content+40)
 29049  0013F6  24F3               	addwf	prodl,w,c
 29050  0013F8  6ED9               	movwf	fsr2l,c
 29051  0013FA  0E02               	movlw	high (_display_content+40)
 29052  0013FC  20F4               	addwfc	prodh,w,c
 29053  0013FE  6EDA               	movwf	fsr2h,c
 29054  001400  0008               	tblrd		*
 29055  001402  CFF5 FFDF          	movff	tablat,indf2
 29056  001406  2A25               	incf	__display_failed@cntr,f,c
 29057  001408  5025               	movf	__display_failed@cntr,w,c
 29058  00140A  0D01               	mullw	1
 29059  00140C  0E04               	movlw	low _failed_line3_checksum
 29060  00140E  24F3               	addwf	prodl,w,c
 29061  001410  6EF6               	movwf	tblptrl,c
 29062  001412  0E9E               	movlw	high _failed_line3_checksum
 29063  001414  20F4               	addwfc	prodh,w,c
 29064  001416  6EF7               	movwf	tblptrh,c
 29065  001418                     	if	1	;There are 3 active tblptr bytes
 29066  001418  6AF8               	clrf	tblptru,c
 29067  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 29068  00141C  22F8               	addwfc	tblptru,f,c
 29069  00141E                     	endif
 29070  00141E  0008               	tblrd		*
 29071  001420  50F5               	movf	tablat,w,c
 29072  001422  0900               	iorlw	0
 29073  001424  B4D8               	btfsc	status,2,c
 29074  001426  D098               	goto	l1648
 29075  001428  D7D8               	goto	l1651
 29076  00142A                     
 29077                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29078  00142A  5025               	movf	__display_failed@cntr,w,c
 29079  00142C  0D01               	mullw	1
 29080  00142E  0E13               	movlw	low _failed_line3_noNextRecord
 29081  001430  24F3               	addwf	prodl,w,c
 29082  001432  6EF6               	movwf	tblptrl,c
 29083  001434  0E9E               	movlw	high _failed_line3_noNextRecord
 29084  001436  20F4               	addwfc	prodh,w,c
 29085  001438  6EF7               	movwf	tblptrh,c
 29086  00143A                     	if	1	;There are 3 active tblptr bytes
 29087  00143A  6AF8               	clrf	tblptru,c
 29088  00143C  0E00               	movlw	low (__mediumconst shr (0+16))
 29089  00143E  22F8               	addwfc	tblptru,f,c
 29090  001440                     	endif
 29091  001440  5025               	movf	__display_failed@cntr,w,c
 29092  001442  0D01               	mullw	1
 29093  001444  0E28               	movlw	low (_display_content+40)
 29094  001446  24F3               	addwf	prodl,w,c
 29095  001448  6ED9               	movwf	fsr2l,c
 29096  00144A  0E02               	movlw	high (_display_content+40)
 29097  00144C  20F4               	addwfc	prodh,w,c
 29098  00144E  6EDA               	movwf	fsr2h,c
 29099  001450  0008               	tblrd		*
 29100  001452  CFF5 FFDF          	movff	tablat,indf2
 29101  001456  2A25               	incf	__display_failed@cntr,f,c
 29102  001458  5025               	movf	__display_failed@cntr,w,c
 29103  00145A  0D01               	mullw	1
 29104  00145C  0E13               	movlw	low _failed_line3_noNextRecord
 29105  00145E  24F3               	addwf	prodl,w,c
 29106  001460  6EF6               	movwf	tblptrl,c
 29107  001462  0E9E               	movlw	high _failed_line3_noNextRecord
 29108  001464  20F4               	addwfc	prodh,w,c
 29109  001466  6EF7               	movwf	tblptrh,c
 29110  001468                     	if	1	;There are 3 active tblptr bytes
 29111  001468  6AF8               	clrf	tblptru,c
 29112  00146A  0E00               	movlw	low (__mediumconst shr (0+16))
 29113  00146C  22F8               	addwfc	tblptru,f,c
 29114  00146E                     	endif
 29115  00146E  0008               	tblrd		*
 29116  001470  50F5               	movf	tablat,w,c
 29117  001472  0900               	iorlw	0
 29118  001474  B4D8               	btfsc	status,2,c
 29119  001476  D070               	goto	l1648
 29120  001478  D7D8               	goto	l1655
 29121  00147A                     
 29122                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29123  00147A  5025               	movf	__display_failed@cntr,w,c
 29124  00147C  0D01               	mullw	1
 29125  00147E  0E31               	movlw	low _failed_line3_dataTooLong
 29126  001480  24F3               	addwf	prodl,w,c
 29127  001482  6EF6               	movwf	tblptrl,c
 29128  001484  0E9E               	movlw	high _failed_line3_dataTooLong
 29129  001486  20F4               	addwfc	prodh,w,c
 29130  001488  6EF7               	movwf	tblptrh,c
 29131  00148A                     	if	1	;There are 3 active tblptr bytes
 29132  00148A  6AF8               	clrf	tblptru,c
 29133  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
 29134  00148E  22F8               	addwfc	tblptru,f,c
 29135  001490                     	endif
 29136  001490  5025               	movf	__display_failed@cntr,w,c
 29137  001492  0D01               	mullw	1
 29138  001494  0E28               	movlw	low (_display_content+40)
 29139  001496  24F3               	addwf	prodl,w,c
 29140  001498  6ED9               	movwf	fsr2l,c
 29141  00149A  0E02               	movlw	high (_display_content+40)
 29142  00149C  20F4               	addwfc	prodh,w,c
 29143  00149E  6EDA               	movwf	fsr2h,c
 29144  0014A0  0008               	tblrd		*
 29145  0014A2  CFF5 FFDF          	movff	tablat,indf2
 29146  0014A6  2A25               	incf	__display_failed@cntr,f,c
 29147  0014A8  5025               	movf	__display_failed@cntr,w,c
 29148  0014AA  0D01               	mullw	1
 29149  0014AC  0E31               	movlw	low _failed_line3_dataTooLong
 29150  0014AE  24F3               	addwf	prodl,w,c
 29151  0014B0  6EF6               	movwf	tblptrl,c
 29152  0014B2  0E9E               	movlw	high _failed_line3_dataTooLong
 29153  0014B4  20F4               	addwfc	prodh,w,c
 29154  0014B6  6EF7               	movwf	tblptrh,c
 29155  0014B8                     	if	1	;There are 3 active tblptr bytes
 29156  0014B8  6AF8               	clrf	tblptru,c
 29157  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
 29158  0014BC  22F8               	addwfc	tblptru,f,c
 29159  0014BE                     	endif
 29160  0014BE  0008               	tblrd		*
 29161  0014C0  50F5               	movf	tablat,w,c
 29162  0014C2  0900               	iorlw	0
 29163  0014C4  B4D8               	btfsc	status,2,c
 29164  0014C6  D048               	goto	l1648
 29165  0014C8  D7D8               	goto	l1659
 29166  0014CA                     
 29167                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 29168  0014CA  5025               	movf	__display_failed@cntr,w,c
 29169  0014CC  0D01               	mullw	1
 29170  0014CE  0EAE               	movlw	low _failed_line3_addressRange
 29171  0014D0  24F3               	addwf	prodl,w,c
 29172  0014D2  6EF6               	movwf	tblptrl,c
 29173  0014D4  0E9C               	movlw	high _failed_line3_addressRange
 29174  0014D6  20F4               	addwfc	prodh,w,c
 29175  0014D8  6EF7               	movwf	tblptrh,c
 29176  0014DA                     	if	1	;There are 3 active tblptr bytes
 29177  0014DA  6AF8               	clrf	tblptru,c
 29178  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29179  0014DE  22F8               	addwfc	tblptru,f,c
 29180  0014E0                     	endif
 29181  0014E0  5025               	movf	__display_failed@cntr,w,c
 29182  0014E2  0D01               	mullw	1
 29183  0014E4  0E28               	movlw	low (_display_content+40)
 29184  0014E6  24F3               	addwf	prodl,w,c
 29185  0014E8  6ED9               	movwf	fsr2l,c
 29186  0014EA  0E02               	movlw	high (_display_content+40)
 29187  0014EC  20F4               	addwfc	prodh,w,c
 29188  0014EE  6EDA               	movwf	fsr2h,c
 29189  0014F0  0008               	tblrd		*
 29190  0014F2  CFF5 FFDF          	movff	tablat,indf2
 29191  0014F6  2A25               	incf	__display_failed@cntr,f,c
 29192  0014F8  5025               	movf	__display_failed@cntr,w,c
 29193  0014FA  0D01               	mullw	1
 29194  0014FC  0EAE               	movlw	low _failed_line3_addressRange
 29195  0014FE  24F3               	addwf	prodl,w,c
 29196  001500  6EF6               	movwf	tblptrl,c
 29197  001502  0E9C               	movlw	high _failed_line3_addressRange
 29198  001504  20F4               	addwfc	prodh,w,c
 29199  001506  6EF7               	movwf	tblptrh,c
 29200  001508                     	if	1	;There are 3 active tblptr bytes
 29201  001508  6AF8               	clrf	tblptru,c
 29202  00150A  0E00               	movlw	low (__mediumconst shr (0+16))
 29203  00150C  22F8               	addwfc	tblptru,f,c
 29204  00150E                     	endif
 29205  00150E  0008               	tblrd		*
 29206  001510  50F5               	movf	tablat,w,c
 29207  001512  0900               	iorlw	0
 29208  001514  A4D8               	btfss	status,2,c
 29209  001516  D7D9               	goto	l1663
 29210                           
 29211                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29212  001518  EC97  F047         	call	_bootloader_get_rec_address	;wreg free
 29213  00151C  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29214  001520  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29215  001524  6A21               	clrf	__display_itoa_u32@value+2,c
 29216  001526  6A22               	clrf	__display_itoa_u32@value+3,c
 29217  001528  0E4A               	movlw	low (_display_content+74)
 29218  00152A  6E23               	movwf	__display_itoa_u32@text,c
 29219  00152C  0E02               	movlw	high (_display_content+74)
 29220  00152E  6E24               	movwf	__display_itoa_u32@text+1,c
 29221  001530  EC15  F006         	call	__display_itoa_u32	;wreg free
 29222                           
 29223                           ;display.c: 497: }
 29224                           
 29225                           ;display.c: 495: break;
 29226  001534  D011               	goto	l1648
 29227  001536                     l1643:
 29228  001536  ECD0  F047         	call	_bootloader_get_error	;wreg free
 29229                           
 29230                           ; Switch size 1, requested type "space"
 29231                           ; Number of cases is 5, Range of values is 11 to 15
 29232                           ; switch strategies available:
 29233                           ; Name         Instructions Cycles
 29234                           ; simple_byte           16     9 (average)
 29235                           ;	Chosen strategy is simple_byte
 29236  00153A  0A0B               	xorlw	11	; case 11
 29237  00153C  B4D8               	btfsc	status,2,c
 29238  00153E  D7DC               	goto	l1662
 29239  001540  0A07               	xorlw	7	; case 12
 29240  001542  B4D8               	btfsc	status,2,c
 29241  001544  D7B1               	goto	l1658
 29242  001546  0A01               	xorlw	1	; case 13
 29243  001548  B4D8               	btfsc	status,2,c
 29244  00154A  D786               	goto	l1654
 29245  00154C  0A03               	xorlw	3	; case 14
 29246  00154E  B4D8               	btfsc	status,2,c
 29247  001550  D75B               	goto	l1650
 29248  001552  0A01               	xorlw	1	; case 15
 29249  001554  B4D8               	btfsc	status,2,c
 29250  001556  D730               	goto	l1645
 29251  001558                     l1648:
 29252                           
 29253                           ;display.c: 499: cntr = 0;
 29254  001558  0E00               	movlw	0
 29255  00155A  6E25               	movwf	__display_failed@cntr,c
 29256                           
 29257                           ;display.c: 500: while(failed_line4[cntr])
 29258  00155C  D017               	goto	l1665
 29259  00155E                     
 29260                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 29261  00155E  5025               	movf	__display_failed@cntr,w,c
 29262  001560  0D01               	mullw	1
 29263  001562  0E6B               	movlw	low _failed_line4
 29264  001564  24F3               	addwf	prodl,w,c
 29265  001566  6EF6               	movwf	tblptrl,c
 29266  001568  0E9E               	movlw	high _failed_line4
 29267  00156A  20F4               	addwfc	prodh,w,c
 29268  00156C  6EF7               	movwf	tblptrh,c
 29269  00156E                     	if	1	;There are 3 active tblptr bytes
 29270  00156E  6AF8               	clrf	tblptru,c
 29271  001570  0E00               	movlw	low (__mediumconst shr (0+16))
 29272  001572  22F8               	addwfc	tblptru,f,c
 29273  001574                     	endif
 29274  001574  5025               	movf	__display_failed@cntr,w,c
 29275  001576  0D01               	mullw	1
 29276  001578  0E3C               	movlw	low (_display_content+60)
 29277  00157A  24F3               	addwf	prodl,w,c
 29278  00157C  6ED9               	movwf	fsr2l,c
 29279  00157E  0E02               	movlw	high (_display_content+60)
 29280  001580  20F4               	addwfc	prodh,w,c
 29281  001582  6EDA               	movwf	fsr2h,c
 29282  001584  0008               	tblrd		*
 29283  001586  CFF5 FFDF          	movff	tablat,indf2
 29284  00158A  2A25               	incf	__display_failed@cntr,f,c
 29285  00158C                     l1665:
 29286  00158C  5025               	movf	__display_failed@cntr,w,c
 29287  00158E  0D01               	mullw	1
 29288  001590  0E6B               	movlw	low _failed_line4
 29289  001592  24F3               	addwf	prodl,w,c
 29290  001594  6EF6               	movwf	tblptrl,c
 29291  001596  0E9E               	movlw	high _failed_line4
 29292  001598  20F4               	addwfc	prodh,w,c
 29293  00159A  6EF7               	movwf	tblptrh,c
 29294  00159C                     	if	1	;There are 3 active tblptr bytes
 29295  00159C  6AF8               	clrf	tblptru,c
 29296  00159E  0E00               	movlw	low (__mediumconst shr (0+16))
 29297  0015A0  22F8               	addwfc	tblptru,f,c
 29298  0015A2                     	endif
 29299  0015A2  0008               	tblrd		*
 29300  0015A4  50F5               	movf	tablat,w,c
 29301  0015A6  0900               	iorlw	0
 29302  0015A8  A4D8               	btfss	status,2,c
 29303  0015AA  D7D9               	goto	l1666
 29304                           
 29305                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29306  0015AC  EC9C  F047         	call	_bootloader_get_entries	;wreg free
 29307  0015B0  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29308  0015B4  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29309  0015B8  6A1B               	clrf	__display_itoa_u16@value+2,c
 29310  0015BA  6A1C               	clrf	__display_itoa_u16@value+3,c
 29311  0015BC  5025               	movf	__display_failed@cntr,w,c
 29312  0015BE  0D01               	mullw	1
 29313  0015C0  0E3C               	movlw	low (_display_content+60)
 29314  0015C2  24F3               	addwf	prodl,w,c
 29315  0015C4  6E1D               	movwf	__display_itoa_u16@text,c
 29316  0015C6  0E02               	movlw	high (_display_content+60)
 29317  0015C8  20F4               	addwfc	prodh,w,c
 29318  0015CA  6E1E               	movwf	__display_itoa_u16@text+1,c
 29319  0015CC  EC10  F030         	call	__display_itoa_u16	;wreg free
 29320  0015D0  0012               	return		;funcret
 29321  0015D2                     __end_of__display_failed:
 29322                           	opt stack 0
 29323                           tosu	equ	0xFFF
 29324                           tosh	equ	0xFFE
 29325                           tosl	equ	0xFFD
 29326                           pclath	equ	0xFFA
 29327                           tblptru	equ	0xFF8
 29328                           tblptrh	equ	0xFF7
 29329                           tblptrl	equ	0xFF6
 29330                           tablat	equ	0xFF5
 29331                           prodh	equ	0xFF4
 29332                           prodl	equ	0xFF3
 29333                           intcon	equ	0xFF2
 29334                           intcon2	equ	0xFF1
 29335                           intcon3	equ	0xFF0
 29336                           indf0	equ	0xFEF
 29337                           postinc0	equ	0xFEE
 29338                           fsr0h	equ	0xFEA
 29339                           fsr0l	equ	0xFE9
 29340                           wreg	equ	0xFE8
 29341                           indf1	equ	0xFE7
 29342                           postdec1	equ	0xFE5
 29343                           plusw1	equ	0xFE3
 29344                           fsr1h	equ	0xFE2
 29345                           fsr1l	equ	0xFE1
 29346                           indf2	equ	0xFDF
 29347                           postinc2	equ	0xFDE
 29348                           postdec2	equ	0xFDD
 29349                           plusw2	equ	0xFDB
 29350                           fsr2h	equ	0xFDA
 29351                           fsr2l	equ	0xFD9
 29352                           status	equ	0xFD8
 29353                           
 29354 ;; *************** function _bootloader_get_rec_address *****************
 29355 ;; Defined at:
 29356 ;;		line 485 in file "bootloader.c"
 29357 ;; Parameters:    Size  Location     Type
 29358 ;;		None
 29359 ;; Auto vars:     Size  Location     Type
 29360 ;;		None
 29361 ;; Return value:  Size  Location     Type
 29362 ;;                  2    0[COMRAM] unsigned int 
 29363 ;; Registers used:
 29364 ;;		None
 29365 ;; Tracked objects:
 29366 ;;		On entry : 0/0
 29367 ;;		On exit  : 0/0
 29368 ;;		Unchanged: 0/0
 29369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29370 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29371 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29372 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29373 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29374 ;;Total ram usage:        2 bytes
 29375 ;; Hardware stack levels used:    1
 29376 ;; This function calls:
 29377 ;;		Nothing
 29378 ;; This function is called by:
 29379 ;;		__display_failed
 29380 ;;		__fill_buffer_get_bootloader_details
 29381 ;; This function uses a non-reentrant model
 29382 ;;
 29383                           
 29384                           	psect	text140
 29385  008F2E                     __ptext140:
 29386                           	opt stack 0
 29387  008F2E                     _bootloader_get_rec_address:
 29388                           	opt stack 25
 29389                           
 29390                           ;bootloader.c: 488: return hex_file_entry.address;
 29391                           
 29392                           ;incstack = 0
 29393  008F2E  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29394  008F32  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29395  008F36  0012               	return		;funcret
 29396  008F38                     __end_of_bootloader_get_rec_address:
 29397                           	opt stack 0
 29398                           tosu	equ	0xFFF
 29399                           tosh	equ	0xFFE
 29400                           tosl	equ	0xFFD
 29401                           pclath	equ	0xFFA
 29402                           tblptru	equ	0xFF8
 29403                           tblptrh	equ	0xFF7
 29404                           tblptrl	equ	0xFF6
 29405                           tablat	equ	0xFF5
 29406                           prodh	equ	0xFF4
 29407                           prodl	equ	0xFF3
 29408                           intcon	equ	0xFF2
 29409                           intcon2	equ	0xFF1
 29410                           intcon3	equ	0xFF0
 29411                           indf0	equ	0xFEF
 29412                           postinc0	equ	0xFEE
 29413                           fsr0h	equ	0xFEA
 29414                           fsr0l	equ	0xFE9
 29415                           wreg	equ	0xFE8
 29416                           indf1	equ	0xFE7
 29417                           postdec1	equ	0xFE5
 29418                           plusw1	equ	0xFE3
 29419                           fsr1h	equ	0xFE2
 29420                           fsr1l	equ	0xFE1
 29421                           indf2	equ	0xFDF
 29422                           postinc2	equ	0xFDE
 29423                           postdec2	equ	0xFDD
 29424                           plusw2	equ	0xFDB
 29425                           fsr2h	equ	0xFDA
 29426                           fsr2l	equ	0xFD9
 29427                           status	equ	0xFD8
 29428                           
 29429 ;; *************** function _bootloader_get_error *****************
 29430 ;; Defined at:
 29431 ;;		line 475 in file "bootloader.c"
 29432 ;; Parameters:    Size  Location     Type
 29433 ;;		None
 29434 ;; Auto vars:     Size  Location     Type
 29435 ;;		None
 29436 ;; Return value:  Size  Location     Type
 29437 ;;                  1    wreg      enum E7014
 29438 ;; Registers used:
 29439 ;;		wreg, status,2
 29440 ;; Tracked objects:
 29441 ;;		On entry : 0/0
 29442 ;;		On exit  : 0/0
 29443 ;;		Unchanged: 0/0
 29444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29449 ;;Total ram usage:        0 bytes
 29450 ;; Hardware stack levels used:    1
 29451 ;; This function calls:
 29452 ;;		Nothing
 29453 ;; This function is called by:
 29454 ;;		__display_failed
 29455 ;;		__fill_buffer_get_bootloader_details
 29456 ;; This function uses a non-reentrant model
 29457 ;;
 29458                           
 29459                           	psect	text141
 29460  008FA0                     __ptext141:
 29461                           	opt stack 0
 29462  008FA0                     _bootloader_get_error:
 29463                           	opt stack 25
 29464                           
 29465                           ;bootloader.c: 477: return last_error;
 29466                           
 29467                           ;incstack = 0
 29468  008FA0  0101               	movlb	1	; () banked
 29469  008FA2  518C               	movf	_last_error& (0+255),w,b
 29470  008FA4  0012               	return	
 29471  008FA6                     __end_of_bootloader_get_error:
 29472                           	opt stack 0
 29473                           tosu	equ	0xFFF
 29474                           tosh	equ	0xFFE
 29475                           tosl	equ	0xFFD
 29476                           pclath	equ	0xFFA
 29477                           tblptru	equ	0xFF8
 29478                           tblptrh	equ	0xFF7
 29479                           tblptrl	equ	0xFF6
 29480                           tablat	equ	0xFF5
 29481                           prodh	equ	0xFF4
 29482                           prodl	equ	0xFF3
 29483                           intcon	equ	0xFF2
 29484                           intcon2	equ	0xFF1
 29485                           intcon3	equ	0xFF0
 29486                           indf0	equ	0xFEF
 29487                           postinc0	equ	0xFEE
 29488                           fsr0h	equ	0xFEA
 29489                           fsr0l	equ	0xFE9
 29490                           wreg	equ	0xFE8
 29491                           indf1	equ	0xFE7
 29492                           postdec1	equ	0xFE5
 29493                           plusw1	equ	0xFE3
 29494                           fsr1h	equ	0xFE2
 29495                           fsr1l	equ	0xFE1
 29496                           indf2	equ	0xFDF
 29497                           postinc2	equ	0xFDE
 29498                           postdec2	equ	0xFDD
 29499                           plusw2	equ	0xFDB
 29500                           fsr2h	equ	0xFDA
 29501                           fsr2l	equ	0xFD9
 29502                           status	equ	0xFD8
 29503                           
 29504 ;; *************** function _bootloader_get_entries *****************
 29505 ;; Defined at:
 29506 ;;		line 465 in file "bootloader.c"
 29507 ;; Parameters:    Size  Location     Type
 29508 ;;		None
 29509 ;; Auto vars:     Size  Location     Type
 29510 ;;		None
 29511 ;; Return value:  Size  Location     Type
 29512 ;;                  2    0[COMRAM] unsigned int 
 29513 ;; Registers used:
 29514 ;;		None
 29515 ;; Tracked objects:
 29516 ;;		On entry : 0/0
 29517 ;;		On exit  : 0/0
 29518 ;;		Unchanged: 0/0
 29519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29520 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29521 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29523 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29524 ;;Total ram usage:        2 bytes
 29525 ;; Hardware stack levels used:    1
 29526 ;; This function calls:
 29527 ;;		Nothing
 29528 ;; This function is called by:
 29529 ;;		__display_verify
 29530 ;;		__display_failed
 29531 ;;		__display_programming
 29532 ;;		__fill_buffer_get_bootloader_details
 29533 ;; This function uses a non-reentrant model
 29534 ;;
 29535                           
 29536                           	psect	text142
 29537  008F38                     __ptext142:
 29538                           	opt stack 0
 29539  008F38                     _bootloader_get_entries:
 29540                           	opt stack 25
 29541                           
 29542                           ;bootloader.c: 467: return hex_file_entries;
 29543                           
 29544                           ; BSR set to: 1
 29545                           ;incstack = 0
 29546  008F38  C178  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29547  008F3C  C179  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29548  008F40  0012               	return		;funcret
 29549  008F42                     __end_of_bootloader_get_entries:
 29550                           	opt stack 0
 29551                           tosu	equ	0xFFF
 29552                           tosh	equ	0xFFE
 29553                           tosl	equ	0xFFD
 29554                           pclath	equ	0xFFA
 29555                           tblptru	equ	0xFF8
 29556                           tblptrh	equ	0xFF7
 29557                           tblptrl	equ	0xFF6
 29558                           tablat	equ	0xFF5
 29559                           prodh	equ	0xFF4
 29560                           prodl	equ	0xFF3
 29561                           intcon	equ	0xFF2
 29562                           intcon2	equ	0xFF1
 29563                           intcon3	equ	0xFF0
 29564                           indf0	equ	0xFEF
 29565                           postinc0	equ	0xFEE
 29566                           fsr0h	equ	0xFEA
 29567                           fsr0l	equ	0xFE9
 29568                           wreg	equ	0xFE8
 29569                           indf1	equ	0xFE7
 29570                           postdec1	equ	0xFE5
 29571                           plusw1	equ	0xFE3
 29572                           fsr1h	equ	0xFE2
 29573                           fsr1l	equ	0xFE1
 29574                           indf2	equ	0xFDF
 29575                           postinc2	equ	0xFDE
 29576                           postdec2	equ	0xFDD
 29577                           plusw2	equ	0xFDB
 29578                           fsr2h	equ	0xFDA
 29579                           fsr2l	equ	0xFD9
 29580                           status	equ	0xFD8
 29581                           
 29582 ;; *************** function __display_itoa_u32 *****************
 29583 ;; Defined at:
 29584 ;;		line 172 in file "display.c"
 29585 ;; Parameters:    Size  Location     Type
 29586 ;;  value           4   30[COMRAM] unsigned long 
 29587 ;;  text            2   34[COMRAM] PTR unsigned char 
 29588 ;;		 -> display_content(80), 
 29589 ;; Auto vars:     Size  Location     Type
 29590 ;;		None
 29591 ;; Return value:  Size  Location     Type
 29592 ;;                  1    wreg      unsigned char 
 29593 ;; Registers used:
 29594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29595 ;; Tracked objects:
 29596 ;;		On entry : 0/0
 29597 ;;		On exit  : 0/0
 29598 ;;		Unchanged: 0/0
 29599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29600 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29601 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29602 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29603 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29604 ;;Total ram usage:        6 bytes
 29605 ;; Hardware stack levels used:    1
 29606 ;; Hardware stack levels required when called:    4
 29607 ;; This function calls:
 29608 ;;		___lldiv
 29609 ;;		___llmod
 29610 ;;		__display_itoa_u16
 29611 ;;		_itoa
 29612 ;; This function is called by:
 29613 ;;		__display_start
 29614 ;;		__display_found
 29615 ;;		__display_failed
 29616 ;; This function uses a non-reentrant model
 29617 ;;
 29618                           
 29619                           	psect	text143
 29620  000C2A                     __ptext143:
 29621                           	opt stack 0
 29622  000C2A                     __display_itoa_u32:
 29623                           	opt stack 21
 29624                           
 29625                           ;display.c: 175: if(value<=0x7FFF)
 29626                           
 29627                           ;incstack = 0
 29628  000C2A  5022               	movf	__display_itoa_u32@value+3,w,c
 29629  000C2C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29630  000C2E  E111               	bnz	l11179
 29631  000C30  0E80               	movlw	128
 29632  000C32  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29633  000C34  B0D8               	btfsc	status,0,c
 29634  000C36  D00D               	goto	l1508
 29635                           
 29636                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29637  000C38  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29638  000C3C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29639  000C40  6A1B               	clrf	__display_itoa_u16@value+2,c
 29640  000C42  6A1C               	clrf	__display_itoa_u16@value+3,c
 29641  000C44  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29642  000C48  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29643  000C4C  EC10  F030         	call	__display_itoa_u16	;wreg free
 29644  000C50  0012               	return	
 29645  000C52                     l1508:
 29646  000C52                     l11179:
 29647                           
 29648                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29649  000C52  041F               	decf	__display_itoa_u32@value,w,c
 29650  000C54  0EE1               	movlw	225
 29651  000C56  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29652  000C58  0EF5               	movlw	245
 29653  000C5A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29654  000C5C  0E05               	movlw	5
 29655  000C5E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29656  000C60  A0D8               	btfss	status,0,c
 29657  000C62  D04C               	goto	l1510
 29658                           
 29659                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29660  000C64  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29661  000C68  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29662  000C6C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29663  000C70  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29664  000C74  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29665  000C78  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29666  000C7C  0E10               	movlw	16
 29667  000C7E  6E05               	movwf	___lldiv@divisor,c
 29668  000C80  0E27               	movlw	39
 29669  000C82  6E06               	movwf	___lldiv@divisor+1,c
 29670  000C84  0E00               	movlw	0
 29671  000C86  6E07               	movwf	___lldiv@divisor+2,c
 29672  000C88  0E00               	movlw	0
 29673  000C8A  6E08               	movwf	___lldiv@divisor+3,c
 29674  000C8C  EC80  F039         	call	___lldiv	;wreg free
 29675  000C90  C001  F013         	movff	?___lldiv,itoa@val
 29676  000C94  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29677  000C98  0E00               	movlw	0
 29678  000C9A  6E16               	movwf	itoa@base+1,c
 29679  000C9C  0E0A               	movlw	10
 29680  000C9E  6E15               	movwf	itoa@base,c
 29681  000CA0  EC77  F042         	call	_itoa	;wreg free
 29682                           
 29683                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29684  000CA4  0E05               	movlw	5
 29685  000CA6  2423               	addwf	__display_itoa_u32@text,w,c
 29686  000CA8  6E11               	movwf	itoa@buf,c
 29687  000CAA  0E00               	movlw	0
 29688  000CAC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29689  000CAE  6E12               	movwf	itoa@buf+1,c
 29690  000CB0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29691  000CB4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29692  000CB8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29693  000CBC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29694  000CC0  0E10               	movlw	16
 29695  000CC2  6E05               	movwf	___llmod@divisor,c
 29696  000CC4  0E27               	movlw	39
 29697  000CC6  6E06               	movwf	___llmod@divisor+1,c
 29698  000CC8  0E00               	movlw	0
 29699  000CCA  6E07               	movwf	___llmod@divisor+2,c
 29700  000CCC  0E00               	movlw	0
 29701  000CCE  6E08               	movwf	___llmod@divisor+3,c
 29702  000CD0  ECAE  F03C         	call	___llmod	;wreg free
 29703  000CD4  C001  F013         	movff	?___llmod,itoa@val
 29704  000CD8  C002  F014         	movff	?___llmod+1,itoa@val+1
 29705  000CDC  0E00               	movlw	0
 29706  000CDE  6E16               	movwf	itoa@base+1,c
 29707  000CE0  0E0A               	movlw	10
 29708  000CE2  6E15               	movwf	itoa@base,c
 29709  000CE4  EC77  F042         	call	_itoa	;wreg free
 29710                           
 29711                           ;display.c: 185: *(text+9) = ' ';
 29712  000CE8  EE20 F009          	lfsr	2,9
 29713  000CEC  5023               	movf	__display_itoa_u32@text,w,c
 29714  000CEE  26D9               	addwf	fsr2l,f,c
 29715  000CF0  5024               	movf	__display_itoa_u32@text+1,w,c
 29716  000CF2  22DA               	addwfc	fsr2h,f,c
 29717  000CF4  0E20               	movlw	32
 29718  000CF6  6EDF               	movwf	indf2,c
 29719                           
 29720                           ;display.c: 186: return 9;
 29721  000CF8  0E09               	movlw	9
 29722                           
 29723                           ;display.c: 187: }
 29724  000CFA  0012               	return	
 29725  000CFC                     l1510:
 29726                           
 29727                           ;display.c: 188: else if(value>10000000)
 29728  000CFC  5022               	movf	__display_itoa_u32@value+3,w,c
 29729  000CFE  E108               	bnz	u7900
 29730  000D00  0E81               	movlw	129
 29731  000D02  5C1F               	subwf	__display_itoa_u32@value,w,c
 29732  000D04  0E96               	movlw	150
 29733  000D06  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29734  000D08  0E98               	movlw	152
 29735  000D0A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29736  000D0C  A0D8               	btfss	status,0,c
 29737  000D0E  D04C               	goto	l1512
 29738  000D10                     u7900:
 29739                           
 29740                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29741  000D10  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29742  000D14  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29743  000D18  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29744  000D1C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29745  000D20  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29746  000D24  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29747  000D28  0E10               	movlw	16
 29748  000D2A  6E05               	movwf	___lldiv@divisor,c
 29749  000D2C  0E27               	movlw	39
 29750  000D2E  6E06               	movwf	___lldiv@divisor+1,c
 29751  000D30  0E00               	movlw	0
 29752  000D32  6E07               	movwf	___lldiv@divisor+2,c
 29753  000D34  0E00               	movlw	0
 29754  000D36  6E08               	movwf	___lldiv@divisor+3,c
 29755  000D38  EC80  F039         	call	___lldiv	;wreg free
 29756  000D3C  C001  F013         	movff	?___lldiv,itoa@val
 29757  000D40  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29758  000D44  0E00               	movlw	0
 29759  000D46  6E16               	movwf	itoa@base+1,c
 29760  000D48  0E0A               	movlw	10
 29761  000D4A  6E15               	movwf	itoa@base,c
 29762  000D4C  EC77  F042         	call	_itoa	;wreg free
 29763                           
 29764                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29765  000D50  0E04               	movlw	4
 29766  000D52  2423               	addwf	__display_itoa_u32@text,w,c
 29767  000D54  6E11               	movwf	itoa@buf,c
 29768  000D56  0E00               	movlw	0
 29769  000D58  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29770  000D5A  6E12               	movwf	itoa@buf+1,c
 29771  000D5C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29772  000D60  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29773  000D64  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29774  000D68  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29775  000D6C  0E10               	movlw	16
 29776  000D6E  6E05               	movwf	___llmod@divisor,c
 29777  000D70  0E27               	movlw	39
 29778  000D72  6E06               	movwf	___llmod@divisor+1,c
 29779  000D74  0E00               	movlw	0
 29780  000D76  6E07               	movwf	___llmod@divisor+2,c
 29781  000D78  0E00               	movlw	0
 29782  000D7A  6E08               	movwf	___llmod@divisor+3,c
 29783  000D7C  ECAE  F03C         	call	___llmod	;wreg free
 29784  000D80  C001  F013         	movff	?___llmod,itoa@val
 29785  000D84  C002  F014         	movff	?___llmod+1,itoa@val+1
 29786  000D88  0E00               	movlw	0
 29787  000D8A  6E16               	movwf	itoa@base+1,c
 29788  000D8C  0E0A               	movlw	10
 29789  000D8E  6E15               	movwf	itoa@base,c
 29790  000D90  EC77  F042         	call	_itoa	;wreg free
 29791                           
 29792                           ;display.c: 192: *(text+8) = ' ';
 29793  000D94  EE20 F008          	lfsr	2,8
 29794  000D98  5023               	movf	__display_itoa_u32@text,w,c
 29795  000D9A  26D9               	addwf	fsr2l,f,c
 29796  000D9C  5024               	movf	__display_itoa_u32@text+1,w,c
 29797  000D9E  22DA               	addwfc	fsr2h,f,c
 29798  000DA0  0E20               	movlw	32
 29799  000DA2  6EDF               	movwf	indf2,c
 29800                           
 29801                           ;display.c: 193: return 8;
 29802  000DA4  0E08               	movlw	8
 29803                           
 29804                           ;display.c: 194: }
 29805  000DA6  0012               	return	
 29806  000DA8                     l1512:
 29807                           
 29808                           ;display.c: 195: else if(value>1000000)
 29809  000DA8  5022               	movf	__display_itoa_u32@value+3,w,c
 29810  000DAA  E108               	bnz	u7910
 29811  000DAC  0E41               	movlw	65
 29812  000DAE  5C1F               	subwf	__display_itoa_u32@value,w,c
 29813  000DB0  0E42               	movlw	66
 29814  000DB2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29815  000DB4  0E0F               	movlw	15
 29816  000DB6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29817  000DB8  A0D8               	btfss	status,0,c
 29818  000DBA  D04C               	goto	l1514
 29819  000DBC                     u7910:
 29820                           
 29821                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29822  000DBC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29823  000DC0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29824  000DC4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29825  000DC8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29826  000DCC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29827  000DD0  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29828  000DD4  0E10               	movlw	16
 29829  000DD6  6E05               	movwf	___lldiv@divisor,c
 29830  000DD8  0E27               	movlw	39
 29831  000DDA  6E06               	movwf	___lldiv@divisor+1,c
 29832  000DDC  0E00               	movlw	0
 29833  000DDE  6E07               	movwf	___lldiv@divisor+2,c
 29834  000DE0  0E00               	movlw	0
 29835  000DE2  6E08               	movwf	___lldiv@divisor+3,c
 29836  000DE4  EC80  F039         	call	___lldiv	;wreg free
 29837  000DE8  C001  F013         	movff	?___lldiv,itoa@val
 29838  000DEC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29839  000DF0  0E00               	movlw	0
 29840  000DF2  6E16               	movwf	itoa@base+1,c
 29841  000DF4  0E0A               	movlw	10
 29842  000DF6  6E15               	movwf	itoa@base,c
 29843  000DF8  EC77  F042         	call	_itoa	;wreg free
 29844                           
 29845                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 29846  000DFC  0E03               	movlw	3
 29847  000DFE  2423               	addwf	__display_itoa_u32@text,w,c
 29848  000E00  6E11               	movwf	itoa@buf,c
 29849  000E02  0E00               	movlw	0
 29850  000E04  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29851  000E06  6E12               	movwf	itoa@buf+1,c
 29852  000E08  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29853  000E0C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29854  000E10  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29855  000E14  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29856  000E18  0E10               	movlw	16
 29857  000E1A  6E05               	movwf	___llmod@divisor,c
 29858  000E1C  0E27               	movlw	39
 29859  000E1E  6E06               	movwf	___llmod@divisor+1,c
 29860  000E20  0E00               	movlw	0
 29861  000E22  6E07               	movwf	___llmod@divisor+2,c
 29862  000E24  0E00               	movlw	0
 29863  000E26  6E08               	movwf	___llmod@divisor+3,c
 29864  000E28  ECAE  F03C         	call	___llmod	;wreg free
 29865  000E2C  C001  F013         	movff	?___llmod,itoa@val
 29866  000E30  C002  F014         	movff	?___llmod+1,itoa@val+1
 29867  000E34  0E00               	movlw	0
 29868  000E36  6E16               	movwf	itoa@base+1,c
 29869  000E38  0E0A               	movlw	10
 29870  000E3A  6E15               	movwf	itoa@base,c
 29871  000E3C  EC77  F042         	call	_itoa	;wreg free
 29872                           
 29873                           ;display.c: 199: *(text+7) = ' ';
 29874  000E40  EE20 F007          	lfsr	2,7
 29875  000E44  5023               	movf	__display_itoa_u32@text,w,c
 29876  000E46  26D9               	addwf	fsr2l,f,c
 29877  000E48  5024               	movf	__display_itoa_u32@text+1,w,c
 29878  000E4A  22DA               	addwfc	fsr2h,f,c
 29879  000E4C  0E20               	movlw	32
 29880  000E4E  6EDF               	movwf	indf2,c
 29881                           
 29882                           ;display.c: 200: return 7;
 29883  000E50  0E07               	movlw	7
 29884                           
 29885                           ;display.c: 201: }
 29886  000E52  0012               	return	
 29887  000E54                     l1514:
 29888                           
 29889                           ;display.c: 202: else if(value>100000)
 29890  000E54  5022               	movf	__display_itoa_u32@value+3,w,c
 29891  000E56  E108               	bnz	u7920
 29892  000E58  0EA1               	movlw	161
 29893  000E5A  5C1F               	subwf	__display_itoa_u32@value,w,c
 29894  000E5C  0E86               	movlw	134
 29895  000E5E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29896  000E60  0E01               	movlw	1
 29897  000E62  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29898  000E64  A0D8               	btfss	status,0,c
 29899  000E66  D04C               	goto	l1516
 29900  000E68                     u7920:
 29901                           
 29902                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 29903  000E68  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29904  000E6C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29905  000E70  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29906  000E74  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29907  000E78  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29908  000E7C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29909  000E80  0E10               	movlw	16
 29910  000E82  6E05               	movwf	___lldiv@divisor,c
 29911  000E84  0E27               	movlw	39
 29912  000E86  6E06               	movwf	___lldiv@divisor+1,c
 29913  000E88  0E00               	movlw	0
 29914  000E8A  6E07               	movwf	___lldiv@divisor+2,c
 29915  000E8C  0E00               	movlw	0
 29916  000E8E  6E08               	movwf	___lldiv@divisor+3,c
 29917  000E90  EC80  F039         	call	___lldiv	;wreg free
 29918  000E94  C001  F013         	movff	?___lldiv,itoa@val
 29919  000E98  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29920  000E9C  0E00               	movlw	0
 29921  000E9E  6E16               	movwf	itoa@base+1,c
 29922  000EA0  0E0A               	movlw	10
 29923  000EA2  6E15               	movwf	itoa@base,c
 29924  000EA4  EC77  F042         	call	_itoa	;wreg free
 29925                           
 29926                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 29927  000EA8  0E02               	movlw	2
 29928  000EAA  2423               	addwf	__display_itoa_u32@text,w,c
 29929  000EAC  6E11               	movwf	itoa@buf,c
 29930  000EAE  0E00               	movlw	0
 29931  000EB0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29932  000EB2  6E12               	movwf	itoa@buf+1,c
 29933  000EB4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29934  000EB8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29935  000EBC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29936  000EC0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29937  000EC4  0E10               	movlw	16
 29938  000EC6  6E05               	movwf	___llmod@divisor,c
 29939  000EC8  0E27               	movlw	39
 29940  000ECA  6E06               	movwf	___llmod@divisor+1,c
 29941  000ECC  0E00               	movlw	0
 29942  000ECE  6E07               	movwf	___llmod@divisor+2,c
 29943  000ED0  0E00               	movlw	0
 29944  000ED2  6E08               	movwf	___llmod@divisor+3,c
 29945  000ED4  ECAE  F03C         	call	___llmod	;wreg free
 29946  000ED8  C001  F013         	movff	?___llmod,itoa@val
 29947  000EDC  C002  F014         	movff	?___llmod+1,itoa@val+1
 29948  000EE0  0E00               	movlw	0
 29949  000EE2  6E16               	movwf	itoa@base+1,c
 29950  000EE4  0E0A               	movlw	10
 29951  000EE6  6E15               	movwf	itoa@base,c
 29952  000EE8  EC77  F042         	call	_itoa	;wreg free
 29953                           
 29954                           ;display.c: 206: *(text+6) = ' ';
 29955  000EEC  EE20 F006          	lfsr	2,6
 29956  000EF0  5023               	movf	__display_itoa_u32@text,w,c
 29957  000EF2  26D9               	addwf	fsr2l,f,c
 29958  000EF4  5024               	movf	__display_itoa_u32@text+1,w,c
 29959  000EF6  22DA               	addwfc	fsr2h,f,c
 29960  000EF8  0E20               	movlw	32
 29961  000EFA  6EDF               	movwf	indf2,c
 29962                           
 29963                           ;display.c: 207: return 6;
 29964  000EFC  0E06               	movlw	6
 29965                           
 29966                           ;display.c: 208: }
 29967  000EFE  0012               	return	
 29968  000F00                     l1516:
 29969                           
 29970                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 29971  000F00  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29972  000F04  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29973  000F08  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29974  000F0C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29975  000F10  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29976  000F14  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29977  000F18  0E10               	movlw	16
 29978  000F1A  6E05               	movwf	___lldiv@divisor,c
 29979  000F1C  0E27               	movlw	39
 29980  000F1E  6E06               	movwf	___lldiv@divisor+1,c
 29981  000F20  0E00               	movlw	0
 29982  000F22  6E07               	movwf	___lldiv@divisor+2,c
 29983  000F24  0E00               	movlw	0
 29984  000F26  6E08               	movwf	___lldiv@divisor+3,c
 29985  000F28  EC80  F039         	call	___lldiv	;wreg free
 29986  000F2C  C001  F013         	movff	?___lldiv,itoa@val
 29987  000F30  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29988  000F34  0E00               	movlw	0
 29989  000F36  6E16               	movwf	itoa@base+1,c
 29990  000F38  0E0A               	movlw	10
 29991  000F3A  6E15               	movwf	itoa@base,c
 29992  000F3C  EC77  F042         	call	_itoa	;wreg free
 29993                           
 29994                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 29995  000F40  0E01               	movlw	1
 29996  000F42  2423               	addwf	__display_itoa_u32@text,w,c
 29997  000F44  6E11               	movwf	itoa@buf,c
 29998  000F46  0E00               	movlw	0
 29999  000F48  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30000  000F4A  6E12               	movwf	itoa@buf+1,c
 30001  000F4C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30002  000F50  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30003  000F54  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30004  000F58  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30005  000F5C  0E10               	movlw	16
 30006  000F5E  6E05               	movwf	___llmod@divisor,c
 30007  000F60  0E27               	movlw	39
 30008  000F62  6E06               	movwf	___llmod@divisor+1,c
 30009  000F64  0E00               	movlw	0
 30010  000F66  6E07               	movwf	___llmod@divisor+2,c
 30011  000F68  0E00               	movlw	0
 30012  000F6A  6E08               	movwf	___llmod@divisor+3,c
 30013  000F6C  ECAE  F03C         	call	___llmod	;wreg free
 30014  000F70  C001  F013         	movff	?___llmod,itoa@val
 30015  000F74  C002  F014         	movff	?___llmod+1,itoa@val+1
 30016  000F78  0E00               	movlw	0
 30017  000F7A  6E16               	movwf	itoa@base+1,c
 30018  000F7C  0E0A               	movlw	10
 30019  000F7E  6E15               	movwf	itoa@base,c
 30020  000F80  EC77  F042         	call	_itoa	;wreg free
 30021                           
 30022                           ;display.c: 213: *(text+5) = ' ';
 30023  000F84  EE20 F005          	lfsr	2,5
 30024  000F88  5023               	movf	__display_itoa_u32@text,w,c
 30025  000F8A  26D9               	addwf	fsr2l,f,c
 30026  000F8C  5024               	movf	__display_itoa_u32@text+1,w,c
 30027  000F8E  22DA               	addwfc	fsr2h,f,c
 30028  000F90  0E20               	movlw	32
 30029  000F92  6EDF               	movwf	indf2,c
 30030                           
 30031                           ;display.c: 214: return 5;
 30032  000F94  0E05               	movlw	5
 30033  000F96  0012               	return	
 30034  000F98                     __end_of__display_itoa_u32:
 30035                           	opt stack 0
 30036                           tosu	equ	0xFFF
 30037                           tosh	equ	0xFFE
 30038                           tosl	equ	0xFFD
 30039                           pclath	equ	0xFFA
 30040                           tblptru	equ	0xFF8
 30041                           tblptrh	equ	0xFF7
 30042                           tblptrl	equ	0xFF6
 30043                           tablat	equ	0xFF5
 30044                           prodh	equ	0xFF4
 30045                           prodl	equ	0xFF3
 30046                           intcon	equ	0xFF2
 30047                           intcon2	equ	0xFF1
 30048                           intcon3	equ	0xFF0
 30049                           indf0	equ	0xFEF
 30050                           postinc0	equ	0xFEE
 30051                           fsr0h	equ	0xFEA
 30052                           fsr0l	equ	0xFE9
 30053                           wreg	equ	0xFE8
 30054                           indf1	equ	0xFE7
 30055                           postdec1	equ	0xFE5
 30056                           plusw1	equ	0xFE3
 30057                           fsr1h	equ	0xFE2
 30058                           fsr1l	equ	0xFE1
 30059                           indf2	equ	0xFDF
 30060                           postinc2	equ	0xFDE
 30061                           postdec2	equ	0xFDD
 30062                           plusw2	equ	0xFDB
 30063                           fsr2h	equ	0xFDA
 30064                           fsr2l	equ	0xFD9
 30065                           status	equ	0xFD8
 30066                           
 30067 ;; *************** function ___llmod *****************
 30068 ;; Defined at:
 30069 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30070 ;; Parameters:    Size  Location     Type
 30071 ;;  dividend        4    0[COMRAM] unsigned long 
 30072 ;;  divisor         4    4[COMRAM] unsigned long 
 30073 ;; Auto vars:     Size  Location     Type
 30074 ;;  counter         1    8[COMRAM] unsigned char 
 30075 ;; Return value:  Size  Location     Type
 30076 ;;                  4    0[COMRAM] unsigned long 
 30077 ;; Registers used:
 30078 ;;		wreg, status,2, status,0
 30079 ;; Tracked objects:
 30080 ;;		On entry : 0/0
 30081 ;;		On exit  : 0/0
 30082 ;;		Unchanged: 0/0
 30083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30084 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30085 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30086 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30087 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30088 ;;Total ram usage:        9 bytes
 30089 ;; Hardware stack levels used:    1
 30090 ;; This function calls:
 30091 ;;		Nothing
 30092 ;; This function is called by:
 30093 ;;		__display_itoa_u32
 30094 ;; This function uses a non-reentrant model
 30095 ;;
 30096                           
 30097                           	psect	text144
 30098  00795C                     __ptext144:
 30099                           	opt stack 0
 30100  00795C                     ___llmod:
 30101                           	opt stack 24
 30102                           
 30103                           ;incstack = 0
 30104  00795C  5005               	movf	___llmod@divisor,w,c
 30105  00795E  1006               	iorwf	___llmod@divisor+1,w,c
 30106  007960  1007               	iorwf	___llmod@divisor+2,w,c
 30107  007962  1008               	iorwf	___llmod@divisor+3,w,c
 30108  007964  B4D8               	btfsc	status,2,c
 30109  007966  D024               	goto	l3425
 30110  007968  0E01               	movlw	1
 30111  00796A  6E09               	movwf	___llmod@counter,c
 30112  00796C  D006               	goto	l3420
 30113  00796E  90D8               	bcf	status,0,c
 30114  007970  3605               	rlcf	___llmod@divisor,f,c
 30115  007972  3606               	rlcf	___llmod@divisor+1,f,c
 30116  007974  3607               	rlcf	___llmod@divisor+2,f,c
 30117  007976  3608               	rlcf	___llmod@divisor+3,f,c
 30118  007978  2A09               	incf	___llmod@counter,f,c
 30119  00797A                     l3420:
 30120  00797A  AE08               	btfss	___llmod@divisor+3,7,c
 30121  00797C  D7F8               	goto	l3421
 30122  00797E                     u7510:
 30123  00797E  5005               	movf	___llmod@divisor,w,c
 30124  007980  5C01               	subwf	___llmod@dividend,w,c
 30125  007982  5006               	movf	___llmod@divisor+1,w,c
 30126  007984  5802               	subwfb	___llmod@dividend+1,w,c
 30127  007986  5007               	movf	___llmod@divisor+2,w,c
 30128  007988  5803               	subwfb	___llmod@dividend+2,w,c
 30129  00798A  5008               	movf	___llmod@divisor+3,w,c
 30130  00798C  5804               	subwfb	___llmod@dividend+3,w,c
 30131  00798E  A0D8               	btfss	status,0,c
 30132  007990  D008               	goto	l3424
 30133  007992  5005               	movf	___llmod@divisor,w,c
 30134  007994  5E01               	subwf	___llmod@dividend,f,c
 30135  007996  5006               	movf	___llmod@divisor+1,w,c
 30136  007998  5A02               	subwfb	___llmod@dividend+1,f,c
 30137  00799A  5007               	movf	___llmod@divisor+2,w,c
 30138  00799C  5A03               	subwfb	___llmod@dividend+2,f,c
 30139  00799E  5008               	movf	___llmod@divisor+3,w,c
 30140  0079A0  5A04               	subwfb	___llmod@dividend+3,f,c
 30141  0079A2                     l3424:
 30142  0079A2  90D8               	bcf	status,0,c
 30143  0079A4  3208               	rrcf	___llmod@divisor+3,f,c
 30144  0079A6  3207               	rrcf	___llmod@divisor+2,f,c
 30145  0079A8  3206               	rrcf	___llmod@divisor+1,f,c
 30146  0079AA  3205               	rrcf	___llmod@divisor,f,c
 30147  0079AC  2E09               	decfsz	___llmod@counter,f,c
 30148  0079AE  D7E7               	goto	u7510
 30149  0079B0                     l3425:
 30150  0079B0  C001  F001         	movff	___llmod@dividend,?___llmod
 30151  0079B4  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30152  0079B8  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30153  0079BC  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30154  0079C0  0012               	return		;funcret
 30155  0079C2                     __end_of___llmod:
 30156                           	opt stack 0
 30157                           tosu	equ	0xFFF
 30158                           tosh	equ	0xFFE
 30159                           tosl	equ	0xFFD
 30160                           pclath	equ	0xFFA
 30161                           tblptru	equ	0xFF8
 30162                           tblptrh	equ	0xFF7
 30163                           tblptrl	equ	0xFF6
 30164                           tablat	equ	0xFF5
 30165                           prodh	equ	0xFF4
 30166                           prodl	equ	0xFF3
 30167                           intcon	equ	0xFF2
 30168                           intcon2	equ	0xFF1
 30169                           intcon3	equ	0xFF0
 30170                           indf0	equ	0xFEF
 30171                           postinc0	equ	0xFEE
 30172                           fsr0h	equ	0xFEA
 30173                           fsr0l	equ	0xFE9
 30174                           wreg	equ	0xFE8
 30175                           indf1	equ	0xFE7
 30176                           postdec1	equ	0xFE5
 30177                           plusw1	equ	0xFE3
 30178                           fsr1h	equ	0xFE2
 30179                           fsr1l	equ	0xFE1
 30180                           indf2	equ	0xFDF
 30181                           postinc2	equ	0xFDE
 30182                           postdec2	equ	0xFDD
 30183                           plusw2	equ	0xFDB
 30184                           fsr2h	equ	0xFDA
 30185                           fsr2l	equ	0xFD9
 30186                           status	equ	0xFD8
 30187                           
 30188 ;; *************** function ___lldiv *****************
 30189 ;; Defined at:
 30190 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30191 ;; Parameters:    Size  Location     Type
 30192 ;;  dividend        4    0[COMRAM] unsigned long 
 30193 ;;  divisor         4    4[COMRAM] unsigned long 
 30194 ;; Auto vars:     Size  Location     Type
 30195 ;;  quotient        4    8[COMRAM] unsigned long 
 30196 ;;  counter         1   12[COMRAM] unsigned char 
 30197 ;; Return value:  Size  Location     Type
 30198 ;;                  4    0[COMRAM] unsigned long 
 30199 ;; Registers used:
 30200 ;;		wreg, status,2, status,0
 30201 ;; Tracked objects:
 30202 ;;		On entry : 0/0
 30203 ;;		On exit  : 0/0
 30204 ;;		Unchanged: 0/0
 30205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30206 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30207 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30208 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30209 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30210 ;;Total ram usage:       13 bytes
 30211 ;; Hardware stack levels used:    1
 30212 ;; This function calls:
 30213 ;;		Nothing
 30214 ;; This function is called by:
 30215 ;;		__display_itoa_u32
 30216 ;; This function uses a non-reentrant model
 30217 ;;
 30218                           
 30219                           	psect	text145
 30220  007300                     __ptext145:
 30221                           	opt stack 0
 30222  007300                     ___lldiv:
 30223                           	opt stack 24
 30224                           
 30225                           ;incstack = 0
 30226  007300  0E00               	movlw	0
 30227  007302  6E09               	movwf	___lldiv@quotient,c
 30228  007304  0E00               	movlw	0
 30229  007306  6E0A               	movwf	___lldiv@quotient+1,c
 30230  007308  0E00               	movlw	0
 30231  00730A  6E0B               	movwf	___lldiv@quotient+2,c
 30232  00730C  0E00               	movlw	0
 30233  00730E  6E0C               	movwf	___lldiv@quotient+3,c
 30234  007310  5005               	movf	___lldiv@divisor,w,c
 30235  007312  1006               	iorwf	___lldiv@divisor+1,w,c
 30236  007314  1007               	iorwf	___lldiv@divisor+2,w,c
 30237  007316  1008               	iorwf	___lldiv@divisor+3,w,c
 30238  007318  B4D8               	btfsc	status,2,c
 30239  00731A  D02A               	goto	l3044
 30240  00731C  0E01               	movlw	1
 30241  00731E  6E0D               	movwf	___lldiv@counter,c
 30242  007320  D006               	goto	l3039
 30243  007322  90D8               	bcf	status,0,c
 30244  007324  3605               	rlcf	___lldiv@divisor,f,c
 30245  007326  3606               	rlcf	___lldiv@divisor+1,f,c
 30246  007328  3607               	rlcf	___lldiv@divisor+2,f,c
 30247  00732A  3608               	rlcf	___lldiv@divisor+3,f,c
 30248  00732C  2A0D               	incf	___lldiv@counter,f,c
 30249  00732E                     l3039:
 30250  00732E  AE08               	btfss	___lldiv@divisor+3,7,c
 30251  007330  D7F8               	goto	l3040
 30252  007332                     u7480:
 30253  007332  90D8               	bcf	status,0,c
 30254  007334  3609               	rlcf	___lldiv@quotient,f,c
 30255  007336  360A               	rlcf	___lldiv@quotient+1,f,c
 30256  007338  360B               	rlcf	___lldiv@quotient+2,f,c
 30257  00733A  360C               	rlcf	___lldiv@quotient+3,f,c
 30258  00733C  5005               	movf	___lldiv@divisor,w,c
 30259  00733E  5C01               	subwf	___lldiv@dividend,w,c
 30260  007340  5006               	movf	___lldiv@divisor+1,w,c
 30261  007342  5802               	subwfb	___lldiv@dividend+1,w,c
 30262  007344  5007               	movf	___lldiv@divisor+2,w,c
 30263  007346  5803               	subwfb	___lldiv@dividend+2,w,c
 30264  007348  5008               	movf	___lldiv@divisor+3,w,c
 30265  00734A  5804               	subwfb	___lldiv@dividend+3,w,c
 30266  00734C  A0D8               	btfss	status,0,c
 30267  00734E  D009               	goto	l3043
 30268  007350  5005               	movf	___lldiv@divisor,w,c
 30269  007352  5E01               	subwf	___lldiv@dividend,f,c
 30270  007354  5006               	movf	___lldiv@divisor+1,w,c
 30271  007356  5A02               	subwfb	___lldiv@dividend+1,f,c
 30272  007358  5007               	movf	___lldiv@divisor+2,w,c
 30273  00735A  5A03               	subwfb	___lldiv@dividend+2,f,c
 30274  00735C  5008               	movf	___lldiv@divisor+3,w,c
 30275  00735E  5A04               	subwfb	___lldiv@dividend+3,f,c
 30276  007360  8009               	bsf	___lldiv@quotient,0,c
 30277  007362                     l3043:
 30278  007362  90D8               	bcf	status,0,c
 30279  007364  3208               	rrcf	___lldiv@divisor+3,f,c
 30280  007366  3207               	rrcf	___lldiv@divisor+2,f,c
 30281  007368  3206               	rrcf	___lldiv@divisor+1,f,c
 30282  00736A  3205               	rrcf	___lldiv@divisor,f,c
 30283  00736C  2E0D               	decfsz	___lldiv@counter,f,c
 30284  00736E  D7E1               	goto	u7480
 30285  007370                     l3044:
 30286  007370  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30287  007374  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30288  007378  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30289  00737C  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30290  007380  0012               	return		;funcret
 30291  007382                     __end_of___lldiv:
 30292                           	opt stack 0
 30293                           tosu	equ	0xFFF
 30294                           tosh	equ	0xFFE
 30295                           tosl	equ	0xFFD
 30296                           pclath	equ	0xFFA
 30297                           tblptru	equ	0xFF8
 30298                           tblptrh	equ	0xFF7
 30299                           tblptrl	equ	0xFF6
 30300                           tablat	equ	0xFF5
 30301                           prodh	equ	0xFF4
 30302                           prodl	equ	0xFF3
 30303                           intcon	equ	0xFF2
 30304                           intcon2	equ	0xFF1
 30305                           intcon3	equ	0xFF0
 30306                           indf0	equ	0xFEF
 30307                           postinc0	equ	0xFEE
 30308                           fsr0h	equ	0xFEA
 30309                           fsr0l	equ	0xFE9
 30310                           wreg	equ	0xFE8
 30311                           indf1	equ	0xFE7
 30312                           postdec1	equ	0xFE5
 30313                           plusw1	equ	0xFE3
 30314                           fsr1h	equ	0xFE2
 30315                           fsr1l	equ	0xFE1
 30316                           indf2	equ	0xFDF
 30317                           postinc2	equ	0xFDE
 30318                           postdec2	equ	0xFDD
 30319                           plusw2	equ	0xFDB
 30320                           fsr2h	equ	0xFDA
 30321                           fsr2l	equ	0xFD9
 30322                           status	equ	0xFD8
 30323                           
 30324 ;; *************** function __display_done *****************
 30325 ;; Defined at:
 30326 ;;		line 529 in file "display.c"
 30327 ;; Parameters:    Size  Location     Type
 30328 ;;		None
 30329 ;; Auto vars:     Size  Location     Type
 30330 ;;  cntr            1   30[COMRAM] unsigned char 
 30331 ;; Return value:  Size  Location     Type
 30332 ;;                  1    wreg      void 
 30333 ;; Registers used:
 30334 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30335 ;; Tracked objects:
 30336 ;;		On entry : 0/0
 30337 ;;		On exit  : 0/0
 30338 ;;		Unchanged: 0/0
 30339 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30340 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30341 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30342 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30343 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30344 ;;Total ram usage:        1 bytes
 30345 ;; Hardware stack levels used:    1
 30346 ;; Hardware stack levels required when called:    4
 30347 ;; This function calls:
 30348 ;;		__display_itoa_u16
 30349 ;;		_bootloader_get_flashPagesWritten
 30350 ;; This function is called by:
 30351 ;;		_display_prepare
 30352 ;; This function uses a non-reentrant model
 30353 ;;
 30354                           
 30355                           	psect	text146
 30356  0038FE                     __ptext146:
 30357                           	opt stack 0
 30358  0038FE                     __display_done:
 30359                           	opt stack 22
 30360                           
 30361                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 30362                           
 30363                           ;incstack = 0
 30364  0038FE  0E00               	movlw	0
 30365  003900  6E1F               	movwf	__display_done@cntr,c
 30366                           
 30367                           ;display.c: 533: while(done_line1[cntr])
 30368  003902  D017               	goto	l1686
 30369  003904                     
 30370                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 30371  003904  501F               	movf	__display_done@cntr,w,c
 30372  003906  0D01               	mullw	1
 30373  003908  0E74               	movlw	low _done_line1
 30374  00390A  24F3               	addwf	prodl,w,c
 30375  00390C  6EF6               	movwf	tblptrl,c
 30376  00390E  0E9D               	movlw	high _done_line1
 30377  003910  20F4               	addwfc	prodh,w,c
 30378  003912  6EF7               	movwf	tblptrh,c
 30379  003914                     	if	1	;There are 3 active tblptr bytes
 30380  003914  6AF8               	clrf	tblptru,c
 30381  003916  0E00               	movlw	low (__mediumconst shr (0+16))
 30382  003918  22F8               	addwfc	tblptru,f,c
 30383  00391A                     	endif
 30384  00391A  501F               	movf	__display_done@cntr,w,c
 30385  00391C  0D01               	mullw	1
 30386  00391E  0E00               	movlw	low _display_content
 30387  003920  24F3               	addwf	prodl,w,c
 30388  003922  6ED9               	movwf	fsr2l,c
 30389  003924  0E02               	movlw	high _display_content
 30390  003926  20F4               	addwfc	prodh,w,c
 30391  003928  6EDA               	movwf	fsr2h,c
 30392  00392A  0008               	tblrd		*
 30393  00392C  CFF5 FFDF          	movff	tablat,indf2
 30394  003930  2A1F               	incf	__display_done@cntr,f,c
 30395  003932                     l1686:
 30396  003932  501F               	movf	__display_done@cntr,w,c
 30397  003934  0D01               	mullw	1
 30398  003936  0E74               	movlw	low _done_line1
 30399  003938  24F3               	addwf	prodl,w,c
 30400  00393A  6EF6               	movwf	tblptrl,c
 30401  00393C  0E9D               	movlw	high _done_line1
 30402  00393E  20F4               	addwfc	prodh,w,c
 30403  003940  6EF7               	movwf	tblptrh,c
 30404  003942                     	if	1	;There are 3 active tblptr bytes
 30405  003942  6AF8               	clrf	tblptru,c
 30406  003944  0E00               	movlw	low (__mediumconst shr (0+16))
 30407  003946  22F8               	addwfc	tblptru,f,c
 30408  003948                     	endif
 30409  003948  0008               	tblrd		*
 30410  00394A  50F5               	movf	tablat,w,c
 30411  00394C  0900               	iorlw	0
 30412  00394E  A4D8               	btfss	status,2,c
 30413  003950  D7D9               	goto	l1687
 30414                           
 30415                           ;display.c: 535: cntr = 0;
 30416  003952  0E00               	movlw	0
 30417  003954  6E1F               	movwf	__display_done@cntr,c
 30418                           
 30419                           ;display.c: 536: while(done_line2[cntr])
 30420  003956  D017               	goto	l1689
 30421  003958                     
 30422                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 30423  003958  501F               	movf	__display_done@cntr,w,c
 30424  00395A  0D01               	mullw	1
 30425  00395C  0E9F               	movlw	low _done_line2
 30426  00395E  24F3               	addwf	prodl,w,c
 30427  003960  6EF6               	movwf	tblptrl,c
 30428  003962  0E9E               	movlw	high _done_line2
 30429  003964  20F4               	addwfc	prodh,w,c
 30430  003966  6EF7               	movwf	tblptrh,c
 30431  003968                     	if	1	;There are 3 active tblptr bytes
 30432  003968  6AF8               	clrf	tblptru,c
 30433  00396A  0E00               	movlw	low (__mediumconst shr (0+16))
 30434  00396C  22F8               	addwfc	tblptru,f,c
 30435  00396E                     	endif
 30436  00396E  501F               	movf	__display_done@cntr,w,c
 30437  003970  0D01               	mullw	1
 30438  003972  0E14               	movlw	low (_display_content+20)
 30439  003974  24F3               	addwf	prodl,w,c
 30440  003976  6ED9               	movwf	fsr2l,c
 30441  003978  0E02               	movlw	high (_display_content+20)
 30442  00397A  20F4               	addwfc	prodh,w,c
 30443  00397C  6EDA               	movwf	fsr2h,c
 30444  00397E  0008               	tblrd		*
 30445  003980  CFF5 FFDF          	movff	tablat,indf2
 30446  003984  2A1F               	incf	__display_done@cntr,f,c
 30447  003986                     l1689:
 30448  003986  501F               	movf	__display_done@cntr,w,c
 30449  003988  0D01               	mullw	1
 30450  00398A  0E9F               	movlw	low _done_line2
 30451  00398C  24F3               	addwf	prodl,w,c
 30452  00398E  6EF6               	movwf	tblptrl,c
 30453  003990  0E9E               	movlw	high _done_line2
 30454  003992  20F4               	addwfc	prodh,w,c
 30455  003994  6EF7               	movwf	tblptrh,c
 30456  003996                     	if	1	;There are 3 active tblptr bytes
 30457  003996  6AF8               	clrf	tblptru,c
 30458  003998  0E00               	movlw	low (__mediumconst shr (0+16))
 30459  00399A  22F8               	addwfc	tblptru,f,c
 30460  00399C                     	endif
 30461  00399C  0008               	tblrd		*
 30462  00399E  50F5               	movf	tablat,w,c
 30463  0039A0  0900               	iorlw	0
 30464  0039A2  A4D8               	btfss	status,2,c
 30465  0039A4  D7D9               	goto	l1690
 30466                           
 30467                           ;display.c: 538: cntr = 0;
 30468  0039A6  0E00               	movlw	0
 30469  0039A8  6E1F               	movwf	__display_done@cntr,c
 30470                           
 30471                           ;display.c: 539: while(done_line3[cntr])
 30472  0039AA  D017               	goto	l1692
 30473  0039AC                     
 30474                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30475  0039AC  501F               	movf	__display_done@cntr,w,c
 30476  0039AE  0D01               	mullw	1
 30477  0039B0  0E64               	movlw	low _done_line3
 30478  0039B2  24F3               	addwf	prodl,w,c
 30479  0039B4  6EF6               	movwf	tblptrl,c
 30480  0039B6  0E9D               	movlw	high _done_line3
 30481  0039B8  20F4               	addwfc	prodh,w,c
 30482  0039BA  6EF7               	movwf	tblptrh,c
 30483  0039BC                     	if	1	;There are 3 active tblptr bytes
 30484  0039BC  6AF8               	clrf	tblptru,c
 30485  0039BE  0E00               	movlw	low (__mediumconst shr (0+16))
 30486  0039C0  22F8               	addwfc	tblptru,f,c
 30487  0039C2                     	endif
 30488  0039C2  501F               	movf	__display_done@cntr,w,c
 30489  0039C4  0D01               	mullw	1
 30490  0039C6  0E28               	movlw	low (_display_content+40)
 30491  0039C8  24F3               	addwf	prodl,w,c
 30492  0039CA  6ED9               	movwf	fsr2l,c
 30493  0039CC  0E02               	movlw	high (_display_content+40)
 30494  0039CE  20F4               	addwfc	prodh,w,c
 30495  0039D0  6EDA               	movwf	fsr2h,c
 30496  0039D2  0008               	tblrd		*
 30497  0039D4  CFF5 FFDF          	movff	tablat,indf2
 30498  0039D8  2A1F               	incf	__display_done@cntr,f,c
 30499  0039DA                     l1692:
 30500  0039DA  501F               	movf	__display_done@cntr,w,c
 30501  0039DC  0D01               	mullw	1
 30502  0039DE  0E64               	movlw	low _done_line3
 30503  0039E0  24F3               	addwf	prodl,w,c
 30504  0039E2  6EF6               	movwf	tblptrl,c
 30505  0039E4  0E9D               	movlw	high _done_line3
 30506  0039E6  20F4               	addwfc	prodh,w,c
 30507  0039E8  6EF7               	movwf	tblptrh,c
 30508  0039EA                     	if	1	;There are 3 active tblptr bytes
 30509  0039EA  6AF8               	clrf	tblptru,c
 30510  0039EC  0E00               	movlw	low (__mediumconst shr (0+16))
 30511  0039EE  22F8               	addwfc	tblptru,f,c
 30512  0039F0                     	endif
 30513  0039F0  0008               	tblrd		*
 30514  0039F2  50F5               	movf	tablat,w,c
 30515  0039F4  0900               	iorlw	0
 30516  0039F6  A4D8               	btfss	status,2,c
 30517  0039F8  D7D9               	goto	l1693
 30518                           
 30519                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30520  0039FA  ECA1  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 30521  0039FE  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30522  003A02  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30523  003A06  6A1B               	clrf	__display_itoa_u16@value+2,c
 30524  003A08  6A1C               	clrf	__display_itoa_u16@value+3,c
 30525  003A0A  501F               	movf	__display_done@cntr,w,c
 30526  003A0C  0D01               	mullw	1
 30527  003A0E  0E28               	movlw	low (_display_content+40)
 30528  003A10  24F3               	addwf	prodl,w,c
 30529  003A12  6E1D               	movwf	__display_itoa_u16@text,c
 30530  003A14  0E02               	movlw	high (_display_content+40)
 30531  003A16  20F4               	addwfc	prodh,w,c
 30532  003A18  6E1E               	movwf	__display_itoa_u16@text+1,c
 30533  003A1A  EC10  F030         	call	__display_itoa_u16	;wreg free
 30534                           
 30535                           ;display.c: 542: cntr = 0;
 30536  003A1E  0E00               	movlw	0
 30537  003A20  6E1F               	movwf	__display_done@cntr,c
 30538                           
 30539                           ;display.c: 543: while(done_line4[cntr])
 30540  003A22  D017               	goto	l1695
 30541  003A24                     
 30542                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30543  003A24  501F               	movf	__display_done@cntr,w,c
 30544  003A26  0D01               	mullw	1
 30545  003A28  0E54               	movlw	low _done_line4
 30546  003A2A  24F3               	addwf	prodl,w,c
 30547  003A2C  6EF6               	movwf	tblptrl,c
 30548  003A2E  0E9D               	movlw	high _done_line4
 30549  003A30  20F4               	addwfc	prodh,w,c
 30550  003A32  6EF7               	movwf	tblptrh,c
 30551  003A34                     	if	1	;There are 3 active tblptr bytes
 30552  003A34  6AF8               	clrf	tblptru,c
 30553  003A36  0E00               	movlw	low (__mediumconst shr (0+16))
 30554  003A38  22F8               	addwfc	tblptru,f,c
 30555  003A3A                     	endif
 30556  003A3A  501F               	movf	__display_done@cntr,w,c
 30557  003A3C  0D01               	mullw	1
 30558  003A3E  0E3C               	movlw	low (_display_content+60)
 30559  003A40  24F3               	addwf	prodl,w,c
 30560  003A42  6ED9               	movwf	fsr2l,c
 30561  003A44  0E02               	movlw	high (_display_content+60)
 30562  003A46  20F4               	addwfc	prodh,w,c
 30563  003A48  6EDA               	movwf	fsr2h,c
 30564  003A4A  0008               	tblrd		*
 30565  003A4C  CFF5 FFDF          	movff	tablat,indf2
 30566  003A50  2A1F               	incf	__display_done@cntr,f,c
 30567  003A52                     l1695:
 30568  003A52  501F               	movf	__display_done@cntr,w,c
 30569  003A54  0D01               	mullw	1
 30570  003A56  0E54               	movlw	low _done_line4
 30571  003A58  24F3               	addwf	prodl,w,c
 30572  003A5A  6EF6               	movwf	tblptrl,c
 30573  003A5C  0E9D               	movlw	high _done_line4
 30574  003A5E  20F4               	addwfc	prodh,w,c
 30575  003A60  6EF7               	movwf	tblptrh,c
 30576  003A62                     	if	1	;There are 3 active tblptr bytes
 30577  003A62  6AF8               	clrf	tblptru,c
 30578  003A64  0E00               	movlw	low (__mediumconst shr (0+16))
 30579  003A66  22F8               	addwfc	tblptru,f,c
 30580  003A68                     	endif
 30581  003A68  0008               	tblrd		*
 30582  003A6A  50F5               	movf	tablat,w,c
 30583  003A6C  0900               	iorlw	0
 30584  003A6E  B4D8               	btfsc	status,2,c
 30585  003A70  0012               	return	
 30586  003A72  D7D8               	goto	l1696
 30587  003A74                     __end_of__display_done:
 30588                           	opt stack 0
 30589                           tosu	equ	0xFFF
 30590                           tosh	equ	0xFFE
 30591                           tosl	equ	0xFFD
 30592                           pclath	equ	0xFFA
 30593                           tblptru	equ	0xFF8
 30594                           tblptrh	equ	0xFF7
 30595                           tblptrl	equ	0xFF6
 30596                           tablat	equ	0xFF5
 30597                           prodh	equ	0xFF4
 30598                           prodl	equ	0xFF3
 30599                           intcon	equ	0xFF2
 30600                           intcon2	equ	0xFF1
 30601                           intcon3	equ	0xFF0
 30602                           indf0	equ	0xFEF
 30603                           postinc0	equ	0xFEE
 30604                           fsr0h	equ	0xFEA
 30605                           fsr0l	equ	0xFE9
 30606                           wreg	equ	0xFE8
 30607                           indf1	equ	0xFE7
 30608                           postdec1	equ	0xFE5
 30609                           plusw1	equ	0xFE3
 30610                           fsr1h	equ	0xFE2
 30611                           fsr1l	equ	0xFE1
 30612                           indf2	equ	0xFDF
 30613                           postinc2	equ	0xFDE
 30614                           postdec2	equ	0xFDD
 30615                           plusw2	equ	0xFDB
 30616                           fsr2h	equ	0xFDA
 30617                           fsr2l	equ	0xFD9
 30618                           status	equ	0xFD8
 30619                           
 30620 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30621 ;; Defined at:
 30622 ;;		line 511 in file "bootloader.c"
 30623 ;; Parameters:    Size  Location     Type
 30624 ;;		None
 30625 ;; Auto vars:     Size  Location     Type
 30626 ;;		None
 30627 ;; Return value:  Size  Location     Type
 30628 ;;                  2    0[COMRAM] unsigned int 
 30629 ;; Registers used:
 30630 ;;		None
 30631 ;; Tracked objects:
 30632 ;;		On entry : 0/0
 30633 ;;		On exit  : 0/0
 30634 ;;		Unchanged: 0/0
 30635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30637 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30638 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30639 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30640 ;;Total ram usage:        2 bytes
 30641 ;; Hardware stack levels used:    1
 30642 ;; This function calls:
 30643 ;;		Nothing
 30644 ;; This function is called by:
 30645 ;;		__display_programming
 30646 ;;		__display_done
 30647 ;;		__fill_buffer_get_bootloader_details
 30648 ;; This function uses a non-reentrant model
 30649 ;;
 30650                           
 30651                           	psect	text147
 30652  008F42                     __ptext147:
 30653                           	opt stack 0
 30654  008F42                     _bootloader_get_flashPagesWritten:
 30655                           	opt stack 25
 30656                           
 30657                           ;bootloader.c: 513: return flash_pages_written;
 30658                           
 30659                           ;incstack = 0
 30660  008F42  C174  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30661  008F46  C175  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30662  008F4A  0012               	return		;funcret
 30663  008F4C                     __end_of_bootloader_get_flashPagesWritten:
 30664                           	opt stack 0
 30665                           tosu	equ	0xFFF
 30666                           tosh	equ	0xFFE
 30667                           tosl	equ	0xFFD
 30668                           pclath	equ	0xFFA
 30669                           tblptru	equ	0xFF8
 30670                           tblptrh	equ	0xFF7
 30671                           tblptrl	equ	0xFF6
 30672                           tablat	equ	0xFF5
 30673                           prodh	equ	0xFF4
 30674                           prodl	equ	0xFF3
 30675                           intcon	equ	0xFF2
 30676                           intcon2	equ	0xFF1
 30677                           intcon3	equ	0xFF0
 30678                           indf0	equ	0xFEF
 30679                           postinc0	equ	0xFEE
 30680                           fsr0h	equ	0xFEA
 30681                           fsr0l	equ	0xFE9
 30682                           wreg	equ	0xFE8
 30683                           indf1	equ	0xFE7
 30684                           postdec1	equ	0xFE5
 30685                           plusw1	equ	0xFE3
 30686                           fsr1h	equ	0xFE2
 30687                           fsr1l	equ	0xFE1
 30688                           indf2	equ	0xFDF
 30689                           postinc2	equ	0xFDE
 30690                           postdec2	equ	0xFDD
 30691                           plusw2	equ	0xFDB
 30692                           fsr2h	equ	0xFDA
 30693                           fsr2l	equ	0xFD9
 30694                           status	equ	0xFD8
 30695                           
 30696 ;; *************** function __display_clear *****************
 30697 ;; Defined at:
 30698 ;;		line 75 in file "display.c"
 30699 ;; Parameters:    Size  Location     Type
 30700 ;;		None
 30701 ;; Auto vars:     Size  Location     Type
 30702 ;;  col             1    3[COMRAM] unsigned char 
 30703 ;;  row             1    2[COMRAM] unsigned char 
 30704 ;; Return value:  Size  Location     Type
 30705 ;;                  1    wreg      void 
 30706 ;; Registers used:
 30707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30708 ;; Tracked objects:
 30709 ;;		On entry : 0/0
 30710 ;;		On exit  : 0/0
 30711 ;;		Unchanged: 0/0
 30712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30713 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30715 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30716 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30717 ;;Total ram usage:        4 bytes
 30718 ;; Hardware stack levels used:    1
 30719 ;; This function calls:
 30720 ;;		Nothing
 30721 ;; This function is called by:
 30722 ;;		_display_prepare
 30723 ;; This function uses a non-reentrant model
 30724 ;;
 30725                           
 30726                           	psect	text148
 30727  0082C2                     __ptext148:
 30728                           	opt stack 0
 30729  0082C2                     __display_clear:
 30730                           	opt stack 26
 30731                           
 30732                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30733                           
 30734                           ;incstack = 0
 30735  0082C2  0E00               	movlw	0
 30736  0082C4  6E03               	movwf	__display_clear@row,c
 30737  0082C6                     l11765:
 30738  0082C6  0E03               	movlw	3
 30739  0082C8  6403               	cpfsgt	__display_clear@row,c
 30740  0082CA  D001               	goto	l1464
 30741  0082CC  0012               	return	
 30742  0082CE                     l1464:
 30743                           
 30744                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30745  0082CE  0E00               	movlw	0
 30746  0082D0  6E04               	movwf	__display_clear@col,c
 30747  0082D2                     l11771:
 30748  0082D2  0E13               	movlw	19
 30749  0082D4  6404               	cpfsgt	__display_clear@col,c
 30750  0082D6  D001               	goto	l1466
 30751  0082D8  D016               	goto	u8710
 30752  0082DA                     l1466:
 30753                           
 30754                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30755  0082DA  5003               	movf	__display_clear@row,w,c
 30756  0082DC  0D14               	mullw	20
 30757  0082DE  0E00               	movlw	low _display_content
 30758  0082E0  6E01               	movwf	??__display_clear& (0+255),c
 30759  0082E2  0E02               	movlw	high _display_content
 30760  0082E4  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30761  0082E6  50F3               	movf	prodl,w,c
 30762  0082E8  2601               	addwf	??__display_clear,f,c
 30763  0082EA  50F4               	movf	prodh,w,c
 30764  0082EC  2202               	addwfc	??__display_clear+1,f,c
 30765  0082EE  5004               	movf	__display_clear@col,w,c
 30766  0082F0  0D01               	mullw	1
 30767  0082F2  50F3               	movf	prodl,w,c
 30768  0082F4  2401               	addwf	??__display_clear,w,c
 30769  0082F6  6ED9               	movwf	fsr2l,c
 30770  0082F8  50F4               	movf	prodh,w,c
 30771  0082FA  2002               	addwfc	??__display_clear+1,w,c
 30772  0082FC  6EDA               	movwf	fsr2h,c
 30773  0082FE  0E20               	movlw	32
 30774  008300  6EDF               	movwf	indf2,c
 30775  008302  2A04               	incf	__display_clear@col,f,c
 30776  008304  D7E6               	goto	l11771
 30777  008306                     u8710:
 30778  008306  2A03               	incf	__display_clear@row,f,c
 30779  008308  D7DE               	goto	l11765
 30780  00830A                     __end_of__display_clear:
 30781                           	opt stack 0
 30782                           tosu	equ	0xFFF
 30783                           tosh	equ	0xFFE
 30784                           tosl	equ	0xFFD
 30785                           pclath	equ	0xFFA
 30786                           tblptru	equ	0xFF8
 30787                           tblptrh	equ	0xFF7
 30788                           tblptrl	equ	0xFF6
 30789                           tablat	equ	0xFF5
 30790                           prodh	equ	0xFF4
 30791                           prodl	equ	0xFF3
 30792                           intcon	equ	0xFF2
 30793                           intcon2	equ	0xFF1
 30794                           intcon3	equ	0xFF0
 30795                           indf0	equ	0xFEF
 30796                           postinc0	equ	0xFEE
 30797                           fsr0h	equ	0xFEA
 30798                           fsr0l	equ	0xFE9
 30799                           wreg	equ	0xFE8
 30800                           indf1	equ	0xFE7
 30801                           postdec1	equ	0xFE5
 30802                           plusw1	equ	0xFE3
 30803                           fsr1h	equ	0xFE2
 30804                           fsr1l	equ	0xFE1
 30805                           indf2	equ	0xFDF
 30806                           postinc2	equ	0xFDE
 30807                           postdec2	equ	0xFDD
 30808                           plusw2	equ	0xFDB
 30809                           fsr2h	equ	0xFDA
 30810                           fsr2l	equ	0xFD9
 30811                           status	equ	0xFD8
 30812                           
 30813 ;; *************** function __display_checked *****************
 30814 ;; Defined at:
 30815 ;;		line 433 in file "display.c"
 30816 ;; Parameters:    Size  Location     Type
 30817 ;;		None
 30818 ;; Auto vars:     Size  Location     Type
 30819 ;;  cntr            1   33[COMRAM] unsigned char 
 30820 ;;  start           1   32[COMRAM] unsigned char 
 30821 ;; Return value:  Size  Location     Type
 30822 ;;                  1    wreg      void 
 30823 ;; Registers used:
 30824 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30825 ;; Tracked objects:
 30826 ;;		On entry : 0/0
 30827 ;;		On exit  : 0/0
 30828 ;;		Unchanged: 0/0
 30829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30830 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30831 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30832 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30833 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30834 ;;Total ram usage:        4 bytes
 30835 ;; Hardware stack levels used:    1
 30836 ;; Hardware stack levels required when called:    4
 30837 ;; This function calls:
 30838 ;;		__display_itoa_u16
 30839 ;;		_bootloader_get_total_entries
 30840 ;; This function is called by:
 30841 ;;		_display_prepare
 30842 ;; This function uses a non-reentrant model
 30843 ;;
 30844                           
 30845                           	psect	text149
 30846  003782                     __ptext149:
 30847                           	opt stack 0
 30848  003782                     __display_checked:
 30849                           	opt stack 22
 30850                           
 30851                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 30852                           
 30853                           ;incstack = 0
 30854  003782  0E00               	movlw	0
 30855  003784  6E22               	movwf	__display_checked@cntr,c
 30856                           
 30857                           ;display.c: 438: while(checked_line1[cntr])
 30858  003786  D017               	goto	l1622
 30859  003788                     
 30860                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 30861  003788  5022               	movf	__display_checked@cntr,w,c
 30862  00378A  0D01               	mullw	1
 30863  00378C  0EB4               	movlw	low _checked_line1
 30864  00378E  24F3               	addwf	prodl,w,c
 30865  003790  6EF6               	movwf	tblptrl,c
 30866  003792  0E9D               	movlw	high _checked_line1
 30867  003794  20F4               	addwfc	prodh,w,c
 30868  003796  6EF7               	movwf	tblptrh,c
 30869  003798                     	if	1	;There are 3 active tblptr bytes
 30870  003798  6AF8               	clrf	tblptru,c
 30871  00379A  0E00               	movlw	low (__mediumconst shr (0+16))
 30872  00379C  22F8               	addwfc	tblptru,f,c
 30873  00379E                     	endif
 30874  00379E  5022               	movf	__display_checked@cntr,w,c
 30875  0037A0  0D01               	mullw	1
 30876  0037A2  0E00               	movlw	low _display_content
 30877  0037A4  24F3               	addwf	prodl,w,c
 30878  0037A6  6ED9               	movwf	fsr2l,c
 30879  0037A8  0E02               	movlw	high _display_content
 30880  0037AA  20F4               	addwfc	prodh,w,c
 30881  0037AC  6EDA               	movwf	fsr2h,c
 30882  0037AE  0008               	tblrd		*
 30883  0037B0  CFF5 FFDF          	movff	tablat,indf2
 30884  0037B4  2A22               	incf	__display_checked@cntr,f,c
 30885  0037B6                     l1622:
 30886  0037B6  5022               	movf	__display_checked@cntr,w,c
 30887  0037B8  0D01               	mullw	1
 30888  0037BA  0EB4               	movlw	low _checked_line1
 30889  0037BC  24F3               	addwf	prodl,w,c
 30890  0037BE  6EF6               	movwf	tblptrl,c
 30891  0037C0  0E9D               	movlw	high _checked_line1
 30892  0037C2  20F4               	addwfc	prodh,w,c
 30893  0037C4  6EF7               	movwf	tblptrh,c
 30894  0037C6                     	if	1	;There are 3 active tblptr bytes
 30895  0037C6  6AF8               	clrf	tblptru,c
 30896  0037C8  0E00               	movlw	low (__mediumconst shr (0+16))
 30897  0037CA  22F8               	addwfc	tblptru,f,c
 30898  0037CC                     	endif
 30899  0037CC  0008               	tblrd		*
 30900  0037CE  50F5               	movf	tablat,w,c
 30901  0037D0  0900               	iorlw	0
 30902  0037D2  A4D8               	btfss	status,2,c
 30903  0037D4  D7D9               	goto	l1623
 30904                           
 30905                           ;display.c: 440: cntr = 0;
 30906  0037D6  0E00               	movlw	0
 30907  0037D8  6E22               	movwf	__display_checked@cntr,c
 30908                           
 30909                           ;display.c: 441: while(checked_line2[cntr])
 30910  0037DA  D017               	goto	l1625
 30911  0037DC                     
 30912                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 30913  0037DC  5022               	movf	__display_checked@cntr,w,c
 30914  0037DE  0D01               	mullw	1
 30915  0037E0  0E99               	movlw	low _checked_line2
 30916  0037E2  24F3               	addwf	prodl,w,c
 30917  0037E4  6EF6               	movwf	tblptrl,c
 30918  0037E6  0E9C               	movlw	high _checked_line2
 30919  0037E8  20F4               	addwfc	prodh,w,c
 30920  0037EA  6EF7               	movwf	tblptrh,c
 30921  0037EC                     	if	1	;There are 3 active tblptr bytes
 30922  0037EC  6AF8               	clrf	tblptru,c
 30923  0037EE  0E00               	movlw	low (__mediumconst shr (0+16))
 30924  0037F0  22F8               	addwfc	tblptru,f,c
 30925  0037F2                     	endif
 30926  0037F2  5022               	movf	__display_checked@cntr,w,c
 30927  0037F4  0D01               	mullw	1
 30928  0037F6  0E14               	movlw	low (_display_content+20)
 30929  0037F8  24F3               	addwf	prodl,w,c
 30930  0037FA  6ED9               	movwf	fsr2l,c
 30931  0037FC  0E02               	movlw	high (_display_content+20)
 30932  0037FE  20F4               	addwfc	prodh,w,c
 30933  003800  6EDA               	movwf	fsr2h,c
 30934  003802  0008               	tblrd		*
 30935  003804  CFF5 FFDF          	movff	tablat,indf2
 30936  003808  2A22               	incf	__display_checked@cntr,f,c
 30937  00380A                     l1625:
 30938  00380A  5022               	movf	__display_checked@cntr,w,c
 30939  00380C  0D01               	mullw	1
 30940  00380E  0E99               	movlw	low _checked_line2
 30941  003810  24F3               	addwf	prodl,w,c
 30942  003812  6EF6               	movwf	tblptrl,c
 30943  003814  0E9C               	movlw	high _checked_line2
 30944  003816  20F4               	addwfc	prodh,w,c
 30945  003818  6EF7               	movwf	tblptrh,c
 30946  00381A                     	if	1	;There are 3 active tblptr bytes
 30947  00381A  6AF8               	clrf	tblptru,c
 30948  00381C  0E00               	movlw	low (__mediumconst shr (0+16))
 30949  00381E  22F8               	addwfc	tblptru,f,c
 30950  003820                     	endif
 30951  003820  0008               	tblrd		*
 30952  003822  50F5               	movf	tablat,w,c
 30953  003824  0900               	iorlw	0
 30954  003826  A4D8               	btfss	status,2,c
 30955  003828  D7D9               	goto	l1626
 30956                           
 30957                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 30958  00382A  ECA6  F047         	call	_bootloader_get_total_entries	;wreg free
 30959  00382E  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 30960  003832  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 30961  003836  6A1B               	clrf	__display_itoa_u16@value+2,c
 30962  003838  6A1C               	clrf	__display_itoa_u16@value+3,c
 30963  00383A  0E28               	movlw	low (_display_content+40)
 30964  00383C  6E1D               	movwf	__display_itoa_u16@text,c
 30965  00383E  0E02               	movlw	high (_display_content+40)
 30966  003840  6E1E               	movwf	__display_itoa_u16@text+1,c
 30967  003842  EC10  F030         	call	__display_itoa_u16	;wreg free
 30968  003846  6E21               	movwf	__display_checked@start,c
 30969                           
 30970                           ;display.c: 445: start++;
 30971  003848  2A21               	incf	__display_checked@start,f,c
 30972                           
 30973                           ;display.c: 446: cntr = 0;
 30974  00384A  0E00               	movlw	0
 30975  00384C  6E22               	movwf	__display_checked@cntr,c
 30976                           
 30977                           ;display.c: 447: while(checked_line3[cntr])
 30978  00384E  D01C               	goto	l1628
 30979  003850                     
 30980                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 30981  003850  5022               	movf	__display_checked@cntr,w,c
 30982  003852  0D01               	mullw	1
 30983  003854  0E73               	movlw	low _checked_line3
 30984  003856  24F3               	addwf	prodl,w,c
 30985  003858  6EF6               	movwf	tblptrl,c
 30986  00385A  0E9E               	movlw	high _checked_line3
 30987  00385C  20F4               	addwfc	prodh,w,c
 30988  00385E  6EF7               	movwf	tblptrh,c
 30989  003860                     	if	1	;There are 3 active tblptr bytes
 30990  003860  6AF8               	clrf	tblptru,c
 30991  003862  0E00               	movlw	low (__mediumconst shr (0+16))
 30992  003864  22F8               	addwfc	tblptru,f,c
 30993  003866                     	endif
 30994  003866  5022               	movf	__display_checked@cntr,w,c
 30995  003868  C021  F01F         	movff	__display_checked@start,??__display_checked
 30996  00386C  6A20               	clrf	(??__display_checked+1)& (0+255),c
 30997  00386E  261F               	addwf	??__display_checked,f,c
 30998  003870  0E00               	movlw	0
 30999  003872  2220               	addwfc	??__display_checked+1,f,c
 31000  003874  0E28               	movlw	low (_display_content+40)
 31001  003876  241F               	addwf	??__display_checked,w,c
 31002  003878  6ED9               	movwf	fsr2l,c
 31003  00387A  0E02               	movlw	high (_display_content+40)
 31004  00387C  2020               	addwfc	??__display_checked+1,w,c
 31005  00387E  6EDA               	movwf	fsr2h,c
 31006  003880  0008               	tblrd		*
 31007  003882  CFF5 FFDF          	movff	tablat,indf2
 31008  003886  2A22               	incf	__display_checked@cntr,f,c
 31009  003888                     l1628:
 31010  003888  5022               	movf	__display_checked@cntr,w,c
 31011  00388A  0D01               	mullw	1
 31012  00388C  0E73               	movlw	low _checked_line3
 31013  00388E  24F3               	addwf	prodl,w,c
 31014  003890  6EF6               	movwf	tblptrl,c
 31015  003892  0E9E               	movlw	high _checked_line3
 31016  003894  20F4               	addwfc	prodh,w,c
 31017  003896  6EF7               	movwf	tblptrh,c
 31018  003898                     	if	1	;There are 3 active tblptr bytes
 31019  003898  6AF8               	clrf	tblptru,c
 31020  00389A  0E00               	movlw	low (__mediumconst shr (0+16))
 31021  00389C  22F8               	addwfc	tblptru,f,c
 31022  00389E                     	endif
 31023  00389E  0008               	tblrd		*
 31024  0038A0  50F5               	movf	tablat,w,c
 31025  0038A2  0900               	iorlw	0
 31026  0038A4  A4D8               	btfss	status,2,c
 31027  0038A6  D7D4               	goto	l1629
 31028                           
 31029                           ;display.c: 450: cntr = 0;
 31030  0038A8  0E00               	movlw	0
 31031  0038AA  6E22               	movwf	__display_checked@cntr,c
 31032                           
 31033                           ;display.c: 451: while(checked_line4[cntr])
 31034  0038AC  D017               	goto	l1631
 31035  0038AE                     
 31036                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 31037  0038AE  5022               	movf	__display_checked@cntr,w,c
 31038  0038B0  0D01               	mullw	1
 31039  0038B2  0E32               	movlw	low _checked_line4
 31040  0038B4  24F3               	addwf	prodl,w,c
 31041  0038B6  6EF6               	movwf	tblptrl,c
 31042  0038B8  0E9D               	movlw	high _checked_line4
 31043  0038BA  20F4               	addwfc	prodh,w,c
 31044  0038BC  6EF7               	movwf	tblptrh,c
 31045  0038BE                     	if	1	;There are 3 active tblptr bytes
 31046  0038BE  6AF8               	clrf	tblptru,c
 31047  0038C0  0E00               	movlw	low (__mediumconst shr (0+16))
 31048  0038C2  22F8               	addwfc	tblptru,f,c
 31049  0038C4                     	endif
 31050  0038C4  5022               	movf	__display_checked@cntr,w,c
 31051  0038C6  0D01               	mullw	1
 31052  0038C8  0E3C               	movlw	low (_display_content+60)
 31053  0038CA  24F3               	addwf	prodl,w,c
 31054  0038CC  6ED9               	movwf	fsr2l,c
 31055  0038CE  0E02               	movlw	high (_display_content+60)
 31056  0038D0  20F4               	addwfc	prodh,w,c
 31057  0038D2  6EDA               	movwf	fsr2h,c
 31058  0038D4  0008               	tblrd		*
 31059  0038D6  CFF5 FFDF          	movff	tablat,indf2
 31060  0038DA  2A22               	incf	__display_checked@cntr,f,c
 31061  0038DC                     l1631:
 31062  0038DC  5022               	movf	__display_checked@cntr,w,c
 31063  0038DE  0D01               	mullw	1
 31064  0038E0  0E32               	movlw	low _checked_line4
 31065  0038E2  24F3               	addwf	prodl,w,c
 31066  0038E4  6EF6               	movwf	tblptrl,c
 31067  0038E6  0E9D               	movlw	high _checked_line4
 31068  0038E8  20F4               	addwfc	prodh,w,c
 31069  0038EA  6EF7               	movwf	tblptrh,c
 31070  0038EC                     	if	1	;There are 3 active tblptr bytes
 31071  0038EC  6AF8               	clrf	tblptru,c
 31072  0038EE  0E00               	movlw	low (__mediumconst shr (0+16))
 31073  0038F0  22F8               	addwfc	tblptru,f,c
 31074  0038F2                     	endif
 31075  0038F2  0008               	tblrd		*
 31076  0038F4  50F5               	movf	tablat,w,c
 31077  0038F6  0900               	iorlw	0
 31078  0038F8  B4D8               	btfsc	status,2,c
 31079  0038FA  0012               	return	
 31080  0038FC  D7D8               	goto	l1632
 31081  0038FE                     __end_of__display_checked:
 31082                           	opt stack 0
 31083                           tosu	equ	0xFFF
 31084                           tosh	equ	0xFFE
 31085                           tosl	equ	0xFFD
 31086                           pclath	equ	0xFFA
 31087                           tblptru	equ	0xFF8
 31088                           tblptrh	equ	0xFF7
 31089                           tblptrl	equ	0xFF6
 31090                           tablat	equ	0xFF5
 31091                           prodh	equ	0xFF4
 31092                           prodl	equ	0xFF3
 31093                           intcon	equ	0xFF2
 31094                           intcon2	equ	0xFF1
 31095                           intcon3	equ	0xFF0
 31096                           indf0	equ	0xFEF
 31097                           postinc0	equ	0xFEE
 31098                           fsr0h	equ	0xFEA
 31099                           fsr0l	equ	0xFE9
 31100                           wreg	equ	0xFE8
 31101                           indf1	equ	0xFE7
 31102                           postdec1	equ	0xFE5
 31103                           plusw1	equ	0xFE3
 31104                           fsr1h	equ	0xFE2
 31105                           fsr1l	equ	0xFE1
 31106                           indf2	equ	0xFDF
 31107                           postinc2	equ	0xFDE
 31108                           postdec2	equ	0xFDD
 31109                           plusw2	equ	0xFDB
 31110                           fsr2h	equ	0xFDA
 31111                           fsr2l	equ	0xFD9
 31112                           status	equ	0xFD8
 31113                           
 31114 ;; *************** function _bootloader_get_total_entries *****************
 31115 ;; Defined at:
 31116 ;;		line 470 in file "bootloader.c"
 31117 ;; Parameters:    Size  Location     Type
 31118 ;;		None
 31119 ;; Auto vars:     Size  Location     Type
 31120 ;;		None
 31121 ;; Return value:  Size  Location     Type
 31122 ;;                  2    0[COMRAM] unsigned int 
 31123 ;; Registers used:
 31124 ;;		None
 31125 ;; Tracked objects:
 31126 ;;		On entry : 0/0
 31127 ;;		On exit  : 0/0
 31128 ;;		Unchanged: 0/0
 31129 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31130 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31131 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31132 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31133 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31134 ;;Total ram usage:        2 bytes
 31135 ;; Hardware stack levels used:    1
 31136 ;; This function calls:
 31137 ;;		Nothing
 31138 ;; This function is called by:
 31139 ;;		__display_checked
 31140 ;;		__display_programming
 31141 ;;		__fill_buffer_get_bootloader_details
 31142 ;; This function uses a non-reentrant model
 31143 ;;
 31144                           
 31145                           	psect	text150
 31146  008F4C                     __ptext150:
 31147                           	opt stack 0
 31148  008F4C                     _bootloader_get_total_entries:
 31149                           	opt stack 25
 31150                           
 31151                           ;bootloader.c: 472: return total_hex_file_entries;
 31152                           
 31153                           ;incstack = 0
 31154  008F4C  C176  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31155  008F50  C177  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31156  008F54  0012               	return		;funcret
 31157  008F56                     __end_of_bootloader_get_total_entries:
 31158                           	opt stack 0
 31159                           tosu	equ	0xFFF
 31160                           tosh	equ	0xFFE
 31161                           tosl	equ	0xFFD
 31162                           pclath	equ	0xFFA
 31163                           tblptru	equ	0xFF8
 31164                           tblptrh	equ	0xFF7
 31165                           tblptrl	equ	0xFF6
 31166                           tablat	equ	0xFF5
 31167                           prodh	equ	0xFF4
 31168                           prodl	equ	0xFF3
 31169                           intcon	equ	0xFF2
 31170                           intcon2	equ	0xFF1
 31171                           intcon3	equ	0xFF0
 31172                           indf0	equ	0xFEF
 31173                           postinc0	equ	0xFEE
 31174                           fsr0h	equ	0xFEA
 31175                           fsr0l	equ	0xFE9
 31176                           wreg	equ	0xFE8
 31177                           indf1	equ	0xFE7
 31178                           postdec1	equ	0xFE5
 31179                           plusw1	equ	0xFE3
 31180                           fsr1h	equ	0xFE2
 31181                           fsr1l	equ	0xFE1
 31182                           indf2	equ	0xFDF
 31183                           postinc2	equ	0xFDE
 31184                           postdec2	equ	0xFDD
 31185                           plusw2	equ	0xFDB
 31186                           fsr2h	equ	0xFDA
 31187                           fsr2l	equ	0xFD9
 31188                           status	equ	0xFD8
 31189                           
 31190 ;; *************** function __display_itoa_u16 *****************
 31191 ;; Defined at:
 31192 ;;		line 88 in file "display.c"
 31193 ;; Parameters:    Size  Location     Type
 31194 ;;  value           4   24[COMRAM] unsigned long 
 31195 ;;  text            2   28[COMRAM] PTR unsigned char 
 31196 ;;		 -> display_content(80), 
 31197 ;; Auto vars:     Size  Location     Type
 31198 ;;		None
 31199 ;; Return value:  Size  Location     Type
 31200 ;;                  1    wreg      unsigned char 
 31201 ;; Registers used:
 31202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31203 ;; Tracked objects:
 31204 ;;		On entry : 0/0
 31205 ;;		On exit  : 0/0
 31206 ;;		Unchanged: 0/0
 31207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31208 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31211 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31212 ;;Total ram usage:        6 bytes
 31213 ;; Hardware stack levels used:    1
 31214 ;; Hardware stack levels required when called:    3
 31215 ;; This function calls:
 31216 ;;		_itoa
 31217 ;; This function is called by:
 31218 ;;		__display_itoa_u32
 31219 ;;		__display_verify
 31220 ;;		__display_checked
 31221 ;;		__display_failed
 31222 ;;		__display_programming
 31223 ;;		__display_done
 31224 ;; This function uses a non-reentrant model
 31225 ;;
 31226                           
 31227                           	psect	text151
 31228  006020                     __ptext151:
 31229                           	opt stack 0
 31230  006020                     __display_itoa_u16:
 31231                           	opt stack 22
 31232                           
 31233                           ;display.c: 90: itoa(text, value, 10);
 31234                           
 31235                           ;incstack = 0
 31236  006020  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 31237  006024  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 31238  006028  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 31239  00602C  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 31240  006030  0E00               	movlw	0
 31241  006032  6E16               	movwf	itoa@base+1,c
 31242  006034  0E0A               	movlw	10
 31243  006036  6E15               	movwf	itoa@base,c
 31244  006038  EC77  F042         	call	_itoa	;wreg free
 31245                           
 31246                           ;display.c: 91: if(value>9999)
 31247  00603C  501C               	movf	__display_itoa_u16@value+3,w,c
 31248  00603E  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31249  006040  E106               	bnz	u7330
 31250  006042  0E10               	movlw	16
 31251  006044  5C19               	subwf	__display_itoa_u16@value,w,c
 31252  006046  0E27               	movlw	39
 31253  006048  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31254  00604A  A0D8               	btfss	status,0,c
 31255  00604C  D00A               	goto	l1471
 31256  00604E                     u7330:
 31257                           
 31258                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 31259  00604E  EE20 F005          	lfsr	2,5
 31260  006052  501D               	movf	__display_itoa_u16@text,w,c
 31261  006054  26D9               	addwf	fsr2l,f,c
 31262  006056  501E               	movf	__display_itoa_u16@text+1,w,c
 31263  006058  22DA               	addwfc	fsr2h,f,c
 31264  00605A  0E20               	movlw	32
 31265  00605C  6EDF               	movwf	indf2,c
 31266                           
 31267                           ;display.c: 94: return 5;
 31268  00605E  0E05               	movlw	5
 31269                           
 31270                           ;display.c: 95: }
 31271  006060  0012               	return	
 31272  006062                     l1471:
 31273                           
 31274                           ;display.c: 96: else if (value>999)
 31275  006062  501C               	movf	__display_itoa_u16@value+3,w,c
 31276  006064  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31277  006066  E106               	bnz	u7340
 31278  006068  0EE8               	movlw	232
 31279  00606A  5C19               	subwf	__display_itoa_u16@value,w,c
 31280  00606C  0E03               	movlw	3
 31281  00606E  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31282  006070  A0D8               	btfss	status,0,c
 31283  006072  D00A               	goto	l1474
 31284  006074                     u7340:
 31285                           
 31286                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 31287  006074  EE20 F004          	lfsr	2,4
 31288  006078  501D               	movf	__display_itoa_u16@text,w,c
 31289  00607A  26D9               	addwf	fsr2l,f,c
 31290  00607C  501E               	movf	__display_itoa_u16@text+1,w,c
 31291  00607E  22DA               	addwfc	fsr2h,f,c
 31292  006080  0E20               	movlw	32
 31293  006082  6EDF               	movwf	indf2,c
 31294                           
 31295                           ;display.c: 99: return 4;
 31296  006084  0E04               	movlw	4
 31297                           
 31298                           ;display.c: 100: }
 31299  006086  0012               	return	
 31300  006088                     l1474:
 31301                           
 31302                           ;display.c: 101: else if (value>99)
 31303  006088  501C               	movf	__display_itoa_u16@value+3,w,c
 31304  00608A  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31305  00608C  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31306  00608E  E104               	bnz	u7350
 31307  006090  0E64               	movlw	100
 31308  006092  5C19               	subwf	__display_itoa_u16@value,w,c
 31309  006094  A0D8               	btfss	status,0,c
 31310  006096  D00A               	goto	l1476
 31311  006098                     u7350:
 31312                           
 31313                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 31314  006098  EE20 F003          	lfsr	2,3
 31315  00609C  501D               	movf	__display_itoa_u16@text,w,c
 31316  00609E  26D9               	addwf	fsr2l,f,c
 31317  0060A0  501E               	movf	__display_itoa_u16@text+1,w,c
 31318  0060A2  22DA               	addwfc	fsr2h,f,c
 31319  0060A4  0E20               	movlw	32
 31320  0060A6  6EDF               	movwf	indf2,c
 31321                           
 31322                           ;display.c: 104: return 3;
 31323  0060A8  0E03               	movlw	3
 31324                           
 31325                           ;display.c: 105: }
 31326  0060AA  0012               	return	
 31327  0060AC                     l1476:
 31328                           
 31329                           ;display.c: 106: else if (value>9)
 31330  0060AC  501C               	movf	__display_itoa_u16@value+3,w,c
 31331  0060AE  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31332  0060B0  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31333  0060B2  E104               	bnz	u7360
 31334  0060B4  0E0A               	movlw	10
 31335  0060B6  5C19               	subwf	__display_itoa_u16@value,w,c
 31336  0060B8  A0D8               	btfss	status,0,c
 31337  0060BA  D00A               	goto	l1478
 31338  0060BC                     u7360:
 31339                           
 31340                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 31341  0060BC  EE20 F002          	lfsr	2,2
 31342  0060C0  501D               	movf	__display_itoa_u16@text,w,c
 31343  0060C2  26D9               	addwf	fsr2l,f,c
 31344  0060C4  501E               	movf	__display_itoa_u16@text+1,w,c
 31345  0060C6  22DA               	addwfc	fsr2h,f,c
 31346  0060C8  0E20               	movlw	32
 31347  0060CA  6EDF               	movwf	indf2,c
 31348                           
 31349                           ;display.c: 109: return 2;
 31350  0060CC  0E02               	movlw	2
 31351                           
 31352                           ;display.c: 110: }
 31353  0060CE  0012               	return	
 31354  0060D0                     l1478:
 31355                           
 31356                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 31357  0060D0  EE20 F001          	lfsr	2,1
 31358  0060D4  501D               	movf	__display_itoa_u16@text,w,c
 31359  0060D6  26D9               	addwf	fsr2l,f,c
 31360  0060D8  501E               	movf	__display_itoa_u16@text+1,w,c
 31361  0060DA  22DA               	addwfc	fsr2h,f,c
 31362  0060DC  0E20               	movlw	32
 31363  0060DE  6EDF               	movwf	indf2,c
 31364                           
 31365                           ;display.c: 114: return 1;
 31366  0060E0  0E01               	movlw	1
 31367  0060E2  0012               	return	
 31368  0060E4                     __end_of__display_itoa_u16:
 31369                           	opt stack 0
 31370                           tosu	equ	0xFFF
 31371                           tosh	equ	0xFFE
 31372                           tosl	equ	0xFFD
 31373                           pclath	equ	0xFFA
 31374                           tblptru	equ	0xFF8
 31375                           tblptrh	equ	0xFF7
 31376                           tblptrl	equ	0xFF6
 31377                           tablat	equ	0xFF5
 31378                           prodh	equ	0xFF4
 31379                           prodl	equ	0xFF3
 31380                           intcon	equ	0xFF2
 31381                           intcon2	equ	0xFF1
 31382                           intcon3	equ	0xFF0
 31383                           indf0	equ	0xFEF
 31384                           postinc0	equ	0xFEE
 31385                           fsr0h	equ	0xFEA
 31386                           fsr0l	equ	0xFE9
 31387                           wreg	equ	0xFE8
 31388                           indf1	equ	0xFE7
 31389                           postdec1	equ	0xFE5
 31390                           plusw1	equ	0xFE3
 31391                           fsr1h	equ	0xFE2
 31392                           fsr1l	equ	0xFE1
 31393                           indf2	equ	0xFDF
 31394                           postinc2	equ	0xFDE
 31395                           postdec2	equ	0xFDD
 31396                           plusw2	equ	0xFDB
 31397                           fsr2h	equ	0xFDA
 31398                           fsr2l	equ	0xFD9
 31399                           status	equ	0xFD8
 31400                           
 31401 ;; *************** function _itoa *****************
 31402 ;; Defined at:
 31403 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31404 ;; Parameters:    Size  Location     Type
 31405 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31406 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31407 ;;  val             2   18[COMRAM] int 
 31408 ;;  base            2   20[COMRAM] int 
 31409 ;; Auto vars:     Size  Location     Type
 31410 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31411 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31412 ;; Return value:  Size  Location     Type
 31413 ;;                  2   16[COMRAM] PTR unsigned char 
 31414 ;; Registers used:
 31415 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31416 ;; Tracked objects:
 31417 ;;		On entry : 0/0
 31418 ;;		On exit  : 0/0
 31419 ;;		Unchanged: 0/0
 31420 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31421 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31422 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31423 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31424 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31425 ;;Total ram usage:        8 bytes
 31426 ;; Hardware stack levels used:    1
 31427 ;; Hardware stack levels required when called:    2
 31428 ;; This function calls:
 31429 ;;		_utoa
 31430 ;; This function is called by:
 31431 ;;		__display_itoa_u16
 31432 ;;		__display_itoa_u32
 31433 ;;		__display_itoa
 31434 ;; This function uses a non-reentrant model
 31435 ;;
 31436                           
 31437                           	psect	text152
 31438  0084EE                     __ptext152:
 31439                           	opt stack 0
 31440  0084EE                     _itoa:
 31441                           	opt stack 22
 31442                           
 31443                           ;incstack = 0
 31444  0084EE  C011  F017         	movff	itoa@buf,itoa@cp
 31445  0084F2  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31446  0084F6  AE14               	btfss	itoa@val+1,7,c
 31447  0084F8  D00C               	goto	l3675
 31448  0084FA  C011  FFD9         	movff	itoa@buf,fsr2l
 31449  0084FE  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31450  008502  0E2D               	movlw	45
 31451  008504  6EDF               	movwf	indf2,c
 31452  008506  4A11               	infsnz	itoa@buf,f,c
 31453  008508  2A12               	incf	itoa@buf+1,f,c
 31454  00850A  6C13               	negf	itoa@val,c
 31455  00850C  1E14               	comf	itoa@val+1,f,c
 31456  00850E  B0D8               	btfsc	status,0,c
 31457  008510  2A14               	incf	itoa@val+1,f,c
 31458  008512                     l3675:
 31459  008512  C011  F008         	movff	itoa@buf,utoa@buf
 31460  008516  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31461  00851A  C013  F00A         	movff	itoa@val,utoa@val
 31462  00851E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31463  008522  C015  F00C         	movff	itoa@base,utoa@base
 31464  008526  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31465  00852A  EC8E  F034         	call	_utoa	;wreg free
 31466  00852E  0012               	return	
 31467  008530                     __end_of_itoa:
 31468                           	opt stack 0
 31469                           tosu	equ	0xFFF
 31470                           tosh	equ	0xFFE
 31471                           tosl	equ	0xFFD
 31472                           pclath	equ	0xFFA
 31473                           tblptru	equ	0xFF8
 31474                           tblptrh	equ	0xFF7
 31475                           tblptrl	equ	0xFF6
 31476                           tablat	equ	0xFF5
 31477                           prodh	equ	0xFF4
 31478                           prodl	equ	0xFF3
 31479                           intcon	equ	0xFF2
 31480                           intcon2	equ	0xFF1
 31481                           intcon3	equ	0xFF0
 31482                           indf0	equ	0xFEF
 31483                           postinc0	equ	0xFEE
 31484                           fsr0h	equ	0xFEA
 31485                           fsr0l	equ	0xFE9
 31486                           wreg	equ	0xFE8
 31487                           indf1	equ	0xFE7
 31488                           postdec1	equ	0xFE5
 31489                           plusw1	equ	0xFE3
 31490                           fsr1h	equ	0xFE2
 31491                           fsr1l	equ	0xFE1
 31492                           indf2	equ	0xFDF
 31493                           postinc2	equ	0xFDE
 31494                           postdec2	equ	0xFDD
 31495                           plusw2	equ	0xFDB
 31496                           fsr2h	equ	0xFDA
 31497                           fsr2l	equ	0xFD9
 31498                           status	equ	0xFD8
 31499                           
 31500 ;; *************** function _utoa *****************
 31501 ;; Defined at:
 31502 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31503 ;; Parameters:    Size  Location     Type
 31504 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31505 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31506 ;;  val             2    9[COMRAM] unsigned int 
 31507 ;;  base            2   11[COMRAM] int 
 31508 ;; Auto vars:     Size  Location     Type
 31509 ;;  v               2   13[COMRAM] unsigned int 
 31510 ;;  c               1   15[COMRAM] unsigned char 
 31511 ;; Return value:  Size  Location     Type
 31512 ;;                  2    7[COMRAM] PTR unsigned char 
 31513 ;; Registers used:
 31514 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31515 ;; Tracked objects:
 31516 ;;		On entry : 0/0
 31517 ;;		On exit  : 0/0
 31518 ;;		Unchanged: 0/0
 31519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31520 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31521 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31522 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31523 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31524 ;;Total ram usage:        9 bytes
 31525 ;; Hardware stack levels used:    1
 31526 ;; Hardware stack levels required when called:    1
 31527 ;; This function calls:
 31528 ;;		___lwdiv
 31529 ;;		___lwmod
 31530 ;; This function is called by:
 31531 ;;		_itoa
 31532 ;; This function uses a non-reentrant model
 31533 ;;
 31534                           
 31535                           	psect	text153
 31536  00691C                     __ptext153:
 31537                           	opt stack 0
 31538  00691C                     _utoa:
 31539                           	opt stack 22
 31540                           
 31541                           ;incstack = 0
 31542  00691C  C00A  F00E         	movff	utoa@val,utoa@v
 31543  006920  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31544  006924  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31545  006928  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31546  00692C  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31547  006930  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31548  006934  EC99  F040         	call	___lwdiv	;wreg free
 31549  006938  C001  F00E         	movff	?___lwdiv,utoa@v
 31550  00693C  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31551  006940  4A08               	infsnz	utoa@buf,f,c
 31552  006942  2A09               	incf	utoa@buf+1,f,c
 31553  006944  500E               	movf	utoa@v,w,c
 31554  006946  100F               	iorwf	utoa@v+1,w,c
 31555  006948  A4D8               	btfss	status,2,c
 31556  00694A  D7EC               	goto	l3679
 31557  00694C  C008  FFD9         	movff	utoa@buf,fsr2l
 31558  006950  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31559  006954  0E00               	movlw	0
 31560  006956  6EDF               	movwf	indf2,c
 31561  006958  0608               	decf	utoa@buf,f,c
 31562  00695A  A0D8               	btfss	status,0,c
 31563  00695C  0609               	decf	utoa@buf+1,f,c
 31564  00695E  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31565  006962  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31566  006966  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31567  00696A  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31568  00696E  EC98  F042         	call	___lwmod	;wreg free
 31569  006972  5001               	movf	?___lwmod,w,c
 31570  006974  6E10               	movwf	utoa@c,c
 31571  006976  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31572  00697A  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31573  00697E  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31574  006982  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31575  006986  EC99  F040         	call	___lwdiv	;wreg free
 31576  00698A  C001  F00A         	movff	?___lwdiv,utoa@val
 31577  00698E  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31578  006992  0E09               	movlw	9
 31579  006994  6410               	cpfsgt	utoa@c,c
 31580  006996  D002               	goto	l3682
 31581  006998  0E07               	movlw	7
 31582  00699A  2610               	addwf	utoa@c,f,c
 31583  00699C                     l3682:
 31584  00699C  0E30               	movlw	48
 31585  00699E  2610               	addwf	utoa@c,f,c
 31586  0069A0  C008  FFD9         	movff	utoa@buf,fsr2l
 31587  0069A4  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31588  0069A8  C010  FFDF         	movff	utoa@c,indf2
 31589  0069AC  0608               	decf	utoa@buf,f,c
 31590  0069AE  A0D8               	btfss	status,0,c
 31591  0069B0  0609               	decf	utoa@buf+1,f,c
 31592  0069B2  500A               	movf	utoa@val,w,c
 31593  0069B4  100B               	iorwf	utoa@val+1,w,c
 31594  0069B6  A4D8               	btfss	status,2,c
 31595  0069B8  D7D2               	goto	l3681
 31596                           
 31597                           ;	Return value of _utoa is never used
 31598  0069BA  4A08               	infsnz	utoa@buf,f,c
 31599  0069BC  2A09               	incf	utoa@buf+1,f,c
 31600  0069BE  0012               	return	
 31601  0069C0                     __end_of_utoa:
 31602                           	opt stack 0
 31603                           tosu	equ	0xFFF
 31604                           tosh	equ	0xFFE
 31605                           tosl	equ	0xFFD
 31606                           pclath	equ	0xFFA
 31607                           tblptru	equ	0xFF8
 31608                           tblptrh	equ	0xFF7
 31609                           tblptrl	equ	0xFF6
 31610                           tablat	equ	0xFF5
 31611                           prodh	equ	0xFF4
 31612                           prodl	equ	0xFF3
 31613                           intcon	equ	0xFF2
 31614                           intcon2	equ	0xFF1
 31615                           intcon3	equ	0xFF0
 31616                           indf0	equ	0xFEF
 31617                           postinc0	equ	0xFEE
 31618                           fsr0h	equ	0xFEA
 31619                           fsr0l	equ	0xFE9
 31620                           wreg	equ	0xFE8
 31621                           indf1	equ	0xFE7
 31622                           postdec1	equ	0xFE5
 31623                           plusw1	equ	0xFE3
 31624                           fsr1h	equ	0xFE2
 31625                           fsr1l	equ	0xFE1
 31626                           indf2	equ	0xFDF
 31627                           postinc2	equ	0xFDE
 31628                           postdec2	equ	0xFDD
 31629                           plusw2	equ	0xFDB
 31630                           fsr2h	equ	0xFDA
 31631                           fsr2l	equ	0xFD9
 31632                           status	equ	0xFD8
 31633                           
 31634 ;; *************** function ___lwmod *****************
 31635 ;; Defined at:
 31636 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31637 ;; Parameters:    Size  Location     Type
 31638 ;;  dividend        2    0[COMRAM] unsigned int 
 31639 ;;  divisor         2    2[COMRAM] unsigned int 
 31640 ;; Auto vars:     Size  Location     Type
 31641 ;;  counter         1    4[COMRAM] unsigned char 
 31642 ;; Return value:  Size  Location     Type
 31643 ;;                  2    0[COMRAM] unsigned int 
 31644 ;; Registers used:
 31645 ;;		wreg, status,2, status,0
 31646 ;; Tracked objects:
 31647 ;;		On entry : 0/0
 31648 ;;		On exit  : 0/0
 31649 ;;		Unchanged: 0/0
 31650 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31651 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31652 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31653 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31654 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31655 ;;Total ram usage:        5 bytes
 31656 ;; Hardware stack levels used:    1
 31657 ;; This function calls:
 31658 ;;		Nothing
 31659 ;; This function is called by:
 31660 ;;		_utoa
 31661 ;; This function uses a non-reentrant model
 31662 ;;
 31663                           
 31664                           	psect	text154
 31665  008530                     __ptext154:
 31666                           	opt stack 0
 31667  008530                     ___lwmod:
 31668                           	opt stack 22
 31669                           
 31670                           ;incstack = 0
 31671  008530  5003               	movf	___lwmod@divisor,w,c
 31672  008532  1004               	iorwf	___lwmod@divisor+1,w,c
 31673  008534  B4D8               	btfsc	status,2,c
 31674  008536  D018               	goto	l3506
 31675  008538  0E01               	movlw	1
 31676  00853A  6E05               	movwf	___lwmod@counter,c
 31677  00853C  D004               	goto	l3501
 31678  00853E  90D8               	bcf	status,0,c
 31679  008540  3603               	rlcf	___lwmod@divisor,f,c
 31680  008542  3604               	rlcf	___lwmod@divisor+1,f,c
 31681  008544  2A05               	incf	___lwmod@counter,f,c
 31682  008546                     l3501:
 31683  008546  AE04               	btfss	___lwmod@divisor+1,7,c
 31684  008548  D7FA               	goto	l3502
 31685  00854A                     u6720:
 31686  00854A  5003               	movf	___lwmod@divisor,w,c
 31687  00854C  5C01               	subwf	___lwmod@dividend,w,c
 31688  00854E  5004               	movf	___lwmod@divisor+1,w,c
 31689  008550  5802               	subwfb	___lwmod@dividend+1,w,c
 31690  008552  A0D8               	btfss	status,0,c
 31691  008554  D004               	goto	l3505
 31692  008556  5003               	movf	___lwmod@divisor,w,c
 31693  008558  5E01               	subwf	___lwmod@dividend,f,c
 31694  00855A  5004               	movf	___lwmod@divisor+1,w,c
 31695  00855C  5A02               	subwfb	___lwmod@dividend+1,f,c
 31696  00855E                     l3505:
 31697  00855E  90D8               	bcf	status,0,c
 31698  008560  3204               	rrcf	___lwmod@divisor+1,f,c
 31699  008562  3203               	rrcf	___lwmod@divisor,f,c
 31700  008564  2E05               	decfsz	___lwmod@counter,f,c
 31701  008566  D7F1               	goto	u6720
 31702  008568                     l3506:
 31703  008568  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31704  00856C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31705  008570  0012               	return		;funcret
 31706  008572                     __end_of___lwmod:
 31707                           	opt stack 0
 31708                           tosu	equ	0xFFF
 31709                           tosh	equ	0xFFE
 31710                           tosl	equ	0xFFD
 31711                           pclath	equ	0xFFA
 31712                           tblptru	equ	0xFF8
 31713                           tblptrh	equ	0xFF7
 31714                           tblptrl	equ	0xFF6
 31715                           tablat	equ	0xFF5
 31716                           prodh	equ	0xFF4
 31717                           prodl	equ	0xFF3
 31718                           intcon	equ	0xFF2
 31719                           intcon2	equ	0xFF1
 31720                           intcon3	equ	0xFF0
 31721                           indf0	equ	0xFEF
 31722                           postinc0	equ	0xFEE
 31723                           fsr0h	equ	0xFEA
 31724                           fsr0l	equ	0xFE9
 31725                           wreg	equ	0xFE8
 31726                           indf1	equ	0xFE7
 31727                           postdec1	equ	0xFE5
 31728                           plusw1	equ	0xFE3
 31729                           fsr1h	equ	0xFE2
 31730                           fsr1l	equ	0xFE1
 31731                           indf2	equ	0xFDF
 31732                           postinc2	equ	0xFDE
 31733                           postdec2	equ	0xFDD
 31734                           plusw2	equ	0xFDB
 31735                           fsr2h	equ	0xFDA
 31736                           fsr2l	equ	0xFD9
 31737                           status	equ	0xFD8
 31738                           
 31739 ;; *************** function ___lwdiv *****************
 31740 ;; Defined at:
 31741 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31742 ;; Parameters:    Size  Location     Type
 31743 ;;  dividend        2    0[COMRAM] unsigned int 
 31744 ;;  divisor         2    2[COMRAM] unsigned int 
 31745 ;; Auto vars:     Size  Location     Type
 31746 ;;  quotient        2    4[COMRAM] unsigned int 
 31747 ;;  counter         1    6[COMRAM] unsigned char 
 31748 ;; Return value:  Size  Location     Type
 31749 ;;                  2    0[COMRAM] unsigned int 
 31750 ;; Registers used:
 31751 ;;		wreg, status,2, status,0
 31752 ;; Tracked objects:
 31753 ;;		On entry : 0/0
 31754 ;;		On exit  : 0/0
 31755 ;;		Unchanged: 0/0
 31756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31757 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31758 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31759 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31760 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31761 ;;Total ram usage:        7 bytes
 31762 ;; Hardware stack levels used:    1
 31763 ;; This function calls:
 31764 ;;		Nothing
 31765 ;; This function is called by:
 31766 ;;		_utoa
 31767 ;; This function uses a non-reentrant model
 31768 ;;
 31769                           
 31770                           	psect	text155
 31771  008132                     __ptext155:
 31772                           	opt stack 0
 31773  008132                     ___lwdiv:
 31774                           	opt stack 22
 31775                           
 31776                           ;incstack = 0
 31777  008132  0E00               	movlw	0
 31778  008134  6E06               	movwf	___lwdiv@quotient+1,c
 31779  008136  0E00               	movlw	0
 31780  008138  6E05               	movwf	___lwdiv@quotient,c
 31781  00813A  5003               	movf	___lwdiv@divisor,w,c
 31782  00813C  1004               	iorwf	___lwdiv@divisor+1,w,c
 31783  00813E  B4D8               	btfsc	status,2,c
 31784  008140  D01C               	goto	l3496
 31785  008142  0E01               	movlw	1
 31786  008144  6E07               	movwf	___lwdiv@counter,c
 31787  008146  D004               	goto	l3491
 31788  008148  90D8               	bcf	status,0,c
 31789  00814A  3603               	rlcf	___lwdiv@divisor,f,c
 31790  00814C  3604               	rlcf	___lwdiv@divisor+1,f,c
 31791  00814E  2A07               	incf	___lwdiv@counter,f,c
 31792  008150                     l3491:
 31793  008150  AE04               	btfss	___lwdiv@divisor+1,7,c
 31794  008152  D7FA               	goto	l3492
 31795  008154                     u6690:
 31796  008154  90D8               	bcf	status,0,c
 31797  008156  3605               	rlcf	___lwdiv@quotient,f,c
 31798  008158  3606               	rlcf	___lwdiv@quotient+1,f,c
 31799  00815A  5003               	movf	___lwdiv@divisor,w,c
 31800  00815C  5C01               	subwf	___lwdiv@dividend,w,c
 31801  00815E  5004               	movf	___lwdiv@divisor+1,w,c
 31802  008160  5802               	subwfb	___lwdiv@dividend+1,w,c
 31803  008162  A0D8               	btfss	status,0,c
 31804  008164  D005               	goto	l3495
 31805  008166  5003               	movf	___lwdiv@divisor,w,c
 31806  008168  5E01               	subwf	___lwdiv@dividend,f,c
 31807  00816A  5004               	movf	___lwdiv@divisor+1,w,c
 31808  00816C  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31809  00816E  8005               	bsf	___lwdiv@quotient,0,c
 31810  008170                     l3495:
 31811  008170  90D8               	bcf	status,0,c
 31812  008172  3204               	rrcf	___lwdiv@divisor+1,f,c
 31813  008174  3203               	rrcf	___lwdiv@divisor,f,c
 31814  008176  2E07               	decfsz	___lwdiv@counter,f,c
 31815  008178  D7ED               	goto	u6690
 31816  00817A                     l3496:
 31817  00817A  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31818  00817E  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31819  008182  0012               	return		;funcret
 31820  008184                     __end_of___lwdiv:
 31821                           	opt stack 0
 31822                           tosu	equ	0xFFF
 31823                           tosh	equ	0xFFE
 31824                           tosl	equ	0xFFD
 31825                           pclath	equ	0xFFA
 31826                           tblptru	equ	0xFF8
 31827                           tblptrh	equ	0xFF7
 31828                           tblptrl	equ	0xFF6
 31829                           tablat	equ	0xFF5
 31830                           prodh	equ	0xFF4
 31831                           prodl	equ	0xFF3
 31832                           intcon	equ	0xFF2
 31833                           intcon2	equ	0xFF1
 31834                           intcon3	equ	0xFF0
 31835                           indf0	equ	0xFEF
 31836                           postinc0	equ	0xFEE
 31837                           fsr0h	equ	0xFEA
 31838                           fsr0l	equ	0xFE9
 31839                           wreg	equ	0xFE8
 31840                           indf1	equ	0xFE7
 31841                           postdec1	equ	0xFE5
 31842                           plusw1	equ	0xFE3
 31843                           fsr1h	equ	0xFE2
 31844                           fsr1l	equ	0xFE1
 31845                           indf2	equ	0xFDF
 31846                           postinc2	equ	0xFDE
 31847                           postdec2	equ	0xFDD
 31848                           plusw2	equ	0xFDB
 31849                           fsr2h	equ	0xFDA
 31850                           fsr2l	equ	0xFD9
 31851                           status	equ	0xFD8
 31852                           
 31853 ;; *************** function _i2c_eeprom_writeByte *****************
 31854 ;; Defined at:
 31855 ;;		line 352 in file "i2c.c"
 31856 ;; Parameters:    Size  Location     Type
 31857 ;;  address         2   10[COMRAM] unsigned int 
 31858 ;;  data            1   12[COMRAM] unsigned char 
 31859 ;; Auto vars:     Size  Location     Type
 31860 ;;  dat             2   16[COMRAM] unsigned char [2]
 31861 ;;  slave_addres    1   18[COMRAM] unsigned char 
 31862 ;; Return value:  Size  Location     Type
 31863 ;;                  1    wreg      void 
 31864 ;; Registers used:
 31865 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31866 ;; Tracked objects:
 31867 ;;		On entry : 0/0
 31868 ;;		On exit  : 0/0
 31869 ;;		Unchanged: 0/0
 31870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31871 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31872 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31873 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31874 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31875 ;;Total ram usage:        9 bytes
 31876 ;; Hardware stack levels used:    1
 31877 ;; Hardware stack levels required when called:    2
 31878 ;; This function calls:
 31879 ;;		__i2c_write
 31880 ;;		_i2c_set_frequency
 31881 ;; This function is called by:
 31882 ;;		__normal_mode
 31883 ;;		__ui_encoder
 31884 ;;		__parse_command_short
 31885 ;; This function uses a non-reentrant model
 31886 ;;
 31887                           
 31888                           	psect	text156
 31889  008572                     __ptext156:
 31890                           	opt stack 0
 31891  008572                     _i2c_eeprom_writeByte:
 31892                           	opt stack 26
 31893                           
 31894                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 31895                           
 31896                           ;incstack = 0
 31897  008572  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 31898  008576  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 31899  00857A  0E07               	movlw	7
 31900  00857C  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 31901  00857E                     u10625:
 31902  00857E  90D8               	bcf	status,0,c
 31903  008580  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 31904  008582  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 31905  008584  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 31906  008586  D7FB               	goto	u10625
 31907  008588  500E               	movf	??_i2c_eeprom_writeByte,w,c
 31908  00858A  0B0E               	andlw	14
 31909  00858C  09A0               	iorlw	160
 31910  00858E  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 31911                           
 31912                           ;i2c.c: 358: dat[0] = address & 0xFF;
 31913  008590  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 31914                           
 31915                           ;i2c.c: 359: dat[1] = data;
 31916  008594  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 31917                           
 31918                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 31919  008598  0E02               	movlw	2
 31920  00859A  ECFB  F044         	call	_i2c_set_frequency
 31921                           
 31922                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 31923  00859E  0E11               	movlw	low i2c_eeprom_writeByte@dat
 31924  0085A0  6E06               	movwf	__i2c_write@data,c
 31925  0085A2  0E00               	movlw	high i2c_eeprom_writeByte@dat
 31926  0085A4  6E07               	movwf	__i2c_write@data+1,c
 31927  0085A6  0E02               	movlw	2
 31928  0085A8  6E08               	movwf	__i2c_write@length,c
 31929  0085AA  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 31930  0085AC  EC85  F041         	call	__i2c_write
 31931  0085B0  0012               	return		;funcret
 31932  0085B2                     __end_of_i2c_eeprom_writeByte:
 31933                           	opt stack 0
 31934                           tosu	equ	0xFFF
 31935                           tosh	equ	0xFFE
 31936                           tosl	equ	0xFFD
 31937                           pclath	equ	0xFFA
 31938                           tblptru	equ	0xFF8
 31939                           tblptrh	equ	0xFF7
 31940                           tblptrl	equ	0xFF6
 31941                           tablat	equ	0xFF5
 31942                           prodh	equ	0xFF4
 31943                           prodl	equ	0xFF3
 31944                           intcon	equ	0xFF2
 31945                           intcon2	equ	0xFF1
 31946                           intcon3	equ	0xFF0
 31947                           indf0	equ	0xFEF
 31948                           postinc0	equ	0xFEE
 31949                           fsr0h	equ	0xFEA
 31950                           fsr0l	equ	0xFE9
 31951                           wreg	equ	0xFE8
 31952                           indf1	equ	0xFE7
 31953                           postdec1	equ	0xFE5
 31954                           plusw1	equ	0xFE3
 31955                           fsr1h	equ	0xFE2
 31956                           fsr1l	equ	0xFE1
 31957                           indf2	equ	0xFDF
 31958                           postinc2	equ	0xFDE
 31959                           postdec2	equ	0xFDD
 31960                           plusw2	equ	0xFDB
 31961                           fsr2h	equ	0xFDA
 31962                           fsr2l	equ	0xFD9
 31963                           status	equ	0xFD8
 31964                           
 31965 ;; *************** function _i2c_set_frequency *****************
 31966 ;; Defined at:
 31967 ;;		line 123 in file "i2c.c"
 31968 ;; Parameters:    Size  Location     Type
 31969 ;;  frequency       1    wreg     enum E6622
 31970 ;; Auto vars:     Size  Location     Type
 31971 ;;  frequency       1    0[COMRAM] enum E6622
 31972 ;; Return value:  Size  Location     Type
 31973 ;;                  1    wreg      void 
 31974 ;; Registers used:
 31975 ;;		wreg, status,2, status,0
 31976 ;; Tracked objects:
 31977 ;;		On entry : 0/0
 31978 ;;		On exit  : 0/0
 31979 ;;		Unchanged: 0/0
 31980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31981 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31982 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31983 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31984 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31985 ;;Total ram usage:        1 bytes
 31986 ;; Hardware stack levels used:    1
 31987 ;; This function calls:
 31988 ;;		Nothing
 31989 ;; This function is called by:
 31990 ;;		_i2c_init
 31991 ;;		__ic2_display_set_address
 31992 ;;		_i2c_display_send_init_sequence
 31993 ;;		_i2c_display_cursor
 31994 ;;		_i2c_display_write_fixed
 31995 ;;		_i2c_digipot_reset_on
 31996 ;;		_i2c_digipot_reset_off
 31997 ;;		_i2c_digipot_backlight
 31998 ;;		_i2c_eeprom_writeByte
 31999 ;;		_i2c_eeprom_readByte
 32000 ;;		_i2c_display_write
 32001 ;;		_i2c_eeprom_write
 32002 ;;		_i2c_eeprom_read
 32003 ;; This function uses a non-reentrant model
 32004 ;;
 32005                           
 32006                           	psect	text157
 32007  0089F6                     __ptext157:
 32008                           	opt stack 0
 32009  0089F6                     _i2c_set_frequency:
 32010                           	opt stack 28
 32011                           
 32012                           ;incstack = 0
 32013                           ;i2c_set_frequency@frequency stored from wreg
 32014  0089F6  6E01               	movwf	i2c_set_frequency@frequency,c
 32015                           
 32016                           ;i2c.c: 125: switch(frequency)
 32017  0089F8  D007               	goto	l1195
 32018  0089FA                     
 32019                           ;i2c.c: 128: SSP1ADD = 119;
 32020  0089FA  0E77               	movlw	119
 32021  0089FC  D003               	goto	L34
 32022  0089FE                     
 32023                           ;i2c.c: 131: SSP1ADD = 59;
 32024  0089FE  0E3B               	movlw	59
 32025  008A00  D001               	goto	L34
 32026  008A02                     
 32027                           ;i2c.c: 134: SSP1ADD = 29;
 32028  008A02  0E1D               	movlw	29
 32029  008A04                     L34:
 32030  008A04  6EC8               	movwf	4040,c	;volatile
 32031                           
 32032                           ;i2c.c: 136: }
 32033                           
 32034                           ;i2c.c: 135: break;
 32035  008A06  D00A               	goto	l1197
 32036  008A08                     l1195:
 32037  008A08  5001               	movf	i2c_set_frequency@frequency,w,c
 32038                           
 32039                           ; Switch size 1, requested type "space"
 32040                           ; Number of cases is 3, Range of values is 0 to 2
 32041                           ; switch strategies available:
 32042                           ; Name         Instructions Cycles
 32043                           ; simple_byte           10     6 (average)
 32044                           ;	Chosen strategy is simple_byte
 32045  008A0A  0A00               	xorlw	0	; case 0
 32046  008A0C  B4D8               	btfsc	status,2,c
 32047  008A0E  D7F5               	goto	l1196
 32048  008A10  0A01               	xorlw	1	; case 1
 32049  008A12  B4D8               	btfsc	status,2,c
 32050  008A14  D7F4               	goto	l1198
 32051  008A16  0A03               	xorlw	3	; case 2
 32052  008A18  B4D8               	btfsc	status,2,c
 32053  008A1A  D7F3               	goto	l1199
 32054  008A1C                     l1197:
 32055                           
 32056                           ;i2c.c: 138: i2c_frequency = frequency;
 32057  008A1C  C001  F18D         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32058  008A20  0012               	return		;funcret
 32059  008A22                     __end_of_i2c_set_frequency:
 32060                           	opt stack 0
 32061                           tosu	equ	0xFFF
 32062                           tosh	equ	0xFFE
 32063                           tosl	equ	0xFFD
 32064                           pclath	equ	0xFFA
 32065                           tblptru	equ	0xFF8
 32066                           tblptrh	equ	0xFF7
 32067                           tblptrl	equ	0xFF6
 32068                           tablat	equ	0xFF5
 32069                           prodh	equ	0xFF4
 32070                           prodl	equ	0xFF3
 32071                           intcon	equ	0xFF2
 32072                           intcon2	equ	0xFF1
 32073                           intcon3	equ	0xFF0
 32074                           indf0	equ	0xFEF
 32075                           postinc0	equ	0xFEE
 32076                           fsr0h	equ	0xFEA
 32077                           fsr0l	equ	0xFE9
 32078                           wreg	equ	0xFE8
 32079                           indf1	equ	0xFE7
 32080                           postdec1	equ	0xFE5
 32081                           plusw1	equ	0xFE3
 32082                           fsr1h	equ	0xFE2
 32083                           fsr1l	equ	0xFE1
 32084                           indf2	equ	0xFDF
 32085                           postinc2	equ	0xFDE
 32086                           postdec2	equ	0xFDD
 32087                           plusw2	equ	0xFDB
 32088                           fsr2h	equ	0xFDA
 32089                           fsr2l	equ	0xFD9
 32090                           status	equ	0xFD8
 32091                           
 32092 ;; *************** function __i2c_write *****************
 32093 ;; Defined at:
 32094 ;;		line 142 in file "i2c.c"
 32095 ;; Parameters:    Size  Location     Type
 32096 ;;  slave_addres    1    wreg     unsigned char 
 32097 ;;  data            2    5[COMRAM] PTR unsigned char 
 32098 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32099 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32100 ;;		 -> _ic2_display_set_address@data_array(2), 
 32101 ;;  length          1    7[COMRAM] unsigned char 
 32102 ;; Auto vars:     Size  Location     Type
 32103 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32104 ;;  cntr            1    9[COMRAM] unsigned char 
 32105 ;; Return value:  Size  Location     Type
 32106 ;;                  1    wreg      void 
 32107 ;; Registers used:
 32108 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32109 ;; Tracked objects:
 32110 ;;		On entry : 0/0
 32111 ;;		On exit  : 0/0
 32112 ;;		Unchanged: 0/0
 32113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32114 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32115 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32116 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32117 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32118 ;;Total ram usage:        5 bytes
 32119 ;; Hardware stack levels used:    1
 32120 ;; Hardware stack levels required when called:    1
 32121 ;; This function calls:
 32122 ;;		__i2c_send
 32123 ;;		__i2c_start
 32124 ;;		__i2c_stop
 32125 ;;		__i2c_wait_idle
 32126 ;; This function is called by:
 32127 ;;		__ic2_display_set_address
 32128 ;;		_i2c_display_send_init_sequence
 32129 ;;		_i2c_digipot_reset_on
 32130 ;;		_i2c_digipot_reset_off
 32131 ;;		_i2c_digipot_backlight
 32132 ;;		_i2c_eeprom_writeByte
 32133 ;;		_i2c_eeprom_readByte
 32134 ;;		_i2c_eeprom_write
 32135 ;;		_i2c_eeprom_read
 32136 ;; This function uses a non-reentrant model
 32137 ;;
 32138                           
 32139                           	psect	text158
 32140  00830A                     __ptext158:
 32141                           	opt stack 0
 32142  00830A                     __i2c_write:
 32143                           	opt stack 27
 32144                           
 32145                           ;incstack = 0
 32146                           ;__i2c_write@slave_address stored from wreg
 32147  00830A  6E09               	movwf	__i2c_write@slave_address,c
 32148                           
 32149                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 32150  00830C  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 32151                           
 32152                           ;i2c.c: 147: _i2c_start();
 32153  008310  ECB9  F047         	call	__i2c_start	;wreg free
 32154                           
 32155                           ;i2c.c: 148: _i2c_wait_idle();
 32156  008314  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 32157                           
 32158                           ;i2c.c: 149: _i2c_send(slave_address);
 32159  008318  5009               	movf	__i2c_write@slave_address,w,c
 32160  00831A  ECBD  F047         	call	__i2c_send
 32161                           
 32162                           ;i2c.c: 150: _i2c_wait_idle();
 32163  00831E  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 32164                           
 32165                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 32166  008322  0E00               	movlw	0
 32167  008324  6E0A               	movwf	__i2c_write@cntr,c
 32168  008326  D00E               	goto	l1203
 32169  008328                     
 32170                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 32171  008328  500A               	movf	__i2c_write@cntr,w,c
 32172  00832A  0D01               	mullw	1
 32173  00832C  50F3               	movf	prodl,w,c
 32174  00832E  2406               	addwf	__i2c_write@data,w,c
 32175  008330  6ED9               	movwf	fsr2l,c
 32176  008332  50F4               	movf	prodh,w,c
 32177  008334  2007               	addwfc	__i2c_write@data+1,w,c
 32178  008336  6EDA               	movwf	fsr2h,c
 32179  008338  50DF               	movf	indf2,w,c
 32180  00833A  ECBD  F047         	call	__i2c_send
 32181                           
 32182                           ;i2c.c: 155: _i2c_wait_idle();
 32183  00833E  EC92  F03E         	call	__i2c_wait_idle	;wreg free
 32184  008342  2A0A               	incf	__i2c_write@cntr,f,c
 32185  008344                     l1203:
 32186  008344  5008               	movf	__i2c_write@length,w,c
 32187  008346  5C0A               	subwf	__i2c_write@cntr,w,c
 32188  008348  A0D8               	btfss	status,0,c
 32189  00834A  D7EE               	goto	l1204
 32190                           
 32191                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 32192  00834C  ECB5  F047         	call	__i2c_stop	;wreg free
 32193  008350  0012               	return		;funcret
 32194  008352                     __end_of__i2c_write:
 32195                           	opt stack 0
 32196                           tosu	equ	0xFFF
 32197                           tosh	equ	0xFFE
 32198                           tosl	equ	0xFFD
 32199                           pclath	equ	0xFFA
 32200                           tblptru	equ	0xFF8
 32201                           tblptrh	equ	0xFF7
 32202                           tblptrl	equ	0xFF6
 32203                           tablat	equ	0xFF5
 32204                           prodh	equ	0xFF4
 32205                           prodl	equ	0xFF3
 32206                           intcon	equ	0xFF2
 32207                           intcon2	equ	0xFF1
 32208                           intcon3	equ	0xFF0
 32209                           indf0	equ	0xFEF
 32210                           postinc0	equ	0xFEE
 32211                           fsr0h	equ	0xFEA
 32212                           fsr0l	equ	0xFE9
 32213                           wreg	equ	0xFE8
 32214                           indf1	equ	0xFE7
 32215                           postdec1	equ	0xFE5
 32216                           plusw1	equ	0xFE3
 32217                           fsr1h	equ	0xFE2
 32218                           fsr1l	equ	0xFE1
 32219                           indf2	equ	0xFDF
 32220                           postinc2	equ	0xFDE
 32221                           postdec2	equ	0xFDD
 32222                           plusw2	equ	0xFDB
 32223                           fsr2h	equ	0xFDA
 32224                           fsr2l	equ	0xFD9
 32225                           status	equ	0xFD8
 32226                           
 32227 ;; *************** function __i2c_wait_idle *****************
 32228 ;; Defined at:
 32229 ;;		line 48 in file "i2c.c"
 32230 ;; Parameters:    Size  Location     Type
 32231 ;;		None
 32232 ;; Auto vars:     Size  Location     Type
 32233 ;;		None
 32234 ;; Return value:  Size  Location     Type
 32235 ;;                  1    wreg      void 
 32236 ;; Registers used:
 32237 ;;		wreg, status,2, status,0
 32238 ;; Tracked objects:
 32239 ;;		On entry : 0/0
 32240 ;;		On exit  : 0/0
 32241 ;;		Unchanged: 0/0
 32242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32243 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32244 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32245 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32246 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32247 ;;Total ram usage:        5 bytes
 32248 ;; Hardware stack levels used:    1
 32249 ;; This function calls:
 32250 ;;		Nothing
 32251 ;; This function is called by:
 32252 ;;		__i2c_write
 32253 ;;		__i2c_read
 32254 ;;		_i2c_display_write_fixed
 32255 ;;		_i2c_display_write
 32256 ;; This function uses a non-reentrant model
 32257 ;;
 32258                           
 32259                           	psect	text159
 32260  007D24                     __ptext159:
 32261                           	opt stack 0
 32262  007D24                     __i2c_wait_idle:
 32263                           	opt stack 27
 32264                           
 32265                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32266                           
 32267                           ;incstack = 0
 32268  007D24  A4C7               	btfss	4039,2,c	;volatile
 32269  007D26  D003               	goto	u6870
 32270  007D28  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32271  007D2A  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32272  007D2C  D001               	goto	u6878
 32273  007D2E                     u6870:
 32274  007D2E  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32275  007D30                     u6878:
 32276  007D30  A0C5               	btfss	4037,0,c	;volatile
 32277  007D32  D003               	goto	u6880
 32278  007D34  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32279  007D36  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32280  007D38  D001               	goto	u6888
 32281  007D3A                     u6880:
 32282  007D3A  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32283  007D3C                     u6888:
 32284  007D3C  A2C5               	btfss	4037,1,c	;volatile
 32285  007D3E  D003               	goto	u6890
 32286  007D40  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32287  007D42  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32288  007D44  D001               	goto	u6898
 32289  007D46                     u6890:
 32290  007D46  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32291  007D48                     u6898:
 32292  007D48  A4C5               	btfss	4037,2,c	;volatile
 32293  007D4A  D003               	goto	u6900
 32294  007D4C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32295  007D4E  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32296  007D50  D001               	goto	u6908
 32297  007D52                     u6900:
 32298  007D52  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32299  007D54                     u6908:
 32300  007D54  A6C5               	btfss	4037,3,c	;volatile
 32301  007D56  D003               	goto	u6910
 32302  007D58  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32303  007D5A  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32304  007D5C  D001               	goto	u6918
 32305  007D5E                     u6910:
 32306  007D5E  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32307  007D60                     u6918:
 32308  007D60  A8C5               	btfss	4037,4,c	;volatile
 32309  007D62  D002               	goto	u6920
 32310  007D64  0E01               	movlw	1
 32311  007D66  D001               	goto	u6926
 32312  007D68                     u6920:
 32313  007D68  0E00               	movlw	0
 32314  007D6A                     u6926:
 32315  007D6A  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32316  007D6C  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32317  007D6E  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32318  007D70  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32319  007D72  1001               	iorwf	??__i2c_wait_idle,w,c
 32320  007D74  0900               	iorlw	0
 32321  007D76  B4D8               	btfsc	status,2,c
 32322  007D78  0012               	return	
 32323  007D7A  D7D4               	goto	__i2c_wait_idle
 32324  007D7C                     __end_of__i2c_wait_idle:
 32325                           	opt stack 0
 32326                           tosu	equ	0xFFF
 32327                           tosh	equ	0xFFE
 32328                           tosl	equ	0xFFD
 32329                           pclath	equ	0xFFA
 32330                           tblptru	equ	0xFF8
 32331                           tblptrh	equ	0xFF7
 32332                           tblptrl	equ	0xFF6
 32333                           tablat	equ	0xFF5
 32334                           prodh	equ	0xFF4
 32335                           prodl	equ	0xFF3
 32336                           intcon	equ	0xFF2
 32337                           intcon2	equ	0xFF1
 32338                           intcon3	equ	0xFF0
 32339                           indf0	equ	0xFEF
 32340                           postinc0	equ	0xFEE
 32341                           fsr0h	equ	0xFEA
 32342                           fsr0l	equ	0xFE9
 32343                           wreg	equ	0xFE8
 32344                           indf1	equ	0xFE7
 32345                           postdec1	equ	0xFE5
 32346                           plusw1	equ	0xFE3
 32347                           fsr1h	equ	0xFE2
 32348                           fsr1l	equ	0xFE1
 32349                           indf2	equ	0xFDF
 32350                           postinc2	equ	0xFDE
 32351                           postdec2	equ	0xFDD
 32352                           plusw2	equ	0xFDB
 32353                           fsr2h	equ	0xFDA
 32354                           fsr2l	equ	0xFD9
 32355                           status	equ	0xFD8
 32356                           
 32357 ;; *************** function __i2c_stop *****************
 32358 ;; Defined at:
 32359 ;;		line 75 in file "i2c.c"
 32360 ;; Parameters:    Size  Location     Type
 32361 ;;		None
 32362 ;; Auto vars:     Size  Location     Type
 32363 ;;		None
 32364 ;; Return value:  Size  Location     Type
 32365 ;;                  1    wreg      void 
 32366 ;; Registers used:
 32367 ;;		None
 32368 ;; Tracked objects:
 32369 ;;		On entry : 0/0
 32370 ;;		On exit  : 0/0
 32371 ;;		Unchanged: 0/0
 32372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32373 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32374 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32376 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32377 ;;Total ram usage:        0 bytes
 32378 ;; Hardware stack levels used:    1
 32379 ;; This function calls:
 32380 ;;		Nothing
 32381 ;; This function is called by:
 32382 ;;		__i2c_write
 32383 ;;		__i2c_read
 32384 ;;		_i2c_display_write_fixed
 32385 ;;		_i2c_display_write
 32386 ;; This function uses a non-reentrant model
 32387 ;;
 32388                           
 32389                           	psect	text160
 32390  008F6A                     __ptext160:
 32391                           	opt stack 0
 32392  008F6A                     __i2c_stop:
 32393                           	opt stack 27
 32394                           
 32395                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32396                           
 32397                           ;incstack = 0
 32398  008F6A  84C5               	bsf	4037,2,c	;volatile
 32399  008F6C  A4C5               	btfss	4037,2,c	;volatile
 32400  008F6E  0012               	return	
 32401  008F70  D7FD               	goto	l1169
 32402  008F72                     __end_of__i2c_stop:
 32403                           	opt stack 0
 32404                           tosu	equ	0xFFF
 32405                           tosh	equ	0xFFE
 32406                           tosl	equ	0xFFD
 32407                           pclath	equ	0xFFA
 32408                           tblptru	equ	0xFF8
 32409                           tblptrh	equ	0xFF7
 32410                           tblptrl	equ	0xFF6
 32411                           tablat	equ	0xFF5
 32412                           prodh	equ	0xFF4
 32413                           prodl	equ	0xFF3
 32414                           intcon	equ	0xFF2
 32415                           intcon2	equ	0xFF1
 32416                           intcon3	equ	0xFF0
 32417                           indf0	equ	0xFEF
 32418                           postinc0	equ	0xFEE
 32419                           fsr0h	equ	0xFEA
 32420                           fsr0l	equ	0xFE9
 32421                           wreg	equ	0xFE8
 32422                           indf1	equ	0xFE7
 32423                           postdec1	equ	0xFE5
 32424                           plusw1	equ	0xFE3
 32425                           fsr1h	equ	0xFE2
 32426                           fsr1l	equ	0xFE1
 32427                           indf2	equ	0xFDF
 32428                           postinc2	equ	0xFDE
 32429                           postdec2	equ	0xFDD
 32430                           plusw2	equ	0xFDB
 32431                           fsr2h	equ	0xFDA
 32432                           fsr2l	equ	0xFD9
 32433                           status	equ	0xFD8
 32434                           
 32435 ;; *************** function __i2c_start *****************
 32436 ;; Defined at:
 32437 ;;		line 54 in file "i2c.c"
 32438 ;; Parameters:    Size  Location     Type
 32439 ;;		None
 32440 ;; Auto vars:     Size  Location     Type
 32441 ;;		None
 32442 ;; Return value:  Size  Location     Type
 32443 ;;                  1    wreg      void 
 32444 ;; Registers used:
 32445 ;;		None
 32446 ;; Tracked objects:
 32447 ;;		On entry : 0/0
 32448 ;;		On exit  : 0/0
 32449 ;;		Unchanged: 0/0
 32450 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32451 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32452 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32453 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32454 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32455 ;;Total ram usage:        0 bytes
 32456 ;; Hardware stack levels used:    1
 32457 ;; This function calls:
 32458 ;;		Nothing
 32459 ;; This function is called by:
 32460 ;;		__i2c_write
 32461 ;;		__i2c_read
 32462 ;;		_i2c_display_write_fixed
 32463 ;;		_i2c_display_write
 32464 ;; This function uses a non-reentrant model
 32465 ;;
 32466                           
 32467                           	psect	text161
 32468  008F72                     __ptext161:
 32469                           	opt stack 0
 32470  008F72                     __i2c_start:
 32471                           	opt stack 27
 32472                           
 32473                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32474                           
 32475                           ;incstack = 0
 32476  008F72  80C5               	bsf	4037,0,c	;volatile
 32477  008F74  A0C5               	btfss	4037,0,c	;volatile
 32478  008F76  0012               	return	
 32479  008F78  D7FD               	goto	l1154
 32480  008F7A                     __end_of__i2c_start:
 32481                           	opt stack 0
 32482                           tosu	equ	0xFFF
 32483                           tosh	equ	0xFFE
 32484                           tosl	equ	0xFFD
 32485                           pclath	equ	0xFFA
 32486                           tblptru	equ	0xFF8
 32487                           tblptrh	equ	0xFF7
 32488                           tblptrl	equ	0xFF6
 32489                           tablat	equ	0xFF5
 32490                           prodh	equ	0xFF4
 32491                           prodl	equ	0xFF3
 32492                           intcon	equ	0xFF2
 32493                           intcon2	equ	0xFF1
 32494                           intcon3	equ	0xFF0
 32495                           indf0	equ	0xFEF
 32496                           postinc0	equ	0xFEE
 32497                           fsr0h	equ	0xFEA
 32498                           fsr0l	equ	0xFE9
 32499                           wreg	equ	0xFE8
 32500                           indf1	equ	0xFE7
 32501                           postdec1	equ	0xFE5
 32502                           plusw1	equ	0xFE3
 32503                           fsr1h	equ	0xFE2
 32504                           fsr1l	equ	0xFE1
 32505                           indf2	equ	0xFDF
 32506                           postinc2	equ	0xFDE
 32507                           postdec2	equ	0xFDD
 32508                           plusw2	equ	0xFDB
 32509                           fsr2h	equ	0xFDA
 32510                           fsr2l	equ	0xFD9
 32511                           status	equ	0xFD8
 32512                           
 32513 ;; *************** function __i2c_send *****************
 32514 ;; Defined at:
 32515 ;;		line 61 in file "i2c.c"
 32516 ;; Parameters:    Size  Location     Type
 32517 ;;  dat             1    wreg     unsigned char 
 32518 ;; Auto vars:     Size  Location     Type
 32519 ;;  dat             1    0[COMRAM] unsigned char 
 32520 ;; Return value:  Size  Location     Type
 32521 ;;                  1    wreg      void 
 32522 ;; Registers used:
 32523 ;;		wreg
 32524 ;; Tracked objects:
 32525 ;;		On entry : 0/0
 32526 ;;		On exit  : 0/0
 32527 ;;		Unchanged: 0/0
 32528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32530 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32532 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32533 ;;Total ram usage:        1 bytes
 32534 ;; Hardware stack levels used:    1
 32535 ;; This function calls:
 32536 ;;		Nothing
 32537 ;; This function is called by:
 32538 ;;		__i2c_write
 32539 ;;		__i2c_read
 32540 ;;		_i2c_display_write_fixed
 32541 ;;		_i2c_display_write
 32542 ;; This function uses a non-reentrant model
 32543 ;;
 32544                           
 32545                           	psect	text162
 32546  008F7A                     __ptext162:
 32547                           	opt stack 0
 32548  008F7A                     __i2c_send:
 32549                           	opt stack 27
 32550                           
 32551                           ;incstack = 0
 32552                           ;__i2c_send@dat stored from wreg
 32553  008F7A  6E01               	movwf	__i2c_send@dat,c
 32554                           
 32555                           ;i2c.c: 63: SSP1BUF = dat;
 32556  008F7C  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32557  008F80  0012               	return		;funcret
 32558  008F82                     __end_of__i2c_send:
 32559                           	opt stack 0
 32560                           tosu	equ	0xFFF
 32561                           tosh	equ	0xFFE
 32562                           tosl	equ	0xFFD
 32563                           pclath	equ	0xFFA
 32564                           tblptru	equ	0xFF8
 32565                           tblptrh	equ	0xFF7
 32566                           tblptrl	equ	0xFF6
 32567                           tablat	equ	0xFF5
 32568                           prodh	equ	0xFF4
 32569                           prodl	equ	0xFF3
 32570                           intcon	equ	0xFF2
 32571                           intcon2	equ	0xFF1
 32572                           intcon3	equ	0xFF0
 32573                           indf0	equ	0xFEF
 32574                           postinc0	equ	0xFEE
 32575                           fsr0h	equ	0xFEA
 32576                           fsr0l	equ	0xFE9
 32577                           wreg	equ	0xFE8
 32578                           indf1	equ	0xFE7
 32579                           postdec1	equ	0xFE5
 32580                           plusw1	equ	0xFE3
 32581                           fsr1h	equ	0xFE2
 32582                           fsr1l	equ	0xFE1
 32583                           indf2	equ	0xFDF
 32584                           postinc2	equ	0xFDE
 32585                           postdec2	equ	0xFDD
 32586                           plusw2	equ	0xFDB
 32587                           fsr2h	equ	0xFDA
 32588                           fsr2l	equ	0xFD9
 32589                           status	equ	0xFD8
 32590                           
 32591 ;; *************** function __parse_command_long *****************
 32592 ;; Defined at:
 32593 ;;		line 520 in file "api.c"
 32594 ;; Parameters:    Size  Location     Type
 32595 ;;  data            2   56[BANK0 ] PTR unsigned char 
 32596 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32597 ;; Auto vars:     Size  Location     Type
 32598 ;;  length          1   58[BANK0 ] unsigned char 
 32599 ;; Return value:  Size  Location     Type
 32600 ;;                  1    wreg      unsigned char 
 32601 ;; Registers used:
 32602 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32603 ;; Tracked objects:
 32604 ;;		On entry : 0/0
 32605 ;;		On exit  : 0/0
 32606 ;;		Unchanged: 0/0
 32607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32608 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32609 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32610 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32611 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32612 ;;Total ram usage:        3 bytes
 32613 ;; Hardware stack levels used:    1
 32614 ;; Hardware stack levels required when called:   10
 32615 ;; This function calls:
 32616 ;;		__parse_buffer_to_sector
 32617 ;;		__parse_file_append
 32618 ;;		__parse_file_create
 32619 ;;		__parse_file_delete
 32620 ;;		__parse_file_modify
 32621 ;;		__parse_file_rename
 32622 ;;		__parse_file_resize
 32623 ;;		__parse_format_drive
 32624 ;;		__parse_sector_to_buffer
 32625 ;;		__parse_write_buffer
 32626 ;; This function is called by:
 32627 ;;		_api_parse
 32628 ;; This function uses a non-reentrant model
 32629 ;;
 32630                           
 32631                           	psect	text163
 32632  005626                     __ptext163:
 32633                           	opt stack 0
 32634  005626                     __parse_command_long:
 32635                           	opt stack 19
 32636                           
 32637                           ;api.c: 522: uint8_t length = 65;
 32638                           
 32639                           ;incstack = 0
 32640  005626  0E41               	movlw	65
 32641  005628  0100               	movlb	0	; () banked
 32642  00562A  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32643                           
 32644                           ;api.c: 524: switch(data[0])
 32645  00562C  D048               	goto	l2786
 32646  00562E                     
 32647                           ; BSR set to: 0
 32648                           ;api.c: 527: length = _parse_file_resize(data);
 32649                           
 32650                           ; BSR set to: 0
 32651  00562E  C098  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 32652  005632  C099  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32653  005636  EC84  F02B         	call	__parse_file_resize	;wreg free
 32654  00563A  D03E               	goto	L43
 32655  00563C                     
 32656                           ; BSR set to: 0
 32657                           ;api.c: 531: length = _parse_file_delete(data);
 32658                           
 32659                           ; BSR set to: 0
 32660  00563C  C098  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 32661  005640  C099  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32662  005644  ECC2  F040         	call	__parse_file_delete	;wreg free
 32663  005648  D037               	goto	L43
 32664  00564A                     
 32665                           ; BSR set to: 0
 32666                           ;api.c: 535: length = _parse_file_create(data);
 32667                           
 32668                           ; BSR set to: 0
 32669  00564A  C098  F059         	movff	__parse_command_long@data,__parse_file_create@data
 32670  00564E  C099  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32671  005652  EC68  F028         	call	__parse_file_create	;wreg free
 32672  005656  D030               	goto	L43
 32673  005658                     
 32674                           ; BSR set to: 0
 32675                           ;api.c: 539: length = _parse_file_rename(data);
 32676                           
 32677                           ; BSR set to: 0
 32678  005658  C098  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 32679  00565C  C099  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32680  005660  ECD8  F03B         	call	__parse_file_rename	;wreg free
 32681  005664  D029               	goto	L43
 32682  005666                     
 32683                           ; BSR set to: 0
 32684                           ;api.c: 543: length = _parse_file_append(data);
 32685                           
 32686                           ; BSR set to: 0
 32687  005666  C098  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 32688  00566A  C099  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32689  00566E  ECC1  F039         	call	__parse_file_append	;wreg free
 32690  005672  D022               	goto	L43
 32691  005674                     
 32692                           ; BSR set to: 0
 32693                           ;api.c: 547: length = _parse_file_modify(data);
 32694                           
 32695                           ; BSR set to: 0
 32696  005674  C098  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 32697  005678  C099  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32698  00567C  ECDF  F022         	call	__parse_file_modify	;wreg free
 32699  005680  D01B               	goto	L43
 32700  005682                     
 32701                           ; BSR set to: 0
 32702                           ;api.c: 551: length = _parse_format_drive(data);
 32703                           
 32704                           ; BSR set to: 0
 32705  005682  C098  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32706  005686  C099  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32707  00568A  EC12  F042         	call	__parse_format_drive	;wreg free
 32708  00568E  D014               	goto	L43
 32709  005690                     
 32710                           ; BSR set to: 0
 32711                           ;api.c: 555: length = _parse_sector_to_buffer(data);
 32712                           
 32713                           ; BSR set to: 0
 32714  005690  C098  F052         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 32715  005694  C099  F053         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 32716  005698  ECB5  F038         	call	__parse_sector_to_buffer	;wreg free
 32717  00569C  D00D               	goto	L43
 32718  00569E                     
 32719                           ; BSR set to: 0
 32720                           ;api.c: 559: length = _parse_buffer_to_sector(data);
 32721                           
 32722                           ; BSR set to: 0
 32723  00569E  C098  F052         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 32724  0056A2  C099  F053         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 32725  0056A6  ECF9  F038         	call	__parse_buffer_to_sector	;wreg free
 32726  0056AA  D006               	goto	L43
 32727  0056AC                     
 32728                           ; BSR set to: 0
 32729                           ;api.c: 563: length = _parse_write_buffer(data);
 32730                           
 32731                           ; BSR set to: 0
 32732  0056AC  C098  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 32733  0056B0  C099  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 32734  0056B4  EC97  F033         	call	__parse_write_buffer	;wreg free
 32735  0056B8                     L43:
 32736  0056B8  0100               	movlb	0	; () banked
 32737  0056BA  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32738                           
 32739                           ; BSR set to: 0
 32740                           ;api.c: 565: }
 32741                           
 32742                           ;api.c: 564: break;
 32743  0056BC  D023               	goto	l2788
 32744  0056BE                     l2786:
 32745                           
 32746                           ; BSR set to: 0
 32747                           
 32748                           ; BSR set to: 0
 32749  0056BE  C098  FFD9         	movff	__parse_command_long@data,fsr2l
 32750  0056C2  C099  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32751  0056C6  50DF               	movf	indf2,w,c
 32752                           
 32753                           ; Switch size 1, requested type "space"
 32754                           ; Number of cases is 10, Range of values is 80 to 89
 32755                           ; switch strategies available:
 32756                           ; Name         Instructions Cycles
 32757                           ; simple_byte           31    16 (average)
 32758                           ;	Chosen strategy is simple_byte
 32759  0056C8  0A50               	xorlw	80	; case 80
 32760  0056CA  B4D8               	btfsc	status,2,c
 32761  0056CC  D7B0               	goto	l2787
 32762  0056CE  0A01               	xorlw	1	; case 81
 32763  0056D0  B4D8               	btfsc	status,2,c
 32764  0056D2  D7B4               	goto	l2789
 32765  0056D4  0A03               	xorlw	3	; case 82
 32766  0056D6  B4D8               	btfsc	status,2,c
 32767  0056D8  D7B8               	goto	l2790
 32768  0056DA  0A01               	xorlw	1	; case 83
 32769  0056DC  B4D8               	btfsc	status,2,c
 32770  0056DE  D7BC               	goto	l2791
 32771  0056E0  0A07               	xorlw	7	; case 84
 32772  0056E2  B4D8               	btfsc	status,2,c
 32773  0056E4  D7C0               	goto	l2792
 32774  0056E6  0A01               	xorlw	1	; case 85
 32775  0056E8  B4D8               	btfsc	status,2,c
 32776  0056EA  D7C4               	goto	l2793
 32777  0056EC  0A03               	xorlw	3	; case 86
 32778  0056EE  B4D8               	btfsc	status,2,c
 32779  0056F0  D7C8               	goto	l2794
 32780  0056F2  0A01               	xorlw	1	; case 87
 32781  0056F4  B4D8               	btfsc	status,2,c
 32782  0056F6  D7CC               	goto	l2795
 32783  0056F8  0A0F               	xorlw	15	; case 88
 32784  0056FA  B4D8               	btfsc	status,2,c
 32785  0056FC  D7D0               	goto	l2796
 32786  0056FE  0A01               	xorlw	1	; case 89
 32787  005700  B4D8               	btfsc	status,2,c
 32788  005702  D7D4               	goto	l2797
 32789  005704                     l2788:
 32790                           
 32791                           ; BSR set to: 0
 32792                           ;api.c: 567: return length;
 32793                           
 32794                           ; BSR set to: 0
 32795  005704  519A               	movf	__parse_command_long@length& (0+255),w,b
 32796  005706  0012               	return	
 32797  005708                     __end_of__parse_command_long:
 32798                           	opt stack 0
 32799                           tosu	equ	0xFFF
 32800                           tosh	equ	0xFFE
 32801                           tosl	equ	0xFFD
 32802                           pclath	equ	0xFFA
 32803                           tblptru	equ	0xFF8
 32804                           tblptrh	equ	0xFF7
 32805                           tblptrl	equ	0xFF6
 32806                           tablat	equ	0xFF5
 32807                           prodh	equ	0xFF4
 32808                           prodl	equ	0xFF3
 32809                           intcon	equ	0xFF2
 32810                           intcon2	equ	0xFF1
 32811                           intcon3	equ	0xFF0
 32812                           indf0	equ	0xFEF
 32813                           postinc0	equ	0xFEE
 32814                           fsr0h	equ	0xFEA
 32815                           fsr0l	equ	0xFE9
 32816                           wreg	equ	0xFE8
 32817                           indf1	equ	0xFE7
 32818                           postdec1	equ	0xFE5
 32819                           plusw1	equ	0xFE3
 32820                           fsr1h	equ	0xFE2
 32821                           fsr1l	equ	0xFE1
 32822                           indf2	equ	0xFDF
 32823                           postinc2	equ	0xFDE
 32824                           postdec2	equ	0xFDD
 32825                           plusw2	equ	0xFDB
 32826                           fsr2h	equ	0xFDA
 32827                           fsr2l	equ	0xFD9
 32828                           status	equ	0xFD8
 32829                           
 32830 ;; *************** function __parse_write_buffer *****************
 32831 ;; Defined at:
 32832 ;;		line 739 in file "api.c"
 32833 ;; Parameters:    Size  Location     Type
 32834 ;;  data            2   42[COMRAM] PTR unsigned char 
 32835 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32836 ;; Auto vars:     Size  Location     Type
 32837 ;;  number_of_by    2   47[COMRAM] unsigned int 
 32838 ;;  start_byte      2   45[COMRAM] unsigned int 
 32839 ;; Return value:  Size  Location     Type
 32840 ;;                  1    wreg      unsigned char 
 32841 ;; Registers used:
 32842 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 32843 ;; Tracked objects:
 32844 ;;		On entry : 0/0
 32845 ;;		On exit  : 0/0
 32846 ;;		Unchanged: 0/0
 32847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32849 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32850 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32851 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32852 ;;Total ram usage:        7 bytes
 32853 ;; Hardware stack levels used:    1
 32854 ;; Hardware stack levels required when called:    6
 32855 ;; This function calls:
 32856 ;;		_fat_write_to_buffer
 32857 ;; This function is called by:
 32858 ;;		__parse_command_long
 32859 ;; This function uses a non-reentrant model
 32860 ;;
 32861                           
 32862                           	psect	text164
 32863  00672E                     __ptext164:
 32864                           	opt stack 0
 32865  00672E                     __parse_write_buffer:
 32866                           	opt stack 22
 32867                           
 32868                           ;api.c: 741: uint16_t start_byte;;api.c: 742: uint16_t number_of_bytes;;api.c: 745: if((
      +                          data[0]!=COMMAND_FILE_APPEND) || (data[4]!=0xE2) || (data[5]!=0x30))
 32869                           
 32870                           ; BSR set to: 0
 32871                           ;incstack = 0
 32872  00672E  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 32873  006732  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 32874  006736  0E54               	movlw	84
 32875  006738  18DE               	xorwf	postinc2,w,c
 32876  00673A  A4D8               	btfss	status,2,c
 32877  00673C  D014               	goto	u11050
 32878  00673E  EE20 F004          	lfsr	2,4
 32879  006742  502B               	movf	__parse_write_buffer@data,w,c
 32880  006744  26D9               	addwf	fsr2l,f,c
 32881  006746  502C               	movf	__parse_write_buffer@data+1,w,c
 32882  006748  22DA               	addwfc	fsr2h,f,c
 32883  00674A  0EE2               	movlw	226
 32884  00674C  18DE               	xorwf	postinc2,w,c
 32885  00674E  A4D8               	btfss	status,2,c
 32886  006750  D00A               	goto	u11050
 32887  006752  EE20 F005          	lfsr	2,5
 32888  006756  502B               	movf	__parse_write_buffer@data,w,c
 32889  006758  26D9               	addwf	fsr2l,f,c
 32890  00675A  502C               	movf	__parse_write_buffer@data+1,w,c
 32891  00675C  22DA               	addwfc	fsr2h,f,c
 32892  00675E  0E30               	movlw	48
 32893  006760  18DE               	xorwf	postinc2,w,c
 32894  006762  B4D8               	btfsc	status,2,c
 32895  006764  D002               	goto	l2855
 32896  006766                     u11050:
 32897                           
 32898                           ;api.c: 746: {;api.c: 748: return 65;
 32899  006766  0E41               	movlw	65
 32900  006768  0012               	return	
 32901  00676A                     l2855:
 32902                           
 32903                           ;api.c: 749: };api.c: 752: start_byte |= data[1];
 32904  00676A  EE20 F001          	lfsr	2,1
 32905  00676E  502B               	movf	__parse_write_buffer@data,w,c
 32906  006770  26D9               	addwf	fsr2l,f,c
 32907  006772  502C               	movf	__parse_write_buffer@data+1,w,c
 32908  006774  22DA               	addwfc	fsr2h,f,c
 32909  006776  50DF               	movf	indf2,w,c
 32910  006778  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32911  00677A  502D               	movf	??__parse_write_buffer,w,c
 32912  00677C  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 32913                           
 32914                           ;api.c: 753: start_byte <<= 8;
 32915  00677E  502E               	movf	__parse_write_buffer@start_byte,w,c
 32916  006780  6E2F               	movwf	__parse_write_buffer@start_byte+1,c
 32917  006782  6A2E               	clrf	__parse_write_buffer@start_byte,c
 32918                           
 32919                           ;api.c: 754: start_byte |= data[2];
 32920  006784  EE20 F002          	lfsr	2,2
 32921  006788  502B               	movf	__parse_write_buffer@data,w,c
 32922  00678A  26D9               	addwf	fsr2l,f,c
 32923  00678C  502C               	movf	__parse_write_buffer@data+1,w,c
 32924  00678E  22DA               	addwfc	fsr2h,f,c
 32925  006790  50DF               	movf	indf2,w,c
 32926  006792  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32927  006794  502D               	movf	??__parse_write_buffer,w,c
 32928  006796  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 32929                           
 32930                           ;api.c: 757: number_of_bytes = data[3];
 32931  006798  EE20 F003          	lfsr	2,3
 32932  00679C  502B               	movf	__parse_write_buffer@data,w,c
 32933  00679E  26D9               	addwf	fsr2l,f,c
 32934  0067A0  502C               	movf	__parse_write_buffer@data+1,w,c
 32935  0067A2  22DA               	addwfc	fsr2h,f,c
 32936  0067A4  50DF               	movf	indf2,w,c
 32937  0067A6  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 32938  0067A8  502D               	movf	??__parse_write_buffer,w,c
 32939  0067AA  6E30               	movwf	__parse_write_buffer@number_of_bytes,c
 32940  0067AC  6A31               	clrf	__parse_write_buffer@number_of_bytes+1,c
 32941                           
 32942                           ;api.c: 760: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 32943  0067AE  C02E  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 32944  0067B2  C02F  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 32945  0067B6  C030  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 32946  0067BA  C031  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 32947  0067BE  0E06               	movlw	6
 32948  0067C0  242B               	addwf	__parse_write_buffer@data,w,c
 32949  0067C2  6E29               	movwf	fat_write_to_buffer@data,c
 32950  0067C4  0E00               	movlw	0
 32951  0067C6  202C               	addwfc	__parse_write_buffer@data+1,w,c
 32952  0067C8  6E2A               	movwf	fat_write_to_buffer@data+1,c
 32953  0067CA  EC6C  F046         	call	_fat_write_to_buffer	;wreg free
 32954                           
 32955                           ;api.c: 763: return 6 + number_of_bytes;
 32956  0067CE  5030               	movf	__parse_write_buffer@number_of_bytes,w,c
 32957  0067D0  0F06               	addlw	6
 32958  0067D2  0012               	return	
 32959  0067D4                     __end_of__parse_write_buffer:
 32960                           	opt stack 0
 32961                           tosu	equ	0xFFF
 32962                           tosh	equ	0xFFE
 32963                           tosl	equ	0xFFD
 32964                           pclath	equ	0xFFA
 32965                           tblptru	equ	0xFF8
 32966                           tblptrh	equ	0xFF7
 32967                           tblptrl	equ	0xFF6
 32968                           tablat	equ	0xFF5
 32969                           prodh	equ	0xFF4
 32970                           prodl	equ	0xFF3
 32971                           intcon	equ	0xFF2
 32972                           intcon2	equ	0xFF1
 32973                           intcon3	equ	0xFF0
 32974                           indf0	equ	0xFEF
 32975                           postinc0	equ	0xFEE
 32976                           fsr0h	equ	0xFEA
 32977                           fsr0l	equ	0xFE9
 32978                           wreg	equ	0xFE8
 32979                           indf1	equ	0xFE7
 32980                           postdec1	equ	0xFE5
 32981                           plusw1	equ	0xFE3
 32982                           fsr1h	equ	0xFE2
 32983                           fsr1l	equ	0xFE1
 32984                           indf2	equ	0xFDF
 32985                           postinc2	equ	0xFDE
 32986                           postdec2	equ	0xFDD
 32987                           plusw2	equ	0xFDB
 32988                           fsr2h	equ	0xFDA
 32989                           fsr2l	equ	0xFD9
 32990                           status	equ	0xFD8
 32991                           
 32992 ;; *************** function _fat_write_to_buffer *****************
 32993 ;; Defined at:
 32994 ;;		line 1436 in file "fat16.c"
 32995 ;; Parameters:    Size  Location     Type
 32996 ;;  start           2   36[COMRAM] unsigned int 
 32997 ;;  length          2   38[COMRAM] unsigned int 
 32998 ;;  data            2   40[COMRAM] PTR unsigned char 
 32999 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33000 ;; Auto vars:     Size  Location     Type
 33001 ;;		None
 33002 ;; Return value:  Size  Location     Type
 33003 ;;                  1    wreg      void 
 33004 ;; Registers used:
 33005 ;;		wreg, status,2, status,0, cstack
 33006 ;; Tracked objects:
 33007 ;;		On entry : 0/0
 33008 ;;		On exit  : 0/0
 33009 ;;		Unchanged: 0/0
 33010 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33011 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33012 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33013 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33014 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33015 ;;Total ram usage:        6 bytes
 33016 ;; Hardware stack levels used:    1
 33017 ;; Hardware stack levels required when called:    5
 33018 ;; This function calls:
 33019 ;;		_flash_write_to_buffer
 33020 ;; This function is called by:
 33021 ;;		__parse_write_buffer
 33022 ;; This function uses a non-reentrant model
 33023 ;;
 33024                           
 33025                           	psect	text165
 33026  008CD8                     __ptext165:
 33027                           	opt stack 0
 33028  008CD8                     _fat_write_to_buffer:
 33029                           	opt stack 22
 33030                           
 33031                           ;fat16.c: 1438: flash_write_to_buffer(start, length, data);
 33032                           
 33033                           ;incstack = 0
 33034  008CD8  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 33035  008CDC  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 33036  008CE0  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 33037  008CE4  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 33038  008CE8  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 33039  008CEC  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 33040  008CF0  EC1B  F046         	call	_flash_write_to_buffer	;wreg free
 33041  008CF4  0012               	return		;funcret
 33042  008CF6                     __end_of_fat_write_to_buffer:
 33043                           	opt stack 0
 33044                           tosu	equ	0xFFF
 33045                           tosh	equ	0xFFE
 33046                           tosl	equ	0xFFD
 33047                           pclath	equ	0xFFA
 33048                           tblptru	equ	0xFF8
 33049                           tblptrh	equ	0xFF7
 33050                           tblptrl	equ	0xFF6
 33051                           tablat	equ	0xFF5
 33052                           prodh	equ	0xFF4
 33053                           prodl	equ	0xFF3
 33054                           intcon	equ	0xFF2
 33055                           intcon2	equ	0xFF1
 33056                           intcon3	equ	0xFF0
 33057                           indf0	equ	0xFEF
 33058                           postinc0	equ	0xFEE
 33059                           fsr0h	equ	0xFEA
 33060                           fsr0l	equ	0xFE9
 33061                           wreg	equ	0xFE8
 33062                           indf1	equ	0xFE7
 33063                           postdec1	equ	0xFE5
 33064                           plusw1	equ	0xFE3
 33065                           fsr1h	equ	0xFE2
 33066                           fsr1l	equ	0xFE1
 33067                           indf2	equ	0xFDF
 33068                           postinc2	equ	0xFDE
 33069                           postdec2	equ	0xFDD
 33070                           plusw2	equ	0xFDB
 33071                           fsr2h	equ	0xFDA
 33072                           fsr2l	equ	0xFD9
 33073                           status	equ	0xFD8
 33074                           
 33075 ;; *************** function _flash_write_to_buffer *****************
 33076 ;; Defined at:
 33077 ;;		line 515 in file "flash.c"
 33078 ;; Parameters:    Size  Location     Type
 33079 ;;  start           2   30[COMRAM] unsigned int 
 33080 ;;  length          2   32[COMRAM] unsigned int 
 33081 ;;  data            2   34[COMRAM] PTR unsigned char 
 33082 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33083 ;; Auto vars:     Size  Location     Type
 33084 ;;		None
 33085 ;; Return value:  Size  Location     Type
 33086 ;;                  1    wreg      void 
 33087 ;; Registers used:
 33088 ;;		wreg, status,2, status,0, cstack
 33089 ;; Tracked objects:
 33090 ;;		On entry : 0/0
 33091 ;;		On exit  : 0/0
 33092 ;;		Unchanged: 0/0
 33093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33094 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33097 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33098 ;;Total ram usage:        6 bytes
 33099 ;; Hardware stack levels used:    1
 33100 ;; Hardware stack levels required when called:    4
 33101 ;; This function calls:
 33102 ;;		__flash_write_to_buffer
 33103 ;; This function is called by:
 33104 ;;		_fat_write_to_buffer
 33105 ;; This function uses a non-reentrant model
 33106 ;;
 33107                           
 33108                           	psect	text166
 33109  008C36                     __ptext166:
 33110                           	opt stack 0
 33111  008C36                     _flash_write_to_buffer:
 33112                           	opt stack 22
 33113                           
 33114                           ;flash.c: 517: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 33115                           
 33116                           ;incstack = 0
 33117  008C36  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 33118  008C3A  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 33119  008C3E  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 33120  008C42  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 33121  008C46  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 33122  008C4A  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 33123  008C4E  0E01               	movlw	1
 33124  008C50  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 33125  008C52  EC13  F041         	call	__flash_write_to_buffer	;wreg free
 33126  008C56  0012               	return		;funcret
 33127  008C58                     __end_of_flash_write_to_buffer:
 33128                           	opt stack 0
 33129                           tosu	equ	0xFFF
 33130                           tosh	equ	0xFFE
 33131                           tosl	equ	0xFFD
 33132                           pclath	equ	0xFFA
 33133                           tblptru	equ	0xFF8
 33134                           tblptrh	equ	0xFF7
 33135                           tblptrl	equ	0xFF6
 33136                           tablat	equ	0xFF5
 33137                           prodh	equ	0xFF4
 33138                           prodl	equ	0xFF3
 33139                           intcon	equ	0xFF2
 33140                           intcon2	equ	0xFF1
 33141                           intcon3	equ	0xFF0
 33142                           indf0	equ	0xFEF
 33143                           postinc0	equ	0xFEE
 33144                           fsr0h	equ	0xFEA
 33145                           fsr0l	equ	0xFE9
 33146                           wreg	equ	0xFE8
 33147                           indf1	equ	0xFE7
 33148                           postdec1	equ	0xFE5
 33149                           plusw1	equ	0xFE3
 33150                           fsr1h	equ	0xFE2
 33151                           fsr1l	equ	0xFE1
 33152                           indf2	equ	0xFDF
 33153                           postinc2	equ	0xFDE
 33154                           postdec2	equ	0xFDD
 33155                           plusw2	equ	0xFDB
 33156                           fsr2h	equ	0xFDA
 33157                           fsr2l	equ	0xFD9
 33158                           status	equ	0xFD8
 33159                           
 33160 ;; *************** function __parse_sector_to_buffer *****************
 33161 ;; Defined at:
 33162 ;;		line 697 in file "api.c"
 33163 ;; Parameters:    Size  Location     Type
 33164 ;;  data            2   81[COMRAM] PTR unsigned char 
 33165 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33166 ;; Auto vars:     Size  Location     Type
 33167 ;;  sector          2   84[COMRAM] unsigned int 
 33168 ;; Return value:  Size  Location     Type
 33169 ;;                  1    wreg      unsigned char 
 33170 ;; Registers used:
 33171 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33172 ;; Tracked objects:
 33173 ;;		On entry : 0/0
 33174 ;;		On exit  : 0/0
 33175 ;;		Unchanged: 0/0
 33176 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33177 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33178 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33179 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33180 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33181 ;;Total ram usage:        5 bytes
 33182 ;; Hardware stack levels used:    1
 33183 ;; Hardware stack levels required when called:    8
 33184 ;; This function calls:
 33185 ;;		_fat_copy_sector_to_buffer
 33186 ;; This function is called by:
 33187 ;;		__parse_command_long
 33188 ;; This function uses a non-reentrant model
 33189 ;;
 33190                           
 33191                           	psect	text167
 33192  00716A                     __ptext167:
 33193                           	opt stack 0
 33194  00716A                     __parse_sector_to_buffer:
 33195                           	opt stack 20
 33196                           
 33197                           ;api.c: 700: uint16_t sector;;api.c: 702: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (dat
      +                          a[4]!=0x1B) || (data[5]!=0x35))
 33198                           
 33199                           ;incstack = 0
 33200  00716A  C052  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 33201  00716E  C053  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 33202  007172  0E57               	movlw	87
 33203  007174  18DE               	xorwf	postinc2,w,c
 33204  007176  A4D8               	btfss	status,2,c
 33205  007178  D014               	goto	u10990
 33206  00717A  EE20 F004          	lfsr	2,4
 33207  00717E  5052               	movf	__parse_sector_to_buffer@data,w,c
 33208  007180  26D9               	addwf	fsr2l,f,c
 33209  007182  5053               	movf	__parse_sector_to_buffer@data+1,w,c
 33210  007184  22DA               	addwfc	fsr2h,f,c
 33211  007186  0E1B               	movlw	27
 33212  007188  18DE               	xorwf	postinc2,w,c
 33213  00718A  A4D8               	btfss	status,2,c
 33214  00718C  D00A               	goto	u10990
 33215  00718E  EE20 F005          	lfsr	2,5
 33216  007192  5052               	movf	__parse_sector_to_buffer@data,w,c
 33217  007194  26D9               	addwf	fsr2l,f,c
 33218  007196  5053               	movf	__parse_sector_to_buffer@data+1,w,c
 33219  007198  22DA               	addwfc	fsr2h,f,c
 33220  00719A  0E35               	movlw	53
 33221  00719C  18DE               	xorwf	postinc2,w,c
 33222  00719E  B4D8               	btfsc	status,2,c
 33223  0071A0  D002               	goto	l2843
 33224  0071A2                     u10990:
 33225                           
 33226                           ;api.c: 703: {;api.c: 704: return 6;
 33227  0071A2  0E06               	movlw	6
 33228  0071A4  0012               	return	
 33229  0071A6                     l2843:
 33230                           
 33231                           ;api.c: 705: };api.c: 708: sector |= data[2];
 33232  0071A6  EE20 F002          	lfsr	2,2
 33233  0071AA  5052               	movf	__parse_sector_to_buffer@data,w,c
 33234  0071AC  26D9               	addwf	fsr2l,f,c
 33235  0071AE  5053               	movf	__parse_sector_to_buffer@data+1,w,c
 33236  0071B0  22DA               	addwfc	fsr2h,f,c
 33237  0071B2  50DF               	movf	indf2,w,c
 33238  0071B4  6E54               	movwf	??__parse_sector_to_buffer& (0+255),c
 33239  0071B6  5054               	movf	??__parse_sector_to_buffer,w,c
 33240  0071B8  1255               	iorwf	__parse_sector_to_buffer@sector,f,c
 33241                           
 33242                           ;api.c: 709: sector <<= 8;
 33243  0071BA  5055               	movf	__parse_sector_to_buffer@sector,w,c
 33244  0071BC  6E56               	movwf	__parse_sector_to_buffer@sector+1,c
 33245  0071BE  6A55               	clrf	__parse_sector_to_buffer@sector,c
 33246                           
 33247                           ;api.c: 710: sector |= data[3];
 33248  0071C0  EE20 F003          	lfsr	2,3
 33249  0071C4  5052               	movf	__parse_sector_to_buffer@data,w,c
 33250  0071C6  26D9               	addwf	fsr2l,f,c
 33251  0071C8  5053               	movf	__parse_sector_to_buffer@data+1,w,c
 33252  0071CA  22DA               	addwfc	fsr2h,f,c
 33253  0071CC  50DF               	movf	indf2,w,c
 33254  0071CE  6E54               	movwf	??__parse_sector_to_buffer& (0+255),c
 33255  0071D0  5054               	movf	??__parse_sector_to_buffer,w,c
 33256  0071D2  1255               	iorwf	__parse_sector_to_buffer@sector,f,c
 33257                           
 33258                           ;api.c: 713: fat_copy_sector_to_buffer(data[1], sector);
 33259  0071D4  C055  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 33260  0071D8  C056  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 33261  0071DC  EE20 F001          	lfsr	2,1
 33262  0071E0  5052               	movf	__parse_sector_to_buffer@data,w,c
 33263  0071E2  26D9               	addwf	fsr2l,f,c
 33264  0071E4  5053               	movf	__parse_sector_to_buffer@data+1,w,c
 33265  0071E6  22DA               	addwfc	fsr2h,f,c
 33266  0071E8  50DF               	movf	indf2,w,c
 33267  0071EA  ECE9  F031         	call	_fat_copy_sector_to_buffer
 33268                           
 33269                           ;api.c: 715: return 6;
 33270  0071EE  0E06               	movlw	6
 33271  0071F0  0012               	return	
 33272  0071F2                     __end_of__parse_sector_to_buffer:
 33273                           	opt stack 0
 33274                           tosu	equ	0xFFF
 33275                           tosh	equ	0xFFE
 33276                           tosl	equ	0xFFD
 33277                           pclath	equ	0xFFA
 33278                           tblptru	equ	0xFF8
 33279                           tblptrh	equ	0xFF7
 33280                           tblptrl	equ	0xFF6
 33281                           tablat	equ	0xFF5
 33282                           prodh	equ	0xFF4
 33283                           prodl	equ	0xFF3
 33284                           intcon	equ	0xFF2
 33285                           intcon2	equ	0xFF1
 33286                           intcon3	equ	0xFF0
 33287                           indf0	equ	0xFEF
 33288                           postinc0	equ	0xFEE
 33289                           fsr0h	equ	0xFEA
 33290                           fsr0l	equ	0xFE9
 33291                           wreg	equ	0xFE8
 33292                           indf1	equ	0xFE7
 33293                           postdec1	equ	0xFE5
 33294                           plusw1	equ	0xFE3
 33295                           fsr1h	equ	0xFE2
 33296                           fsr1l	equ	0xFE1
 33297                           indf2	equ	0xFDF
 33298                           postinc2	equ	0xFDE
 33299                           postdec2	equ	0xFDD
 33300                           plusw2	equ	0xFDB
 33301                           fsr2h	equ	0xFDA
 33302                           fsr2l	equ	0xFD9
 33303                           status	equ	0xFD8
 33304                           
 33305 ;; *************** function _fat_copy_sector_to_buffer *****************
 33306 ;; Defined at:
 33307 ;;		line 1355 in file "fat16.c"
 33308 ;; Parameters:    Size  Location     Type
 33309 ;;  file_number     1    wreg     unsigned char 
 33310 ;;  sector          2   66[COMRAM] unsigned int 
 33311 ;; Auto vars:     Size  Location     Type
 33312 ;;  file_number     1   78[COMRAM] unsigned char 
 33313 ;;  file_size       4   72[COMRAM] unsigned long 
 33314 ;;  cluster         2   79[COMRAM] unsigned int 
 33315 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 33316 ;; Return value:  Size  Location     Type
 33317 ;;                  1    wreg      unsigned char 
 33318 ;; Registers used:
 33319 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33320 ;; Tracked objects:
 33321 ;;		On entry : 0/0
 33322 ;;		On exit  : 0/0
 33323 ;;		Unchanged: 0/0
 33324 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33325 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33326 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33327 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33328 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33329 ;;Total ram usage:       15 bytes
 33330 ;; Hardware stack levels used:    1
 33331 ;; Hardware stack levels required when called:    7
 33332 ;; This function calls:
 33333 ;;		__data_sector_from_cluster
 33334 ;;		__find_nth_cluster
 33335 ;;		__get_first_cluster
 33336 ;;		__root_is_available
 33337 ;;		_fat_get_file_size
 33338 ;;		_flash_copy_page_to_buffer
 33339 ;; This function is called by:
 33340 ;;		__parse_sector_to_buffer
 33341 ;; This function uses a non-reentrant model
 33342 ;;
 33343                           
 33344                           	psect	text168
 33345  0063D2                     __ptext168:
 33346                           	opt stack 0
 33347  0063D2                     _fat_copy_sector_to_buffer:
 33348                           	opt stack 20
 33349                           
 33350                           ;incstack = 0
 33351                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 33352  0063D2  6E4F               	movwf	fat_copy_sector_to_buffer@file_number,c
 33353                           
 33354                           ;fat16.c: 1357: uint32_t file_size;;fat16.c: 1358: uint16_t number_of_clusters;;fat16.c:
      +                           1359: uint16_t cluster;;fat16.c: 1362: if(_root_is_available(file_number))
 33355  0063D4  504F               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33356  0063D6  ECA7  F03D         	call	__root_is_available
 33357  0063DA  0900               	iorlw	0
 33358  0063DC  A4D8               	btfss	status,2,c
 33359  0063DE  0012               	return	
 33360                           
 33361                           ;fat16.c: 1366: };fat16.c: 1369: file_size = fat_get_file_size(file_number);
 33362                           
 33363                           ;fat16.c: 1363: {;fat16.c: 1365: return 0xFF;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33364  0063E0  504F               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33365  0063E2  EC0F  F03C         	call	_fat_get_file_size
 33366  0063E6  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 33367  0063EA  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 33368  0063EE  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 33369  0063F2  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 33370                           
 33371                           ;fat16.c: 1372: number_of_clusters = (file_size + 512 - 1) >> 9;
 33372  0063F6  0EFF               	movlw	255
 33373  0063F8  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 33374  0063FA  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 33375  0063FC  0E01               	movlw	1
 33376  0063FE  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 33377  006400  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 33378  006402  0E00               	movlw	0
 33379  006404  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 33380  006406  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 33381  006408  0E00               	movlw	0
 33382  00640A  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 33383  00640C  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 33384  00640E  0E0A               	movlw	10
 33385  006410  D005               	goto	u10410
 33386  006412                     u10415:
 33387  006412  90D8               	bcf	status,0,c
 33388  006414  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 33389  006416  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 33390  006418  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 33391  00641A  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 33392  00641C                     u10410:
 33393  00641C  2EE8               	decfsz	wreg,f,c
 33394  00641E  D7F9               	goto	u10415
 33395  006420  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 33396  006424  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 33397                           
 33398                           ;fat16.c: 1373: if(sector > number_of_clusters)
 33399  006428  5043               	movf	fat_copy_sector_to_buffer@sector,w,c
 33400  00642A  5C4D               	subwf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 33401  00642C  5044               	movf	fat_copy_sector_to_buffer@sector+1,w,c
 33402  00642E  584E               	subwfb	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 33403  006430  A0D8               	btfss	status,0,c
 33404  006432  0012               	return	
 33405                           
 33406                           ;fat16.c: 1377: };fat16.c: 1380: cluster = _get_first_cluster(file_number);
 33407                           
 33408                           ;fat16.c: 1374: {;fat16.c: 1376: return 0xFE;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33409  006434  504F               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33410  006436  EC3B  F041         	call	__get_first_cluster
 33411  00643A  C030  F050         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 33412  00643E  C031  F051         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33413                           
 33414                           ;fat16.c: 1381: cluster = _find_nth_cluster(cluster, sector);
 33415  006442  C050  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 33416  006446  C051  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 33417  00644A  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 33418  00644E  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 33419  006452  ECCF  F035         	call	__find_nth_cluster	;wreg free
 33420  006456  C038  F050         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 33421  00645A  C039  F051         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33422                           
 33423                           ;fat16.c: 1384: cluster = _data_sector_from_cluster(cluster);
 33424  00645E  C050  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 33425  006462  C051  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 33426  006466  EC62  F047         	call	__data_sector_from_cluster	;wreg free
 33427  00646A  C001  F050         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@cluster
 33428  00646E  C002  F051         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33429                           
 33430                           ;fat16.c: 1387: flash_copy_page_to_buffer(cluster);
 33431  006472  C050  F01E         	movff	fat_copy_sector_to_buffer@cluster,flash_copy_page_to_buffer@page
 33432  006476  C051  F01F         	movff	fat_copy_sector_to_buffer@cluster+1,flash_copy_page_to_buffer@page+1
 33433  00647A  EC29  F047         	call	_flash_copy_page_to_buffer	;wreg free
 33434  00647E  0012               	return	
 33435  006480                     __end_of_fat_copy_sector_to_buffer:
 33436                           	opt stack 0
 33437                           tosu	equ	0xFFF
 33438                           tosh	equ	0xFFE
 33439                           tosl	equ	0xFFD
 33440                           pclath	equ	0xFFA
 33441                           tblptru	equ	0xFF8
 33442                           tblptrh	equ	0xFF7
 33443                           tblptrl	equ	0xFF6
 33444                           tablat	equ	0xFF5
 33445                           prodh	equ	0xFF4
 33446                           prodl	equ	0xFF3
 33447                           intcon	equ	0xFF2
 33448                           intcon2	equ	0xFF1
 33449                           intcon3	equ	0xFF0
 33450                           indf0	equ	0xFEF
 33451                           postinc0	equ	0xFEE
 33452                           fsr0h	equ	0xFEA
 33453                           fsr0l	equ	0xFE9
 33454                           wreg	equ	0xFE8
 33455                           indf1	equ	0xFE7
 33456                           postdec1	equ	0xFE5
 33457                           plusw1	equ	0xFE3
 33458                           fsr1h	equ	0xFE2
 33459                           fsr1l	equ	0xFE1
 33460                           indf2	equ	0xFDF
 33461                           postinc2	equ	0xFDE
 33462                           postdec2	equ	0xFDD
 33463                           plusw2	equ	0xFDB
 33464                           fsr2h	equ	0xFDA
 33465                           fsr2l	equ	0xFD9
 33466                           status	equ	0xFD8
 33467                           
 33468 ;; *************** function _flash_copy_page_to_buffer *****************
 33469 ;; Defined at:
 33470 ;;		line 500 in file "flash.c"
 33471 ;; Parameters:    Size  Location     Type
 33472 ;;  page            2   29[COMRAM] unsigned int 
 33473 ;; Auto vars:     Size  Location     Type
 33474 ;;		None
 33475 ;; Return value:  Size  Location     Type
 33476 ;;                  1    wreg      void 
 33477 ;; Registers used:
 33478 ;;		wreg, status,2, status,0, cstack
 33479 ;; Tracked objects:
 33480 ;;		On entry : 0/0
 33481 ;;		On exit  : 0/0
 33482 ;;		Unchanged: 0/0
 33483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33484 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33485 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33486 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33487 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33488 ;;Total ram usage:        2 bytes
 33489 ;; Hardware stack levels used:    1
 33490 ;; Hardware stack levels required when called:    4
 33491 ;; This function calls:
 33492 ;;		__flash_copy_page_to_buffer
 33493 ;; This function is called by:
 33494 ;;		_fat_copy_sector_to_buffer
 33495 ;; This function uses a non-reentrant model
 33496 ;;
 33497                           
 33498                           	psect	text169
 33499  008E52                     __ptext169:
 33500                           	opt stack 0
 33501  008E52                     _flash_copy_page_to_buffer:
 33502                           	opt stack 22
 33503                           
 33504                           ;flash.c: 502: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 33505                           
 33506                           ;incstack = 0
 33507  008E52  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 33508  008E56  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 33509  008E5A  0E01               	movlw	1
 33510  008E5C  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 33511  008E5E  ECBE  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 33512  008E62  0012               	return		;funcret
 33513  008E64                     __end_of_flash_copy_page_to_buffer:
 33514                           	opt stack 0
 33515                           tosu	equ	0xFFF
 33516                           tosh	equ	0xFFE
 33517                           tosl	equ	0xFFD
 33518                           pclath	equ	0xFFA
 33519                           tblptru	equ	0xFF8
 33520                           tblptrh	equ	0xFF7
 33521                           tblptrl	equ	0xFF6
 33522                           tablat	equ	0xFF5
 33523                           prodh	equ	0xFF4
 33524                           prodl	equ	0xFF3
 33525                           intcon	equ	0xFF2
 33526                           intcon2	equ	0xFF1
 33527                           intcon3	equ	0xFF0
 33528                           indf0	equ	0xFEF
 33529                           postinc0	equ	0xFEE
 33530                           fsr0h	equ	0xFEA
 33531                           fsr0l	equ	0xFE9
 33532                           wreg	equ	0xFE8
 33533                           indf1	equ	0xFE7
 33534                           postdec1	equ	0xFE5
 33535                           plusw1	equ	0xFE3
 33536                           fsr1h	equ	0xFE2
 33537                           fsr1l	equ	0xFE1
 33538                           indf2	equ	0xFDF
 33539                           postinc2	equ	0xFDE
 33540                           postdec2	equ	0xFDD
 33541                           plusw2	equ	0xFDB
 33542                           fsr2h	equ	0xFDA
 33543                           fsr2l	equ	0xFD9
 33544                           status	equ	0xFD8
 33545                           
 33546 ;; *************** function __parse_format_drive *****************
 33547 ;; Defined at:
 33548 ;;		line 686 in file "api.c"
 33549 ;; Parameters:    Size  Location     Type
 33550 ;;  data            2   38[COMRAM] PTR unsigned char 
 33551 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33552 ;; Auto vars:     Size  Location     Type
 33553 ;;		None
 33554 ;; Return value:  Size  Location     Type
 33555 ;;                  1    wreg      unsigned char 
 33556 ;; Registers used:
 33557 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33558 ;; Tracked objects:
 33559 ;;		On entry : 0/0
 33560 ;;		On exit  : 0/0
 33561 ;;		Unchanged: 0/0
 33562 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33563 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33564 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33565 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33566 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33567 ;;Total ram usage:        3 bytes
 33568 ;; Hardware stack levels used:    1
 33569 ;; Hardware stack levels required when called:    6
 33570 ;; This function calls:
 33571 ;;		_fat_format
 33572 ;; This function is called by:
 33573 ;;		__parse_command_long
 33574 ;; This function uses a non-reentrant model
 33575 ;;
 33576                           
 33577                           	psect	text170
 33578  008424                     __ptext170:
 33579                           	opt stack 0
 33580  008424                     __parse_format_drive:
 33581                           	opt stack 22
 33582                           
 33583                           ;api.c: 689: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 33584                           
 33585                           ;incstack = 0
 33586  008424  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 33587  008428  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 33588  00842C  0E56               	movlw	86
 33589  00842E  18DE               	xorwf	postinc2,w,c
 33590  008430  A4D8               	btfss	status,2,c
 33591  008432  D014               	goto	u10960
 33592  008434  EE20 F001          	lfsr	2,1
 33593  008438  5027               	movf	__parse_format_drive@data,w,c
 33594  00843A  26D9               	addwf	fsr2l,f,c
 33595  00843C  5028               	movf	__parse_format_drive@data+1,w,c
 33596  00843E  22DA               	addwfc	fsr2h,f,c
 33597  008440  0EDA               	movlw	218
 33598  008442  18DE               	xorwf	postinc2,w,c
 33599  008444  A4D8               	btfss	status,2,c
 33600  008446  D00A               	goto	u10960
 33601  008448  EE20 F002          	lfsr	2,2
 33602  00844C  5027               	movf	__parse_format_drive@data,w,c
 33603  00844E  26D9               	addwf	fsr2l,f,c
 33604  008450  5028               	movf	__parse_format_drive@data+1,w,c
 33605  008452  22DA               	addwfc	fsr2h,f,c
 33606  008454  0E22               	movlw	34
 33607  008456  18DE               	xorwf	postinc2,w,c
 33608  008458  B4D8               	btfsc	status,2,c
 33609  00845A  D002               	goto	l2837
 33610  00845C                     u10960:
 33611                           
 33612                           ;api.c: 690: {;api.c: 691: return 3;
 33613  00845C  0E03               	movlw	3
 33614  00845E  0012               	return	
 33615  008460                     l2837:
 33616                           
 33617                           ;api.c: 692: };api.c: 693: fat_format();
 33618  008460  EC81  F014         	call	_fat_format	;wreg free
 33619                           
 33620                           ;api.c: 694: return 3;
 33621  008464  0E03               	movlw	3
 33622  008466  0012               	return	
 33623  008468                     __end_of__parse_format_drive:
 33624                           	opt stack 0
 33625                           tosu	equ	0xFFF
 33626                           tosh	equ	0xFFE
 33627                           tosl	equ	0xFFD
 33628                           pclath	equ	0xFFA
 33629                           tblptru	equ	0xFF8
 33630                           tblptrh	equ	0xFF7
 33631                           tblptrl	equ	0xFF6
 33632                           tablat	equ	0xFF5
 33633                           prodh	equ	0xFF4
 33634                           prodl	equ	0xFF3
 33635                           intcon	equ	0xFF2
 33636                           intcon2	equ	0xFF1
 33637                           intcon3	equ	0xFF0
 33638                           indf0	equ	0xFEF
 33639                           postinc0	equ	0xFEE
 33640                           fsr0h	equ	0xFEA
 33641                           fsr0l	equ	0xFE9
 33642                           wreg	equ	0xFE8
 33643                           indf1	equ	0xFE7
 33644                           postdec1	equ	0xFE5
 33645                           plusw1	equ	0xFE3
 33646                           fsr1h	equ	0xFE2
 33647                           fsr1l	equ	0xFE1
 33648                           indf2	equ	0xFDF
 33649                           postinc2	equ	0xFDE
 33650                           postdec2	equ	0xFDD
 33651                           plusw2	equ	0xFDB
 33652                           fsr2h	equ	0xFDA
 33653                           fsr2l	equ	0xFD9
 33654                           status	equ	0xFD8
 33655                           
 33656 ;; *************** function _fat_format *****************
 33657 ;; Defined at:
 33658 ;;		line 1257 in file "fat16.c"
 33659 ;; Parameters:    Size  Location     Type
 33660 ;;		None
 33661 ;; Auto vars:     Size  Location     Type
 33662 ;;  cntr            2   36[COMRAM] unsigned int 
 33663 ;; Return value:  Size  Location     Type
 33664 ;;                  1    wreg      void 
 33665 ;; Registers used:
 33666 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33667 ;; Tracked objects:
 33668 ;;		On entry : 0/0
 33669 ;;		On exit  : 0/0
 33670 ;;		Unchanged: 0/0
 33671 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33672 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33673 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33674 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33675 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33676 ;;Total ram usage:        2 bytes
 33677 ;; Hardware stack levels used:    1
 33678 ;; Hardware stack levels required when called:    5
 33679 ;; This function calls:
 33680 ;;		__get_data
 33681 ;;		__get_fat
 33682 ;;		__get_fbr
 33683 ;;		__get_mbr
 33684 ;;		__get_root
 33685 ;;		_flash_sector_write
 33686 ;; This function is called by:
 33687 ;;		_fat_init
 33688 ;;		__parse_format_drive
 33689 ;; This function uses a non-reentrant model
 33690 ;;
 33691                           
 33692                           	psect	text171
 33693  002902                     __ptext171:
 33694                           	opt stack 0
 33695  002902                     _fat_format:
 33696                           	opt stack 23
 33697                           
 33698                           ;fat16.c: 1259: uint16_t cntr;;fat16.c: 1262: for(cntr=0; cntr<512; ++cntr)
 33699                           
 33700                           ;incstack = 0
 33701  002902  0E00               	movlw	0
 33702  002904  6E26               	movwf	fat_format@cntr+1,c
 33703  002906  0E00               	movlw	0
 33704  002908  6E25               	movwf	fat_format@cntr,c
 33705  00290A                     l13361:
 33706  00290A  0E02               	movlw	2
 33707  00290C  5C26               	subwf	fat_format@cntr+1,w,c
 33708  00290E  B0D8               	btfsc	status,0,c
 33709  002910  D010               	goto	u10230
 33710                           
 33711                           ;fat16.c: 1263: {;fat16.c: 1264: buffer[cntr] = _get_mbr(cntr);
 33712  002912  0EC0               	movlw	low _buffer
 33713  002914  2425               	addwf	fat_format@cntr,w,c
 33714  002916  6ED9               	movwf	fsr2l,c
 33715  002918  0E03               	movlw	high _buffer
 33716  00291A  2026               	addwfc	fat_format@cntr+1,w,c
 33717  00291C  6EDA               	movwf	fsr2h,c
 33718  00291E  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 33719  002922  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 33720  002926  EC7D  F02E         	call	__get_mbr	;wreg free
 33721  00292A  6EDF               	movwf	indf2,c
 33722  00292C  4A25               	infsnz	fat_format@cntr,f,c
 33723  00292E  2A26               	incf	fat_format@cntr+1,f,c
 33724  002930  D7EC               	goto	l13361
 33725  002932                     u10230:
 33726                           
 33727                           ;fat16.c: 1265: };fat16.c: 1266: flash_sector_write(0, buffer);
 33728  002932  0E00               	movlw	0
 33729  002934  6E21               	movwf	flash_sector_write@page+1,c
 33730  002936  0E00               	movlw	0
 33731  002938  6E20               	movwf	flash_sector_write@page,c
 33732  00293A  0EC0               	movlw	low _buffer
 33733  00293C  6E22               	movwf	flash_sector_write@data,c
 33734  00293E  0E03               	movlw	high _buffer
 33735  002940  6E23               	movwf	flash_sector_write@data+1,c
 33736  002942  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33737                           
 33738                           ;fat16.c: 1269: for(cntr=0; cntr<512; ++cntr)
 33739  002946  0E00               	movlw	0
 33740  002948  6E26               	movwf	fat_format@cntr+1,c
 33741  00294A  0E00               	movlw	0
 33742  00294C  6E25               	movwf	fat_format@cntr,c
 33743  00294E                     l13375:
 33744  00294E  0E02               	movlw	2
 33745  002950  5C26               	subwf	fat_format@cntr+1,w,c
 33746  002952  B0D8               	btfsc	status,0,c
 33747  002954  D010               	goto	u10250
 33748                           
 33749                           ;fat16.c: 1270: {;fat16.c: 1271: buffer[cntr] = _get_fbr(cntr);
 33750  002956  0EC0               	movlw	low _buffer
 33751  002958  2425               	addwf	fat_format@cntr,w,c
 33752  00295A  6ED9               	movwf	fsr2l,c
 33753  00295C  0E03               	movlw	high _buffer
 33754  00295E  2026               	addwfc	fat_format@cntr+1,w,c
 33755  002960  6EDA               	movwf	fsr2h,c
 33756  002962  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 33757  002966  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 33758  00296A  ECE6  F00E         	call	__get_fbr	;wreg free
 33759  00296E  6EDF               	movwf	indf2,c
 33760  002970  4A25               	infsnz	fat_format@cntr,f,c
 33761  002972  2A26               	incf	fat_format@cntr+1,f,c
 33762  002974  D7EC               	goto	l13375
 33763  002976                     u10250:
 33764                           
 33765                           ;fat16.c: 1272: };fat16.c: 1273: flash_sector_write(1, buffer);
 33766  002976  0E00               	movlw	0
 33767  002978  6E21               	movwf	flash_sector_write@page+1,c
 33768  00297A  0E01               	movlw	1
 33769  00297C  6E20               	movwf	flash_sector_write@page,c
 33770  00297E  0EC0               	movlw	low _buffer
 33771  002980  6E22               	movwf	flash_sector_write@data,c
 33772  002982  0E03               	movlw	high _buffer
 33773  002984  6E23               	movwf	flash_sector_write@data+1,c
 33774  002986  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33775                           
 33776                           ;fat16.c: 1276: for(cntr=0; cntr<512; ++cntr)
 33777  00298A  0E00               	movlw	0
 33778  00298C  6E26               	movwf	fat_format@cntr+1,c
 33779  00298E  0E00               	movlw	0
 33780  002990  6E25               	movwf	fat_format@cntr,c
 33781  002992                     l13389:
 33782  002992  0E02               	movlw	2
 33783  002994  5C26               	subwf	fat_format@cntr+1,w,c
 33784  002996  B0D8               	btfsc	status,0,c
 33785  002998  D010               	goto	u10270
 33786                           
 33787                           ;fat16.c: 1277: {;fat16.c: 1278: buffer[cntr] = _get_fat(cntr);
 33788  00299A  0EC0               	movlw	low _buffer
 33789  00299C  2425               	addwf	fat_format@cntr,w,c
 33790  00299E  6ED9               	movwf	fsr2l,c
 33791  0029A0  0E03               	movlw	high _buffer
 33792  0029A2  2026               	addwfc	fat_format@cntr+1,w,c
 33793  0029A4  6EDA               	movwf	fsr2h,c
 33794  0029A6  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 33795  0029AA  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 33796  0029AE  ECC3  F03F         	call	__get_fat	;wreg free
 33797  0029B2  6EDF               	movwf	indf2,c
 33798  0029B4  4A25               	infsnz	fat_format@cntr,f,c
 33799  0029B6  2A26               	incf	fat_format@cntr+1,f,c
 33800  0029B8  D7EC               	goto	l13389
 33801  0029BA                     u10270:
 33802                           
 33803                           ;fat16.c: 1279: };fat16.c: 1280: flash_sector_write(2, buffer);
 33804  0029BA  0E00               	movlw	0
 33805  0029BC  6E21               	movwf	flash_sector_write@page+1,c
 33806  0029BE  0E02               	movlw	2
 33807  0029C0  6E20               	movwf	flash_sector_write@page,c
 33808  0029C2  0EC0               	movlw	low _buffer
 33809  0029C4  6E22               	movwf	flash_sector_write@data,c
 33810  0029C6  0E03               	movlw	high _buffer
 33811  0029C8  6E23               	movwf	flash_sector_write@data+1,c
 33812  0029CA  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33813                           
 33814                           ;fat16.c: 1283: for(cntr=0; cntr<512; ++cntr)
 33815  0029CE  0E00               	movlw	0
 33816  0029D0  6E26               	movwf	fat_format@cntr+1,c
 33817  0029D2  0E00               	movlw	0
 33818  0029D4  6E25               	movwf	fat_format@cntr,c
 33819  0029D6                     l13403:
 33820  0029D6  0E02               	movlw	2
 33821  0029D8  5C26               	subwf	fat_format@cntr+1,w,c
 33822  0029DA  B0D8               	btfsc	status,0,c
 33823  0029DC  D00B               	goto	u10290
 33824                           
 33825                           ;fat16.c: 1284: {;fat16.c: 1285: buffer[cntr] = 0x00;
 33826  0029DE  0EC0               	movlw	low _buffer
 33827  0029E0  2425               	addwf	fat_format@cntr,w,c
 33828  0029E2  6ED9               	movwf	fsr2l,c
 33829  0029E4  0E03               	movlw	high _buffer
 33830  0029E6  2026               	addwfc	fat_format@cntr+1,w,c
 33831  0029E8  6EDA               	movwf	fsr2h,c
 33832  0029EA  0E00               	movlw	0
 33833  0029EC  6EDF               	movwf	indf2,c
 33834  0029EE  4A25               	infsnz	fat_format@cntr,f,c
 33835  0029F0  2A26               	incf	fat_format@cntr+1,f,c
 33836  0029F2  D7F1               	goto	l13403
 33837  0029F4                     u10290:
 33838                           
 33839                           ;fat16.c: 1286: };fat16.c: 1287: for(cntr=2+1; cntr<=33; ++cntr)
 33840  0029F4  0E00               	movlw	0
 33841  0029F6  6E26               	movwf	fat_format@cntr+1,c
 33842  0029F8  0E03               	movlw	3
 33843  0029FA  6E25               	movwf	fat_format@cntr,c
 33844  0029FC                     l13415:
 33845  0029FC  5026               	movf	fat_format@cntr+1,w,c
 33846  0029FE  E111               	bnz	l13425
 33847  002A00  0E22               	movlw	34
 33848  002A02  5C25               	subwf	fat_format@cntr,w,c
 33849  002A04  B0D8               	btfsc	status,0,c
 33850  002A06  D00D               	goto	u10310
 33851                           
 33852                           ;fat16.c: 1288: {;fat16.c: 1289: flash_sector_write(cntr, buffer);
 33853  002A08  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33854  002A0C  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33855  002A10  0EC0               	movlw	low _buffer
 33856  002A12  6E22               	movwf	flash_sector_write@data,c
 33857  002A14  0E03               	movlw	high _buffer
 33858  002A16  6E23               	movwf	flash_sector_write@data+1,c
 33859  002A18  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33860  002A1C  4A25               	infsnz	fat_format@cntr,f,c
 33861  002A1E  2A26               	incf	fat_format@cntr+1,f,c
 33862  002A20  D7ED               	goto	l13415
 33863  002A22                     u10310:
 33864  002A22                     l13425:
 33865                           
 33866                           ;fat16.c: 1290: };fat16.c: 1293: for(cntr=0; cntr<512; ++cntr)
 33867  002A22  0E00               	movlw	0
 33868  002A24  6E26               	movwf	fat_format@cntr+1,c
 33869  002A26  0E00               	movlw	0
 33870  002A28  6E25               	movwf	fat_format@cntr,c
 33871  002A2A                     l13427:
 33872  002A2A  0E02               	movlw	2
 33873  002A2C  5C26               	subwf	fat_format@cntr+1,w,c
 33874  002A2E  B0D8               	btfsc	status,0,c
 33875  002A30  D010               	goto	u10330
 33876                           
 33877                           ;fat16.c: 1294: {;fat16.c: 1295: buffer[cntr] = _get_root(cntr);
 33878  002A32  0EC0               	movlw	low _buffer
 33879  002A34  2425               	addwf	fat_format@cntr,w,c
 33880  002A36  6ED9               	movwf	fsr2l,c
 33881  002A38  0E03               	movlw	high _buffer
 33882  002A3A  2026               	addwfc	fat_format@cntr+1,w,c
 33883  002A3C  6EDA               	movwf	fsr2h,c
 33884  002A3E  C025  F001         	movff	fat_format@cntr,__get_root@idx
 33885  002A42  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 33886  002A46  EC36  F01A         	call	__get_root	;wreg free
 33887  002A4A  6EDF               	movwf	indf2,c
 33888  002A4C  4A25               	infsnz	fat_format@cntr,f,c
 33889  002A4E  2A26               	incf	fat_format@cntr+1,f,c
 33890  002A50  D7EC               	goto	l13427
 33891  002A52                     u10330:
 33892                           
 33893                           ;fat16.c: 1296: };fat16.c: 1297: flash_sector_write(34, buffer);
 33894  002A52  0E00               	movlw	0
 33895  002A54  6E21               	movwf	flash_sector_write@page+1,c
 33896  002A56  0E22               	movlw	34
 33897  002A58  6E20               	movwf	flash_sector_write@page,c
 33898  002A5A  0EC0               	movlw	low _buffer
 33899  002A5C  6E22               	movwf	flash_sector_write@data,c
 33900  002A5E  0E03               	movlw	high _buffer
 33901  002A60  6E23               	movwf	flash_sector_write@data+1,c
 33902  002A62  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33903                           
 33904                           ;fat16.c: 1300: for(cntr=0; cntr<512; ++cntr)
 33905  002A66  0E00               	movlw	0
 33906  002A68  6E26               	movwf	fat_format@cntr+1,c
 33907  002A6A  0E00               	movlw	0
 33908  002A6C  6E25               	movwf	fat_format@cntr,c
 33909  002A6E                     l13441:
 33910  002A6E  0E02               	movlw	2
 33911  002A70  5C26               	subwf	fat_format@cntr+1,w,c
 33912  002A72  B0D8               	btfsc	status,0,c
 33913  002A74  D00B               	goto	u10350
 33914                           
 33915                           ;fat16.c: 1301: {;fat16.c: 1302: buffer[cntr] = 0x00;
 33916  002A76  0EC0               	movlw	low _buffer
 33917  002A78  2425               	addwf	fat_format@cntr,w,c
 33918  002A7A  6ED9               	movwf	fsr2l,c
 33919  002A7C  0E03               	movlw	high _buffer
 33920  002A7E  2026               	addwfc	fat_format@cntr+1,w,c
 33921  002A80  6EDA               	movwf	fsr2h,c
 33922  002A82  0E00               	movlw	0
 33923  002A84  6EDF               	movwf	indf2,c
 33924  002A86  4A25               	infsnz	fat_format@cntr,f,c
 33925  002A88  2A26               	incf	fat_format@cntr+1,f,c
 33926  002A8A  D7F1               	goto	l13441
 33927  002A8C                     u10350:
 33928                           
 33929                           ;fat16.c: 1303: };fat16.c: 1304: for(cntr=34+1; cntr<=37; ++cntr)
 33930  002A8C  0E00               	movlw	0
 33931  002A8E  6E26               	movwf	fat_format@cntr+1,c
 33932  002A90  0E23               	movlw	35
 33933  002A92  6E25               	movwf	fat_format@cntr,c
 33934  002A94                     l13453:
 33935  002A94  5026               	movf	fat_format@cntr+1,w,c
 33936  002A96  E111               	bnz	l13463
 33937  002A98  0E26               	movlw	38
 33938  002A9A  5C25               	subwf	fat_format@cntr,w,c
 33939  002A9C  B0D8               	btfsc	status,0,c
 33940  002A9E  D00D               	goto	u10370
 33941                           
 33942                           ;fat16.c: 1305: {;fat16.c: 1306: flash_sector_write(cntr, buffer);
 33943  002AA0  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 33944  002AA4  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 33945  002AA8  0EC0               	movlw	low _buffer
 33946  002AAA  6E22               	movwf	flash_sector_write@data,c
 33947  002AAC  0E03               	movlw	high _buffer
 33948  002AAE  6E23               	movwf	flash_sector_write@data+1,c
 33949  002AB0  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33950  002AB4  4A25               	infsnz	fat_format@cntr,f,c
 33951  002AB6  2A26               	incf	fat_format@cntr+1,f,c
 33952  002AB8  D7ED               	goto	l13453
 33953  002ABA                     u10370:
 33954  002ABA                     l13463:
 33955                           
 33956                           ;fat16.c: 1307: };fat16.c: 1310: for(cntr=0; cntr<512; ++cntr)
 33957  002ABA  0E00               	movlw	0
 33958  002ABC  6E26               	movwf	fat_format@cntr+1,c
 33959  002ABE  0E00               	movlw	0
 33960  002AC0  6E25               	movwf	fat_format@cntr,c
 33961  002AC2                     l13465:
 33962  002AC2  0E02               	movlw	2
 33963  002AC4  5C26               	subwf	fat_format@cntr+1,w,c
 33964  002AC6  B0D8               	btfsc	status,0,c
 33965  002AC8  D010               	goto	u10390
 33966                           
 33967                           ;fat16.c: 1311: {;fat16.c: 1312: buffer[cntr] = _get_data(cntr);
 33968  002ACA  0EC0               	movlw	low _buffer
 33969  002ACC  2425               	addwf	fat_format@cntr,w,c
 33970  002ACE  6ED9               	movwf	fsr2l,c
 33971  002AD0  0E03               	movlw	high _buffer
 33972  002AD2  2026               	addwfc	fat_format@cntr+1,w,c
 33973  002AD4  6EDA               	movwf	fsr2h,c
 33974  002AD6  C025  F001         	movff	fat_format@cntr,__get_data@idx
 33975  002ADA  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 33976  002ADE  EC50  F045         	call	__get_data	;wreg free
 33977  002AE2  6EDF               	movwf	indf2,c
 33978  002AE4  4A25               	infsnz	fat_format@cntr,f,c
 33979  002AE6  2A26               	incf	fat_format@cntr+1,f,c
 33980  002AE8  D7EC               	goto	l13465
 33981  002AEA                     u10390:
 33982                           
 33983                           ;fat16.c: 1313: };fat16.c: 1314: flash_sector_write(38, buffer);
 33984  002AEA  0E00               	movlw	0
 33985  002AEC  6E21               	movwf	flash_sector_write@page+1,c
 33986  002AEE  0E26               	movlw	38
 33987  002AF0  6E20               	movwf	flash_sector_write@page,c
 33988  002AF2  0EC0               	movlw	low _buffer
 33989  002AF4  6E22               	movwf	flash_sector_write@data,c
 33990  002AF6  0E03               	movlw	high _buffer
 33991  002AF8  6E23               	movwf	flash_sector_write@data+1,c
 33992  002AFA  ECEE  F03F         	call	_flash_sector_write	;wreg free
 33993  002AFE  0012               	return		;funcret
 33994  002B00                     __end_of_fat_format:
 33995                           	opt stack 0
 33996                           tosu	equ	0xFFF
 33997                           tosh	equ	0xFFE
 33998                           tosl	equ	0xFFD
 33999                           pclath	equ	0xFFA
 34000                           tblptru	equ	0xFF8
 34001                           tblptrh	equ	0xFF7
 34002                           tblptrl	equ	0xFF6
 34003                           tablat	equ	0xFF5
 34004                           prodh	equ	0xFF4
 34005                           prodl	equ	0xFF3
 34006                           intcon	equ	0xFF2
 34007                           intcon2	equ	0xFF1
 34008                           intcon3	equ	0xFF0
 34009                           indf0	equ	0xFEF
 34010                           postinc0	equ	0xFEE
 34011                           fsr0h	equ	0xFEA
 34012                           fsr0l	equ	0xFE9
 34013                           wreg	equ	0xFE8
 34014                           indf1	equ	0xFE7
 34015                           postdec1	equ	0xFE5
 34016                           plusw1	equ	0xFE3
 34017                           fsr1h	equ	0xFE2
 34018                           fsr1l	equ	0xFE1
 34019                           indf2	equ	0xFDF
 34020                           postinc2	equ	0xFDE
 34021                           postdec2	equ	0xFDD
 34022                           plusw2	equ	0xFDB
 34023                           fsr2h	equ	0xFDA
 34024                           fsr2l	equ	0xFD9
 34025                           status	equ	0xFD8
 34026                           
 34027 ;; *************** function __get_root *****************
 34028 ;; Defined at:
 34029 ;;		line 1147 in file "fat16.c"
 34030 ;; Parameters:    Size  Location     Type
 34031 ;;  idx             2    0[COMRAM] unsigned int 
 34032 ;; Auto vars:     Size  Location     Type
 34033 ;;		None
 34034 ;; Return value:  Size  Location     Type
 34035 ;;                  1    wreg      unsigned char 
 34036 ;; Registers used:
 34037 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34038 ;; Tracked objects:
 34039 ;;		On entry : 0/0
 34040 ;;		On exit  : 0/0
 34041 ;;		Unchanged: 0/0
 34042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34045 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34046 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34047 ;;Total ram usage:        6 bytes
 34048 ;; Hardware stack levels used:    1
 34049 ;; This function calls:
 34050 ;;		Nothing
 34051 ;; This function is called by:
 34052 ;;		_fat_format
 34053 ;; This function uses a non-reentrant model
 34054 ;;
 34055                           
 34056                           	psect	text172
 34057  00346C                     __ptext172:
 34058                           	opt stack 0
 34059  00346C                     __get_root:
 34060                           	opt stack 27
 34061                           
 34062                           ;fat16.c: 1149: if(idx < 0x20)
 34063                           
 34064                           ;incstack = 0
 34065  00346C  5002               	movf	__get_root@idx+1,w,c
 34066  00346E  E11D               	bnz	l12647
 34067  003470  0E20               	movlw	32
 34068  003472  5C01               	subwf	__get_root@idx,w,c
 34069  003474  B0D8               	btfsc	status,0,c
 34070  003476  D019               	goto	l2209
 34071                           
 34072                           ;fat16.c: 1150: {;fat16.c: 1151: if(idx < 11)
 34073  003478  5002               	movf	__get_root@idx+1,w,c
 34074  00347A  E110               	bnz	l12641
 34075  00347C  0E0B               	movlw	11
 34076  00347E  5C01               	subwf	__get_root@idx,w,c
 34077  003480  B0D8               	btfsc	status,0,c
 34078  003482  D00C               	goto	l2207
 34079                           
 34080                           ;fat16.c: 1152: {;fat16.c: 1153: return "SolarChargr"[idx];
 34081  003484  0EDD               	movlw	low STR_9
 34082  003486  2401               	addwf	__get_root@idx,w,c
 34083  003488  6EF6               	movwf	tblptrl,c
 34084  00348A  0E9F               	movlw	high STR_9
 34085  00348C  2002               	addwfc	__get_root@idx+1,w,c
 34086  00348E  6EF7               	movwf	tblptrh,c
 34087  003490                     	if	1	;There are 3 active tblptr bytes
 34088  003490  6AF8               	clrf	tblptru,c
 34089  003492  0E00               	movlw	low (__mediumconst shr (0+16))
 34090  003494  22F8               	addwfc	tblptru,f,c
 34091  003496                     	endif
 34092  003496  0008               	tblrd		*
 34093  003498  50F5               	movf	tablat,w,c
 34094  00349A  0012               	return	
 34095  00349C                     l2207:
 34096  00349C                     l12641:
 34097                           
 34098                           ;fat16.c: 1154: };fat16.c: 1155: if(idx==11)
 34099  00349C  0E0B               	movlw	11
 34100  00349E  1801               	xorwf	__get_root@idx,w,c
 34101  0034A0  1002               	iorwf	__get_root@idx+1,w,c
 34102  0034A2  A4D8               	btfss	status,2,c
 34103  0034A4  D002               	goto	l2209
 34104                           
 34105                           ;fat16.c: 1156: {;fat16.c: 1157: return 0x08;
 34106  0034A6  0E08               	movlw	8
 34107  0034A8  0012               	return	
 34108  0034AA                     l2209:
 34109  0034AA                     l12647:
 34110                           
 34111                           ;fat16.c: 1158: };fat16.c: 1159: };fat16.c: 1160: if(idx < 0x40)
 34112  0034AA  5002               	movf	__get_root@idx+1,w,c
 34113  0034AC  E103               	bnz	u9381
 34114  0034AE  0E40               	movlw	64
 34115  0034B0  5C01               	subwf	__get_root@idx,w,c
 34116  0034B2  B0D8               	btfsc	status,0,c
 34117  0034B4                     u9381:
 34118  0034B4  D0A4               	goto	l2235
 34119                           
 34120                           ;fat16.c: 1161: {;fat16.c: 1162: idx -= 0x20;
 34121  0034B6  0E20               	movlw	32
 34122  0034B8  5E01               	subwf	__get_root@idx,f,c
 34123  0034BA  0E00               	movlw	0
 34124  0034BC  5A02               	subwfb	__get_root@idx+1,f,c
 34125                           
 34126                           ;fat16.c: 1163: if(idx < 0+8)
 34127  0034BE  5002               	movf	__get_root@idx+1,w,c
 34128  0034C0  E110               	bnz	l12655
 34129  0034C2  0E08               	movlw	8
 34130  0034C4  5C01               	subwf	__get_root@idx,w,c
 34131  0034C6  B0D8               	btfsc	status,0,c
 34132  0034C8  D00C               	goto	l2211
 34133                           
 34134                           ;fat16.c: 1164: {;fat16.c: 1165: return "FILE    "[idx];
 34135  0034CA  0EE9               	movlw	low STR_10
 34136  0034CC  2401               	addwf	__get_root@idx,w,c
 34137  0034CE  6EF6               	movwf	tblptrl,c
 34138  0034D0  0E9F               	movlw	high STR_10
 34139  0034D2  2002               	addwfc	__get_root@idx+1,w,c
 34140  0034D4  6EF7               	movwf	tblptrh,c
 34141  0034D6                     	if	1	;There are 3 active tblptr bytes
 34142  0034D6  6AF8               	clrf	tblptru,c
 34143  0034D8  0E00               	movlw	low (__mediumconst shr (0+16))
 34144  0034DA  22F8               	addwfc	tblptru,f,c
 34145  0034DC                     	endif
 34146  0034DC  0008               	tblrd		*
 34147  0034DE  50F5               	movf	tablat,w,c
 34148  0034E0  0012               	return	
 34149  0034E2                     l2211:
 34150  0034E2                     l12655:
 34151                           
 34152                           ;fat16.c: 1166: };fat16.c: 1167: if(idx < 11)
 34153  0034E2  5002               	movf	__get_root@idx+1,w,c
 34154  0034E4  E146               	bnz	l12747
 34155  0034E6  0E0B               	movlw	11
 34156  0034E8  5C01               	subwf	__get_root@idx,w,c
 34157  0034EA  B0D8               	btfsc	status,0,c
 34158  0034EC  D042               	goto	l2213
 34159                           
 34160                           ;fat16.c: 1168: {;fat16.c: 1169: return "TXT"[idx-8];
 34161  0034EE  0EF8               	movlw	248
 34162  0034F0  6E03               	movwf	??__get_root& (0+255),c
 34163  0034F2  0EFF               	movlw	255
 34164  0034F4  6E04               	movwf	(??__get_root+1)& (0+255),c
 34165  0034F6  C001  F005         	movff	__get_root@idx,??__get_root+2
 34166  0034FA  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 34167  0034FE  5003               	movf	??__get_root,w,c
 34168  003500  2605               	addwf	??__get_root+2,f,c
 34169  003502  5004               	movf	??__get_root+1,w,c
 34170  003504  2206               	addwfc	??__get_root+3,f,c
 34171  003506  0EFB               	movlw	low STR_11
 34172  003508  2405               	addwf	??__get_root+2,w,c
 34173  00350A  6EF6               	movwf	tblptrl,c
 34174  00350C  0E9F               	movlw	high STR_11
 34175  00350E  2006               	addwfc	??__get_root+3,w,c
 34176  003510  6EF7               	movwf	tblptrh,c
 34177  003512                     	if	1	;There are 3 active tblptr bytes
 34178  003512  6AF8               	clrf	tblptru,c
 34179  003514  0E00               	movlw	low (__mediumconst shr (0+16))
 34180  003516  22F8               	addwfc	tblptru,f,c
 34181  003518                     	endif
 34182  003518  0008               	tblrd		*
 34183  00351A  50F5               	movf	tablat,w,c
 34184  00351C  0012               	return	
 34185  00351E                     
 34186                           ;fat16.c: 1174: return 0x20;
 34187  00351E  0E20               	movlw	32
 34188  003520  0012               	return	
 34189  003522                     
 34190                           ;fat16.c: 1176: return 0x06;
 34191  003522  0E06               	movlw	6
 34192  003524  0012               	return	
 34193  003526                     
 34194                           ;fat16.c: 1178: return 0x28;
 34195  003526  0E28               	movlw	40
 34196  003528  0012               	return	
 34197  00352A                     
 34198                           ;fat16.c: 1180: return 0x78;
 34199  00352A  0E78               	movlw	120
 34200  00352C  0012               	return	
 34201  00352E                     
 34202                           ;fat16.c: 1182: return 0xDE;
 34203  00352E  0EDE               	movlw	222
 34204  003530  0012               	return	
 34205  003532                     
 34206                           ;fat16.c: 1184: return 0x38;
 34207  003532  0E38               	movlw	56
 34208  003534  0012               	return	
 34209  003536                     
 34210                           ;fat16.c: 1186: return 0x5F;
 34211  003536  0E5F               	movlw	95
 34212  003538  0012               	return	
 34213  00353A                     
 34214                           ;fat16.c: 1188: return 0x4B;
 34215  00353A  0E4B               	movlw	75
 34216  00353C  0012               	return	
 34217  00353E                     
 34218                           ;fat16.c: 1190: return 0x00;
 34219  00353E  0E00               	movlw	0
 34220  003540  0012               	return	
 34221  003542                     
 34222                           ;fat16.c: 1192: return 0x00;
 34223  003542  0E00               	movlw	0
 34224  003544  0012               	return	
 34225  003546                     
 34226                           ;fat16.c: 1194: return 0x04;
 34227  003546  0E04               	movlw	4
 34228  003548  0012               	return	
 34229  00354A                     
 34230                           ;fat16.c: 1196: return 0x77;
 34231  00354A  0E77               	movlw	119
 34232  00354C  0012               	return	
 34233  00354E                     
 34234                           ;fat16.c: 1198: return 0xDE;
 34235  00354E  0EDE               	movlw	222
 34236  003550  0012               	return	
 34237  003552                     
 34238                           ;fat16.c: 1200: return 0x38;
 34239  003552  0E38               	movlw	56
 34240  003554  0012               	return	
 34241  003556                     
 34242                           ;fat16.c: 1202: return ((unsigned char)((((uint16_t)2))&0xFF));
 34243  003556  0E02               	movlw	2
 34244  003558  0012               	return	
 34245  00355A                     
 34246                           ;fat16.c: 1204: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 34247  00355A  0E00               	movlw	0
 34248  00355C  0012               	return	
 34249  00355E                     
 34250                           ;fat16.c: 1206: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 34251  00355E  0E0C               	movlw	12
 34252  003560  0012               	return	
 34253  003562                     
 34254                           ;fat16.c: 1208: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 34255  003562  0E00               	movlw	0
 34256  003564  0012               	return	
 34257  003566                     
 34258                           ;fat16.c: 1210: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 34259  003566  0E00               	movlw	0
 34260  003568  0012               	return	
 34261  00356A                     
 34262                           ;fat16.c: 1212: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34263  00356A  0E00               	movlw	0
 34264  00356C  0012               	return	
 34265  00356E                     
 34266                           ;fat16.c: 1214: return 0x00;
 34267  00356E  0E00               	movlw	0
 34268  003570  0012               	return	
 34269  003572                     l2213:
 34270  003572                     l12747:
 34271  003572  C001  F003         	movff	__get_root@idx,??__get_root
 34272  003576  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 34273                           
 34274                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34275                           ; Switch size 1, requested type "space"
 34276                           ; Number of cases is 1, Range of values is 0 to 0
 34277                           ; switch strategies available:
 34278                           ; Name         Instructions Cycles
 34279                           ; simple_byte            4     3 (average)
 34280                           ;	Chosen strategy is simple_byte
 34281  00357A  5004               	movf	??__get_root+1,w,c
 34282  00357C  0A00               	xorlw	0	; case 0
 34283  00357E  A4D8               	btfss	status,2,c
 34284  003580  D7F6               	goto	l2234
 34285                           
 34286                           ; Switch size 1, requested type "space"
 34287                           ; Number of cases is 20, Range of values is 11 to 31
 34288                           ; switch strategies available:
 34289                           ; Name         Instructions Cycles
 34290                           ; simple_byte           61    31 (average)
 34291                           ;	Chosen strategy is simple_byte
 34292  003582  5003               	movf	??__get_root,w,c
 34293  003584  0A0B               	xorlw	11	; case 11
 34294  003586  B4D8               	btfsc	status,2,c
 34295  003588  D7CA               	goto	l2214
 34296  00358A  0A06               	xorlw	6	; case 13
 34297  00358C  B4D8               	btfsc	status,2,c
 34298  00358E  D7C9               	goto	l2215
 34299  003590  0A03               	xorlw	3	; case 14
 34300  003592  B4D8               	btfsc	status,2,c
 34301  003594  D7C8               	goto	l2216
 34302  003596  0A01               	xorlw	1	; case 15
 34303  003598  B4D8               	btfsc	status,2,c
 34304  00359A  D7C7               	goto	l2217
 34305  00359C  0A1F               	xorlw	31	; case 16
 34306  00359E  B4D8               	btfsc	status,2,c
 34307  0035A0  D7C6               	goto	l2218
 34308  0035A2  0A01               	xorlw	1	; case 17
 34309  0035A4  B4D8               	btfsc	status,2,c
 34310  0035A6  D7C5               	goto	l2219
 34311  0035A8  0A03               	xorlw	3	; case 18
 34312  0035AA  B4D8               	btfsc	status,2,c
 34313  0035AC  D7C4               	goto	l2220
 34314  0035AE  0A01               	xorlw	1	; case 19
 34315  0035B0  B4D8               	btfsc	status,2,c
 34316  0035B2  D7C3               	goto	l2221
 34317  0035B4  0A07               	xorlw	7	; case 20
 34318  0035B6  B4D8               	btfsc	status,2,c
 34319  0035B8  D7C2               	goto	l2222
 34320  0035BA  0A01               	xorlw	1	; case 21
 34321  0035BC  B4D8               	btfsc	status,2,c
 34322  0035BE  D7C1               	goto	l2223
 34323  0035C0  0A03               	xorlw	3	; case 22
 34324  0035C2  B4D8               	btfsc	status,2,c
 34325  0035C4  D7C0               	goto	l2224
 34326  0035C6  0A01               	xorlw	1	; case 23
 34327  0035C8  B4D8               	btfsc	status,2,c
 34328  0035CA  D7BF               	goto	l2225
 34329  0035CC  0A0F               	xorlw	15	; case 24
 34330  0035CE  B4D8               	btfsc	status,2,c
 34331  0035D0  D7BE               	goto	l2226
 34332  0035D2  0A01               	xorlw	1	; case 25
 34333  0035D4  B4D8               	btfsc	status,2,c
 34334  0035D6  D7BD               	goto	l2227
 34335  0035D8  0A03               	xorlw	3	; case 26
 34336  0035DA  B4D8               	btfsc	status,2,c
 34337  0035DC  D7BC               	goto	l2228
 34338  0035DE  0A01               	xorlw	1	; case 27
 34339  0035E0  B4D8               	btfsc	status,2,c
 34340  0035E2  D7BB               	goto	l2229
 34341  0035E4  0A07               	xorlw	7	; case 28
 34342  0035E6  B4D8               	btfsc	status,2,c
 34343  0035E8  D7BA               	goto	l2230
 34344  0035EA  0A01               	xorlw	1	; case 29
 34345  0035EC  B4D8               	btfsc	status,2,c
 34346  0035EE  D7B9               	goto	l2231
 34347  0035F0  0A03               	xorlw	3	; case 30
 34348  0035F2  B4D8               	btfsc	status,2,c
 34349  0035F4  D7B8               	goto	l2232
 34350  0035F6  0A01               	xorlw	1	; case 31
 34351  0035F8  B4D8               	btfsc	status,2,c
 34352  0035FA  D7B7               	goto	l2233
 34353  0035FC  D7B8               	goto	l2234
 34354  0035FE                     l2235:
 34355                           
 34356                           ;fat16.c: 1216: };fat16.c: 1217: return 0X00;
 34357  0035FE  0E00               	movlw	0
 34358  003600  0012               	return	
 34359  003602                     __end_of__get_root:
 34360                           	opt stack 0
 34361                           tosu	equ	0xFFF
 34362                           tosh	equ	0xFFE
 34363                           tosl	equ	0xFFD
 34364                           pclath	equ	0xFFA
 34365                           tblptru	equ	0xFF8
 34366                           tblptrh	equ	0xFF7
 34367                           tblptrl	equ	0xFF6
 34368                           tablat	equ	0xFF5
 34369                           prodh	equ	0xFF4
 34370                           prodl	equ	0xFF3
 34371                           intcon	equ	0xFF2
 34372                           intcon2	equ	0xFF1
 34373                           intcon3	equ	0xFF0
 34374                           indf0	equ	0xFEF
 34375                           postinc0	equ	0xFEE
 34376                           fsr0h	equ	0xFEA
 34377                           fsr0l	equ	0xFE9
 34378                           wreg	equ	0xFE8
 34379                           indf1	equ	0xFE7
 34380                           postdec1	equ	0xFE5
 34381                           plusw1	equ	0xFE3
 34382                           fsr1h	equ	0xFE2
 34383                           fsr1l	equ	0xFE1
 34384                           indf2	equ	0xFDF
 34385                           postinc2	equ	0xFDE
 34386                           postdec2	equ	0xFDD
 34387                           plusw2	equ	0xFDB
 34388                           fsr2h	equ	0xFDA
 34389                           fsr2l	equ	0xFD9
 34390                           status	equ	0xFD8
 34391                           
 34392 ;; *************** function __get_mbr *****************
 34393 ;; Defined at:
 34394 ;;		line 974 in file "fat16.c"
 34395 ;; Parameters:    Size  Location     Type
 34396 ;;  idx             2    0[COMRAM] unsigned int 
 34397 ;; Auto vars:     Size  Location     Type
 34398 ;;		None
 34399 ;; Return value:  Size  Location     Type
 34400 ;;                  1    wreg      unsigned char 
 34401 ;; Registers used:
 34402 ;;		wreg, status,2, status,0
 34403 ;; Tracked objects:
 34404 ;;		On entry : 0/0
 34405 ;;		On exit  : 0/0
 34406 ;;		Unchanged: 0/0
 34407 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34408 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34409 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34410 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34411 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34412 ;;Total ram usage:        4 bytes
 34413 ;; Hardware stack levels used:    1
 34414 ;; This function calls:
 34415 ;;		Nothing
 34416 ;; This function is called by:
 34417 ;;		_fat_get_format_status
 34418 ;;		_fat_format
 34419 ;; This function uses a non-reentrant model
 34420 ;;
 34421                           
 34422                           	psect	text173
 34423  005CFA                     __ptext173:
 34424                           	opt stack 0
 34425  005CFA                     __get_mbr:
 34426                           	opt stack 27
 34427                           
 34428                           ;fat16.c: 976: switch (idx)
 34429                           
 34430                           ;incstack = 0
 34431  005CFA  D026               	goto	l2116
 34432  005CFC                     
 34433                           ;fat16.c: 979: return 0x80;
 34434  005CFC  0E80               	movlw	128
 34435  005CFE  0012               	return	
 34436  005D00                     
 34437                           ;fat16.c: 981: return 0;
 34438  005D00  0E00               	movlw	0
 34439  005D02  0012               	return	
 34440  005D04                     
 34441                           ;fat16.c: 983: return 2;
 34442  005D04  0E02               	movlw	2
 34443  005D06  0012               	return	
 34444  005D08                     
 34445                           ;fat16.c: 985: return 0;
 34446  005D08  0E00               	movlw	0
 34447  005D0A  0012               	return	
 34448  005D0C                     
 34449                           ;fat16.c: 987: return 0x04;
 34450  005D0C  0E04               	movlw	4
 34451  005D0E  0012               	return	
 34452  005D10                     
 34453                           ;fat16.c: 989: return 2;
 34454  005D10  0E02               	movlw	2
 34455  005D12  0012               	return	
 34456  005D14                     
 34457                           ;fat16.c: 991: return 3;
 34458  005D14  0E03               	movlw	3
 34459  005D16  0012               	return	
 34460  005D18                     
 34461                           ;fat16.c: 993: return 8;
 34462  005D18  0E08               	movlw	8
 34463  005D1A  0012               	return	
 34464  005D1C                     
 34465                           ;fat16.c: 995: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 34466  005D1C  0E01               	movlw	1
 34467  005D1E  0012               	return	
 34468  005D20                     
 34469                           ;fat16.c: 997: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 34470  005D20  0E00               	movlw	0
 34471  005D22  0012               	return	
 34472  005D24                     
 34473                           ;fat16.c: 999: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
 34474  005D24  0E00               	movlw	0
 34475  005D26  0012               	return	
 34476  005D28                     
 34477                           ;fat16.c: 1001: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34478  005D28  0E00               	movlw	0
 34479  005D2A  0012               	return	
 34480  005D2C                     
 34481                           ;fat16.c: 1003: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 34482  005D2C  0EFF               	movlw	255
 34483  005D2E  0012               	return	
 34484  005D30                     
 34485                           ;fat16.c: 1005: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 34486  005D30  0E1F               	movlw	31
 34487  005D32  0012               	return	
 34488  005D34                     
 34489                           ;fat16.c: 1007: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 34490  005D34  0E00               	movlw	0
 34491  005D36  0012               	return	
 34492  005D38                     
 34493                           ;fat16.c: 1009: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 34494  005D38  0E00               	movlw	0
 34495  005D3A  0012               	return	
 34496  005D3C                     
 34497                           ;fat16.c: 1011: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 34498  005D3C  0E55               	movlw	85
 34499  005D3E  0012               	return	
 34500  005D40                     
 34501                           ;fat16.c: 1013: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 34502  005D40  0EAA               	movlw	170
 34503  005D42  0012               	return	
 34504  005D44                     
 34505                           ;fat16.c: 1015: return 0X00;
 34506  005D44  0E00               	movlw	0
 34507                           
 34508                           ;fat16.c: 1016: }
 34509  005D46  0012               	return	
 34510  005D48                     l2116:
 34511  005D48  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 34512  005D4C  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 34513                           
 34514                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34515                           ; Switch size 1, requested type "space"
 34516                           ; Number of cases is 1, Range of values is 1 to 1
 34517                           ; switch strategies available:
 34518                           ; Name         Instructions Cycles
 34519                           ; simple_byte            4     3 (average)
 34520                           ;	Chosen strategy is simple_byte
 34521  005D50  5004               	movf	??__get_mbr+1,w,c
 34522  005D52  0A01               	xorlw	1	; case 1
 34523  005D54  A4D8               	btfss	status,2,c
 34524  005D56  D7F6               	goto	l2136
 34525                           
 34526                           ; Switch size 1, requested type "space"
 34527                           ; Number of cases is 18, Range of values is 190 to 255
 34528                           ; switch strategies available:
 34529                           ; Name         Instructions Cycles
 34530                           ; simple_byte           55    28 (average)
 34531                           ;	Chosen strategy is simple_byte
 34532  005D58  5003               	movf	??__get_mbr,w,c
 34533  005D5A  0ABE               	xorlw	190	; case 190
 34534  005D5C  B4D8               	btfsc	status,2,c
 34535  005D5E  D7CE               	goto	l2117
 34536  005D60  0A01               	xorlw	1	; case 191
 34537  005D62  B4D8               	btfsc	status,2,c
 34538  005D64  D7CD               	goto	l2119
 34539  005D66  0A7F               	xorlw	127	; case 192
 34540  005D68  B4D8               	btfsc	status,2,c
 34541  005D6A  D7CC               	goto	l2120
 34542  005D6C  0A01               	xorlw	1	; case 193
 34543  005D6E  B4D8               	btfsc	status,2,c
 34544  005D70  D7CB               	goto	l2121
 34545  005D72  0A03               	xorlw	3	; case 194
 34546  005D74  B4D8               	btfsc	status,2,c
 34547  005D76  D7CA               	goto	l2122
 34548  005D78  0A01               	xorlw	1	; case 195
 34549  005D7A  B4D8               	btfsc	status,2,c
 34550  005D7C  D7C9               	goto	l2123
 34551  005D7E  0A07               	xorlw	7	; case 196
 34552  005D80  B4D8               	btfsc	status,2,c
 34553  005D82  D7C8               	goto	l2124
 34554  005D84  0A01               	xorlw	1	; case 197
 34555  005D86  B4D8               	btfsc	status,2,c
 34556  005D88  D7C7               	goto	l2125
 34557  005D8A  0A03               	xorlw	3	; case 198
 34558  005D8C  B4D8               	btfsc	status,2,c
 34559  005D8E  D7C6               	goto	l2126
 34560  005D90  0A01               	xorlw	1	; case 199
 34561  005D92  B4D8               	btfsc	status,2,c
 34562  005D94  D7C5               	goto	l2127
 34563  005D96  0A0F               	xorlw	15	; case 200
 34564  005D98  B4D8               	btfsc	status,2,c
 34565  005D9A  D7C4               	goto	l2128
 34566  005D9C  0A01               	xorlw	1	; case 201
 34567  005D9E  B4D8               	btfsc	status,2,c
 34568  005DA0  D7C3               	goto	l2129
 34569  005DA2  0A03               	xorlw	3	; case 202
 34570  005DA4  B4D8               	btfsc	status,2,c
 34571  005DA6  D7C2               	goto	l2130
 34572  005DA8  0A01               	xorlw	1	; case 203
 34573  005DAA  B4D8               	btfsc	status,2,c
 34574  005DAC  D7C1               	goto	l2131
 34575  005DAE  0A07               	xorlw	7	; case 204
 34576  005DB0  B4D8               	btfsc	status,2,c
 34577  005DB2  D7C0               	goto	l2132
 34578  005DB4  0A01               	xorlw	1	; case 205
 34579  005DB6  B4D8               	btfsc	status,2,c
 34580  005DB8  D7BF               	goto	l2133
 34581  005DBA  0A33               	xorlw	51	; case 254
 34582  005DBC  B4D8               	btfsc	status,2,c
 34583  005DBE  D7BE               	goto	l2134
 34584  005DC0  0A01               	xorlw	1	; case 255
 34585  005DC2  B4D8               	btfsc	status,2,c
 34586  005DC4  D7BD               	goto	l2135
 34587  005DC6  D7BE               	goto	l2136
 34588  005DC8                     __end_of__get_mbr:
 34589                           	opt stack 0
 34590                           tosu	equ	0xFFF
 34591                           tosh	equ	0xFFE
 34592                           tosl	equ	0xFFD
 34593                           pclath	equ	0xFFA
 34594                           tblptru	equ	0xFF8
 34595                           tblptrh	equ	0xFF7
 34596                           tblptrl	equ	0xFF6
 34597                           tablat	equ	0xFF5
 34598                           prodh	equ	0xFF4
 34599                           prodl	equ	0xFF3
 34600                           intcon	equ	0xFF2
 34601                           intcon2	equ	0xFF1
 34602                           intcon3	equ	0xFF0
 34603                           indf0	equ	0xFEF
 34604                           postinc0	equ	0xFEE
 34605                           fsr0h	equ	0xFEA
 34606                           fsr0l	equ	0xFE9
 34607                           wreg	equ	0xFE8
 34608                           indf1	equ	0xFE7
 34609                           postdec1	equ	0xFE5
 34610                           plusw1	equ	0xFE3
 34611                           fsr1h	equ	0xFE2
 34612                           fsr1l	equ	0xFE1
 34613                           indf2	equ	0xFDF
 34614                           postinc2	equ	0xFDE
 34615                           postdec2	equ	0xFDD
 34616                           plusw2	equ	0xFDB
 34617                           fsr2h	equ	0xFDA
 34618                           fsr2l	equ	0xFD9
 34619                           status	equ	0xFD8
 34620                           
 34621 ;; *************** function __get_fbr *****************
 34622 ;; Defined at:
 34623 ;;		line 1019 in file "fat16.c"
 34624 ;; Parameters:    Size  Location     Type
 34625 ;;  idx             2    0[COMRAM] unsigned int 
 34626 ;; Auto vars:     Size  Location     Type
 34627 ;;		None
 34628 ;; Return value:  Size  Location     Type
 34629 ;;                  1    wreg      unsigned char 
 34630 ;; Registers used:
 34631 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34632 ;; Tracked objects:
 34633 ;;		On entry : 0/0
 34634 ;;		On exit  : 0/0
 34635 ;;		Unchanged: 0/0
 34636 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34637 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34638 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34639 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34640 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34641 ;;Total ram usage:        4 bytes
 34642 ;; Hardware stack levels used:    1
 34643 ;; This function calls:
 34644 ;;		Nothing
 34645 ;; This function is called by:
 34646 ;;		_fat_get_format_status
 34647 ;;		_fat_format
 34648 ;; This function uses a non-reentrant model
 34649 ;;
 34650                           
 34651                           	psect	text174
 34652  001DCC                     __ptext174:
 34653                           	opt stack 0
 34654  001DCC                     __get_fbr:
 34655                           	opt stack 27
 34656                           
 34657                           ;fat16.c: 1021: switch (idx)
 34658                           
 34659                           ;incstack = 0
 34660  001DCC  D091               	goto	l2140
 34661  001DCE                     
 34662                           ;fat16.c: 1024: return 0xEB;
 34663  001DCE  0EEB               	movlw	235
 34664  001DD0  0012               	return	
 34665  001DD2                     
 34666                           ;fat16.c: 1026: return 0x3C;
 34667  001DD2  0E3C               	movlw	60
 34668  001DD4  0012               	return	
 34669  001DD6                     
 34670                           ;fat16.c: 1028: return 0x90;
 34671  001DD6  0E90               	movlw	144
 34672  001DD8  0012               	return	
 34673  001DDA                     
 34674                           ;fat16.c: 1030: return "MSDOS5.0"[0];
 34675  001DDA  0EF2               	movlw	low STR_1
 34676  001DDC  6EF6               	movwf	tblptrl,c
 34677  001DDE                     	if	1	;There is more than 1 active tblptr byte
 34678  001DDE  0E9F               	movlw	high STR_1
 34679  001DE0  6EF7               	movwf	tblptrh,c
 34680  001DE2                     	endif
 34681  001DE2                     	if	1	;There are 3 active tblptr bytes
 34682  001DE2  0E00               	movlw	low (STR_1 shr (0+16))
 34683  001DE4  6EF8               	movwf	tblptru,c
 34684  001DE6                     	endif
 34685  001DE6  0008               	tblrd		*
 34686  001DE8  50F5               	movf	tablat,w,c
 34687  001DEA  0012               	return	
 34688  001DEC                     
 34689                           ;fat16.c: 1032: return "MSDOS5.0"[1];
 34690  001DEC  0EF3               	movlw	low (STR_1+1)
 34691  001DEE  6EF6               	movwf	tblptrl,c
 34692  001DF0  0E9F               	movlw	high (STR_1+1)
 34693  001DF2  6EF7               	movwf	tblptrh,c
 34694  001DF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34695  001DF4  6AF8               	clrf	tblptru,c
 34696  001DF6                     	endif
 34697  001DF6                     	if	0	;tblptru may be non-zero
 34698  001DF6                     	endif
 34699  001DF6  0008               	tblrd		*
 34700  001DF8  50F5               	movf	tablat,w,c
 34701  001DFA  0012               	return	
 34702  001DFC                     
 34703                           ;fat16.c: 1034: return "MSDOS5.0"[2];
 34704  001DFC  0EF4               	movlw	low (STR_1+2)
 34705  001DFE  6EF6               	movwf	tblptrl,c
 34706  001E00  0E9F               	movlw	high (STR_1+2)
 34707  001E02  6EF7               	movwf	tblptrh,c
 34708  001E04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34709  001E04  6AF8               	clrf	tblptru,c
 34710  001E06                     	endif
 34711  001E06                     	if	0	;tblptru may be non-zero
 34712  001E06                     	endif
 34713  001E06  0008               	tblrd		*
 34714  001E08  50F5               	movf	tablat,w,c
 34715  001E0A  0012               	return	
 34716  001E0C                     
 34717                           ;fat16.c: 1036: return "MSDOS5.0"[3];
 34718  001E0C  0EF5               	movlw	low (STR_1+3)
 34719  001E0E  6EF6               	movwf	tblptrl,c
 34720  001E10  0E9F               	movlw	high (STR_1+3)
 34721  001E12  6EF7               	movwf	tblptrh,c
 34722  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34723  001E14  6AF8               	clrf	tblptru,c
 34724  001E16                     	endif
 34725  001E16                     	if	0	;tblptru may be non-zero
 34726  001E16                     	endif
 34727  001E16  0008               	tblrd		*
 34728  001E18  50F5               	movf	tablat,w,c
 34729  001E1A  0012               	return	
 34730  001E1C                     
 34731                           ;fat16.c: 1038: return "MSDOS5.0"[4];
 34732  001E1C  0EF6               	movlw	low (STR_1+4)
 34733  001E1E  6EF6               	movwf	tblptrl,c
 34734  001E20  0E9F               	movlw	high (STR_1+4)
 34735  001E22  6EF7               	movwf	tblptrh,c
 34736  001E24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34737  001E24  6AF8               	clrf	tblptru,c
 34738  001E26                     	endif
 34739  001E26                     	if	0	;tblptru may be non-zero
 34740  001E26                     	endif
 34741  001E26  0008               	tblrd		*
 34742  001E28  50F5               	movf	tablat,w,c
 34743  001E2A  0012               	return	
 34744  001E2C                     
 34745                           ;fat16.c: 1040: return "MSDOS5.0"[5];
 34746  001E2C  0EF7               	movlw	low (STR_1+5)
 34747  001E2E  6EF6               	movwf	tblptrl,c
 34748  001E30  0E9F               	movlw	high (STR_1+5)
 34749  001E32  6EF7               	movwf	tblptrh,c
 34750  001E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34751  001E34  6AF8               	clrf	tblptru,c
 34752  001E36                     	endif
 34753  001E36                     	if	0	;tblptru may be non-zero
 34754  001E36                     	endif
 34755  001E36  0008               	tblrd		*
 34756  001E38  50F5               	movf	tablat,w,c
 34757  001E3A  0012               	return	
 34758  001E3C                     
 34759                           ;fat16.c: 1042: return "MSDOS5.0"[6];
 34760  001E3C  0EF8               	movlw	low (STR_1+6)
 34761  001E3E  6EF6               	movwf	tblptrl,c
 34762  001E40  0E9F               	movlw	high (STR_1+6)
 34763  001E42  6EF7               	movwf	tblptrh,c
 34764  001E44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34765  001E44  6AF8               	clrf	tblptru,c
 34766  001E46                     	endif
 34767  001E46                     	if	0	;tblptru may be non-zero
 34768  001E46                     	endif
 34769  001E46  0008               	tblrd		*
 34770  001E48  50F5               	movf	tablat,w,c
 34771  001E4A  0012               	return	
 34772  001E4C                     
 34773                           ;fat16.c: 1044: return "MSDOS5.0"[7];
 34774  001E4C  0EF9               	movlw	low (STR_1+7)
 34775  001E4E  6EF6               	movwf	tblptrl,c
 34776  001E50  0E9F               	movlw	high (STR_1+7)
 34777  001E52  6EF7               	movwf	tblptrh,c
 34778  001E54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34779  001E54  6AF8               	clrf	tblptru,c
 34780  001E56                     	endif
 34781  001E56                     	if	0	;tblptru may be non-zero
 34782  001E56                     	endif
 34783  001E56  0008               	tblrd		*
 34784  001E58  50F5               	movf	tablat,w,c
 34785  001E5A  0012               	return	
 34786  001E5C                     
 34787                           ;fat16.c: 1046: return ((unsigned char)((((uint16_t)512))&0xFF));
 34788  001E5C  0E00               	movlw	0
 34789  001E5E  0012               	return	
 34790  001E60                     
 34791                           ;fat16.c: 1048: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 34792  001E60  0E02               	movlw	2
 34793  001E62  0012               	return	
 34794  001E64                     
 34795                           ;fat16.c: 1050: return 1;
 34796  001E64  0E01               	movlw	1
 34797  001E66  0012               	return	
 34798  001E68                     
 34799                           ;fat16.c: 1052: return ((unsigned char)((((uint16_t)1))&0xFF));
 34800  001E68  0E01               	movlw	1
 34801  001E6A  0012               	return	
 34802  001E6C                     
 34803                           ;fat16.c: 1054: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 34804  001E6C  0E00               	movlw	0
 34805  001E6E  0012               	return	
 34806  001E70                     
 34807                           ;fat16.c: 1056: return 1;
 34808  001E70  0E01               	movlw	1
 34809  001E72  0012               	return	
 34810  001E74                     
 34811                           ;fat16.c: 1058: return ((unsigned char)((((uint16_t)64))&0xFF));
 34812  001E74  0E40               	movlw	64
 34813  001E76  0012               	return	
 34814  001E78                     
 34815                           ;fat16.c: 1060: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 34816  001E78  0E00               	movlw	0
 34817  001E7A  0012               	return	
 34818  001E7C                     
 34819                           ;fat16.c: 1062: return ((unsigned char)((((uint16_t)8191))&0xFF));
 34820  001E7C  0EFF               	movlw	255
 34821  001E7E  0012               	return	
 34822  001E80                     
 34823                           ;fat16.c: 1064: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 34824  001E80  0E1F               	movlw	31
 34825  001E82  0012               	return	
 34826  001E84                     
 34827                           ;fat16.c: 1066: return 0XF8;
 34828  001E84  0EF8               	movlw	248
 34829  001E86  0012               	return	
 34830  001E88                     
 34831                           ;fat16.c: 1068: return ((unsigned char)((((uint16_t)32))&0xFF));
 34832  001E88  0E20               	movlw	32
 34833  001E8A  0012               	return	
 34834  001E8C                     
 34835                           ;fat16.c: 1070: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 34836  001E8C  0E00               	movlw	0
 34837  001E8E  0012               	return	
 34838  001E90                     
 34839                           ;fat16.c: 1072: return ((unsigned char)((((uint16_t)63))&0xFF));
 34840  001E90  0E3F               	movlw	63
 34841  001E92  0012               	return	
 34842  001E94                     
 34843                           ;fat16.c: 1074: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 34844  001E94  0E00               	movlw	0
 34845  001E96  0012               	return	
 34846  001E98                     
 34847                           ;fat16.c: 1076: return ((unsigned char)((((uint16_t)16))&0xFF));
 34848  001E98  0E10               	movlw	16
 34849  001E9A  0012               	return	
 34850  001E9C                     
 34851                           ;fat16.c: 1078: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 34852  001E9C  0E00               	movlw	0
 34853  001E9E  0012               	return	
 34854  001EA0                     
 34855                           ;fat16.c: 1080: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 34856  001EA0  0E00               	movlw	0
 34857  001EA2  0012               	return	
 34858  001EA4                     
 34859                           ;fat16.c: 1082: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 34860  001EA4  0E00               	movlw	0
 34861  001EA6  0012               	return	
 34862  001EA8                     
 34863                           ;fat16.c: 1084: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 34864  001EA8  0E00               	movlw	0
 34865  001EAA  0012               	return	
 34866  001EAC                     
 34867                           ;fat16.c: 1086: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34868  001EAC  0E00               	movlw	0
 34869  001EAE  0012               	return	
 34870  001EB0                     
 34871                           ;fat16.c: 1088: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 34872  001EB0  0E01               	movlw	1
 34873  001EB2  0012               	return	
 34874  001EB4                     
 34875                           ;fat16.c: 1090: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 34876  001EB4  0E00               	movlw	0
 34877  001EB6  0012               	return	
 34878  001EB8                     
 34879                           ;fat16.c: 1092: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 34880  001EB8  0E22               	movlw	34
 34881  001EBA  0012               	return	
 34882  001EBC                     
 34883                           ;fat16.c: 1094: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 34884  001EBC  0E00               	movlw	0
 34885  001EBE  0012               	return	
 34886  001EC0                     
 34887                           ;fat16.c: 1098: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34888                           
 34889                           ;fat16.c: 1097: case 0x2F:
 34890  001EC0  0E00               	movlw	0
 34891  001EC2  0012               	return	
 34892  001EC4                     
 34893                           ;fat16.c: 1100: return 'F';
 34894  001EC4  0E46               	movlw	70
 34895  001EC6  0012               	return	
 34896  001EC8                     
 34897                           ;fat16.c: 1102: return 'A';
 34898  001EC8  0E41               	movlw	65
 34899  001ECA  0012               	return	
 34900  001ECC                     
 34901                           ;fat16.c: 1104: return 'T';
 34902  001ECC  0E54               	movlw	84
 34903  001ECE  0012               	return	
 34904  001ED0                     
 34905                           ;fat16.c: 1106: return '1';
 34906  001ED0  0E31               	movlw	49
 34907  001ED2  0012               	return	
 34908  001ED4                     
 34909                           ;fat16.c: 1108: return '6';
 34910  001ED4  0E36               	movlw	54
 34911  001ED6  0012               	return	
 34912  001ED8                     
 34913                           ;fat16.c: 1110: return ' ';
 34914  001ED8  0E20               	movlw	32
 34915  001EDA  0012               	return	
 34916  001EDC                     
 34917                           ;fat16.c: 1112: return ' ';
 34918  001EDC  0E20               	movlw	32
 34919  001EDE  0012               	return	
 34920  001EE0                     
 34921                           ;fat16.c: 1114: return ' ';
 34922  001EE0  0E20               	movlw	32
 34923  001EE2  0012               	return	
 34924  001EE4                     
 34925                           ;fat16.c: 1116: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 34926  001EE4  0E55               	movlw	85
 34927  001EE6  0012               	return	
 34928  001EE8                     
 34929                           ;fat16.c: 1118: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 34930  001EE8  0EAA               	movlw	170
 34931  001EEA  0012               	return	
 34932  001EEC                     
 34933                           ;fat16.c: 1120: return 0X00;
 34934  001EEC  0E00               	movlw	0
 34935                           
 34936                           ;fat16.c: 1121: }
 34937  001EEE  0012               	return	
 34938  001EF0                     l2140:
 34939  001EF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 34940  001EF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 34941                           
 34942                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 34943                           ; Switch size 1, requested type "space"
 34944                           ; Number of cases is 2, Range of values is 0 to 1
 34945                           ; switch strategies available:
 34946                           ; Name         Instructions Cycles
 34947                           ; simple_byte            7     4 (average)
 34948                           ;	Chosen strategy is simple_byte
 34949  001EF8  5004               	movf	??__get_fbr+1,w,c
 34950  001EFA  0A00               	xorlw	0	; case 0
 34951  001EFC  B4D8               	btfsc	status,2,c
 34952  001EFE  D004               	goto	l16275
 34953  001F00  0A01               	xorlw	1	; case 1
 34954  001F02  B4D8               	btfsc	status,2,c
 34955  001F04  D08D               	goto	l16277
 34956  001F06  D7F2               	goto	l2190
 34957  001F08                     l16275:
 34958                           
 34959                           ; Switch size 1, requested type "space"
 34960                           ; Number of cases is 46, Range of values is 0 to 61
 34961                           ; switch strategies available:
 34962                           ; Name         Instructions Cycles
 34963                           ; simple_byte          139    70 (average)
 34964                           ;	Chosen strategy is simple_byte
 34965  001F08  5003               	movf	??__get_fbr,w,c
 34966  001F0A  0A00               	xorlw	0	; case 0
 34967  001F0C  B4D8               	btfsc	status,2,c
 34968  001F0E  D75F               	goto	l2141
 34969  001F10  0A01               	xorlw	1	; case 1
 34970  001F12  B4D8               	btfsc	status,2,c
 34971  001F14  D75E               	goto	l2143
 34972  001F16  0A03               	xorlw	3	; case 2
 34973  001F18  B4D8               	btfsc	status,2,c
 34974  001F1A  D75D               	goto	l2144
 34975  001F1C  0A01               	xorlw	1	; case 3
 34976  001F1E  B4D8               	btfsc	status,2,c
 34977  001F20  D75C               	goto	l2145
 34978  001F22  0A07               	xorlw	7	; case 4
 34979  001F24  B4D8               	btfsc	status,2,c
 34980  001F26  D762               	goto	l2146
 34981  001F28  0A01               	xorlw	1	; case 5
 34982  001F2A  B4D8               	btfsc	status,2,c
 34983  001F2C  D767               	goto	l2147
 34984  001F2E  0A03               	xorlw	3	; case 6
 34985  001F30  B4D8               	btfsc	status,2,c
 34986  001F32  D76C               	goto	l2148
 34987  001F34  0A01               	xorlw	1	; case 7
 34988  001F36  B4D8               	btfsc	status,2,c
 34989  001F38  D771               	goto	l2149
 34990  001F3A  0A0F               	xorlw	15	; case 8
 34991  001F3C  B4D8               	btfsc	status,2,c
 34992  001F3E  D776               	goto	l2150
 34993  001F40  0A01               	xorlw	1	; case 9
 34994  001F42  B4D8               	btfsc	status,2,c
 34995  001F44  D77B               	goto	l2151
 34996  001F46  0A03               	xorlw	3	; case 10
 34997  001F48  B4D8               	btfsc	status,2,c
 34998  001F4A  D780               	goto	l2152
 34999  001F4C  0A01               	xorlw	1	; case 11
 35000  001F4E  B4D8               	btfsc	status,2,c
 35001  001F50  D785               	goto	l2153
 35002  001F52  0A07               	xorlw	7	; case 12
 35003  001F54  B4D8               	btfsc	status,2,c
 35004  001F56  D784               	goto	l2154
 35005  001F58  0A01               	xorlw	1	; case 13
 35006  001F5A  B4D8               	btfsc	status,2,c
 35007  001F5C  D783               	goto	l2155
 35008  001F5E  0A03               	xorlw	3	; case 14
 35009  001F60  B4D8               	btfsc	status,2,c
 35010  001F62  D782               	goto	l2156
 35011  001F64  0A01               	xorlw	1	; case 15
 35012  001F66  B4D8               	btfsc	status,2,c
 35013  001F68  D781               	goto	l2157
 35014  001F6A  0A1F               	xorlw	31	; case 16
 35015  001F6C  B4D8               	btfsc	status,2,c
 35016  001F6E  D780               	goto	l2158
 35017  001F70  0A01               	xorlw	1	; case 17
 35018  001F72  B4D8               	btfsc	status,2,c
 35019  001F74  D77F               	goto	l2159
 35020  001F76  0A03               	xorlw	3	; case 18
 35021  001F78  B4D8               	btfsc	status,2,c
 35022  001F7A  D77E               	goto	l2160
 35023  001F7C  0A01               	xorlw	1	; case 19
 35024  001F7E  B4D8               	btfsc	status,2,c
 35025  001F80  D77D               	goto	l2161
 35026  001F82  0A07               	xorlw	7	; case 20
 35027  001F84  B4D8               	btfsc	status,2,c
 35028  001F86  D77C               	goto	l2162
 35029  001F88  0A01               	xorlw	1	; case 21
 35030  001F8A  B4D8               	btfsc	status,2,c
 35031  001F8C  D77B               	goto	l2163
 35032  001F8E  0A03               	xorlw	3	; case 22
 35033  001F90  B4D8               	btfsc	status,2,c
 35034  001F92  D77A               	goto	l2164
 35035  001F94  0A01               	xorlw	1	; case 23
 35036  001F96  B4D8               	btfsc	status,2,c
 35037  001F98  D779               	goto	l2165
 35038  001F9A  0A0F               	xorlw	15	; case 24
 35039  001F9C  B4D8               	btfsc	status,2,c
 35040  001F9E  D778               	goto	l2166
 35041  001FA0  0A01               	xorlw	1	; case 25
 35042  001FA2  B4D8               	btfsc	status,2,c
 35043  001FA4  D777               	goto	l2167
 35044  001FA6  0A03               	xorlw	3	; case 26
 35045  001FA8  B4D8               	btfsc	status,2,c
 35046  001FAA  D776               	goto	l2168
 35047  001FAC  0A01               	xorlw	1	; case 27
 35048  001FAE  B4D8               	btfsc	status,2,c
 35049  001FB0  D775               	goto	l2169
 35050  001FB2  0A07               	xorlw	7	; case 28
 35051  001FB4  B4D8               	btfsc	status,2,c
 35052  001FB6  D774               	goto	l2170
 35053  001FB8  0A01               	xorlw	1	; case 29
 35054  001FBA  B4D8               	btfsc	status,2,c
 35055  001FBC  D773               	goto	l2171
 35056  001FBE  0A03               	xorlw	3	; case 30
 35057  001FC0  B4D8               	btfsc	status,2,c
 35058  001FC2  D772               	goto	l2172
 35059  001FC4  0A01               	xorlw	1	; case 31
 35060  001FC6  B4D8               	btfsc	status,2,c
 35061  001FC8  D771               	goto	l2173
 35062  001FCA  0A37               	xorlw	55	; case 40
 35063  001FCC  B4D8               	btfsc	status,2,c
 35064  001FCE  D770               	goto	l2174
 35065  001FD0  0A01               	xorlw	1	; case 41
 35066  001FD2  B4D8               	btfsc	status,2,c
 35067  001FD4  D76F               	goto	l2175
 35068  001FD6  0A05               	xorlw	5	; case 44
 35069  001FD8  B4D8               	btfsc	status,2,c
 35070  001FDA  D76E               	goto	l2176
 35071  001FDC  0A01               	xorlw	1	; case 45
 35072  001FDE  B4D8               	btfsc	status,2,c
 35073  001FE0  D76D               	goto	l2177
 35074  001FE2  0A03               	xorlw	3	; case 46
 35075  001FE4  B4D8               	btfsc	status,2,c
 35076  001FE6  D76C               	goto	l2178
 35077  001FE8  0A01               	xorlw	1	; case 47
 35078  001FEA  B4D8               	btfsc	status,2,c
 35079  001FEC  D769               	goto	l2178
 35080  001FEE  0A19               	xorlw	25	; case 54
 35081  001FF0  B4D8               	btfsc	status,2,c
 35082  001FF2  D768               	goto	l2180
 35083  001FF4  0A01               	xorlw	1	; case 55
 35084  001FF6  B4D8               	btfsc	status,2,c
 35085  001FF8  D767               	goto	l2181
 35086  001FFA  0A0F               	xorlw	15	; case 56
 35087  001FFC  B4D8               	btfsc	status,2,c
 35088  001FFE  D766               	goto	l2182
 35089  002000  0A01               	xorlw	1	; case 57
 35090  002002  B4D8               	btfsc	status,2,c
 35091  002004  D765               	goto	l2183
 35092  002006  0A03               	xorlw	3	; case 58
 35093  002008  B4D8               	btfsc	status,2,c
 35094  00200A  D764               	goto	l2184
 35095  00200C  0A01               	xorlw	1	; case 59
 35096  00200E  B4D8               	btfsc	status,2,c
 35097  002010  D763               	goto	l2185
 35098  002012  0A07               	xorlw	7	; case 60
 35099  002014  B4D8               	btfsc	status,2,c
 35100  002016  D762               	goto	l2186
 35101  002018  0A01               	xorlw	1	; case 61
 35102  00201A  B4D8               	btfsc	status,2,c
 35103  00201C  D761               	goto	l2187
 35104  00201E  D766               	goto	l2190
 35105  002020                     l16277:
 35106                           
 35107                           ; Switch size 1, requested type "space"
 35108                           ; Number of cases is 2, Range of values is 254 to 255
 35109                           ; switch strategies available:
 35110                           ; Name         Instructions Cycles
 35111                           ; simple_byte            7     4 (average)
 35112                           ;	Chosen strategy is simple_byte
 35113  002020  5003               	movf	??__get_fbr,w,c
 35114  002022  0AFE               	xorlw	254	; case 254
 35115  002024  B4D8               	btfsc	status,2,c
 35116  002026  D75E               	goto	l2188
 35117  002028  0A01               	xorlw	1	; case 255
 35118  00202A  B4D8               	btfsc	status,2,c
 35119  00202C  D75D               	goto	l2189
 35120  00202E  D75E               	goto	l2190
 35121  002030                     __end_of__get_fbr:
 35122                           	opt stack 0
 35123                           tosu	equ	0xFFF
 35124                           tosh	equ	0xFFE
 35125                           tosl	equ	0xFFD
 35126                           pclath	equ	0xFFA
 35127                           tblptru	equ	0xFF8
 35128                           tblptrh	equ	0xFF7
 35129                           tblptrl	equ	0xFF6
 35130                           tablat	equ	0xFF5
 35131                           prodh	equ	0xFF4
 35132                           prodl	equ	0xFF3
 35133                           intcon	equ	0xFF2
 35134                           intcon2	equ	0xFF1
 35135                           intcon3	equ	0xFF0
 35136                           indf0	equ	0xFEF
 35137                           postinc0	equ	0xFEE
 35138                           fsr0h	equ	0xFEA
 35139                           fsr0l	equ	0xFE9
 35140                           wreg	equ	0xFE8
 35141                           indf1	equ	0xFE7
 35142                           postdec1	equ	0xFE5
 35143                           plusw1	equ	0xFE3
 35144                           fsr1h	equ	0xFE2
 35145                           fsr1l	equ	0xFE1
 35146                           indf2	equ	0xFDF
 35147                           postinc2	equ	0xFDE
 35148                           postdec2	equ	0xFDD
 35149                           plusw2	equ	0xFDB
 35150                           fsr2h	equ	0xFDA
 35151                           fsr2l	equ	0xFD9
 35152                           status	equ	0xFD8
 35153                           
 35154 ;; *************** function __get_fat *****************
 35155 ;; Defined at:
 35156 ;;		line 1124 in file "fat16.c"
 35157 ;; Parameters:    Size  Location     Type
 35158 ;;  idx             2    0[COMRAM] unsigned int 
 35159 ;; Auto vars:     Size  Location     Type
 35160 ;;		None
 35161 ;; Return value:  Size  Location     Type
 35162 ;;                  1    wreg      unsigned char 
 35163 ;; Registers used:
 35164 ;;		wreg, status,2, status,0
 35165 ;; Tracked objects:
 35166 ;;		On entry : 0/0
 35167 ;;		On exit  : 0/0
 35168 ;;		Unchanged: 0/0
 35169 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35170 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35171 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35172 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35173 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35174 ;;Total ram usage:        4 bytes
 35175 ;; Hardware stack levels used:    1
 35176 ;; This function calls:
 35177 ;;		Nothing
 35178 ;; This function is called by:
 35179 ;;		_fat_format
 35180 ;; This function uses a non-reentrant model
 35181 ;;
 35182                           
 35183                           	psect	text175
 35184  007F86                     __ptext175:
 35185                           	opt stack 0
 35186  007F86                     __get_fat:
 35187                           	opt stack 27
 35188                           
 35189                           ;fat16.c: 1126: switch (idx)
 35190                           
 35191                           ;incstack = 0
 35192  007F86  D00E               	goto	l2194
 35193  007F88                     
 35194                           ;fat16.c: 1130: return 0xF8;
 35195  007F88  0EF8               	movlw	248
 35196  007F8A  0012               	return	
 35197  007F8C                     
 35198                           ;fat16.c: 1132: return 0xFF;
 35199  007F8C  0EFF               	movlw	255
 35200  007F8E  0012               	return	
 35201  007F90                     
 35202                           ;fat16.c: 1134: return 0xFF;
 35203  007F90  0EFF               	movlw	255
 35204  007F92  0012               	return	
 35205  007F94                     
 35206                           ;fat16.c: 1136: return 0xFF;
 35207  007F94  0EFF               	movlw	255
 35208  007F96  0012               	return	
 35209  007F98                     
 35210                           ;fat16.c: 1139: return 0xFF;
 35211  007F98  0EFF               	movlw	255
 35212  007F9A  0012               	return	
 35213  007F9C                     
 35214                           ;fat16.c: 1141: return 0xFF;
 35215  007F9C  0EFF               	movlw	255
 35216  007F9E  0012               	return	
 35217  007FA0                     
 35218                           ;fat16.c: 1143: return 0X00;
 35219  007FA0  0E00               	movlw	0
 35220                           
 35221                           ;fat16.c: 1144: }
 35222  007FA2  0012               	return	
 35223  007FA4                     l2194:
 35224  007FA4  C001  F003         	movff	__get_fat@idx,??__get_fat
 35225  007FA8  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 35226                           
 35227                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35228                           ; Switch size 1, requested type "space"
 35229                           ; Number of cases is 1, Range of values is 0 to 0
 35230                           ; switch strategies available:
 35231                           ; Name         Instructions Cycles
 35232                           ; simple_byte            4     3 (average)
 35233                           ;	Chosen strategy is simple_byte
 35234  007FAC  5004               	movf	??__get_fat+1,w,c
 35235  007FAE  0A00               	xorlw	0	; case 0
 35236  007FB0  A4D8               	btfss	status,2,c
 35237  007FB2  D7F6               	goto	l2202
 35238                           
 35239                           ; Switch size 1, requested type "space"
 35240                           ; Number of cases is 6, Range of values is 0 to 5
 35241                           ; switch strategies available:
 35242                           ; Name         Instructions Cycles
 35243                           ; simple_byte           19    10 (average)
 35244                           ;	Chosen strategy is simple_byte
 35245  007FB4  5003               	movf	??__get_fat,w,c
 35246  007FB6  0A00               	xorlw	0	; case 0
 35247  007FB8  B4D8               	btfsc	status,2,c
 35248  007FBA  D7E6               	goto	l2195
 35249  007FBC  0A01               	xorlw	1	; case 1
 35250  007FBE  B4D8               	btfsc	status,2,c
 35251  007FC0  D7E5               	goto	l2197
 35252  007FC2  0A03               	xorlw	3	; case 2
 35253  007FC4  B4D8               	btfsc	status,2,c
 35254  007FC6  D7E4               	goto	l2198
 35255  007FC8  0A01               	xorlw	1	; case 3
 35256  007FCA  B4D8               	btfsc	status,2,c
 35257  007FCC  D7E3               	goto	l2199
 35258  007FCE  0A07               	xorlw	7	; case 4
 35259  007FD0  B4D8               	btfsc	status,2,c
 35260  007FD2  D7E2               	goto	l2200
 35261  007FD4  0A01               	xorlw	1	; case 5
 35262  007FD6  B4D8               	btfsc	status,2,c
 35263  007FD8  D7E1               	goto	l2201
 35264  007FDA  D7E2               	goto	l2202
 35265  007FDC                     __end_of__get_fat:
 35266                           	opt stack 0
 35267                           tosu	equ	0xFFF
 35268                           tosh	equ	0xFFE
 35269                           tosl	equ	0xFFD
 35270                           pclath	equ	0xFFA
 35271                           tblptru	equ	0xFF8
 35272                           tblptrh	equ	0xFF7
 35273                           tblptrl	equ	0xFF6
 35274                           tablat	equ	0xFF5
 35275                           prodh	equ	0xFF4
 35276                           prodl	equ	0xFF3
 35277                           intcon	equ	0xFF2
 35278                           intcon2	equ	0xFF1
 35279                           intcon3	equ	0xFF0
 35280                           indf0	equ	0xFEF
 35281                           postinc0	equ	0xFEE
 35282                           fsr0h	equ	0xFEA
 35283                           fsr0l	equ	0xFE9
 35284                           wreg	equ	0xFE8
 35285                           indf1	equ	0xFE7
 35286                           postdec1	equ	0xFE5
 35287                           plusw1	equ	0xFE3
 35288                           fsr1h	equ	0xFE2
 35289                           fsr1l	equ	0xFE1
 35290                           indf2	equ	0xFDF
 35291                           postinc2	equ	0xFDE
 35292                           postdec2	equ	0xFDD
 35293                           plusw2	equ	0xFDB
 35294                           fsr2h	equ	0xFDA
 35295                           fsr2l	equ	0xFD9
 35296                           status	equ	0xFD8
 35297                           
 35298 ;; *************** function __get_data *****************
 35299 ;; Defined at:
 35300 ;;		line 1220 in file "fat16.c"
 35301 ;; Parameters:    Size  Location     Type
 35302 ;;  idx             2    0[COMRAM] unsigned int 
 35303 ;; Auto vars:     Size  Location     Type
 35304 ;;		None
 35305 ;; Return value:  Size  Location     Type
 35306 ;;                  1    wreg      unsigned char 
 35307 ;; Registers used:
 35308 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35309 ;; Tracked objects:
 35310 ;;		On entry : 0/0
 35311 ;;		On exit  : 0/0
 35312 ;;		Unchanged: 0/0
 35313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35314 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35315 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35316 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35317 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35318 ;;Total ram usage:        2 bytes
 35319 ;; Hardware stack levels used:    1
 35320 ;; This function calls:
 35321 ;;		Nothing
 35322 ;; This function is called by:
 35323 ;;		_fat_format
 35324 ;; This function uses a non-reentrant model
 35325 ;;
 35326                           
 35327                           	psect	text176
 35328  008AA0                     __ptext176:
 35329                           	opt stack 0
 35330  008AA0                     __get_data:
 35331                           	opt stack 27
 35332                           
 35333                           ;fat16.c: 1222: if(idx < 12)
 35334                           
 35335                           ;incstack = 0
 35336  008AA0  5002               	movf	__get_data@idx+1,w,c
 35337  008AA2  E110               	bnz	l12763
 35338  008AA4  0E0C               	movlw	12
 35339  008AA6  5C01               	subwf	__get_data@idx,w,c
 35340  008AA8  B0D8               	btfsc	status,0,c
 35341  008AAA  D00C               	goto	l2238
 35342                           
 35343                           ;fat16.c: 1223: {;fat16.c: 1224: return "hello world!"[idx];
 35344  008AAC  0ED0               	movlw	low STR_12
 35345  008AAE  2401               	addwf	__get_data@idx,w,c
 35346  008AB0  6EF6               	movwf	tblptrl,c
 35347  008AB2  0E9F               	movlw	high STR_12
 35348  008AB4  2002               	addwfc	__get_data@idx+1,w,c
 35349  008AB6  6EF7               	movwf	tblptrh,c
 35350  008AB8                     	if	1	;There are 3 active tblptr bytes
 35351  008AB8  6AF8               	clrf	tblptru,c
 35352  008ABA  0E00               	movlw	low (__mediumconst shr (0+16))
 35353  008ABC  22F8               	addwfc	tblptru,f,c
 35354  008ABE                     	endif
 35355  008ABE  0008               	tblrd		*
 35356  008AC0  50F5               	movf	tablat,w,c
 35357  008AC2  0012               	return	
 35358  008AC4                     l2238:
 35359  008AC4                     l12763:
 35360                           
 35361                           ;fat16.c: 1225: };fat16.c: 1226: return 0X00;
 35362  008AC4  0E00               	movlw	0
 35363  008AC6  0012               	return	
 35364  008AC8                     __end_of__get_data:
 35365                           	opt stack 0
 35366                           tosu	equ	0xFFF
 35367                           tosh	equ	0xFFE
 35368                           tosl	equ	0xFFD
 35369                           pclath	equ	0xFFA
 35370                           tblptru	equ	0xFF8
 35371                           tblptrh	equ	0xFF7
 35372                           tblptrl	equ	0xFF6
 35373                           tablat	equ	0xFF5
 35374                           prodh	equ	0xFF4
 35375                           prodl	equ	0xFF3
 35376                           intcon	equ	0xFF2
 35377                           intcon2	equ	0xFF1
 35378                           intcon3	equ	0xFF0
 35379                           indf0	equ	0xFEF
 35380                           postinc0	equ	0xFEE
 35381                           fsr0h	equ	0xFEA
 35382                           fsr0l	equ	0xFE9
 35383                           wreg	equ	0xFE8
 35384                           indf1	equ	0xFE7
 35385                           postdec1	equ	0xFE5
 35386                           plusw1	equ	0xFE3
 35387                           fsr1h	equ	0xFE2
 35388                           fsr1l	equ	0xFE1
 35389                           indf2	equ	0xFDF
 35390                           postinc2	equ	0xFDE
 35391                           postdec2	equ	0xFDD
 35392                           plusw2	equ	0xFDB
 35393                           fsr2h	equ	0xFDA
 35394                           fsr2l	equ	0xFD9
 35395                           status	equ	0xFD8
 35396                           
 35397 ;; *************** function __parse_file_resize *****************
 35398 ;; Defined at:
 35399 ;;		line 570 in file "api.c"
 35400 ;; Parameters:    Size  Location     Type
 35401 ;;  data            2   84[COMRAM] PTR unsigned char 
 35402 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35403 ;; Auto vars:     Size  Location     Type
 35404 ;;  file_size       4   87[COMRAM] unsigned long 
 35405 ;; Return value:  Size  Location     Type
 35406 ;;                  1    wreg      unsigned char 
 35407 ;; Registers used:
 35408 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35409 ;; Tracked objects:
 35410 ;;		On entry : 0/0
 35411 ;;		On exit  : 0/0
 35412 ;;		Unchanged: 0/0
 35413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35414 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35415 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35416 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35417 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35418 ;;Total ram usage:        7 bytes
 35419 ;; Hardware stack levels used:    1
 35420 ;; Hardware stack levels required when called:    8
 35421 ;; This function calls:
 35422 ;;		_fat_resize_file
 35423 ;; This function is called by:
 35424 ;;		__parse_command_long
 35425 ;; This function uses a non-reentrant model
 35426 ;;
 35427                           
 35428                           	psect	text177
 35429  005708                     __ptext177:
 35430                           	opt stack 0
 35431  005708                     __parse_file_resize:
 35432                           	opt stack 20
 35433                           
 35434                           ;api.c: 573: uint32_t file_size;;api.c: 574: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 35435                           
 35436                           ;incstack = 0
 35437  005708  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 35438  00570C  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 35439  005710  0E50               	movlw	80
 35440  005712  18DE               	xorwf	postinc2,w,c
 35441  005714  A4D8               	btfss	status,2,c
 35442  005716  D014               	goto	u10780
 35443  005718  EE20 F006          	lfsr	2,6
 35444  00571C  5055               	movf	__parse_file_resize@data,w,c
 35445  00571E  26D9               	addwf	fsr2l,f,c
 35446  005720  5056               	movf	__parse_file_resize@data+1,w,c
 35447  005722  22DA               	addwfc	fsr2h,f,c
 35448  005724  0E4C               	movlw	76
 35449  005726  18DE               	xorwf	postinc2,w,c
 35450  005728  A4D8               	btfss	status,2,c
 35451  00572A  D00A               	goto	u10780
 35452  00572C  EE20 F007          	lfsr	2,7
 35453  005730  5055               	movf	__parse_file_resize@data,w,c
 35454  005732  26D9               	addwf	fsr2l,f,c
 35455  005734  5056               	movf	__parse_file_resize@data+1,w,c
 35456  005736  22DA               	addwfc	fsr2h,f,c
 35457  005738  0EEA               	movlw	234
 35458  00573A  18DE               	xorwf	postinc2,w,c
 35459  00573C  B4D8               	btfsc	status,2,c
 35460  00573E  D002               	goto	l2801
 35461  005740                     u10780:
 35462                           
 35463                           ;api.c: 575: {;api.c: 576: return 8;
 35464  005740  0E08               	movlw	8
 35465  005742  0012               	return	
 35466  005744                     l2801:
 35467                           
 35468                           ;api.c: 577: };api.c: 580: file_size = data[2];
 35469  005744  EE20 F002          	lfsr	2,2
 35470  005748  5055               	movf	__parse_file_resize@data,w,c
 35471  00574A  26D9               	addwf	fsr2l,f,c
 35472  00574C  5056               	movf	__parse_file_resize@data+1,w,c
 35473  00574E  22DA               	addwfc	fsr2h,f,c
 35474  005750  50DF               	movf	indf2,w,c
 35475  005752  6E57               	movwf	??__parse_file_resize& (0+255),c
 35476  005754  5057               	movf	??__parse_file_resize,w,c
 35477  005756  6E58               	movwf	__parse_file_resize@file_size,c
 35478  005758  6A59               	clrf	__parse_file_resize@file_size+1,c
 35479  00575A  6A5A               	clrf	__parse_file_resize@file_size+2,c
 35480  00575C  6A5B               	clrf	__parse_file_resize@file_size+3,c
 35481                           
 35482                           ;api.c: 581: file_size <<= 8;
 35483  00575E  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35484  005762  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35485  005766  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35486  00576A  6A58               	clrf	__parse_file_resize@file_size,c
 35487                           
 35488                           ;api.c: 582: file_size |= data[3];
 35489  00576C  EE20 F003          	lfsr	2,3
 35490  005770  5055               	movf	__parse_file_resize@data,w,c
 35491  005772  26D9               	addwf	fsr2l,f,c
 35492  005774  5056               	movf	__parse_file_resize@data+1,w,c
 35493  005776  22DA               	addwfc	fsr2h,f,c
 35494  005778  50DF               	movf	indf2,w,c
 35495  00577A  6E57               	movwf	??__parse_file_resize& (0+255),c
 35496  00577C  5057               	movf	??__parse_file_resize,w,c
 35497  00577E  1258               	iorwf	__parse_file_resize@file_size,f,c
 35498                           
 35499                           ;api.c: 583: file_size <<= 8;
 35500  005780  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35501  005784  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35502  005788  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35503  00578C  6A58               	clrf	__parse_file_resize@file_size,c
 35504                           
 35505                           ;api.c: 584: file_size |= data[4];
 35506  00578E  EE20 F004          	lfsr	2,4
 35507  005792  5055               	movf	__parse_file_resize@data,w,c
 35508  005794  26D9               	addwf	fsr2l,f,c
 35509  005796  5056               	movf	__parse_file_resize@data+1,w,c
 35510  005798  22DA               	addwfc	fsr2h,f,c
 35511  00579A  50DF               	movf	indf2,w,c
 35512  00579C  6E57               	movwf	??__parse_file_resize& (0+255),c
 35513  00579E  5057               	movf	??__parse_file_resize,w,c
 35514  0057A0  1258               	iorwf	__parse_file_resize@file_size,f,c
 35515                           
 35516                           ;api.c: 585: file_size <<= 8;
 35517  0057A2  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35518  0057A6  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35519  0057AA  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35520  0057AE  6A58               	clrf	__parse_file_resize@file_size,c
 35521                           
 35522                           ;api.c: 586: file_size |= data[5];
 35523  0057B0  EE20 F005          	lfsr	2,5
 35524  0057B4  5055               	movf	__parse_file_resize@data,w,c
 35525  0057B6  26D9               	addwf	fsr2l,f,c
 35526  0057B8  5056               	movf	__parse_file_resize@data+1,w,c
 35527  0057BA  22DA               	addwfc	fsr2h,f,c
 35528  0057BC  50DF               	movf	indf2,w,c
 35529  0057BE  6E57               	movwf	??__parse_file_resize& (0+255),c
 35530  0057C0  5057               	movf	??__parse_file_resize,w,c
 35531  0057C2  1258               	iorwf	__parse_file_resize@file_size,f,c
 35532                           
 35533                           ;api.c: 589: fat_resize_file(data[1], file_size);
 35534  0057C4  C058  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 35535  0057C8  C059  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 35536  0057CC  C05A  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 35537  0057D0  C05B  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 35538  0057D4  EE20 F001          	lfsr	2,1
 35539  0057D8  5055               	movf	__parse_file_resize@data,w,c
 35540  0057DA  26D9               	addwf	fsr2l,f,c
 35541  0057DC  5056               	movf	__parse_file_resize@data+1,w,c
 35542  0057DE  22DA               	addwfc	fsr2h,f,c
 35543  0057E0  50DF               	movf	indf2,w,c
 35544  0057E2  ECF7  F026         	call	_fat_resize_file
 35545                           
 35546                           ;api.c: 590: return 8;
 35547  0057E6  0E08               	movlw	8
 35548  0057E8  0012               	return	
 35549  0057EA                     __end_of__parse_file_resize:
 35550                           	opt stack 0
 35551                           tosu	equ	0xFFF
 35552                           tosh	equ	0xFFE
 35553                           tosl	equ	0xFFD
 35554                           pclath	equ	0xFFA
 35555                           tblptru	equ	0xFF8
 35556                           tblptrh	equ	0xFF7
 35557                           tblptrl	equ	0xFF6
 35558                           tablat	equ	0xFF5
 35559                           prodh	equ	0xFF4
 35560                           prodl	equ	0xFF3
 35561                           intcon	equ	0xFF2
 35562                           intcon2	equ	0xFF1
 35563                           intcon3	equ	0xFF0
 35564                           indf0	equ	0xFEF
 35565                           postinc0	equ	0xFEE
 35566                           fsr0h	equ	0xFEA
 35567                           fsr0l	equ	0xFE9
 35568                           wreg	equ	0xFE8
 35569                           indf1	equ	0xFE7
 35570                           postdec1	equ	0xFE5
 35571                           plusw1	equ	0xFE3
 35572                           fsr1h	equ	0xFE2
 35573                           fsr1l	equ	0xFE1
 35574                           indf2	equ	0xFDF
 35575                           postinc2	equ	0xFDE
 35576                           postdec2	equ	0xFDD
 35577                           plusw2	equ	0xFDB
 35578                           fsr2h	equ	0xFDA
 35579                           fsr2l	equ	0xFD9
 35580                           status	equ	0xFD8
 35581                           
 35582 ;; *************** function __parse_file_rename *****************
 35583 ;; Defined at:
 35584 ;;		line 631 in file "api.c"
 35585 ;; Parameters:    Size  Location     Type
 35586 ;;  data            2    0[BANK0 ] PTR unsigned char 
 35587 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35588 ;; Auto vars:     Size  Location     Type
 35589 ;;		None
 35590 ;; Return value:  Size  Location     Type
 35591 ;;                  1    wreg      unsigned char 
 35592 ;; Registers used:
 35593 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35594 ;; Tracked objects:
 35595 ;;		On entry : 0/0
 35596 ;;		On exit  : 0/0
 35597 ;;		Unchanged: 0/0
 35598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35599 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35600 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35601 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35602 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35603 ;;Total ram usage:        3 bytes
 35604 ;; Hardware stack levels used:    1
 35605 ;; Hardware stack levels required when called:    7
 35606 ;; This function calls:
 35607 ;;		_fat_rename_file
 35608 ;; This function is called by:
 35609 ;;		__parse_command_long
 35610 ;; This function uses a non-reentrant model
 35611 ;;
 35612                           
 35613                           	psect	text178
 35614  0077B0                     __ptext178:
 35615                           	opt stack 0
 35616  0077B0                     __parse_file_rename:
 35617                           	opt stack 21
 35618                           
 35619                           ;api.c: 634: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 35620                           
 35621                           ;incstack = 0
 35622  0077B0  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 35623  0077B4  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 35624  0077B8  0E53               	movlw	83
 35625  0077BA  18DE               	xorwf	postinc2,w,c
 35626  0077BC  A4D8               	btfss	status,2,c
 35627  0077BE  D015               	goto	u10870
 35628  0077C0  0100               	movlb	0	; () banked
 35629  0077C2  EE20 F00D          	lfsr	2,13
 35630  0077C6  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35631  0077C8  26D9               	addwf	fsr2l,f,c
 35632  0077CA  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35633  0077CC  22DA               	addwfc	fsr2h,f,c
 35634  0077CE  0E7E               	movlw	126
 35635  0077D0  18DE               	xorwf	postinc2,w,c
 35636  0077D2  A4D8               	btfss	status,2,c
 35637  0077D4  D00A               	goto	u10870
 35638                           
 35639                           ; BSR set to: 0
 35640  0077D6  EE20 F00E          	lfsr	2,14
 35641  0077DA  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35642  0077DC  26D9               	addwf	fsr2l,f,c
 35643  0077DE  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35644  0077E0  22DA               	addwfc	fsr2h,f,c
 35645  0077E2  0E18               	movlw	24
 35646  0077E4  18DE               	xorwf	postinc2,w,c
 35647  0077E6  B4D8               	btfsc	status,2,c
 35648  0077E8  D002               	goto	l2819
 35649  0077EA                     u10870:
 35650                           
 35651                           ;api.c: 635: {;api.c: 636: return 15;
 35652                           
 35653                           ; BSR set to: 0
 35654  0077EA  0E0F               	movlw	15
 35655  0077EC  0012               	return	
 35656  0077EE                     l2819:
 35657                           
 35658                           ;api.c: 637: };api.c: 640: fat_rename_file(data[1], &data[2], &data[10]);
 35659  0077EE  0E02               	movlw	2
 35660  0077F0  0100               	movlb	0	; () banked
 35661  0077F2  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35662  0077F4  6E38               	movwf	fat_rename_file@name,c
 35663  0077F6  0E00               	movlw	0
 35664  0077F8  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35665  0077FA  6E39               	movwf	fat_rename_file@name+1,c
 35666  0077FC  0E0A               	movlw	10
 35667  0077FE  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35668  007800  6E3A               	movwf	fat_rename_file@extension,c
 35669  007802  0E00               	movlw	0
 35670  007804  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35671  007806  6E3B               	movwf	fat_rename_file@extension+1,c
 35672  007808  EE20 F001          	lfsr	2,1
 35673  00780C  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35674  00780E  26D9               	addwf	fsr2l,f,c
 35675  007810  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35676  007812  22DA               	addwfc	fsr2h,f,c
 35677  007814  50DF               	movf	indf2,w,c
 35678  007816  EC6C  F036         	call	_fat_rename_file
 35679                           
 35680                           ;api.c: 641: return 15;
 35681  00781A  0E0F               	movlw	15
 35682  00781C  0012               	return	
 35683  00781E                     __end_of__parse_file_rename:
 35684                           	opt stack 0
 35685                           tosu	equ	0xFFF
 35686                           tosh	equ	0xFFE
 35687                           tosl	equ	0xFFD
 35688                           pclath	equ	0xFFA
 35689                           tblptru	equ	0xFF8
 35690                           tblptrh	equ	0xFF7
 35691                           tblptrl	equ	0xFF6
 35692                           tablat	equ	0xFF5
 35693                           prodh	equ	0xFF4
 35694                           prodl	equ	0xFF3
 35695                           intcon	equ	0xFF2
 35696                           intcon2	equ	0xFF1
 35697                           intcon3	equ	0xFF0
 35698                           indf0	equ	0xFEF
 35699                           postinc0	equ	0xFEE
 35700                           fsr0h	equ	0xFEA
 35701                           fsr0l	equ	0xFE9
 35702                           wreg	equ	0xFE8
 35703                           indf1	equ	0xFE7
 35704                           postdec1	equ	0xFE5
 35705                           plusw1	equ	0xFE3
 35706                           fsr1h	equ	0xFE2
 35707                           fsr1l	equ	0xFE1
 35708                           indf2	equ	0xFDF
 35709                           postinc2	equ	0xFDE
 35710                           postdec2	equ	0xFDD
 35711                           plusw2	equ	0xFDB
 35712                           fsr2h	equ	0xFDA
 35713                           fsr2l	equ	0xFD9
 35714                           status	equ	0xFD8
 35715                           
 35716 ;; *************** function _fat_rename_file *****************
 35717 ;; Defined at:
 35718 ;;		line 716 in file "fat16.c"
 35719 ;; Parameters:    Size  Location     Type
 35720 ;;  file_number     1    wreg     unsigned char 
 35721 ;;  name            2   55[COMRAM] PTR unsigned char 
 35722 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35723 ;;  extension       2   57[COMRAM] PTR unsigned char 
 35724 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35725 ;; Auto vars:     Size  Location     Type
 35726 ;;  file_number     1   60[COMRAM] unsigned char 
 35727 ;;  root           32   61[COMRAM] struct .
 35728 ;;  cntr            1   93[COMRAM] unsigned char 
 35729 ;;  return_code     1   59[COMRAM] unsigned char 
 35730 ;; Return value:  Size  Location     Type
 35731 ;;                  1    wreg      void 
 35732 ;; Registers used:
 35733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35734 ;; Tracked objects:
 35735 ;;		On entry : 0/0
 35736 ;;		On exit  : 0/0
 35737 ;;		Unchanged: 0/0
 35738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35739 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35740 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35742 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35743 ;;Total ram usage:       39 bytes
 35744 ;; Hardware stack levels used:    1
 35745 ;; Hardware stack levels required when called:    6
 35746 ;; This function calls:
 35747 ;;		__write_root
 35748 ;;		_fat_get_file_information
 35749 ;; This function is called by:
 35750 ;;		__parse_file_rename
 35751 ;; This function uses a non-reentrant model
 35752 ;;
 35753                           
 35754                           	psect	text179
 35755  006CD8                     __ptext179:
 35756                           	opt stack 0
 35757  006CD8                     _fat_rename_file:
 35758                           	opt stack 21
 35759                           
 35760                           ;incstack = 0
 35761                           ;fat_rename_file@file_number stored from wreg
 35762  006CD8  6E3D               	movwf	fat_rename_file@file_number,c
 35763                           
 35764                           ;fat16.c: 718: rootEntry_t root;;fat16.c: 719: uint8_t cntr;;fat16.c: 720: uint8_t retur
      +                          n_code;;fat16.c: 723: return_code = fat_get_file_information(file_number, &root);
 35765  006CDA  0E3E               	movlw	low fat_rename_file@root
 35766  006CDC  6E30               	movwf	fat_get_file_information@data,c
 35767  006CDE  0E00               	movlw	high fat_rename_file@root
 35768  006CE0  6E31               	movwf	fat_get_file_information@data+1,c
 35769  006CE2  503D               	movf	fat_rename_file@file_number,w,c
 35770  006CE4  EC2F  F03B         	call	_fat_get_file_information
 35771  006CE8  6E3C               	movwf	fat_rename_file@return_code,c
 35772                           
 35773                           ;fat16.c: 724: if(return_code!=0x00)
 35774  006CEA  503C               	movf	fat_rename_file@return_code,w,c
 35775  006CEC  A4D8               	btfss	status,2,c
 35776  006CEE  0012               	return	
 35777                           
 35778                           ;fat16.c: 728: };fat16.c: 731: for(cntr=0; cntr<8; ++cntr)
 35779                           
 35780                           ;fat16.c: 725: {;fat16.c: 727: return;
 35781  006CF0  0E00               	movlw	0
 35782  006CF2  6E5E               	movwf	fat_rename_file@cntr,c
 35783  006CF4                     l13289:
 35784  006CF4  0E07               	movlw	7
 35785  006CF6  645E               	cpfsgt	fat_rename_file@cntr,c
 35786  006CF8  D001               	goto	l2077
 35787  006CFA  D014               	goto	u10130
 35788  006CFC                     l2077:
 35789                           
 35790                           ;fat16.c: 732: {;fat16.c: 733: root.fileName[cntr] = name[cntr];
 35791  006CFC  505E               	movf	fat_rename_file@cntr,w,c
 35792  006CFE  0D01               	mullw	1
 35793  006D00  50F3               	movf	prodl,w,c
 35794  006D02  2438               	addwf	fat_rename_file@name,w,c
 35795  006D04  6ED9               	movwf	fsr2l,c
 35796  006D06  50F4               	movf	prodh,w,c
 35797  006D08  2039               	addwfc	fat_rename_file@name+1,w,c
 35798  006D0A  6EDA               	movwf	fsr2h,c
 35799  006D0C  505E               	movf	fat_rename_file@cntr,w,c
 35800  006D0E  0D01               	mullw	1
 35801  006D10  0E3E               	movlw	low fat_rename_file@root
 35802  006D12  24F3               	addwf	prodl,w,c
 35803  006D14  6EE1               	movwf	fsr1l,c
 35804  006D16  0E00               	movlw	high fat_rename_file@root
 35805  006D18  20F4               	addwfc	prodh,w,c
 35806  006D1A  6EE2               	movwf	fsr1h,c
 35807  006D1C  CFDF FFE7          	movff	indf2,indf1
 35808  006D20  2A5E               	incf	fat_rename_file@cntr,f,c
 35809  006D22  D7E8               	goto	l13289
 35810  006D24                     u10130:
 35811                           
 35812                           ;fat16.c: 734: };fat16.c: 737: for(cntr=0; cntr<3; ++cntr)
 35813  006D24  0E00               	movlw	0
 35814  006D26  6E5E               	movwf	fat_rename_file@cntr,c
 35815  006D28                     l13301:
 35816  006D28  0E02               	movlw	2
 35817  006D2A  645E               	cpfsgt	fat_rename_file@cntr,c
 35818  006D2C  D001               	goto	l2079
 35819  006D2E  D018               	goto	u10150
 35820  006D30                     l2079:
 35821                           
 35822                           ;fat16.c: 738: {;fat16.c: 739: root.fileExtension[cntr] = extension[cntr];
 35823  006D30  505E               	movf	fat_rename_file@cntr,w,c
 35824  006D32  0D01               	mullw	1
 35825  006D34  50F3               	movf	prodl,w,c
 35826  006D36  243A               	addwf	fat_rename_file@extension,w,c
 35827  006D38  6ED9               	movwf	fsr2l,c
 35828  006D3A  50F4               	movf	prodh,w,c
 35829  006D3C  203B               	addwfc	fat_rename_file@extension+1,w,c
 35830  006D3E  6EDA               	movwf	fsr2h,c
 35831  006D40  505E               	movf	fat_rename_file@cntr,w,c
 35832  006D42  0D01               	mullw	1
 35833  006D44  0E08               	movlw	8
 35834  006D46  26F3               	addwf	prodl,f,c
 35835  006D48  0E00               	movlw	0
 35836  006D4A  22F4               	addwfc	prodh,f,c
 35837  006D4C  0E3E               	movlw	low fat_rename_file@root
 35838  006D4E  24F3               	addwf	prodl,w,c
 35839  006D50  6EE1               	movwf	fsr1l,c
 35840  006D52  0E00               	movlw	high fat_rename_file@root
 35841  006D54  20F4               	addwfc	prodh,w,c
 35842  006D56  6EE2               	movwf	fsr1h,c
 35843  006D58  CFDF FFE7          	movff	indf2,indf1
 35844  006D5C  2A5E               	incf	fat_rename_file@cntr,f,c
 35845  006D5E  D7E4               	goto	l13301
 35846  006D60                     u10150:
 35847                           
 35848                           ;fat16.c: 740: };fat16.c: 743: _write_root(file_number, &root);
 35849  006D60  0E3E               	movlw	low fat_rename_file@root
 35850  006D62  6E29               	movwf	__write_root@data,c
 35851  006D64  0E00               	movlw	high fat_rename_file@root
 35852  006D66  6E2A               	movwf	__write_root@data+1,c
 35853  006D68  503D               	movf	fat_rename_file@file_number,w,c
 35854  006D6A  EC34  F042         	call	__write_root
 35855  006D6E  0012               	return		;funcret
 35856  006D70                     __end_of_fat_rename_file:
 35857                           	opt stack 0
 35858                           tosu	equ	0xFFF
 35859                           tosh	equ	0xFFE
 35860                           tosl	equ	0xFFD
 35861                           pclath	equ	0xFFA
 35862                           tblptru	equ	0xFF8
 35863                           tblptrh	equ	0xFF7
 35864                           tblptrl	equ	0xFF6
 35865                           tablat	equ	0xFF5
 35866                           prodh	equ	0xFF4
 35867                           prodl	equ	0xFF3
 35868                           intcon	equ	0xFF2
 35869                           intcon2	equ	0xFF1
 35870                           intcon3	equ	0xFF0
 35871                           indf0	equ	0xFEF
 35872                           postinc0	equ	0xFEE
 35873                           fsr0h	equ	0xFEA
 35874                           fsr0l	equ	0xFE9
 35875                           wreg	equ	0xFE8
 35876                           indf1	equ	0xFE7
 35877                           postdec1	equ	0xFE5
 35878                           plusw1	equ	0xFE3
 35879                           fsr1h	equ	0xFE2
 35880                           fsr1l	equ	0xFE1
 35881                           indf2	equ	0xFDF
 35882                           postinc2	equ	0xFDE
 35883                           postdec2	equ	0xFDD
 35884                           plusw2	equ	0xFDB
 35885                           fsr2h	equ	0xFDA
 35886                           fsr2l	equ	0xFD9
 35887                           status	equ	0xFD8
 35888                           
 35889 ;; *************** function __parse_file_modify *****************
 35890 ;; Defined at:
 35891 ;;		line 658 in file "api.c"
 35892 ;; Parameters:    Size  Location     Type
 35893 ;;  data            2   85[COMRAM] PTR unsigned char 
 35894 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35895 ;; Auto vars:     Size  Location     Type
 35896 ;;  start_byte      4   90[COMRAM] unsigned long 
 35897 ;;  number_of_by    2   88[COMRAM] unsigned int 
 35898 ;; Return value:  Size  Location     Type
 35899 ;;                  1    wreg      unsigned char 
 35900 ;; Registers used:
 35901 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35902 ;; Tracked objects:
 35903 ;;		On entry : 0/0
 35904 ;;		On exit  : 0/0
 35905 ;;		Unchanged: 0/0
 35906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35907 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35908 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35909 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35910 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35911 ;;Total ram usage:        9 bytes
 35912 ;; Hardware stack levels used:    1
 35913 ;; Hardware stack levels required when called:    8
 35914 ;; This function calls:
 35915 ;;		_fat_modify_file
 35916 ;; This function is called by:
 35917 ;;		__parse_command_long
 35918 ;; This function uses a non-reentrant model
 35919 ;;
 35920                           
 35921                           	psect	text180
 35922  0045BE                     __ptext180:
 35923                           	opt stack 0
 35924  0045BE                     __parse_file_modify:
 35925                           	opt stack 20
 35926                           
 35927                           ;api.c: 660: uint16_t number_of_bytes;;api.c: 661: uint32_t start_byte;;api.c: 664: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 35928                           
 35929                           ;incstack = 0
 35930  0045BE  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 35931  0045C2  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 35932  0045C6  0E55               	movlw	85
 35933  0045C8  18DE               	xorwf	postinc2,w,c
 35934  0045CA  A4D8               	btfss	status,2,c
 35935  0045CC  D014               	goto	u10930
 35936  0045CE  EE20 F007          	lfsr	2,7
 35937  0045D2  5056               	movf	__parse_file_modify@data,w,c
 35938  0045D4  26D9               	addwf	fsr2l,f,c
 35939  0045D6  5057               	movf	__parse_file_modify@data+1,w,c
 35940  0045D8  22DA               	addwfc	fsr2h,f,c
 35941  0045DA  0E0F               	movlw	15
 35942  0045DC  18DE               	xorwf	postinc2,w,c
 35943  0045DE  A4D8               	btfss	status,2,c
 35944  0045E0  D00A               	goto	u10930
 35945  0045E2  EE20 F008          	lfsr	2,8
 35946  0045E6  5056               	movf	__parse_file_modify@data,w,c
 35947  0045E8  26D9               	addwf	fsr2l,f,c
 35948  0045EA  5057               	movf	__parse_file_modify@data+1,w,c
 35949  0045EC  22DA               	addwfc	fsr2h,f,c
 35950  0045EE  0E9B               	movlw	155
 35951  0045F0  18DE               	xorwf	postinc2,w,c
 35952  0045F2  B4D8               	btfsc	status,2,c
 35953  0045F4  D002               	goto	l2831
 35954  0045F6                     u10930:
 35955                           
 35956                           ;api.c: 665: {;api.c: 667: return 65;
 35957  0045F6  0E41               	movlw	65
 35958  0045F8  0012               	return	
 35959  0045FA                     l2831:
 35960                           
 35961                           ;api.c: 668: };api.c: 671: number_of_bytes = data[6];
 35962  0045FA  EE20 F006          	lfsr	2,6
 35963  0045FE  5056               	movf	__parse_file_modify@data,w,c
 35964  004600  26D9               	addwf	fsr2l,f,c
 35965  004602  5057               	movf	__parse_file_modify@data+1,w,c
 35966  004604  22DA               	addwfc	fsr2h,f,c
 35967  004606  50DF               	movf	indf2,w,c
 35968  004608  6E58               	movwf	??__parse_file_modify& (0+255),c
 35969  00460A  5058               	movf	??__parse_file_modify,w,c
 35970  00460C  6E59               	movwf	__parse_file_modify@number_of_bytes,c
 35971  00460E  6A5A               	clrf	__parse_file_modify@number_of_bytes+1,c
 35972                           
 35973                           ;api.c: 674: start_byte = data[2];
 35974  004610  EE20 F002          	lfsr	2,2
 35975  004614  5056               	movf	__parse_file_modify@data,w,c
 35976  004616  26D9               	addwf	fsr2l,f,c
 35977  004618  5057               	movf	__parse_file_modify@data+1,w,c
 35978  00461A  22DA               	addwfc	fsr2h,f,c
 35979  00461C  50DF               	movf	indf2,w,c
 35980  00461E  6E58               	movwf	??__parse_file_modify& (0+255),c
 35981  004620  5058               	movf	??__parse_file_modify,w,c
 35982  004622  6E5B               	movwf	__parse_file_modify@start_byte,c
 35983  004624  6A5C               	clrf	__parse_file_modify@start_byte+1,c
 35984  004626  6A5D               	clrf	__parse_file_modify@start_byte+2,c
 35985  004628  6A5E               	clrf	__parse_file_modify@start_byte+3,c
 35986                           
 35987                           ;api.c: 675: start_byte <<= 8;
 35988  00462A  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 35989  00462E  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 35990  004632  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 35991  004636  6A5B               	clrf	__parse_file_modify@start_byte,c
 35992                           
 35993                           ;api.c: 676: start_byte |= data[3];
 35994  004638  EE20 F003          	lfsr	2,3
 35995  00463C  5056               	movf	__parse_file_modify@data,w,c
 35996  00463E  26D9               	addwf	fsr2l,f,c
 35997  004640  5057               	movf	__parse_file_modify@data+1,w,c
 35998  004642  22DA               	addwfc	fsr2h,f,c
 35999  004644  50DF               	movf	indf2,w,c
 36000  004646  6E58               	movwf	??__parse_file_modify& (0+255),c
 36001  004648  5058               	movf	??__parse_file_modify,w,c
 36002  00464A  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36003                           
 36004                           ;api.c: 677: start_byte <<= 8;
 36005  00464C  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36006  004650  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36007  004654  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36008  004658  6A5B               	clrf	__parse_file_modify@start_byte,c
 36009                           
 36010                           ;api.c: 678: start_byte |= data[4];
 36011  00465A  EE20 F004          	lfsr	2,4
 36012  00465E  5056               	movf	__parse_file_modify@data,w,c
 36013  004660  26D9               	addwf	fsr2l,f,c
 36014  004662  5057               	movf	__parse_file_modify@data+1,w,c
 36015  004664  22DA               	addwfc	fsr2h,f,c
 36016  004666  50DF               	movf	indf2,w,c
 36017  004668  6E58               	movwf	??__parse_file_modify& (0+255),c
 36018  00466A  5058               	movf	??__parse_file_modify,w,c
 36019  00466C  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36020                           
 36021                           ;api.c: 679: start_byte <<= 8;
 36022  00466E  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36023  004672  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36024  004676  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36025  00467A  6A5B               	clrf	__parse_file_modify@start_byte,c
 36026                           
 36027                           ;api.c: 680: start_byte |= data[5];
 36028  00467C  EE20 F005          	lfsr	2,5
 36029  004680  5056               	movf	__parse_file_modify@data,w,c
 36030  004682  26D9               	addwf	fsr2l,f,c
 36031  004684  5057               	movf	__parse_file_modify@data+1,w,c
 36032  004686  22DA               	addwfc	fsr2h,f,c
 36033  004688  50DF               	movf	indf2,w,c
 36034  00468A  6E58               	movwf	??__parse_file_modify& (0+255),c
 36035  00468C  5058               	movf	??__parse_file_modify,w,c
 36036  00468E  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36037                           
 36038                           ;api.c: 682: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 36039  004690  C05B  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 36040  004694  C05C  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 36041  004698  C05D  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 36042  00469C  C05E  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 36043  0046A0  C059  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 36044  0046A4  C05A  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 36045  0046A8  0E09               	movlw	9
 36046  0046AA  2456               	addwf	__parse_file_modify@data,w,c
 36047  0046AC  6E48               	movwf	fat_modify_file@data,c
 36048  0046AE  0E00               	movlw	0
 36049  0046B0  2057               	addwfc	__parse_file_modify@data+1,w,c
 36050  0046B2  6E49               	movwf	fat_modify_file@data+1,c
 36051  0046B4  EE20 F001          	lfsr	2,1
 36052  0046B8  5056               	movf	__parse_file_modify@data,w,c
 36053  0046BA  26D9               	addwf	fsr2l,f,c
 36054  0046BC  5057               	movf	__parse_file_modify@data+1,w,c
 36055  0046BE  22DA               	addwfc	fsr2h,f,c
 36056  0046C0  50DF               	movf	indf2,w,c
 36057  0046C2  EC42  F011         	call	_fat_modify_file
 36058                           
 36059                           ;api.c: 683: return number_of_bytes + 9;
 36060  0046C6  5059               	movf	__parse_file_modify@number_of_bytes,w,c
 36061  0046C8  0F09               	addlw	9
 36062  0046CA  0012               	return	
 36063  0046CC                     __end_of__parse_file_modify:
 36064                           	opt stack 0
 36065                           tosu	equ	0xFFF
 36066                           tosh	equ	0xFFE
 36067                           tosl	equ	0xFFD
 36068                           pclath	equ	0xFFA
 36069                           tblptru	equ	0xFF8
 36070                           tblptrh	equ	0xFF7
 36071                           tblptrl	equ	0xFF6
 36072                           tablat	equ	0xFF5
 36073                           prodh	equ	0xFF4
 36074                           prodl	equ	0xFF3
 36075                           intcon	equ	0xFF2
 36076                           intcon2	equ	0xFF1
 36077                           intcon3	equ	0xFF0
 36078                           indf0	equ	0xFEF
 36079                           postinc0	equ	0xFEE
 36080                           fsr0h	equ	0xFEA
 36081                           fsr0l	equ	0xFE9
 36082                           wreg	equ	0xFE8
 36083                           indf1	equ	0xFE7
 36084                           postdec1	equ	0xFE5
 36085                           plusw1	equ	0xFE3
 36086                           fsr1h	equ	0xFE2
 36087                           fsr1l	equ	0xFE1
 36088                           indf2	equ	0xFDF
 36089                           postinc2	equ	0xFDE
 36090                           postdec2	equ	0xFDD
 36091                           plusw2	equ	0xFDB
 36092                           fsr2h	equ	0xFDA
 36093                           fsr2l	equ	0xFD9
 36094                           status	equ	0xFD8
 36095                           
 36096 ;; *************** function __parse_file_delete *****************
 36097 ;; Defined at:
 36098 ;;		line 594 in file "api.c"
 36099 ;; Parameters:    Size  Location     Type
 36100 ;;  data            2   79[COMRAM] PTR unsigned char 
 36101 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36102 ;; Auto vars:     Size  Location     Type
 36103 ;;		None
 36104 ;; Return value:  Size  Location     Type
 36105 ;;                  1    wreg      unsigned char 
 36106 ;; Registers used:
 36107 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36108 ;; Tracked objects:
 36109 ;;		On entry : 0/0
 36110 ;;		On exit  : 0/0
 36111 ;;		Unchanged: 0/0
 36112 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36113 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36114 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36115 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36116 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36117 ;;Total ram usage:        3 bytes
 36118 ;; Hardware stack levels used:    1
 36119 ;; Hardware stack levels required when called:    8
 36120 ;; This function calls:
 36121 ;;		_fat_delete_file
 36122 ;; This function is called by:
 36123 ;;		__parse_command_long
 36124 ;; This function uses a non-reentrant model
 36125 ;;
 36126                           
 36127                           	psect	text181
 36128  008184                     __ptext181:
 36129                           	opt stack 0
 36130  008184                     __parse_file_delete:
 36131                           	opt stack 20
 36132                           
 36133                           ;api.c: 597: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 36134                           
 36135                           ;incstack = 0
 36136  008184  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 36137  008188  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 36138  00818C  0E51               	movlw	81
 36139  00818E  18DE               	xorwf	postinc2,w,c
 36140  008190  A4D8               	btfss	status,2,c
 36141  008192  D014               	goto	u10810
 36142  008194  EE20 F002          	lfsr	2,2
 36143  008198  5050               	movf	__parse_file_delete@data,w,c
 36144  00819A  26D9               	addwf	fsr2l,f,c
 36145  00819C  5051               	movf	__parse_file_delete@data+1,w,c
 36146  00819E  22DA               	addwfc	fsr2h,f,c
 36147  0081A0  0E66               	movlw	102
 36148  0081A2  18DE               	xorwf	postinc2,w,c
 36149  0081A4  A4D8               	btfss	status,2,c
 36150  0081A6  D00A               	goto	u10810
 36151  0081A8  EE20 F003          	lfsr	2,3
 36152  0081AC  5050               	movf	__parse_file_delete@data,w,c
 36153  0081AE  26D9               	addwf	fsr2l,f,c
 36154  0081B0  5051               	movf	__parse_file_delete@data+1,w,c
 36155  0081B2  22DA               	addwfc	fsr2h,f,c
 36156  0081B4  0EA0               	movlw	160
 36157  0081B6  18DE               	xorwf	postinc2,w,c
 36158  0081B8  B4D8               	btfsc	status,2,c
 36159  0081BA  D002               	goto	l2807
 36160  0081BC                     u10810:
 36161                           
 36162                           ;api.c: 598: {;api.c: 599: return 4;
 36163  0081BC  0E04               	movlw	4
 36164  0081BE  0012               	return	
 36165  0081C0                     l2807:
 36166                           
 36167                           ;api.c: 600: };api.c: 603: fat_delete_file(data[1]);
 36168  0081C0  EE20 F001          	lfsr	2,1
 36169  0081C4  5050               	movf	__parse_file_delete@data,w,c
 36170  0081C6  26D9               	addwf	fsr2l,f,c
 36171  0081C8  5051               	movf	__parse_file_delete@data+1,w,c
 36172  0081CA  22DA               	addwfc	fsr2h,f,c
 36173  0081CC  50DF               	movf	indf2,w,c
 36174  0081CE  ECD9  F042         	call	_fat_delete_file
 36175                           
 36176                           ;api.c: 604: return 4;
 36177  0081D2  0E04               	movlw	4
 36178  0081D4  0012               	return	
 36179  0081D6                     __end_of__parse_file_delete:
 36180                           	opt stack 0
 36181                           tosu	equ	0xFFF
 36182                           tosh	equ	0xFFE
 36183                           tosl	equ	0xFFD
 36184                           pclath	equ	0xFFA
 36185                           tblptru	equ	0xFF8
 36186                           tblptrh	equ	0xFF7
 36187                           tblptrl	equ	0xFF6
 36188                           tablat	equ	0xFF5
 36189                           prodh	equ	0xFF4
 36190                           prodl	equ	0xFF3
 36191                           intcon	equ	0xFF2
 36192                           intcon2	equ	0xFF1
 36193                           intcon3	equ	0xFF0
 36194                           indf0	equ	0xFEF
 36195                           postinc0	equ	0xFEE
 36196                           fsr0h	equ	0xFEA
 36197                           fsr0l	equ	0xFE9
 36198                           wreg	equ	0xFE8
 36199                           indf1	equ	0xFE7
 36200                           postdec1	equ	0xFE5
 36201                           plusw1	equ	0xFE3
 36202                           fsr1h	equ	0xFE2
 36203                           fsr1l	equ	0xFE1
 36204                           indf2	equ	0xFDF
 36205                           postinc2	equ	0xFDE
 36206                           postdec2	equ	0xFDD
 36207                           plusw2	equ	0xFDB
 36208                           fsr2h	equ	0xFDA
 36209                           fsr2l	equ	0xFD9
 36210                           status	equ	0xFD8
 36211                           
 36212 ;; *************** function _fat_delete_file *****************
 36213 ;; Defined at:
 36214 ;;		line 646 in file "fat16.c"
 36215 ;; Parameters:    Size  Location     Type
 36216 ;;  file_number     1    wreg     unsigned char 
 36217 ;; Auto vars:     Size  Location     Type
 36218 ;;  file_number     1   78[COMRAM] unsigned char 
 36219 ;;  first_cluste    2   76[COMRAM] unsigned int 
 36220 ;; Return value:  Size  Location     Type
 36221 ;;                  1    wreg      void 
 36222 ;; Registers used:
 36223 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36224 ;; Tracked objects:
 36225 ;;		On entry : 0/0
 36226 ;;		On exit  : 0/0
 36227 ;;		Unchanged: 0/0
 36228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36230 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36232 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36233 ;;Total ram usage:        3 bytes
 36234 ;; Hardware stack levels used:    1
 36235 ;; Hardware stack levels required when called:    7
 36236 ;; This function calls:
 36237 ;;		__delete_root
 36238 ;;		__get_first_cluster
 36239 ;;		__make_cluster_chain
 36240 ;;		__root_is_available
 36241 ;; This function is called by:
 36242 ;;		__parse_file_delete
 36243 ;; This function uses a non-reentrant model
 36244 ;;
 36245                           
 36246                           	psect	text182
 36247  0085B2                     __ptext182:
 36248                           	opt stack 0
 36249  0085B2                     _fat_delete_file:
 36250                           	opt stack 20
 36251                           
 36252                           ;incstack = 0
 36253                           ;fat_delete_file@file_number stored from wreg
 36254  0085B2  6E4F               	movwf	fat_delete_file@file_number,c
 36255                           
 36256                           ;fat16.c: 648: uint16_t first_cluster;;fat16.c: 651: if(file_number>=64)
 36257  0085B4  0E3F               	movlw	63
 36258  0085B6  644F               	cpfsgt	fat_delete_file@file_number,c
 36259  0085B8  D001               	goto	l2064
 36260  0085BA  0012               	return	
 36261  0085BC                     l2064:
 36262                           
 36263                           ;fat16.c: 655: };fat16.c: 658: if(_root_is_available(file_number))
 36264  0085BC  504F               	movf	fat_delete_file@file_number,w,c
 36265  0085BE  ECA7  F03D         	call	__root_is_available
 36266  0085C2  0900               	iorlw	0
 36267  0085C4  A4D8               	btfss	status,2,c
 36268  0085C6  0012               	return	
 36269                           
 36270                           ;fat16.c: 662: };fat16.c: 665: first_cluster = _get_first_cluster(file_number);
 36271                           
 36272                           ;fat16.c: 659: {;fat16.c: 661: return;
 36273  0085C8  504F               	movf	fat_delete_file@file_number,w,c
 36274  0085CA  EC3B  F041         	call	__get_first_cluster
 36275  0085CE  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 36276  0085D2  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 36277                           
 36278                           ;fat16.c: 668: _make_cluster_chain(first_cluster, 0);
 36279  0085D6  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 36280  0085DA  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 36281  0085DE  0E00               	movlw	0
 36282  0085E0  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 36283  0085E2  0E00               	movlw	0
 36284  0085E4  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 36285  0085E6  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36286                           
 36287                           ;fat16.c: 672: _delete_root(file_number);
 36288  0085EA  504F               	movf	fat_delete_file@file_number,w,c
 36289  0085EC  ECA9  F041         	call	__delete_root
 36290  0085F0  0012               	return		;funcret
 36291  0085F2                     __end_of_fat_delete_file:
 36292                           	opt stack 0
 36293                           tosu	equ	0xFFF
 36294                           tosh	equ	0xFFE
 36295                           tosl	equ	0xFFD
 36296                           pclath	equ	0xFFA
 36297                           tblptru	equ	0xFF8
 36298                           tblptrh	equ	0xFF7
 36299                           tblptrl	equ	0xFF6
 36300                           tablat	equ	0xFF5
 36301                           prodh	equ	0xFF4
 36302                           prodl	equ	0xFF3
 36303                           intcon	equ	0xFF2
 36304                           intcon2	equ	0xFF1
 36305                           intcon3	equ	0xFF0
 36306                           indf0	equ	0xFEF
 36307                           postinc0	equ	0xFEE
 36308                           fsr0h	equ	0xFEA
 36309                           fsr0l	equ	0xFE9
 36310                           wreg	equ	0xFE8
 36311                           indf1	equ	0xFE7
 36312                           postdec1	equ	0xFE5
 36313                           plusw1	equ	0xFE3
 36314                           fsr1h	equ	0xFE2
 36315                           fsr1l	equ	0xFE1
 36316                           indf2	equ	0xFDF
 36317                           postinc2	equ	0xFDE
 36318                           postdec2	equ	0xFDD
 36319                           plusw2	equ	0xFDB
 36320                           fsr2h	equ	0xFDA
 36321                           fsr2l	equ	0xFD9
 36322                           status	equ	0xFD8
 36323                           
 36324 ;; *************** function __delete_root *****************
 36325 ;; Defined at:
 36326 ;;		line 486 in file "fat16.c"
 36327 ;; Parameters:    Size  Location     Type
 36328 ;;  file_number     1    wreg     unsigned char 
 36329 ;; Auto vars:     Size  Location     Type
 36330 ;;  file_number     1   45[COMRAM] unsigned char 
 36331 ;;  offset          2   42[COMRAM] unsigned int 
 36332 ;;  sector          2   40[COMRAM] unsigned int 
 36333 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 36334 ;; Return value:  Size  Location     Type
 36335 ;;                  1    wreg      void 
 36336 ;; Registers used:
 36337 ;;		wreg, status,2, status,0, cstack
 36338 ;; Tracked objects:
 36339 ;;		On entry : 0/0
 36340 ;;		On exit  : 0/0
 36341 ;;		Unchanged: 0/0
 36342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36343 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36344 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36345 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36346 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36347 ;;Total ram usage:        6 bytes
 36348 ;; Hardware stack levels used:    1
 36349 ;; Hardware stack levels required when called:    5
 36350 ;; This function calls:
 36351 ;;		__offset_from_file_number
 36352 ;;		__sector_from_file_number
 36353 ;;		_flash_partial_write
 36354 ;; This function is called by:
 36355 ;;		_fat_delete_file
 36356 ;; This function uses a non-reentrant model
 36357 ;;
 36358                           
 36359                           	psect	text183
 36360  008352                     __ptext183:
 36361                           	opt stack 0
 36362  008352                     __delete_root:
 36363                           	opt stack 21
 36364                           
 36365                           ;incstack = 0
 36366                           ;__delete_root@file_number stored from wreg
 36367  008352  6E2E               	movwf	__delete_root@file_number,c
 36368                           
 36369                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 36370  008354  502E               	movf	__delete_root@file_number,w,c
 36371  008356  EC11  F045         	call	__sector_from_file_number
 36372  00835A  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 36373  00835E  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 36374                           
 36375                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 36376  008362  502E               	movf	__delete_root@file_number,w,c
 36377  008364  EC9D  F045         	call	__offset_from_file_number
 36378  008368  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 36379  00836C  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 36380                           
 36381                           ;fat16.c: 497: deleted_value = 0xE5;
 36382  008370  0EE5               	movlw	229
 36383  008372  6E2D               	movwf	__delete_root@deleted_value,c
 36384                           
 36385                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 36386  008374  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 36387  008378  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 36388  00837C  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 36389  008380  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 36390  008384  0E00               	movlw	0
 36391  008386  6E25               	movwf	flash_partial_write@length+1,c
 36392  008388  0E01               	movlw	1
 36393  00838A  6E24               	movwf	flash_partial_write@length,c
 36394  00838C  0E2D               	movlw	low __delete_root@deleted_value
 36395  00838E  6E26               	movwf	flash_partial_write@data,c
 36396  008390  0E00               	movlw	high __delete_root@deleted_value
 36397  008392  6E27               	movwf	flash_partial_write@data+1,c
 36398  008394  ECA0  F03B         	call	_flash_partial_write	;wreg free
 36399  008398  0012               	return		;funcret
 36400  00839A                     __end_of__delete_root:
 36401                           	opt stack 0
 36402                           tosu	equ	0xFFF
 36403                           tosh	equ	0xFFE
 36404                           tosl	equ	0xFFD
 36405                           pclath	equ	0xFFA
 36406                           tblptru	equ	0xFF8
 36407                           tblptrh	equ	0xFF7
 36408                           tblptrl	equ	0xFF6
 36409                           tablat	equ	0xFF5
 36410                           prodh	equ	0xFF4
 36411                           prodl	equ	0xFF3
 36412                           intcon	equ	0xFF2
 36413                           intcon2	equ	0xFF1
 36414                           intcon3	equ	0xFF0
 36415                           indf0	equ	0xFEF
 36416                           postinc0	equ	0xFEE
 36417                           fsr0h	equ	0xFEA
 36418                           fsr0l	equ	0xFE9
 36419                           wreg	equ	0xFE8
 36420                           indf1	equ	0xFE7
 36421                           postdec1	equ	0xFE5
 36422                           plusw1	equ	0xFE3
 36423                           fsr1h	equ	0xFE2
 36424                           fsr1l	equ	0xFE1
 36425                           indf2	equ	0xFDF
 36426                           postinc2	equ	0xFDE
 36427                           postdec2	equ	0xFDD
 36428                           plusw2	equ	0xFDB
 36429                           fsr2h	equ	0xFDA
 36430                           fsr2l	equ	0xFD9
 36431                           status	equ	0xFD8
 36432                           
 36433 ;; *************** function __parse_file_create *****************
 36434 ;; Defined at:
 36435 ;;		line 607 in file "api.c"
 36436 ;; Parameters:    Size  Location     Type
 36437 ;;  data            2   88[COMRAM] PTR unsigned char 
 36438 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36439 ;; Auto vars:     Size  Location     Type
 36440 ;;  file_size       4   91[COMRAM] unsigned long 
 36441 ;; Return value:  Size  Location     Type
 36442 ;;                  1    wreg      unsigned char 
 36443 ;; Registers used:
 36444 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36445 ;; Tracked objects:
 36446 ;;		On entry : 0/0
 36447 ;;		On exit  : 0/0
 36448 ;;		Unchanged: 0/0
 36449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36450 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36451 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36452 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36453 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36454 ;;Total ram usage:        7 bytes
 36455 ;; Hardware stack levels used:    1
 36456 ;; Hardware stack levels required when called:    8
 36457 ;; This function calls:
 36458 ;;		_fat_create_file
 36459 ;; This function is called by:
 36460 ;;		__parse_command_long
 36461 ;; This function uses a non-reentrant model
 36462 ;;
 36463                           
 36464                           	psect	text184
 36465  0050D0                     __ptext184:
 36466                           	opt stack 0
 36467  0050D0                     __parse_file_create:
 36468                           	opt stack 20
 36469                           
 36470                           ;api.c: 610: uint32_t file_size;;api.c: 611: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 36471                           
 36472                           ;incstack = 0
 36473  0050D0  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 36474  0050D4  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 36475  0050D8  0E52               	movlw	82
 36476  0050DA  18DE               	xorwf	postinc2,w,c
 36477  0050DC  A4D8               	btfss	status,2,c
 36478  0050DE  D014               	goto	u10840
 36479  0050E0  EE20 F010          	lfsr	2,16
 36480  0050E4  5059               	movf	__parse_file_create@data,w,c
 36481  0050E6  26D9               	addwf	fsr2l,f,c
 36482  0050E8  505A               	movf	__parse_file_create@data+1,w,c
 36483  0050EA  22DA               	addwfc	fsr2h,f,c
 36484  0050EC  0EBD               	movlw	189
 36485  0050EE  18DE               	xorwf	postinc2,w,c
 36486  0050F0  A4D8               	btfss	status,2,c
 36487  0050F2  D00A               	goto	u10840
 36488  0050F4  EE20 F011          	lfsr	2,17
 36489  0050F8  5059               	movf	__parse_file_create@data,w,c
 36490  0050FA  26D9               	addwf	fsr2l,f,c
 36491  0050FC  505A               	movf	__parse_file_create@data+1,w,c
 36492  0050FE  22DA               	addwfc	fsr2h,f,c
 36493  005100  0E4F               	movlw	79
 36494  005102  18DE               	xorwf	postinc2,w,c
 36495  005104  B4D8               	btfsc	status,2,c
 36496  005106  D002               	goto	l2813
 36497  005108                     u10840:
 36498                           
 36499                           ;api.c: 612: {;api.c: 613: return 18;
 36500  005108  0E12               	movlw	18
 36501  00510A  0012               	return	
 36502  00510C                     l2813:
 36503                           
 36504                           ;api.c: 614: };api.c: 617: file_size = data[12];
 36505  00510C  EE20 F00C          	lfsr	2,12
 36506  005110  5059               	movf	__parse_file_create@data,w,c
 36507  005112  26D9               	addwf	fsr2l,f,c
 36508  005114  505A               	movf	__parse_file_create@data+1,w,c
 36509  005116  22DA               	addwfc	fsr2h,f,c
 36510  005118  50DF               	movf	indf2,w,c
 36511  00511A  6E5B               	movwf	??__parse_file_create& (0+255),c
 36512  00511C  505B               	movf	??__parse_file_create,w,c
 36513  00511E  6E5C               	movwf	__parse_file_create@file_size,c
 36514  005120  6A5D               	clrf	__parse_file_create@file_size+1,c
 36515  005122  6A5E               	clrf	__parse_file_create@file_size+2,c
 36516  005124  6A5F               	clrf	__parse_file_create@file_size+3,c
 36517                           
 36518                           ;api.c: 618: file_size <<= 8;
 36519  005126  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36520  00512A  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36521  00512E  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36522  005132  6A5C               	clrf	__parse_file_create@file_size,c
 36523                           
 36524                           ;api.c: 619: file_size |= data[13];
 36525  005134  EE20 F00D          	lfsr	2,13
 36526  005138  5059               	movf	__parse_file_create@data,w,c
 36527  00513A  26D9               	addwf	fsr2l,f,c
 36528  00513C  505A               	movf	__parse_file_create@data+1,w,c
 36529  00513E  22DA               	addwfc	fsr2h,f,c
 36530  005140  50DF               	movf	indf2,w,c
 36531  005142  6E5B               	movwf	??__parse_file_create& (0+255),c
 36532  005144  505B               	movf	??__parse_file_create,w,c
 36533  005146  125C               	iorwf	__parse_file_create@file_size,f,c
 36534                           
 36535                           ;api.c: 620: file_size <<= 8;
 36536  005148  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36537  00514C  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36538  005150  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36539  005154  6A5C               	clrf	__parse_file_create@file_size,c
 36540                           
 36541                           ;api.c: 621: file_size |= data[14];
 36542  005156  EE20 F00E          	lfsr	2,14
 36543  00515A  5059               	movf	__parse_file_create@data,w,c
 36544  00515C  26D9               	addwf	fsr2l,f,c
 36545  00515E  505A               	movf	__parse_file_create@data+1,w,c
 36546  005160  22DA               	addwfc	fsr2h,f,c
 36547  005162  50DF               	movf	indf2,w,c
 36548  005164  6E5B               	movwf	??__parse_file_create& (0+255),c
 36549  005166  505B               	movf	??__parse_file_create,w,c
 36550  005168  125C               	iorwf	__parse_file_create@file_size,f,c
 36551                           
 36552                           ;api.c: 622: file_size <<= 8;
 36553  00516A  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36554  00516E  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36555  005172  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36556  005176  6A5C               	clrf	__parse_file_create@file_size,c
 36557                           
 36558                           ;api.c: 623: file_size |= data[15];
 36559  005178  EE20 F00F          	lfsr	2,15
 36560  00517C  5059               	movf	__parse_file_create@data,w,c
 36561  00517E  26D9               	addwf	fsr2l,f,c
 36562  005180  505A               	movf	__parse_file_create@data+1,w,c
 36563  005182  22DA               	addwfc	fsr2h,f,c
 36564  005184  50DF               	movf	indf2,w,c
 36565  005186  6E5B               	movwf	??__parse_file_create& (0+255),c
 36566  005188  505B               	movf	??__parse_file_create,w,c
 36567  00518A  125C               	iorwf	__parse_file_create@file_size,f,c
 36568                           
 36569                           ;api.c: 626: fat_create_file(&data[1], &data[9], file_size);
 36570  00518C  0E01               	movlw	1
 36571  00518E  2459               	addwf	__parse_file_create@data,w,c
 36572  005190  6E4D               	movwf	fat_create_file@name,c
 36573  005192  0E00               	movlw	0
 36574  005194  205A               	addwfc	__parse_file_create@data+1,w,c
 36575  005196  6E4E               	movwf	fat_create_file@name+1,c
 36576  005198  0E09               	movlw	9
 36577  00519A  2459               	addwf	__parse_file_create@data,w,c
 36578  00519C  6E4F               	movwf	fat_create_file@extension,c
 36579  00519E  0E00               	movlw	0
 36580  0051A0  205A               	addwfc	__parse_file_create@data+1,w,c
 36581  0051A2  6E50               	movwf	fat_create_file@extension+1,c
 36582  0051A4  C05C  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 36583  0051A8  C05D  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 36584  0051AC  C05E  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 36585  0051B0  C05F  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 36586  0051B4  ECF8  F01F         	call	_fat_create_file	;wreg free
 36587                           
 36588                           ;api.c: 628: return 18;
 36589  0051B8  0E12               	movlw	18
 36590  0051BA  0012               	return	
 36591  0051BC                     __end_of__parse_file_create:
 36592                           	opt stack 0
 36593                           tosu	equ	0xFFF
 36594                           tosh	equ	0xFFE
 36595                           tosl	equ	0xFFD
 36596                           pclath	equ	0xFFA
 36597                           tblptru	equ	0xFF8
 36598                           tblptrh	equ	0xFF7
 36599                           tblptrl	equ	0xFF6
 36600                           tablat	equ	0xFF5
 36601                           prodh	equ	0xFF4
 36602                           prodl	equ	0xFF3
 36603                           intcon	equ	0xFF2
 36604                           intcon2	equ	0xFF1
 36605                           intcon3	equ	0xFF0
 36606                           indf0	equ	0xFEF
 36607                           postinc0	equ	0xFEE
 36608                           fsr0h	equ	0xFEA
 36609                           fsr0l	equ	0xFE9
 36610                           wreg	equ	0xFE8
 36611                           indf1	equ	0xFE7
 36612                           postdec1	equ	0xFE5
 36613                           plusw1	equ	0xFE3
 36614                           fsr1h	equ	0xFE2
 36615                           fsr1l	equ	0xFE1
 36616                           indf2	equ	0xFDF
 36617                           postinc2	equ	0xFDE
 36618                           postdec2	equ	0xFDD
 36619                           plusw2	equ	0xFDB
 36620                           fsr2h	equ	0xFDA
 36621                           fsr2l	equ	0xFD9
 36622                           status	equ	0xFD8
 36623                           
 36624 ;; *************** function _fat_create_file *****************
 36625 ;; Defined at:
 36626 ;;		line 585 in file "fat16.c"
 36627 ;; Parameters:    Size  Location     Type
 36628 ;;  name            2   76[COMRAM] PTR unsigned char 
 36629 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36630 ;;  extension       2   78[COMRAM] PTR unsigned char 
 36631 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36632 ;;  size            4   80[COMRAM] unsigned long 
 36633 ;; Auto vars:     Size  Location     Type
 36634 ;;  root_entry     32    5[BANK0 ] struct .
 36635 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 36636 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 36637 ;;  file_number     1    4[BANK0 ] unsigned char 
 36638 ;; Return value:  Size  Location     Type
 36639 ;;                  1    wreg      unsigned char 
 36640 ;; Registers used:
 36641 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36642 ;; Tracked objects:
 36643 ;;		On entry : 0/0
 36644 ;;		On exit  : 0/0
 36645 ;;		Unchanged: 0/0
 36646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36647 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36648 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36649 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36650 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36651 ;;Total ram usage:       49 bytes
 36652 ;; Hardware stack levels used:    1
 36653 ;; Hardware stack levels required when called:    7
 36654 ;; This function calls:
 36655 ;;		__get_available_root_entry
 36656 ;;		__get_date
 36657 ;;		__get_time
 36658 ;;		__make_cluster_chain
 36659 ;;		__write_root
 36660 ;;		_fat_find_file
 36661 ;;		_memcpy
 36662 ;; This function is called by:
 36663 ;;		__parse_file_create
 36664 ;; This function uses a non-reentrant model
 36665 ;;
 36666                           
 36667                           	psect	text185
 36668  003FF0                     __ptext185:
 36669                           	opt stack 0
 36670  003FF0                     _fat_create_file:
 36671                           	opt stack 20
 36672                           
 36673                           ;fat16.c: 587: rootEntry_t root_entry;;fat16.c: 588: uint8_t file_number;;fat16.c: 589: 
      +                          uint16_t number_of_clusters;;fat16.c: 590: uint16_t first_cluster;;fat16.c: 594: if(fat_
      +                          find_file(name, extension) != 0xFF)
 36674                           
 36675                           ;incstack = 0
 36676  003FF0  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 36677  003FF4  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 36678  003FF8  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 36679  003FFC  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 36680  004000  EC65  F02C         	call	_fat_find_file	;wreg free
 36681  004004  0AFF               	xorlw	255
 36682  004006  A4D8               	btfss	status,2,c
 36683  004008  0012               	return	
 36684                           
 36685                           ;fat16.c: 599: };fat16.c: 603: file_number = _get_available_root_entry();
 36686                           
 36687                           ;fat16.c: 595: {;fat16.c: 598: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 36688  00400A  ECE7  F045         	call	__get_available_root_entry	;wreg free
 36689  00400E  0100               	movlb	0	; () banked
 36690  004010  6F64               	movwf	fat_create_file@file_number& (0+255),b
 36691                           
 36692                           ; BSR set to: 0
 36693                           ;fat16.c: 604: if(file_number == 0xFF)
 36694  004012  2964               	incf	fat_create_file@file_number& (0+255),w,b
 36695  004014  B4D8               	btfsc	status,2,c
 36696  004016  0012               	return	
 36697                           
 36698                           ; BSR set to: 0
 36699                           ;fat16.c: 609: };fat16.c: 612: number_of_clusters = (size + 512 - 1) >> 9;
 36700                           
 36701                           ; BSR set to: 0
 36702                           
 36703                           ; BSR set to: 0
 36704                           ;fat16.c: 605: {;fat16.c: 608: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 36705  004018  0EFF               	movlw	255
 36706  00401A  2451               	addwf	fat_create_file@size,w,c
 36707  00401C  6E55               	movwf	??_fat_create_file& (0+255),c
 36708  00401E  0E01               	movlw	1
 36709  004020  2052               	addwfc	fat_create_file@size+1,w,c
 36710  004022  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 36711  004024  0E00               	movlw	0
 36712  004026  2053               	addwfc	fat_create_file@size+2,w,c
 36713  004028  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 36714  00402A  0E00               	movlw	0
 36715  00402C  2054               	addwfc	fat_create_file@size+3,w,c
 36716  00402E  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 36717  004030  0E0A               	movlw	10
 36718  004032  D005               	goto	u10040
 36719  004034                     u10045:
 36720  004034  90D8               	bcf	status,0,c
 36721  004036  3258               	rrcf	??_fat_create_file+3,f,c
 36722  004038  3257               	rrcf	??_fat_create_file+2,f,c
 36723  00403A  3256               	rrcf	??_fat_create_file+1,f,c
 36724  00403C  3255               	rrcf	??_fat_create_file,f,c
 36725  00403E                     u10040:
 36726  00403E  2EE8               	decfsz	wreg,f,c
 36727  004040  D7F9               	goto	u10045
 36728  004042  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 36729  004046  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 36730                           
 36731                           ; BSR set to: 0
 36732                           ;fat16.c: 615: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 36733  00404A  0E00               	movlw	0
 36734  00404C  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 36735  00404E  0E00               	movlw	0
 36736  004050  6E36               	movwf	__make_cluster_chain@first_cluster,c
 36737  004052  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 36738  004056  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 36739  00405A  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36740  00405E  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 36741  004062  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 36742                           
 36743                           ;fat16.c: 618: if(first_cluster == 0xFFFF)
 36744  004066  0100               	movlb	0	; () banked
 36745  004068  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 36746  00406A  E103               	bnz	l13217
 36747  00406C  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 36748  00406E  B4D8               	btfsc	status,2,c
 36749  004070  0012               	return	
 36750  004072                     l13217:
 36751                           
 36752                           ; BSR set to: 0
 36753                           ;fat16.c: 623: };fat16.c: 626: memcpy(root_entry.fileName, name, 8);
 36754  004072  0E65               	movlw	low fat_create_file@root_entry
 36755  004074  6E01               	movwf	memcpy@d1,c
 36756  004076  0E00               	movlw	high fat_create_file@root_entry
 36757  004078  6E02               	movwf	memcpy@d1+1,c
 36758  00407A  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 36759  00407E  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 36760  004082  5003               	movf	memcpy@s1,w,c
 36761  004084  1004               	iorwf	memcpy@s1+1,w,c
 36762  004086  A4D8               	btfss	status,2,c
 36763  004088  0E20               	movlw	32
 36764  00408A  6E05               	movwf	memcpy@s1+2,c
 36765  00408C  0E00               	movlw	0
 36766  00408E  6E07               	movwf	memcpy@n+1,c
 36767  004090  0E08               	movlw	8
 36768  004092  6E06               	movwf	memcpy@n,c
 36769  004094  ECE1  F03C         	call	_memcpy	;wreg free
 36770                           
 36771                           ;fat16.c: 627: memcpy(root_entry.fileExtension, extension, 3);
 36772  004098  0E6D               	movlw	low (fat_create_file@root_entry+8)
 36773  00409A  6E01               	movwf	memcpy@d1,c
 36774  00409C  0E00               	movlw	high (fat_create_file@root_entry+8)
 36775  00409E  6E02               	movwf	memcpy@d1+1,c
 36776  0040A0  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 36777  0040A4  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 36778  0040A8  5003               	movf	memcpy@s1,w,c
 36779  0040AA  1004               	iorwf	memcpy@s1+1,w,c
 36780  0040AC  A4D8               	btfss	status,2,c
 36781  0040AE  0E20               	movlw	32
 36782  0040B0  6E05               	movwf	memcpy@s1+2,c
 36783  0040B2  0E00               	movlw	0
 36784  0040B4  6E07               	movwf	memcpy@n+1,c
 36785  0040B6  0E03               	movlw	3
 36786  0040B8  6E06               	movwf	memcpy@n,c
 36787  0040BA  ECE1  F03C         	call	_memcpy	;wreg free
 36788                           
 36789                           ;fat16.c: 628: root_entry.attributes = 0x00;
 36790  0040BE  0E00               	movlw	0
 36791  0040C0  0100               	movlb	0	; () banked
 36792  0040C2  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 36793                           
 36794                           ; BSR set to: 0
 36795                           ;fat16.c: 629: root_entry.reserved1 = 0x00;
 36796  0040C4  0E00               	movlw	0
 36797  0040C6  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 36798                           
 36799                           ; BSR set to: 0
 36800                           ;fat16.c: 630: root_entry.secondFractions = 0x00;
 36801  0040C8  0E00               	movlw	0
 36802  0040CA  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 36803                           
 36804                           ; BSR set to: 0
 36805                           ;fat16.c: 631: root_entry.createdTime = _get_time();
 36806  0040CC  ECAB  F047         	call	__get_time	;wreg free
 36807  0040D0  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 36808  0040D4  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 36809                           
 36810                           ;fat16.c: 632: root_entry.createdDate = _get_date();
 36811  0040D8  ECB0  F047         	call	__get_date	;wreg free
 36812  0040DC  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 36813  0040E0  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 36814                           
 36815                           ;fat16.c: 633: root_entry.lastAccessDate = root_entry.createdDate;
 36816  0040E4  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 36817  0040E8  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 36818                           
 36819                           ;fat16.c: 634: root_entry.reserved2 = 0x00;
 36820  0040EC  0E00               	movlw	0
 36821  0040EE  0100               	movlb	0	; () banked
 36822  0040F0  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 36823  0040F2  0E00               	movlw	0
 36824  0040F4  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 36825                           
 36826                           ; BSR set to: 0
 36827                           ;fat16.c: 635: root_entry.modifiedTime = root_entry.createdTime;
 36828  0040F6  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 36829  0040FA  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 36830                           
 36831                           ; BSR set to: 0
 36832                           ;fat16.c: 636: root_entry.modifiedDate = root_entry.createdDate;
 36833  0040FE  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 36834  004102  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 36835                           
 36836                           ; BSR set to: 0
 36837                           ;fat16.c: 637: root_entry.firstCluster = first_cluster;
 36838  004106  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 36839  00410A  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 36840                           
 36841                           ; BSR set to: 0
 36842                           ;fat16.c: 638: root_entry.fileSize = size;
 36843  00410E  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 36844  004112  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 36845  004116  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 36846  00411A  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 36847                           
 36848                           ; BSR set to: 0
 36849                           ;fat16.c: 641: _write_root(file_number, &root_entry);
 36850  00411E  0E65               	movlw	low fat_create_file@root_entry
 36851  004120  6E29               	movwf	__write_root@data,c
 36852  004122  0E00               	movlw	high fat_create_file@root_entry
 36853  004124  6E2A               	movwf	__write_root@data+1,c
 36854  004126  5164               	movf	fat_create_file@file_number& (0+255),w,b
 36855  004128  EC34  F042         	call	__write_root
 36856  00412C  0012               	return	
 36857  00412E                     __end_of_fat_create_file:
 36858                           	opt stack 0
 36859                           tosu	equ	0xFFF
 36860                           tosh	equ	0xFFE
 36861                           tosl	equ	0xFFD
 36862                           pclath	equ	0xFFA
 36863                           tblptru	equ	0xFF8
 36864                           tblptrh	equ	0xFF7
 36865                           tblptrl	equ	0xFF6
 36866                           tablat	equ	0xFF5
 36867                           prodh	equ	0xFF4
 36868                           prodl	equ	0xFF3
 36869                           intcon	equ	0xFF2
 36870                           intcon2	equ	0xFF1
 36871                           intcon3	equ	0xFF0
 36872                           indf0	equ	0xFEF
 36873                           postinc0	equ	0xFEE
 36874                           fsr0h	equ	0xFEA
 36875                           fsr0l	equ	0xFE9
 36876                           wreg	equ	0xFE8
 36877                           indf1	equ	0xFE7
 36878                           postdec1	equ	0xFE5
 36879                           plusw1	equ	0xFE3
 36880                           fsr1h	equ	0xFE2
 36881                           fsr1l	equ	0xFE1
 36882                           indf2	equ	0xFDF
 36883                           postinc2	equ	0xFDE
 36884                           postdec2	equ	0xFDD
 36885                           plusw2	equ	0xFDB
 36886                           fsr2h	equ	0xFDA
 36887                           fsr2l	equ	0xFD9
 36888                           status	equ	0xFD8
 36889                           
 36890 ;; *************** function _memcpy *****************
 36891 ;; Defined at:
 36892 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 36893 ;; Parameters:    Size  Location     Type
 36894 ;;  d1              2    0[COMRAM] PTR void 
 36895 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36896 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36897 ;;  s1              3    2[COMRAM] PTR const void 
 36898 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36899 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36900 ;;		 -> SetupPkt(8), 
 36901 ;;  n               2    5[COMRAM] unsigned int 
 36902 ;; Auto vars:     Size  Location     Type
 36903 ;;  s               3    7[COMRAM] PTR const unsigned char 
 36904 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 36905 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 36906 ;;		 -> SetupPkt(8), 
 36907 ;;  d               2   10[COMRAM] PTR unsigned char 
 36908 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 36909 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 36910 ;;  tmp             1   12[COMRAM] unsigned char 
 36911 ;; Return value:  Size  Location     Type
 36912 ;;                  2    0[COMRAM] PTR void 
 36913 ;; Registers used:
 36914 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 36915 ;; Tracked objects:
 36916 ;;		On entry : 0/0
 36917 ;;		On exit  : 0/0
 36918 ;;		Unchanged: 0/0
 36919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36920 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36921 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36923 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36924 ;;Total ram usage:       13 bytes
 36925 ;; Hardware stack levels used:    1
 36926 ;; This function calls:
 36927 ;;		Nothing
 36928 ;; This function is called by:
 36929 ;;		_USBCtrlEPService
 36930 ;;		_MSDProcessCommandMediaPresent
 36931 ;;		__flash_set_page_size
 36932 ;;		_fat_create_file
 36933 ;;		_internalFlash_read
 36934 ;;		_api_prepare
 36935 ;; This function uses a non-reentrant model
 36936 ;;
 36937                           
 36938                           	psect	text186
 36939  0079C2                     __ptext186:
 36940                           	opt stack 0
 36941  0079C2                     _memcpy:
 36942                           	opt stack 27
 36943                           
 36944                           ;incstack = 0
 36945  0079C2  C003  F008         	movff	memcpy@s1,memcpy@s
 36946  0079C6  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 36947  0079CA  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 36948  0079CE  C001  F00B         	movff	memcpy@d1,memcpy@d
 36949  0079D2  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 36950  0079D6  D01F               	goto	l3687
 36951  0079D8                     l11543:
 36952  0079D8  C008  FFF6         	movff	memcpy@s,tblptrl
 36953  0079DC  C009  FFF7         	movff	memcpy@s+1,tblptrh
 36954  0079E0  C00A  FFF8         	movff	memcpy@s+2,tblptru
 36955  0079E4  BAF8               	btfsc	tblptru,5,c
 36956  0079E6  D003               	bra	u8357
 36957  0079E8  0008               	tblrd		*
 36958  0079EA  50F5               	movf	tablat,w,c
 36959  0079EC  D005               	bra	u8350
 36960  0079EE                     u8357:
 36961  0079EE  CFF6 FFE9          	movff	tblptrl,fsr0l
 36962  0079F2  CFF7 FFEA          	movff	tblptrh,fsr0h
 36963  0079F6  50EF               	movf	indf0,w,c
 36964  0079F8                     u8350:
 36965  0079F8  6E0D               	movwf	memcpy@tmp,c
 36966  0079FA  0E01               	movlw	1
 36967  0079FC  2608               	addwf	memcpy@s,f,c
 36968  0079FE  0E00               	movlw	0
 36969  007A00  2209               	addwfc	memcpy@s+1,f,c
 36970  007A02  0E00               	movlw	0
 36971  007A04  220A               	addwfc	memcpy@s+2,f,c
 36972  007A06  C00B  FFD9         	movff	memcpy@d,fsr2l
 36973  007A0A  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 36974  007A0E  C00D  FFDF         	movff	memcpy@tmp,indf2
 36975  007A12  4A0B               	infsnz	memcpy@d,f,c
 36976  007A14  2A0C               	incf	memcpy@d+1,f,c
 36977  007A16                     l3687:
 36978  007A16  0606               	decf	memcpy@n,f,c
 36979  007A18  A0D8               	btfss	status,0,c
 36980  007A1A  0607               	decf	memcpy@n+1,f,c
 36981  007A1C  2806               	incf	memcpy@n,w,c
 36982  007A1E  E1DC               	bnz	l11543
 36983  007A20  2807               	incf	memcpy@n+1,w,c
 36984  007A22  B4D8               	btfsc	status,2,c
 36985  007A24  0012               	return	
 36986  007A26  D7D8               	goto	l3688
 36987  007A28                     __end_of_memcpy:
 36988                           	opt stack 0
 36989                           tosu	equ	0xFFF
 36990                           tosh	equ	0xFFE
 36991                           tosl	equ	0xFFD
 36992                           pclath	equ	0xFFA
 36993                           tblptru	equ	0xFF8
 36994                           tblptrh	equ	0xFF7
 36995                           tblptrl	equ	0xFF6
 36996                           tablat	equ	0xFF5
 36997                           prodh	equ	0xFF4
 36998                           prodl	equ	0xFF3
 36999                           intcon	equ	0xFF2
 37000                           intcon2	equ	0xFF1
 37001                           intcon3	equ	0xFF0
 37002                           indf0	equ	0xFEF
 37003                           postinc0	equ	0xFEE
 37004                           fsr0h	equ	0xFEA
 37005                           fsr0l	equ	0xFE9
 37006                           wreg	equ	0xFE8
 37007                           indf1	equ	0xFE7
 37008                           postdec1	equ	0xFE5
 37009                           plusw1	equ	0xFE3
 37010                           fsr1h	equ	0xFE2
 37011                           fsr1l	equ	0xFE1
 37012                           indf2	equ	0xFDF
 37013                           postinc2	equ	0xFDE
 37014                           postdec2	equ	0xFDD
 37015                           plusw2	equ	0xFDB
 37016                           fsr2h	equ	0xFDA
 37017                           fsr2l	equ	0xFD9
 37018                           status	equ	0xFD8
 37019                           
 37020 ;; *************** function _fat_find_file *****************
 37021 ;; Defined at:
 37022 ;;		line 516 in file "fat16.c"
 37023 ;; Parameters:    Size  Location     Type
 37024 ;;  name            2   43[COMRAM] PTR unsigned char 
 37025 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 37026 ;;  extension       2   45[COMRAM] PTR unsigned char 
 37027 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 37028 ;; Auto vars:     Size  Location     Type
 37029 ;;  offset          2   52[COMRAM] unsigned int 
 37030 ;;  sector          2   50[COMRAM] unsigned int 
 37031 ;;  file_number     1   49[COMRAM] unsigned char 
 37032 ;; Return value:  Size  Location     Type
 37033 ;;                  1    wreg      unsigned char 
 37034 ;; Registers used:
 37035 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37036 ;; Tracked objects:
 37037 ;;		On entry : 0/0
 37038 ;;		On exit  : 0/0
 37039 ;;		Unchanged: 0/0
 37040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37041 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37042 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37043 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37044 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37045 ;;Total ram usage:       11 bytes
 37046 ;; Hardware stack levels used:    1
 37047 ;; Hardware stack levels required when called:    5
 37048 ;; This function calls:
 37049 ;;		_flash_sector_read
 37050 ;;		_strncmp
 37051 ;; This function is called by:
 37052 ;;		_fat_create_file
 37053 ;;		__bootloader_find_file
 37054 ;;		__fill_buffer_find_file
 37055 ;; This function uses a non-reentrant model
 37056 ;;
 37057                           
 37058                           	psect	text187
 37059  0058CA                     __ptext187:
 37060                           	opt stack 0
 37061  0058CA                     _fat_find_file:
 37062                           	opt stack 23
 37063                           
 37064                           ;fat16.c: 518: uint8_t file_number = 0;
 37065                           
 37066                           ;incstack = 0
 37067  0058CA  0E00               	movlw	0
 37068  0058CC  6E32               	movwf	fat_find_file@file_number,c
 37069                           
 37070                           ;fat16.c: 519: uint16_t sector;;fat16.c: 520: uint16_t offset;;fat16.c: 522: for(sector 
      +                          = 34; sector <= 37; ++sector)
 37071  0058CE  0E00               	movlw	0
 37072  0058D0  6E34               	movwf	fat_find_file@sector+1,c
 37073  0058D2  0E22               	movlw	34
 37074  0058D4  6E33               	movwf	fat_find_file@sector,c
 37075  0058D6  5034               	movf	fat_find_file@sector+1,w,c
 37076  0058D8  E166               	bnz	l2042
 37077  0058DA  0E26               	movlw	38
 37078  0058DC  5C33               	subwf	fat_find_file@sector,w,c
 37079  0058DE  B0D8               	btfsc	status,0,c
 37080  0058E0  D062               	goto	u9200
 37081                           
 37082                           ;fat16.c: 523: {;fat16.c: 525: flash_sector_read(sector, buffer);
 37083  0058E2  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 37084  0058E6  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 37085  0058EA  0EC0               	movlw	low _buffer
 37086  0058EC  6E2A               	movwf	flash_sector_read@data,c
 37087  0058EE  0E03               	movlw	high _buffer
 37088  0058F0  6E2B               	movwf	flash_sector_read@data+1,c
 37089  0058F2  EC3F  F044         	call	_flash_sector_read	;wreg free
 37090                           
 37091                           ;fat16.c: 527: for(offset = 0; offset<512; offset += 32)
 37092  0058F6  0E00               	movlw	0
 37093  0058F8  6E36               	movwf	fat_find_file@offset+1,c
 37094  0058FA  0E00               	movlw	0
 37095  0058FC  6E35               	movwf	fat_find_file@offset,c
 37096  0058FE                     l12177:
 37097  0058FE  0E02               	movlw	2
 37098  005900  5C36               	subwf	fat_find_file@offset+1,w,c
 37099  005902  B0D8               	btfsc	status,0,c
 37100  005904  D04B               	goto	u9190
 37101                           
 37102                           ;fat16.c: 528: {;fat16.c: 529: if(buffer[offset]==0x00)
 37103  005906  0EC0               	movlw	low _buffer
 37104  005908  2435               	addwf	fat_find_file@offset,w,c
 37105  00590A  6ED9               	movwf	fsr2l,c
 37106  00590C  0E03               	movlw	high _buffer
 37107  00590E  2036               	addwfc	fat_find_file@offset+1,w,c
 37108  005910  6EDA               	movwf	fsr2h,c
 37109  005912  50DF               	movf	indf2,w,c
 37110  005914  A4D8               	btfss	status,2,c
 37111  005916  D002               	goto	l2045
 37112                           
 37113                           ;fat16.c: 530: {;fat16.c: 533: return 0xFF;
 37114  005918  0EFF               	movlw	255
 37115  00591A  0012               	return	
 37116  00591C                     l2045:
 37117                           
 37118                           ;fat16.c: 535: else if(buffer[offset]==0xE5)
 37119  00591C  0EC0               	movlw	low _buffer
 37120  00591E  2435               	addwf	fat_find_file@offset,w,c
 37121  005920  6ED9               	movwf	fsr2l,c
 37122  005922  0E03               	movlw	high _buffer
 37123  005924  2036               	addwfc	fat_find_file@offset+1,w,c
 37124  005926  6EDA               	movwf	fsr2h,c
 37125  005928  0EE5               	movlw	229
 37126  00592A  18DE               	xorwf	postinc2,w,c
 37127  00592C  B4D8               	btfsc	status,2,c
 37128  00592E  D030               	goto	l2051
 37129                           
 37130                           ;fat16.c: 541: else;fat16.c: 542: {;fat16.c: 544: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 37131                           
 37132                           ;fat16.c: 536: {;fat16.c: 540: }
 37133  005930  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 37134  005934  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 37135  005938  0EC0               	movlw	low _buffer
 37136  00593A  2435               	addwf	fat_find_file@offset,w,c
 37137  00593C  6E03               	movwf	strncmp@s2,c
 37138  00593E  0E03               	movlw	high _buffer
 37139  005940  2036               	addwfc	fat_find_file@offset+1,w,c
 37140  005942  6E04               	movwf	strncmp@s2+1,c
 37141  005944  0E00               	movlw	0
 37142  005946  6E06               	movwf	strncmp@len+1,c
 37143  005948  0E08               	movlw	8
 37144  00594A  6E05               	movwf	strncmp@len,c
 37145  00594C  ECD4  F030         	call	_strncmp	;wreg free
 37146  005950  5001               	movf	?_strncmp,w,c
 37147  005952  1002               	iorwf	?_strncmp+1,w,c
 37148  005954  A4D8               	btfss	status,2,c
 37149  005956  D01C               	goto	l2051
 37150                           
 37151                           ;fat16.c: 545: {;fat16.c: 547: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 37152  005958  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 37153  00595C  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 37154  005960  0E08               	movlw	8
 37155  005962  2435               	addwf	fat_find_file@offset,w,c
 37156  005964  6E30               	movwf	??_fat_find_file& (0+255),c
 37157  005966  0E00               	movlw	0
 37158  005968  2036               	addwfc	fat_find_file@offset+1,w,c
 37159  00596A  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 37160  00596C  0EC0               	movlw	low _buffer
 37161  00596E  2430               	addwf	??_fat_find_file,w,c
 37162  005970  6E03               	movwf	strncmp@s2,c
 37163  005972  0E03               	movlw	high _buffer
 37164  005974  2031               	addwfc	??_fat_find_file+1,w,c
 37165  005976  6E04               	movwf	strncmp@s2+1,c
 37166  005978  0E00               	movlw	0
 37167  00597A  6E06               	movwf	strncmp@len+1,c
 37168  00597C  0E03               	movlw	3
 37169  00597E  6E05               	movwf	strncmp@len,c
 37170  005980  ECD4  F030         	call	_strncmp	;wreg free
 37171  005984  5001               	movf	?_strncmp,w,c
 37172  005986  1002               	iorwf	?_strncmp+1,w,c
 37173  005988  A4D8               	btfss	status,2,c
 37174  00598A  D002               	goto	l2051
 37175                           
 37176                           ;fat16.c: 548: {;fat16.c: 551: return file_number;
 37177  00598C  5032               	movf	fat_find_file@file_number,w,c
 37178  00598E  0012               	return	
 37179  005990                     l2051:
 37180                           
 37181                           ;fat16.c: 552: };fat16.c: 553: };fat16.c: 554: };fat16.c: 555: ++file_number;
 37182  005990  2A32               	incf	fat_find_file@file_number,f,c
 37183  005992  0E20               	movlw	32
 37184  005994  2635               	addwf	fat_find_file@offset,f,c
 37185  005996  0E00               	movlw	0
 37186  005998  2236               	addwfc	fat_find_file@offset+1,f,c
 37187  00599A  D7B1               	goto	l12177
 37188  00599C                     u9190:
 37189  00599C  4A33               	infsnz	fat_find_file@sector,f,c
 37190  00599E  2A34               	incf	fat_find_file@sector+1,f,c
 37191  0059A0  5034               	movf	fat_find_file@sector+1,w,c
 37192  0059A2  E101               	bnz	l12211
 37193  0059A4  D79A               	goto	L44
 37194  0059A6                     u9200:
 37195  0059A6                     l2042:
 37196  0059A6                     l12211:
 37197                           
 37198                           ;fat16.c: 556: };fat16.c: 557: };fat16.c: 558: return 0xFF;
 37199  0059A6  0EFF               	movlw	255
 37200  0059A8  0012               	return	
 37201  0059AA                     __end_of_fat_find_file:
 37202                           	opt stack 0
 37203                           tosu	equ	0xFFF
 37204                           tosh	equ	0xFFE
 37205                           tosl	equ	0xFFD
 37206                           pclath	equ	0xFFA
 37207                           tblptru	equ	0xFF8
 37208                           tblptrh	equ	0xFF7
 37209                           tblptrl	equ	0xFF6
 37210                           tablat	equ	0xFF5
 37211                           prodh	equ	0xFF4
 37212                           prodl	equ	0xFF3
 37213                           intcon	equ	0xFF2
 37214                           intcon2	equ	0xFF1
 37215                           intcon3	equ	0xFF0
 37216                           indf0	equ	0xFEF
 37217                           postinc0	equ	0xFEE
 37218                           fsr0h	equ	0xFEA
 37219                           fsr0l	equ	0xFE9
 37220                           wreg	equ	0xFE8
 37221                           indf1	equ	0xFE7
 37222                           postdec1	equ	0xFE5
 37223                           plusw1	equ	0xFE3
 37224                           fsr1h	equ	0xFE2
 37225                           fsr1l	equ	0xFE1
 37226                           indf2	equ	0xFDF
 37227                           postinc2	equ	0xFDE
 37228                           postdec2	equ	0xFDD
 37229                           plusw2	equ	0xFDB
 37230                           fsr2h	equ	0xFDA
 37231                           fsr2l	equ	0xFD9
 37232                           status	equ	0xFD8
 37233                           
 37234 ;; *************** function _strncmp *****************
 37235 ;; Defined at:
 37236 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 37237 ;; Parameters:    Size  Location     Type
 37238 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 37239 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 37240 ;;		 -> RAM(3759), 
 37241 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 37242 ;;		 -> buffer(512), 
 37243 ;;  len             2    4[COMRAM] unsigned int 
 37244 ;; Auto vars:     Size  Location     Type
 37245 ;;		None
 37246 ;; Return value:  Size  Location     Type
 37247 ;;                  2    0[COMRAM] int 
 37248 ;; Registers used:
 37249 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37250 ;; Tracked objects:
 37251 ;;		On entry : 0/0
 37252 ;;		On exit  : 0/0
 37253 ;;		Unchanged: 0/0
 37254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37255 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37256 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37257 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37258 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37259 ;;Total ram usage:        9 bytes
 37260 ;; Hardware stack levels used:    1
 37261 ;; This function calls:
 37262 ;;		Nothing
 37263 ;; This function is called by:
 37264 ;;		_fat_find_file
 37265 ;; This function uses a non-reentrant model
 37266 ;;
 37267                           
 37268                           	psect	text188
 37269  0061A8                     __ptext188:
 37270                           	opt stack 0
 37271  0061A8                     _strncmp:
 37272                           	opt stack 27
 37273                           
 37274                           ;incstack = 0
 37275  0061A8  D053               	goto	l3705
 37276  0061AA                     l11425:
 37277  0061AA  C001  FFF6         	movff	strncmp@s1,tblptrl
 37278  0061AE  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37279  0061B2  6AF8               	clrf	tblptru,c
 37280  0061B4  0E0E               	movlw	(high __ramtop+-1)
 37281  0061B6  64F7               	cpfsgt	tblptrh,c
 37282  0061B8  D003               	bra	u8187
 37283  0061BA  0008               	tblrd		*
 37284  0061BC  50F5               	movf	tablat,w,c
 37285  0061BE  D005               	bra	u8180
 37286  0061C0                     u8187:
 37287  0061C0  CFF6 FFE9          	movff	tblptrl,fsr0l
 37288  0061C4  CFF7 FFEA          	movff	tblptrh,fsr0h
 37289  0061C8  50EF               	movf	indf0,w,c
 37290  0061CA                     u8180:
 37291  0061CA  0900               	iorlw	0
 37292  0061CC  B4D8               	btfsc	status,2,c
 37293  0061CE  D019               	goto	u8200
 37294  0061D0  C003  FFD9         	movff	strncmp@s2,fsr2l
 37295  0061D4  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37296  0061D8  50DF               	movf	indf2,w,c
 37297  0061DA  6E07               	movwf	??_strncmp& (0+255),c
 37298  0061DC  C001  FFF6         	movff	strncmp@s1,tblptrl
 37299  0061E0  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37300  0061E4  6AF8               	clrf	tblptru,c
 37301  0061E6  0E0E               	movlw	(high __ramtop+-1)
 37302  0061E8  64F7               	cpfsgt	tblptrh,c
 37303  0061EA  D003               	bra	u8207
 37304  0061EC  0008               	tblrd		*
 37305  0061EE  50F5               	movf	tablat,w,c
 37306  0061F0  D005               	bra	u8205
 37307  0061F2                     u8207:
 37308  0061F2  CFF6 FFE9          	movff	tblptrl,fsr0l
 37309  0061F6  CFF7 FFEA          	movff	tblptrh,fsr0h
 37310  0061FA  50EF               	movf	indf0,w,c
 37311  0061FC                     u8205:
 37312  0061FC  1807               	xorwf	??_strncmp,w,c
 37313  0061FE  B4D8               	btfsc	status,2,c
 37314  006200  D023               	goto	l3707
 37315  006202                     u8200:
 37316  006202  C003  FFD9         	movff	strncmp@s2,fsr2l
 37317  006206  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37318  00620A  50DF               	movf	indf2,w,c
 37319  00620C  6E07               	movwf	??_strncmp& (0+255),c
 37320  00620E  6A08               	clrf	(??_strncmp+1)& (0+255),c
 37321  006210  1E07               	comf	??_strncmp,f,c
 37322  006212  1E08               	comf	??_strncmp+1,f,c
 37323  006214  4A07               	infsnz	??_strncmp,f,c
 37324  006216  2A08               	incf	??_strncmp+1,f,c
 37325  006218  C001  FFF6         	movff	strncmp@s1,tblptrl
 37326  00621C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37327  006220  6AF8               	clrf	tblptru,c
 37328  006222  0E0E               	movlw	(high __ramtop+-1)
 37329  006224  64F7               	cpfsgt	tblptrh,c
 37330  006226  D003               	bra	u8217
 37331  006228  0008               	tblrd		*
 37332  00622A  50F5               	movf	tablat,w,c
 37333  00622C  D005               	bra	u8210
 37334  00622E                     u8217:
 37335  00622E  CFF6 FFE9          	movff	tblptrl,fsr0l
 37336  006232  CFF7 FFEA          	movff	tblptrh,fsr0h
 37337  006236  50EF               	movf	indf0,w,c
 37338  006238                     u8210:
 37339  006238  6E09               	movwf	(??_strncmp+2)& (0+255),c
 37340  00623A  5009               	movf	??_strncmp+2,w,c
 37341  00623C  2407               	addwf	??_strncmp,w,c
 37342  00623E  6E01               	movwf	?_strncmp,c
 37343  006240  0E00               	movlw	0
 37344  006242  2008               	addwfc	??_strncmp+1,w,c
 37345  006244  6E02               	movwf	?_strncmp+1,c
 37346  006246  0012               	return	
 37347  006248                     l3707:
 37348  006248  4A01               	infsnz	strncmp@s1,f,c
 37349  00624A  2A02               	incf	strncmp@s1+1,f,c
 37350  00624C  4A03               	infsnz	strncmp@s2,f,c
 37351  00624E  2A04               	incf	strncmp@s2+1,f,c
 37352  006250                     l3705:
 37353  006250  0605               	decf	strncmp@len,f,c
 37354  006252  A0D8               	btfss	status,0,c
 37355  006254  0606               	decf	strncmp@len+1,f,c
 37356  006256  2805               	incf	strncmp@len,w,c
 37357  006258  E1A8               	bnz	l11425
 37358  00625A  2806               	incf	strncmp@len+1,w,c
 37359  00625C  A4D8               	btfss	status,2,c
 37360  00625E  D7A5               	goto	l3706
 37361  006260  0E00               	movlw	0
 37362  006262  6E02               	movwf	?_strncmp+1,c
 37363  006264  0E00               	movlw	0
 37364  006266  6E01               	movwf	?_strncmp,c
 37365  006268  0012               	return	
 37366  00626A                     __end_of_strncmp:
 37367                           	opt stack 0
 37368                           tosu	equ	0xFFF
 37369                           tosh	equ	0xFFE
 37370                           tosl	equ	0xFFD
 37371                           pclath	equ	0xFFA
 37372                           tblptru	equ	0xFF8
 37373                           tblptrh	equ	0xFF7
 37374                           tblptrl	equ	0xFF6
 37375                           tablat	equ	0xFF5
 37376                           prodh	equ	0xFF4
 37377                           prodl	equ	0xFF3
 37378                           intcon	equ	0xFF2
 37379                           intcon2	equ	0xFF1
 37380                           intcon3	equ	0xFF0
 37381                           indf0	equ	0xFEF
 37382                           postinc0	equ	0xFEE
 37383                           fsr0h	equ	0xFEA
 37384                           fsr0l	equ	0xFE9
 37385                           wreg	equ	0xFE8
 37386                           indf1	equ	0xFE7
 37387                           postdec1	equ	0xFE5
 37388                           plusw1	equ	0xFE3
 37389                           fsr1h	equ	0xFE2
 37390                           fsr1l	equ	0xFE1
 37391                           indf2	equ	0xFDF
 37392                           postinc2	equ	0xFDE
 37393                           postdec2	equ	0xFDD
 37394                           plusw2	equ	0xFDB
 37395                           fsr2h	equ	0xFDA
 37396                           fsr2l	equ	0xFD9
 37397                           status	equ	0xFD8
 37398                           
 37399 ;; *************** function __get_time *****************
 37400 ;; Defined at:
 37401 ;;		line 376 in file "fat16.c"
 37402 ;; Parameters:    Size  Location     Type
 37403 ;;		None
 37404 ;; Auto vars:     Size  Location     Type
 37405 ;;		None
 37406 ;; Return value:  Size  Location     Type
 37407 ;;                  2    0[COMRAM] unsigned int 
 37408 ;; Registers used:
 37409 ;;		wreg, status,2
 37410 ;; Tracked objects:
 37411 ;;		On entry : 0/0
 37412 ;;		On exit  : 0/0
 37413 ;;		Unchanged: 0/0
 37414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37415 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37416 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37418 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37419 ;;Total ram usage:        2 bytes
 37420 ;; Hardware stack levels used:    1
 37421 ;; This function calls:
 37422 ;;		Nothing
 37423 ;; This function is called by:
 37424 ;;		_fat_create_file
 37425 ;; This function uses a non-reentrant model
 37426 ;;
 37427                           
 37428                           	psect	text189
 37429  008F56                     __ptext189:
 37430                           	opt stack 0
 37431  008F56                     __get_time:
 37432                           	opt stack 26
 37433                           
 37434                           ;fat16.c: 388: return 0x0000;
 37435                           
 37436                           ;incstack = 0
 37437  008F56  0E00               	movlw	0
 37438  008F58  6E02               	movwf	?__get_time+1,c
 37439  008F5A  0E00               	movlw	0
 37440  008F5C  6E01               	movwf	?__get_time,c
 37441  008F5E  0012               	return	
 37442  008F60                     __end_of__get_time:
 37443                           	opt stack 0
 37444                           tosu	equ	0xFFF
 37445                           tosh	equ	0xFFE
 37446                           tosl	equ	0xFFD
 37447                           pclath	equ	0xFFA
 37448                           tblptru	equ	0xFF8
 37449                           tblptrh	equ	0xFF7
 37450                           tblptrl	equ	0xFF6
 37451                           tablat	equ	0xFF5
 37452                           prodh	equ	0xFF4
 37453                           prodl	equ	0xFF3
 37454                           intcon	equ	0xFF2
 37455                           intcon2	equ	0xFF1
 37456                           intcon3	equ	0xFF0
 37457                           indf0	equ	0xFEF
 37458                           postinc0	equ	0xFEE
 37459                           fsr0h	equ	0xFEA
 37460                           fsr0l	equ	0xFE9
 37461                           wreg	equ	0xFE8
 37462                           indf1	equ	0xFE7
 37463                           postdec1	equ	0xFE5
 37464                           plusw1	equ	0xFE3
 37465                           fsr1h	equ	0xFE2
 37466                           fsr1l	equ	0xFE1
 37467                           indf2	equ	0xFDF
 37468                           postinc2	equ	0xFDE
 37469                           postdec2	equ	0xFDD
 37470                           plusw2	equ	0xFDB
 37471                           fsr2h	equ	0xFDA
 37472                           fsr2l	equ	0xFD9
 37473                           status	equ	0xFD8
 37474                           
 37475 ;; *************** function __get_date *****************
 37476 ;; Defined at:
 37477 ;;		line 392 in file "fat16.c"
 37478 ;; Parameters:    Size  Location     Type
 37479 ;;		None
 37480 ;; Auto vars:     Size  Location     Type
 37481 ;;		None
 37482 ;; Return value:  Size  Location     Type
 37483 ;;                  2    0[COMRAM] unsigned int 
 37484 ;; Registers used:
 37485 ;;		wreg, status,2
 37486 ;; Tracked objects:
 37487 ;;		On entry : 0/0
 37488 ;;		On exit  : 0/0
 37489 ;;		Unchanged: 0/0
 37490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37491 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37492 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37493 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37494 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37495 ;;Total ram usage:        2 bytes
 37496 ;; Hardware stack levels used:    1
 37497 ;; This function calls:
 37498 ;;		Nothing
 37499 ;; This function is called by:
 37500 ;;		_fat_create_file
 37501 ;; This function uses a non-reentrant model
 37502 ;;
 37503                           
 37504                           	psect	text190
 37505  008F60                     __ptext190:
 37506                           	opt stack 0
 37507  008F60                     __get_date:
 37508                           	opt stack 26
 37509                           
 37510                           ;fat16.c: 404: return 0x0000;
 37511                           
 37512                           ;incstack = 0
 37513  008F60  0E00               	movlw	0
 37514  008F62  6E02               	movwf	?__get_date+1,c
 37515  008F64  0E00               	movlw	0
 37516  008F66  6E01               	movwf	?__get_date,c
 37517  008F68  0012               	return	
 37518  008F6A                     __end_of__get_date:
 37519                           	opt stack 0
 37520                           tosu	equ	0xFFF
 37521                           tosh	equ	0xFFE
 37522                           tosl	equ	0xFFD
 37523                           pclath	equ	0xFFA
 37524                           tblptru	equ	0xFF8
 37525                           tblptrh	equ	0xFF7
 37526                           tblptrl	equ	0xFF6
 37527                           tablat	equ	0xFF5
 37528                           prodh	equ	0xFF4
 37529                           prodl	equ	0xFF3
 37530                           intcon	equ	0xFF2
 37531                           intcon2	equ	0xFF1
 37532                           intcon3	equ	0xFF0
 37533                           indf0	equ	0xFEF
 37534                           postinc0	equ	0xFEE
 37535                           fsr0h	equ	0xFEA
 37536                           fsr0l	equ	0xFE9
 37537                           wreg	equ	0xFE8
 37538                           indf1	equ	0xFE7
 37539                           postdec1	equ	0xFE5
 37540                           plusw1	equ	0xFE3
 37541                           fsr1h	equ	0xFE2
 37542                           fsr1l	equ	0xFE1
 37543                           indf2	equ	0xFDF
 37544                           postinc2	equ	0xFDE
 37545                           postdec2	equ	0xFDD
 37546                           plusw2	equ	0xFDB
 37547                           fsr2h	equ	0xFDA
 37548                           fsr2l	equ	0xFD9
 37549                           status	equ	0xFD8
 37550                           
 37551 ;; *************** function __get_available_root_entry *****************
 37552 ;; Defined at:
 37553 ;;		line 442 in file "fat16.c"
 37554 ;; Parameters:    Size  Location     Type
 37555 ;;		None
 37556 ;; Auto vars:     Size  Location     Type
 37557 ;;  file_number     1   53[COMRAM] unsigned char 
 37558 ;; Return value:  Size  Location     Type
 37559 ;;                  1    wreg      unsigned char 
 37560 ;; Registers used:
 37561 ;;		wreg, status,2, status,0, cstack
 37562 ;; Tracked objects:
 37563 ;;		On entry : 0/0
 37564 ;;		On exit  : 0/0
 37565 ;;		Unchanged: 0/0
 37566 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37567 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37568 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37569 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37570 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37571 ;;Total ram usage:        1 bytes
 37572 ;; Hardware stack levels used:    1
 37573 ;; Hardware stack levels required when called:    6
 37574 ;; This function calls:
 37575 ;;		__root_is_available
 37576 ;; This function is called by:
 37577 ;;		_fat_create_file
 37578 ;; This function uses a non-reentrant model
 37579 ;;
 37580                           
 37581                           	psect	text191
 37582  008BCE                     __ptext191:
 37583                           	opt stack 0
 37584  008BCE                     __get_available_root_entry:
 37585                           	opt stack 20
 37586                           
 37587                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 37588                           
 37589                           ;incstack = 0
 37590  008BCE  0E00               	movlw	0
 37591  008BD0  6E36               	movwf	__get_available_root_entry@file_number,c
 37592  008BD2                     l12137:
 37593  008BD2  0E3F               	movlw	63
 37594  008BD4  6436               	cpfsgt	__get_available_root_entry@file_number,c
 37595  008BD6  D001               	goto	l2023
 37596  008BD8  D00A               	goto	u9120
 37597  008BDA                     l2023:
 37598                           
 37599                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 37600  008BDA  5036               	movf	__get_available_root_entry@file_number,w,c
 37601  008BDC  ECA7  F03D         	call	__root_is_available
 37602  008BE0  0900               	iorlw	0
 37603  008BE2  B4D8               	btfsc	status,2,c
 37604  008BE4  D002               	goto	l2025
 37605                           
 37606                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 37607  008BE6  5036               	movf	__get_available_root_entry@file_number,w,c
 37608  008BE8  0012               	return	
 37609  008BEA                     l2025:
 37610  008BEA  2A36               	incf	__get_available_root_entry@file_number,f,c
 37611  008BEC  D7F2               	goto	l12137
 37612  008BEE                     u9120:
 37613                           
 37614                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 37615  008BEE  0EFF               	movlw	255
 37616  008BF0  0012               	return	
 37617  008BF2                     __end_of__get_available_root_entry:
 37618                           	opt stack 0
 37619                           tosu	equ	0xFFF
 37620                           tosh	equ	0xFFE
 37621                           tosl	equ	0xFFD
 37622                           pclath	equ	0xFFA
 37623                           tblptru	equ	0xFF8
 37624                           tblptrh	equ	0xFF7
 37625                           tblptrl	equ	0xFF6
 37626                           tablat	equ	0xFF5
 37627                           prodh	equ	0xFF4
 37628                           prodl	equ	0xFF3
 37629                           intcon	equ	0xFF2
 37630                           intcon2	equ	0xFF1
 37631                           intcon3	equ	0xFF0
 37632                           indf0	equ	0xFEF
 37633                           postinc0	equ	0xFEE
 37634                           fsr0h	equ	0xFEA
 37635                           fsr0l	equ	0xFE9
 37636                           wreg	equ	0xFE8
 37637                           indf1	equ	0xFE7
 37638                           postdec1	equ	0xFE5
 37639                           plusw1	equ	0xFE3
 37640                           fsr1h	equ	0xFE2
 37641                           fsr1l	equ	0xFE1
 37642                           indf2	equ	0xFDF
 37643                           postinc2	equ	0xFDE
 37644                           postdec2	equ	0xFDD
 37645                           plusw2	equ	0xFDB
 37646                           fsr2h	equ	0xFDA
 37647                           fsr2l	equ	0xFD9
 37648                           status	equ	0xFD8
 37649                           
 37650 ;; *************** function __parse_file_append *****************
 37651 ;; Defined at:
 37652 ;;		line 644 in file "api.c"
 37653 ;; Parameters:    Size  Location     Type
 37654 ;;  data            2   89[COMRAM] PTR unsigned char 
 37655 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37656 ;; Auto vars:     Size  Location     Type
 37657 ;;		None
 37658 ;; Return value:  Size  Location     Type
 37659 ;;                  1    wreg      unsigned char 
 37660 ;; Registers used:
 37661 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37662 ;; Tracked objects:
 37663 ;;		On entry : 0/0
 37664 ;;		On exit  : 0/0
 37665 ;;		Unchanged: 0/0
 37666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37667 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37668 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37669 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37670 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37671 ;;Total ram usage:        3 bytes
 37672 ;; Hardware stack levels used:    1
 37673 ;; Hardware stack levels required when called:    9
 37674 ;; This function calls:
 37675 ;;		_fat_append_to_file
 37676 ;; This function is called by:
 37677 ;;		__parse_command_long
 37678 ;; This function uses a non-reentrant model
 37679 ;;
 37680                           
 37681                           	psect	text192
 37682  007382                     __ptext192:
 37683                           	opt stack 0
 37684  007382                     __parse_file_append:
 37685                           	opt stack 19
 37686                           
 37687                           ;api.c: 647: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 37688                           
 37689                           ;incstack = 0
 37690  007382  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 37691  007386  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 37692  00738A  0E54               	movlw	84
 37693  00738C  18DE               	xorwf	postinc2,w,c
 37694  00738E  A4D8               	btfss	status,2,c
 37695  007390  D014               	goto	u10900
 37696  007392  EE20 F003          	lfsr	2,3
 37697  007396  505A               	movf	__parse_file_append@data,w,c
 37698  007398  26D9               	addwf	fsr2l,f,c
 37699  00739A  505B               	movf	__parse_file_append@data+1,w,c
 37700  00739C  22DA               	addwfc	fsr2h,f,c
 37701  00739E  0EFE               	movlw	254
 37702  0073A0  18DE               	xorwf	postinc2,w,c
 37703  0073A2  A4D8               	btfss	status,2,c
 37704  0073A4  D00A               	goto	u10900
 37705  0073A6  EE20 F004          	lfsr	2,4
 37706  0073AA  505A               	movf	__parse_file_append@data,w,c
 37707  0073AC  26D9               	addwf	fsr2l,f,c
 37708  0073AE  505B               	movf	__parse_file_append@data+1,w,c
 37709  0073B0  22DA               	addwfc	fsr2h,f,c
 37710  0073B2  0E4B               	movlw	75
 37711  0073B4  18DE               	xorwf	postinc2,w,c
 37712  0073B6  B4D8               	btfsc	status,2,c
 37713  0073B8  D002               	goto	l2825
 37714  0073BA                     u10900:
 37715                           
 37716                           ;api.c: 648: {;api.c: 650: return 65;
 37717  0073BA  0E41               	movlw	65
 37718  0073BC  0012               	return	
 37719  0073BE                     l2825:
 37720                           
 37721                           ;api.c: 651: };api.c: 654: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 37722  0073BE  EE20 F002          	lfsr	2,2
 37723  0073C2  505A               	movf	__parse_file_append@data,w,c
 37724  0073C4  26D9               	addwf	fsr2l,f,c
 37725  0073C6  505B               	movf	__parse_file_append@data+1,w,c
 37726  0073C8  22DA               	addwfc	fsr2h,f,c
 37727  0073CA  50DF               	movf	indf2,w,c
 37728  0073CC  6E5C               	movwf	??__parse_file_append& (0+255),c
 37729  0073CE  505C               	movf	??__parse_file_append,w,c
 37730  0073D0  6E56               	movwf	fat_append_to_file@number_of_bytes,c
 37731  0073D2  6A57               	clrf	fat_append_to_file@number_of_bytes+1,c
 37732  0073D4  0E05               	movlw	5
 37733  0073D6  245A               	addwf	__parse_file_append@data,w,c
 37734  0073D8  6E58               	movwf	fat_append_to_file@data,c
 37735  0073DA  0E00               	movlw	0
 37736  0073DC  205B               	addwfc	__parse_file_append@data+1,w,c
 37737  0073DE  6E59               	movwf	fat_append_to_file@data+1,c
 37738  0073E0  EE20 F001          	lfsr	2,1
 37739  0073E4  505A               	movf	__parse_file_append@data,w,c
 37740  0073E6  26D9               	addwf	fsr2l,f,c
 37741  0073E8  505B               	movf	__parse_file_append@data+1,w,c
 37742  0073EA  22DA               	addwfc	fsr2h,f,c
 37743  0073EC  50DF               	movf	indf2,w,c
 37744  0073EE  EC4D  F037         	call	_fat_append_to_file
 37745                           
 37746                           ;api.c: 655: return data[2] + 5;
 37747  0073F2  EE20 F002          	lfsr	2,2
 37748  0073F6  505A               	movf	__parse_file_append@data,w,c
 37749  0073F8  26D9               	addwf	fsr2l,f,c
 37750  0073FA  505B               	movf	__parse_file_append@data+1,w,c
 37751  0073FC  22DA               	addwfc	fsr2h,f,c
 37752  0073FE  50DF               	movf	indf2,w,c
 37753  007400  0F05               	addlw	5
 37754  007402  0012               	return	
 37755  007404                     __end_of__parse_file_append:
 37756                           	opt stack 0
 37757                           tosu	equ	0xFFF
 37758                           tosh	equ	0xFFE
 37759                           tosl	equ	0xFFD
 37760                           pclath	equ	0xFFA
 37761                           tblptru	equ	0xFF8
 37762                           tblptrh	equ	0xFF7
 37763                           tblptrl	equ	0xFF6
 37764                           tablat	equ	0xFF5
 37765                           prodh	equ	0xFF4
 37766                           prodl	equ	0xFF3
 37767                           intcon	equ	0xFF2
 37768                           intcon2	equ	0xFF1
 37769                           intcon3	equ	0xFF0
 37770                           indf0	equ	0xFEF
 37771                           postinc0	equ	0xFEE
 37772                           fsr0h	equ	0xFEA
 37773                           fsr0l	equ	0xFE9
 37774                           wreg	equ	0xFE8
 37775                           indf1	equ	0xFE7
 37776                           postdec1	equ	0xFE5
 37777                           plusw1	equ	0xFE3
 37778                           fsr1h	equ	0xFE2
 37779                           fsr1l	equ	0xFE1
 37780                           indf2	equ	0xFDF
 37781                           postinc2	equ	0xFDE
 37782                           postdec2	equ	0xFDD
 37783                           plusw2	equ	0xFDB
 37784                           fsr2h	equ	0xFDA
 37785                           fsr2l	equ	0xFD9
 37786                           status	equ	0xFD8
 37787                           
 37788 ;; *************** function _fat_append_to_file *****************
 37789 ;; Defined at:
 37790 ;;		line 675 in file "fat16.c"
 37791 ;; Parameters:    Size  Location     Type
 37792 ;;  file_number     1    wreg     unsigned char 
 37793 ;;  number_of_by    2   85[COMRAM] unsigned int 
 37794 ;;  data            2   87[COMRAM] PTR unsigned char 
 37795 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37796 ;; Auto vars:     Size  Location     Type
 37797 ;;  file_number     1   55[BANK0 ] unsigned char 
 37798 ;;  old_file_siz    4   51[BANK0 ] unsigned long 
 37799 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 37800 ;;  return_code     1   50[BANK0 ] unsigned char 
 37801 ;; Return value:  Size  Location     Type
 37802 ;;                  1    wreg      unsigned char 
 37803 ;; Registers used:
 37804 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37805 ;; Tracked objects:
 37806 ;;		On entry : 0/0
 37807 ;;		On exit  : 0/0
 37808 ;;		Unchanged: 0/0
 37809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37810 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37811 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37812 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37813 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37814 ;;Total ram usage:       14 bytes
 37815 ;; Hardware stack levels used:    1
 37816 ;; Hardware stack levels required when called:    8
 37817 ;; This function calls:
 37818 ;;		__root_is_available
 37819 ;;		_fat_get_file_size
 37820 ;;		_fat_modify_file
 37821 ;;		_fat_resize_file
 37822 ;; This function is called by:
 37823 ;;		__parse_file_append
 37824 ;; This function uses a non-reentrant model
 37825 ;;
 37826                           
 37827                           	psect	text193
 37828  006E9A                     __ptext193:
 37829                           	opt stack 0
 37830  006E9A                     _fat_append_to_file:
 37831                           	opt stack 19
 37832                           
 37833                           ;incstack = 0
 37834                           ;fat_append_to_file@file_number stored from wreg
 37835  006E9A  0100               	movlb	0	; () banked
 37836  006E9C  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 37837                           
 37838                           ;fat16.c: 677: uint32_t old_file_size;;fat16.c: 678: uint32_t new_file_size;;fat16.c: 67
      +                          9: uint8_t return_code;;fat16.c: 682: if(file_number>=64)
 37839  006E9E  0E3F               	movlw	63
 37840  006EA0  0100               	movlb	0	; () banked
 37841  006EA2  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 37842  006EA4  D001               	goto	l2069
 37843  006EA6  0012               	return	
 37844  006EA8                     l2069:
 37845                           
 37846                           ; BSR set to: 0
 37847                           ;fat16.c: 686: };fat16.c: 689: if(_root_is_available(file_number))
 37848                           
 37849                           ; BSR set to: 0
 37850  006EA8  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37851  006EAA  ECA7  F03D         	call	__root_is_available
 37852  006EAE  0900               	iorlw	0
 37853  006EB0  A4D8               	btfss	status,2,c
 37854  006EB2  0012               	return	
 37855                           
 37856                           ;fat16.c: 693: };fat16.c: 696: old_file_size = fat_get_file_size(file_number);
 37857                           
 37858                           ;fat16.c: 690: {;fat16.c: 692: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 37859  006EB4  0100               	movlb	0	; () banked
 37860  006EB6  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37861  006EB8  EC0F  F03C         	call	_fat_get_file_size
 37862  006EBC  C036  F093         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 37863  006EC0  C037  F094         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 37864  006EC4  C038  F095         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 37865  006EC8  C039  F096         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 37866                           
 37867                           ;fat16.c: 699: new_file_size = old_file_size + number_of_bytes;
 37868  006ECC  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 37869  006ECE  0100               	movlb	0	; () banked
 37870  006ED0  2593               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 37871  006ED2  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 37872  006ED4  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 37873  006ED6  2194               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 37874  006ED8  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 37875  006EDA  0E00               	movlw	0
 37876  006EDC  2195               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 37877  006EDE  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 37878  006EE0  0E00               	movlw	0
 37879  006EE2  2196               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 37880  006EE4  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 37881                           
 37882                           ; BSR set to: 0
 37883                           ;fat16.c: 702: return_code = fat_resize_file(file_number, new_file_size);
 37884  006EE6  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 37885  006EEA  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 37886  006EEE  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 37887  006EF2  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 37888  006EF6  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37889  006EF8  ECF7  F026         	call	_fat_resize_file
 37890  006EFC  0100               	movlb	0	; () banked
 37891  006EFE  6F92               	movwf	fat_append_to_file@return_code& (0+255),b
 37892                           
 37893                           ; BSR set to: 0
 37894                           ;fat16.c: 703: if(return_code!=0x00)
 37895  006F00  5192               	movf	fat_append_to_file@return_code& (0+255),w,b
 37896  006F02  A4D8               	btfss	status,2,c
 37897  006F04  0012               	return	
 37898                           
 37899                           ; BSR set to: 0
 37900                           ;fat16.c: 707: };fat16.c: 710: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 37901                           
 37902                           ; BSR set to: 0
 37903                           
 37904                           ; BSR set to: 0
 37905                           ;fat16.c: 704: {;fat16.c: 706: return return_code - 0x0F;;	Return value of _fat_append_t
      +                          o_file is never used
 37906  006F06  C093  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 37907  006F0A  C094  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 37908  006F0E  C095  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 37909  006F12  C096  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 37910  006F16  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 37911  006F1A  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 37912  006F1E  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 37913  006F22  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 37914  006F26  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 37915  006F28  EC42  F011         	call	_fat_modify_file
 37916  006F2C  0012               	return	
 37917  006F2E                     __end_of_fat_append_to_file:
 37918                           	opt stack 0
 37919                           tosu	equ	0xFFF
 37920                           tosh	equ	0xFFE
 37921                           tosl	equ	0xFFD
 37922                           pclath	equ	0xFFA
 37923                           tblptru	equ	0xFF8
 37924                           tblptrh	equ	0xFF7
 37925                           tblptrl	equ	0xFF6
 37926                           tablat	equ	0xFF5
 37927                           prodh	equ	0xFF4
 37928                           prodl	equ	0xFF3
 37929                           intcon	equ	0xFF2
 37930                           intcon2	equ	0xFF1
 37931                           intcon3	equ	0xFF0
 37932                           indf0	equ	0xFEF
 37933                           postinc0	equ	0xFEE
 37934                           fsr0h	equ	0xFEA
 37935                           fsr0l	equ	0xFE9
 37936                           wreg	equ	0xFE8
 37937                           indf1	equ	0xFE7
 37938                           postdec1	equ	0xFE5
 37939                           plusw1	equ	0xFE3
 37940                           fsr1h	equ	0xFE2
 37941                           fsr1l	equ	0xFE1
 37942                           indf2	equ	0xFDF
 37943                           postinc2	equ	0xFDE
 37944                           postdec2	equ	0xFDD
 37945                           plusw2	equ	0xFDB
 37946                           fsr2h	equ	0xFDA
 37947                           fsr2l	equ	0xFD9
 37948                           status	equ	0xFD8
 37949                           
 37950 ;; *************** function _fat_resize_file *****************
 37951 ;; Defined at:
 37952 ;;		line 849 in file "fat16.c"
 37953 ;; Parameters:    Size  Location     Type
 37954 ;;  file_number     1    wreg     unsigned char 
 37955 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 37956 ;; Auto vars:     Size  Location     Type
 37957 ;;  file_number     1    6[BANK0 ] unsigned char 
 37958 ;;  root           32    7[BANK0 ] struct .
 37959 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 37960 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 37961 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 37962 ;; Return value:  Size  Location     Type
 37963 ;;                  1    wreg      unsigned char 
 37964 ;; Registers used:
 37965 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37966 ;; Tracked objects:
 37967 ;;		On entry : 0/0
 37968 ;;		On exit  : 0/0
 37969 ;;		Unchanged: 0/0
 37970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37971 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37972 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37973 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37974 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37975 ;;Total ram usage:       47 bytes
 37976 ;; Hardware stack levels used:    1
 37977 ;; Hardware stack levels required when called:    7
 37978 ;; This function calls:
 37979 ;;		__make_cluster_chain
 37980 ;;		__root_is_available
 37981 ;;		__write_root
 37982 ;;		_fat_get_file_information
 37983 ;; This function is called by:
 37984 ;;		_fat_append_to_file
 37985 ;;		__parse_file_resize
 37986 ;; This function uses a non-reentrant model
 37987 ;;
 37988                           
 37989                           	psect	text194
 37990  004DEE                     __ptext194:
 37991                           	opt stack 0
 37992  004DEE                     _fat_resize_file:
 37993                           	opt stack 20
 37994                           
 37995                           ;incstack = 0
 37996                           ;fat_resize_file@file_number stored from wreg
 37997  004DEE  0100               	movlb	0	; () banked
 37998  004DF0  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 37999                           
 38000                           ;fat16.c: 851: rootEntry_t root;;fat16.c: 852: uint16_t old_number_of_clusters;;fat16.c:
      +                           853: uint16_t new_number_of_clusters;;fat16.c: 854: uint16_t first_cluster;;fat16.c: 85
      +                          7: if(file_number>=64)
 38001  004DF2  0E3F               	movlw	63
 38002  004DF4  0100               	movlb	0	; () banked
 38003  004DF6  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 38004  004DF8  D002               	goto	l2098
 38005                           
 38006                           ; BSR set to: 0
 38007                           ;fat16.c: 858: {;fat16.c: 860: return 0xFF;
 38008  004DFA  0EFF               	movlw	255
 38009                           
 38010                           ; BSR set to: 0
 38011  004DFC  0012               	return	
 38012  004DFE                     l2098:
 38013                           
 38014                           ; BSR set to: 0
 38015                           ;fat16.c: 861: };fat16.c: 864: if(_root_is_available(file_number))
 38016                           
 38017                           ; BSR set to: 0
 38018  004DFE  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38019  004E00  ECA7  F03D         	call	__root_is_available
 38020  004E04  0900               	iorlw	0
 38021  004E06  B4D8               	btfsc	status,2,c
 38022  004E08  D002               	goto	l2100
 38023                           
 38024                           ;fat16.c: 865: {;fat16.c: 867: return 0xFE;
 38025  004E0A  0EFE               	movlw	254
 38026  004E0C  0012               	return	
 38027  004E0E                     l2100:
 38028                           
 38029                           ;fat16.c: 868: };fat16.c: 871: fat_get_file_information(file_number, &root);
 38030  004E0E  0E67               	movlw	low fat_resize_file@root
 38031  004E10  6E30               	movwf	fat_get_file_information@data,c
 38032  004E12  0E00               	movlw	high fat_resize_file@root
 38033  004E14  6E31               	movwf	fat_get_file_information@data+1,c
 38034  004E16  0100               	movlb	0	; () banked
 38035  004E18  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38036  004E1A  EC2F  F03B         	call	_fat_get_file_information
 38037                           
 38038                           ;fat16.c: 874: old_number_of_clusters = (root.fileSize+512-1)>>9;
 38039  004E1E  EE20  F083         	lfsr	2,fat_resize_file@root+28
 38040  004E22  0EFF               	movlw	255
 38041  004E24  24DE               	addwf	postinc2,w,c
 38042  004E26  6E51               	movwf	??_fat_resize_file& (0+255),c
 38043  004E28  0E01               	movlw	1
 38044  004E2A  20DE               	addwfc	postinc2,w,c
 38045  004E2C  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38046  004E2E  0E00               	movlw	0
 38047  004E30  20DE               	addwfc	postinc2,w,c
 38048  004E32  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38049  004E34  0E00               	movlw	0
 38050  004E36  20DE               	addwfc	postinc2,w,c
 38051  004E38  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38052  004E3A  0E0A               	movlw	10
 38053  004E3C  D005               	goto	u9240
 38054  004E3E                     u9245:
 38055  004E3E  90D8               	bcf	status,0,c
 38056  004E40  3254               	rrcf	??_fat_resize_file+3,f,c
 38057  004E42  3253               	rrcf	??_fat_resize_file+2,f,c
 38058  004E44  3252               	rrcf	??_fat_resize_file+1,f,c
 38059  004E46  3251               	rrcf	??_fat_resize_file,f,c
 38060  004E48                     u9240:
 38061  004E48  2EE8               	decfsz	wreg,f,c
 38062  004E4A  D7F9               	goto	u9245
 38063  004E4C  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 38064  004E50  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 38065                           
 38066                           ;fat16.c: 875: new_number_of_clusters = (new_file_size+512-1)>>9;
 38067  004E54  0EFF               	movlw	255
 38068  004E56  244D               	addwf	fat_resize_file@new_file_size,w,c
 38069  004E58  6E51               	movwf	??_fat_resize_file& (0+255),c
 38070  004E5A  0E01               	movlw	1
 38071  004E5C  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 38072  004E5E  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38073  004E60  0E00               	movlw	0
 38074  004E62  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 38075  004E64  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38076  004E66  0E00               	movlw	0
 38077  004E68  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 38078  004E6A  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38079  004E6C  0E0A               	movlw	10
 38080  004E6E  D005               	goto	u9250
 38081  004E70                     u9255:
 38082  004E70  90D8               	bcf	status,0,c
 38083  004E72  3254               	rrcf	??_fat_resize_file+3,f,c
 38084  004E74  3253               	rrcf	??_fat_resize_file+2,f,c
 38085  004E76  3252               	rrcf	??_fat_resize_file+1,f,c
 38086  004E78  3251               	rrcf	??_fat_resize_file,f,c
 38087  004E7A                     u9250:
 38088  004E7A  2EE8               	decfsz	wreg,f,c
 38089  004E7C  D7F9               	goto	u9255
 38090  004E7E  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 38091  004E82  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 38092                           
 38093                           ;fat16.c: 878: if(old_number_of_clusters!=new_number_of_clusters)
 38094  004E86  0100               	movlb	0	; () banked
 38095  004E88  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 38096  004E8A  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 38097  004E8C  E104               	bnz	u9260
 38098  004E8E  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 38099  004E90  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 38100  004E92  B4D8               	btfsc	status,2,c
 38101  004E94  D01A               	goto	l2101
 38102  004E96                     u9260:
 38103                           
 38104                           ; BSR set to: 0
 38105                           ;fat16.c: 879: {;fat16.c: 880: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 38106  004E96  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 38107  004E9A  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 38108  004E9E  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 38109  004EA2  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 38110  004EA6  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 38111  004EAA  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 38112  004EAE  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 38113                           
 38114                           ;fat16.c: 881: if(first_cluster==0xFFFF)
 38115  004EB2  0100               	movlb	0	; () banked
 38116  004EB4  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 38117  004EB6  E105               	bnz	l2102
 38118  004EB8  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 38119  004EBA  A4D8               	btfss	status,2,c
 38120  004EBC  D002               	goto	l2102
 38121                           
 38122                           ; BSR set to: 0
 38123                           ;fat16.c: 882: {;fat16.c: 884: return 0xFD;
 38124  004EBE  0EFD               	movlw	253
 38125                           
 38126                           ; BSR set to: 0
 38127  004EC0  0012               	return	
 38128  004EC2                     l2102:
 38129                           
 38130                           ; BSR set to: 0
 38131                           ;fat16.c: 885: };fat16.c: 888: root.firstCluster = first_cluster;
 38132  004EC2  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 38133  004EC6  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 38134  004ECA                     l2101:
 38135                           
 38136                           ; BSR set to: 0
 38137                           ;fat16.c: 889: };fat16.c: 892: root.fileSize = new_file_size;
 38138  004ECA  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 38139  004ECE  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 38140  004ED2  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 38141  004ED6  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 38142                           
 38143                           ; BSR set to: 0
 38144                           ;fat16.c: 895: _write_root(file_number, &root);
 38145  004EDA  0E67               	movlw	low fat_resize_file@root
 38146  004EDC  6E29               	movwf	__write_root@data,c
 38147  004EDE  0E00               	movlw	high fat_resize_file@root
 38148  004EE0  6E2A               	movwf	__write_root@data+1,c
 38149  004EE2  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38150  004EE4  EC34  F042         	call	__write_root
 38151                           
 38152                           ;fat16.c: 898: return 0x00;
 38153  004EE8  0E00               	movlw	0
 38154  004EEA  0012               	return	
 38155  004EEC                     __end_of_fat_resize_file:
 38156                           	opt stack 0
 38157                           tosu	equ	0xFFF
 38158                           tosh	equ	0xFFE
 38159                           tosl	equ	0xFFD
 38160                           pclath	equ	0xFFA
 38161                           tblptru	equ	0xFF8
 38162                           tblptrh	equ	0xFF7
 38163                           tblptrl	equ	0xFF6
 38164                           tablat	equ	0xFF5
 38165                           prodh	equ	0xFF4
 38166                           prodl	equ	0xFF3
 38167                           intcon	equ	0xFF2
 38168                           intcon2	equ	0xFF1
 38169                           intcon3	equ	0xFF0
 38170                           indf0	equ	0xFEF
 38171                           postinc0	equ	0xFEE
 38172                           fsr0h	equ	0xFEA
 38173                           fsr0l	equ	0xFE9
 38174                           wreg	equ	0xFE8
 38175                           indf1	equ	0xFE7
 38176                           postdec1	equ	0xFE5
 38177                           plusw1	equ	0xFE3
 38178                           fsr1h	equ	0xFE2
 38179                           fsr1l	equ	0xFE1
 38180                           indf2	equ	0xFDF
 38181                           postinc2	equ	0xFDE
 38182                           postdec2	equ	0xFDD
 38183                           plusw2	equ	0xFDB
 38184                           fsr2h	equ	0xFDA
 38185                           fsr2l	equ	0xFD9
 38186                           status	equ	0xFD8
 38187                           
 38188 ;; *************** function __write_root *****************
 38189 ;; Defined at:
 38190 ;;		line 473 in file "fat16.c"
 38191 ;; Parameters:    Size  Location     Type
 38192 ;;  file_number     1    wreg     unsigned char 
 38193 ;;  data            2   40[COMRAM] PTR struct .
 38194 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 38195 ;; Auto vars:     Size  Location     Type
 38196 ;;  file_number     1   46[COMRAM] unsigned char 
 38197 ;;  offset          2   44[COMRAM] unsigned int 
 38198 ;;  sector          2   42[COMRAM] unsigned int 
 38199 ;; Return value:  Size  Location     Type
 38200 ;;                  1    wreg      void 
 38201 ;; Registers used:
 38202 ;;		wreg, status,2, status,0, cstack
 38203 ;; Tracked objects:
 38204 ;;		On entry : 0/0
 38205 ;;		On exit  : 0/0
 38206 ;;		Unchanged: 0/0
 38207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38209 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38211 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38212 ;;Total ram usage:        7 bytes
 38213 ;; Hardware stack levels used:    1
 38214 ;; Hardware stack levels required when called:    5
 38215 ;; This function calls:
 38216 ;;		__offset_from_file_number
 38217 ;;		__sector_from_file_number
 38218 ;;		_flash_partial_write
 38219 ;; This function is called by:
 38220 ;;		_fat_create_file
 38221 ;;		_fat_rename_file
 38222 ;;		_fat_resize_file
 38223 ;; This function uses a non-reentrant model
 38224 ;;
 38225                           
 38226                           	psect	text195
 38227  008468                     __ptext195:
 38228                           	opt stack 0
 38229  008468                     __write_root:
 38230                           	opt stack 21
 38231                           
 38232                           ;incstack = 0
 38233                           ;__write_root@file_number stored from wreg
 38234  008468  6E2F               	movwf	__write_root@file_number,c
 38235                           
 38236                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 38237  00846A  502F               	movf	__write_root@file_number,w,c
 38238  00846C  EC11  F045         	call	__sector_from_file_number
 38239  008470  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 38240  008474  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 38241                           
 38242                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 38243  008478  502F               	movf	__write_root@file_number,w,c
 38244  00847A  EC9D  F045         	call	__offset_from_file_number
 38245  00847E  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 38246  008482  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 38247                           
 38248                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 38249  008486  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 38250  00848A  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 38251  00848E  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 38252  008492  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 38253  008496  0E00               	movlw	0
 38254  008498  6E25               	movwf	flash_partial_write@length+1,c
 38255  00849A  0E20               	movlw	32
 38256  00849C  6E24               	movwf	flash_partial_write@length,c
 38257  00849E  C029  F026         	movff	__write_root@data,flash_partial_write@data
 38258  0084A2  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 38259  0084A6  ECA0  F03B         	call	_flash_partial_write	;wreg free
 38260  0084AA  0012               	return		;funcret
 38261  0084AC                     __end_of__write_root:
 38262                           	opt stack 0
 38263                           tosu	equ	0xFFF
 38264                           tosh	equ	0xFFE
 38265                           tosl	equ	0xFFD
 38266                           pclath	equ	0xFFA
 38267                           tblptru	equ	0xFF8
 38268                           tblptrh	equ	0xFF7
 38269                           tblptrl	equ	0xFF6
 38270                           tablat	equ	0xFF5
 38271                           prodh	equ	0xFF4
 38272                           prodl	equ	0xFF3
 38273                           intcon	equ	0xFF2
 38274                           intcon2	equ	0xFF1
 38275                           intcon3	equ	0xFF0
 38276                           indf0	equ	0xFEF
 38277                           postinc0	equ	0xFEE
 38278                           fsr0h	equ	0xFEA
 38279                           fsr0l	equ	0xFE9
 38280                           wreg	equ	0xFE8
 38281                           indf1	equ	0xFE7
 38282                           postdec1	equ	0xFE5
 38283                           plusw1	equ	0xFE3
 38284                           fsr1h	equ	0xFE2
 38285                           fsr1l	equ	0xFE1
 38286                           indf2	equ	0xFDF
 38287                           postinc2	equ	0xFDE
 38288                           postdec2	equ	0xFDD
 38289                           plusw2	equ	0xFDB
 38290                           fsr2h	equ	0xFDA
 38291                           fsr2l	equ	0xFD9
 38292                           status	equ	0xFD8
 38293                           
 38294 ;; *************** function __make_cluster_chain *****************
 38295 ;; Defined at:
 38296 ;;		line 213 in file "fat16.c"
 38297 ;; Parameters:    Size  Location     Type
 38298 ;;  first_cluste    2   53[COMRAM] unsigned int 
 38299 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 38300 ;; Auto vars:     Size  Location     Type
 38301 ;;  next_cluster    2   74[COMRAM] unsigned int 
 38302 ;;  offset          2   72[COMRAM] unsigned int 
 38303 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 38304 ;;  sector          2   68[COMRAM] unsigned int 
 38305 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 38306 ;;  different_se    2   63[COMRAM] unsigned int 
 38307 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 38308 ;;  next_offset     2   59[COMRAM] unsigned int 
 38309 ;;  data_changed    1   65[COMRAM] unsigned char 
 38310 ;; Return value:  Size  Location     Type
 38311 ;;                  2   53[COMRAM] unsigned int 
 38312 ;; Registers used:
 38313 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38314 ;; Tracked objects:
 38315 ;;		On entry : 0/0
 38316 ;;		On exit  : 0/0
 38317 ;;		Unchanged: 0/0
 38318 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38319 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38320 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38321 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38322 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38323 ;;Total ram usage:       23 bytes
 38324 ;; Hardware stack levels used:    1
 38325 ;; Hardware stack levels required when called:    6
 38326 ;; This function calls:
 38327 ;;		__fat_offset_from_cluster
 38328 ;;		__fat_sector_from_cluster
 38329 ;;		__get_available_cluster
 38330 ;;		__get_available_offset_from_buffer
 38331 ;;		__read_value_from_offset
 38332 ;;		__write_value_to_offset
 38333 ;;		_flash_sector_read
 38334 ;;		_flash_sector_write
 38335 ;; This function is called by:
 38336 ;;		_fat_create_file
 38337 ;;		_fat_delete_file
 38338 ;;		_fat_resize_file
 38339 ;; This function uses a non-reentrant model
 38340 ;;
 38341                           
 38342                           	psect	text196
 38343  0015D2                     __ptext196:
 38344                           	opt stack 0
 38345  0015D2                     __make_cluster_chain:
 38346                           	opt stack 20
 38347                           
 38348                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 38349                           
 38350                           ;incstack = 0
 38351  0015D2  0E00               	movlw	0
 38352  0015D4  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 38353  0015D6  0E00               	movlw	0
 38354  0015D8  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 38355                           
 38356                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 38357  0015DA  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 38358  0015DE  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 38359                           
 38360                           ;fat16.c: 228: minimum_sector = 2;
 38361  0015E2  0E00               	movlw	0
 38362  0015E4  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 38363  0015E6  0E02               	movlw	2
 38364  0015E8  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 38365                           
 38366                           ;fat16.c: 229: data_changed = 0;
 38367  0015EA  0E00               	movlw	0
 38368  0015EC  6E42               	movwf	__make_cluster_chain@data_changed,c
 38369                           
 38370                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 38371  0015EE  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38372  0015F0  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38373  0015F2  A4D8               	btfss	status,2,c
 38374  0015F4  D023               	goto	l1983
 38375  0015F6  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38376  0015F8  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38377  0015FA  B4D8               	btfsc	status,2,c
 38378  0015FC  D01F               	goto	l1983
 38379                           
 38380                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 38381  0015FE  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38382  001602  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38383  001606  0E00               	movlw	0
 38384  001608  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 38385  00160A  0E00               	movlw	0
 38386  00160C  6E2E               	movwf	__get_available_cluster@skip_sector,c
 38387  00160E  EC72  F030         	call	__get_available_cluster	;wreg free
 38388  001612  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 38389  001616  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 38390                           
 38391                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 38392  00161A  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 38393  00161E  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 38394  001622  ECCA  F046         	call	__fat_sector_from_cluster	;wreg free
 38395  001626  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38396  00162A  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38397                           
 38398                           ;fat16.c: 237: if(first_cluster == 0)
 38399  00162E  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38400  001630  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38401  001632  A4D8               	btfss	status,2,c
 38402  001634  D003               	goto	l1983
 38403                           
 38404                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 38405  001636  6836               	setf	?__make_cluster_chain,c
 38406  001638  6837               	setf	?__make_cluster_chain+1,c
 38407  00163A  0012               	return	
 38408  00163C                     l1983:
 38409                           
 38410                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 38411  00163C  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 38412  001640  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 38413                           
 38414                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 38415  001644  D0FA               	goto	l2000
 38416  001646                     
 38417                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 38418  001646  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 38419  00164A  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 38420  00164E  ECCA  F046         	call	__fat_sector_from_cluster	;wreg free
 38421  001652  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 38422  001656  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 38423                           
 38424                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 38425  00165A  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 38426  00165E  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 38427  001662  ECD6  F046         	call	__fat_offset_from_cluster	;wreg free
 38428  001666  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 38429  00166A  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 38430                           
 38431                           ;fat16.c: 263: if(sector != sector_in_buffer)
 38432  00166E  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 38433  001670  1845               	xorwf	__make_cluster_chain@sector,w,c
 38434  001672  E104               	bnz	u8010
 38435  001674  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 38436  001676  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 38437  001678  B4D8               	btfsc	status,2,c
 38438  00167A  D035               	goto	l1987
 38439  00167C                     u8010:
 38440                           
 38441                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 38442  00167C  5042               	movf	__make_cluster_chain@data_changed,w,c
 38443  00167E  B4D8               	btfsc	status,2,c
 38444  001680  D00A               	goto	l1988
 38445                           
 38446                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 38447  001682  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38448  001686  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38449  00168A  0EC0               	movlw	low _buffer
 38450  00168C  6E22               	movwf	flash_sector_write@data,c
 38451  00168E  0E03               	movlw	high _buffer
 38452  001690  6E23               	movwf	flash_sector_write@data+1,c
 38453  001692  ECEE  F03F         	call	_flash_sector_write	;wreg free
 38454  001696                     l1988:
 38455                           
 38456                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 38457  001696  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38458  00169A  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38459  00169E  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 38460  0016A2  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 38461  0016A6  EC72  F030         	call	__get_available_cluster	;wreg free
 38462  0016AA  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 38463  0016AE  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 38464                           
 38465                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 38466  0016B2  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 38467  0016B6  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 38468  0016BA  ECCA  F046         	call	__fat_sector_from_cluster	;wreg free
 38469  0016BE  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38470  0016C2  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38471                           
 38472                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 38473  0016C6  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 38474  0016CA  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 38475  0016CE  0EC0               	movlw	low _buffer
 38476  0016D0  6E2A               	movwf	flash_sector_read@data,c
 38477  0016D2  0E03               	movlw	high _buffer
 38478  0016D4  6E2B               	movwf	flash_sector_read@data+1,c
 38479  0016D6  EC3F  F044         	call	_flash_sector_read	;wreg free
 38480                           
 38481                           ;fat16.c: 279: sector_in_buffer = sector;
 38482  0016DA  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 38483  0016DE  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 38484                           
 38485                           ;fat16.c: 280: data_changed = 0;
 38486  0016E2  0E00               	movlw	0
 38487  0016E4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38488  0016E6                     l1987:
 38489                           
 38490                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 38491  0016E6  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 38492  0016E8  E104               	bnz	u8030
 38493  0016EA  0E02               	movlw	2
 38494  0016EC  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 38495  0016EE  A0D8               	btfss	status,0,c
 38496  0016F0  D05C               	goto	l1989
 38497  0016F2                     u8030:
 38498                           
 38499                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 38500  0016F2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38501  0016F6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38502  0016FA  0EC0               	movlw	low _buffer
 38503  0016FC  6E03               	movwf	__read_value_from_offset@buffer,c
 38504  0016FE  0E03               	movlw	high _buffer
 38505  001700  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38506  001702  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38507  001706  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38508  00170A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38509                           
 38510                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 38511  00170E  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38512  001710  E104               	bnz	u8040
 38513  001712  0E02               	movlw	2
 38514  001714  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38515  001716  A0D8               	btfss	status,0,c
 38516  001718  D006               	goto	u8050
 38517  00171A                     u8040:
 38518  00171A  0EDA               	movlw	218
 38519  00171C  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38520  00171E  0E1F               	movlw	31
 38521  001720  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38522  001722  A0D8               	btfss	status,0,c
 38523  001724  D068               	goto	l1999
 38524  001726                     u8050:
 38525                           
 38526                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 38527  001726  0E02               	movlw	2
 38528  001728  2449               	addwf	__make_cluster_chain@offset,w,c
 38529  00172A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 38530  00172C  0E00               	movlw	0
 38531  00172E  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 38532  001730  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 38533  001732  0EC0               	movlw	low _buffer
 38534  001734  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 38535  001736  0E03               	movlw	high _buffer
 38536  001738  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 38537  00173A  EC65  F03E         	call	__get_available_offset_from_buffer	;wreg free
 38538  00173E  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 38539  001742  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 38540                           
 38541                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 38542  001746  283C               	incf	__make_cluster_chain@next_offset,w,c
 38543  001748  E103               	bnz	u8060
 38544  00174A  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 38545  00174C  B4D8               	btfsc	status,2,c
 38546  00174E  D013               	goto	l1993
 38547  001750                     u8060:
 38548                           
 38549                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 38550  001750  0EFE               	movlw	254
 38551  001752  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 38552  001754  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 38553  001756  0EFF               	movlw	255
 38554  001758  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 38555  00175A  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38556                           
 38557                           ;fat16.c: 299: next_cluster <<= 8;
 38558  00175C  504B               	movf	__make_cluster_chain@next_cluster,w,c
 38559  00175E  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38560  001760  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 38561                           
 38562                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 38563  001762  90D8               	bcf	status,0,c
 38564  001764  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 38565  001766  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 38566  001768  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 38567  00176A  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 38568  00176C  503A               	movf	??__make_cluster_chain,w,c
 38569  00176E  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 38570  001770  503B               	movf	??__make_cluster_chain+1,w,c
 38571  001772  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 38572                           
 38573                           ;fat16.c: 301: }
 38574  001774  D00B               	goto	l1996
 38575  001776                     l1993:
 38576                           
 38577                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 38578  001776  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 38579  001778  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 38580  00177A  A4D8               	btfss	status,2,c
 38581  00177C  D003               	goto	l1995
 38582                           
 38583                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 38584  00177E  6836               	setf	?__make_cluster_chain,c
 38585  001780  6837               	setf	?__make_cluster_chain+1,c
 38586  001782  0012               	return	
 38587  001784                     l1995:
 38588                           
 38589                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 38590  001784  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 38591  001788  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 38592  00178C                     l1996:
 38593                           
 38594                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 38595  00178C  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38596  001790  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38597  001794  0EC0               	movlw	low _buffer
 38598  001796  6E03               	movwf	__write_value_to_offset@buffer,c
 38599  001798  0E03               	movlw	high _buffer
 38600  00179A  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38601  00179C  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 38602  0017A0  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 38603  0017A4  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38604  0017A8  D024               	goto	L49
 38605  0017AA                     l1989:
 38606                           
 38607                           ;fat16.c: 326: else if(remaining_clusters == 1)
 38608  0017AA  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 38609  0017AC  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38610  0017AE  A4D8               	btfss	status,2,c
 38611  0017B0  D026               	goto	l1998
 38612                           
 38613                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 38614  0017B2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38615  0017B6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38616  0017BA  0EC0               	movlw	low _buffer
 38617  0017BC  6E03               	movwf	__read_value_from_offset@buffer,c
 38618  0017BE  0E03               	movlw	high _buffer
 38619  0017C0  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38620  0017C2  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38621  0017C6  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38622  0017CA  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38623                           
 38624                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 38625  0017CE  284B               	incf	__make_cluster_chain@next_cluster,w,c
 38626  0017D0  E103               	bnz	u8090
 38627  0017D2  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 38628  0017D4  B4D8               	btfsc	status,2,c
 38629  0017D6  D00F               	goto	l1999
 38630  0017D8                     u8090:
 38631                           
 38632                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 38633  0017D8  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38634  0017DC  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38635  0017E0  0EC0               	movlw	low _buffer
 38636  0017E2  6E03               	movwf	__write_value_to_offset@buffer,c
 38637  0017E4  0E03               	movlw	high _buffer
 38638  0017E6  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38639  0017E8  0EFF               	movlw	255
 38640  0017EA  6E06               	movwf	__write_value_to_offset@value+1,c
 38641  0017EC  6805               	setf	__write_value_to_offset@value,c
 38642  0017EE  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38643  0017F2                     L49:
 38644                           
 38645                           ;fat16.c: 336: data_changed = 1;
 38646  0017F2  0E01               	movlw	1
 38647  0017F4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38648  0017F6                     l1999:
 38649                           
 38650                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 38651  0017F6  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 38652  0017F8  A0D8               	btfss	status,0,c
 38653  0017FA  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 38654                           
 38655                           ;fat16.c: 341: }
 38656  0017FC  D01E               	goto	l2000
 38657  0017FE                     l1998:
 38658                           
 38659                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 38660  0017FE  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38661  001802  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38662  001806  0EC0               	movlw	low _buffer
 38663  001808  6E03               	movwf	__read_value_from_offset@buffer,c
 38664  00180A  0E03               	movlw	high _buffer
 38665  00180C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38666  00180E  ECCD  F041         	call	__read_value_from_offset	;wreg free
 38667  001812  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38668  001816  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38669                           
 38670                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 38671  00181A  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38672  00181E  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38673  001822  0EC0               	movlw	low _buffer
 38674  001824  6E03               	movwf	__write_value_to_offset@buffer,c
 38675  001826  0E03               	movlw	high _buffer
 38676  001828  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38677  00182A  0E00               	movlw	0
 38678  00182C  6E06               	movwf	__write_value_to_offset@value+1,c
 38679  00182E  0E00               	movlw	0
 38680  001830  6E05               	movwf	__write_value_to_offset@value,c
 38681  001832  ECF3  F043         	call	__write_value_to_offset	;wreg free
 38682                           
 38683                           ;fat16.c: 352: data_changed = 1;
 38684  001836  0E01               	movlw	1
 38685  001838  6E42               	movwf	__make_cluster_chain@data_changed,c
 38686  00183A                     l2000:
 38687  00183A  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 38688  00183C  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38689  00183E  A4D8               	btfss	status,2,c
 38690  001840  D702               	goto	l1986
 38691  001842  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38692  001844  E104               	bnz	u8110
 38693  001846  0E02               	movlw	2
 38694  001848  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38695  00184A  A0D8               	btfss	status,0,c
 38696  00184C  D006               	goto	u8120
 38697  00184E                     u8110:
 38698  00184E  0EDA               	movlw	218
 38699  001850  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38700  001852  0E1F               	movlw	31
 38701  001854  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38702  001856  A0D8               	btfss	status,0,c
 38703  001858  D6F6               	goto	l1986
 38704  00185A                     u8120:
 38705                           
 38706                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 38707  00185A  5042               	movf	__make_cluster_chain@data_changed,w,c
 38708  00185C  B4D8               	btfsc	status,2,c
 38709  00185E  D00A               	goto	l2004
 38710                           
 38711                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 38712  001860  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38713  001864  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38714  001868  0EC0               	movlw	low _buffer
 38715  00186A  6E22               	movwf	flash_sector_write@data,c
 38716  00186C  0E03               	movlw	high _buffer
 38717  00186E  6E23               	movwf	flash_sector_write@data+1,c
 38718  001870  ECEE  F03F         	call	_flash_sector_write	;wreg free
 38719  001874                     l2004:
 38720                           
 38721                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 38722  001874  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38723  001876  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38724  001878  B4D8               	btfsc	status,2,c
 38725  00187A  D005               	goto	l2005
 38726                           
 38727                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 38728  00187C  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 38729  001880  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 38730                           
 38731                           ;fat16.c: 367: }
 38732  001884  0012               	return	
 38733  001886                     l2005:
 38734                           
 38735                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 38736  001886  0E00               	movlw	0
 38737  001888  6E37               	movwf	?__make_cluster_chain+1,c
 38738  00188A  0E00               	movlw	0
 38739  00188C  6E36               	movwf	?__make_cluster_chain,c
 38740  00188E  0012               	return	
 38741  001890                     __end_of__make_cluster_chain:
 38742                           	opt stack 0
 38743                           tosu	equ	0xFFF
 38744                           tosh	equ	0xFFE
 38745                           tosl	equ	0xFFD
 38746                           pclath	equ	0xFFA
 38747                           tblptru	equ	0xFF8
 38748                           tblptrh	equ	0xFF7
 38749                           tblptrl	equ	0xFF6
 38750                           tablat	equ	0xFF5
 38751                           prodh	equ	0xFF4
 38752                           prodl	equ	0xFF3
 38753                           intcon	equ	0xFF2
 38754                           intcon2	equ	0xFF1
 38755                           intcon3	equ	0xFF0
 38756                           indf0	equ	0xFEF
 38757                           postinc0	equ	0xFEE
 38758                           fsr0h	equ	0xFEA
 38759                           fsr0l	equ	0xFE9
 38760                           wreg	equ	0xFE8
 38761                           indf1	equ	0xFE7
 38762                           postdec1	equ	0xFE5
 38763                           plusw1	equ	0xFE3
 38764                           fsr1h	equ	0xFE2
 38765                           fsr1l	equ	0xFE1
 38766                           indf2	equ	0xFDF
 38767                           postinc2	equ	0xFDE
 38768                           postdec2	equ	0xFDD
 38769                           plusw2	equ	0xFDB
 38770                           fsr2h	equ	0xFDA
 38771                           fsr2l	equ	0xFD9
 38772                           status	equ	0xFD8
 38773                           
 38774 ;; *************** function _flash_sector_write *****************
 38775 ;; Defined at:
 38776 ;;		line 433 in file "flash.c"
 38777 ;; Parameters:    Size  Location     Type
 38778 ;;  page            2   31[COMRAM] unsigned int 
 38779 ;;  data            2   33[COMRAM] PTR unsigned char 
 38780 ;;		 -> buffer(512), msd_buffer(512), 
 38781 ;; Auto vars:     Size  Location     Type
 38782 ;;  match           1   35[COMRAM] enum E6906
 38783 ;; Return value:  Size  Location     Type
 38784 ;;                  1    wreg      void 
 38785 ;; Registers used:
 38786 ;;		wreg, status,2, status,0, cstack
 38787 ;; Tracked objects:
 38788 ;;		On entry : 0/0
 38789 ;;		On exit  : 0/0
 38790 ;;		Unchanged: 0/0
 38791 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38792 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38793 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38794 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38795 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38796 ;;Total ram usage:        5 bytes
 38797 ;; Hardware stack levels used:    1
 38798 ;; Hardware stack levels required when called:    4
 38799 ;; This function calls:
 38800 ;;		__flash_compare_page_to_buffer
 38801 ;;		__flash_write_page_from_buffer
 38802 ;;		__flash_write_to_buffer
 38803 ;;		_spi_set_configuration
 38804 ;; This function is called by:
 38805 ;;		_ExternalFlash_SectorWrite
 38806 ;;		__make_cluster_chain
 38807 ;;		_fat_format
 38808 ;; This function uses a non-reentrant model
 38809 ;;
 38810                           
 38811                           	psect	text197
 38812  007FDC                     __ptext197:
 38813                           	opt stack 0
 38814  007FDC                     _flash_sector_write:
 38815                           	opt stack 23
 38816                           
 38817                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 38818                           
 38819                           ;incstack = 0
 38820  007FDC  0E00               	movlw	0
 38821  007FDE  EC66  F023         	call	_spi_set_configuration
 38822                           
 38823                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 38824  007FE2  0E00               	movlw	0
 38825  007FE4  6E15               	movwf	__flash_write_to_buffer@start+1,c
 38826  007FE6  0E00               	movlw	0
 38827  007FE8  6E14               	movwf	__flash_write_to_buffer@start,c
 38828  007FEA  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 38829  007FEE  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 38830  007FF2  0E02               	movlw	2
 38831  007FF4  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 38832  007FF6  0E00               	movlw	0
 38833  007FF8  6E18               	movwf	__flash_write_to_buffer@data_length,c
 38834  007FFA  0E00               	movlw	0
 38835  007FFC  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 38836  007FFE  EC13  F041         	call	__flash_write_to_buffer	;wreg free
 38837                           
 38838                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 38839  008002  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 38840  008006  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 38841  00800A  0E00               	movlw	0
 38842  00800C  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 38843  00800E  EC7E  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 38844  008012  6E24               	movwf	flash_sector_write@match,c
 38845                           
 38846                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 38847  008014  0424               	decf	flash_sector_write@match,w,c
 38848  008016  A4D8               	btfss	status,2,c
 38849  008018  D008               	goto	l1837
 38850                           
 38851                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 38852  00801A  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 38853  00801E  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 38854  008022  0E00               	movlw	0
 38855  008024  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 38856  008026  ECEA  F03E         	call	__flash_write_page_from_buffer	;wreg free
 38857  00802A                     l1837:
 38858                           
 38859                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38860  00802A  0E01               	movlw	1
 38861  00802C  EC66  F023         	call	_spi_set_configuration
 38862  008030  0012               	return		;funcret
 38863  008032                     __end_of_flash_sector_write:
 38864                           	opt stack 0
 38865                           tosu	equ	0xFFF
 38866                           tosh	equ	0xFFE
 38867                           tosl	equ	0xFFD
 38868                           pclath	equ	0xFFA
 38869                           tblptru	equ	0xFF8
 38870                           tblptrh	equ	0xFF7
 38871                           tblptrl	equ	0xFF6
 38872                           tablat	equ	0xFF5
 38873                           prodh	equ	0xFF4
 38874                           prodl	equ	0xFF3
 38875                           intcon	equ	0xFF2
 38876                           intcon2	equ	0xFF1
 38877                           intcon3	equ	0xFF0
 38878                           indf0	equ	0xFEF
 38879                           postinc0	equ	0xFEE
 38880                           fsr0h	equ	0xFEA
 38881                           fsr0l	equ	0xFE9
 38882                           wreg	equ	0xFE8
 38883                           indf1	equ	0xFE7
 38884                           postdec1	equ	0xFE5
 38885                           plusw1	equ	0xFE3
 38886                           fsr1h	equ	0xFE2
 38887                           fsr1l	equ	0xFE1
 38888                           indf2	equ	0xFDF
 38889                           postinc2	equ	0xFDE
 38890                           postdec2	equ	0xFDD
 38891                           plusw2	equ	0xFDB
 38892                           fsr2h	equ	0xFDA
 38893                           fsr2l	equ	0xFD9
 38894                           status	equ	0xFD8
 38895                           
 38896 ;; *************** function __write_value_to_offset *****************
 38897 ;; Defined at:
 38898 ;;		line 123 in file "fat16.c"
 38899 ;; Parameters:    Size  Location     Type
 38900 ;;  offset          2    0[COMRAM] unsigned int 
 38901 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 38902 ;;		 -> buffer(512), 
 38903 ;;  value           2    4[COMRAM] unsigned int 
 38904 ;; Auto vars:     Size  Location     Type
 38905 ;;		None
 38906 ;; Return value:  Size  Location     Type
 38907 ;;                  1    wreg      void 
 38908 ;; Registers used:
 38909 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 38910 ;; Tracked objects:
 38911 ;;		On entry : 0/0
 38912 ;;		On exit  : 0/0
 38913 ;;		Unchanged: 0/0
 38914 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38915 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38916 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38917 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38918 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38919 ;;Total ram usage:        8 bytes
 38920 ;; Hardware stack levels used:    1
 38921 ;; This function calls:
 38922 ;;		Nothing
 38923 ;; This function is called by:
 38924 ;;		__make_cluster_chain
 38925 ;; This function uses a non-reentrant model
 38926 ;;
 38927                           
 38928                           	psect	text198
 38929  0087E6                     __ptext198:
 38930                           	opt stack 0
 38931  0087E6                     __write_value_to_offset:
 38932                           	opt stack 25
 38933                           
 38934                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 38935                           
 38936                           ;incstack = 0
 38937  0087E6  5001               	movf	__write_value_to_offset@offset,w,c
 38938  0087E8  2403               	addwf	__write_value_to_offset@buffer,w,c
 38939  0087EA  6ED9               	movwf	fsr2l,c
 38940  0087EC  5002               	movf	__write_value_to_offset@offset+1,w,c
 38941  0087EE  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 38942  0087F0  6EDA               	movwf	fsr2h,c
 38943  0087F2  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 38944                           
 38945                           ;fat16.c: 126: value >>= 8;
 38946  0087F6  5006               	movf	__write_value_to_offset@value+1,w,c
 38947  0087F8  6E05               	movwf	__write_value_to_offset@value,c
 38948  0087FA  6A06               	clrf	__write_value_to_offset@value+1,c
 38949                           
 38950                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 38951  0087FC  0E01               	movlw	1
 38952  0087FE  2401               	addwf	__write_value_to_offset@offset,w,c
 38953  008800  6E07               	movwf	??__write_value_to_offset& (0+255),c
 38954  008802  0E00               	movlw	0
 38955  008804  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 38956  008806  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 38957  008808  5007               	movf	??__write_value_to_offset,w,c
 38958  00880A  2403               	addwf	__write_value_to_offset@buffer,w,c
 38959  00880C  6ED9               	movwf	fsr2l,c
 38960  00880E  5008               	movf	??__write_value_to_offset+1,w,c
 38961  008810  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 38962  008812  6EDA               	movwf	fsr2h,c
 38963  008814  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 38964  008818  0012               	return		;funcret
 38965  00881A                     __end_of__write_value_to_offset:
 38966                           	opt stack 0
 38967                           tosu	equ	0xFFF
 38968                           tosh	equ	0xFFE
 38969                           tosl	equ	0xFFD
 38970                           pclath	equ	0xFFA
 38971                           tblptru	equ	0xFF8
 38972                           tblptrh	equ	0xFF7
 38973                           tblptrl	equ	0xFF6
 38974                           tablat	equ	0xFF5
 38975                           prodh	equ	0xFF4
 38976                           prodl	equ	0xFF3
 38977                           intcon	equ	0xFF2
 38978                           intcon2	equ	0xFF1
 38979                           intcon3	equ	0xFF0
 38980                           indf0	equ	0xFEF
 38981                           postinc0	equ	0xFEE
 38982                           fsr0h	equ	0xFEA
 38983                           fsr0l	equ	0xFE9
 38984                           wreg	equ	0xFE8
 38985                           indf1	equ	0xFE7
 38986                           postdec1	equ	0xFE5
 38987                           plusw1	equ	0xFE3
 38988                           fsr1h	equ	0xFE2
 38989                           fsr1l	equ	0xFE1
 38990                           indf2	equ	0xFDF
 38991                           postinc2	equ	0xFDE
 38992                           postdec2	equ	0xFDD
 38993                           plusw2	equ	0xFDB
 38994                           fsr2h	equ	0xFDA
 38995                           fsr2l	equ	0xFD9
 38996                           status	equ	0xFD8
 38997                           
 38998 ;; *************** function __get_available_cluster *****************
 38999 ;; Defined at:
 39000 ;;		line 130 in file "fat16.c"
 39001 ;; Parameters:    Size  Location     Type
 39002 ;;  first_sector    2   43[COMRAM] unsigned int 
 39003 ;;  skip_sector     2   45[COMRAM] unsigned int 
 39004 ;; Auto vars:     Size  Location     Type
 39005 ;;  sector          2   51[COMRAM] unsigned int 
 39006 ;;  offset          2   49[COMRAM] unsigned int 
 39007 ;;  cluster         2   47[COMRAM] unsigned int 
 39008 ;; Return value:  Size  Location     Type
 39009 ;;                  2   43[COMRAM] unsigned int 
 39010 ;; Registers used:
 39011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39012 ;; Tracked objects:
 39013 ;;		On entry : 0/0
 39014 ;;		On exit  : 0/0
 39015 ;;		Unchanged: 0/0
 39016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39017 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39018 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39020 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39021 ;;Total ram usage:       10 bytes
 39022 ;; Hardware stack levels used:    1
 39023 ;; Hardware stack levels required when called:    5
 39024 ;; This function calls:
 39025 ;;		__cluster_from_sector_and_offset
 39026 ;;		__get_available_offset_from_buffer
 39027 ;;		_flash_sector_read
 39028 ;; This function is called by:
 39029 ;;		__make_cluster_chain
 39030 ;; This function uses a non-reentrant model
 39031 ;;
 39032                           
 39033                           	psect	text199
 39034  0060E4                     __ptext199:
 39035                           	opt stack 0
 39036  0060E4                     __get_available_cluster:
 39037                           	opt stack 20
 39038                           
 39039                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 39040                           
 39041                           ;incstack = 0
 39042  0060E4  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 39043  0060E8  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 39044  0060EC                     l10861:
 39045  0060EC  5035               	movf	__get_available_cluster@sector+1,w,c
 39046  0060EE  E157               	bnz	l10893
 39047  0060F0  0E22               	movlw	34
 39048  0060F2  5C34               	subwf	__get_available_cluster@sector,w,c
 39049  0060F4  B0D8               	btfsc	status,0,c
 39050  0060F6  D053               	goto	u7460
 39051                           
 39052                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 39053  0060F8  502E               	movf	__get_available_cluster@skip_sector,w,c
 39054  0060FA  1834               	xorwf	__get_available_cluster@sector,w,c
 39055  0060FC  E104               	bnz	l10869
 39056  0060FE  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 39057  006100  1835               	xorwf	__get_available_cluster@sector+1,w,c
 39058  006102  B4D8               	btfsc	status,2,c
 39059  006104  D049               	goto	l1971
 39060  006106                     l10869:
 39061                           
 39062                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 39063  006106  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 39064  00610A  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 39065  00610E  0EC0               	movlw	low _buffer
 39066  006110  6E2A               	movwf	flash_sector_read@data,c
 39067  006112  0E03               	movlw	high _buffer
 39068  006114  6E2B               	movwf	flash_sector_read@data+1,c
 39069  006116  EC3F  F044         	call	_flash_sector_read	;wreg free
 39070                           
 39071                           ;fat16.c: 149: if(sector == 2)
 39072  00611A  0E02               	movlw	2
 39073  00611C  1834               	xorwf	__get_available_cluster@sector,w,c
 39074  00611E  1035               	iorwf	__get_available_cluster@sector+1,w,c
 39075  006120  A4D8               	btfss	status,2,c
 39076  006122  D00B               	goto	l1966
 39077                           
 39078                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 39079  006124  0E00               	movlw	0
 39080  006126  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39081  006128  0E04               	movlw	4
 39082  00612A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39083  00612C  0EC0               	movlw	low _buffer
 39084  00612E  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39085  006130  0E03               	movlw	high _buffer
 39086  006132  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39087  006134  EC65  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39088  006138  D00A               	goto	L45
 39089  00613A                     l1966:
 39090                           
 39091                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 39092  00613A  0E00               	movlw	0
 39093  00613C  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39094  00613E  0E00               	movlw	0
 39095  006140  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39096  006142  0EC0               	movlw	low _buffer
 39097  006144  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39098  006146  0E03               	movlw	high _buffer
 39099  006148  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39100  00614A  EC65  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39101  00614E                     L45:
 39102  00614E  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 39103  006152  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 39104                           
 39105                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 39106  006156  2832               	incf	__get_available_cluster@offset,w,c
 39107  006158  E103               	bnz	u7440
 39108  00615A  2833               	incf	__get_available_cluster@offset+1,w,c
 39109  00615C  B4D8               	btfsc	status,2,c
 39110  00615E  D01C               	goto	l1971
 39111  006160                     u7440:
 39112                           
 39113                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 39114  006160  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 39115  006164  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 39116  006168  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 39117  00616C  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 39118  006170  EC8A  F045         	call	__cluster_from_sector_and_offset	;wreg free
 39119  006174  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 39120  006178  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 39121                           
 39122                           ;fat16.c: 165: if(cluster > 8191)
 39123  00617C  0E20               	movlw	32
 39124  00617E  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 39125  006180  A0D8               	btfss	status,0,c
 39126  006182  D005               	goto	l1969
 39127                           
 39128                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 39129  006184  0E00               	movlw	0
 39130  006186  6E2D               	movwf	?__get_available_cluster+1,c
 39131  006188  0E00               	movlw	0
 39132  00618A  6E2C               	movwf	?__get_available_cluster,c
 39133  00618C  0012               	return	
 39134  00618E                     l1969:
 39135                           
 39136                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 39137  00618E  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 39138  006192  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 39139  006196  0012               	return	
 39140  006198                     l1971:
 39141  006198  4A34               	infsnz	__get_available_cluster@sector,f,c
 39142  00619A  2A35               	incf	__get_available_cluster@sector+1,f,c
 39143  00619C  D7A7               	goto	l10861
 39144  00619E                     u7460:
 39145  00619E                     l10893:
 39146                           
 39147                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 39148  00619E  0E00               	movlw	0
 39149  0061A0  6E2D               	movwf	?__get_available_cluster+1,c
 39150  0061A2  0E00               	movlw	0
 39151  0061A4  6E2C               	movwf	?__get_available_cluster,c
 39152  0061A6  0012               	return	
 39153  0061A8                     __end_of__get_available_cluster:
 39154                           	opt stack 0
 39155                           tosu	equ	0xFFF
 39156                           tosh	equ	0xFFE
 39157                           tosl	equ	0xFFD
 39158                           pclath	equ	0xFFA
 39159                           tblptru	equ	0xFF8
 39160                           tblptrh	equ	0xFF7
 39161                           tblptrl	equ	0xFF6
 39162                           tablat	equ	0xFF5
 39163                           prodh	equ	0xFF4
 39164                           prodl	equ	0xFF3
 39165                           intcon	equ	0xFF2
 39166                           intcon2	equ	0xFF1
 39167                           intcon3	equ	0xFF0
 39168                           indf0	equ	0xFEF
 39169                           postinc0	equ	0xFEE
 39170                           fsr0h	equ	0xFEA
 39171                           fsr0l	equ	0xFE9
 39172                           wreg	equ	0xFE8
 39173                           indf1	equ	0xFE7
 39174                           postdec1	equ	0xFE5
 39175                           plusw1	equ	0xFE3
 39176                           fsr1h	equ	0xFE2
 39177                           fsr1l	equ	0xFE1
 39178                           indf2	equ	0xFDF
 39179                           postinc2	equ	0xFDE
 39180                           postdec2	equ	0xFDD
 39181                           plusw2	equ	0xFDB
 39182                           fsr2h	equ	0xFDA
 39183                           fsr2l	equ	0xFD9
 39184                           status	equ	0xFD8
 39185                           
 39186 ;; *************** function __get_available_offset_from_buffer *****************
 39187 ;; Defined at:
 39188 ;;		line 98 in file "fat16.c"
 39189 ;; Parameters:    Size  Location     Type
 39190 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 39191 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 39192 ;;		 -> buffer(512), 
 39193 ;; Auto vars:     Size  Location     Type
 39194 ;;  offset          2    6[COMRAM] unsigned int 
 39195 ;; Return value:  Size  Location     Type
 39196 ;;                  2    0[COMRAM] unsigned int 
 39197 ;; Registers used:
 39198 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39199 ;; Tracked objects:
 39200 ;;		On entry : 0/0
 39201 ;;		On exit  : 0/0
 39202 ;;		Unchanged: 0/0
 39203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39204 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39205 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39206 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39207 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39208 ;;Total ram usage:        8 bytes
 39209 ;; Hardware stack levels used:    1
 39210 ;; This function calls:
 39211 ;;		Nothing
 39212 ;; This function is called by:
 39213 ;;		__get_available_cluster
 39214 ;;		__make_cluster_chain
 39215 ;; This function uses a non-reentrant model
 39216 ;;
 39217                           
 39218                           	psect	text200
 39219  007CCA                     __ptext200:
 39220                           	opt stack 0
 39221  007CCA                     __get_available_offset_from_buffer:
 39222                           	opt stack 25
 39223                           
 39224                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 39225                           
 39226                           ;incstack = 0
 39227  007CCA  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 39228  007CCE  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 39229  007CD2  D021               	goto	L46
 39230  007CD4                     
 39231                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 39232  007CD4  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 39233  007CD6  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39234  007CD8  6ED9               	movwf	fsr2l,c
 39235  007CDA  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 39236  007CDC  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39237  007CDE  6EDA               	movwf	fsr2h,c
 39238  007CE0  50DF               	movf	indf2,w,c
 39239  007CE2  A4D8               	btfss	status,2,c
 39240  007CE4  D014               	goto	l1952
 39241  007CE6  0E01               	movlw	1
 39242  007CE8  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 39243  007CEA  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 39244  007CEC  0E00               	movlw	0
 39245  007CEE  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 39246  007CF0  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 39247  007CF2  5005               	movf	??__get_available_offset_from_buffer,w,c
 39248  007CF4  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39249  007CF6  6ED9               	movwf	fsr2l,c
 39250  007CF8  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 39251  007CFA  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39252  007CFC  6EDA               	movwf	fsr2h,c
 39253  007CFE  50DF               	movf	indf2,w,c
 39254  007D00  A4D8               	btfss	status,2,c
 39255  007D02  D005               	goto	l1952
 39256                           
 39257                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 39258  007D04  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 39259  007D08  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 39260  007D0C  0012               	return	
 39261  007D0E                     l1952:
 39262  007D0E  0E02               	movlw	2
 39263  007D10  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 39264  007D12  0E00               	movlw	0
 39265  007D14  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 39266  007D16                     L46:
 39267  007D16  0E02               	movlw	2
 39268  007D18  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 39269  007D1A  A0D8               	btfss	status,0,c
 39270  007D1C  D7DB               	goto	l1950
 39271                           
 39272                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 39273  007D1E  6801               	setf	?__get_available_offset_from_buffer,c
 39274  007D20  6802               	setf	?__get_available_offset_from_buffer+1,c
 39275  007D22  0012               	return		;funcret
 39276  007D24                     __end_of__get_available_offset_from_buffer:
 39277                           	opt stack 0
 39278                           tosu	equ	0xFFF
 39279                           tosh	equ	0xFFE
 39280                           tosl	equ	0xFFD
 39281                           pclath	equ	0xFFA
 39282                           tblptru	equ	0xFF8
 39283                           tblptrh	equ	0xFF7
 39284                           tblptrl	equ	0xFF6
 39285                           tablat	equ	0xFF5
 39286                           prodh	equ	0xFF4
 39287                           prodl	equ	0xFF3
 39288                           intcon	equ	0xFF2
 39289                           intcon2	equ	0xFF1
 39290                           intcon3	equ	0xFF0
 39291                           indf0	equ	0xFEF
 39292                           postinc0	equ	0xFEE
 39293                           fsr0h	equ	0xFEA
 39294                           fsr0l	equ	0xFE9
 39295                           wreg	equ	0xFE8
 39296                           indf1	equ	0xFE7
 39297                           postdec1	equ	0xFE5
 39298                           plusw1	equ	0xFE3
 39299                           fsr1h	equ	0xFE2
 39300                           fsr1l	equ	0xFE1
 39301                           indf2	equ	0xFDF
 39302                           postinc2	equ	0xFDE
 39303                           postdec2	equ	0xFDD
 39304                           plusw2	equ	0xFDB
 39305                           fsr2h	equ	0xFDA
 39306                           fsr2l	equ	0xFD9
 39307                           status	equ	0xFD8
 39308                           
 39309 ;; *************** function __cluster_from_sector_and_offset *****************
 39310 ;; Defined at:
 39311 ;;		line 89 in file "fat16.c"
 39312 ;; Parameters:    Size  Location     Type
 39313 ;;  sector          2    0[COMRAM] unsigned int 
 39314 ;;  offset          2    2[COMRAM] unsigned int 
 39315 ;; Auto vars:     Size  Location     Type
 39316 ;;		None
 39317 ;; Return value:  Size  Location     Type
 39318 ;;                  2    0[COMRAM] unsigned int 
 39319 ;; Registers used:
 39320 ;;		wreg, status,2, status,0
 39321 ;; Tracked objects:
 39322 ;;		On entry : 0/0
 39323 ;;		On exit  : 0/0
 39324 ;;		Unchanged: 0/0
 39325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39329 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39330 ;;Total ram usage:        4 bytes
 39331 ;; Hardware stack levels used:    1
 39332 ;; This function calls:
 39333 ;;		Nothing
 39334 ;; This function is called by:
 39335 ;;		__get_available_cluster
 39336 ;; This function uses a non-reentrant model
 39337 ;;
 39338                           
 39339                           	psect	text201
 39340  008B14                     __ptext201:
 39341                           	opt stack 0
 39342  008B14                     __cluster_from_sector_and_offset:
 39343                           	opt stack 24
 39344                           
 39345                           ;fat16.c: 91: offset >>= 1;
 39346                           
 39347                           ;incstack = 0
 39348  008B14  90D8               	bcf	status,0,c
 39349  008B16  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 39350  008B18  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 39351                           
 39352                           ;fat16.c: 92: sector -= 2;
 39353  008B1A  0E02               	movlw	2
 39354  008B1C  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 39355  008B1E  0E00               	movlw	0
 39356  008B20  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 39357                           
 39358                           ;fat16.c: 93: sector <<= 8;
 39359  008B22  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 39360  008B24  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 39361  008B26  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 39362                           
 39363                           ;fat16.c: 94: sector |= offset;
 39364  008B28  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 39365  008B2A  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 39366  008B2C  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 39367  008B2E  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 39368                           
 39369                           ;fat16.c: 95: return sector;
 39370  008B30  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 39371  008B34  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 39372  008B38  0012               	return	
 39373  008B3A                     __end_of__cluster_from_sector_and_offset:
 39374                           	opt stack 0
 39375                           tosu	equ	0xFFF
 39376                           tosh	equ	0xFFE
 39377                           tosl	equ	0xFFD
 39378                           pclath	equ	0xFFA
 39379                           tblptru	equ	0xFF8
 39380                           tblptrh	equ	0xFF7
 39381                           tblptrl	equ	0xFF6
 39382                           tablat	equ	0xFF5
 39383                           prodh	equ	0xFF4
 39384                           prodl	equ	0xFF3
 39385                           intcon	equ	0xFF2
 39386                           intcon2	equ	0xFF1
 39387                           intcon3	equ	0xFF0
 39388                           indf0	equ	0xFEF
 39389                           postinc0	equ	0xFEE
 39390                           fsr0h	equ	0xFEA
 39391                           fsr0l	equ	0xFE9
 39392                           wreg	equ	0xFE8
 39393                           indf1	equ	0xFE7
 39394                           postdec1	equ	0xFE5
 39395                           plusw1	equ	0xFE3
 39396                           fsr1h	equ	0xFE2
 39397                           fsr1l	equ	0xFE1
 39398                           indf2	equ	0xFDF
 39399                           postinc2	equ	0xFDE
 39400                           postdec2	equ	0xFDD
 39401                           plusw2	equ	0xFDB
 39402                           fsr2h	equ	0xFDA
 39403                           fsr2l	equ	0xFD9
 39404                           status	equ	0xFD8
 39405                           
 39406 ;; *************** function _fat_modify_file *****************
 39407 ;; Defined at:
 39408 ;;		line 901 in file "fat16.c"
 39409 ;; Parameters:    Size  Location     Type
 39410 ;;  file_number     1    wreg     unsigned char 
 39411 ;;  start_byte      4   65[COMRAM] unsigned long 
 39412 ;;  length          2   69[COMRAM] unsigned int 
 39413 ;;  data            2   71[COMRAM] PTR unsigned char 
 39414 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39415 ;; Auto vars:     Size  Location     Type
 39416 ;;  file_number     1    2[BANK0 ] unsigned char 
 39417 ;;  root           32   14[BANK0 ] struct .
 39418 ;;  position        4   10[BANK0 ] unsigned long 
 39419 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 39420 ;;  offset          2    6[BANK0 ] unsigned int 
 39421 ;;  cluster         2    4[BANK0 ] unsigned int 
 39422 ;;  sector          2    0[BANK0 ] unsigned int 
 39423 ;;  return_code     1    3[BANK0 ] unsigned char 
 39424 ;; Return value:  Size  Location     Type
 39425 ;;                  1    wreg      void 
 39426 ;; Registers used:
 39427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39428 ;; Tracked objects:
 39429 ;;		On entry : 0/0
 39430 ;;		On exit  : 0/0
 39431 ;;		Unchanged: 0/0
 39432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39433 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39434 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39435 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39436 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39437 ;;Total ram usage:       66 bytes
 39438 ;; Hardware stack levels used:    1
 39439 ;; Hardware stack levels required when called:    7
 39440 ;; This function calls:
 39441 ;;		__data_sector_from_cluster
 39442 ;;		__find_nth_cluster
 39443 ;;		__read_fat
 39444 ;;		_fat_get_file_information
 39445 ;;		_flash_partial_write
 39446 ;; This function is called by:
 39447 ;;		_fat_append_to_file
 39448 ;;		__parse_file_modify
 39449 ;; This function uses a non-reentrant model
 39450 ;;
 39451                           
 39452                           	psect	text202
 39453  002284                     __ptext202:
 39454                           	opt stack 0
 39455  002284                     _fat_modify_file:
 39456                           	opt stack 20
 39457                           
 39458                           ;incstack = 0
 39459                           ;fat_modify_file@file_number stored from wreg
 39460  002284  0100               	movlb	0	; () banked
 39461  002286  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 39462                           
 39463                           ;fat16.c: 903: rootEntry_t root;;fat16.c: 904: uint16_t cluster;;fat16.c: 905: uint32_t 
      +                          position;;fat16.c: 906: uint16_t offset;;fat16.c: 907: uint16_t sector;;fat16.c: 908: ui
      +                          nt16_t number_of_bytes;;fat16.c: 909: uint8_t return_code;;fat16.c: 912: return_code = f
      +                          at_get_file_information(file_number, &root);
 39464  002288  0E6E               	movlw	low fat_modify_file@root
 39465  00228A  6E30               	movwf	fat_get_file_information@data,c
 39466  00228C  0E00               	movlw	high fat_modify_file@root
 39467  00228E  6E31               	movwf	fat_get_file_information@data+1,c
 39468  002290  0100               	movlb	0	; () banked
 39469  002292  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 39470  002294  EC2F  F03B         	call	_fat_get_file_information
 39471  002298  0100               	movlb	0	; () banked
 39472  00229A  6F63               	movwf	fat_modify_file@return_code& (0+255),b
 39473                           
 39474                           ; BSR set to: 0
 39475                           ;fat16.c: 913: if(return_code!=0x00)
 39476  00229C  5163               	movf	fat_modify_file@return_code& (0+255),w,b
 39477  00229E  A4D8               	btfss	status,2,c
 39478  0022A0  0012               	return	
 39479                           
 39480                           ; BSR set to: 0
 39481                           ;fat16.c: 917: };fat16.c: 920: if(start_byte>root.fileSize)
 39482                           
 39483                           ; BSR set to: 0
 39484                           
 39485                           ; BSR set to: 0
 39486                           ;fat16.c: 914: {;fat16.c: 916: return;
 39487  0022A2  5042               	movf	fat_modify_file@start_byte,w,c
 39488  0022A4  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39489  0022A6  5043               	movf	fat_modify_file@start_byte+1,w,c
 39490  0022A8  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39491  0022AA  5044               	movf	fat_modify_file@start_byte+2,w,c
 39492  0022AC  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39493  0022AE  5045               	movf	fat_modify_file@start_byte+3,w,c
 39494  0022B0  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39495  0022B2  A0D8               	btfss	status,0,c
 39496  0022B4  0012               	return	
 39497                           
 39498                           ; BSR set to: 0
 39499                           ;fat16.c: 924: };fat16.c: 926: if((start_byte+length) > root.fileSize)
 39500                           
 39501                           ; BSR set to: 0
 39502                           
 39503                           ; BSR set to: 0
 39504                           ;fat16.c: 921: {;fat16.c: 923: return;
 39505  0022B6  5046               	movf	fat_modify_file@length,w,c
 39506  0022B8  2442               	addwf	fat_modify_file@start_byte,w,c
 39507  0022BA  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39508  0022BC  5047               	movf	fat_modify_file@length+1,w,c
 39509  0022BE  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 39510  0022C0  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39511  0022C2  0E00               	movlw	0
 39512  0022C4  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 39513  0022C6  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 39514  0022C8  0E00               	movlw	0
 39515  0022CA  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 39516  0022CC  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 39517  0022CE  504A               	movf	??_fat_modify_file,w,c
 39518  0022D0  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39519  0022D2  504B               	movf	??_fat_modify_file+1,w,c
 39520  0022D4  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39521  0022D6  504C               	movf	??_fat_modify_file+2,w,c
 39522  0022D8  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39523  0022DA  504D               	movf	??_fat_modify_file+3,w,c
 39524  0022DC  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39525  0022DE  B0D8               	btfsc	status,0,c
 39526  0022E0  D00E               	goto	l2108
 39527                           
 39528                           ; BSR set to: 0
 39529                           ;fat16.c: 927: {;fat16.c: 929: length = root.fileSize - start_byte;
 39530  0022E2  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39531  0022E6  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39532  0022EA  1E4A               	comf	??_fat_modify_file,f,c
 39533  0022EC  1E4B               	comf	??_fat_modify_file+1,f,c
 39534  0022EE  4A4A               	infsnz	??_fat_modify_file,f,c
 39535  0022F0  2A4B               	incf	??_fat_modify_file+1,f,c
 39536  0022F2  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 39537  0022F4  244A               	addwf	??_fat_modify_file,w,c
 39538  0022F6  6E46               	movwf	fat_modify_file@length,c
 39539  0022F8  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 39540  0022FA  204B               	addwfc	??_fat_modify_file+1,w,c
 39541  0022FC  6E47               	movwf	fat_modify_file@length+1,c
 39542  0022FE                     l2108:
 39543                           
 39544                           ; BSR set to: 0
 39545                           ;fat16.c: 930: };fat16.c: 933: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 39546                           
 39547                           ; BSR set to: 0
 39548  0022FE  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 39549  002302  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 39550  002306  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39551  00230A  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39552  00230E  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 39553  002312  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 39554  002316  0E0A               	movlw	10
 39555  002318  D005               	goto	u9310
 39556  00231A                     u9315:
 39557  00231A  90D8               	bcf	status,0,c
 39558  00231C  324D               	rrcf	??_fat_modify_file+3,f,c
 39559  00231E  324C               	rrcf	??_fat_modify_file+2,f,c
 39560  002320  324B               	rrcf	??_fat_modify_file+1,f,c
 39561  002322  324A               	rrcf	??_fat_modify_file,f,c
 39562  002324                     u9310:
 39563  002324  2EE8               	decfsz	wreg,f,c
 39564  002326  D7F9               	goto	u9315
 39565  002328  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 39566  00232C  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 39567  002330  ECCF  F035         	call	__find_nth_cluster	;wreg free
 39568  002334  C038  F064         	movff	?__find_nth_cluster,fat_modify_file@cluster
 39569  002338  C039  F065         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 39570                           
 39571                           ;fat16.c: 936: position = start_byte &= 0xFFFFFE00;
 39572  00233C  0E00               	movlw	0
 39573  00233E  1642               	andwf	fat_modify_file@start_byte,f,c
 39574  002340  0EFE               	movlw	254
 39575  002342  1643               	andwf	fat_modify_file@start_byte+1,f,c
 39576  002344  0EFF               	movlw	255
 39577  002346  1644               	andwf	fat_modify_file@start_byte+2,f,c
 39578  002348  0EFF               	movlw	255
 39579  00234A  1645               	andwf	fat_modify_file@start_byte+3,f,c
 39580  00234C  C042  F06A         	movff	fat_modify_file@start_byte,fat_modify_file@position
 39581  002350  C043  F06B         	movff	fat_modify_file@start_byte+1,fat_modify_file@position+1
 39582  002354  C044  F06C         	movff	fat_modify_file@start_byte+2,fat_modify_file@position+2
 39583  002358  C045  F06D         	movff	fat_modify_file@start_byte+3,fat_modify_file@position+3
 39584                           
 39585                           ;fat16.c: 939: offset = (uint16_t) (start_byte-position);
 39586  00235C  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39587  002360  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39588  002364  1E4A               	comf	??_fat_modify_file,f,c
 39589  002366  1E4B               	comf	??_fat_modify_file+1,f,c
 39590  002368  4A4A               	infsnz	??_fat_modify_file,f,c
 39591  00236A  2A4B               	incf	??_fat_modify_file+1,f,c
 39592  00236C  5042               	movf	fat_modify_file@start_byte,w,c
 39593  00236E  244A               	addwf	??_fat_modify_file,w,c
 39594  002370  0100               	movlb	0	; () banked
 39595  002372  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39596  002374  5043               	movf	fat_modify_file@start_byte+1,w,c
 39597  002376  204B               	addwfc	??_fat_modify_file+1,w,c
 39598  002378  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39599                           
 39600                           ; BSR set to: 0
 39601                           ;fat16.c: 942: position = 0;
 39602  00237A  0E00               	movlw	0
 39603  00237C  6F6A               	movwf	fat_modify_file@position& (0+255),b
 39604  00237E  0E00               	movlw	0
 39605  002380  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 39606  002382  0E00               	movlw	0
 39607  002384  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 39608  002386  0E00               	movlw	0
 39609  002388  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 39610                           
 39611                           ;fat16.c: 943: while(position < length)
 39612  00238A  D089               	goto	l2109
 39613  00238C                     
 39614                           ; BSR set to: 0
 39615                           ;fat16.c: 944: {;fat16.c: 946: if(offset==512)
 39616                           
 39617                           ; BSR set to: 0
 39618  00238C  0E02               	movlw	2
 39619  00238E  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 39620  002390  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 39621  002392  A4D8               	btfss	status,2,c
 39622  002394  D00F               	goto	l2111
 39623                           
 39624                           ; BSR set to: 0
 39625                           ;fat16.c: 947: {;fat16.c: 949: cluster = _read_fat(cluster);
 39626  002396  C064  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 39627  00239A  C065  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 39628  00239E  EC19  F040         	call	__read_fat	;wreg free
 39629  0023A2  C030  F064         	movff	?__read_fat,fat_modify_file@cluster
 39630  0023A6  C031  F065         	movff	?__read_fat+1,fat_modify_file@cluster+1
 39631                           
 39632                           ;fat16.c: 951: offset = 0;
 39633  0023AA  0E00               	movlw	0
 39634  0023AC  0100               	movlb	0	; () banked
 39635  0023AE  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39636  0023B0  0E00               	movlw	0
 39637  0023B2  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39638  0023B4                     l2111:
 39639                           
 39640                           ; BSR set to: 0
 39641                           ;fat16.c: 952: };fat16.c: 955: sector = _data_sector_from_cluster(cluster);
 39642                           
 39643                           ; BSR set to: 0
 39644  0023B4  C064  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 39645  0023B8  C065  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 39646  0023BC  EC62  F047         	call	__data_sector_from_cluster	;wreg free
 39647  0023C0  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 39648  0023C4  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 39649                           
 39650                           ;fat16.c: 958: number_of_bytes = 512 - offset;
 39651  0023C8  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 39652  0023CC  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 39653  0023D0  1E4A               	comf	??_fat_modify_file,f,c
 39654  0023D2  1E4B               	comf	??_fat_modify_file+1,f,c
 39655  0023D4  4A4A               	infsnz	??_fat_modify_file,f,c
 39656  0023D6  2A4B               	incf	??_fat_modify_file+1,f,c
 39657  0023D8  0E00               	movlw	0
 39658  0023DA  244A               	addwf	??_fat_modify_file,w,c
 39659  0023DC  0100               	movlb	0	; () banked
 39660  0023DE  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39661  0023E0  0E02               	movlw	2
 39662  0023E2  204B               	addwfc	??_fat_modify_file+1,w,c
 39663  0023E4  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39664                           
 39665                           ; BSR set to: 0
 39666                           ;fat16.c: 959: if(number_of_bytes > (length-position))
 39667  0023E6  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39668  0023E8  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39669  0023EA  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39670  0023EC  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39671  0023EE  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39672  0023F0  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39673  0023F2  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 39674  0023F6  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 39675  0023FA  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 39676  0023FE  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 39677  002402  1E4E               	comf	??_fat_modify_file+4,f,c
 39678  002404  1E4F               	comf	??_fat_modify_file+5,f,c
 39679  002406  1E50               	comf	??_fat_modify_file+6,f,c
 39680  002408  1E51               	comf	??_fat_modify_file+7,f,c
 39681  00240A  2A4E               	incf	??_fat_modify_file+4,f,c
 39682  00240C  0E00               	movlw	0
 39683  00240E  224F               	addwfc	??_fat_modify_file+5,f,c
 39684  002410  2250               	addwfc	??_fat_modify_file+6,f,c
 39685  002412  2251               	addwfc	??_fat_modify_file+7,f,c
 39686  002414  5046               	movf	fat_modify_file@length,w,c
 39687  002416  244E               	addwf	??_fat_modify_file+4,w,c
 39688  002418  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 39689  00241A  5047               	movf	fat_modify_file@length+1,w,c
 39690  00241C  204F               	addwfc	??_fat_modify_file+5,w,c
 39691  00241E  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 39692  002420  0E00               	movlw	0
 39693  002422  2050               	addwfc	??_fat_modify_file+6,w,c
 39694  002424  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 39695  002426  0E00               	movlw	0
 39696  002428  2051               	addwfc	??_fat_modify_file+7,w,c
 39697  00242A  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 39698  00242C  504A               	movf	??_fat_modify_file,w,c
 39699  00242E  5C52               	subwf	??_fat_modify_file+8,w,c
 39700  002430  504B               	movf	??_fat_modify_file+1,w,c
 39701  002432  5853               	subwfb	??_fat_modify_file+9,w,c
 39702  002434  504C               	movf	??_fat_modify_file+2,w,c
 39703  002436  5854               	subwfb	??_fat_modify_file+10,w,c
 39704  002438  504D               	movf	??_fat_modify_file+3,w,c
 39705  00243A  5855               	subwfb	??_fat_modify_file+11,w,c
 39706  00243C  B0D8               	btfsc	status,0,c
 39707  00243E  D00E               	goto	l2112
 39708                           
 39709                           ; BSR set to: 0
 39710                           ;fat16.c: 960: {;fat16.c: 961: number_of_bytes = length - position;
 39711  002440  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39712  002444  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39713  002448  1E4A               	comf	??_fat_modify_file,f,c
 39714  00244A  1E4B               	comf	??_fat_modify_file+1,f,c
 39715  00244C  4A4A               	infsnz	??_fat_modify_file,f,c
 39716  00244E  2A4B               	incf	??_fat_modify_file+1,f,c
 39717  002450  5046               	movf	fat_modify_file@length,w,c
 39718  002452  244A               	addwf	??_fat_modify_file,w,c
 39719  002454  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39720  002456  5047               	movf	fat_modify_file@length+1,w,c
 39721  002458  204B               	addwfc	??_fat_modify_file+1,w,c
 39722  00245A  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39723  00245C                     l2112:
 39724                           
 39725                           ; BSR set to: 0
 39726                           ;fat16.c: 962: };fat16.c: 965: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 39727                           
 39728                           ; BSR set to: 0
 39729  00245C  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 39730  002460  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 39731  002464  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 39732  002468  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 39733  00246C  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 39734  002470  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 39735  002474  516A               	movf	fat_modify_file@position& (0+255),w,b
 39736  002476  2448               	addwf	fat_modify_file@data,w,c
 39737  002478  6E26               	movwf	flash_partial_write@data,c
 39738  00247A  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 39739  00247C  2049               	addwfc	fat_modify_file@data+1,w,c
 39740  00247E  6E27               	movwf	flash_partial_write@data+1,c
 39741  002480  ECA0  F03B         	call	_flash_partial_write	;wreg free
 39742                           
 39743                           ;fat16.c: 968: position += number_of_bytes;
 39744  002484  0100               	movlb	0	; () banked
 39745  002486  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39746  002488  276A               	addwf	fat_modify_file@position& (0+255),f,b
 39747  00248A  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39748  00248C  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 39749  00248E  0E00               	movlw	0
 39750  002490  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 39751  002492  0E00               	movlw	0
 39752  002494  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 39753                           
 39754                           ; BSR set to: 0
 39755                           ;fat16.c: 969: offset += number_of_bytes;
 39756  002496  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39757  002498  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 39758  00249A  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39759  00249C  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 39760  00249E                     l2109:
 39761                           
 39762                           ; BSR set to: 0
 39763                           
 39764                           ; BSR set to: 0
 39765  00249E  5046               	movf	fat_modify_file@length,w,c
 39766  0024A0  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39767  0024A2  5047               	movf	fat_modify_file@length+1,w,c
 39768  0024A4  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39769  0024A6  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39770  0024A8  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39771  0024AA  504A               	movf	??_fat_modify_file,w,c
 39772  0024AC  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 39773  0024AE  504B               	movf	??_fat_modify_file+1,w,c
 39774  0024B0  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 39775  0024B2  504C               	movf	??_fat_modify_file+2,w,c
 39776  0024B4  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 39777  0024B6  504D               	movf	??_fat_modify_file+3,w,c
 39778  0024B8  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 39779  0024BA  B0D8               	btfsc	status,0,c
 39780  0024BC  0012               	return	
 39781  0024BE  D766               	goto	l2110
 39782  0024C0                     __end_of_fat_modify_file:
 39783                           	opt stack 0
 39784                           tosu	equ	0xFFF
 39785                           tosh	equ	0xFFE
 39786                           tosl	equ	0xFFD
 39787                           pclath	equ	0xFFA
 39788                           tblptru	equ	0xFF8
 39789                           tblptrh	equ	0xFF7
 39790                           tblptrl	equ	0xFF6
 39791                           tablat	equ	0xFF5
 39792                           prodh	equ	0xFF4
 39793                           prodl	equ	0xFF3
 39794                           intcon	equ	0xFF2
 39795                           intcon2	equ	0xFF1
 39796                           intcon3	equ	0xFF0
 39797                           indf0	equ	0xFEF
 39798                           postinc0	equ	0xFEE
 39799                           fsr0h	equ	0xFEA
 39800                           fsr0l	equ	0xFE9
 39801                           wreg	equ	0xFE8
 39802                           indf1	equ	0xFE7
 39803                           postdec1	equ	0xFE5
 39804                           plusw1	equ	0xFE3
 39805                           fsr1h	equ	0xFE2
 39806                           fsr1l	equ	0xFE1
 39807                           indf2	equ	0xFDF
 39808                           postinc2	equ	0xFDE
 39809                           postdec2	equ	0xFDD
 39810                           plusw2	equ	0xFDB
 39811                           fsr2h	equ	0xFDA
 39812                           fsr2l	equ	0xFD9
 39813                           status	equ	0xFD8
 39814                           
 39815 ;; *************** function _flash_partial_write *****************
 39816 ;; Defined at:
 39817 ;;		line 471 in file "flash.c"
 39818 ;; Parameters:    Size  Location     Type
 39819 ;;  page            2   31[COMRAM] unsigned int 
 39820 ;;  start           2   33[COMRAM] unsigned int 
 39821 ;;  length          2   35[COMRAM] unsigned int 
 39822 ;;  data            2   37[COMRAM] PTR unsigned char 
 39823 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 39824 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 39825 ;; Auto vars:     Size  Location     Type
 39826 ;;  match           1   39[COMRAM] enum E6906
 39827 ;; Return value:  Size  Location     Type
 39828 ;;                  1    wreg      void 
 39829 ;; Registers used:
 39830 ;;		wreg, status,2, status,0, cstack
 39831 ;; Tracked objects:
 39832 ;;		On entry : 0/0
 39833 ;;		On exit  : 0/0
 39834 ;;		Unchanged: 0/0
 39835 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39836 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39837 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39838 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39839 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39840 ;;Total ram usage:        9 bytes
 39841 ;; Hardware stack levels used:    1
 39842 ;; Hardware stack levels required when called:    4
 39843 ;; This function calls:
 39844 ;;		__flash_compare_page_to_buffer
 39845 ;;		__flash_copy_page_to_buffer
 39846 ;;		__flash_is_busy
 39847 ;;		__flash_write_page_from_buffer
 39848 ;;		__flash_write_to_buffer
 39849 ;;		_spi_set_configuration
 39850 ;; This function is called by:
 39851 ;;		__write_root
 39852 ;;		__delete_root
 39853 ;;		_fat_modify_file
 39854 ;; This function uses a non-reentrant model
 39855 ;;
 39856                           
 39857                           	psect	text203
 39858  007740                     __ptext203:
 39859                           	opt stack 0
 39860  007740                     _flash_partial_write:
 39861                           	opt stack 21
 39862                           
 39863                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 39864                           
 39865                           ; BSR set to: 0
 39866                           ;incstack = 0
 39867  007740  0E00               	movlw	0
 39868  007742  EC66  F023         	call	_spi_set_configuration
 39869  007746  EC2C  F046         	call	__flash_is_busy	;wreg free
 39870  00774A  0900               	iorlw	0
 39871  00774C  A4D8               	btfss	status,2,c
 39872  00774E  D7FB               	goto	l1845
 39873                           
 39874                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 39875  007750  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 39876  007754  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 39877  007758  0E00               	movlw	0
 39878  00775A  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 39879  00775C  ECBE  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 39880                           
 39881                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 39882  007760  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 39883  007764  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 39884  007768  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 39885  00776C  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 39886  007770  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 39887  007774  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 39888  007778  0E00               	movlw	0
 39889  00777A  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 39890  00777C  EC13  F041         	call	__flash_write_to_buffer	;wreg free
 39891                           
 39892                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 39893  007780  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 39894  007784  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 39895  007788  0E00               	movlw	0
 39896  00778A  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 39897  00778C  EC7E  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 39898  007790  6E28               	movwf	flash_partial_write@match,c
 39899                           
 39900                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 39901  007792  0428               	decf	flash_partial_write@match,w,c
 39902  007794  A4D8               	btfss	status,2,c
 39903  007796  D008               	goto	l1847
 39904                           
 39905                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 39906  007798  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 39907  00779C  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 39908  0077A0  0E00               	movlw	0
 39909  0077A2  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 39910  0077A4  ECEA  F03E         	call	__flash_write_page_from_buffer	;wreg free
 39911  0077A8                     l1847:
 39912                           
 39913                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 39914  0077A8  0E01               	movlw	1
 39915  0077AA  EC66  F023         	call	_spi_set_configuration
 39916  0077AE  0012               	return		;funcret
 39917  0077B0                     __end_of_flash_partial_write:
 39918                           	opt stack 0
 39919                           tosu	equ	0xFFF
 39920                           tosh	equ	0xFFE
 39921                           tosl	equ	0xFFD
 39922                           pclath	equ	0xFFA
 39923                           tblptru	equ	0xFF8
 39924                           tblptrh	equ	0xFF7
 39925                           tblptrl	equ	0xFF6
 39926                           tablat	equ	0xFF5
 39927                           prodh	equ	0xFF4
 39928                           prodl	equ	0xFF3
 39929                           intcon	equ	0xFF2
 39930                           intcon2	equ	0xFF1
 39931                           intcon3	equ	0xFF0
 39932                           indf0	equ	0xFEF
 39933                           postinc0	equ	0xFEE
 39934                           fsr0h	equ	0xFEA
 39935                           fsr0l	equ	0xFE9
 39936                           wreg	equ	0xFE8
 39937                           indf1	equ	0xFE7
 39938                           postdec1	equ	0xFE5
 39939                           plusw1	equ	0xFE3
 39940                           fsr1h	equ	0xFE2
 39941                           fsr1l	equ	0xFE1
 39942                           indf2	equ	0xFDF
 39943                           postinc2	equ	0xFDE
 39944                           postdec2	equ	0xFDD
 39945                           plusw2	equ	0xFDB
 39946                           fsr2h	equ	0xFDA
 39947                           fsr2l	equ	0xFD9
 39948                           status	equ	0xFD8
 39949                           
 39950 ;; *************** function __flash_write_to_buffer *****************
 39951 ;; Defined at:
 39952 ;;		line 232 in file "flash.c"
 39953 ;; Parameters:    Size  Location     Type
 39954 ;;  start           2   19[COMRAM] unsigned int 
 39955 ;;  data            2   21[COMRAM] PTR unsigned char 
 39956 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 39957 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 39958 ;;  data_length     2   23[COMRAM] unsigned int 
 39959 ;;  buffer          1   25[COMRAM] enum E6902
 39960 ;; Auto vars:     Size  Location     Type
 39961 ;;  command         4   26[COMRAM] unsigned char [4]
 39962 ;; Return value:  Size  Location     Type
 39963 ;;                  1    wreg      void 
 39964 ;; Registers used:
 39965 ;;		wreg, status,2, status,0, cstack
 39966 ;; Tracked objects:
 39967 ;;		On entry : 0/0
 39968 ;;		On exit  : 0/0
 39969 ;;		Unchanged: 0/0
 39970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39971 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39972 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39973 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39974 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39975 ;;Total ram usage:       11 bytes
 39976 ;; Hardware stack levels used:    1
 39977 ;; Hardware stack levels required when called:    3
 39978 ;; This function calls:
 39979 ;;		__flash_is_busy
 39980 ;;		_spi_tx_tx
 39981 ;; This function is called by:
 39982 ;;		_flash_sector_write
 39983 ;;		_flash_partial_write
 39984 ;;		_flash_write_to_buffer
 39985 ;; This function uses a non-reentrant model
 39986 ;;
 39987                           
 39988                           	psect	text204
 39989  008226                     __ptext204:
 39990                           	opt stack 0
 39991  008226                     __flash_write_to_buffer:
 39992                           	opt stack 23
 39993                           
 39994                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 39995                           
 39996                           ;incstack = 0
 39997  008226  EC2C  F046         	call	__flash_is_busy	;wreg free
 39998  00822A  0900               	iorlw	0
 39999  00822C  A4D8               	btfss	status,2,c
 40000  00822E  D7FB               	goto	__flash_write_to_buffer
 40001                           
 40002                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 40003  008230  501A               	movf	__flash_write_to_buffer@buffer,w,c
 40004  008232  A4D8               	btfss	status,2,c
 40005  008234  D002               	goto	l1786
 40006                           
 40007                           ;flash.c: 241: command[0] = 0x84;
 40008  008236  0E84               	movlw	132
 40009  008238  6E1B               	movwf	__flash_write_to_buffer@command,c
 40010  00823A                     l1786:
 40011                           
 40012                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 40013  00823A  041A               	decf	__flash_write_to_buffer@buffer,w,c
 40014  00823C  A4D8               	btfss	status,2,c
 40015  00823E  D002               	goto	l1787
 40016                           
 40017                           ;flash.c: 243: command[0] = 0x87;
 40018  008240  0E87               	movlw	135
 40019  008242  6E1B               	movwf	__flash_write_to_buffer@command,c
 40020  008244                     l1787:
 40021                           
 40022                           ;flash.c: 245: command[1] = 0x00;
 40023  008244  0E00               	movlw	0
 40024  008246  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 40025                           
 40026                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 40027  008248  5015               	movf	__flash_write_to_buffer@start+1,w,c
 40028  00824A  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 40029                           
 40030                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 40031  00824C  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 40032                           
 40033                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 40034  008250  0E1B               	movlw	low __flash_write_to_buffer@command
 40035  008252  6E01               	movwf	spi_tx_tx@command,c
 40036  008254  0E00               	movlw	high __flash_write_to_buffer@command
 40037  008256  6E02               	movwf	spi_tx_tx@command+1,c
 40038  008258  0E00               	movlw	0
 40039  00825A  6E04               	movwf	spi_tx_tx@command_length+1,c
 40040  00825C  0E04               	movlw	4
 40041  00825E  6E03               	movwf	spi_tx_tx@command_length,c
 40042  008260  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 40043  008264  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 40044  008268  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 40045  00826C  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 40046  008270  EC6F  F038         	call	_spi_tx_tx	;wreg free
 40047  008274  0012               	return		;funcret
 40048  008276                     __end_of__flash_write_to_buffer:
 40049                           	opt stack 0
 40050                           tosu	equ	0xFFF
 40051                           tosh	equ	0xFFE
 40052                           tosl	equ	0xFFD
 40053                           pclath	equ	0xFFA
 40054                           tblptru	equ	0xFF8
 40055                           tblptrh	equ	0xFF7
 40056                           tblptrl	equ	0xFF6
 40057                           tablat	equ	0xFF5
 40058                           prodh	equ	0xFF4
 40059                           prodl	equ	0xFF3
 40060                           intcon	equ	0xFF2
 40061                           intcon2	equ	0xFF1
 40062                           intcon3	equ	0xFF0
 40063                           indf0	equ	0xFEF
 40064                           postinc0	equ	0xFEE
 40065                           fsr0h	equ	0xFEA
 40066                           fsr0l	equ	0xFE9
 40067                           wreg	equ	0xFE8
 40068                           indf1	equ	0xFE7
 40069                           postdec1	equ	0xFE5
 40070                           plusw1	equ	0xFE3
 40071                           fsr1h	equ	0xFE2
 40072                           fsr1l	equ	0xFE1
 40073                           indf2	equ	0xFDF
 40074                           postinc2	equ	0xFDE
 40075                           postdec2	equ	0xFDD
 40076                           plusw2	equ	0xFDB
 40077                           fsr2h	equ	0xFDA
 40078                           fsr2l	equ	0xFD9
 40079                           status	equ	0xFD8
 40080                           
 40081 ;; *************** function _spi_tx_tx *****************
 40082 ;; Defined at:
 40083 ;;		line 386 in file "spi.c"
 40084 ;; Parameters:    Size  Location     Type
 40085 ;;  command         2    0[COMRAM] PTR unsigned char 
 40086 ;;		 -> _flash_write_to_buffer@command(4), 
 40087 ;;  command_leng    2    2[COMRAM] unsigned int 
 40088 ;;  data            2    4[COMRAM] PTR unsigned char 
 40089 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 40090 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 40091 ;;  data_length     2    6[COMRAM] unsigned int 
 40092 ;; Auto vars:     Size  Location     Type
 40093 ;;		None
 40094 ;; Return value:  Size  Location     Type
 40095 ;;                  1    wreg      void 
 40096 ;; Registers used:
 40097 ;;		wreg, status,2, status,0
 40098 ;; Tracked objects:
 40099 ;;		On entry : 0/0
 40100 ;;		On exit  : 0/0
 40101 ;;		Unchanged: 0/0
 40102 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40103 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40104 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40105 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40106 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40107 ;;Total ram usage:       12 bytes
 40108 ;; Hardware stack levels used:    1
 40109 ;; This function calls:
 40110 ;;		Nothing
 40111 ;; This function is called by:
 40112 ;;		__flash_write_to_buffer
 40113 ;; This function uses a non-reentrant model
 40114 ;;
 40115                           
 40116                           	psect	text205
 40117  0070DE                     __ptext205:
 40118                           	opt stack 0
 40119  0070DE                     _spi_tx_tx:
 40120                           	opt stack 25
 40121                           
 40122                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 40123                           
 40124                           ;incstack = 0
 40125  0070DE  9E88               	bcf	3976,7,c	;volatile
 40126                           
 40127                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 40128  0070E0  9C88               	bcf	3976,6,c	;volatile
 40129                           
 40130                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 40131  0070E2  8A88               	bsf	3976,5,c	;volatile
 40132                           
 40133                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 40134  0070E4  9888               	bcf	3976,4,c	;volatile
 40135                           
 40136                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 40137  0070E6  9688               	bcf	3976,3,c	;volatile
 40138                           
 40139                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 40140  0070E8  8488               	bsf	3976,2,c	;volatile
 40141                           
 40142                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 40143  0070EA  9288               	bcf	3976,1,c	;volatile
 40144                           
 40145                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 40146  0070EC  9886               	bcf	3974,4,c	;volatile
 40147  0070EE  9A86               	bcf	3974,5,c	;volatile
 40148  0070F0  9C86               	bcf	3974,6,c	;volatile
 40149  0070F2  9E86               	bcf	3974,7,c	;volatile
 40150                           
 40151                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 40152  0070F4  9086               	bcf	3974,0,c	;volatile
 40153  0070F6  9286               	bcf	3974,1,c	;volatile
 40154  0070F8  9486               	bcf	3974,2,c	;volatile
 40155  0070FA  9686               	bcf	3974,3,c	;volatile
 40156                           
 40157                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 40158  0070FC  5002               	movf	spi_tx_tx@command+1,w,c
 40159  0070FE  6E6A               	movwf	3946,c	;volatile
 40160                           
 40161                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 40162  007100  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 40163                           
 40164                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 40165  007104  0EFF               	movlw	255
 40166  007106  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40167  007108  0EFF               	movlw	255
 40168  00710A  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40169  00710C  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 40170  007110  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 40171  007114  5009               	movf	??_spi_tx_tx,w,c
 40172  007116  260B               	addwf	??_spi_tx_tx+2,f,c
 40173  007118  500A               	movf	??_spi_tx_tx+1,w,c
 40174  00711A  220C               	addwfc	??_spi_tx_tx+3,f,c
 40175  00711C  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40176  007120  6A0C               	clrf	??_spi_tx_tx+3,c
 40177  007122  500B               	movf	??_spi_tx_tx+2,w,c
 40178  007124  6E66               	movwf	3942,c	;volatile
 40179                           
 40180                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40181  007126  0403               	decf	spi_tx_tx@command_length,w,c
 40182  007128  6E67               	movwf	3943,c	;volatile
 40183                           
 40184                           ;spi.c: 414: LATDbits.LD7 = 0;
 40185  00712A  9E8C               	bcf	3980,7,c	;volatile
 40186                           
 40187                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 40188  00712C  8088               	bsf	3976,0,c	;volatile
 40189  00712E  B088               	btfsc	3976,0,c	;volatile
 40190  007130  D7FE               	goto	l2994
 40191                           
 40192                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40193  007132  5006               	movf	spi_tx_tx@data+1,w,c
 40194  007134  6E6A               	movwf	3946,c	;volatile
 40195                           
 40196                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40197  007136  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 40198                           
 40199                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40200  00713A  0EFF               	movlw	255
 40201  00713C  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40202  00713E  0EFF               	movlw	255
 40203  007140  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40204  007142  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 40205  007146  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 40206  00714A  5009               	movf	??_spi_tx_tx,w,c
 40207  00714C  260B               	addwf	??_spi_tx_tx+2,f,c
 40208  00714E  500A               	movf	??_spi_tx_tx+1,w,c
 40209  007150  220C               	addwfc	??_spi_tx_tx+3,f,c
 40210  007152  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40211  007156  6A0C               	clrf	??_spi_tx_tx+3,c
 40212  007158  500B               	movf	??_spi_tx_tx+2,w,c
 40213  00715A  6E66               	movwf	3942,c	;volatile
 40214                           
 40215                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40216  00715C  0407               	decf	spi_tx_tx@data_length,w,c
 40217  00715E  6E67               	movwf	3943,c	;volatile
 40218                           
 40219                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 40220  007160  8088               	bsf	3976,0,c	;volatile
 40221  007162  B088               	btfsc	3976,0,c	;volatile
 40222  007164  D7FE               	goto	l2997
 40223                           
 40224                           ;spi.c: 433: LATDbits.LD7 = 1;
 40225  007166  8E8C               	bsf	3980,7,c	;volatile
 40226  007168  0012               	return		;funcret
 40227  00716A                     __end_of_spi_tx_tx:
 40228                           	opt stack 0
 40229                           tosu	equ	0xFFF
 40230                           tosh	equ	0xFFE
 40231                           tosl	equ	0xFFD
 40232                           pclath	equ	0xFFA
 40233                           tblptru	equ	0xFF8
 40234                           tblptrh	equ	0xFF7
 40235                           tblptrl	equ	0xFF6
 40236                           tablat	equ	0xFF5
 40237                           prodh	equ	0xFF4
 40238                           prodl	equ	0xFF3
 40239                           intcon	equ	0xFF2
 40240                           intcon2	equ	0xFF1
 40241                           intcon3	equ	0xFF0
 40242                           indf0	equ	0xFEF
 40243                           postinc0	equ	0xFEE
 40244                           fsr0h	equ	0xFEA
 40245                           fsr0l	equ	0xFE9
 40246                           wreg	equ	0xFE8
 40247                           indf1	equ	0xFE7
 40248                           postdec1	equ	0xFE5
 40249                           plusw1	equ	0xFE3
 40250                           fsr1h	equ	0xFE2
 40251                           fsr1l	equ	0xFE1
 40252                           indf2	equ	0xFDF
 40253                           postinc2	equ	0xFDE
 40254                           postdec2	equ	0xFDD
 40255                           plusw2	equ	0xFDB
 40256                           fsr2h	equ	0xFDA
 40257                           fsr2l	equ	0xFD9
 40258                           status	equ	0xFD8
 40259                           
 40260 ;; *************** function __flash_copy_page_to_buffer *****************
 40261 ;; Defined at:
 40262 ;;		line 150 in file "flash.c"
 40263 ;; Parameters:    Size  Location     Type
 40264 ;;  page            2   19[COMRAM] unsigned int 
 40265 ;;  buffer          1   21[COMRAM] enum E6902
 40266 ;; Auto vars:     Size  Location     Type
 40267 ;;  command         4   25[COMRAM] unsigned char [4]
 40268 ;; Return value:  Size  Location     Type
 40269 ;;                  1    wreg      void 
 40270 ;; Registers used:
 40271 ;;		wreg, status,2, status,0, cstack
 40272 ;; Tracked objects:
 40273 ;;		On entry : 0/0
 40274 ;;		On exit  : 0/0
 40275 ;;		Unchanged: 0/0
 40276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40277 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40278 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40279 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40280 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40281 ;;Total ram usage:       10 bytes
 40282 ;; Hardware stack levels used:    1
 40283 ;; Hardware stack levels required when called:    3
 40284 ;; This function calls:
 40285 ;;		__flash_is_busy
 40286 ;;		_spi_tx
 40287 ;; This function is called by:
 40288 ;;		_flash_partial_write
 40289 ;;		_flash_copy_page_to_buffer
 40290 ;; This function uses a non-reentrant model
 40291 ;;
 40292                           
 40293                           	psect	text206
 40294  007D7C                     __ptext206:
 40295                           	opt stack 0
 40296  007D7C                     __flash_copy_page_to_buffer:
 40297                           	opt stack 22
 40298                           
 40299                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 40300                           
 40301                           ;incstack = 0
 40302  007D7C  EC2C  F046         	call	__flash_is_busy	;wreg free
 40303  007D80  0900               	iorlw	0
 40304  007D82  A4D8               	btfss	status,2,c
 40305  007D84  D7FB               	goto	__flash_copy_page_to_buffer
 40306                           
 40307                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 40308  007D86  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 40309  007D88  A4D8               	btfss	status,2,c
 40310  007D8A  D002               	goto	l1759
 40311                           
 40312                           ;flash.c: 159: command[0] = 0x53;
 40313  007D8C  0E53               	movlw	83
 40314  007D8E  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40315  007D90                     l1759:
 40316                           
 40317                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 40318  007D90  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 40319  007D92  A4D8               	btfss	status,2,c
 40320  007D94  D002               	goto	l1760
 40321                           
 40322                           ;flash.c: 161: command[0] = 0x55;
 40323  007D96  0E55               	movlw	85
 40324  007D98  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40325  007D9A                     l1760:
 40326                           
 40327                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40328  007D9A  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 40329  007D9E  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 40330  007DA2  0E07               	movlw	7
 40331  007DA4  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 40332  007DA6                     u7005:
 40333  007DA6  90D8               	bcf	status,0,c
 40334  007DA8  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 40335  007DAA  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 40336  007DAC  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 40337  007DAE  D7FB               	goto	u7005
 40338  007DB0  5017               	movf	??__flash_copy_page_to_buffer,w,c
 40339  007DB2  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 40340                           
 40341                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 40342  007DB4  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 40343  007DB6  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 40344  007DB8  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 40345                           
 40346                           ;flash.c: 165: command[3] = 0x00;
 40347  007DBA  0E00               	movlw	0
 40348  007DBC  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 40349                           
 40350                           ;flash.c: 168: spi_tx(command, 4);
 40351  007DBE  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 40352  007DC0  6E01               	movwf	spi_tx@data,c
 40353  007DC2  0E00               	movlw	high __flash_copy_page_to_buffer@command
 40354  007DC4  6E02               	movwf	spi_tx@data+1,c
 40355  007DC6  0E00               	movlw	0
 40356  007DC8  6E04               	movwf	spi_tx@length+1,c
 40357  007DCA  0E04               	movlw	4
 40358  007DCC  6E03               	movwf	spi_tx@length,c
 40359  007DCE  EC16  F03F         	call	_spi_tx	;wreg free
 40360  007DD2  0012               	return		;funcret
 40361  007DD4                     __end_of__flash_copy_page_to_buffer:
 40362                           	opt stack 0
 40363                           tosu	equ	0xFFF
 40364                           tosh	equ	0xFFE
 40365                           tosl	equ	0xFFD
 40366                           pclath	equ	0xFFA
 40367                           tblptru	equ	0xFF8
 40368                           tblptrh	equ	0xFF7
 40369                           tblptrl	equ	0xFF6
 40370                           tablat	equ	0xFF5
 40371                           prodh	equ	0xFF4
 40372                           prodl	equ	0xFF3
 40373                           intcon	equ	0xFF2
 40374                           intcon2	equ	0xFF1
 40375                           intcon3	equ	0xFF0
 40376                           indf0	equ	0xFEF
 40377                           postinc0	equ	0xFEE
 40378                           fsr0h	equ	0xFEA
 40379                           fsr0l	equ	0xFE9
 40380                           wreg	equ	0xFE8
 40381                           indf1	equ	0xFE7
 40382                           postdec1	equ	0xFE5
 40383                           plusw1	equ	0xFE3
 40384                           fsr1h	equ	0xFE2
 40385                           fsr1l	equ	0xFE1
 40386                           indf2	equ	0xFDF
 40387                           postinc2	equ	0xFDE
 40388                           postdec2	equ	0xFDD
 40389                           plusw2	equ	0xFDB
 40390                           fsr2h	equ	0xFDA
 40391                           fsr2l	equ	0xFD9
 40392                           status	equ	0xFD8
 40393                           
 40394 ;; *************** function __flash_compare_page_to_buffer *****************
 40395 ;; Defined at:
 40396 ;;		line 172 in file "flash.c"
 40397 ;; Parameters:    Size  Location     Type
 40398 ;;  page            2   19[COMRAM] unsigned int 
 40399 ;;  buffer          1   21[COMRAM] enum E6902
 40400 ;; Auto vars:     Size  Location     Type
 40401 ;;  command         4   27[COMRAM] unsigned char [4]
 40402 ;;  status          2   25[COMRAM] unsigned int 
 40403 ;; Return value:  Size  Location     Type
 40404 ;;                  1    wreg      enum E6906
 40405 ;; Registers used:
 40406 ;;		wreg, status,2, status,0, cstack
 40407 ;; Tracked objects:
 40408 ;;		On entry : 0/0
 40409 ;;		On exit  : 0/0
 40410 ;;		Unchanged: 0/0
 40411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40412 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40413 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40414 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40415 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40416 ;;Total ram usage:       12 bytes
 40417 ;; Hardware stack levels used:    1
 40418 ;; Hardware stack levels required when called:    3
 40419 ;; This function calls:
 40420 ;;		__flash_get_status
 40421 ;;		__flash_is_busy
 40422 ;;		_spi_tx
 40423 ;; This function is called by:
 40424 ;;		_flash_sector_write
 40425 ;;		_flash_partial_write
 40426 ;; This function uses a non-reentrant model
 40427 ;;
 40428                           
 40429                           	psect	text207
 40430  0074FC                     __ptext207:
 40431                           	opt stack 0
 40432  0074FC                     __flash_compare_page_to_buffer:
 40433                           	opt stack 23
 40434                           
 40435                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 40436                           
 40437                           ;incstack = 0
 40438  0074FC  EC2C  F046         	call	__flash_is_busy	;wreg free
 40439  007500  0900               	iorlw	0
 40440  007502  A4D8               	btfss	status,2,c
 40441  007504  D7FB               	goto	__flash_compare_page_to_buffer
 40442                           
 40443                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 40444  007506  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 40445  007508  A4D8               	btfss	status,2,c
 40446  00750A  D002               	goto	l1767
 40447                           
 40448                           ;flash.c: 182: command[0] = 0x60;
 40449  00750C  0E60               	movlw	96
 40450  00750E  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40451  007510                     l1767:
 40452                           
 40453                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 40454  007510  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 40455  007512  A4D8               	btfss	status,2,c
 40456  007514  D002               	goto	l1768
 40457                           
 40458                           ;flash.c: 184: command[0] = 0x60;
 40459  007516  0E60               	movlw	96
 40460  007518  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40461  00751A                     l1768:
 40462                           
 40463                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40464  00751A  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 40465  00751E  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 40466  007522  0E07               	movlw	7
 40467  007524  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 40468  007526                     u7045:
 40469  007526  90D8               	bcf	status,0,c
 40470  007528  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 40471  00752A  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 40472  00752C  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 40473  00752E  D7FB               	goto	u7045
 40474  007530  5017               	movf	??__flash_compare_page_to_buffer,w,c
 40475  007532  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 40476                           
 40477                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 40478  007534  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 40479  007536  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 40480  007538  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 40481                           
 40482                           ;flash.c: 188: command[3] = 0x00;
 40483  00753A  0E00               	movlw	0
 40484  00753C  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 40485                           
 40486                           ;flash.c: 191: spi_tx(command, 4);
 40487  00753E  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 40488  007540  6E01               	movwf	spi_tx@data,c
 40489  007542  0E00               	movlw	high __flash_compare_page_to_buffer@command
 40490  007544  6E02               	movwf	spi_tx@data+1,c
 40491  007546  0E00               	movlw	0
 40492  007548  6E04               	movwf	spi_tx@length+1,c
 40493  00754A  0E04               	movlw	4
 40494  00754C  6E03               	movwf	spi_tx@length,c
 40495  00754E  EC16  F03F         	call	_spi_tx	;wreg free
 40496  007552  EC2C  F046         	call	__flash_is_busy	;wreg free
 40497  007556  0900               	iorlw	0
 40498  007558  A4D8               	btfss	status,2,c
 40499  00755A  D7FB               	goto	l1770
 40500                           
 40501                           ;flash.c: 197: status = _flash_get_status();
 40502  00755C  EC71  F044         	call	__flash_get_status	;wreg free
 40503  007560  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 40504  007564  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 40505                           
 40506                           ;flash.c: 200: if(status & 0b0000000001000000)
 40507  007568  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 40508  00756A  D002               	goto	l1772
 40509                           
 40510                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 40511  00756C  0E01               	movlw	1
 40512                           
 40513                           ;flash.c: 204: }
 40514  00756E  0012               	return	
 40515  007570                     l1772:
 40516                           
 40517                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 40518  007570  0E00               	movlw	0
 40519  007572  0012               	return	
 40520  007574                     __end_of__flash_compare_page_to_buffer:
 40521                           	opt stack 0
 40522                           tosu	equ	0xFFF
 40523                           tosh	equ	0xFFE
 40524                           tosl	equ	0xFFD
 40525                           pclath	equ	0xFFA
 40526                           tblptru	equ	0xFF8
 40527                           tblptrh	equ	0xFF7
 40528                           tblptrl	equ	0xFF6
 40529                           tablat	equ	0xFF5
 40530                           prodh	equ	0xFF4
 40531                           prodl	equ	0xFF3
 40532                           intcon	equ	0xFF2
 40533                           intcon2	equ	0xFF1
 40534                           intcon3	equ	0xFF0
 40535                           indf0	equ	0xFEF
 40536                           postinc0	equ	0xFEE
 40537                           fsr0h	equ	0xFEA
 40538                           fsr0l	equ	0xFE9
 40539                           wreg	equ	0xFE8
 40540                           indf1	equ	0xFE7
 40541                           postdec1	equ	0xFE5
 40542                           plusw1	equ	0xFE3
 40543                           fsr1h	equ	0xFE2
 40544                           fsr1l	equ	0xFE1
 40545                           indf2	equ	0xFDF
 40546                           postinc2	equ	0xFDE
 40547                           postdec2	equ	0xFDD
 40548                           plusw2	equ	0xFDB
 40549                           fsr2h	equ	0xFDA
 40550                           fsr2l	equ	0xFD9
 40551                           status	equ	0xFD8
 40552                           
 40553 ;; *************** function _fat_get_file_information *****************
 40554 ;; Defined at:
 40555 ;;		line 1326 in file "fat16.c"
 40556 ;; Parameters:    Size  Location     Type
 40557 ;;  file_number     1    wreg     unsigned char 
 40558 ;;  data            2   47[COMRAM] PTR struct .
 40559 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 40560 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 40561 ;; Auto vars:     Size  Location     Type
 40562 ;;  file_number     1   54[COMRAM] unsigned char 
 40563 ;;  offset          2   52[COMRAM] unsigned int 
 40564 ;;  root_sector     2   50[COMRAM] unsigned int 
 40565 ;; Return value:  Size  Location     Type
 40566 ;;                  1    wreg      unsigned char 
 40567 ;; Registers used:
 40568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40569 ;; Tracked objects:
 40570 ;;		On entry : 0/0
 40571 ;;		On exit  : 0/0
 40572 ;;		Unchanged: 0/0
 40573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40574 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40575 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40576 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40577 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40578 ;;Total ram usage:        8 bytes
 40579 ;; Hardware stack levels used:    1
 40580 ;; Hardware stack levels required when called:    5
 40581 ;; This function calls:
 40582 ;;		__offset_from_file_number
 40583 ;;		__sector_from_file_number
 40584 ;;		_flash_partial_read
 40585 ;; This function is called by:
 40586 ;;		_fat_rename_file
 40587 ;;		_fat_read_from_file
 40588 ;;		_fat_resize_file
 40589 ;;		_fat_modify_file
 40590 ;;		__bootloader_verify_file
 40591 ;;		__bootloader_program
 40592 ;;		__fill_buffer_get_file_details
 40593 ;; This function uses a non-reentrant model
 40594 ;;
 40595                           
 40596                           	psect	text208
 40597  00765E                     __ptext208:
 40598                           	opt stack 0
 40599  00765E                     _fat_get_file_information:
 40600                           	opt stack 23
 40601                           
 40602                           ;incstack = 0
 40603                           ;fat_get_file_information@file_number stored from wreg
 40604  00765E  6E37               	movwf	fat_get_file_information@file_number,c
 40605                           
 40606                           ;fat16.c: 1328: uint16_t root_sector;;fat16.c: 1329: uint16_t offset;;fat16.c: 1331: if(
      +                          file_number>=64)
 40607  007660  0E3F               	movlw	63
 40608  007662  6437               	cpfsgt	fat_get_file_information@file_number,c
 40609  007664  D002               	goto	l2276
 40610                           
 40611                           ;fat16.c: 1332: {;fat16.c: 1334: return 0x01;
 40612  007666  0E01               	movlw	1
 40613  007668  0012               	return	
 40614  00766A                     l2276:
 40615                           
 40616                           ;fat16.c: 1335: };fat16.c: 1338: root_sector = _sector_from_file_number(file_number);
 40617  00766A  5037               	movf	fat_get_file_information@file_number,w,c
 40618  00766C  EC11  F045         	call	__sector_from_file_number
 40619  007670  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 40620  007674  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 40621                           
 40622                           ;fat16.c: 1339: offset = _offset_from_file_number(file_number);
 40623  007678  5037               	movf	fat_get_file_information@file_number,w,c
 40624  00767A  EC9D  F045         	call	__offset_from_file_number
 40625  00767E  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 40626  007682  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 40627                           
 40628                           ;fat16.c: 1342: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 40629  007686  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 40630  00768A  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 40631  00768E  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 40632  007692  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 40633  007696  0E00               	movlw	0
 40634  007698  6E2D               	movwf	flash_partial_read@length+1,c
 40635  00769A  0E20               	movlw	32
 40636  00769C  6E2C               	movwf	flash_partial_read@length,c
 40637  00769E  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 40638  0076A2  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 40639  0076A6  EC58  F044         	call	_flash_partial_read	;wreg free
 40640                           
 40641                           ;fat16.c: 1345: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 40642  0076AA  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40643  0076AE  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40644  0076B2  50DF               	movf	indf2,w,c
 40645  0076B4  B4D8               	btfsc	status,2,c
 40646  0076B6  D008               	goto	u8250
 40647  0076B8  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40648  0076BC  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40649  0076C0  0EE5               	movlw	229
 40650  0076C2  18DE               	xorwf	postinc2,w,c
 40651  0076C4  A4D8               	btfss	status,2,c
 40652  0076C6  D002               	goto	l2278
 40653  0076C8                     u8250:
 40654                           
 40655                           ;fat16.c: 1346: {;fat16.c: 1348: return 0x02;
 40656  0076C8  0E02               	movlw	2
 40657  0076CA  0012               	return	
 40658  0076CC                     l2278:
 40659                           
 40660                           ;fat16.c: 1349: };fat16.c: 1352: return 0x00;
 40661  0076CC  0E00               	movlw	0
 40662  0076CE  0012               	return	
 40663  0076D0                     __end_of_fat_get_file_information:
 40664                           	opt stack 0
 40665                           tosu	equ	0xFFF
 40666                           tosh	equ	0xFFE
 40667                           tosl	equ	0xFFD
 40668                           pclath	equ	0xFFA
 40669                           tblptru	equ	0xFF8
 40670                           tblptrh	equ	0xFF7
 40671                           tblptrl	equ	0xFF6
 40672                           tablat	equ	0xFF5
 40673                           prodh	equ	0xFF4
 40674                           prodl	equ	0xFF3
 40675                           intcon	equ	0xFF2
 40676                           intcon2	equ	0xFF1
 40677                           intcon3	equ	0xFF0
 40678                           indf0	equ	0xFEF
 40679                           postinc0	equ	0xFEE
 40680                           fsr0h	equ	0xFEA
 40681                           fsr0l	equ	0xFE9
 40682                           wreg	equ	0xFE8
 40683                           indf1	equ	0xFE7
 40684                           postdec1	equ	0xFE5
 40685                           plusw1	equ	0xFE3
 40686                           fsr1h	equ	0xFE2
 40687                           fsr1l	equ	0xFE1
 40688                           indf2	equ	0xFDF
 40689                           postinc2	equ	0xFDE
 40690                           postdec2	equ	0xFDD
 40691                           plusw2	equ	0xFDB
 40692                           fsr2h	equ	0xFDA
 40693                           fsr2l	equ	0xFD9
 40694                           status	equ	0xFD8
 40695                           
 40696 ;; *************** function __parse_buffer_to_sector *****************
 40697 ;; Defined at:
 40698 ;;		line 718 in file "api.c"
 40699 ;; Parameters:    Size  Location     Type
 40700 ;;  data            2   81[COMRAM] PTR unsigned char 
 40701 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 40702 ;; Auto vars:     Size  Location     Type
 40703 ;;  sector          2   84[COMRAM] unsigned int 
 40704 ;; Return value:  Size  Location     Type
 40705 ;;                  1    wreg      unsigned char 
 40706 ;; Registers used:
 40707 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40708 ;; Tracked objects:
 40709 ;;		On entry : 0/0
 40710 ;;		On exit  : 0/0
 40711 ;;		Unchanged: 0/0
 40712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40713 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40714 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40715 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40716 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40717 ;;Total ram usage:        5 bytes
 40718 ;; Hardware stack levels used:    1
 40719 ;; Hardware stack levels required when called:    8
 40720 ;; This function calls:
 40721 ;;		_fat_write_sector_from_buffer
 40722 ;; This function is called by:
 40723 ;;		__parse_command_long
 40724 ;; This function uses a non-reentrant model
 40725 ;;
 40726                           
 40727                           	psect	text209
 40728  0071F2                     __ptext209:
 40729                           	opt stack 0
 40730  0071F2                     __parse_buffer_to_sector:
 40731                           	opt stack 20
 40732                           
 40733                           ;api.c: 721: uint16_t sector;;api.c: 723: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (dat
      +                          a[4]!=0x6A) || (data[5]!=0x6D))
 40734                           
 40735                           ;incstack = 0
 40736  0071F2  C052  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 40737  0071F6  C053  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 40738  0071FA  0E58               	movlw	88
 40739  0071FC  18DE               	xorwf	postinc2,w,c
 40740  0071FE  A4D8               	btfss	status,2,c
 40741  007200  D014               	goto	u11020
 40742  007202  EE20 F004          	lfsr	2,4
 40743  007206  5052               	movf	__parse_buffer_to_sector@data,w,c
 40744  007208  26D9               	addwf	fsr2l,f,c
 40745  00720A  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 40746  00720C  22DA               	addwfc	fsr2h,f,c
 40747  00720E  0E6A               	movlw	106
 40748  007210  18DE               	xorwf	postinc2,w,c
 40749  007212  A4D8               	btfss	status,2,c
 40750  007214  D00A               	goto	u11020
 40751  007216  EE20 F005          	lfsr	2,5
 40752  00721A  5052               	movf	__parse_buffer_to_sector@data,w,c
 40753  00721C  26D9               	addwf	fsr2l,f,c
 40754  00721E  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 40755  007220  22DA               	addwfc	fsr2h,f,c
 40756  007222  0E6D               	movlw	109
 40757  007224  18DE               	xorwf	postinc2,w,c
 40758  007226  B4D8               	btfsc	status,2,c
 40759  007228  D002               	goto	l2849
 40760  00722A                     u11020:
 40761                           
 40762                           ;api.c: 724: {;api.c: 725: return 6;
 40763  00722A  0E06               	movlw	6
 40764  00722C  0012               	return	
 40765  00722E                     l2849:
 40766                           
 40767                           ;api.c: 726: };api.c: 729: sector |= data[2];
 40768  00722E  EE20 F002          	lfsr	2,2
 40769  007232  5052               	movf	__parse_buffer_to_sector@data,w,c
 40770  007234  26D9               	addwf	fsr2l,f,c
 40771  007236  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 40772  007238  22DA               	addwfc	fsr2h,f,c
 40773  00723A  50DF               	movf	indf2,w,c
 40774  00723C  6E54               	movwf	??__parse_buffer_to_sector& (0+255),c
 40775  00723E  5054               	movf	??__parse_buffer_to_sector,w,c
 40776  007240  1255               	iorwf	__parse_buffer_to_sector@sector,f,c
 40777                           
 40778                           ;api.c: 730: sector <<= 8;
 40779  007242  5055               	movf	__parse_buffer_to_sector@sector,w,c
 40780  007244  6E56               	movwf	__parse_buffer_to_sector@sector+1,c
 40781  007246  6A55               	clrf	__parse_buffer_to_sector@sector,c
 40782                           
 40783                           ;api.c: 731: sector |= data[3];
 40784  007248  EE20 F003          	lfsr	2,3
 40785  00724C  5052               	movf	__parse_buffer_to_sector@data,w,c
 40786  00724E  26D9               	addwf	fsr2l,f,c
 40787  007250  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 40788  007252  22DA               	addwfc	fsr2h,f,c
 40789  007254  50DF               	movf	indf2,w,c
 40790  007256  6E54               	movwf	??__parse_buffer_to_sector& (0+255),c
 40791  007258  5054               	movf	??__parse_buffer_to_sector,w,c
 40792  00725A  1255               	iorwf	__parse_buffer_to_sector@sector,f,c
 40793                           
 40794                           ;api.c: 734: fat_write_sector_from_buffer(data[1], sector);
 40795  00725C  C055  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 40796  007260  C056  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 40797  007264  EE20 F001          	lfsr	2,1
 40798  007268  5052               	movf	__parse_buffer_to_sector@data,w,c
 40799  00726A  26D9               	addwf	fsr2l,f,c
 40800  00726C  5053               	movf	__parse_buffer_to_sector@data+1,w,c
 40801  00726E  22DA               	addwfc	fsr2h,f,c
 40802  007270  50DF               	movf	indf2,w,c
 40803  007272  EC40  F032         	call	_fat_write_sector_from_buffer
 40804                           
 40805                           ;api.c: 736: return 6;
 40806  007276  0E06               	movlw	6
 40807  007278  0012               	return	
 40808  00727A                     __end_of__parse_buffer_to_sector:
 40809                           	opt stack 0
 40810                           tosu	equ	0xFFF
 40811                           tosh	equ	0xFFE
 40812                           tosl	equ	0xFFD
 40813                           pclath	equ	0xFFA
 40814                           tblptru	equ	0xFF8
 40815                           tblptrh	equ	0xFF7
 40816                           tblptrl	equ	0xFF6
 40817                           tablat	equ	0xFF5
 40818                           prodh	equ	0xFF4
 40819                           prodl	equ	0xFF3
 40820                           intcon	equ	0xFF2
 40821                           intcon2	equ	0xFF1
 40822                           intcon3	equ	0xFF0
 40823                           indf0	equ	0xFEF
 40824                           postinc0	equ	0xFEE
 40825                           fsr0h	equ	0xFEA
 40826                           fsr0l	equ	0xFE9
 40827                           wreg	equ	0xFE8
 40828                           indf1	equ	0xFE7
 40829                           postdec1	equ	0xFE5
 40830                           plusw1	equ	0xFE3
 40831                           fsr1h	equ	0xFE2
 40832                           fsr1l	equ	0xFE1
 40833                           indf2	equ	0xFDF
 40834                           postinc2	equ	0xFDE
 40835                           postdec2	equ	0xFDD
 40836                           plusw2	equ	0xFDB
 40837                           fsr2h	equ	0xFDA
 40838                           fsr2l	equ	0xFD9
 40839                           status	equ	0xFD8
 40840                           
 40841 ;; *************** function _fat_write_sector_from_buffer *****************
 40842 ;; Defined at:
 40843 ;;		line 1393 in file "fat16.c"
 40844 ;; Parameters:    Size  Location     Type
 40845 ;;  file_number     1    wreg     unsigned char 
 40846 ;;  sector          2   66[COMRAM] unsigned int 
 40847 ;; Auto vars:     Size  Location     Type
 40848 ;;  file_number     1   78[COMRAM] unsigned char 
 40849 ;;  file_size       4   72[COMRAM] unsigned long 
 40850 ;;  cluster         2   79[COMRAM] unsigned int 
 40851 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 40852 ;; Return value:  Size  Location     Type
 40853 ;;                  1    wreg      unsigned char 
 40854 ;; Registers used:
 40855 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40856 ;; Tracked objects:
 40857 ;;		On entry : 0/0
 40858 ;;		On exit  : 0/0
 40859 ;;		Unchanged: 0/0
 40860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40861 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40862 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40863 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40864 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40865 ;;Total ram usage:       15 bytes
 40866 ;; Hardware stack levels used:    1
 40867 ;; Hardware stack levels required when called:    7
 40868 ;; This function calls:
 40869 ;;		__data_sector_from_cluster
 40870 ;;		__find_nth_cluster
 40871 ;;		__get_first_cluster
 40872 ;;		__root_is_available
 40873 ;;		_fat_get_file_size
 40874 ;;		_flash_write_page_from_buffer
 40875 ;; This function is called by:
 40876 ;;		__parse_buffer_to_sector
 40877 ;; This function uses a non-reentrant model
 40878 ;;
 40879                           
 40880                           	psect	text210
 40881  006480                     __ptext210:
 40882                           	opt stack 0
 40883  006480                     _fat_write_sector_from_buffer:
 40884                           	opt stack 20
 40885                           
 40886                           ;incstack = 0
 40887                           ;fat_write_sector_from_buffer@file_number stored from wreg
 40888  006480  6E4F               	movwf	fat_write_sector_from_buffer@file_number,c
 40889                           
 40890                           ;fat16.c: 1395: uint32_t file_size;;fat16.c: 1396: uint16_t number_of_clusters;;fat16.c:
      +                           1397: uint16_t cluster;;fat16.c: 1400: if(_root_is_available(file_number))
 40891  006482  504F               	movf	fat_write_sector_from_buffer@file_number,w,c
 40892  006484  ECA7  F03D         	call	__root_is_available
 40893  006488  0900               	iorlw	0
 40894  00648A  A4D8               	btfss	status,2,c
 40895  00648C  0012               	return	
 40896                           
 40897                           ;fat16.c: 1404: };fat16.c: 1407: file_size = fat_get_file_size(file_number);
 40898                           
 40899                           ;fat16.c: 1401: {;fat16.c: 1403: return 0xFF;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 40900  00648E  504F               	movf	fat_write_sector_from_buffer@file_number,w,c
 40901  006490  EC0F  F03C         	call	_fat_get_file_size
 40902  006494  C036  F049         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 40903  006498  C037  F04A         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 40904  00649C  C038  F04B         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 40905  0064A0  C039  F04C         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 40906                           
 40907                           ;fat16.c: 1410: number_of_clusters = (file_size + 512 - 1) >> 9;
 40908  0064A4  0EFF               	movlw	255
 40909  0064A6  2449               	addwf	fat_write_sector_from_buffer@file_size,w,c
 40910  0064A8  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 40911  0064AA  0E01               	movlw	1
 40912  0064AC  204A               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 40913  0064AE  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 40914  0064B0  0E00               	movlw	0
 40915  0064B2  204B               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 40916  0064B4  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 40917  0064B6  0E00               	movlw	0
 40918  0064B8  204C               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 40919  0064BA  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 40920  0064BC  0E0A               	movlw	10
 40921  0064BE  D005               	goto	u10440
 40922  0064C0                     u10445:
 40923  0064C0  90D8               	bcf	status,0,c
 40924  0064C2  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 40925  0064C4  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 40926  0064C6  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 40927  0064C8  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 40928  0064CA                     u10440:
 40929  0064CA  2EE8               	decfsz	wreg,f,c
 40930  0064CC  D7F9               	goto	u10445
 40931  0064CE  C045  F04D         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 40932  0064D2  C046  F04E         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 40933                           
 40934                           ;fat16.c: 1411: if(sector > number_of_clusters)
 40935  0064D6  5043               	movf	fat_write_sector_from_buffer@sector,w,c
 40936  0064D8  5C4D               	subwf	fat_write_sector_from_buffer@number_of_clusters,w,c
 40937  0064DA  5044               	movf	fat_write_sector_from_buffer@sector+1,w,c
 40938  0064DC  584E               	subwfb	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 40939  0064DE  A0D8               	btfss	status,0,c
 40940  0064E0  0012               	return	
 40941                           
 40942                           ;fat16.c: 1415: };fat16.c: 1418: cluster = _get_first_cluster(file_number);
 40943                           
 40944                           ;fat16.c: 1412: {;fat16.c: 1414: return 0xFE;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 40945  0064E2  504F               	movf	fat_write_sector_from_buffer@file_number,w,c
 40946  0064E4  EC3B  F041         	call	__get_first_cluster
 40947  0064E8  C030  F050         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 40948  0064EC  C031  F051         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 40949                           
 40950                           ;fat16.c: 1419: cluster = _find_nth_cluster(cluster, sector);
 40951  0064F0  C050  F038         	movff	fat_write_sector_from_buffer@cluster,__find_nth_cluster@cluster
 40952  0064F4  C051  F039         	movff	fat_write_sector_from_buffer@cluster+1,__find_nth_cluster@cluster+1
 40953  0064F8  C043  F03A         	movff	fat_write_sector_from_buffer@sector,__find_nth_cluster@n
 40954  0064FC  C044  F03B         	movff	fat_write_sector_from_buffer@sector+1,__find_nth_cluster@n+1
 40955  006500  ECCF  F035         	call	__find_nth_cluster	;wreg free
 40956  006504  C038  F050         	movff	?__find_nth_cluster,fat_write_sector_from_buffer@cluster
 40957  006508  C039  F051         	movff	?__find_nth_cluster+1,fat_write_sector_from_buffer@cluster+1
 40958                           
 40959                           ;fat16.c: 1422: cluster = _data_sector_from_cluster(cluster);
 40960  00650C  C050  F001         	movff	fat_write_sector_from_buffer@cluster,__data_sector_from_cluster@fat_cluster
 40961  006510  C051  F002         	movff	fat_write_sector_from_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 40962  006514  EC62  F047         	call	__data_sector_from_cluster	;wreg free
 40963  006518  C001  F050         	movff	?__data_sector_from_cluster,fat_write_sector_from_buffer@cluster
 40964  00651C  C002  F051         	movff	?__data_sector_from_cluster+1,fat_write_sector_from_buffer@cluster+1
 40965                           
 40966                           ;fat16.c: 1425: flash_write_page_from_buffer(cluster);
 40967  006520  C050  F01E         	movff	fat_write_sector_from_buffer@cluster,flash_write_page_from_buffer@page
 40968  006524  C051  F01F         	movff	fat_write_sector_from_buffer@cluster+1,flash_write_page_from_buffer@page+1
 40969  006528  EC32  F047         	call	_flash_write_page_from_buffer	;wreg free
 40970  00652C  0012               	return	
 40971  00652E                     __end_of_fat_write_sector_from_buffer:
 40972                           	opt stack 0
 40973                           tosu	equ	0xFFF
 40974                           tosh	equ	0xFFE
 40975                           tosl	equ	0xFFD
 40976                           pclath	equ	0xFFA
 40977                           tblptru	equ	0xFF8
 40978                           tblptrh	equ	0xFF7
 40979                           tblptrl	equ	0xFF6
 40980                           tablat	equ	0xFF5
 40981                           prodh	equ	0xFF4
 40982                           prodl	equ	0xFF3
 40983                           intcon	equ	0xFF2
 40984                           intcon2	equ	0xFF1
 40985                           intcon3	equ	0xFF0
 40986                           indf0	equ	0xFEF
 40987                           postinc0	equ	0xFEE
 40988                           fsr0h	equ	0xFEA
 40989                           fsr0l	equ	0xFE9
 40990                           wreg	equ	0xFE8
 40991                           indf1	equ	0xFE7
 40992                           postdec1	equ	0xFE5
 40993                           plusw1	equ	0xFE3
 40994                           fsr1h	equ	0xFE2
 40995                           fsr1l	equ	0xFE1
 40996                           indf2	equ	0xFDF
 40997                           postinc2	equ	0xFDE
 40998                           postdec2	equ	0xFDD
 40999                           plusw2	equ	0xFDB
 41000                           fsr2h	equ	0xFDA
 41001                           fsr2l	equ	0xFD9
 41002                           status	equ	0xFD8
 41003                           
 41004 ;; *************** function _flash_write_page_from_buffer *****************
 41005 ;; Defined at:
 41006 ;;		line 505 in file "flash.c"
 41007 ;; Parameters:    Size  Location     Type
 41008 ;;  page            2   29[COMRAM] unsigned int 
 41009 ;; Auto vars:     Size  Location     Type
 41010 ;;		None
 41011 ;; Return value:  Size  Location     Type
 41012 ;;                  1    wreg      void 
 41013 ;; Registers used:
 41014 ;;		wreg, status,2, status,0, cstack
 41015 ;; Tracked objects:
 41016 ;;		On entry : 0/0
 41017 ;;		On exit  : 0/0
 41018 ;;		Unchanged: 0/0
 41019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41020 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41021 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41022 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41023 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41024 ;;Total ram usage:        2 bytes
 41025 ;; Hardware stack levels used:    1
 41026 ;; Hardware stack levels required when called:    4
 41027 ;; This function calls:
 41028 ;;		__flash_write_page_from_buffer
 41029 ;; This function is called by:
 41030 ;;		_fat_write_sector_from_buffer
 41031 ;; This function uses a non-reentrant model
 41032 ;;
 41033                           
 41034                           	psect	text211
 41035  008E64                     __ptext211:
 41036                           	opt stack 0
 41037  008E64                     _flash_write_page_from_buffer:
 41038                           	opt stack 22
 41039                           
 41040                           ;flash.c: 507: _flash_write_page_from_buffer(page, FLASH_BUFFER_2);
 41041                           
 41042                           ;incstack = 0
 41043  008E64  C01E  F014         	movff	flash_write_page_from_buffer@page,__flash_write_page_from_buffer@page
 41044  008E68  C01F  F015         	movff	flash_write_page_from_buffer@page+1,__flash_write_page_from_buffer@page+1
 41045  008E6C  0E01               	movlw	1
 41046  008E6E  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 41047  008E70  ECEA  F03E         	call	__flash_write_page_from_buffer	;wreg free
 41048  008E74  0012               	return		;funcret
 41049  008E76                     __end_of_flash_write_page_from_buffer:
 41050                           	opt stack 0
 41051                           tosu	equ	0xFFF
 41052                           tosh	equ	0xFFE
 41053                           tosl	equ	0xFFD
 41054                           pclath	equ	0xFFA
 41055                           tblptru	equ	0xFF8
 41056                           tblptrh	equ	0xFF7
 41057                           tblptrl	equ	0xFF6
 41058                           tablat	equ	0xFF5
 41059                           prodh	equ	0xFF4
 41060                           prodl	equ	0xFF3
 41061                           intcon	equ	0xFF2
 41062                           intcon2	equ	0xFF1
 41063                           intcon3	equ	0xFF0
 41064                           indf0	equ	0xFEF
 41065                           postinc0	equ	0xFEE
 41066                           fsr0h	equ	0xFEA
 41067                           fsr0l	equ	0xFE9
 41068                           wreg	equ	0xFE8
 41069                           indf1	equ	0xFE7
 41070                           postdec1	equ	0xFE5
 41071                           plusw1	equ	0xFE3
 41072                           fsr1h	equ	0xFE2
 41073                           fsr1l	equ	0xFE1
 41074                           indf2	equ	0xFDF
 41075                           postinc2	equ	0xFDE
 41076                           postdec2	equ	0xFDD
 41077                           plusw2	equ	0xFDB
 41078                           fsr2h	equ	0xFDA
 41079                           fsr2l	equ	0xFD9
 41080                           status	equ	0xFD8
 41081                           
 41082 ;; *************** function __flash_write_page_from_buffer *****************
 41083 ;; Defined at:
 41084 ;;		line 254 in file "flash.c"
 41085 ;; Parameters:    Size  Location     Type
 41086 ;;  page            2   19[COMRAM] unsigned int 
 41087 ;;  buffer          1   21[COMRAM] enum E6902
 41088 ;; Auto vars:     Size  Location     Type
 41089 ;;  command         4   25[COMRAM] unsigned char [4]
 41090 ;; Return value:  Size  Location     Type
 41091 ;;                  1    wreg      void 
 41092 ;; Registers used:
 41093 ;;		wreg, status,2, status,0, cstack
 41094 ;; Tracked objects:
 41095 ;;		On entry : 0/0
 41096 ;;		On exit  : 0/0
 41097 ;;		Unchanged: 0/0
 41098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41099 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41100 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41101 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41102 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41103 ;;Total ram usage:       10 bytes
 41104 ;; Hardware stack levels used:    1
 41105 ;; Hardware stack levels required when called:    3
 41106 ;; This function calls:
 41107 ;;		__flash_is_busy
 41108 ;;		_spi_tx
 41109 ;; This function is called by:
 41110 ;;		_flash_sector_write
 41111 ;;		_flash_partial_write
 41112 ;;		_flash_write_page_from_buffer
 41113 ;; This function uses a non-reentrant model
 41114 ;;
 41115                           
 41116                           	psect	text212
 41117  007DD4                     __ptext212:
 41118                           	opt stack 0
 41119  007DD4                     __flash_write_page_from_buffer:
 41120                           	opt stack 23
 41121                           
 41122                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 41123                           
 41124                           ;incstack = 0
 41125  007DD4  EC2C  F046         	call	__flash_is_busy	;wreg free
 41126  007DD8  0900               	iorlw	0
 41127  007DDA  A4D8               	btfss	status,2,c
 41128  007DDC  D7FB               	goto	__flash_write_page_from_buffer
 41129                           
 41130                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 41131  007DDE  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 41132  007DE0  A4D8               	btfss	status,2,c
 41133  007DE2  D002               	goto	l1794
 41134                           
 41135                           ;flash.c: 263: command[0] = 0x83;
 41136  007DE4  0E83               	movlw	131
 41137  007DE6  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41138  007DE8                     l1794:
 41139                           
 41140                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 41141  007DE8  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 41142  007DEA  A4D8               	btfss	status,2,c
 41143  007DEC  D002               	goto	l1795
 41144                           
 41145                           ;flash.c: 265: command[0] = 0x86;
 41146  007DEE  0E86               	movlw	134
 41147  007DF0  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41148  007DF2                     l1795:
 41149                           
 41150                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 41151  007DF2  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 41152  007DF6  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 41153  007DFA  0E07               	movlw	7
 41154  007DFC  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 41155  007DFE                     u7135:
 41156  007DFE  90D8               	bcf	status,0,c
 41157  007E00  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 41158  007E02  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 41159  007E04  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 41160  007E06  D7FB               	goto	u7135
 41161  007E08  5017               	movf	??__flash_write_page_from_buffer,w,c
 41162  007E0A  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 41163                           
 41164                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 41165  007E0C  5014               	movf	__flash_write_page_from_buffer@page,w,c
 41166  007E0E  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 41167  007E10  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 41168                           
 41169                           ;flash.c: 269: command[3] = 0x00;
 41170  007E12  0E00               	movlw	0
 41171  007E14  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 41172                           
 41173                           ;flash.c: 272: spi_tx(command, 4);
 41174  007E16  0E1A               	movlw	low __flash_write_page_from_buffer@command
 41175  007E18  6E01               	movwf	spi_tx@data,c
 41176  007E1A  0E00               	movlw	high __flash_write_page_from_buffer@command
 41177  007E1C  6E02               	movwf	spi_tx@data+1,c
 41178  007E1E  0E00               	movlw	0
 41179  007E20  6E04               	movwf	spi_tx@length+1,c
 41180  007E22  0E04               	movlw	4
 41181  007E24  6E03               	movwf	spi_tx@length,c
 41182  007E26  EC16  F03F         	call	_spi_tx	;wreg free
 41183  007E2A  0012               	return		;funcret
 41184  007E2C                     __end_of__flash_write_page_from_buffer:
 41185                           	opt stack 0
 41186                           tosu	equ	0xFFF
 41187                           tosh	equ	0xFFE
 41188                           tosl	equ	0xFFD
 41189                           pclath	equ	0xFFA
 41190                           tblptru	equ	0xFF8
 41191                           tblptrh	equ	0xFF7
 41192                           tblptrl	equ	0xFF6
 41193                           tablat	equ	0xFF5
 41194                           prodh	equ	0xFF4
 41195                           prodl	equ	0xFF3
 41196                           intcon	equ	0xFF2
 41197                           intcon2	equ	0xFF1
 41198                           intcon3	equ	0xFF0
 41199                           indf0	equ	0xFEF
 41200                           postinc0	equ	0xFEE
 41201                           fsr0h	equ	0xFEA
 41202                           fsr0l	equ	0xFE9
 41203                           wreg	equ	0xFE8
 41204                           indf1	equ	0xFE7
 41205                           postdec1	equ	0xFE5
 41206                           plusw1	equ	0xFE3
 41207                           fsr1h	equ	0xFE2
 41208                           fsr1l	equ	0xFE1
 41209                           indf2	equ	0xFDF
 41210                           postinc2	equ	0xFDE
 41211                           postdec2	equ	0xFDD
 41212                           plusw2	equ	0xFDB
 41213                           fsr2h	equ	0xFDA
 41214                           fsr2l	equ	0xFD9
 41215                           status	equ	0xFD8
 41216                           
 41217 ;; *************** function _fat_get_file_size *****************
 41218 ;; Defined at:
 41219 ;;		line 561 in file "fat16.c"
 41220 ;; Parameters:    Size  Location     Type
 41221 ;;  file_number     1    wreg     unsigned char 
 41222 ;; Auto vars:     Size  Location     Type
 41223 ;;  file_number     1   65[COMRAM] unsigned char 
 41224 ;;  file_size       4   61[COMRAM] unsigned long 
 41225 ;;  offset          2   59[COMRAM] unsigned int 
 41226 ;;  sector          2   57[COMRAM] unsigned int 
 41227 ;; Return value:  Size  Location     Type
 41228 ;;                  4   53[COMRAM] unsigned long 
 41229 ;; Registers used:
 41230 ;;		wreg, status,2, status,0, cstack
 41231 ;; Tracked objects:
 41232 ;;		On entry : 0/0
 41233 ;;		On exit  : 0/0
 41234 ;;		Unchanged: 0/0
 41235 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41236 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41237 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41238 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41239 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41240 ;;Total ram usage:       13 bytes
 41241 ;; Hardware stack levels used:    1
 41242 ;; Hardware stack levels required when called:    6
 41243 ;; This function calls:
 41244 ;;		__offset_from_file_number
 41245 ;;		__root_is_available
 41246 ;;		__sector_from_file_number
 41247 ;;		_flash_partial_read
 41248 ;; This function is called by:
 41249 ;;		_fat_append_to_file
 41250 ;;		_fat_copy_sector_to_buffer
 41251 ;;		_fat_write_sector_from_buffer
 41252 ;;		__bootloader_find_file
 41253 ;;		__bootloader_verify_file
 41254 ;;		__fill_buffer_read_file
 41255 ;; This function uses a non-reentrant model
 41256 ;;
 41257                           
 41258                           	psect	text213
 41259  00781E                     __ptext213:
 41260                           	opt stack 0
 41261  00781E                     _fat_get_file_size:
 41262                           	opt stack 22
 41263                           
 41264                           ;incstack = 0
 41265                           ;fat_get_file_size@file_number stored from wreg
 41266  00781E  6E42               	movwf	fat_get_file_size@file_number,c
 41267                           
 41268                           ;fat16.c: 563: uint32_t file_size;;fat16.c: 564: uint16_t sector;;fat16.c: 565: uint16_t
      +                           offset;;fat16.c: 568: if(_root_is_available(file_number))
 41269  007820  5042               	movf	fat_get_file_size@file_number,w,c
 41270  007822  ECA7  F03D         	call	__root_is_available
 41271  007826  0900               	iorlw	0
 41272  007828  B4D8               	btfsc	status,2,c
 41273  00782A  D005               	goto	l2054
 41274                           
 41275                           ;fat16.c: 569: {;fat16.c: 571: return 0xFFFFFFFF;
 41276  00782C  6836               	setf	?_fat_get_file_size,c
 41277  00782E  6837               	setf	?_fat_get_file_size+1,c
 41278  007830  6838               	setf	?_fat_get_file_size+2,c
 41279  007832  6839               	setf	?_fat_get_file_size+3,c
 41280  007834  0012               	return	
 41281  007836                     l2054:
 41282                           
 41283                           ;fat16.c: 572: };fat16.c: 575: sector = _sector_from_file_number(file_number);
 41284  007836  5042               	movf	fat_get_file_size@file_number,w,c
 41285  007838  EC11  F045         	call	__sector_from_file_number
 41286  00783C  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 41287  007840  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 41288                           
 41289                           ;fat16.c: 576: offset = _offset_from_file_number(file_number);
 41290  007844  5042               	movf	fat_get_file_size@file_number,w,c
 41291  007846  EC9D  F045         	call	__offset_from_file_number
 41292  00784A  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 41293  00784E  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 41294                           
 41295                           ;fat16.c: 579: flash_partial_read(sector, offset+28, 4, &file_size);
 41296  007852  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 41297  007856  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 41298  00785A  0E1C               	movlw	28
 41299  00785C  243C               	addwf	fat_get_file_size@offset,w,c
 41300  00785E  6E2A               	movwf	flash_partial_read@start,c
 41301  007860  0E00               	movlw	0
 41302  007862  203D               	addwfc	fat_get_file_size@offset+1,w,c
 41303  007864  6E2B               	movwf	flash_partial_read@start+1,c
 41304  007866  0E00               	movlw	0
 41305  007868  6E2D               	movwf	flash_partial_read@length+1,c
 41306  00786A  0E04               	movlw	4
 41307  00786C  6E2C               	movwf	flash_partial_read@length,c
 41308  00786E  0E3E               	movlw	low fat_get_file_size@file_size
 41309  007870  6E2E               	movwf	flash_partial_read@data,c
 41310  007872  0E00               	movlw	high fat_get_file_size@file_size
 41311  007874  6E2F               	movwf	flash_partial_read@data+1,c
 41312  007876  EC58  F044         	call	_flash_partial_read	;wreg free
 41313                           
 41314                           ;fat16.c: 582: return file_size;
 41315  00787A  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 41316  00787E  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 41317  007882  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 41318  007886  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 41319  00788A  0012               	return	
 41320  00788C                     __end_of_fat_get_file_size:
 41321                           	opt stack 0
 41322                           tosu	equ	0xFFF
 41323                           tosh	equ	0xFFE
 41324                           tosl	equ	0xFFD
 41325                           pclath	equ	0xFFA
 41326                           tblptru	equ	0xFF8
 41327                           tblptrh	equ	0xFF7
 41328                           tblptrl	equ	0xFF6
 41329                           tablat	equ	0xFF5
 41330                           prodh	equ	0xFF4
 41331                           prodl	equ	0xFF3
 41332                           intcon	equ	0xFF2
 41333                           intcon2	equ	0xFF1
 41334                           intcon3	equ	0xFF0
 41335                           indf0	equ	0xFEF
 41336                           postinc0	equ	0xFEE
 41337                           fsr0h	equ	0xFEA
 41338                           fsr0l	equ	0xFE9
 41339                           wreg	equ	0xFE8
 41340                           indf1	equ	0xFE7
 41341                           postdec1	equ	0xFE5
 41342                           plusw1	equ	0xFE3
 41343                           fsr1h	equ	0xFE2
 41344                           fsr1l	equ	0xFE1
 41345                           indf2	equ	0xFDF
 41346                           postinc2	equ	0xFDE
 41347                           postdec2	equ	0xFDD
 41348                           plusw2	equ	0xFDB
 41349                           fsr2h	equ	0xFDA
 41350                           fsr2l	equ	0xFD9
 41351                           status	equ	0xFD8
 41352                           
 41353 ;; *************** function __root_is_available *****************
 41354 ;; Defined at:
 41355 ;;		line 408 in file "fat16.c"
 41356 ;; Parameters:    Size  Location     Type
 41357 ;;  file_number     1    wreg     unsigned char 
 41358 ;; Auto vars:     Size  Location     Type
 41359 ;;  file_number     1   51[COMRAM] unsigned char 
 41360 ;;  offset          2   49[COMRAM] unsigned int 
 41361 ;;  root_sector     2   47[COMRAM] unsigned int 
 41362 ;;  first_byte      1   52[COMRAM] unsigned char 
 41363 ;; Return value:  Size  Location     Type
 41364 ;;                  1    wreg      unsigned char 
 41365 ;; Registers used:
 41366 ;;		wreg, status,2, status,0, cstack
 41367 ;; Tracked objects:
 41368 ;;		On entry : 0/0
 41369 ;;		On exit  : 0/0
 41370 ;;		Unchanged: 0/0
 41371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41372 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41373 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41375 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41376 ;;Total ram usage:        6 bytes
 41377 ;; Hardware stack levels used:    1
 41378 ;; Hardware stack levels required when called:    5
 41379 ;; This function calls:
 41380 ;;		__offset_from_file_number
 41381 ;;		__sector_from_file_number
 41382 ;;		_flash_partial_read
 41383 ;; This function is called by:
 41384 ;;		__get_available_root_entry
 41385 ;;		_fat_get_file_size
 41386 ;;		_fat_delete_file
 41387 ;;		_fat_append_to_file
 41388 ;;		_fat_resize_file
 41389 ;;		_fat_copy_sector_to_buffer
 41390 ;;		_fat_write_sector_from_buffer
 41391 ;; This function uses a non-reentrant model
 41392 ;;
 41393                           
 41394                           	psect	text214
 41395  007B4E                     __ptext214:
 41396                           	opt stack 0
 41397  007B4E                     __root_is_available:
 41398                           	opt stack 22
 41399                           
 41400                           ;incstack = 0
 41401                           ;__root_is_available@file_number stored from wreg
 41402  007B4E  6E34               	movwf	__root_is_available@file_number,c
 41403                           
 41404                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 41405  007B50  0E3F               	movlw	63
 41406  007B52  6434               	cpfsgt	__root_is_available@file_number,c
 41407  007B54  D002               	goto	l2015
 41408                           
 41409                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 41410  007B56  0E00               	movlw	0
 41411  007B58  0012               	return	
 41412  007B5A                     l2015:
 41413                           
 41414                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 41415  007B5A  5034               	movf	__root_is_available@file_number,w,c
 41416  007B5C  EC11  F045         	call	__sector_from_file_number
 41417  007B60  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 41418  007B64  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 41419                           
 41420                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 41421  007B68  5034               	movf	__root_is_available@file_number,w,c
 41422  007B6A  EC9D  F045         	call	__offset_from_file_number
 41423  007B6E  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 41424  007B72  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 41425                           
 41426                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 41427  007B76  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 41428  007B7A  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 41429  007B7E  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 41430  007B82  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 41431  007B86  0E00               	movlw	0
 41432  007B88  6E2D               	movwf	flash_partial_read@length+1,c
 41433  007B8A  0E01               	movlw	1
 41434  007B8C  6E2C               	movwf	flash_partial_read@length,c
 41435  007B8E  0E35               	movlw	low __root_is_available@first_byte
 41436  007B90  6E2E               	movwf	flash_partial_read@data,c
 41437  007B92  0E00               	movlw	high __root_is_available@first_byte
 41438  007B94  6E2F               	movwf	flash_partial_read@data+1,c
 41439  007B96  EC58  F044         	call	_flash_partial_read	;wreg free
 41440                           
 41441                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 41442  007B9A  5035               	movf	__root_is_available@first_byte,w,c
 41443  007B9C  B4D8               	btfsc	status,2,c
 41444  007B9E  D004               	goto	u8170
 41445  007BA0  0EE5               	movlw	229
 41446  007BA2  1835               	xorwf	__root_is_available@first_byte,w,c
 41447  007BA4  A4D8               	btfss	status,2,c
 41448  007BA6  D002               	goto	l2017
 41449  007BA8                     u8170:
 41450                           
 41451                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 41452  007BA8  0E01               	movlw	1
 41453                           
 41454                           ;fat16.c: 434: }
 41455  007BAA  0012               	return	
 41456  007BAC                     l2017:
 41457                           
 41458                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 41459  007BAC  0E00               	movlw	0
 41460  007BAE  0012               	return	
 41461  007BB0                     __end_of__root_is_available:
 41462                           	opt stack 0
 41463                           tosu	equ	0xFFF
 41464                           tosh	equ	0xFFE
 41465                           tosl	equ	0xFFD
 41466                           pclath	equ	0xFFA
 41467                           tblptru	equ	0xFF8
 41468                           tblptrh	equ	0xFF7
 41469                           tblptrl	equ	0xFF6
 41470                           tablat	equ	0xFF5
 41471                           prodh	equ	0xFF4
 41472                           prodl	equ	0xFF3
 41473                           intcon	equ	0xFF2
 41474                           intcon2	equ	0xFF1
 41475                           intcon3	equ	0xFF0
 41476                           indf0	equ	0xFEF
 41477                           postinc0	equ	0xFEE
 41478                           fsr0h	equ	0xFEA
 41479                           fsr0l	equ	0xFE9
 41480                           wreg	equ	0xFE8
 41481                           indf1	equ	0xFE7
 41482                           postdec1	equ	0xFE5
 41483                           plusw1	equ	0xFE3
 41484                           fsr1h	equ	0xFE2
 41485                           fsr1l	equ	0xFE1
 41486                           indf2	equ	0xFDF
 41487                           postinc2	equ	0xFDE
 41488                           postdec2	equ	0xFDD
 41489                           plusw2	equ	0xFDB
 41490                           fsr2h	equ	0xFDA
 41491                           fsr2l	equ	0xFD9
 41492                           status	equ	0xFD8
 41493                           
 41494 ;; *************** function __get_first_cluster *****************
 41495 ;; Defined at:
 41496 ;;		line 501 in file "fat16.c"
 41497 ;; Parameters:    Size  Location     Type
 41498 ;;  file_number     1    wreg     unsigned char 
 41499 ;; Auto vars:     Size  Location     Type
 41500 ;;  file_number     1   55[COMRAM] unsigned char 
 41501 ;;  first_cluste    2   53[COMRAM] unsigned int 
 41502 ;;  offset          2   51[COMRAM] unsigned int 
 41503 ;;  sector          2   49[COMRAM] unsigned int 
 41504 ;; Return value:  Size  Location     Type
 41505 ;;                  2   47[COMRAM] unsigned int 
 41506 ;; Registers used:
 41507 ;;		wreg, status,2, status,0, cstack
 41508 ;; Tracked objects:
 41509 ;;		On entry : 0/0
 41510 ;;		On exit  : 0/0
 41511 ;;		Unchanged: 0/0
 41512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41513 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41514 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41516 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41517 ;;Total ram usage:        9 bytes
 41518 ;; Hardware stack levels used:    1
 41519 ;; Hardware stack levels required when called:    5
 41520 ;; This function calls:
 41521 ;;		__offset_from_file_number
 41522 ;;		__sector_from_file_number
 41523 ;;		_flash_partial_read
 41524 ;; This function is called by:
 41525 ;;		_fat_delete_file
 41526 ;;		_fat_copy_sector_to_buffer
 41527 ;;		_fat_write_sector_from_buffer
 41528 ;; This function uses a non-reentrant model
 41529 ;;
 41530                           
 41531                           	psect	text215
 41532  008276                     __ptext215:
 41533                           	opt stack 0
 41534  008276                     __get_first_cluster:
 41535                           	opt stack 21
 41536                           
 41537                           ;incstack = 0
 41538                           ;__get_first_cluster@file_number stored from wreg
 41539  008276  6E38               	movwf	__get_first_cluster@file_number,c
 41540                           
 41541                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 41542  008278  5038               	movf	__get_first_cluster@file_number,w,c
 41543  00827A  EC11  F045         	call	__sector_from_file_number
 41544  00827E  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 41545  008282  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 41546                           
 41547                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 41548  008286  5038               	movf	__get_first_cluster@file_number,w,c
 41549  008288  EC9D  F045         	call	__offset_from_file_number
 41550  00828C  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 41551  008290  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 41552                           
 41553                           ;fat16.c: 512: flash_partial_read(sector, offset, 2, &first_cluster);
 41554  008294  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 41555  008298  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 41556  00829C  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 41557  0082A0  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 41558  0082A4  0E00               	movlw	0
 41559  0082A6  6E2D               	movwf	flash_partial_read@length+1,c
 41560  0082A8  0E02               	movlw	2
 41561  0082AA  6E2C               	movwf	flash_partial_read@length,c
 41562  0082AC  0E36               	movlw	low __get_first_cluster@first_cluster
 41563  0082AE  6E2E               	movwf	flash_partial_read@data,c
 41564  0082B0  0E00               	movlw	high __get_first_cluster@first_cluster
 41565  0082B2  6E2F               	movwf	flash_partial_read@data+1,c
 41566  0082B4  EC58  F044         	call	_flash_partial_read	;wreg free
 41567                           
 41568                           ;fat16.c: 513: return first_cluster;
 41569  0082B8  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 41570  0082BC  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 41571  0082C0  0012               	return	
 41572  0082C2                     __end_of__get_first_cluster:
 41573                           	opt stack 0
 41574                           tosu	equ	0xFFF
 41575                           tosh	equ	0xFFE
 41576                           tosl	equ	0xFFD
 41577                           pclath	equ	0xFFA
 41578                           tblptru	equ	0xFF8
 41579                           tblptrh	equ	0xFF7
 41580                           tblptrl	equ	0xFF6
 41581                           tablat	equ	0xFF5
 41582                           prodh	equ	0xFF4
 41583                           prodl	equ	0xFF3
 41584                           intcon	equ	0xFF2
 41585                           intcon2	equ	0xFF1
 41586                           intcon3	equ	0xFF0
 41587                           indf0	equ	0xFEF
 41588                           postinc0	equ	0xFEE
 41589                           fsr0h	equ	0xFEA
 41590                           fsr0l	equ	0xFE9
 41591                           wreg	equ	0xFE8
 41592                           indf1	equ	0xFE7
 41593                           postdec1	equ	0xFE5
 41594                           plusw1	equ	0xFE3
 41595                           fsr1h	equ	0xFE2
 41596                           fsr1l	equ	0xFE1
 41597                           indf2	equ	0xFDF
 41598                           postinc2	equ	0xFDE
 41599                           postdec2	equ	0xFDD
 41600                           plusw2	equ	0xFDB
 41601                           fsr2h	equ	0xFDA
 41602                           fsr2l	equ	0xFD9
 41603                           status	equ	0xFD8
 41604                           
 41605 ;; *************** function __sector_from_file_number *****************
 41606 ;; Defined at:
 41607 ;;		line 52 in file "fat16.c"
 41608 ;; Parameters:    Size  Location     Type
 41609 ;;  file_number     1    wreg     unsigned char 
 41610 ;; Auto vars:     Size  Location     Type
 41611 ;;  file_number     1    2[COMRAM] unsigned char 
 41612 ;;  sector          2    3[COMRAM] unsigned int 
 41613 ;; Return value:  Size  Location     Type
 41614 ;;                  2    0[COMRAM] unsigned int 
 41615 ;; Registers used:
 41616 ;;		wreg, status,2, status,0
 41617 ;; Tracked objects:
 41618 ;;		On entry : 0/0
 41619 ;;		On exit  : 0/0
 41620 ;;		Unchanged: 0/0
 41621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41622 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41623 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41625 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41626 ;;Total ram usage:        5 bytes
 41627 ;; Hardware stack levels used:    1
 41628 ;; This function calls:
 41629 ;;		Nothing
 41630 ;; This function is called by:
 41631 ;;		__root_is_available
 41632 ;;		__write_root
 41633 ;;		__delete_root
 41634 ;;		__get_first_cluster
 41635 ;;		_fat_get_file_size
 41636 ;;		_fat_get_file_information
 41637 ;; This function uses a non-reentrant model
 41638 ;;
 41639                           
 41640                           	psect	text216
 41641  008A22                     __ptext216:
 41642                           	opt stack 0
 41643  008A22                     __sector_from_file_number:
 41644                           	opt stack 27
 41645                           
 41646                           ;incstack = 0
 41647                           ;__sector_from_file_number@file_number stored from wreg
 41648  008A22  6E03               	movwf	__sector_from_file_number@file_number,c
 41649                           
 41650                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 41651  008A24  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 41652  008A28  6A05               	clrf	__sector_from_file_number@sector+1,c
 41653                           
 41654                           ;fat16.c: 56: sector >>= 4;
 41655  008A2A  3A04               	swapf	__sector_from_file_number@sector,f,c
 41656  008A2C  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 41657  008A2E  0E0F               	movlw	15
 41658  008A30  1604               	andwf	__sector_from_file_number@sector,f,c
 41659  008A32  5005               	movf	__sector_from_file_number@sector+1,w,c
 41660  008A34  0BF0               	andlw	240
 41661  008A36  1204               	iorwf	__sector_from_file_number@sector,f,c
 41662  008A38  0E0F               	movlw	15
 41663  008A3A  1605               	andwf	__sector_from_file_number@sector+1,f,c
 41664                           
 41665                           ;fat16.c: 57: sector += 34;
 41666  008A3C  0E22               	movlw	34
 41667  008A3E  2604               	addwf	__sector_from_file_number@sector,f,c
 41668  008A40  0E00               	movlw	0
 41669  008A42  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 41670                           
 41671                           ;fat16.c: 58: return sector;
 41672  008A44  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 41673  008A48  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 41674  008A4C  0012               	return	
 41675  008A4E                     __end_of__sector_from_file_number:
 41676                           	opt stack 0
 41677                           tosu	equ	0xFFF
 41678                           tosh	equ	0xFFE
 41679                           tosl	equ	0xFFD
 41680                           pclath	equ	0xFFA
 41681                           tblptru	equ	0xFF8
 41682                           tblptrh	equ	0xFF7
 41683                           tblptrl	equ	0xFF6
 41684                           tablat	equ	0xFF5
 41685                           prodh	equ	0xFF4
 41686                           prodl	equ	0xFF3
 41687                           intcon	equ	0xFF2
 41688                           intcon2	equ	0xFF1
 41689                           intcon3	equ	0xFF0
 41690                           indf0	equ	0xFEF
 41691                           postinc0	equ	0xFEE
 41692                           fsr0h	equ	0xFEA
 41693                           fsr0l	equ	0xFE9
 41694                           wreg	equ	0xFE8
 41695                           indf1	equ	0xFE7
 41696                           postdec1	equ	0xFE5
 41697                           plusw1	equ	0xFE3
 41698                           fsr1h	equ	0xFE2
 41699                           fsr1l	equ	0xFE1
 41700                           indf2	equ	0xFDF
 41701                           postinc2	equ	0xFDE
 41702                           postdec2	equ	0xFDD
 41703                           plusw2	equ	0xFDB
 41704                           fsr2h	equ	0xFDA
 41705                           fsr2l	equ	0xFD9
 41706                           status	equ	0xFD8
 41707                           
 41708 ;; *************** function __offset_from_file_number *****************
 41709 ;; Defined at:
 41710 ;;		line 61 in file "fat16.c"
 41711 ;; Parameters:    Size  Location     Type
 41712 ;;  file_number     1    wreg     unsigned char 
 41713 ;; Auto vars:     Size  Location     Type
 41714 ;;  file_number     1    2[COMRAM] unsigned char 
 41715 ;;  offset          2    3[COMRAM] unsigned int 
 41716 ;; Return value:  Size  Location     Type
 41717 ;;                  2    0[COMRAM] unsigned int 
 41718 ;; Registers used:
 41719 ;;		wreg, status,2, status,0
 41720 ;; Tracked objects:
 41721 ;;		On entry : 0/0
 41722 ;;		On exit  : 0/0
 41723 ;;		Unchanged: 0/0
 41724 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41725 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41726 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41727 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41728 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41729 ;;Total ram usage:        5 bytes
 41730 ;; Hardware stack levels used:    1
 41731 ;; This function calls:
 41732 ;;		Nothing
 41733 ;; This function is called by:
 41734 ;;		__root_is_available
 41735 ;;		__write_root
 41736 ;;		__delete_root
 41737 ;;		__get_first_cluster
 41738 ;;		_fat_get_file_size
 41739 ;;		_fat_get_file_information
 41740 ;; This function uses a non-reentrant model
 41741 ;;
 41742                           
 41743                           	psect	text217
 41744  008B3A                     __ptext217:
 41745                           	opt stack 0
 41746  008B3A                     __offset_from_file_number:
 41747                           	opt stack 26
 41748                           
 41749                           ;incstack = 0
 41750                           ;__offset_from_file_number@file_number stored from wreg
 41751  008B3A  6E03               	movwf	__offset_from_file_number@file_number,c
 41752                           
 41753                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 41754  008B3C  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 41755  008B40  6A05               	clrf	__offset_from_file_number@offset+1,c
 41756                           
 41757                           ;fat16.c: 65: offset &= 0b1111;
 41758  008B42  0E0F               	movlw	15
 41759  008B44  1604               	andwf	__offset_from_file_number@offset,f,c
 41760  008B46  0E00               	movlw	0
 41761  008B48  1605               	andwf	__offset_from_file_number@offset+1,f,c
 41762                           
 41763                           ;fat16.c: 66: offset <<= 5;
 41764  008B4A  0E05               	movlw	5
 41765  008B4C                     u7405:
 41766  008B4C  90D8               	bcf	status,0,c
 41767  008B4E  3604               	rlcf	__offset_from_file_number@offset,f,c
 41768  008B50  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 41769  008B52  2EE8               	decfsz	wreg,f,c
 41770  008B54  D7FB               	goto	u7405
 41771                           
 41772                           ;fat16.c: 67: return offset;
 41773  008B56  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 41774  008B5A  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 41775  008B5E  0012               	return	
 41776  008B60                     __end_of__offset_from_file_number:
 41777                           	opt stack 0
 41778                           tosu	equ	0xFFF
 41779                           tosh	equ	0xFFE
 41780                           tosl	equ	0xFFD
 41781                           pclath	equ	0xFFA
 41782                           tblptru	equ	0xFF8
 41783                           tblptrh	equ	0xFF7
 41784                           tblptrl	equ	0xFF6
 41785                           tablat	equ	0xFF5
 41786                           prodh	equ	0xFF4
 41787                           prodl	equ	0xFF3
 41788                           intcon	equ	0xFF2
 41789                           intcon2	equ	0xFF1
 41790                           intcon3	equ	0xFF0
 41791                           indf0	equ	0xFEF
 41792                           postinc0	equ	0xFEE
 41793                           fsr0h	equ	0xFEA
 41794                           fsr0l	equ	0xFE9
 41795                           wreg	equ	0xFE8
 41796                           indf1	equ	0xFE7
 41797                           postdec1	equ	0xFE5
 41798                           plusw1	equ	0xFE3
 41799                           fsr1h	equ	0xFE2
 41800                           fsr1l	equ	0xFE1
 41801                           indf2	equ	0xFDF
 41802                           postinc2	equ	0xFDE
 41803                           postdec2	equ	0xFDD
 41804                           plusw2	equ	0xFDB
 41805                           fsr2h	equ	0xFDA
 41806                           fsr2l	equ	0xFD9
 41807                           status	equ	0xFD8
 41808                           
 41809 ;; *************** function __find_nth_cluster *****************
 41810 ;; Defined at:
 41811 ;;		line 182 in file "fat16.c"
 41812 ;; Parameters:    Size  Location     Type
 41813 ;;  cluster         2   55[COMRAM] unsigned int 
 41814 ;;  n               2   57[COMRAM] unsigned int 
 41815 ;; Auto vars:     Size  Location     Type
 41816 ;;  sector          2   63[COMRAM] unsigned int 
 41817 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 41818 ;;  offset          2   59[COMRAM] unsigned int 
 41819 ;; Return value:  Size  Location     Type
 41820 ;;                  2   55[COMRAM] unsigned int 
 41821 ;; Registers used:
 41822 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41823 ;; Tracked objects:
 41824 ;;		On entry : 0/0
 41825 ;;		On exit  : 0/0
 41826 ;;		Unchanged: 0/0
 41827 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41828 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41829 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41830 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41831 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41832 ;;Total ram usage:       10 bytes
 41833 ;; Hardware stack levels used:    1
 41834 ;; Hardware stack levels required when called:    6
 41835 ;; This function calls:
 41836 ;;		__data_sector_from_cluster
 41837 ;;		__fat_offset_from_cluster
 41838 ;;		__read_fat
 41839 ;;		__read_value_from_offset
 41840 ;;		_flash_sector_read
 41841 ;; This function is called by:
 41842 ;;		_fat_read_from_file_fast
 41843 ;;		_fat_modify_file
 41844 ;;		_fat_copy_sector_to_buffer
 41845 ;;		_fat_write_sector_from_buffer
 41846 ;; This function uses a non-reentrant model
 41847 ;;
 41848                           
 41849                           	psect	text218
 41850  006B9E                     __ptext218:
 41851                           	opt stack 0
 41852  006B9E                     __find_nth_cluster:
 41853                           	opt stack 21
 41854                           
 41855                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 41856                           
 41857                           ;incstack = 0
 41858  006B9E  0E00               	movlw	0
 41859  006BA0  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 41860  006BA2  0E00               	movlw	0
 41861  006BA4  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 41862                           
 41863                           ;fat16.c: 189: if(n==1)
 41864  006BA6  043A               	decf	__find_nth_cluster@n,w,c
 41865  006BA8  103B               	iorwf	__find_nth_cluster@n+1,w,c
 41866  006BAA  A4D8               	btfss	status,2,c
 41867  006BAC  D03E               	goto	l1976
 41868                           
 41869                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 41870  006BAE  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 41871  006BB2  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 41872  006BB6  EC19  F040         	call	__read_fat	;wreg free
 41873  006BBA  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 41874  006BBE  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 41875  006BC2  0012               	return	
 41876  006BC4                     
 41877                           ;fat16.c: 195: {;fat16.c: 197: sector = _data_sector_from_cluster(cluster);
 41878  006BC4  C038  F001         	movff	__find_nth_cluster@cluster,__data_sector_from_cluster@fat_cluster
 41879  006BC8  C039  F002         	movff	__find_nth_cluster@cluster+1,__data_sector_from_cluster@fat_cluster+1
 41880  006BCC  EC62  F047         	call	__data_sector_from_cluster	;wreg free
 41881  006BD0  C001  F040         	movff	?__data_sector_from_cluster,__find_nth_cluster@sector
 41882  006BD4  C002  F041         	movff	?__data_sector_from_cluster+1,__find_nth_cluster@sector+1
 41883                           
 41884                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 41885  006BD8  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 41886  006BDC  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 41887  006BE0  ECD6  F046         	call	__fat_offset_from_cluster	;wreg free
 41888  006BE4  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 41889  006BE8  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 41890                           
 41891                           ;fat16.c: 201: if(sector != sector_in_buffer)
 41892  006BEC  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 41893  006BEE  1840               	xorwf	__find_nth_cluster@sector,w,c
 41894  006BF0  E104               	bnz	u7960
 41895  006BF2  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 41896  006BF4  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 41897  006BF6  B4D8               	btfsc	status,2,c
 41898  006BF8  D00A               	goto	l1978
 41899  006BFA                     u7960:
 41900                           
 41901                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 41902  006BFA  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 41903  006BFE  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 41904  006C02  0EC0               	movlw	low _buffer
 41905  006C04  6E2A               	movwf	flash_sector_read@data,c
 41906  006C06  0E03               	movlw	high _buffer
 41907  006C08  6E2B               	movwf	flash_sector_read@data+1,c
 41908  006C0A  EC3F  F044         	call	_flash_sector_read	;wreg free
 41909  006C0E                     l1978:
 41910                           
 41911                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 41912  006C0E  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 41913  006C12  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 41914  006C16  0EC0               	movlw	low _buffer
 41915  006C18  6E03               	movwf	__read_value_from_offset@buffer,c
 41916  006C1A  0E03               	movlw	high _buffer
 41917  006C1C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 41918  006C1E  ECCD  F041         	call	__read_value_from_offset	;wreg free
 41919  006C22  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 41920  006C26  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 41921  006C2A                     l1976:
 41922  006C2A  503A               	movf	__find_nth_cluster@n,w,c
 41923  006C2C  103B               	iorwf	__find_nth_cluster@n+1,w,c
 41924  006C2E  A4D8               	btfss	status,2,c
 41925  006C30  D7C9               	goto	l1977
 41926                           
 41927                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 41928  006C32  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 41929  006C36  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 41930  006C3A  0012               	return		;funcret
 41931  006C3C                     __end_of__find_nth_cluster:
 41932                           	opt stack 0
 41933                           tosu	equ	0xFFF
 41934                           tosh	equ	0xFFE
 41935                           tosl	equ	0xFFD
 41936                           pclath	equ	0xFFA
 41937                           tblptru	equ	0xFF8
 41938                           tblptrh	equ	0xFF7
 41939                           tblptrl	equ	0xFF6
 41940                           tablat	equ	0xFF5
 41941                           prodh	equ	0xFF4
 41942                           prodl	equ	0xFF3
 41943                           intcon	equ	0xFF2
 41944                           intcon2	equ	0xFF1
 41945                           intcon3	equ	0xFF0
 41946                           indf0	equ	0xFEF
 41947                           postinc0	equ	0xFEE
 41948                           fsr0h	equ	0xFEA
 41949                           fsr0l	equ	0xFE9
 41950                           wreg	equ	0xFE8
 41951                           indf1	equ	0xFE7
 41952                           postdec1	equ	0xFE5
 41953                           plusw1	equ	0xFE3
 41954                           fsr1h	equ	0xFE2
 41955                           fsr1l	equ	0xFE1
 41956                           indf2	equ	0xFDF
 41957                           postinc2	equ	0xFDE
 41958                           postdec2	equ	0xFDD
 41959                           plusw2	equ	0xFDB
 41960                           fsr2h	equ	0xFDA
 41961                           fsr2l	equ	0xFD9
 41962                           status	equ	0xFD8
 41963                           
 41964 ;; *************** function _flash_sector_read *****************
 41965 ;; Defined at:
 41966 ;;		line 419 in file "flash.c"
 41967 ;; Parameters:    Size  Location     Type
 41968 ;;  page            2   39[COMRAM] unsigned int 
 41969 ;;  data            2   41[COMRAM] PTR unsigned char 
 41970 ;;		 -> buffer(512), msd_buffer(512), 
 41971 ;; Auto vars:     Size  Location     Type
 41972 ;;		None
 41973 ;; Return value:  Size  Location     Type
 41974 ;;                  1    wreg      void 
 41975 ;; Registers used:
 41976 ;;		wreg, status,2, status,0, cstack
 41977 ;; Tracked objects:
 41978 ;;		On entry : 0/0
 41979 ;;		On exit  : 0/0
 41980 ;;		Unchanged: 0/0
 41981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41982 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41983 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41985 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41986 ;;Total ram usage:        4 bytes
 41987 ;; Hardware stack levels used:    1
 41988 ;; Hardware stack levels required when called:    4
 41989 ;; This function calls:
 41990 ;;		__flash_partial_read
 41991 ;;		_spi_set_configuration
 41992 ;; This function is called by:
 41993 ;;		_ExternalFlash_SectorRead
 41994 ;;		__get_available_cluster
 41995 ;;		__find_nth_cluster
 41996 ;;		__make_cluster_chain
 41997 ;;		_fat_find_file
 41998 ;;		_fat_get_format_status
 41999 ;; This function uses a non-reentrant model
 42000 ;;
 42001                           
 42002                           	psect	text219
 42003  00887E                     __ptext219:
 42004                           	opt stack 0
 42005  00887E                     _flash_sector_read:
 42006                           	opt stack 23
 42007                           
 42008                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42009                           
 42010                           ;incstack = 0
 42011  00887E  0E00               	movlw	0
 42012  008880  EC66  F023         	call	_spi_set_configuration
 42013                           
 42014                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 42015  008884  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 42016  008888  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 42017  00888C  0E00               	movlw	0
 42018  00888E  6E17               	movwf	__flash_partial_read@start+1,c
 42019  008890  0E00               	movlw	0
 42020  008892  6E16               	movwf	__flash_partial_read@start,c
 42021  008894  0E02               	movlw	2
 42022  008896  6E19               	movwf	__flash_partial_read@length+1,c
 42023  008898  0E00               	movlw	0
 42024  00889A  6E18               	movwf	__flash_partial_read@length,c
 42025  00889C  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 42026  0088A0  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 42027  0088A4  ECBA  F03A         	call	__flash_partial_read	;wreg free
 42028                           
 42029                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42030  0088A8  0E01               	movlw	1
 42031  0088AA  EC66  F023         	call	_spi_set_configuration
 42032  0088AE  0012               	return		;funcret
 42033  0088B0                     __end_of_flash_sector_read:
 42034                           	opt stack 0
 42035                           tosu	equ	0xFFF
 42036                           tosh	equ	0xFFE
 42037                           tosl	equ	0xFFD
 42038                           pclath	equ	0xFFA
 42039                           tblptru	equ	0xFF8
 42040                           tblptrh	equ	0xFF7
 42041                           tblptrl	equ	0xFF6
 42042                           tablat	equ	0xFF5
 42043                           prodh	equ	0xFF4
 42044                           prodl	equ	0xFF3
 42045                           intcon	equ	0xFF2
 42046                           intcon2	equ	0xFF1
 42047                           intcon3	equ	0xFF0
 42048                           indf0	equ	0xFEF
 42049                           postinc0	equ	0xFEE
 42050                           fsr0h	equ	0xFEA
 42051                           fsr0l	equ	0xFE9
 42052                           wreg	equ	0xFE8
 42053                           indf1	equ	0xFE7
 42054                           postdec1	equ	0xFE5
 42055                           plusw1	equ	0xFE3
 42056                           fsr1h	equ	0xFE2
 42057                           fsr1l	equ	0xFE1
 42058                           indf2	equ	0xFDF
 42059                           postinc2	equ	0xFDE
 42060                           postdec2	equ	0xFDD
 42061                           plusw2	equ	0xFDB
 42062                           fsr2h	equ	0xFDA
 42063                           fsr2l	equ	0xFD9
 42064                           status	equ	0xFD8
 42065                           
 42066 ;; *************** function __read_value_from_offset *****************
 42067 ;; Defined at:
 42068 ;;		line 114 in file "fat16.c"
 42069 ;; Parameters:    Size  Location     Type
 42070 ;;  offset          2    0[COMRAM] unsigned int 
 42071 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42072 ;;		 -> buffer(512), 
 42073 ;; Auto vars:     Size  Location     Type
 42074 ;;  value           2    7[COMRAM] unsigned int 
 42075 ;; Return value:  Size  Location     Type
 42076 ;;                  2    0[COMRAM] unsigned int 
 42077 ;; Registers used:
 42078 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42079 ;; Tracked objects:
 42080 ;;		On entry : 0/0
 42081 ;;		On exit  : 0/0
 42082 ;;		Unchanged: 0/0
 42083 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42084 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42085 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42086 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42087 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42088 ;;Total ram usage:        9 bytes
 42089 ;; Hardware stack levels used:    1
 42090 ;; This function calls:
 42091 ;;		Nothing
 42092 ;; This function is called by:
 42093 ;;		__find_nth_cluster
 42094 ;;		__make_cluster_chain
 42095 ;; This function uses a non-reentrant model
 42096 ;;
 42097                           
 42098                           	psect	text220
 42099  00839A                     __ptext220:
 42100                           	opt stack 0
 42101  00839A                     __read_value_from_offset:
 42102                           	opt stack 26
 42103                           
 42104                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 42105                           
 42106                           ;incstack = 0
 42107  00839A  0E01               	movlw	1
 42108  00839C  2401               	addwf	__read_value_from_offset@offset,w,c
 42109  00839E  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42110  0083A0  0E00               	movlw	0
 42111  0083A2  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 42112  0083A4  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 42113  0083A6  5005               	movf	??__read_value_from_offset,w,c
 42114  0083A8  2403               	addwf	__read_value_from_offset@buffer,w,c
 42115  0083AA  6ED9               	movwf	fsr2l,c
 42116  0083AC  5006               	movf	??__read_value_from_offset+1,w,c
 42117  0083AE  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42118  0083B0  6EDA               	movwf	fsr2h,c
 42119  0083B2  50DF               	movf	indf2,w,c
 42120  0083B4  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 42121  0083B6  5007               	movf	??__read_value_from_offset+2,w,c
 42122  0083B8  6E08               	movwf	__read_value_from_offset@value,c
 42123  0083BA  6A09               	clrf	__read_value_from_offset@value+1,c
 42124                           
 42125                           ;fat16.c: 118: value <<= 8;
 42126  0083BC  5008               	movf	__read_value_from_offset@value,w,c
 42127  0083BE  6E09               	movwf	__read_value_from_offset@value+1,c
 42128  0083C0  6A08               	clrf	__read_value_from_offset@value,c
 42129                           
 42130                           ;fat16.c: 119: value |= buffer[offset];
 42131  0083C2  5001               	movf	__read_value_from_offset@offset,w,c
 42132  0083C4  2403               	addwf	__read_value_from_offset@buffer,w,c
 42133  0083C6  6ED9               	movwf	fsr2l,c
 42134  0083C8  5002               	movf	__read_value_from_offset@offset+1,w,c
 42135  0083CA  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42136  0083CC  6EDA               	movwf	fsr2h,c
 42137  0083CE  50DF               	movf	indf2,w,c
 42138  0083D0  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42139  0083D2  5005               	movf	??__read_value_from_offset,w,c
 42140  0083D4  1208               	iorwf	__read_value_from_offset@value,f,c
 42141                           
 42142                           ;fat16.c: 120: return value;
 42143  0083D6  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 42144  0083DA  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 42145  0083DE  0012               	return	
 42146  0083E0                     __end_of__read_value_from_offset:
 42147                           	opt stack 0
 42148                           tosu	equ	0xFFF
 42149                           tosh	equ	0xFFE
 42150                           tosl	equ	0xFFD
 42151                           pclath	equ	0xFFA
 42152                           tblptru	equ	0xFF8
 42153                           tblptrh	equ	0xFF7
 42154                           tblptrl	equ	0xFF6
 42155                           tablat	equ	0xFF5
 42156                           prodh	equ	0xFF4
 42157                           prodl	equ	0xFF3
 42158                           intcon	equ	0xFF2
 42159                           intcon2	equ	0xFF1
 42160                           intcon3	equ	0xFF0
 42161                           indf0	equ	0xFEF
 42162                           postinc0	equ	0xFEE
 42163                           fsr0h	equ	0xFEA
 42164                           fsr0l	equ	0xFE9
 42165                           wreg	equ	0xFE8
 42166                           indf1	equ	0xFE7
 42167                           postdec1	equ	0xFE5
 42168                           plusw1	equ	0xFE3
 42169                           fsr1h	equ	0xFE2
 42170                           fsr1l	equ	0xFE1
 42171                           indf2	equ	0xFDF
 42172                           postinc2	equ	0xFDE
 42173                           postdec2	equ	0xFDD
 42174                           plusw2	equ	0xFDB
 42175                           fsr2h	equ	0xFDA
 42176                           fsr2l	equ	0xFD9
 42177                           status	equ	0xFD8
 42178                           
 42179 ;; *************** function __read_fat *****************
 42180 ;; Defined at:
 42181 ;;		line 456 in file "fat16.c"
 42182 ;; Parameters:    Size  Location     Type
 42183 ;;  cluster         2   47[COMRAM] unsigned int 
 42184 ;; Auto vars:     Size  Location     Type
 42185 ;;  value           2   53[COMRAM] unsigned int 
 42186 ;;  offset          2   51[COMRAM] unsigned int 
 42187 ;;  sector          2   49[COMRAM] unsigned int 
 42188 ;; Return value:  Size  Location     Type
 42189 ;;                  2   47[COMRAM] unsigned int 
 42190 ;; Registers used:
 42191 ;;		wreg, status,2, status,0, cstack
 42192 ;; Tracked objects:
 42193 ;;		On entry : 0/0
 42194 ;;		On exit  : 0/0
 42195 ;;		Unchanged: 0/0
 42196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42197 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42198 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42200 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42201 ;;Total ram usage:        8 bytes
 42202 ;; Hardware stack levels used:    1
 42203 ;; Hardware stack levels required when called:    5
 42204 ;; This function calls:
 42205 ;;		__fat_offset_from_cluster
 42206 ;;		__fat_sector_from_cluster
 42207 ;;		_flash_partial_read
 42208 ;; This function is called by:
 42209 ;;		__find_nth_cluster
 42210 ;;		_fat_read_from_file_fast
 42211 ;;		_fat_modify_file
 42212 ;; This function uses a non-reentrant model
 42213 ;;
 42214                           
 42215                           	psect	text221
 42216  008032                     __ptext221:
 42217                           	opt stack 0
 42218  008032                     __read_fat:
 42219                           	opt stack 22
 42220                           
 42221                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 42222                           
 42223                           ;incstack = 0
 42224  008032  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 42225  008036  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 42226  00803A  ECCA  F046         	call	__fat_sector_from_cluster	;wreg free
 42227  00803E  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 42228  008042  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 42229                           
 42230                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 42231  008046  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 42232  00804A  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 42233  00804E  ECD6  F046         	call	__fat_offset_from_cluster	;wreg free
 42234  008052  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 42235  008056  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 42236                           
 42237                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 42238  00805A  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 42239  00805E  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 42240  008062  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 42241  008066  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 42242  00806A  0E00               	movlw	0
 42243  00806C  6E2D               	movwf	flash_partial_read@length+1,c
 42244  00806E  0E02               	movlw	2
 42245  008070  6E2C               	movwf	flash_partial_read@length,c
 42246  008072  0E36               	movlw	low __read_fat@value
 42247  008074  6E2E               	movwf	flash_partial_read@data,c
 42248  008076  0E00               	movlw	high __read_fat@value
 42249  008078  6E2F               	movwf	flash_partial_read@data+1,c
 42250  00807A  EC58  F044         	call	_flash_partial_read	;wreg free
 42251                           
 42252                           ;fat16.c: 470: return value;
 42253  00807E  C036  F030         	movff	__read_fat@value,?__read_fat
 42254  008082  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 42255  008086  0012               	return	
 42256  008088                     __end_of__read_fat:
 42257                           	opt stack 0
 42258                           tosu	equ	0xFFF
 42259                           tosh	equ	0xFFE
 42260                           tosl	equ	0xFFD
 42261                           pclath	equ	0xFFA
 42262                           tblptru	equ	0xFF8
 42263                           tblptrh	equ	0xFF7
 42264                           tblptrl	equ	0xFF6
 42265                           tablat	equ	0xFF5
 42266                           prodh	equ	0xFF4
 42267                           prodl	equ	0xFF3
 42268                           intcon	equ	0xFF2
 42269                           intcon2	equ	0xFF1
 42270                           intcon3	equ	0xFF0
 42271                           indf0	equ	0xFEF
 42272                           postinc0	equ	0xFEE
 42273                           fsr0h	equ	0xFEA
 42274                           fsr0l	equ	0xFE9
 42275                           wreg	equ	0xFE8
 42276                           indf1	equ	0xFE7
 42277                           postdec1	equ	0xFE5
 42278                           plusw1	equ	0xFE3
 42279                           fsr1h	equ	0xFE2
 42280                           fsr1l	equ	0xFE1
 42281                           indf2	equ	0xFDF
 42282                           postinc2	equ	0xFDE
 42283                           postdec2	equ	0xFDD
 42284                           plusw2	equ	0xFDB
 42285                           fsr2h	equ	0xFDA
 42286                           fsr2l	equ	0xFD9
 42287                           status	equ	0xFD8
 42288                           
 42289 ;; *************** function _flash_partial_read *****************
 42290 ;; Defined at:
 42291 ;;		line 457 in file "flash.c"
 42292 ;; Parameters:    Size  Location     Type
 42293 ;;  page            2   39[COMRAM] unsigned int 
 42294 ;;  start           2   41[COMRAM] unsigned int 
 42295 ;;  length          2   43[COMRAM] unsigned int 
 42296 ;;  data            2   45[COMRAM] PTR unsigned char 
 42297 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 42298 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 42299 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 42300 ;;		 -> RAM(3759), 
 42301 ;; Auto vars:     Size  Location     Type
 42302 ;;		None
 42303 ;; Return value:  Size  Location     Type
 42304 ;;                  1    wreg      void 
 42305 ;; Registers used:
 42306 ;;		wreg, status,2, status,0, cstack
 42307 ;; Tracked objects:
 42308 ;;		On entry : 0/0
 42309 ;;		On exit  : 0/0
 42310 ;;		Unchanged: 0/0
 42311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42312 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42313 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42314 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42315 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42316 ;;Total ram usage:        8 bytes
 42317 ;; Hardware stack levels used:    1
 42318 ;; Hardware stack levels required when called:    4
 42319 ;; This function calls:
 42320 ;;		__flash_partial_read
 42321 ;;		_spi_set_configuration
 42322 ;; This function is called by:
 42323 ;;		__root_is_available
 42324 ;;		__read_fat
 42325 ;;		__get_first_cluster
 42326 ;;		_fat_get_file_size
 42327 ;;		_fat_read_from_file_fast
 42328 ;;		_fat_get_file_information
 42329 ;; This function uses a non-reentrant model
 42330 ;;
 42331                           
 42332                           	psect	text222
 42333  0088B0                     __ptext222:
 42334                           	opt stack 0
 42335  0088B0                     _flash_partial_read:
 42336                           	opt stack 23
 42337                           
 42338                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42339                           
 42340                           ;incstack = 0
 42341  0088B0  0E00               	movlw	0
 42342  0088B2  EC66  F023         	call	_spi_set_configuration
 42343                           
 42344                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 42345  0088B6  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 42346  0088BA  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 42347  0088BE  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 42348  0088C2  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 42349  0088C6  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 42350  0088CA  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 42351  0088CE  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 42352  0088D2  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 42353  0088D6  ECBA  F03A         	call	__flash_partial_read	;wreg free
 42354                           
 42355                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42356  0088DA  0E01               	movlw	1
 42357  0088DC  EC66  F023         	call	_spi_set_configuration
 42358  0088E0  0012               	return		;funcret
 42359  0088E2                     __end_of_flash_partial_read:
 42360                           	opt stack 0
 42361                           tosu	equ	0xFFF
 42362                           tosh	equ	0xFFE
 42363                           tosl	equ	0xFFD
 42364                           pclath	equ	0xFFA
 42365                           tblptru	equ	0xFF8
 42366                           tblptrh	equ	0xFF7
 42367                           tblptrl	equ	0xFF6
 42368                           tablat	equ	0xFF5
 42369                           prodh	equ	0xFF4
 42370                           prodl	equ	0xFF3
 42371                           intcon	equ	0xFF2
 42372                           intcon2	equ	0xFF1
 42373                           intcon3	equ	0xFF0
 42374                           indf0	equ	0xFEF
 42375                           postinc0	equ	0xFEE
 42376                           fsr0h	equ	0xFEA
 42377                           fsr0l	equ	0xFE9
 42378                           wreg	equ	0xFE8
 42379                           indf1	equ	0xFE7
 42380                           postdec1	equ	0xFE5
 42381                           plusw1	equ	0xFE3
 42382                           fsr1h	equ	0xFE2
 42383                           fsr1l	equ	0xFE1
 42384                           indf2	equ	0xFDF
 42385                           postinc2	equ	0xFDE
 42386                           postdec2	equ	0xFDD
 42387                           plusw2	equ	0xFDB
 42388                           fsr2h	equ	0xFDA
 42389                           fsr2l	equ	0xFD9
 42390                           status	equ	0xFD8
 42391                           
 42392 ;; *************** function _spi_set_configuration *****************
 42393 ;; Defined at:
 42394 ;;		line 139 in file "spi.c"
 42395 ;; Parameters:    Size  Location     Type
 42396 ;;  configuratio    1    wreg     enum E6749
 42397 ;; Auto vars:     Size  Location     Type
 42398 ;;  configuratio    1    0[COMRAM] enum E6749
 42399 ;;  cntr            1    0        unsigned char 
 42400 ;; Return value:  Size  Location     Type
 42401 ;;                  1    wreg      void 
 42402 ;; Registers used:
 42403 ;;		wreg, status,2, status,0
 42404 ;; Tracked objects:
 42405 ;;		On entry : 0/0
 42406 ;;		On exit  : 0/0
 42407 ;;		Unchanged: 0/0
 42408 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42409 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42410 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42411 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42412 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42413 ;;Total ram usage:        1 bytes
 42414 ;; Hardware stack levels used:    1
 42415 ;; This function calls:
 42416 ;;		Nothing
 42417 ;; This function is called by:
 42418 ;;		_flash_init
 42419 ;;		_flash_is_busy
 42420 ;;		_flash_sector_read
 42421 ;;		_flash_sector_write
 42422 ;;		_flash_partial_read
 42423 ;;		_flash_partial_write
 42424 ;;		_flash_set_power_state
 42425 ;; This function uses a non-reentrant model
 42426 ;;
 42427                           
 42428                           	psect	text223
 42429  0046CC                     __ptext223:
 42430                           	opt stack 0
 42431  0046CC                     _spi_set_configuration:
 42432                           	opt stack 28
 42433                           
 42434                           ;incstack = 0
 42435                           ;spi_set_configuration@configuration stored from wreg
 42436  0046CC  6E01               	movwf	spi_set_configuration@configuration,c
 42437                           
 42438                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 42439  0046CE  D07B               	goto	l2974
 42440  0046D0                     l2975:
 42441                           
 42442                           ;spi.c: 152: LATDbits.LD2 = 1;
 42443  0046D0  848C               	bsf	3980,2,c	;volatile
 42444                           
 42445                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 42446  0046D2  9495               	bcf	3989,2,c	;volatile
 42447                           
 42448                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 42449  0046D4  8495               	bsf	3989,2,c	;volatile
 42450  0046D6  A483               	btfss	3971,2,c	;volatile
 42451  0046D8  D7FE               	goto	l2977
 42452                           
 42453                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 42454  0046DA  9088               	bcf	3976,0,c	;volatile
 42455                           
 42456                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 42457  0046DC  9A72               	bcf	3954,5,c	;volatile
 42458                           
 42459                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 42460  0046DE  8C95               	bsf	3989,6,c	;volatile
 42461                           
 42462                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 42463  0046E0  9895               	bcf	3989,4,c	;volatile
 42464                           
 42465                           ;spi.c: 165: LATDbits.LD4 = 0;
 42466  0046E2  988C               	bcf	3980,4,c	;volatile
 42467                           
 42468                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 42469  0046E4  9A95               	bcf	3989,5,c	;volatile
 42470                           
 42471                           ;spi.c: 167: LATDbits.LD5 = 0;
 42472  0046E6  9A8C               	bcf	3980,5,c	;volatile
 42473                           
 42474                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 42475  0046E8  9E95               	bcf	3989,7,c	;volatile
 42476                           
 42477                           ;spi.c: 169: LATDbits.LD7 = 1;
 42478  0046EA  8E8C               	bsf	3980,7,c	;volatile
 42479                           
 42480                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42481  0046EC  0E55               	movlw	85
 42482  0046EE  6EA7               	movwf	4007,c	;volsfr
 42483  0046F0  0EAA               	movlw	170
 42484  0046F2  6EA7               	movwf	4007,c	;volsfr
 42485  0046F4  010E               	movlb	14	; () banked
 42486  0046F6  91BF               	bcf	191,0,b	;volatile
 42487                           
 42488                           ;spi.c: 174: RPOR23 = 0b00000;
 42489  0046F8  0E00               	movlw	0
 42490  0046FA  6FD7               	movwf	215,b	;volatile
 42491                           
 42492                           ;spi.c: 175: RPINR21 = 0b11111;
 42493  0046FC  0E1F               	movlw	31
 42494  0046FE  6FFC               	movwf	252,b	;volatile
 42495                           
 42496                           ;spi.c: 176: RPINR23 = 0b11111;
 42497  004700  0E1F               	movlw	31
 42498  004702  6FFE               	movwf	254,b	;volatile
 42499                           
 42500                           ;spi.c: 178: RPINR21 = 23;
 42501  004704  0E17               	movlw	23
 42502  004706  6FFC               	movwf	252,b	;volatile
 42503                           
 42504                           ;spi.c: 179: RPOR21 = 10;
 42505  004708  0E0A               	movlw	10
 42506  00470A  6FD5               	movwf	213,b	;volatile
 42507                           
 42508                           ;spi.c: 181: RPOR22 = 11;
 42509  00470C  0E0B               	movlw	11
 42510  00470E  6FD6               	movwf	214,b	;volatile
 42511                           
 42512                           ;spi.c: 182: RPINR22 = 22;
 42513  004710  0E16               	movlw	22
 42514  004712  6FFD               	movwf	253,b	;volatile
 42515                           
 42516                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42517  004714  0E55               	movlw	85
 42518  004716  6EA7               	movwf	4007,c	;volsfr
 42519  004718  0EAA               	movlw	170
 42520  00471A  6EA7               	movwf	4007,c	;volsfr
 42521                           
 42522                           ; BSR set to: 14
 42523  00471C  81BF               	bsf	191,0,b	;volatile
 42524                           
 42525                           ; BSR set to: 14
 42526                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 42527  00471E  8E73               	bsf	3955,7,c	;volatile
 42528                           
 42529                           ; BSR set to: 14
 42530                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 42531  004720  8C73               	bsf	3955,6,c	;volatile
 42532                           
 42533                           ; BSR set to: 14
 42534                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 42535  004722  9E72               	bcf	3954,7,c	;volatile
 42536                           
 42537                           ; BSR set to: 14
 42538                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 42539  004724  9C72               	bcf	3954,6,c	;volatile
 42540                           
 42541                           ; BSR set to: 14
 42542                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 42543  004726  9872               	bcf	3954,4,c	;volatile
 42544                           
 42545                           ; BSR set to: 14
 42546                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 42547  004728  9072               	bcf	3954,0,c	;volatile
 42548  00472A  9272               	bcf	3954,1,c	;volatile
 42549  00472C  9472               	bcf	3954,2,c	;volatile
 42550  00472E  9672               	bcf	3954,3,c	;volatile
 42551                           
 42552                           ; BSR set to: 14
 42553                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 42554  004730  8A72               	bsf	3954,5,c	;volatile
 42555                           
 42556                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 42557  004732  0E00               	movlw	0
 42558  004734  0101               	movlb	1	; () banked
 42559  004736  6F8A               	movwf	_active_configuration& (0+255),b
 42560                           
 42561                           ;spi.c: 196: break;
 42562  004738  0012               	return	
 42563  00473A                     l2980:
 42564                           
 42565                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 42566  00473A  9088               	bcf	3976,0,c	;volatile
 42567                           
 42568                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 42569  00473C  9A72               	bcf	3954,5,c	;volatile
 42570                           
 42571                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 42572  00473E  010F               	movlb	15	; () banked
 42573  004740  9340               	bcf	64,1,b	;volatile
 42574                           
 42575                           ; BSR set to: 15
 42576                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42577  004742  0E55               	movlw	85
 42578  004744  6EA7               	movwf	4007,c	;volsfr
 42579  004746  0EAA               	movlw	170
 42580  004748  6EA7               	movwf	4007,c	;volsfr
 42581                           
 42582                           ; BSR set to: 15
 42583  00474A  010E               	movlb	14	; () banked
 42584  00474C  91BF               	bcf	191,0,b	;volatile
 42585                           
 42586                           ;spi.c: 208: RPOR23 = 10;
 42587  00474E  0E0A               	movlw	10
 42588  004750  6FD7               	movwf	215,b	;volatile
 42589                           
 42590                           ;spi.c: 209: RPINR21 = 21;
 42591  004752  0E15               	movlw	21
 42592  004754  6FFC               	movwf	252,b	;volatile
 42593                           
 42594                           ;spi.c: 210: RPINR22 = 22;
 42595  004756  0E16               	movlw	22
 42596  004758  6FFD               	movwf	253,b	;volatile
 42597                           
 42598                           ;spi.c: 211: RPINR23 = 19;
 42599  00475A  0E13               	movlw	19
 42600  00475C  6FFE               	movwf	254,b	;volatile
 42601                           
 42602                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42603  00475E  0E55               	movlw	85
 42604  004760  6EA7               	movwf	4007,c	;volsfr
 42605  004762  0EAA               	movlw	170
 42606  004764  6EA7               	movwf	4007,c	;volsfr
 42607                           
 42608                           ; BSR set to: 14
 42609  004766  81BF               	bsf	191,0,b	;volatile
 42610                           
 42611                           ; BSR set to: 14
 42612                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 42613  004768  9A72               	bcf	3954,5,c	;volatile
 42614                           
 42615                           ; BSR set to: 14
 42616                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 42617  00476A  8A95               	bsf	3989,5,c	;volatile
 42618                           
 42619                           ; BSR set to: 14
 42620                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 42621  00476C  8895               	bsf	3989,4,c	;volatile
 42622                           
 42623                           ; BSR set to: 14
 42624                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 42625  00476E  9C95               	bcf	3989,6,c	;volatile
 42626                           
 42627                           ; BSR set to: 14
 42628                           ;spi.c: 227: LATDbits.LD6 = 1;
 42629  004770  8C8C               	bsf	3980,6,c	;volatile
 42630                           
 42631                           ; BSR set to: 14
 42632                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 42633  004772  8495               	bsf	3989,2,c	;volatile
 42634                           
 42635                           ; BSR set to: 14
 42636                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 42637  004774  9E73               	bcf	3955,7,c	;volatile
 42638                           
 42639                           ; BSR set to: 14
 42640                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 42641  004776  8C73               	bsf	3955,6,c	;volatile
 42642                           
 42643                           ; BSR set to: 14
 42644                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 42645  004778  9E72               	bcf	3954,7,c	;volatile
 42646                           
 42647                           ; BSR set to: 14
 42648                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 42649  00477A  9C72               	bcf	3954,6,c	;volatile
 42650                           
 42651                           ; BSR set to: 14
 42652                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 42653  00477C  9872               	bcf	3954,4,c	;volatile
 42654                           
 42655                           ; BSR set to: 14
 42656                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 42657  00477E  5072               	movf	3954,w,c	;volatile
 42658  004780  0BF0               	andlw	-16
 42659  004782  0904               	iorlw	4
 42660  004784  6E72               	movwf	3954,c	;volatile
 42661                           
 42662                           ; BSR set to: 14
 42663                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 42664  004786  9EA4               	bcf	4004,7,c	;volatile
 42665                           
 42666                           ; BSR set to: 14
 42667                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 42668  004788  8A72               	bsf	3954,5,c	;volatile
 42669                           
 42670                           ; BSR set to: 14
 42671                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 42672  00478A  8A88               	bsf	3976,5,c	;volatile
 42673                           
 42674                           ; BSR set to: 14
 42675                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 42676  00478C  8888               	bsf	3976,4,c	;volatile
 42677                           
 42678                           ; BSR set to: 14
 42679                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 42680  00478E  8688               	bsf	3976,3,c	;volatile
 42681                           
 42682                           ; BSR set to: 14
 42683                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 42684  004790  9488               	bcf	3976,2,c	;volatile
 42685                           
 42686                           ; BSR set to: 14
 42687                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 42688  004792  9288               	bcf	3976,1,c	;volatile
 42689                           
 42690                           ; BSR set to: 14
 42691                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 42692  004794  9886               	bcf	3974,4,c	;volatile
 42693  004796  9A86               	bcf	3974,5,c	;volatile
 42694  004798  9C86               	bcf	3974,6,c	;volatile
 42695  00479A  9E86               	bcf	3974,7,c	;volatile
 42696                           
 42697                           ; BSR set to: 14
 42698                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 42699  00479C  9086               	bcf	3974,0,c	;volatile
 42700  00479E  9286               	bcf	3974,1,c	;volatile
 42701  0047A0  9486               	bcf	3974,2,c	;volatile
 42702  0047A2  9686               	bcf	3974,3,c	;volatile
 42703                           
 42704                           ; BSR set to: 14
 42705                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 42706  0047A4  0E00               	movlw	0
 42707  0047A6  6E66               	movwf	3942,c	;volatile
 42708                           
 42709                           ; BSR set to: 14
 42710                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 42711  0047A8  0E3F               	movlw	63
 42712  0047AA  6E67               	movwf	3943,c	;volatile
 42713                           
 42714                           ; BSR set to: 14
 42715                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 42716  0047AC  0E03               	movlw	high __spi_external_tx_buffer
 42717  0047AE  6E6A               	movwf	3946,c	;volatile
 42718                           
 42719                           ; BSR set to: 14
 42720                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 42721  0047B0  0E40               	movlw	low (low __spi_external_tx_buffer)
 42722  0047B2  6E6B               	movwf	3947,c	;volatile
 42723                           
 42724                           ; BSR set to: 14
 42725                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 42726  0047B4  0E03               	movlw	high __spi_external_rx_buffer
 42727  0047B6  6E68               	movwf	3944,c	;volatile
 42728                           
 42729                           ; BSR set to: 14
 42730                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 42731  0047B8  0E00               	movlw	low (low __spi_external_rx_buffer)
 42732  0047BA  6E69               	movwf	3945,c	;volatile
 42733                           
 42734                           ; BSR set to: 14
 42735                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 42736  0047BC  8088               	bsf	3976,0,c	;volatile
 42737                           
 42738                           ; BSR set to: 14
 42739                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 42740  0047BE  0E01               	movlw	1
 42741  0047C0  0101               	movlb	1	; () banked
 42742  0047C2  6F8A               	movwf	_active_configuration& (0+255),b
 42743                           
 42744                           ; BSR set to: 1
 42745                           ;spi.c: 337: }
 42746                           
 42747                           ;spi.c: 336: break;
 42748  0047C4  0012               	return	
 42749  0047C6                     l2974:
 42750                           
 42751                           ; BSR set to: 1
 42752  0047C6  5001               	movf	spi_set_configuration@configuration,w,c
 42753                           
 42754                           ; Switch size 1, requested type "space"
 42755                           ; Number of cases is 2, Range of values is 0 to 1
 42756                           ; switch strategies available:
 42757                           ; Name         Instructions Cycles
 42758                           ; simple_byte            7     4 (average)
 42759                           ;	Chosen strategy is simple_byte
 42760  0047C8  0A00               	xorlw	0	; case 0
 42761  0047CA  B4D8               	btfsc	status,2,c
 42762  0047CC  D781               	goto	l2975
 42763  0047CE  0A01               	xorlw	1	; case 1
 42764  0047D0  A4D8               	btfss	status,2,c
 42765  0047D2  0012               	return	
 42766  0047D4  D7B2               	goto	l2980
 42767  0047D6                     __end_of_spi_set_configuration:
 42768                           	opt stack 0
 42769                           tosu	equ	0xFFF
 42770                           tosh	equ	0xFFE
 42771                           tosl	equ	0xFFD
 42772                           pclath	equ	0xFFA
 42773                           tblptru	equ	0xFF8
 42774                           tblptrh	equ	0xFF7
 42775                           tblptrl	equ	0xFF6
 42776                           tablat	equ	0xFF5
 42777                           prodh	equ	0xFF4
 42778                           prodl	equ	0xFF3
 42779                           intcon	equ	0xFF2
 42780                           intcon2	equ	0xFF1
 42781                           intcon3	equ	0xFF0
 42782                           indf0	equ	0xFEF
 42783                           postinc0	equ	0xFEE
 42784                           fsr0h	equ	0xFEA
 42785                           fsr0l	equ	0xFE9
 42786                           wreg	equ	0xFE8
 42787                           indf1	equ	0xFE7
 42788                           postdec1	equ	0xFE5
 42789                           plusw1	equ	0xFE3
 42790                           fsr1h	equ	0xFE2
 42791                           fsr1l	equ	0xFE1
 42792                           indf2	equ	0xFDF
 42793                           postinc2	equ	0xFDE
 42794                           postdec2	equ	0xFDD
 42795                           plusw2	equ	0xFDB
 42796                           fsr2h	equ	0xFDA
 42797                           fsr2l	equ	0xFD9
 42798                           status	equ	0xFD8
 42799                           
 42800 ;; *************** function __flash_partial_read *****************
 42801 ;; Defined at:
 42802 ;;		line 305 in file "flash.c"
 42803 ;; Parameters:    Size  Location     Type
 42804 ;;  page            2   19[COMRAM] unsigned int 
 42805 ;;  start           2   21[COMRAM] unsigned int 
 42806 ;;  length          2   23[COMRAM] unsigned int 
 42807 ;;  data            2   25[COMRAM] PTR unsigned char 
 42808 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 42809 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 42810 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 42811 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 42812 ;; Auto vars:     Size  Location     Type
 42813 ;;  command         4   31[COMRAM] unsigned char [4]
 42814 ;;  address         4   35[COMRAM] unsigned long 
 42815 ;; Return value:  Size  Location     Type
 42816 ;;                  1    wreg      void 
 42817 ;; Registers used:
 42818 ;;		wreg, status,2, status,0, cstack
 42819 ;; Tracked objects:
 42820 ;;		On entry : 0/0
 42821 ;;		On exit  : 0/0
 42822 ;;		Unchanged: 0/0
 42823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42824 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42825 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42826 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42827 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42828 ;;Total ram usage:       20 bytes
 42829 ;; Hardware stack levels used:    1
 42830 ;; Hardware stack levels required when called:    3
 42831 ;; This function calls:
 42832 ;;		__flash_is_busy
 42833 ;;		_spi_tx_rx
 42834 ;; This function is called by:
 42835 ;;		_flash_sector_read
 42836 ;;		_flash_partial_read
 42837 ;; This function uses a non-reentrant model
 42838 ;;
 42839                           
 42840                           	psect	text224
 42841  007574                     __ptext224:
 42842                           	opt stack 0
 42843  007574                     __flash_partial_read:
 42844                           	opt stack 23
 42845                           
 42846                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 42847                           
 42848                           ;incstack = 0
 42849  007574  EC2C  F046         	call	__flash_is_busy	;wreg free
 42850  007578  0900               	iorlw	0
 42851  00757A  A4D8               	btfss	status,2,c
 42852  00757C  D7FB               	goto	__flash_partial_read
 42853                           
 42854                           ;flash.c: 314: address = page;
 42855  00757E  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 42856  007582  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 42857  007586  6A26               	clrf	__flash_partial_read@address+2,c
 42858  007588  6A27               	clrf	__flash_partial_read@address+3,c
 42859                           
 42860                           ;flash.c: 315: address <<= 9;
 42861  00758A  0E09               	movlw	9
 42862  00758C                     u6775:
 42863  00758C  90D8               	bcf	status,0,c
 42864  00758E  3624               	rlcf	__flash_partial_read@address,f,c
 42865  007590  3625               	rlcf	__flash_partial_read@address+1,f,c
 42866  007592  3626               	rlcf	__flash_partial_read@address+2,f,c
 42867  007594  3627               	rlcf	__flash_partial_read@address+3,f,c
 42868  007596  2EE8               	decfsz	wreg,f,c
 42869  007598  D7F9               	goto	u6775
 42870                           
 42871                           ;flash.c: 316: address |= start;
 42872  00759A  5016               	movf	__flash_partial_read@start,w,c
 42873  00759C  6E1C               	movwf	??__flash_partial_read& (0+255),c
 42874  00759E  5017               	movf	__flash_partial_read@start+1,w,c
 42875  0075A0  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 42876  0075A2  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 42877  0075A4  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 42878  0075A6  501C               	movf	??__flash_partial_read,w,c
 42879  0075A8  1224               	iorwf	__flash_partial_read@address,f,c
 42880  0075AA  501D               	movf	??__flash_partial_read+1,w,c
 42881  0075AC  1225               	iorwf	__flash_partial_read@address+1,f,c
 42882  0075AE  501E               	movf	??__flash_partial_read+2,w,c
 42883  0075B0  1226               	iorwf	__flash_partial_read@address+2,f,c
 42884  0075B2  501F               	movf	??__flash_partial_read+3,w,c
 42885  0075B4  1227               	iorwf	__flash_partial_read@address+3,f,c
 42886                           
 42887                           ;flash.c: 319: command[0] = 0x03;
 42888  0075B6  0E03               	movlw	3
 42889  0075B8  6E20               	movwf	__flash_partial_read@command,c
 42890                           
 42891                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 42892  0075BA  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 42893                           
 42894                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 42895  0075BE  5025               	movf	__flash_partial_read@address+1,w,c
 42896  0075C0  6E22               	movwf	__flash_partial_read@command+2,c
 42897                           
 42898                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 42899  0075C2  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 42900                           
 42901                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 42902  0075C6  0E20               	movlw	low __flash_partial_read@command
 42903  0075C8  6E01               	movwf	spi_tx_rx@command,c
 42904  0075CA  0E00               	movlw	high __flash_partial_read@command
 42905  0075CC  6E02               	movwf	spi_tx_rx@command+1,c
 42906  0075CE  0E00               	movlw	0
 42907  0075D0  6E04               	movwf	spi_tx_rx@command_length+1,c
 42908  0075D2  0E04               	movlw	4
 42909  0075D4  6E03               	movwf	spi_tx_rx@command_length,c
 42910  0075D6  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 42911  0075DA  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 42912  0075DE  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 42913  0075E2  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 42914  0075E6  EC97  F037         	call	_spi_tx_rx	;wreg free
 42915  0075EA  0012               	return		;funcret
 42916  0075EC                     __end_of__flash_partial_read:
 42917                           	opt stack 0
 42918                           tosu	equ	0xFFF
 42919                           tosh	equ	0xFFE
 42920                           tosl	equ	0xFFD
 42921                           pclath	equ	0xFFA
 42922                           tblptru	equ	0xFF8
 42923                           tblptrh	equ	0xFF7
 42924                           tblptrl	equ	0xFF6
 42925                           tablat	equ	0xFF5
 42926                           prodh	equ	0xFF4
 42927                           prodl	equ	0xFF3
 42928                           intcon	equ	0xFF2
 42929                           intcon2	equ	0xFF1
 42930                           intcon3	equ	0xFF0
 42931                           indf0	equ	0xFEF
 42932                           postinc0	equ	0xFEE
 42933                           fsr0h	equ	0xFEA
 42934                           fsr0l	equ	0xFE9
 42935                           wreg	equ	0xFE8
 42936                           indf1	equ	0xFE7
 42937                           postdec1	equ	0xFE5
 42938                           plusw1	equ	0xFE3
 42939                           fsr1h	equ	0xFE2
 42940                           fsr1l	equ	0xFE1
 42941                           indf2	equ	0xFDF
 42942                           postinc2	equ	0xFDE
 42943                           postdec2	equ	0xFDD
 42944                           plusw2	equ	0xFDB
 42945                           fsr2h	equ	0xFDA
 42946                           fsr2l	equ	0xFD9
 42947                           status	equ	0xFD8
 42948                           
 42949 ;; *************** function __flash_is_busy *****************
 42950 ;; Defined at:
 42951 ;;		line 277 in file "flash.c"
 42952 ;; Parameters:    Size  Location     Type
 42953 ;;		None
 42954 ;; Auto vars:     Size  Location     Type
 42955 ;;  status          2   17[COMRAM] unsigned int 
 42956 ;; Return value:  Size  Location     Type
 42957 ;;                  1    wreg      unsigned char 
 42958 ;; Registers used:
 42959 ;;		wreg, status,2, status,0, cstack
 42960 ;; Tracked objects:
 42961 ;;		On entry : 0/0
 42962 ;;		On exit  : 0/0
 42963 ;;		Unchanged: 0/0
 42964 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42965 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42966 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42967 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42968 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42969 ;;Total ram usage:        2 bytes
 42970 ;; Hardware stack levels used:    1
 42971 ;; Hardware stack levels required when called:    2
 42972 ;; This function calls:
 42973 ;;		__flash_get_status
 42974 ;;		__flash_wakeup
 42975 ;; This function is called by:
 42976 ;;		__flash_set_page_size
 42977 ;;		__flash_copy_page_to_buffer
 42978 ;;		__flash_compare_page_to_buffer
 42979 ;;		__flash_write_to_buffer
 42980 ;;		__flash_write_page_from_buffer
 42981 ;;		__flash_partial_read
 42982 ;;		_flash_is_busy
 42983 ;;		_flash_partial_write
 42984 ;;		__flash_erase_page
 42985 ;;		_flash_set_power_state
 42986 ;; This function uses a non-reentrant model
 42987 ;;
 42988                           
 42989                           	psect	text225
 42990  008C58                     __ptext225:
 42991                           	opt stack 0
 42992  008C58                     __flash_is_busy:
 42993                           	opt stack 25
 42994                           
 42995                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 42996                           
 42997                           ;incstack = 0
 42998  008C58  0100               	movlb	0	; () banked
 42999  008C5A  51E5               	movf	_power_state& (0+255),w,b
 43000  008C5C  A4D8               	btfss	status,2,c
 43001                           
 43002                           ; BSR set to: 0
 43003                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 43004  008C5E  EC44  F040         	call	__flash_wakeup	;wreg free
 43005                           
 43006                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 43007  008C62  EC71  F044         	call	__flash_get_status	;wreg free
 43008  008C66  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 43009  008C6A  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 43010                           
 43011                           ;flash.c: 291: if(status & 0b0000000010000000)
 43012  008C6E  AE12               	btfss	__flash_is_busy@status,7,c
 43013  008C70  D002               	goto	l1800
 43014                           
 43015                           ;flash.c: 292: {;flash.c: 294: return 0;
 43016  008C72  0E00               	movlw	0
 43017                           
 43018                           ;flash.c: 295: }
 43019  008C74  0012               	return	
 43020  008C76                     l1800:
 43021                           
 43022                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 43023  008C76  0E01               	movlw	1
 43024  008C78  0012               	return	
 43025  008C7A                     __end_of__flash_is_busy:
 43026                           	opt stack 0
 43027                           tosu	equ	0xFFF
 43028                           tosh	equ	0xFFE
 43029                           tosl	equ	0xFFD
 43030                           pclath	equ	0xFFA
 43031                           tblptru	equ	0xFF8
 43032                           tblptrh	equ	0xFF7
 43033                           tblptrl	equ	0xFF6
 43034                           tablat	equ	0xFF5
 43035                           prodh	equ	0xFF4
 43036                           prodl	equ	0xFF3
 43037                           intcon	equ	0xFF2
 43038                           intcon2	equ	0xFF1
 43039                           intcon3	equ	0xFF0
 43040                           indf0	equ	0xFEF
 43041                           postinc0	equ	0xFEE
 43042                           fsr0h	equ	0xFEA
 43043                           fsr0l	equ	0xFE9
 43044                           wreg	equ	0xFE8
 43045                           indf1	equ	0xFE7
 43046                           postdec1	equ	0xFE5
 43047                           plusw1	equ	0xFE3
 43048                           fsr1h	equ	0xFE2
 43049                           fsr1l	equ	0xFE1
 43050                           indf2	equ	0xFDF
 43051                           postinc2	equ	0xFDE
 43052                           postdec2	equ	0xFDD
 43053                           plusw2	equ	0xFDB
 43054                           fsr2h	equ	0xFDA
 43055                           fsr2l	equ	0xFD9
 43056                           status	equ	0xFD8
 43057                           
 43058 ;; *************** function __flash_wakeup *****************
 43059 ;; Defined at:
 43060 ;;		line 124 in file "flash.c"
 43061 ;; Parameters:    Size  Location     Type
 43062 ;;		None
 43063 ;; Auto vars:     Size  Location     Type
 43064 ;;  command         1    8[COMRAM] unsigned char 
 43065 ;; Return value:  Size  Location     Type
 43066 ;;                  1    wreg      void 
 43067 ;; Registers used:
 43068 ;;		wreg, status,2, status,0, cstack
 43069 ;; Tracked objects:
 43070 ;;		On entry : 0/0
 43071 ;;		On exit  : 0/0
 43072 ;;		Unchanged: 0/0
 43073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43074 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43075 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43076 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43077 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43078 ;;Total ram usage:        1 bytes
 43079 ;; Hardware stack levels used:    1
 43080 ;; Hardware stack levels required when called:    1
 43081 ;; This function calls:
 43082 ;;		_spi_tx
 43083 ;; This function is called by:
 43084 ;;		__flash_is_busy
 43085 ;;		_flash_set_power_state
 43086 ;; This function uses a non-reentrant model
 43087 ;;
 43088                           
 43089                           	psect	text226
 43090  008088                     __ptext226:
 43091                           	opt stack 0
 43092  008088                     __flash_wakeup:
 43093                           	opt stack 25
 43094                           
 43095                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 43096                           
 43097                           ;incstack = 0
 43098  008088  D021               	goto	l1749
 43099  00808A                     
 43100                           ;flash.c: 131: command = 0xAB;
 43101  00808A  0EAB               	movlw	171
 43102  00808C  6E09               	movwf	__flash_wakeup@command,c
 43103                           
 43104                           ;flash.c: 132: spi_tx(&command, 1);
 43105  00808E  0E09               	movlw	low __flash_wakeup@command
 43106  008090  6E01               	movwf	spi_tx@data,c
 43107  008092  0E00               	movlw	high __flash_wakeup@command
 43108  008094  6E02               	movwf	spi_tx@data+1,c
 43109  008096  0E00               	movlw	0
 43110  008098  6E04               	movwf	spi_tx@length+1,c
 43111  00809A  0E01               	movlw	1
 43112  00809C  6E03               	movwf	spi_tx@length,c
 43113  00809E  EC16  F03F         	call	_spi_tx	;wreg free
 43114                           
 43115                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 43116  0080A2  0E17               	movlw	23
 43117  0080A4                     u13247:
 43118  0080A4  2EE8               	decfsz	wreg,f,c
 43119  0080A6  D7FE               	bra	u13247
 43120  0080A8  F000               	nop	
 43121                           
 43122                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 43123  0080AA  0E00               	movlw	0
 43124  0080AC  0100               	movlb	0	; () banked
 43125  0080AE  6FE5               	movwf	_power_state& (0+255),b
 43126                           
 43127                           ;flash.c: 135: break;
 43128  0080B0  0012               	return	
 43129  0080B2                     l1752:
 43130                           
 43131                           ; BSR set to: 0
 43132                           ;flash.c: 140: LATDbits.LD7 = 0;
 43133  0080B2  9E8C               	bcf	3980,7,c	;volatile
 43134                           
 43135                           ; BSR set to: 0
 43136                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 43137  0080B4  0E0D               	movlw	13
 43138  0080B6                     u13257:
 43139  0080B6  2EE8               	decfsz	wreg,f,c
 43140  0080B8  D7FE               	bra	u13257
 43141  0080BA  F000               	nop	
 43142                           
 43143                           ;flash.c: 142: LATDbits.LD7 = 1;
 43144  0080BC  8E8C               	bsf	3980,7,c	;volatile
 43145                           
 43146                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 43147  0080BE  0E50               	movlw	80
 43148  0080C0                     u13267:
 43149  0080C0  2EE8               	decfsz	wreg,f,c
 43150  0080C2  D7FE               	bra	u13267
 43151                           
 43152                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 43153  0080C4  0E00               	movlw	0
 43154  0080C6  0100               	movlb	0	; () banked
 43155  0080C8  6FE5               	movwf	_power_state& (0+255),b
 43156                           
 43157                           ; BSR set to: 0
 43158                           ;flash.c: 146: }
 43159                           
 43160                           ;flash.c: 145: break;
 43161  0080CA  0012               	return	
 43162  0080CC                     l1749:
 43163                           
 43164                           ; BSR set to: 0
 43165  0080CC  0100               	movlb	0	; () banked
 43166  0080CE  51E5               	movf	_power_state& (0+255),w,b
 43167                           
 43168                           ; Switch size 1, requested type "space"
 43169                           ; Number of cases is 2, Range of values is 1 to 2
 43170                           ; switch strategies available:
 43171                           ; Name         Instructions Cycles
 43172                           ; simple_byte            7     4 (average)
 43173                           ;	Chosen strategy is simple_byte
 43174  0080D0  0A01               	xorlw	1	; case 1
 43175  0080D2  B4D8               	btfsc	status,2,c
 43176  0080D4  D7DA               	goto	l1750
 43177  0080D6  0A03               	xorlw	3	; case 2
 43178  0080D8  A4D8               	btfss	status,2,c
 43179  0080DA  0012               	return	
 43180  0080DC  D7EA               	goto	l1752
 43181  0080DE                     __end_of__flash_wakeup:
 43182                           	opt stack 0
 43183                           tosu	equ	0xFFF
 43184                           tosh	equ	0xFFE
 43185                           tosl	equ	0xFFD
 43186                           pclath	equ	0xFFA
 43187                           tblptru	equ	0xFF8
 43188                           tblptrh	equ	0xFF7
 43189                           tblptrl	equ	0xFF6
 43190                           tablat	equ	0xFF5
 43191                           prodh	equ	0xFF4
 43192                           prodl	equ	0xFF3
 43193                           intcon	equ	0xFF2
 43194                           intcon2	equ	0xFF1
 43195                           intcon3	equ	0xFF0
 43196                           indf0	equ	0xFEF
 43197                           postinc0	equ	0xFEE
 43198                           fsr0h	equ	0xFEA
 43199                           fsr0l	equ	0xFE9
 43200                           wreg	equ	0xFE8
 43201                           indf1	equ	0xFE7
 43202                           postdec1	equ	0xFE5
 43203                           plusw1	equ	0xFE3
 43204                           fsr1h	equ	0xFE2
 43205                           fsr1l	equ	0xFE1
 43206                           indf2	equ	0xFDF
 43207                           postinc2	equ	0xFDE
 43208                           postdec2	equ	0xFDD
 43209                           plusw2	equ	0xFDB
 43210                           fsr2h	equ	0xFDA
 43211                           fsr2l	equ	0xFD9
 43212                           status	equ	0xFD8
 43213                           
 43214 ;; *************** function _spi_tx *****************
 43215 ;; Defined at:
 43216 ;;		line 348 in file "spi.c"
 43217 ;; Parameters:    Size  Location     Type
 43218 ;;  data            2    0[COMRAM] PTR unsigned char 
 43219 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 43220 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 43221 ;;  length          2    2[COMRAM] unsigned int 
 43222 ;; Auto vars:     Size  Location     Type
 43223 ;;		None
 43224 ;; Return value:  Size  Location     Type
 43225 ;;                  1    wreg      void 
 43226 ;; Registers used:
 43227 ;;		wreg, status,2, status,0
 43228 ;; Tracked objects:
 43229 ;;		On entry : 0/0
 43230 ;;		On exit  : 0/0
 43231 ;;		Unchanged: 0/0
 43232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43233 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43234 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43235 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43236 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43237 ;;Total ram usage:        8 bytes
 43238 ;; Hardware stack levels used:    1
 43239 ;; This function calls:
 43240 ;;		Nothing
 43241 ;; This function is called by:
 43242 ;;		__flash_set_page_size
 43243 ;;		__flash_wakeup
 43244 ;;		__flash_copy_page_to_buffer
 43245 ;;		__flash_compare_page_to_buffer
 43246 ;;		__flash_write_page_from_buffer
 43247 ;;		__flash_erase_page
 43248 ;;		_flash_set_power_state
 43249 ;; This function uses a non-reentrant model
 43250 ;;
 43251                           
 43252                           	psect	text227
 43253  007E2C                     __ptext227:
 43254                           	opt stack 0
 43255  007E2C                     _spi_tx:
 43256                           	opt stack 27
 43257                           
 43258                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 43259                           
 43260                           ; BSR set to: 0
 43261                           ;incstack = 0
 43262  007E2C  9E88               	bcf	3976,7,c	;volatile
 43263                           
 43264                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 43265  007E2E  9C88               	bcf	3976,6,c	;volatile
 43266                           
 43267                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 43268  007E30  8A88               	bsf	3976,5,c	;volatile
 43269                           
 43270                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 43271  007E32  9888               	bcf	3976,4,c	;volatile
 43272                           
 43273                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 43274  007E34  9688               	bcf	3976,3,c	;volatile
 43275                           
 43276                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 43277  007E36  8488               	bsf	3976,2,c	;volatile
 43278                           
 43279                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 43280  007E38  9288               	bcf	3976,1,c	;volatile
 43281                           
 43282                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 43283  007E3A  9886               	bcf	3974,4,c	;volatile
 43284  007E3C  9A86               	bcf	3974,5,c	;volatile
 43285  007E3E  9C86               	bcf	3974,6,c	;volatile
 43286  007E40  9E86               	bcf	3974,7,c	;volatile
 43287                           
 43288                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 43289  007E42  9086               	bcf	3974,0,c	;volatile
 43290  007E44  9286               	bcf	3974,1,c	;volatile
 43291  007E46  9486               	bcf	3974,2,c	;volatile
 43292  007E48  9686               	bcf	3974,3,c	;volatile
 43293                           
 43294                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43295  007E4A  5002               	movf	spi_tx@data+1,w,c
 43296  007E4C  6E6A               	movwf	3946,c	;volatile
 43297                           
 43298                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43299  007E4E  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 43300                           
 43301                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 43302  007E52  0EFF               	movlw	255
 43303  007E54  6E05               	movwf	??_spi_tx& (0+255),c
 43304  007E56  0EFF               	movlw	255
 43305  007E58  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 43306  007E5A  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 43307  007E5E  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 43308  007E62  5005               	movf	??_spi_tx,w,c
 43309  007E64  2607               	addwf	??_spi_tx+2,f,c
 43310  007E66  5006               	movf	??_spi_tx+1,w,c
 43311  007E68  2208               	addwfc	??_spi_tx+3,f,c
 43312  007E6A  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 43313  007E6E  6A08               	clrf	??_spi_tx+3,c
 43314  007E70  5007               	movf	??_spi_tx+2,w,c
 43315  007E72  6E66               	movwf	3942,c	;volatile
 43316                           
 43317                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 43318  007E74  0403               	decf	spi_tx@length,w,c
 43319  007E76  6E67               	movwf	3943,c	;volatile
 43320                           
 43321                           ;spi.c: 376: LATDbits.LD7 = 0;
 43322  007E78  9E8C               	bcf	3980,7,c	;volatile
 43323                           
 43324                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 43325  007E7A  8088               	bsf	3976,0,c	;volatile
 43326  007E7C  B088               	btfsc	3976,0,c	;volatile
 43327  007E7E  D7FE               	goto	l2988
 43328                           
 43329                           ;spi.c: 379: LATDbits.LD7 = 1;
 43330  007E80  8E8C               	bsf	3980,7,c	;volatile
 43331  007E82  0012               	return		;funcret
 43332  007E84                     __end_of_spi_tx:
 43333                           	opt stack 0
 43334                           tosu	equ	0xFFF
 43335                           tosh	equ	0xFFE
 43336                           tosl	equ	0xFFD
 43337                           pclath	equ	0xFFA
 43338                           tblptru	equ	0xFF8
 43339                           tblptrh	equ	0xFF7
 43340                           tblptrl	equ	0xFF6
 43341                           tablat	equ	0xFF5
 43342                           prodh	equ	0xFF4
 43343                           prodl	equ	0xFF3
 43344                           intcon	equ	0xFF2
 43345                           intcon2	equ	0xFF1
 43346                           intcon3	equ	0xFF0
 43347                           indf0	equ	0xFEF
 43348                           postinc0	equ	0xFEE
 43349                           fsr0h	equ	0xFEA
 43350                           fsr0l	equ	0xFE9
 43351                           wreg	equ	0xFE8
 43352                           indf1	equ	0xFE7
 43353                           postdec1	equ	0xFE5
 43354                           plusw1	equ	0xFE3
 43355                           fsr1h	equ	0xFE2
 43356                           fsr1l	equ	0xFE1
 43357                           indf2	equ	0xFDF
 43358                           postinc2	equ	0xFDE
 43359                           postdec2	equ	0xFDD
 43360                           plusw2	equ	0xFDB
 43361                           fsr2h	equ	0xFDA
 43362                           fsr2l	equ	0xFD9
 43363                           status	equ	0xFD8
 43364                           
 43365 ;; *************** function __flash_get_status *****************
 43366 ;; Defined at:
 43367 ;;		line 113 in file "flash.c"
 43368 ;; Parameters:    Size  Location     Type
 43369 ;;		None
 43370 ;; Auto vars:     Size  Location     Type
 43371 ;;  status          2   15[COMRAM] unsigned int 
 43372 ;;  command         1   14[COMRAM] unsigned char 
 43373 ;; Return value:  Size  Location     Type
 43374 ;;                  2   12[COMRAM] unsigned int 
 43375 ;; Registers used:
 43376 ;;		wreg, status,2, status,0, cstack
 43377 ;; Tracked objects:
 43378 ;;		On entry : 0/0
 43379 ;;		On exit  : 0/0
 43380 ;;		Unchanged: 0/0
 43381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43382 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43383 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43384 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43385 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43386 ;;Total ram usage:        5 bytes
 43387 ;; Hardware stack levels used:    1
 43388 ;; Hardware stack levels required when called:    1
 43389 ;; This function calls:
 43390 ;;		_spi_tx_rx
 43391 ;; This function is called by:
 43392 ;;		__flash_compare_page_to_buffer
 43393 ;;		__flash_is_busy
 43394 ;; This function uses a non-reentrant model
 43395 ;;
 43396                           
 43397                           	psect	text228
 43398  0088E2                     __ptext228:
 43399                           	opt stack 0
 43400  0088E2                     __flash_get_status:
 43401                           	opt stack 25
 43402                           
 43403                           ;flash.c: 117: uint8_t command = 0xD7;
 43404                           
 43405                           ;incstack = 0
 43406  0088E2  0ED7               	movlw	215
 43407  0088E4  6E0F               	movwf	__flash_get_status@command,c
 43408                           
 43409                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 43410  0088E6  0E0F               	movlw	low __flash_get_status@command
 43411  0088E8  6E01               	movwf	spi_tx_rx@command,c
 43412  0088EA  0E00               	movlw	high __flash_get_status@command
 43413  0088EC  6E02               	movwf	spi_tx_rx@command+1,c
 43414  0088EE  0E00               	movlw	0
 43415  0088F0  6E04               	movwf	spi_tx_rx@command_length+1,c
 43416  0088F2  0E01               	movlw	1
 43417  0088F4  6E03               	movwf	spi_tx_rx@command_length,c
 43418  0088F6  0E10               	movlw	low __flash_get_status@status
 43419  0088F8  6E05               	movwf	spi_tx_rx@data,c
 43420  0088FA  0E00               	movlw	high __flash_get_status@status
 43421  0088FC  6E06               	movwf	spi_tx_rx@data+1,c
 43422  0088FE  0E00               	movlw	0
 43423  008900  6E08               	movwf	spi_tx_rx@data_length+1,c
 43424  008902  0E02               	movlw	2
 43425  008904  6E07               	movwf	spi_tx_rx@data_length,c
 43426  008906  EC97  F037         	call	_spi_tx_rx	;wreg free
 43427                           
 43428                           ;flash.c: 120: return status;
 43429  00890A  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 43430  00890E  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 43431  008912  0012               	return	
 43432  008914                     __end_of__flash_get_status:
 43433                           	opt stack 0
 43434                           tosu	equ	0xFFF
 43435                           tosh	equ	0xFFE
 43436                           tosl	equ	0xFFD
 43437                           pclath	equ	0xFFA
 43438                           tblptru	equ	0xFF8
 43439                           tblptrh	equ	0xFF7
 43440                           tblptrl	equ	0xFF6
 43441                           tablat	equ	0xFF5
 43442                           prodh	equ	0xFF4
 43443                           prodl	equ	0xFF3
 43444                           intcon	equ	0xFF2
 43445                           intcon2	equ	0xFF1
 43446                           intcon3	equ	0xFF0
 43447                           indf0	equ	0xFEF
 43448                           postinc0	equ	0xFEE
 43449                           fsr0h	equ	0xFEA
 43450                           fsr0l	equ	0xFE9
 43451                           wreg	equ	0xFE8
 43452                           indf1	equ	0xFE7
 43453                           postdec1	equ	0xFE5
 43454                           plusw1	equ	0xFE3
 43455                           fsr1h	equ	0xFE2
 43456                           fsr1l	equ	0xFE1
 43457                           indf2	equ	0xFDF
 43458                           postinc2	equ	0xFDE
 43459                           postdec2	equ	0xFDD
 43460                           plusw2	equ	0xFDB
 43461                           fsr2h	equ	0xFDA
 43462                           fsr2l	equ	0xFD9
 43463                           status	equ	0xFD8
 43464                           
 43465 ;; *************** function _spi_tx_rx *****************
 43466 ;; Defined at:
 43467 ;;		line 439 in file "spi.c"
 43468 ;; Parameters:    Size  Location     Type
 43469 ;;  command         2    0[COMRAM] PTR unsigned char 
 43470 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 43471 ;;  command_leng    2    2[COMRAM] unsigned int 
 43472 ;;  data            2    4[COMRAM] PTR unsigned char 
 43473 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 43474 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 43475 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 43476 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 43477 ;;  data_length     2    6[COMRAM] unsigned int 
 43478 ;; Auto vars:     Size  Location     Type
 43479 ;;		None
 43480 ;; Return value:  Size  Location     Type
 43481 ;;                  1    wreg      void 
 43482 ;; Registers used:
 43483 ;;		wreg, status,2, status,0
 43484 ;; Tracked objects:
 43485 ;;		On entry : 0/0
 43486 ;;		On exit  : 0/0
 43487 ;;		Unchanged: 0/0
 43488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43489 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43490 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43491 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43492 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43493 ;;Total ram usage:       12 bytes
 43494 ;; Hardware stack levels used:    1
 43495 ;; This function calls:
 43496 ;;		Nothing
 43497 ;; This function is called by:
 43498 ;;		__flash_get_status
 43499 ;;		__flash_partial_read
 43500 ;; This function uses a non-reentrant model
 43501 ;;
 43502                           
 43503                           	psect	text229
 43504  006F2E                     __ptext229:
 43505                           	opt stack 0
 43506  006F2E                     _spi_tx_rx:
 43507                           	opt stack 25
 43508                           
 43509                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 43510                           
 43511                           ;incstack = 0
 43512  006F2E  9E88               	bcf	3976,7,c	;volatile
 43513                           
 43514                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 43515  006F30  9C88               	bcf	3976,6,c	;volatile
 43516                           
 43517                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 43518  006F32  8A88               	bsf	3976,5,c	;volatile
 43519                           
 43520                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 43521  006F34  9888               	bcf	3976,4,c	;volatile
 43522                           
 43523                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 43524  006F36  9688               	bcf	3976,3,c	;volatile
 43525                           
 43526                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 43527  006F38  8488               	bsf	3976,2,c	;volatile
 43528                           
 43529                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 43530  006F3A  9288               	bcf	3976,1,c	;volatile
 43531                           
 43532                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 43533  006F3C  9886               	bcf	3974,4,c	;volatile
 43534  006F3E  9A86               	bcf	3974,5,c	;volatile
 43535  006F40  9C86               	bcf	3974,6,c	;volatile
 43536  006F42  9E86               	bcf	3974,7,c	;volatile
 43537                           
 43538                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 43539  006F44  9086               	bcf	3974,0,c	;volatile
 43540  006F46  9286               	bcf	3974,1,c	;volatile
 43541  006F48  9486               	bcf	3974,2,c	;volatile
 43542  006F4A  9686               	bcf	3974,3,c	;volatile
 43543                           
 43544                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 43545  006F4C  5002               	movf	spi_tx_rx@command+1,w,c
 43546  006F4E  6E6A               	movwf	3946,c	;volatile
 43547                           
 43548                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 43549  006F50  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 43550                           
 43551                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 43552  006F54  0EFF               	movlw	255
 43553  006F56  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43554  006F58  0EFF               	movlw	255
 43555  006F5A  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43556  006F5C  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 43557  006F60  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 43558  006F64  5009               	movf	??_spi_tx_rx,w,c
 43559  006F66  260B               	addwf	??_spi_tx_rx+2,f,c
 43560  006F68  500A               	movf	??_spi_tx_rx+1,w,c
 43561  006F6A  220C               	addwfc	??_spi_tx_rx+3,f,c
 43562  006F6C  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43563  006F70  6A0C               	clrf	??_spi_tx_rx+3,c
 43564  006F72  500B               	movf	??_spi_tx_rx+2,w,c
 43565  006F74  6E66               	movwf	3942,c	;volatile
 43566                           
 43567                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 43568  006F76  0403               	decf	spi_tx_rx@command_length,w,c
 43569  006F78  6E67               	movwf	3943,c	;volatile
 43570                           
 43571                           ;spi.c: 467: LATDbits.LD7 = 0;
 43572  006F7A  9E8C               	bcf	3980,7,c	;volatile
 43573                           
 43574                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 43575  006F7C  8088               	bsf	3976,0,c	;volatile
 43576  006F7E  B088               	btfsc	3976,0,c	;volatile
 43577  006F80  D7FE               	goto	l3003
 43578                           
 43579                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 43580  006F82  9A88               	bcf	3976,5,c	;volatile
 43581                           
 43582                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 43583  006F84  8888               	bsf	3976,4,c	;volatile
 43584                           
 43585                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 43586  006F86  9688               	bcf	3976,3,c	;volatile
 43587                           
 43588                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 43589  006F88  9488               	bcf	3976,2,c	;volatile
 43590                           
 43591                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43592  006F8A  5006               	movf	spi_tx_rx@data+1,w,c
 43593  006F8C  6E68               	movwf	3944,c	;volatile
 43594                           
 43595                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43596  006F8E  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 43597                           
 43598                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 43599  006F92  0EFF               	movlw	255
 43600  006F94  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43601  006F96  0EFF               	movlw	255
 43602  006F98  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43603  006F9A  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 43604  006F9E  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 43605  006FA2  5009               	movf	??_spi_tx_rx,w,c
 43606  006FA4  260B               	addwf	??_spi_tx_rx+2,f,c
 43607  006FA6  500A               	movf	??_spi_tx_rx+1,w,c
 43608  006FA8  220C               	addwfc	??_spi_tx_rx+3,f,c
 43609  006FAA  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43610  006FAE  6A0C               	clrf	??_spi_tx_rx+3,c
 43611  006FB0  500B               	movf	??_spi_tx_rx+2,w,c
 43612  006FB2  6E66               	movwf	3942,c	;volatile
 43613                           
 43614                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 43615  006FB4  0407               	decf	spi_tx_rx@data_length,w,c
 43616  006FB6  6E67               	movwf	3943,c	;volatile
 43617                           
 43618                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 43619  006FB8  8088               	bsf	3976,0,c	;volatile
 43620  006FBA  B088               	btfsc	3976,0,c	;volatile
 43621  006FBC  D7FE               	goto	l3006
 43622                           
 43623                           ;spi.c: 494: LATDbits.LD7 = 1;
 43624  006FBE  8E8C               	bsf	3980,7,c	;volatile
 43625  006FC0  0012               	return		;funcret
 43626  006FC2                     __end_of_spi_tx_rx:
 43627                           	opt stack 0
 43628                           tosu	equ	0xFFF
 43629                           tosh	equ	0xFFE
 43630                           tosl	equ	0xFFD
 43631                           pclath	equ	0xFFA
 43632                           tblptru	equ	0xFF8
 43633                           tblptrh	equ	0xFF7
 43634                           tblptrl	equ	0xFF6
 43635                           tablat	equ	0xFF5
 43636                           prodh	equ	0xFF4
 43637                           prodl	equ	0xFF3
 43638                           intcon	equ	0xFF2
 43639                           intcon2	equ	0xFF1
 43640                           intcon3	equ	0xFF0
 43641                           indf0	equ	0xFEF
 43642                           postinc0	equ	0xFEE
 43643                           fsr0h	equ	0xFEA
 43644                           fsr0l	equ	0xFE9
 43645                           wreg	equ	0xFE8
 43646                           indf1	equ	0xFE7
 43647                           postdec1	equ	0xFE5
 43648                           plusw1	equ	0xFE3
 43649                           fsr1h	equ	0xFE2
 43650                           fsr1l	equ	0xFE1
 43651                           indf2	equ	0xFDF
 43652                           postinc2	equ	0xFDE
 43653                           postdec2	equ	0xFDD
 43654                           plusw2	equ	0xFDB
 43655                           fsr2h	equ	0xFDA
 43656                           fsr2l	equ	0xFD9
 43657                           status	equ	0xFD8
 43658                           
 43659 ;; *************** function __fat_sector_from_cluster *****************
 43660 ;; Defined at:
 43661 ;;		line 75 in file "fat16.c"
 43662 ;; Parameters:    Size  Location     Type
 43663 ;;  cluster         2    0[COMRAM] unsigned int 
 43664 ;; Auto vars:     Size  Location     Type
 43665 ;;		None
 43666 ;; Return value:  Size  Location     Type
 43667 ;;                  2    0[COMRAM] unsigned int 
 43668 ;; Registers used:
 43669 ;;		wreg, status,2, status,0
 43670 ;; Tracked objects:
 43671 ;;		On entry : 0/0
 43672 ;;		On exit  : 0/0
 43673 ;;		Unchanged: 0/0
 43674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43675 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43676 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43678 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43679 ;;Total ram usage:        2 bytes
 43680 ;; Hardware stack levels used:    1
 43681 ;; This function calls:
 43682 ;;		Nothing
 43683 ;; This function is called by:
 43684 ;;		__make_cluster_chain
 43685 ;;		__read_fat
 43686 ;; This function uses a non-reentrant model
 43687 ;;
 43688                           
 43689                           	psect	text230
 43690  008D94                     __ptext230:
 43691                           	opt stack 0
 43692  008D94                     __fat_sector_from_cluster:
 43693                           	opt stack 26
 43694                           
 43695                           ;fat16.c: 77: cluster >>= 8;
 43696                           
 43697                           ;incstack = 0
 43698  008D94  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 43699  008D96  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 43700  008D98  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 43701                           
 43702                           ;fat16.c: 78: cluster += 2;
 43703  008D9A  0E02               	movlw	2
 43704  008D9C  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 43705  008D9E  0E00               	movlw	0
 43706  008DA0  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 43707                           
 43708                           ;fat16.c: 79: return cluster;
 43709  008DA2  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 43710  008DA6  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 43711  008DAA  0012               	return	
 43712  008DAC                     __end_of__fat_sector_from_cluster:
 43713                           	opt stack 0
 43714                           tosu	equ	0xFFF
 43715                           tosh	equ	0xFFE
 43716                           tosl	equ	0xFFD
 43717                           pclath	equ	0xFFA
 43718                           tblptru	equ	0xFF8
 43719                           tblptrh	equ	0xFF7
 43720                           tblptrl	equ	0xFF6
 43721                           tablat	equ	0xFF5
 43722                           prodh	equ	0xFF4
 43723                           prodl	equ	0xFF3
 43724                           intcon	equ	0xFF2
 43725                           intcon2	equ	0xFF1
 43726                           intcon3	equ	0xFF0
 43727                           indf0	equ	0xFEF
 43728                           postinc0	equ	0xFEE
 43729                           fsr0h	equ	0xFEA
 43730                           fsr0l	equ	0xFE9
 43731                           wreg	equ	0xFE8
 43732                           indf1	equ	0xFE7
 43733                           postdec1	equ	0xFE5
 43734                           plusw1	equ	0xFE3
 43735                           fsr1h	equ	0xFE2
 43736                           fsr1l	equ	0xFE1
 43737                           indf2	equ	0xFDF
 43738                           postinc2	equ	0xFDE
 43739                           postdec2	equ	0xFDD
 43740                           plusw2	equ	0xFDB
 43741                           fsr2h	equ	0xFDA
 43742                           fsr2l	equ	0xFD9
 43743                           status	equ	0xFD8
 43744                           
 43745 ;; *************** function __fat_offset_from_cluster *****************
 43746 ;; Defined at:
 43747 ;;		line 82 in file "fat16.c"
 43748 ;; Parameters:    Size  Location     Type
 43749 ;;  cluster         2    0[COMRAM] unsigned int 
 43750 ;; Auto vars:     Size  Location     Type
 43751 ;;		None
 43752 ;; Return value:  Size  Location     Type
 43753 ;;                  2    0[COMRAM] unsigned int 
 43754 ;; Registers used:
 43755 ;;		wreg, status,2, status,0
 43756 ;; Tracked objects:
 43757 ;;		On entry : 0/0
 43758 ;;		On exit  : 0/0
 43759 ;;		Unchanged: 0/0
 43760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43762 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43764 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43765 ;;Total ram usage:        2 bytes
 43766 ;; Hardware stack levels used:    1
 43767 ;; This function calls:
 43768 ;;		Nothing
 43769 ;; This function is called by:
 43770 ;;		__find_nth_cluster
 43771 ;;		__make_cluster_chain
 43772 ;;		__read_fat
 43773 ;; This function uses a non-reentrant model
 43774 ;;
 43775                           
 43776                           	psect	text231
 43777  008DAC                     __ptext231:
 43778                           	opt stack 0
 43779  008DAC                     __fat_offset_from_cluster:
 43780                           	opt stack 26
 43781                           
 43782                           ;fat16.c: 84: cluster &= 0xFF;
 43783                           
 43784                           ;incstack = 0
 43785  008DAC  0EFF               	movlw	255
 43786  008DAE  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 43787  008DB0  0E00               	movlw	0
 43788  008DB2  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 43789                           
 43790                           ;fat16.c: 85: cluster <<= 1;
 43791  008DB4  90D8               	bcf	status,0,c
 43792  008DB6  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 43793  008DB8  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 43794                           
 43795                           ;fat16.c: 86: return cluster;
 43796  008DBA  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 43797  008DBE  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 43798  008DC2  0012               	return	
 43799  008DC4                     __end_of__fat_offset_from_cluster:
 43800                           	opt stack 0
 43801                           tosu	equ	0xFFF
 43802                           tosh	equ	0xFFE
 43803                           tosl	equ	0xFFD
 43804                           pclath	equ	0xFFA
 43805                           tblptru	equ	0xFF8
 43806                           tblptrh	equ	0xFF7
 43807                           tblptrl	equ	0xFF6
 43808                           tablat	equ	0xFF5
 43809                           prodh	equ	0xFF4
 43810                           prodl	equ	0xFF3
 43811                           intcon	equ	0xFF2
 43812                           intcon2	equ	0xFF1
 43813                           intcon3	equ	0xFF0
 43814                           indf0	equ	0xFEF
 43815                           postinc0	equ	0xFEE
 43816                           fsr0h	equ	0xFEA
 43817                           fsr0l	equ	0xFE9
 43818                           wreg	equ	0xFE8
 43819                           indf1	equ	0xFE7
 43820                           postdec1	equ	0xFE5
 43821                           plusw1	equ	0xFE3
 43822                           fsr1h	equ	0xFE2
 43823                           fsr1l	equ	0xFE1
 43824                           indf2	equ	0xFDF
 43825                           postinc2	equ	0xFDE
 43826                           postdec2	equ	0xFDD
 43827                           plusw2	equ	0xFDB
 43828                           fsr2h	equ	0xFDA
 43829                           fsr2l	equ	0xFD9
 43830                           status	equ	0xFD8
 43831                           
 43832 ;; *************** function __data_sector_from_cluster *****************
 43833 ;; Defined at:
 43834 ;;		line 70 in file "fat16.c"
 43835 ;; Parameters:    Size  Location     Type
 43836 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 43837 ;; Auto vars:     Size  Location     Type
 43838 ;;		None
 43839 ;; Return value:  Size  Location     Type
 43840 ;;                  2    0[COMRAM] unsigned int 
 43841 ;; Registers used:
 43842 ;;		wreg, status,2, status,0
 43843 ;; Tracked objects:
 43844 ;;		On entry : 0/0
 43845 ;;		On exit  : 0/0
 43846 ;;		Unchanged: 0/0
 43847 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43848 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43849 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43850 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43851 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43852 ;;Total ram usage:        2 bytes
 43853 ;; Hardware stack levels used:    1
 43854 ;; This function calls:
 43855 ;;		Nothing
 43856 ;; This function is called by:
 43857 ;;		__find_nth_cluster
 43858 ;;		_fat_read_from_file_fast
 43859 ;;		_fat_modify_file
 43860 ;;		_fat_copy_sector_to_buffer
 43861 ;;		_fat_write_sector_from_buffer
 43862 ;; This function uses a non-reentrant model
 43863 ;;
 43864                           
 43865                           	psect	text232
 43866  008EC4                     __ptext232:
 43867                           	opt stack 0
 43868  008EC4                     __data_sector_from_cluster:
 43869                           	opt stack 26
 43870                           
 43871                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 43872                           
 43873                           ;incstack = 0
 43874  008EC4  0E24               	movlw	36
 43875  008EC6  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 43876  008EC8  6E01               	movwf	?__data_sector_from_cluster,c
 43877  008ECA  0E00               	movlw	0
 43878  008ECC  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 43879  008ECE  6E02               	movwf	?__data_sector_from_cluster+1,c
 43880  008ED0  0012               	return	
 43881  008ED2                     __end_of__data_sector_from_cluster:
 43882                           	opt stack 0
 43883                           tosu	equ	0xFFF
 43884                           tosh	equ	0xFFE
 43885                           tosl	equ	0xFFD
 43886                           pclath	equ	0xFFA
 43887                           tblptru	equ	0xFF8
 43888                           tblptrh	equ	0xFF7
 43889                           tblptrl	equ	0xFF6
 43890                           tablat	equ	0xFF5
 43891                           prodh	equ	0xFF4
 43892                           prodl	equ	0xFF3
 43893                           intcon	equ	0xFF2
 43894                           intcon2	equ	0xFF1
 43895                           intcon3	equ	0xFF0
 43896                           indf0	equ	0xFEF
 43897                           postinc0	equ	0xFEE
 43898                           fsr0h	equ	0xFEA
 43899                           fsr0l	equ	0xFE9
 43900                           wreg	equ	0xFE8
 43901                           indf1	equ	0xFE7
 43902                           postdec1	equ	0xFE5
 43903                           plusw1	equ	0xFE3
 43904                           fsr1h	equ	0xFE2
 43905                           fsr1l	equ	0xFE1
 43906                           indf2	equ	0xFDF
 43907                           postinc2	equ	0xFDE
 43908                           postdec2	equ	0xFDD
 43909                           plusw2	equ	0xFDB
 43910                           fsr2h	equ	0xFDA
 43911                           fsr2l	equ	0xFD9
 43912                           status	equ	0xFD8
 43913                           
 43914 ;; *************** function _USBTransferOnePacket *****************
 43915 ;; Defined at:
 43916 ;;		line 995 in file "usb_device.c"
 43917 ;; Parameters:    Size  Location     Type
 43918 ;;  ep              1    wreg     unsigned char 
 43919 ;;  dir             1    0[COMRAM] unsigned char 
 43920 ;;  data            2    1[COMRAM] PTR unsigned char 
 43921 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 43922 ;;		 -> msd_cbw(31), NULL(0), 
 43923 ;;  len             1    3[COMRAM] unsigned char 
 43924 ;; Auto vars:     Size  Location     Type
 43925 ;;  ep              1    8[COMRAM] unsigned char 
 43926 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 43927 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 43928 ;; Return value:  Size  Location     Type
 43929 ;;                  2    0[COMRAM] PTR void 
 43930 ;; Registers used:
 43931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 43932 ;; Tracked objects:
 43933 ;;		On entry : 0/0
 43934 ;;		On exit  : 0/0
 43935 ;;		Unchanged: 0/0
 43936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43937 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43938 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43940 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43941 ;;Total ram usage:       11 bytes
 43942 ;; Hardware stack levels used:    1
 43943 ;; This function calls:
 43944 ;;		Nothing
 43945 ;; This function is called by:
 43946 ;;		_USBMSDInit
 43947 ;;		_USBCheckMSDRequest
 43948 ;;		_MSDTasks
 43949 ;;		_MSDProcessCommandMediaPresent
 43950 ;;		_MSDReadHandler
 43951 ;;		_MSDWriteHandler
 43952 ;;		_MSDTransferTerminated
 43953 ;;		_APP_DeviceCustomHIDInitialize
 43954 ;;		_APP_DeviceCustomHIDTasks
 43955 ;; This function uses a non-reentrant model
 43956 ;;
 43957                           
 43958                           	psect	text233
 43959  004BEC                     __ptext233:
 43960                           	opt stack 0
 43961  004BEC                     _USBTransferOnePacket:
 43962                           	opt stack 27
 43963                           
 43964                           ;incstack = 0
 43965                           ;USBTransferOnePacket@ep stored from wreg
 43966  004BEC  6E09               	movwf	USBTransferOnePacket@ep,c
 43967                           
 43968                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 43969  004BEE  5001               	movf	USBTransferOnePacket@dir,w,c
 43970  004BF0  B4D8               	btfsc	status,2,c
 43971  004BF2  D007               	goto	l183
 43972                           
 43973                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 43974  004BF4  5009               	movf	USBTransferOnePacket@ep,w,c
 43975  004BF6  0D02               	mullw	2
 43976  004BF8  0ED1               	movlw	low _pBDTEntryIn
 43977  004BFA  24F3               	addwf	prodl,w,c
 43978  004BFC  6ED9               	movwf	fsr2l,c
 43979  004BFE  0E00               	movlw	high _pBDTEntryIn
 43980  004C00  D006               	goto	L47
 43981  004C02                     l183:
 43982                           
 43983                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 43984  004C02  5009               	movf	USBTransferOnePacket@ep,w,c
 43985  004C04  0D02               	mullw	2
 43986  004C06  0E40               	movlw	low _pBDTEntryOut
 43987  004C08  24F3               	addwf	prodl,w,c
 43988  004C0A  6ED9               	movwf	fsr2l,c
 43989  004C0C  0E01               	movlw	high _pBDTEntryOut
 43990  004C0E                     L47:
 43991  004C0E  20F4               	addwfc	prodh,w,c
 43992  004C10  6EDA               	movwf	fsr2h,c
 43993  004C12  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 43994  004C16  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 43995                           
 43996                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 43997  004C1A  500A               	movf	USBTransferOnePacket@handle,w,c
 43998  004C1C  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 43999  004C1E  A4D8               	btfss	status,2,c
 44000  004C20  D005               	goto	l185
 44001                           
 44002                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44003  004C22  0E00               	movlw	0
 44004  004C24  6E01               	movwf	?_USBTransferOnePacket,c
 44005  004C26  0E00               	movlw	0
 44006  004C28  6E02               	movwf	?_USBTransferOnePacket+1,c
 44007  004C2A  0012               	return	
 44008  004C2C                     l185:
 44009                           
 44010                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44011  004C2C  EE20 F002          	lfsr	2,2
 44012  004C30  500A               	movf	USBTransferOnePacket@handle,w,c
 44013  004C32  26D9               	addwf	fsr2l,f,c
 44014  004C34  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44015  004C36  22DA               	addwfc	fsr2h,f,c
 44016  004C38  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44017  004C3C  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44018                           
 44019                           ;usb_device.c: 1030: handle->CNT = len;
 44020  004C40  EE20 F001          	lfsr	2,1
 44021  004C44  500A               	movf	USBTransferOnePacket@handle,w,c
 44022  004C46  26D9               	addwf	fsr2l,f,c
 44023  004C48  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44024  004C4A  22DA               	addwfc	fsr2h,f,c
 44025  004C4C  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 44026                           
 44027                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44028  004C50  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44029  004C54  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44030  004C58  0E40               	movlw	64
 44031  004C5A  16DF               	andwf	indf2,f,c
 44032                           
 44033                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44034  004C5C  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44035  004C60  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44036  004C64  0E00               	movlw	0
 44037  004C66  86DB               	bsf	plusw2,3,c
 44038                           
 44039                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44040  004C68  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44041  004C6C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44042  004C70  0E00               	movlw	0
 44043  004C72  8EDB               	bsf	plusw2,7,c
 44044                           
 44045                           ;usb_device.c: 1036: if(dir != 0)
 44046  004C74  5001               	movf	USBTransferOnePacket@dir,w,c
 44047  004C76  B4D8               	btfsc	status,2,c
 44048  004C78  D018               	goto	l187
 44049                           
 44050                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44051  004C7A  5009               	movf	USBTransferOnePacket@ep,w,c
 44052  004C7C  0D02               	mullw	2
 44053  004C7E  0ED1               	movlw	low _pBDTEntryIn
 44054  004C80  24F3               	addwf	prodl,w,c
 44055  004C82  6ED9               	movwf	fsr2l,c
 44056  004C84  0E00               	movlw	high _pBDTEntryIn
 44057  004C86  20F4               	addwfc	prodh,w,c
 44058  004C88  6EDA               	movwf	fsr2h,c
 44059  004C8A  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44060  004C8E  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44061  004C92  0E04               	movlw	4
 44062  004C94  1805               	xorwf	??_USBTransferOnePacket,w,c
 44063  004C96  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44064  004C98  5006               	movf	??_USBTransferOnePacket+1,w,c
 44065  004C9A  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44066  004C9C  5009               	movf	USBTransferOnePacket@ep,w,c
 44067  004C9E  0D02               	mullw	2
 44068  004CA0  0ED1               	movlw	low _pBDTEntryIn
 44069  004CA2  24F3               	addwf	prodl,w,c
 44070  004CA4  6ED9               	movwf	fsr2l,c
 44071  004CA6  0E00               	movlw	high _pBDTEntryIn
 44072  004CA8  D017               	goto	L48
 44073  004CAA                     l187:
 44074                           
 44075                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44076  004CAA  5009               	movf	USBTransferOnePacket@ep,w,c
 44077  004CAC  0D02               	mullw	2
 44078  004CAE  0E40               	movlw	low _pBDTEntryOut
 44079  004CB0  24F3               	addwf	prodl,w,c
 44080  004CB2  6ED9               	movwf	fsr2l,c
 44081  004CB4  0E01               	movlw	high _pBDTEntryOut
 44082  004CB6  20F4               	addwfc	prodh,w,c
 44083  004CB8  6EDA               	movwf	fsr2h,c
 44084  004CBA  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44085  004CBE  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44086  004CC2  0E04               	movlw	4
 44087  004CC4  1805               	xorwf	??_USBTransferOnePacket,w,c
 44088  004CC6  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44089  004CC8  5006               	movf	??_USBTransferOnePacket+1,w,c
 44090  004CCA  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44091  004CCC  5009               	movf	USBTransferOnePacket@ep,w,c
 44092  004CCE  0D02               	mullw	2
 44093  004CD0  0E40               	movlw	low _pBDTEntryOut
 44094  004CD2  24F3               	addwf	prodl,w,c
 44095  004CD4  6ED9               	movwf	fsr2l,c
 44096  004CD6  0E01               	movlw	high _pBDTEntryOut
 44097  004CD8                     L48:
 44098  004CD8  20F4               	addwfc	prodh,w,c
 44099  004CDA  6EDA               	movwf	fsr2h,c
 44100  004CDC  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44101  004CE0  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44102                           
 44103                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44104  004CE4  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44105  004CE8  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44106  004CEC  0012               	return	
 44107  004CEE                     __end_of_USBTransferOnePacket:
 44108                           	opt stack 0
 44109                           tosu	equ	0xFFF
 44110                           tosh	equ	0xFFE
 44111                           tosl	equ	0xFFD
 44112                           pclath	equ	0xFFA
 44113                           tblptru	equ	0xFF8
 44114                           tblptrh	equ	0xFF7
 44115                           tblptrl	equ	0xFF6
 44116                           tablat	equ	0xFF5
 44117                           prodh	equ	0xFF4
 44118                           prodl	equ	0xFF3
 44119                           intcon	equ	0xFF2
 44120                           intcon2	equ	0xFF1
 44121                           intcon3	equ	0xFF0
 44122                           indf0	equ	0xFEF
 44123                           postinc0	equ	0xFEE
 44124                           fsr0h	equ	0xFEA
 44125                           fsr0l	equ	0xFE9
 44126                           wreg	equ	0xFE8
 44127                           indf1	equ	0xFE7
 44128                           postdec1	equ	0xFE5
 44129                           plusw1	equ	0xFE3
 44130                           fsr1h	equ	0xFE2
 44131                           fsr1l	equ	0xFE1
 44132                           indf2	equ	0xFDF
 44133                           postinc2	equ	0xFDE
 44134                           postdec2	equ	0xFDD
 44135                           plusw2	equ	0xFDB
 44136                           fsr2h	equ	0xFDA
 44137                           fsr2l	equ	0xFD9
 44138                           status	equ	0xFD8
 44139                           tosu	equ	0xFFF
 44140                           tosh	equ	0xFFE
 44141                           tosl	equ	0xFFD
 44142                           pclath	equ	0xFFA
 44143                           tblptru	equ	0xFF8
 44144                           tblptrh	equ	0xFF7
 44145                           tblptrl	equ	0xFF6
 44146                           tablat	equ	0xFF5
 44147                           prodh	equ	0xFF4
 44148                           prodl	equ	0xFF3
 44149                           intcon	equ	0xFF2
 44150                           intcon2	equ	0xFF1
 44151                           intcon3	equ	0xFF0
 44152                           indf0	equ	0xFEF
 44153                           postinc0	equ	0xFEE
 44154                           fsr0h	equ	0xFEA
 44155                           fsr0l	equ	0xFE9
 44156                           wreg	equ	0xFE8
 44157                           indf1	equ	0xFE7
 44158                           postdec1	equ	0xFE5
 44159                           plusw1	equ	0xFE3
 44160                           fsr1h	equ	0xFE2
 44161                           fsr1l	equ	0xFE1
 44162                           indf2	equ	0xFDF
 44163                           postinc2	equ	0xFDE
 44164                           postdec2	equ	0xFDD
 44165                           plusw2	equ	0xFDB
 44166                           fsr2h	equ	0xFDA
 44167                           fsr2l	equ	0xFD9
 44168                           status	equ	0xFD8
 44169                           
 44170                           	psect	text234
 44171  000000                     __ptext234:
 44172                           	opt stack 0
 44173                           tosu	equ	0xFFF
 44174                           tosh	equ	0xFFE
 44175                           tosl	equ	0xFFD
 44176                           pclath	equ	0xFFA
 44177                           tblptru	equ	0xFF8
 44178                           tblptrh	equ	0xFF7
 44179                           tblptrl	equ	0xFF6
 44180                           tablat	equ	0xFF5
 44181                           prodh	equ	0xFF4
 44182                           prodl	equ	0xFF3
 44183                           intcon	equ	0xFF2
 44184                           intcon2	equ	0xFF1
 44185                           intcon3	equ	0xFF0
 44186                           indf0	equ	0xFEF
 44187                           postinc0	equ	0xFEE
 44188                           fsr0h	equ	0xFEA
 44189                           fsr0l	equ	0xFE9
 44190                           wreg	equ	0xFE8
 44191                           indf1	equ	0xFE7
 44192                           postdec1	equ	0xFE5
 44193                           plusw1	equ	0xFE3
 44194                           fsr1h	equ	0xFE2
 44195                           fsr1l	equ	0xFE1
 44196                           indf2	equ	0xFDF
 44197                           postinc2	equ	0xFDE
 44198                           postdec2	equ	0xFDD
 44199                           plusw2	equ	0xFDB
 44200                           fsr2h	equ	0xFDA
 44201                           fsr2l	equ	0xFD9
 44202                           status	equ	0xFD8
 44203                           
 44204                           	psect	rparam
 44205  0000                     tosu	equ	0xFFF
 44206                           tosh	equ	0xFFE
 44207                           tosl	equ	0xFFD
 44208                           pclath	equ	0xFFA
 44209                           tblptru	equ	0xFF8
 44210                           tblptrh	equ	0xFF7
 44211                           tblptrl	equ	0xFF6
 44212                           tablat	equ	0xFF5
 44213                           prodh	equ	0xFF4
 44214                           prodl	equ	0xFF3
 44215                           intcon	equ	0xFF2
 44216                           intcon2	equ	0xFF1
 44217                           intcon3	equ	0xFF0
 44218                           indf0	equ	0xFEF
 44219                           postinc0	equ	0xFEE
 44220                           fsr0h	equ	0xFEA
 44221                           fsr0l	equ	0xFE9
 44222                           wreg	equ	0xFE8
 44223                           indf1	equ	0xFE7
 44224                           postdec1	equ	0xFE5
 44225                           plusw1	equ	0xFE3
 44226                           fsr1h	equ	0xFE2
 44227                           fsr1l	equ	0xFE1
 44228                           indf2	equ	0xFDF
 44229                           postinc2	equ	0xFDE
 44230                           postdec2	equ	0xFDD
 44231                           plusw2	equ	0xFDB
 44232                           fsr2h	equ	0xFDA
 44233                           fsr2l	equ	0xFD9
 44234                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _flash_write_page_from_buffer->__flash_write_page_from_buffer
    __flash_write_page_from_buffer->__flash_is_busy
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2036977
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   29687
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   23383
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6079
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  127391
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   57684
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   49282
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   20359
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  102444
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  102444
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   97280
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   49391
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   47633
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   23561
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15973
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13176
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5780
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  726332
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   79359
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   55026
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   40834
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   32847
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    1135
                                             12 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6     600
                                              6 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6     267
                                              0 COMRAM     6     0      6
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2777
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    7705
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    7415
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  643660
                                             59 BANK0      6     3      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  556426
                                             56 BANK0      3     1      2
            __parse_buffer_to_sector
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                  7     5      2    5142
                                             42 COMRAM     7     5      2
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    4829
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4496
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                              5     3      2   47624
                                             81 COMRAM     5     3      2
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           15    13      2   47378
                                             66 COMRAM    15    13      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4320
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   17459
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   17304
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   69726
                                             84 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   30111
                                             94 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   29890
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   54011
                                             85 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68224
                                             79 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   68047
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   21733
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   72116
                                             88 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   71800
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    6971
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    6795
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  143847
                                             89 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  143604
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   69432
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   21999
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   32837
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   15628
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7062
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   53628
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21526
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4163
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    7328
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                              5     3      2   47802
                                             81 COMRAM     5     3      2
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_sector_from_buffer                        15    13      2   47556
                                             66 COMRAM    15    13      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
       _flash_write_page_from_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_page_from_buffer                         2     0      2    4498
                                             29 COMRAM     2     0      2
      __flash_write_page_from_buffer
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4387
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   13388
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    6705
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    6661
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   15523
                                             55 COMRAM    10     6      4
          __data_sector_from_cluster
           __fat_offset_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    5499
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    7505
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    6433
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __data_sector_from_cluster                            2     0      2     467
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_write_page_from_buffer
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __data_sector_from_cluster
                 __fat_offset_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_write_page_from_buffer
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Sep 19 23:31:33 2018

                          __end_of_fat_read_from_file 50D0  
                           ??_internalFlash_getBuffer 0003  
                     __size_of__write_value_to_offset 0034  
                                          _USB_SD_Ptr 9E7B  
                            fat_create_file@extension 004F  
              __end_of_i2c_display_send_init_sequence 899E  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 8972  
                        __end_of_fat_read_from_buffer 8CD8  
                                 __system_timer0_init 8C7A  
                          flash_read_from_buffer@data 0005  
                                                  _os 00C5  
                                       _USBDeviceInit 3EA0  
                                  _USBCheckHIDRequest 5380  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 0097  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 0005  
                    __size_of__parse_sector_to_buffer 0088  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 006A  
                                     _fat_resize_file 4DEE  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5E10  
                                                 l210 6ACC  
                                                 l220 4D16  
                                                 l141 3F0E  
                                                 l214 6E68  
                                                 l310 65C2  
                                                 l150 362E  
                                                 l143 3F4C  
                                                 l303 8708  
                                                 l151 3624  
                                                 l320 7906  
                                                 l208 6AB2  
                                                 l224 4D98  
                                                 l304 8706  
                                                 l152 3622  
                                                 l241 5B50  
                                                 l233 5AA4  
                                                 l161 36AA  
                                                 l242 5B18  
                                                 l330 5F4E  
                                                 l322 7954  
                                                 l235 5AAE  
                                                 l331 5F14  
                                                 l251 445C  
                                                 l411 53CE  
                                                 l219 4D6E  
                                                 l139 3EE6  
                                                 l171 373A  
                                                 l163 36C0  
                                                 l155 364A  
                                                 l252 4442  
                                                 l412 539C  
                                                 l260 52E8  
                                                 l164 36CC  
                                                 l156 365A  
                                                 l237 5B10  
                                                 l333 5F34  
                                                 l309 65C8  
                                                 l173 375E  
                                                 l165 36F4  
                                                 l157 3662  
                                                 l238 5AD8  
                                                 l422 53F0  
                                                 l414 53E0  
                         __end_of_USBStdGetDscHandler 4268  
                                                 l262 535C  
                                                 l350 51FC  
                                                 l166 3700  
                                                 l158 3678  
                                                 l183 4C02  
                                                 l191 4836  
                                                 l423 5408  
                                                 l415 53BA  
                                                 l271 4154  
                                                 l343 525A  
                                                 l175 377A  
                                                 l159 3684  
                                                 l328 5ECC  
                                                 l248 43E6  
                                                 l424 5414  
                                                 l360 1B6C  
                                                 l272 41E2  
                                                 l352 5202  
                                                 l344 51CC  
                                                 l168 3712  
                                                 l185 4C2C  
                                                 l329 5ED2  
                                                 l249 43C4  
                                                 l521 4BDC  
                                                 l425 542C  
                                                 l361 1B72  
                                                 l281 6658  
                                                 l353 5220  
                                                 l610 7AC0  
                                                 l178 863E  
                                                 l418 5438  
                                                 l530 5F70  
                                                 l274 41EA  
                                                 l282 65E6  
                                                 l354 523C  
                                                 l346 51D6  
                                                 l187 4CAA  
                                                 l603 7AC8  
                                                 l179 864C  
                                                 l371 1C92  
                                                 l363 1BDE  
                                                 l275 4240  
                                                 l347 51DC  
                                                 l620 088E  
                                                 l604 7A8C  
                                                 l372 1CAE  
                                                 l268 4250  
                                                 l348 51E2  
                                                 l621 0898  
                                                 l381 1DA6  
                                                 l365 1C26  
                                                 l277 4248  
                                                 l269 4140  
                                                 l285 666E  
                                                 l349 51F6  
                                                 l710 5472  
                                                 l702 1AD6  
                                                 l614 0BE0  
                                                 l630 0A3E  
                                                 l606 7AA8  
                                                 l518 4BE4  
                                                 l534 5FD8  
                                                 l374 1D14  
                                                 l286 65F8  
                                                 l703 1AEE  
                                                 l623 08F0  
                                                 l615 086E  
                                                 l519 4B58  
                                                 l375 1D20  
                                                 l367 1C48  
                                                 l287 65FE  
                                                 l295 8420  
                                                 l712 5488  
                                                 l704 1B08  
                                                 l640 0B08  
                                                 l624 09AA  
                                                 l608 7AB4  
                                                 l800 72AE  
                                                 l376 1D9A  
                                                 l288 661C  
                                                 l296 841E  
                                                 l721 5514  
                                                 l633 0A72  
                                                 l625 09B4  
                                                 l609 7ABA  
                                                 l561 217A  
                                                 l529 600E  
                                                 l369 1CC8  
                                                 l722 54FE  
                                                 l650 0B88  
                                                 l634 0AA0  
                                                 l626 09D4  
                                                 l618 087E  
                                                 l554 2266  
                                                 l562 2164  
                                                 l546 5FE0  
                                                 l810 72A0  
                                                 l715 54B8  
                                                 l651 0B9C  
                                                 l571 2196  
                                                 l563 2138  
                                                 l555 203C  
                                                 l379 1D54  
                                                 l644 0B40  
                                                 l636 0AD4  
                                                 l628 0A04  
                                                 l564 2140  
                                                 l804 727C  
                                                 l900 3BDE  
                                                 l661 6C90  
                                                 l741 4A10  
                                                 l733 5526  
                                                 l645 0B54  
                                                 l573 21A8  
                                                 l805 7284  
                                                 l901 3B58  
                                                 l750 4A44  
                                                 l718 54C4  
                                                 l670 311E  
                                                 l654 0BD8  
                                                 l646 0B72  
                                                 l638 0AF0  
                                                 l566 2158  
                                                 l806 728C  
                                                 l902 3B60  
                                                 l751 4A50  
                                                 l719 54DE  
                                                 l671 3128  
                                                 l575 21CA  
                                                 l559 205C  
                                                 l903 3B68  
                                                 l752 4A62  
                                                 l680 3256  
                                                 l672 313C  
                                                 l648 0B9E  
                                                 l592 451C  
                                                 l576 21D2  
                                                 l808 7296  
                                                 l904 3B70  
                                                 l753 4A6E  
                                                 l737 5536  
                                                 l665 326C  
                                                 l649 0B78  
                                                 l577 21F6  
                                                 l905 3B78  
                                                 l754 4A80  
                                                 l674 3186  
                                                 l666 30BE  
                                                 l690 1938  
                                                 l586 2248  
                                                 l914 7C36  
                                                 l906 3B80  
                                                 l659 6C7A  
                                                 l747 4AC2  
                                                 l755 4AB6  
                                                 l675 31AE  
                                                 l691 1944  
                                                 l907 3B8A  
                                                 l748 4A3C  
                                                 l668 3290  
                                                 l676 31DE  
                                                 l684 1B1E  
                                                 l692 1964  
                                                 l596 45B4  
                                                 l764 7EA2  
                                                 _BDT 000D00  
                                                 l677 31F0  
                                                 l669 3112  
                                                 l693 19AE  
                                                 l685 1892  
                                                 l597 45AE  
                                                 l589 2250  
                                                 l933 80FE  
                                                 l917 7C5C  
                                                 l678 31F6  
                                                 l694 1988  
                                                 l926 811C  
                                                 l918 7C6A  
                                                 l679 320A  
                                                 l687 1B42  
                                                 l695 19F4  
                                                 l599 45B8  
                                                 l767 7ED8  
                                                 l935 810A  
                                                 l927 80E2  
                                                 l696 19EC  
                                                 l688 1932  
                                                 l929 80EC  
                                                 l698 1A08  
                                                 l699 1A70  
                                                 l972 66FC  
                                                 l893 3AAC  
                                                 l966 668E  
                                                 l894 3ABA  
                                                 l896 3B42  
                                                 l898 3B9A  
                                                 l899 3B50  
                                                 _LBA 015E  
                                                 _LUN 01B3  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 8BF2  
                                   main@tx_start_addr 00BD  
                            __size_of__display_failed 02F6  
                                         _start_line1 9DF4  
                                         _start_line2 9E62  
                                         _start_line3 9EA7  
                                         _start_line4 9E22  
                                  api_prepare@command 00B6  
                                          _USBSuspend 8914  
                       ?_fat_write_sector_from_buffer 0043  
                         flash_read_from_buffer@start 0001  
                                  _internalFlash_read 8714  
                              __end_of_display_update 78F6  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 3602  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F8  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 46CC  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 014A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 6B9E  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                   __size_of__fill_buffer_read_buffer 00F6  
                        __parse_file_resize@file_size 0058  
                                 api_prepare@inBuffer 00B2  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l2000 183A  
                                                l1008 8E24  
                                                l1210 7072  
                                                l1203 8344  
                                                l2004 1874  
                                                l2100 4E0E  
                                                l1204 8328  
                                                l1300 5826  
                                                l2005 1886  
                                                l2101 4ECA  
                                                l1117 8D7A  
                                                l2110 238C  
                                                l2102 4EC2  
                                                l1302 5836  
                                                l2015 7B5A  
                                                l2111 23B4  
                                                l2023 8BDA  
                                                l2112 245C  
                                                l2200 7F98  
                                                l2120 5D04  
                                                l1232 7F22  
                                                l1304 5846  
                                                l1320 48E0  
                                                l2017 7BAC  
                                                l2025 8BEA  
                                                l2201 7F9C  
                                                l2121 5D08  
                                                l1233 7F06  
                                                l1209 708E  
                                                l2042 59A6  
                                                l2202 7FA0  
                                                l2130 5D2C  
                                                l2122 5D0C  
                                                l1154 8F74  
                                                l1090 8BA0  
                                                l1306 585E  
                                                l1330 498A  
                                                l3003 6F7E  
                                                l2051 5990  
                                                l2131 5D30  
                                                l2123 5D10  
                                                l2211 34E2  
                                                l1091 8B8E  
                                                l1163 8F08  
                                                l1083 8768  
                                                l1331 49AA  
                                                l1323 48F4  
                                                l2108 22FE  
                                                l2140 1EF0  
                                                l2116 5D48  
                                                l2132 5D34  
                                                l2124 5D14  
                                                l2220 3536  
                                                l1084 8772  
                                                l1308 586E  
                                                l1324 4908  
                                                l2109 249E  
                                                l2045 591C  
                                                l2141 1DCE  
                                                l2133 5D38  
                                                l2125 5D18  
                                                l2117 5CFC  
                                                l2213 3572  
                                                l2221 353A  
                                                l1181 8F00  
                                                l2301 89B8  
                                                l1325 491E  
                                                l3006 6FBA  
                                                l2054 7836  
                                                l2150 1E2C  
                                                l2134 5D3C  
                                                l2126 5D1C  
                                                l2230 355E  
                                                l2222 353E  
                                                l2214 351E  
                                                l1510 0CFC  
                                                l2151 1E3C  
                                                l2143 1DD2  
                                                l2135 5D40  
                                                l2127 5D20  
                                                l2119 5D00  
                                                l2231 3562  
                                                l2223 3542  
                                                l2215 3522  
                                                l2207 349C  
                                                l1175 8F14  
                                                l2303 89C6  
                                                l1319 49BA  
                                                l1327 4946  
                           ?__fill_buffer_read_buffer 000D  
                                                l2064 85BC  
                                                l2160 1E78  
                                                l2152 1E4C  
                                                l2144 1DD6  
                                                l2136 5D44  
                                                l2128 5D24  
                                                l2232 3566  
                                                l2224 3546  
                                                l2216 3526  
                                                l3040 7322  
                                                l1512 0DA8  
                                                l2320 033E  
                                                l1328 496E  
                                                l2161 1E7C  
                                                l2153 1E5C  
                                                l2145 1DDA  
                                                l2129 5D28  
                                                l2233 356A  
                                                l2225 354A  
                                                l2217 352A  
                                                l2209 34AA  
                                                l1169 8F6C  
                                                l1601 3046  
                                                l2321 0310  
                                                l2170 1EA0  
                                                l2162 1E80  
                                                l2154 1E60  
                                                l2146 1DEC  
                                                l2234 356E  
                                                l2226 354E  
                                                l2218 352E  
                                                l1514 0E54  
                                                l1602 300E  
                                                l1610 429C  
                                                l2330 048A  
                                                l2314 003E  
                                                l2410 7A4C  
                                                l2171 1EA4  
                                                l2163 1E84  
                                                l2155 1E64  
                                                l2147 1DFC  
                                                l2235 35FE  
                                                l2227 3552  
                                                l2219 3532  
                                                l1195 8A08  
                                                l3043 7362  
                                                l1611 426E  
                                                l2091 26CE  
                                                l2083 5004  
                                                l2323 039C  
                                                l2180 1EC4  
                                                l2172 1EA8  
                                                l2164 1E88  
                                                l2156 1E68  
                                                l2148 1E0C  
                                                l2228 3556  
                                                l1196 89FA  
                                                l3044 7370  
                                                l1516 0F00  
                                                l1508 0C52  
                                                l1604 309A  
                                                l2092 25BC  
                                                l2420 5A0A  
                                                l2324 03C0  
                                                l2316 00B4  
                                                l2404 7A5E  
                                                l2244 681E  
                                                l1292 5894  
                                                l2069 6EA8  
                                                l2077 6CFC  
                                                l2181 1EC8  
                                                l2173 1EAC  
                                                l2165 1E8C  
                                                l2157 1E6C  
                                                l2149 1E1C  
                                                l2229 355A  
                                                l1197 8A1C  
                                                l1605 306C  
                                                l1701 7F64  
                                                l1613 42F0  
                                                l2093 25E4  
                                                l2085 501C  
                                                l2317 0202  
                                                l2413 7A52  
                                                l2405 7A34  
                                                l1293 57EC  
                                                l2238 8AC4  
                                                l2190 1EEC  
                                                l2182 1ECC  
                                                l2174 1EB0  
                                                l2166 1E90  
                                                l2158 1E70  
                                                l1198 89FE  
                                                l1622 37B6  
                                                l1702 7F36  
                                                l1614 42C2  
                                                l1542 5B96  
                                                l1550 5B84  
                                                l2094 268C  
                                                l2086 5082  
                                                l2430 68FE  
                                                l2422 5A60  
                                                l2326 0426  
                                                l2318 0188  
                                                l2079 6D30  
                                                l2183 1ED0  
                                                l2175 1EB4  
                                                l2167 1E94  
                                                l2159 1E74  
                                                l1199 8A02  
                                                l1471 6062  
                                                l1631 38DC  
                                                l1623 3788  
                                                l3039 732E  
                                                l1551 5B8A  
                                                l1543 5B60  
                                                l2423 5A62  
                                                l1800 8C76  
                                                l2184 1ED4  
                                                l2176 1EB8  
                                                l2168 1E98  
                                                l1632 38AE  
                                                l1464 82CE  
                                                l1640 1364  
                                                l1616 4344  
                                                l1552 5B90  
                                                l2424 5A6C  
                                                l2328 0458  
                                                l2440 1184  
                                                l2408 7A40  
                                                l2248 686E  
                                                l1296 57FE  
                                                l2185 1ED8  
                                                l2177 1EBC  
                                                l2169 1E9C  
                                                l1625 380A  
                                                l1641 1336  
                                                l1617 4316  
                                                l1553 5BF4  
                                                l1545 5B66  
                                                l2089 2504  
                                                l2098 4DFE  
                                                l2194 7FA4  
                                                l2186 1EDC  
                                                l2178 1EC0  
                                                l1474 6088  
                                                l1626 37DC  
                                                l1466 82DA  
                                                l1650 1408  
                                                l1562 2B34  
                                                l1554 5BE0  
                                                l1546 5B6C  
                                                l2418 5A78  
                                                l2442 11E4  
                                                l1298 580E  
                                                l2195 7F88  
                                                l2187 1EE0  
                                                l1643 1536  
                                                l1651 13DA  
                                                l1571 2CCE  
                                                l1563 2B06  
                                                l1555 5BE6  
                                                l1547 5B72  
                                                l2419 59B4  
                                                l2443 1216  
                                                l2435 0FD6  
                                                l2276 766A  
                                                l2188 1EE4  
                                                l1476 60AC  
                                                l1628 3888  
                                                l3420 797A  
                                                l1580 3DD6  
                                                l1572 2CA0  
                                                l1556 5BEC  
                                                l1548 5B78  
                                                l2460 0660  
                                                l2452 04E2  
                                                l2444 1246  
                                                l2436 0FFA  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 7F8C  
                                                l2189 1EE8  
                                                l3501 8546  
                                                l1629 3850  
                                                l3421 796E  
                                                l1645 13B8  
                                                l1637 1310  
                                                l1581 3DA8  
                                                l1565 2B88  
                                                l1557 5C1E  
                                                l1549 5B7E  
                                                l2701 3C12  
                                                l2445 12A2  
                                                l1741 74BA  
                                                l1750 808A  
                                                l2278 76CC  
                                                l2198 7F90  
                                                l3502 853E  
                                                l1478 60D0  
                                                l1662 14F8  
                                                l1654 1458  
                                                l1646 138A  
                                                l1638 12E2  
                                                l1566 2B5A  
                                                l2710 3CB0  
                                                l2702 3C28  
                                                l2454 057C  
                                                l2438 1092  
                                                l1742 74E6  
                                                l2199 7F94  
                                                l1663 14CA  
                                                l1655 142A  
                                                l1671 32CA  
                                                l1583 3E2A  
                                                l2711 3CC2  
                                                l2703 3C3E  
                                                l2551 7440  
                                                l2471 0820  
                                                l2463 069C  
                                                l2455 05F4  
                                                l2447 12C8  
                                                l2439 110A  
                                                l1752 80B2  
                                                l1760 7D9A  
                                                l3424 79A2  
                                                l1648 1558  
                                                l1592 2F12  
                                                l1680 3426  
                                                l1672 329C  
                                                l1584 3DFC  
                                                l1568 2C7A  
                                                l2712 3CD0  
                                                l2704 3C54  
                                                l2456 064E  
                                                l2801 5744  
                                                l3505 855E  
                                                l3425 79B0  
                                                l1665 158C  
                                                l1593 2EE4  
                                                l1681 33F8  
                                                l1577 3D82  
                                                l1569 2C4C  
                                                l2713 3CDE  
                                                l2553 744C  
                                                l2465 0746  
                                                l1770 7552  
                                                l3506 8568  
                                                l1690 3958  
                                                l1666 155E  
                                                l1658 14A8  
                                                l1674 331E  
                                                l1586 3E7E  
                                                l1578 3D54  
                                                l2722 5C52  
                                                l2706 3D26  
                                                l2714 3D06  
                                                l2466 080A  
                                                l1659 147A  
                                                l1595 2F66  
                                                l1675 32F0  
                                                l1587 3E50  
                                                l2707 3C90  
                                                l2299 89AE  
                                                l2459 0854  
                                                l2467 0750  
                                                l1772 7570  
                                                l1692 39DA  
                                                l1596 2F38  
                                                l2724 5CBA  
                                                l2740 62F4  
                                                l2468 07C8  
                                                l1749 80CC  
                                                l1845 7746  
                                                l1837 802A  
                                                l2813 510C  
                                                l1693 39AC  
                                                l1677 3372  
                                                l2725 5C6C  
                                                l2741 62C0  
                                                l2709 3C9E  
                                                l2469 0804  
                                                l1950 7CD4  
                                                l1686 3932  
                                                l1598 2FBA  
                                                l1678 3344  
                                                l2726 5CF0  
                                                l2718 5C3A  
                                                l2750 2EAC  
                                                l2742 62CC  
                                                l2558 8A86  
                                                l1767 7510  
                                                l1759 7D90  
                                                l1847 77A8  
                                                l2807 81C0  
                                                l2831 45FA  
                                                l1695 3A52  
                                                l1687 3904  
                                                l1599 2F8C  
                                                l2727 5C84  
                                                l2567 8748  
                                                l1768 751A  
                                                l1952 7D0E  
                                                l1696 3A24  
                                                l2728 5CA0  
                                                l2736 627C  
                                                l2825 73BE  
                                                l3705 6250  
                                                l1689 3986  
                                                l2761 6A26  
                                                l1794 7DE8  
                                                l1786 823A  
                                                l3706 61AA  
                                                l2738 62B6  
                                                l2770 4FB0  
                                                l1795 7DF2  
                                                l1787 8244  
                                                l1971 6198  
                                                l3707 6248  
                                                l2819 77EE  
                                                l2843 71A6  
                                                l3491 8150  
                                                l3492 8148  
                                                l2780 6392  
                                                l2748 2EA6  
                                                l1892 8834  
                                                l2837 8460  
                                                l2781 6398  
                                                l2749 2ED4  
                                                l1966 613A  
                                                l2790 564A  
                                                l2774 63A4  
                                                l2782 639E  
                                                l2766 289E  
                                                l1983 163C  
                                                l2855 676A  
                                                l2791 5658  
                                                l3495 8170  
                                                l2775 6322  
                                                l1976 6C2A  
                                                l2792 5666  
                                                l3496 817A  
                                                l1888 8866  
                                                l1977 6BC4  
                                                l2849 722E  
                                                l1969 618E  
                                                l1993 1776  
                                                l2793 5674  
                                                l3681 695E  
                                                l2777 633E  
                                                l1978 6C0E  
                                                l1986 1646  
                                                l2786 56BE  
                                                l2794 5682  
                                                l3682 699C  
                                                l2778 635A  
                                                l2698 3C74  
                                                l2970 8608  
                                                l1995 1784  
                                                l1987 16E6  
                                                l2795 5690  
                                                l2787 562E  
                                                l3675 8512  
                                                l2779 6376  
                                                l2699 3BFC  
                                                l2980 473A  
                                                l1996 178C  
                                                l1988 1696  
                                                l2788 5704  
                                                l2796 569E  
                                                l1989 17AA  
                                                l2797 56AC  
                                                l2789 563C  
                                                l3693 89E4  
                           ?__offset_from_file_number 0001  
                                                l2974 47C6  
                                                l1998 17FE  
                                                l3694 89D4  
                                                l2975 46D0  
                                                l1999 17F6  
                                                l3687 7A16  
                                                l3679 6924  
                                                l2967 861A  
                                                l3688 79D8  
                                                l2968 85F6  
                                                l2977 46D6  
                                                l2969 8628  
                                                l2994 712E  
                                                l2988 7E7C  
                                                l2997 7162  
                                                STR_1 9FF2  
                                                STR_2 9FF2  
                                                STR_3 9FF2  
                                                STR_4 9FF2  
                                                STR_5 9FF2  
                                                STR_6 9FF2  
                                                STR_7 9FF2  
                               __end_of_checked_line1 9DC4  
                                                STR_8 9FF2  
                               __end_of_checked_line2 9CAE  
                                                STR_9 9FDD  
                               __end_of_checked_line3 9E7B  
                               __end_of_checked_line4 9D43  
                                      _bootloader_run 7A28  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 018D  
                                                u7005 7DA6  
                                                u8010 167C  
                                                u7045 7526  
                                                u8110 184E  
                                                u8030 16F2  
                                                u7135 7DFE  
                                                u8120 185A  
                                                u8040 171A  
                                                u8200 6202  
                                                u7208 4B78  
                                                u7209 4B8A  
                                                u8050 1726  
                                                u8210 6238  
                                                u7330 604E  
                                                u8060 1750  
                                                u7340 6074  
                                                u7244 4BCE  
                                                u7228 4B9C  
                                                u7405 8B4C  
                                                u8205 61FC  
                                                u7245 4BC8  
                                                u7229 4BB0  
                                                u7350 6098  
                                                u7510 797E  
                                                u7270 49FC  
                                                u8310 5B00  
                                                u8207 61F2  
                               ??_USBCtrlTrfTxService 0001  
                                                u7440 6160  
                                                u9120 8BEE  
                                                u9200 59A6  
                                                u6720 854A  
                                                u7360 60BC  
                                                u8217 622E  
                                                u8170 7BA8  
                                                u8250 76C8  
                                                u8090 17D8  
                                                u8330 5B40  
                                                u7460 619E  
                                                u8180 61CA  
                                                u6900 7D52  
                                                u8317 5AF6  
                                                u9310 2324  
                                                u8350 79F8  
                                                u6910 7D5E  
                                                u7630 5FBA  
                                                _UCFG 000F39  
                                                u9240 4E48  
                                                u6920 7D68  
                                                u7480 7332  
                                                u8337 5B36  
                                                u9250 4E7A  
                                                u6690 8154  
                                                u7810 5522  
                                                u8610 1AAA  
                                                u9315 231A  
                                                u8187 61C0  
                                                u9260 4E96  
                                                u6908 7D54  
                                                u7900 0D10  
                                                u8428 3160  
                                                u8620 1AAC  
                                                u8508 18EC  
                                                _UEP0 000F26  
                                                u9245 4E3E  
                                                u8357 79EE  
                                                u8429 3174  
                                                u8509 1900  
                                                _UEP1 000F27  
                                                u9190 599C  
                                                u6926 7D6A  
                                                u6918 7D60  
                                                u6870 7D2E  
                                                u8710 8306  
                                                u7910 0DBC  
                                                u7830 5532  
                                    ?_fat_create_file 004D  
                                                u6775 758C  
                                                u9255 4E70  
                                                u8375 30E4  
                                                u6880 7D3A  
                                                u7920 0E68  
                                                u7760 54FA  
                                                u6890 7D46  
                                                u7930 8862  
                                                u9530 41AC  
                                                _UEIE 000F37  
                                                u7940 8830  
                                                u9540 41DC  
                                                u9381 34B4  
                                                u8485 18B8  
                                                u6878 7D30  
                                                u7790 5510  
                                                u8638 1AB2  
                                                u8639 1AC4  
                                                u7960 6BFA  
                                                u6888 7D3C  
                                                u8568 19BA  
                                                u9560 4234  
                                                u8569 19CE  
                                                u9537 41A2  
                                                u6898 7D48  
                                                u9490 5314  
                                                u9547 41D2  
                                                u9567 422A  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9780 1D3A  
                                                u9950 0B1C  
                                                u9960 0B2E  
                                                u9880 09FC  
                                                u9848 08FC  
                                                u9849 0910  
                                                u9858 092C  
                                                u9859 0940  
                                                u9990 0BA6  
                                                u9898 0A1C  
                                                u9899 0A30  
                               _i2c_digipot_reset_off 8C14  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                        flash_read_from_buffer@length 0003  
                               __size_of__delete_root 0048  
                                      _ResetSenseData 7AEC  
              __end_of__fill_buffer_get_configuration 6B9E  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 6B00  
                     __size_of_flash_read_from_buffer 0002  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0188  
                             fat_write_to_buffer@data 0029  
                                                _main 3A74  
                                                _itoa 84EE  
                          __end_of_fat_append_to_file 6F2E  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5C2A  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 691C  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 003F  
                             __bootloader_verify_file 0F98  
                           _ExternalFlash_MediaDetect 8FAA  
                                                prodh 000FF4  
                                                prodl 000FF3  
    __get_available_offset_from_buffer@minimum_offset 0001  
                      fat_modify_file@number_of_bytes 0068  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 8EB6  
                               _display_get_character 8A4E  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 9DB4  
                                __end_of_failed_line2 9D20  
                                __end_of_failed_line4 9E73  
                             __end_of_fat_modify_file 24C0  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 529E  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0039  
                      ??_flash_write_page_from_buffer 0020  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0180  
                    __end_of__fat_sector_from_cluster 8DAC  
                internalFlash_addressFromPage@address 0005  
                              __get_available_cluster 60E4  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 38FE  
                       __write_value_to_offset@buffer 0003  
                                      _hex_file_entry 0193  
                              _bootloader_get_entries 8F38  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                       __write_value_to_offset@offset 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 88E2  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                __make_cluster_chain@sector_in_buffer 0047  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 017C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 82C2  
                                               l11145 80EC  
                                               l12211 59A6  
                                               l11077 54C4  
                                               l11149 810A  
                                               l11511 5AAE  
                                               l12137 8BD2  
                                               l11425 61AA  
                                               l11179 0C52  
                              ?_i2c_digipot_backlight 0001  
                                               l13301 6D28  
                                               l11621 3266  
                                               l11543 79D8  
                                               l13063 09CC  
                                               l11463 89D4  
                                               l12177 58FE  
                                               l13217 4072  
                                               l13403 29D6  
                                               l14211 7484  
                                               l10861 60EC  
                             ?__fill_buffer_find_file 0037  
                                               l13415 29FC  
                                               l12641 349C  
                                               l13441 2A6E  
                                               l13425 2A22  
                                               l13361 290A  
                                               l13427 2A2A  
                                               l11771 82D2  
                                               l10869 6106  
                                               l10893 619E  
                                               l13453 2A94  
                                               l11765 82C6  
                                               l12655 34E2  
                                               l12647 34AA  
                                               l13463 2ABA  
                                               l13375 294E  
                                               l10959 53B4  
                                               l12831 52E0  
                                               l14431 7438  
                                               l14239 67F0  
                                               l13289 6CF4  
                                               l13465 2AC2  
                                               l15081 5C9A  
                                               l15401 07C8  
                                               l14257 6840  
                                               l12763 8AC4  
                                               l12747 3572  
                                               l14363 5A0A  
                                               l13389 2992  
                                               l14437 7444  
                                               l14481 6A1E  
                                               l14609 62C4  
                                               l16261 72C6  
                                               l15269 0FF2  
                                               l16263 72FA  
                                               l15527 370A  
                                        spi_tx@length 0003  
                                               l16275 1F08  
                                               l14819 3F44  
                                               l16277 2020  
                                               l14791 3EDE  
                                               l14929 2054  
                                               l14979 217A  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6D70  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 9FE9  
                                               STR_11 9FFB  
                                               STR_12 9FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                     __end_of___lldiv 7382  
                                               ?_utoa 0008  
                                               u10040 403E  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10130 6D24  
                                               u11020 722A  
                                               u10045 4034  
                                               u10150 6D60  
                                               u10310 2A22  
                                               u10230 2932  
                                               u10160 24DE  
                                               u10330 2A52  
                                               u10250 2976  
                                               u10410 641C  
                                               u11050 6766  
                                               u12020 222A  
                                               u10165 24D4  
                                               u12101 897C  
                                               u10350 2A8C  
                                               u10270 29BA  
                                               u10415 6412  
                                               u10440 64CA  
                                               u11224 4584  
                                               u11208 4554  
                                               u11160 44EA  
                                               u11320 6874  
                                               u10185 2576  
                                               u11225 457E  
                                               u11209 4566  
                                               u10370 2ABA  
                                               u10290 29F4  
                                               u11148 44B8  
                                               u11420 59DA  
                                               u11340 00A2  
                                               u12220 1054  
                                               u10445 64C0  
                                               u11149 44CC  
                                               u10390 2AEA  
                                               u11174 4500  
                                               u11175 44FA  
                                               u11184 4532  
                                               u11440 5A36  
                                               u12320 053E  
                                               u10625 857E  
                                     __end_of___llmod 79C2  
                                               u11185 452C  
                                               u11505 878C  
                                               u10810 81BC  
                              __end_of_USBDeviceTasks 3782  
                                               u11290 6824  
                                               u11515 7412  
                                               u10715 76DE  
                                               u10900 73BA  
                                               u11540 7466  
                                               u12085 81E2  
                                               u11630 62F2  
                                               u11710 3FA8  
                                               u10735 8952  
                                               u10840 5108  
                                               u10930 45F6  
                                               u10780 5740  
                                               u11580 288E  
                                               u13237 8B94  
                                               u10870 77EA  
                                               u11590 4FA8  
                                               u11830 2050  
                                               u13247 80A4  
                                               u11495 8D16  
                                               u10960 845C  
                                               u11680 3F02  
                                               u12640 377E  
                                               u13257 80B6  
                                               u12730 66A8  
                                               u11850 2084  
                                               u13267 80C0  
                                               u10990 71A2  
                                               u12750 66BC  
                                               u12830 4930  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12880 49A4  
                                     __end_of___lwdiv 8184  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 8572  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 0152  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00A5  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00CC  
                      __get_first_cluster@file_number 0038  
                                ?__bootloader_program 0001  
                                        __delete_root 8352  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 007C  
                           __end_of__find_nth_cluster 6C3C  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 2284  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5F5C  
                     __end_of_internalFlash_getBuffer 8EFC  
                     __end_of_USBCtrlEPAllowDataStage 6B00  
                                               _sd000 9FCC  
                              __write_value_to_offset 87E6  
                                               _sd001 9EE8  
                                               _sd002 9F1C  
                                               _sd003 9F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7A8A  
                 i2c_display_send_init_sequence@F6808 01C7  
                       __end_of_MSDTransferTerminated 7EDA  
                                        _gblCBWLength 018F  
                          __end_of__parse_file_delete 81D6  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 7404  
                          __end_of__parse_file_create 51BC  
                              __end_of_ResetSenseData 7B4E  
                          __end_of__parse_file_modify 46CC  
                          __end_of__parse_file_rename 781E  
                           internalFlash_read@address 000E  
                            fat_write_to_buffer@start 0025  
                            __parse_command_long@data 0098  
                           __data_sector_from_cluster 8EC4  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 57EA  
                             ?__fill_buffer_read_file 009E  
                                               pclath 000FFA  
                                     __end_of_ui_init 8E1A  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00EC  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 87B2  
                          __end_of__display_rebooting 7F86  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 626A  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 009E  
                  __fill_buffer_read_buffer@outBuffer 000F  
                          fat_read_from_buffer@length 0009  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 8AEE  
             __fill_buffer_get_file_details@outBuffer 003A  
                                      _MSDReadHandler 30BC  
                     fat_append_to_file@old_file_size 0093  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0060  
               __bootloader_check_address@byte_status 000B  
                         __end_of__make_cluster_chain 1890  
                       internalFlash_readPage@address 0018  
                   __make_cluster_chain@first_cluster 0036  
                                     __initialization 6FC2  
                       fat_read_from_file@file_number 0078  
                            __parse_write_buffer@data 002B  
                           __end_of__flash_get_status 8914  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 8DC4  
               __end_of_ExternalFlash_MediaInitialize 8D62  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 8D48  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 4EEC  
                                         _FileAddress 0172  
                                        __end_of_main 3BE6  
                                        __end_of_itoa 8530  
                       __end_of_system_encoder_enable 8E86  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7F30  
                                        __end_of_utoa 69C0  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 7C6E  
                                    _timer_pseudo_isr 874A  
                       fat_read_from_file_fast@offset 0064  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0068  
                                    __end_of_i2c_init 8EDE  
                  __size_of_flash_copy_page_to_buffer 0012  
                       fat_read_from_file_fast@sector 0060  
                            __end_of__i2c_acknowledge 8F1A  
                      __end_of__fill_buffer_find_file 6A62  
                     fat_append_to_file@new_file_size 008E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00D7  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                              _flash_read_from_buffer 8FAE  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8DF0  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 017A  
                                api_prepare@outBuffer 00B4  
                                              ??_main 00BB  
                                    __end_of__i2c_get 8F10  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0076  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00BF  
                            _fat_get_file_information 765E  
                                  __write_root@offset 002D  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 8FAA  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 8FA6  
                                 __find_nth_cluster@n 003A  
                                         ?_USBSuspend 0001  
                                  __write_root@sector 002B  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0168  
                               ??__bootloader_program 006E  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                       __get_available_cluster@offset 0032  
                              ?_spi_set_configuration 0001  
             fat_write_sector_from_buffer@file_number 004F  
                       __get_available_cluster@sector 0034  
                fat_copy_sector_to_buffer@file_number 004F  
                                _i2c_eeprom_writeByte 8572  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                  fat_write_sector_from_buffer@sector 0043  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 8B86  
                              __flash_write_to_buffer 8226  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 2902  
                                _start_from_byte_next 018B  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 8DC4  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                          ?_fat_copy_sector_to_buffer 0043  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0036  
                                          __i2c_start 8F72  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 830A  
                                _fat_read_from_buffer 8CBA  
                           fat_read_from_file@cluster 0079  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 006E  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7FDC  
                                    __end_of__get_fbr 2030  
                                    __end_of__get_mbr 5DC8  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 3296  
                                 _flash_pages_written 0174  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 6878  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 8EA6  
                   __bootloader_program@page_to_write 00A7  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00F7  
                   fat_append_to_file@number_of_bytes 0056  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 0042  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 7482  
                        __end_of__flash_set_page_size 74FC  
                                     _hexCharsToUint8 8CF6  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 781E  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E8  
                                           ??___lwmod 0005  
                                              _buffer 03C0  
                                   _USBEnableEndpoint 862E  
                       __bootloader_program@address32 00A0  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 79C2  
                                  ?_fat_get_file_size 0036  
                                              _memset 89CA  
                    __end_of__sector_from_file_number 8A4E  
                             __parse_sector_to_buffer 716A  
                                              clear_0 6FFC  
                                              clear_1 7010  
                                              clear_2 7022  
                                              clear_3 702E  
                                              clear_4 703A  
                                              clear_5 7046  
                           _ExternalFlash_SectorWrite 881A  
                                   api_parse@inBuffer 009B  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 9F6E  
                                              _reboot 8D62  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                   __end_of_flash_copy_page_to_buffer 8E64  
                                              _ui_run 48DE  
                                              _spi_tx 7E2C  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 88B0  
              __make_cluster_chain@number_of_clusters 0038  
                                              _tx_buf 01D0  
                                    ?_fat_rename_file 0038  
                          __parse_command_long@length 009A  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0102  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 89F6  
                        __end_of_jump_to_main_program 8F88  
                               __end_of_fat_find_file 59AA  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 00B4  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 9C98  
                                 __end_of__i2c_open_1 8D94  
                          __size_of__find_nth_cluster 009E  
                   __fill_buffer_read_buffer@inBuffer 000D  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 7C10  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 7BB0  
                                              tblptru 000FF8  
                                    __end_of_spi_init 862E  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00C1  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 7BB0  
                             __spi_external_rx_buffer 0300  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0044  
                                       main@tx_buffer 00C3  
                         __end_of_fat_write_to_buffer 8CF6  
                               ?_fat_read_from_buffer 0007  
                               __end_of_ui_get_status 8FA0  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F6  
                          ??_APP_DeviceCustomHIDTasks 00B7  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0340  
                                   _SYSTEM_Initialize 80DE  
                               fat_modify_file@length 0046  
                               fat_modify_file@offset 0066  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 704C  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                        fat_resize_file@first_cluster 0064  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 8F06  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00A6  
                         __end_of__parse_command_long 5708  
                   __end_of_failed_line3_noNextRecord 9E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 788C  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 866A  
                    __size_of__parse_buffer_to_sector 0088  
                            _bootloader_get_file_size 8E40  
                 __size_of_ExternalFlash_CapacityRead 0012  
                           fat_read_from_buffer@start 0007  
                                       __end_of_sd000 9FD0  
                                       __end_of_sd001 9F1C  
                                       __end_of_sd002 9F4A  
                                       __end_of_sd003 9FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 8FB0  
                                        __pidataBANK1 8B60  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 004D  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8F4C  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8F42  
                           __get_available_root_entry 8BCE  
                                 fat_rename_file@cntr 005E  
                                 fat_rename_file@name 0038  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 01B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 12DC  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5F5C  
                                 _userInterfaceStatus 00E6  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 49E4  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                          flash_write_to_buffer@start 001F  
                           __end_of_i2c_set_frequency 8A22  
                       __size_of__display_programming 01D6  
                                   __end_of_i2c_reset 8EC4  
                             __end_of_system_delay_ms 8BAA  
                                  __size_of_api_parse 00D0  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0178  
                      __end_of_failed_line3_startCode 9CE9  
                               _communicationSettings 0139  
                                  _flash_sector_write 7FDC  
                                  _fat_read_from_file 4FE2  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 004F  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 0C2A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 086C  
                                        _failed_line1 9DA4  
                                        _failed_line2 9D0E  
                                        _failed_line4 9E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 0190  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 8132  
                                   __end_of__i2c_read 70DE  
                                   __end_of__i2c_send 8F82  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 65DA  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8F72  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 006E  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 00C5  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                               _flash_write_to_buffer 8C36  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 47D6  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 015A  
                                           ?_i2c_init 0001  
                      __parse_sector_to_buffer@sector 0055  
                    __fill_buffer_read_file@outBuffer 00A0  
                                    _mediaInformation 01AA  
                             __end_of_hexCharsToUint8 8D12  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                      __get_available_cluster@cluster 0030  
                       __end_of_fat_get_format_status 6878  
                     ??__fill_buffer_get_file_details 003C  
                                       __flash_wakeup 8088  
                            __fill_buffer_get_display 626A  
                             ?__get_available_cluster 002C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00D1  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4DEE  
               __end_of_APP_DeviceCustomHIDInitialize 87E6  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 87B2  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                        __size_of__parse_write_buffer 00A6  
                           __bootloader_check_address 59AA  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                           ??__parse_sector_to_buffer 0054  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2902  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 005C  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                            __size_of_fat_delete_file 0040  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 6E9A  
                                             ?_memset 0001  
                                          _device_dsc 9FA5  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                      __parse_buffer_to_sector@sector 0055  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8D7C  
                                    _USBCtrlEPService 652E  
                                             ?_ui_run 0001  
                                          _ep_data_in 016F  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                            __delete_root@file_number 002E  
                       fat_append_to_file@file_number 0097  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 38FE  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 44AC  
                             ?__write_value_to_offset 0001  
                                  _USBCheckStdRequest 51BC  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 9EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0056  
                              fat_append_to_file@data 0058  
                                          _flash_init 8D2E  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 5B58  
                                   __end_of__get_data 8AC8  
                                   __end_of__get_date 8F6A  
                                 _USBStdSetCfgHandler 529E  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 8F60  
                                   __end_of__get_root 3602  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 9D74  
                                          _done_line2 9E9F  
                                          _done_line3 9D64  
                                          _done_line4 9D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                              ??_fat_read_from_buffer 000D  
                     __end_of_bootloader_get_rec_data 8E06  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0176  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 7482  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 877E  
                                  __get_first_cluster 8276  
                                        __normal_mode 7C10  
                          __end_of_APP_DeviceMSDTasks 8E2E  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 8088  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 8E86  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0096  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 7574  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 74FC  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 9FB7  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                       flash_copy_page_to_buffer@page 001E  
                       fat_read_from_file@return_code 007D  
                                    _system_full_init 7C6E  
                                   __read_fat@cluster 0030  
                      __end_of__get_available_cluster 61A8  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0062  
                      __end_of_bootloader_get_entries 8F42  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5CFA  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 44AC  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 005A  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 8184  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
           __end_of__get_available_offset_from_buffer 7D24  
          __size_of__get_available_offset_from_buffer 005A  
                 ??__get_available_offset_from_buffer 0005  
                  ?__get_available_offset_from_buffer 0001  
                   __get_available_offset_from_buffer 7CCA  
                                   __end_of__spi_init 86DC  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 7382  
                                             __Lparam 0000  
                                  __parse_file_create 50D0  
                                _jump_to_main_program 8F82  
                            __size_of_fat_create_file 013E  
                                   __end_of_hid_rpt01 9F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4AEA  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 45BE  
                             ?_flash_read_from_buffer 0001  
                                  __parse_file_rename 77B0  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 76D0  
                                  __parse_file_resize 5708  
                                          _last_error 018C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0066  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0380  
                   __end_of__data_sector_from_cluster 8ED2  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 9E98  
                                             ___lldiv 7300  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 795C  
                                             ___lwdiv 8132  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 8530  
                                   _fast_read_cluster 00FB  
                                  __display_rebooting 7F30  
                         __end_of__parse_format_drive 8468  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0050  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 005A  
                                 ?__parse_file_create 0059  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 86A4  
                                             __pcinit 6FC2  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 9EE8  
                      __end_of__write_value_to_offset 881A  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3A74  
                                             __ptext1 48DE  
                                     __display_failed 12DC  
                                             __ptext2 8E76  
                                             __ptext3 8972  
                                             __ptext4 8BF2  
                                             __ptext5 8C14  
                                             __ptext6 8AC8  
                                             __ptext7 57EA  
                                             __ptext8 874A  
                                 ?__parse_file_modify 0056  
                                             __ptext9 8E86  
                                             _inPipes 00CB  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0060  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EE  
                                 ?__parse_file_resize 0055  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 8C9A  
                                ??__get_first_cluster 0032  
                             __read_value_from_offset 839A  
                             _fat_read_from_file_fast 24C0  
                                        ??_USBSuspend 0018  
                                     __display_search 3D4E  
                                  __end_of_USBMSDInit 4BEC  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 8EA6  
                                             _msd_cbw 000D40  
                                     __display_verify 4268  
                                             _msd_csw 000D80  
                            __fill_buffer_read_buffer 4EEC  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8EFC  
                            __offset_from_file_number 8B3A  
                                             _ui_init 8E06  
                                          ??_fat_init 0030  
                     __end_of__parse_sector_to_buffer 71F2  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8DF0  
                                  __end_of_USB_CD_Ptr 9EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0096  
                              ?_flash_write_to_buffer 001F  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 61A8  
                                 _flash_partial_write 7740  
                         ??_fat_copy_sector_to_buffer 0045  
                                end_of_initialization 704C  
                                ??__parse_file_delete 0052  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 7E84  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2EDE  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2CF0  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 005C  
                                ??__parse_file_create 005B  
                                  __end_of_USB_SD_Ptr 9E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 00E1  
                                ??__parse_file_modify 0058  
                           __end_of_MSDProcessCommand 45BE  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 004D  
                                ??__parse_file_resize 0057  
                                     _USB1msTickCount 0162  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 84AC  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
           __fill_buffer_get_file_details@file_number 003D  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                      __end_of_flash_read_from_buffer 8FB0  
                             __parse_buffer_to_sector 71F2  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 8944  
                             _USBCtrlEPAllowDataStage 6A62  
                                   __end_of_spi_tx_rx 6FC2  
                                   __end_of_spi_tx_tx 716A  
               __end_of__fill_buffer_get_file_details 765E  
              __size_of__fill_buffer_get_file_details 0072  
                       __fill_buffer_get_file_details 75EC  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
        __make_cluster_chain@different_sector_cluster 0040  
                __end_of_ExternalFlash_SectorSizeRead 8F24  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8F1A  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4CEE  
                                             utoa@val 000A  
                                           _MSD_State 00ED  
             __end_of__cluster_from_sector_and_offset 8B3A  
            __size_of__cluster_from_sector_and_offset 0026  
                   ??__cluster_from_sector_and_offset 0005  
                    ?__cluster_from_sector_and_offset 0001  
                     __cluster_from_sector_and_offset 8B14  
                         __end_of__bootloader_program 086C  
                               _system_encoder_enable 8E76  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C4  
                                       ??_api_prepare 0060  
                          _USBStatusStageEnabledFlag1 00F1  
                          _USBStatusStageEnabledFlag2 00F0  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                        __size_of__make_cluster_chain 02BE  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                      __end_of__flash_write_to_buffer 8276  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       __parse_file_modify@start_byte 005B  
                                   ??_fat_delete_file 004D  
                    __make_cluster_chain@next_cluster 004B  
                              fat_modify_file@cluster 0064  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                     __fill_buffer_find_file@inBuffer 0037  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0250  
                                  _BothEP0OutUOWNsSet 0191  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03C0  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7EDA  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 9DB4  
                                       _checked_line2 9C99  
                                       _checked_line3 9E73  
                                       _checked_line4 9D32  
                                 __delete_root@offset 002B  
                          ??_bootloader_get_file_size 0005  
                 __parse_write_buffer@number_of_bytes 0030  
                                 __delete_root@sector 0029  
                            _failed_line3_dataTooLong 9E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4CEE  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 63D2  
               __end_of_internalFlash_pageFromAddress 8D2E  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8D12  
                                __end_of_reboot_line1 9E4C  
                                __end_of_search_line1 9DF4  
                                __end_of_search_line2 9D54  
                                __end_of_search_line3 9CD6  
                                __end_of_search_line4 9E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 7B4E  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                  __make_cluster_chain@minimum_sector 003E  
                             __end_of__display_failed 15D2  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0062  
                  __find_nth_cluster@sector_in_buffer 003E  
                        fat_resize_file@new_file_size 004D  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 6D70  
                               ??_flash_partial_write 0028  
                        __write_value_to_offset@value 0005  
                       ??_bootloader_get_rec_checksum 0001  
                           _fat_copy_sector_to_buffer 63D2  
                      __bootloader_program@entry_page 0078  
                  fat_copy_sector_to_buffer@file_size 0049  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3EA0  
                               __end_of_USBDeviceInit 3FF0  
               __end_of_USBIncrement1msInternalTimers 8CBA  
              __size_of_USBIncrement1msInternalTimers 0020  
                       _USBIncrement1msInternalTimers 8C9A  
                                     ??__display_done 001F  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 4394  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0254  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 48DE  
                                 _i2c_eeprom_readByte 81D6  
                                   ??_fat_create_file 0055  
                 __bootloader_program@start_from_byte 00A4  
                  __fill_buffer_read_file@data_length 00AA  
                         __end_of_system_minimal_init 8DDA  
                            __size_of_fat_modify_file 023C  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 9CAE  
                                      __end_of_memcpy 7A28  
                                     _MSDRetryAttempt 00E9  
                                      __end_of_memset 89F6  
                                      __end_of_reboot 8D7C  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                          ?_flash_copy_page_to_buffer 001E  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0192  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 49E4  
                                      __end_of_spi_tx 7E84  
               __get_available_root_entry@file_number 0036  
                                 fat_modify_file@data 0048  
                                 __end_of__ui_encoder 58CA  
                           __flash_set_page_size@size 0018  
                         flash_write_to_buffer@length 0021  
                                 start_initialization 6FC2  
                                 fat_modify_file@root 006E  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                 __parse_write_buffer 672E  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 8EB6  
                                 __end_of_api_prepare 3D4E  
                   __end_of__get_available_root_entry 8BF2  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0098  
                                     _USBMSDOutHandle 00DF  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 6E9A  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1DCC  
                                 __flash_partial_read 7574  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 00E7  
                                      _hexCharToUint8 899E  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 5E94  
                            _fast_read_cluster_number 00F9  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 346C  
                            __end_of_USBCtrlEPService 65DA  
                          __size_of_MSDProcessCommand 0112  
                      ??_fat_write_sector_from_buffer 0045  
                                __system_encoder_init 866A  
                                           __i2c_read 7052  
                                           __i2c_send 8F7A  
                           ??__parse_buffer_to_sector 0054  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 8F6A  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                        __size_of_fat_write_to_buffer 001E  
                            ??__fill_buffer_find_file 003B  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 8FA6  
                          __flash_partial_read@length 0018  
                                ?__parse_write_buffer 002B  
                       __end_of_failed_line3_checksum 9E13  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 00E3  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 76D0  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 9D94  
                                   _programming_line2 9CFC  
                                   _programming_line3 9E83  
                                   _programming_line4 9D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                               spi_init@configuration 0004  
                       fat_append_to_file@return_code 0092  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 412E  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B3  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00E2  
                       __end_of_i2c_digipot_backlight 8AEE  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 8F7A  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0038  
                                  __end_of__i2c_write 8352  
                            __end_of_system_full_init 7CCA  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 00A2  
                      __end_of_USBStdGetStatusHandler 6684  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 00FE  
                            __fat_sector_from_cluster 8D94  
                         api_parse@receivedDataLength 009D  
                   __end_of__bootloader_check_address 5A84  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 8972  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 8944  
         fat_copy_sector_to_buffer@number_of_clusters 004D  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 9FCC  
            __get_available_offset_from_buffer@buffer 0003  
                       __end_of_MSDCheckForErrorCases 5544  
             __bootloader_program@address_within_page 007A  
                          fat_create_file@file_number 0064  
                              __end_of_hexCharToUint8 89CA  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0156  
            __get_available_offset_from_buffer@offset 0007  
                  __end_of_flash_command_pagesize_512 9FC8  
                          _flash_command_pagesize_512 9FC4  
                  __end_of_flash_command_pagesize_528 9FC4  
                          _flash_command_pagesize_528 9FC0  
                                      __flash_is_busy 8C58  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 7740  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 9E91  
                                           __get_data 8AA0  
                                           __get_date 8F60  
                                   _flash_sector_read 887E  
                    __bootloader_program@return_value 009C  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 83E0  
                     __end_of_fat_read_from_file_fast 26E6  
                                           __get_time 8F56  
                                           __get_root 346C  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
                                 __end_of__write_root 84AC  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 8714  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 8BCE  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 83E0  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 003D  
                                           __read_fat 8032  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 9DA4  
                           __end_of_programming_line2 9D0E  
                           __end_of_programming_line3 9E8A  
                           __end_of_programming_line4 9D94  
                    __end_of_ExternalFlash_SectorRead 887E  
                               ??__parse_write_buffer 002D  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8F56  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8F4C  
                  __get_available_cluster@skip_sector 002E  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 67D4  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 5C2A  
                           fat_create_file@root_entry 0065  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 5544  
                                  _APP_DeviceMSDTasks 8E1A  
                                       __pmediumconst 9C98  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 8FAA  
                                           __ptext101 6684  
                                           __ptext110 8DDA  
                                           __ptext102 3BE6  
                                           __ptext111 75EC  
                                           __ptext103 26E6  
                                           __ptext200 7CCA  
                                           __ptext120 8F94  
                                           __ptext112 626A  
                                           __ptext104 4FE2  
                                           __ptext201 8B14  
                                           __ptext121 69C0  
                                           __ptext113 8A4E  
                                           __ptext105 24C0  
                                           __ptext210 6480  
                                           __ptext202 2284  
                                           __ptext130 8AEE  
                                           __ptext122 5C2A  
                                           __ptext114 6B00  
                                           __ptext106 4EEC  
                                           __ptext211 8E64  
                                           __ptext203 7740  
                                           __ptext131 5B58  
                                           __ptext123 631E  
                                           __ptext115 2CF0  
                                           __ptext107 8CBA  
                                           __ptext220 839A  
                                           __ptext212 7DD4  
                                           __ptext204 8226  
                                           __ptext140 8F2E  
                                           __ptext132 4268  
                                           __ptext124 8B86  
                                           __ptext116 8F88  
                                           __ptext108 8FAE  
                                           __ptext221 8032  
                                           __ptext213 781E  
                                           __ptext205 70DE  
                                           __ptext141 8FA0  
                                           __ptext133 2B00  
                                           __ptext125 8D62  
                                           __ptext117 8F24  
                                           __ptext109 5544  
                                           __ptext230 8D94  
                                           __ptext222 88B0  
                                           __ptext214 7B4E  
                                           __ptext206 7D7C  
                                           __ptext150 8F4C  
                                           __ptext142 8F38  
                                           __ptext134 3D4E  
                                           __ptext126 8F9A  
                                           __ptext118 8DF0  
                                           __ptext231 8DAC  
                                           __ptext223 46CC  
                                           __ptext215 8276  
                                           __ptext207 74FC  
                                           __ptext151 6020  
                                           __ptext143 0C2A  
                                           __ptext135 7F30  
                                           __ptext127 788C  
                                           __ptext119 8F8E  
                                           __ptext232 8EC4  
                                           __ptext224 7574  
                                           __ptext216 8A22  
                                           __ptext208 765E  
                                           __ptext160 8F6A  
                                           __ptext152 84EE  
                                           __ptext144 795C  
                                           __ptext136 3296  
                                           __ptext128 7EDA  
                                           __ptext233 4BEC  
                                           __ptext225 8C58  
                                           __ptext217 8B3A  
                                           __ptext209 71F2  
                                           __ptext161 8F72  
                                           __ptext153 691C  
                                           __ptext145 7300  
                                           __ptext137 2EDE  
                                           __ptext129 8BAA  
                                           __ptext234 0000  
                                           __ptext226 8088  
                                           __ptext218 6B9E  
                                           __ptext170 8424  
                                           __ptext162 8F7A  
                                           __ptext154 8530  
                                           __ptext146 38FE  
                                           __ptext138 8E40  
                                           __ptext227 7E2C  
                                           __ptext219 887E  
                                           __ptext171 2902  
                                           __ptext163 5626  
                                           __ptext155 8132  
                                           __ptext147 8F42  
                                           __ptext139 12DC  
                                           __ptext228 88E2  
                                           __ptext180 45BE  
                                           __ptext172 346C  
                                           __ptext164 672E  
                                           __ptext156 8572  
                                           __ptext148 82C2  
                                           __ptext229 6F2E  
                                           __ptext181 8184  
                                           __ptext173 5CFA  
                                           __ptext165 8CD8  
                                           __ptext157 89F6  
                                           __ptext149 3782  
                                           __ptext190 8F60  
                                           __ptext182 85B2  
                                           __ptext174 1DCC  
                                           __ptext166 8C36  
                                           __ptext158 830A  
                                           __ptext191 8BCE  
                                           __ptext183 8352  
                                           __ptext175 7F86  
                                           __ptext167 716A  
                                           __ptext159 7D24  
                                           __ptext192 7382  
                                           __ptext184 50D0  
                                           __ptext176 8AA0  
                                           __ptext168 63D2  
                                           __ptext193 6E9A  
                                           __ptext185 3FF0  
                                           __ptext177 5708  
                                           __ptext169 8E52  
                                           __ptext194 4DEE  
                                           __ptext186 79C2  
                                           __ptext178 77B0  
                                           __ptext195 8468  
                                           __ptext187 58CA  
                                           __ptext179 6CD8  
                                           __ptext196 15D2  
                                           __ptext188 61A8  
                                           __ptext197 7FDC  
                                           __ptext189 8F56  
                                           __ptext198 87E6  
                                           __ptext199 60E4  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 0056  
                                            ?___lwdiv 0001  
                                           __spi_init 86A4  
                          ??__fill_buffer_read_buffer 0011  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                         __size_of_fat_read_from_file 00EE  
                                    ?__display_search 0001  
                                           _hid_rpt01 9F6E  
                                         __ui_encoder 57EA  
                           __get_first_cluster@offset 0034  
                                           _idle_rate 01B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0032  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3BE6  
                             __parse_file_delete@data 0050  
                           fat_modify_file@start_byte 0042  
                     __end_of__parse_buffer_to_sector 727A  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014E  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 004D  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0051  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4BEC  
                          __make_cluster_chain@offset 0049  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                          __make_cluster_chain@sector 0045  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 47D6  
                             ??_flash_write_to_buffer 0025  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 631E  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0076  
                              __end_of__flash_is_busy 8C7A  
                                       _fat_find_file 58CA  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 007E  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C2A  
                                   __display_itoa_u16 6020  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 795C  
                                   ??_fat_modify_file 004A  
                           __end_of_flash_sector_read 88B0  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 9DE4  
                                 __end_of_found_line2 9CFC  
                                 __end_of_found_line3 9E9F  
                                 __end_of_found_line4 9D32  
                                         _ep_data_out 016C  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8F2E  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 8C36  
                       _bootloader_get_rec_dataLength 8F24  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00EA  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 82C2  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
              __cluster_from_sector_and_offset@offset 0003  
                       __size_of_fat_read_from_buffer 001E  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2EDE  
                    __end_of_bootloader_get_file_size 8E52  
                                         _file_buffer 0290  
              __cluster_from_sector_and_offset@sector 0001  
                                     _config_internal 0169  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 8F9A  
                                     _config_external 0166  
                                      __display_start 2B00  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                 __make_cluster_chain 15D2  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 8A78  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 5462  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 003C  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                            ?__parse_sector_to_buffer 0052  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0094  
                            __fat_offset_from_cluster 8DAC  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 0038  
                   __bootloader_verify_file@address32 009B  
                          __end_of_internalFlash_read 874A  
                                          ?_api_parse 009B  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 005A  
                                            _MSDTasks 2030  
                          _USBDeferINDataStagePackets 00EF  
                                        ??_fat_format 0025  
                                     _fat_delete_file 85B2  
                                _active_configuration 018A  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0059  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6E06  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 6F2E  
                                           _spi_tx_tx 70DE  
                                __display_verify@cntr 0021  
                                ?__make_cluster_chain 0036  
                     __make_cluster_chain@next_offset 003C  
                    flash_write_page_from_buffer@page 001E  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00DD  
                 __size_of_spi_get_external_tx_buffer 000A  
                               flash_sector_read@data 002A  
                                __display_programming 3296  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 004C  
                           __end_of__display_itoa_u16 60E4  
                           __end_of__display_itoa_u32 0F98  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 9DD4  
                                __end_of_verify_line2 9E59  
                                __end_of_verify_line3 9E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                            fat_rename_file@extension 003A  
                  __size_of_fat_copy_sector_to_buffer 00AE  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F5  
                   __end_of_ExternalFlash_MediaDetect 8FAE  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 9E3F  
                                        _search_line1 9DE4  
                                        _search_line2 9D43  
                                        _search_line3 9CC2  
                                        _search_line4 9E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 006A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 631E  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 8468  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 830A  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 8FA0  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 30BC  
                             __end_of_USBStallHandler 8424  
                            __sector_from_file_number 8A22  
                      __end_of_internalFlash_readPage 84EE  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2CF0  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6FD6  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0051  
                            __size_of_system_delay_ms 0024  
                __fill_buffer_read_buffer@data_length 0015  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 5380  
                         __size_of__parse_file_delete 0052  
                                  __end_of_fat_format 2B00  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 8ED2  
                  __parse_file_modify@number_of_bytes 0059  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00EB  
                         __size_of__parse_file_rename 006E  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                      __parse_write_buffer@start_byte 002E  
                                  __end_of_device_dsc 9FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 8F06  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 3FF0  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0072  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 005C  
                         __end_of_bootloader_filename 9FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 8D48  
                                      _TransferLength 00DB  
                                _bootloader_extension 9FC8  
                           fat_write_to_buffer@length 0027  
                          __end_of_USBCheckMSDRequest 6020  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 884C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 9D84  
                                  __end_of_done_line2 9EA5  
                                  __end_of_done_line3 9D74  
                                  __end_of_done_line4 9D64  
                                      __i2c_wait_idle 7D24  
                                     _MSDWriteHandler 1890  
                        fat_create_file@first_cluster 0062  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                               ??__make_cluster_chain 003A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 018E  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 8E96  
                                         _found_line1 9DD4  
                                         _found_line2 9CE9  
                                         _found_line3 9E98  
                                         _found_line4 9D20  
                                            __get_fat 7F86  
                                            __get_fbr 1DCC  
                                            __get_mbr 5CFA  
                                __size_of__i2c_open_1 0018  
                         ??_flash_copy_page_to_buffer 0020  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 8E40  
                          _ExternalFlash_CapacityRead 8E2E  
                                 _fat_write_to_buffer 8CD8  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 69C0  
                        __size_of__bootloader_program 03D0  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 8E96  
                    __get_first_cluster@first_cluster 0036  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                   __end_of_fat_copy_sector_to_buffer 6480  
                          __size_of_flash_sector_read 0032  
                                    __display_checked 3782  
               __end_of_bootloader_get_rec_recordType 8F8E  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 8F88  
                            ??__get_available_cluster 0030  
                                            __ptext10 8EB6  
                                            __ptext11 8DC4  
                                            __ptext20 8E96  
                                            __ptext12 8ED2  
                                            __ptext21 67D4  
                                            __ptext13 8D7C  
                                            __ptext30 0020  
                                            __ptext22 8C7A  
                                            __ptext14 7C6E  
                                            __ptext31 8CF6  
                                            __ptext23 866A  
                                            __ptext15 8E06  
                            fat_read_from_buffer@data 000B  
                                            __ptext40 8A78  
                                            __ptext32 76D0  
                                            __ptext24 8EDE  
                                            __ptext16 8D2E  
                                            __ptext41 7BB0  
                                            __ptext33 899E  
                                            __ptext25 8EE8  
                                            __ptext17 85F2  
                                            __ptext50 8F10  
                                            __ptext42 8944  
                                            __ptext34 7404  
                                            __ptext26 8F82  
                                            __ptext18 86A4  
                                            __ptext51 3602  
                                            __ptext43 59AA  
                                            __ptext35 84AC  
                                            __ptext27 7A28  
                                            __ptext19 7482  
                                            __ptext60 6A62  
                                            __ptext52 86DC  
                                            __ptext44 6878  
                                            __ptext36 8714  
                                            __ptext28 0F98  
                                            __ptext61 51BC  
                                            __ptext53 8914  
                                            __ptext45 7C10  
                                            __ptext37 8D12  
                                            __ptext29 049C  
                                            __ptext70 80DE  
                                            __ptext62 529E  
                                            __ptext54 83E0  
                                            __ptext46 81D6  
                                            __ptext38 8EF2  
                                            __ptext71 7E84  
                                            __ptext63 89CA  
                                            __ptext55 8C9A  
                                            __ptext47 7052  
                                            __ptext39 877E  
                                            __ptext80 5E94  
                                            __ptext72 8EA6  
                                            __ptext64 65DA  
                                            __ptext56 3EA0  
                                            __ptext48 8EFC  
                                            __ptext81 5A84  
                                            __ptext73 4AEA  
                                            __ptext65 412E  
                                            __ptext57 652E  
                                            __ptext49 8F06  
                                            __ptext90 30BC  
                                            __ptext82 8E1A  
                                            __ptext74 87B2  
                                            __ptext66 1B48  
                                            __ptext58 6D70  
                                            __ptext91 5462  
                                            __ptext83 2030  
                                            __ptext75 862E  
                                            __ptext67 727A  
                                            __ptext59 4CEE  
                                            __ptext92 49E4  
                                            __ptext84 44AC  
                                            __ptext76 6E06  
                                            __ptext68 5F5C  
                                            __ptext93 47D6  
                                            __ptext85 7A8A  
                                            __ptext77 78F6  
                                            __ptext69 5380  
                                            __ptext94 7AEC  
                                            __ptext86 086C  
                                            __ptext78 4394  
                                            __ptext95 884C  
                                            __ptext87 1890  
                                            __ptext79 5DC8  
                                            __ptext96 6C3C  
                                            __ptext88 8FA6  
                                            __ptext97 8F1A  
                                            __ptext89 881A  
                                            __ptext98 8E2E  
                                            __ptext99 8D48  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 7AEC  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 7A8A  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                    fat_copy_sector_to_buffer@cluster 0050  
                           flash_write_to_buffer@data 0023  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                __end_of_flash_write_page_from_buffer 8E76  
               __size_of_flash_write_page_from_buffer 0012  
                        _flash_write_page_from_buffer 8E64  
                             __size_of_bootloader_run 0062  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 5626  
                   __end_of_failed_line3_addressRange 9CC2  
                          ?_ExternalFlash_SectorWrite 0025  
               fat_write_sector_from_buffer@file_size 0049  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 00A0  
                      __size_of__bootloader_find_file 00A4  
                  __end_of__flash_copy_page_to_buffer 7DD4  
                          __flash_copy_page_to_buffer 7D7C  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 672E  
                       __end_of__bootloader_find_file 691C  
                        __end_of_i2c_digipot_reset_on 8C14  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 80DE  
                      __end_of_USBCtrlTrfSetupHandler 6E06  
                                       __size_of_main 0172  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 9F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 85F2  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 26E6  
                         __end_of_flash_partial_write 77B0  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                                ?_fat_write_to_buffer 0025  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 0066  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 839A  
                    __size_of__bootloader_verify_file 0344  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 8F94  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 8F8E  
                      __fill_buffer_read_buffer@start 0013  
                                 _USBCtrlTrfInHandler 5E94  
                  _MSDProcessCommandMediaPresent$2390 003C  
                            ??__write_value_to_offset 0007  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 009E  
                              __end_of__i2c_wait_idle 7D7C  
               fat_resize_file@old_number_of_clusters 0060  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 85F2  
                    __end_of__fill_buffer_read_buffer 4FE2  
                                _USBCtrlTrfOutHandler 78F6  
                    __end_of__offset_from_file_number 8B60  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 5DC8  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 8EF2  
                                ?__parse_command_long 0098  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
              __make_cluster_chain@remaining_clusters 0043  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3A74  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00F2  
                  __end_of_spi_get_external_rx_buffer 8EF2  
                          _spi_get_external_rx_buffer 8EE8  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 5626  
                             __parse_file_modify@data 0056  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 8AA0  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 8A78  
                             _internalFlash_erasePage 877E  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8EE8  
                          _spi_get_external_tx_buffer 8EDE  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 007B  
                __end_of_MSDComputeDeviceInAndResidue 6CD8  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 6C3C  
                          fat_modify_file@return_code 0063  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 9E04  
                                 __end_of_start_line2 9E6B  
                                 __end_of_start_line3 9EA8  
                                 __end_of_start_line4 9E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                          fat_rename_file@return_code 003C  
                                       _flash_is_busy 8DDA  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8F10  
                              bootloader_run@timeslot 005C  
                             __end_of_fat_create_file 412E  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                            ??_flash_read_from_buffer 0007  
                         __size_of__root_is_available 0062  
                             __parse_file_rename@data 0060  
                              __size_of_USBDeviceInit 0150  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 7300  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 727A  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 884C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7E2C  
              __size_of__flash_write_page_from_buffer 0058  
                       ?_flash_write_page_from_buffer 001E  
                       __flash_write_page_from_buffer 7DD4  
                 fat_write_sector_from_buffer@cluster 0050  
                           _flash_copy_page_to_buffer 8E52  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               ??_fat_write_to_buffer 002B  
                        fat_read_from_file@start_byte 006E  
                                     _display_content 0200  
                     fat_copy_sector_to_buffer@sector 0043  
      fat_write_sector_from_buffer@number_of_clusters 004D  
                          __end_of_flash_partial_read 88E2  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1B48  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                             __write_root@file_number 002F  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 8F9A  
                         _bootloader_get_rec_checksum 8F94  
                        __parse_sector_to_buffer@data 0052  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@root 0067  
                        __bootloader_verify_file@root 0076  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                        __parse_buffer_to_sector@data 0052  
                                     _display_prepare 5B58  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 9E04  
                                 _USBCtrlTrfRxService 4394  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 86DC  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 8BAA  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1B48  
                                     _fat_modify_file 2284  
                        __fill_buffer_read_file@start 00AE  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5A84  
                                        ?_api_prepare 00B2  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                __end_of_fat_write_sector_from_buffer 652E  
               __size_of_fat_write_sector_from_buffer 00AE  
                        _fat_write_sector_from_buffer 6480  
                                     _gblMediaPresent 0182  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 8AC8  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 9E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8F38  
                          _bootloader_get_rec_address 8F2E  
                               _USBAlternateInterface 01AF  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 8226  
                          __delete_root@deleted_value 002D  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0186  
                    __make_cluster_chain@data_changed 0042  
                             __parse_file_resize@data 0055  
                           _failed_line3_noNextRecord 9E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 6CD8  
                      __size_of_flash_write_to_buffer 0022  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F4  
                                      _display_update 788C  
                       __end_of_flash_write_to_buffer 8C58  
                                      ??__normal_mode 0019  
                 __get_available_cluster@first_sector 002C  
                                      ?_flash_is_busy 0001  
                     __size_of__get_available_cluster 00C4  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 9CD6  
                            ?__parse_buffer_to_sector 0052  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 5462  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 8B14  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0184  
                             _internalFlash_writePage 7404  
                         __end_of__parse_write_buffer 67D4  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4AEA  
                        _USBStatusStageTimeoutCounter 00F3  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 75EC  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 85B2  
                                        _verify_line1 9DC4  
                                        _verify_line2 9E4C  
                                        _verify_line3 9E8A  
                                 __parse_format_drive 8424  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 9EA5  
                                         _power_state 00E5  
                                         _USBInHandle 017E  
                            _APP_DeviceCustomHIDTasks 6684  
                          __end_of_flash_sector_write 8032  
