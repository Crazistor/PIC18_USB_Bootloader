

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Tue Sep 25 23:48:24 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    10                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    17                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    19                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    20                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    21                           	psect	text0,global,reloc=2,class=CODE,delta=1
    22                           	psect	text1,global,reloc=2,class=CODE,delta=1
    23                           	psect	text2,global,reloc=2,class=CODE,delta=1
    24                           	psect	text3,global,reloc=2,class=CODE,delta=1
    25                           	psect	text4,global,reloc=2,class=CODE,delta=1
    26                           	psect	text5,global,reloc=2,class=CODE,delta=1
    27                           	psect	text6,global,reloc=2,class=CODE,delta=1
    28                           	psect	text7,global,reloc=2,class=CODE,delta=1
    29                           	psect	text8,global,reloc=2,class=CODE,delta=1
    30                           	psect	text9,global,reloc=2,class=CODE,delta=1
    31                           	psect	text10,global,reloc=2,class=CODE,delta=1
    32                           	psect	text11,global,reloc=2,class=CODE,delta=1
    33                           	psect	text12,global,reloc=2,class=CODE,delta=1
    34                           	psect	text13,global,reloc=2,class=CODE,delta=1
    35                           	psect	text14,global,reloc=2,class=CODE,delta=1
    36                           	psect	text15,global,reloc=2,class=CODE,delta=1
    37                           	psect	text16,global,reloc=2,class=CODE,delta=1
    38                           	psect	text17,global,reloc=2,class=CODE,delta=1
    39                           	psect	text18,global,reloc=2,class=CODE,delta=1
    40                           	psect	text19,global,reloc=2,class=CODE,delta=1
    41                           	psect	text20,global,reloc=2,class=CODE,delta=1
    42                           	psect	text21,global,reloc=2,class=CODE,delta=1
    43                           	psect	text22,global,reloc=2,class=CODE,delta=1
    44                           	psect	text23,global,reloc=2,class=CODE,delta=1
    45                           	psect	text24,global,reloc=2,class=CODE,delta=1
    46                           	psect	text25,global,reloc=2,class=CODE,delta=1
    47                           	psect	text26,global,reloc=2,class=CODE,delta=1
    48                           	psect	text27,global,reloc=2,class=CODE,delta=1
    49                           	psect	text28,global,reloc=2,class=CODE,delta=1
    50                           	psect	text29,global,reloc=2,class=CODE,delta=1
    51                           	psect	text30,global,reloc=2,class=CODE,delta=1
    52                           	psect	text31,global,reloc=2,class=CODE,delta=1
    53                           	psect	text32,global,reloc=2,class=CODE,delta=1
    54                           	psect	text33,global,reloc=2,class=CODE,delta=1
    55                           	psect	text34,global,reloc=2,class=CODE,delta=1
    56                           	psect	text35,global,reloc=2,class=CODE,delta=1
    57                           	psect	text36,global,reloc=2,class=CODE,delta=1
    58                           	psect	text37,global,reloc=2,class=CODE,delta=1
    59                           	psect	text38,global,reloc=2,class=CODE,delta=1
    60                           	psect	text39,global,reloc=2,class=CODE,delta=1
    61                           	psect	text40,global,reloc=2,class=CODE,delta=1
    62                           	psect	text41,global,reloc=2,class=CODE,delta=1
    63                           	psect	text42,global,reloc=2,class=CODE,delta=1
    64                           	psect	text43,global,reloc=2,class=CODE,delta=1
    65                           	psect	text44,global,reloc=2,class=CODE,delta=1
    66                           	psect	text45,global,reloc=2,class=CODE,delta=1
    67                           	psect	text46,global,reloc=2,class=CODE,delta=1
    68                           	psect	text47,global,reloc=2,class=CODE,delta=1
    69                           	psect	text48,global,reloc=2,class=CODE,delta=1
    70                           	psect	text49,global,reloc=2,class=CODE,delta=1
    71                           	psect	text50,global,reloc=2,class=CODE,delta=1
    72                           	psect	text51,global,reloc=2,class=CODE,delta=1
    73                           	psect	text52,global,reloc=2,class=CODE,delta=1
    74                           	psect	text53,global,reloc=2,class=CODE,delta=1
    75                           	psect	text54,global,reloc=2,class=CODE,delta=1
    76                           	psect	text55,global,reloc=2,class=CODE,delta=1
    77                           	psect	text56,global,reloc=2,class=CODE,delta=1
    78                           	psect	text57,global,reloc=2,class=CODE,delta=1
    79                           	psect	text58,global,reloc=2,class=CODE,delta=1
    80                           	psect	text59,global,reloc=2,class=CODE,delta=1
    81                           	psect	text60,global,reloc=2,class=CODE,delta=1
    82                           	psect	text61,global,reloc=2,class=CODE,delta=1
    83                           	psect	text62,global,reloc=2,class=CODE,delta=1
    84                           	psect	text63,global,reloc=2,class=CODE,delta=1,group=2
    85                           	psect	text64,global,reloc=2,class=CODE,delta=1
    86                           	psect	text65,global,reloc=2,class=CODE,delta=1
    87                           	psect	text66,global,reloc=2,class=CODE,delta=1
    88                           	psect	text67,global,reloc=2,class=CODE,delta=1
    89                           	psect	text68,global,reloc=2,class=CODE,delta=1
    90                           	psect	text69,global,reloc=2,class=CODE,delta=1
    91                           	psect	text70,global,reloc=2,class=CODE,delta=1
    92                           	psect	text71,global,reloc=2,class=CODE,delta=1
    93                           	psect	text72,global,reloc=2,class=CODE,delta=1
    94                           	psect	text73,global,reloc=2,class=CODE,delta=1
    95                           	psect	text74,global,reloc=2,class=CODE,delta=1
    96                           	psect	text75,global,reloc=2,class=CODE,delta=1
    97                           	psect	text76,global,reloc=2,class=CODE,delta=1
    98                           	psect	text77,global,reloc=2,class=CODE,delta=1
    99                           	psect	text78,global,reloc=2,class=CODE,delta=1
   100                           	psect	text79,global,reloc=2,class=CODE,delta=1
   101                           	psect	text80,global,reloc=2,class=CODE,delta=1
   102                           	psect	text81,global,reloc=2,class=CODE,delta=1
   103                           	psect	text82,global,reloc=2,class=CODE,delta=1
   104                           	psect	text83,global,reloc=2,class=CODE,delta=1
   105                           	psect	text84,global,reloc=2,class=CODE,delta=1
   106                           	psect	text85,global,reloc=2,class=CODE,delta=1
   107                           	psect	text86,global,reloc=2,class=CODE,delta=1
   108                           	psect	text87,global,reloc=2,class=CODE,delta=1
   109                           	psect	text88,global,reloc=2,class=CODE,delta=1
   110                           	psect	text89,global,reloc=2,class=CODE,delta=1
   111                           	psect	text90,global,reloc=2,class=CODE,delta=1
   112                           	psect	text91,global,reloc=2,class=CODE,delta=1
   113                           	psect	text92,global,reloc=2,class=CODE,delta=1
   114                           	psect	text93,global,reloc=2,class=CODE,delta=1
   115                           	psect	text94,global,reloc=2,class=CODE,delta=1
   116                           	psect	text95,global,reloc=2,class=CODE,delta=1
   117                           	psect	text96,global,reloc=2,class=CODE,delta=1
   118                           	psect	text97,global,reloc=2,class=CODE,delta=1
   119                           	psect	text98,global,reloc=2,class=CODE,delta=1
   120                           	psect	text99,global,reloc=2,class=CODE,delta=1
   121                           	psect	text100,global,reloc=2,class=CODE,delta=1
   122                           	psect	text101,global,reloc=2,class=CODE,delta=1
   123                           	psect	text102,global,reloc=2,class=CODE,delta=1
   124                           	psect	text103,global,reloc=2,class=CODE,delta=1
   125                           	psect	text104,global,reloc=2,class=CODE,delta=1
   126                           	psect	text105,global,reloc=2,class=CODE,delta=1
   127                           	psect	text106,global,reloc=2,class=CODE,delta=1
   128                           	psect	text107,global,reloc=2,class=CODE,delta=1
   129                           	psect	text108,global,reloc=2,class=CODE,delta=1
   130                           	psect	text109,global,reloc=2,class=CODE,delta=1
   131                           	psect	text110,global,reloc=2,class=CODE,delta=1
   132                           	psect	text111,global,reloc=2,class=CODE,delta=1
   133                           	psect	text112,global,reloc=2,class=CODE,delta=1
   134                           	psect	text113,global,reloc=2,class=CODE,delta=1
   135                           	psect	text114,global,reloc=2,class=CODE,delta=1
   136                           	psect	text115,global,reloc=2,class=CODE,delta=1
   137                           	psect	text116,global,reloc=2,class=CODE,delta=1
   138                           	psect	text117,global,reloc=2,class=CODE,delta=1
   139                           	psect	text118,global,reloc=2,class=CODE,delta=1
   140                           	psect	text119,global,reloc=2,class=CODE,delta=1
   141                           	psect	text120,global,reloc=2,class=CODE,delta=1
   142                           	psect	text121,global,reloc=2,class=CODE,delta=1
   143                           	psect	text122,global,reloc=2,class=CODE,delta=1
   144                           	psect	text123,global,reloc=2,class=CODE,delta=1
   145                           	psect	text124,global,reloc=2,class=CODE,delta=1
   146                           	psect	text125,global,reloc=2,class=CODE,delta=1
   147                           	psect	text126,global,reloc=2,class=CODE,delta=1
   148                           	psect	text127,global,reloc=2,class=CODE,delta=1
   149                           	psect	text128,global,reloc=2,class=CODE,delta=1
   150                           	psect	text129,global,reloc=2,class=CODE,delta=1
   151                           	psect	text130,global,reloc=2,class=CODE,delta=1
   152                           	psect	text131,global,reloc=2,class=CODE,delta=1
   153                           	psect	text132,global,reloc=2,class=CODE,delta=1
   154                           	psect	text133,global,reloc=2,class=CODE,delta=1
   155                           	psect	text134,global,reloc=2,class=CODE,delta=1
   156                           	psect	text135,global,reloc=2,class=CODE,delta=1
   157                           	psect	text136,global,reloc=2,class=CODE,delta=1
   158                           	psect	text137,global,reloc=2,class=CODE,delta=1
   159                           	psect	text138,global,reloc=2,class=CODE,delta=1
   160                           	psect	text139,global,reloc=2,class=CODE,delta=1
   161                           	psect	text140,global,reloc=2,class=CODE,delta=1
   162                           	psect	text141,global,reloc=2,class=CODE,delta=1
   163                           	psect	text142,global,reloc=2,class=CODE,delta=1
   164                           	psect	text143,global,reloc=2,class=CODE,delta=1
   165                           	psect	text144,global,reloc=2,class=CODE,delta=1
   166                           	psect	text145,global,reloc=2,class=CODE,delta=1,group=1
   167                           	psect	text146,global,reloc=2,class=CODE,delta=1,group=1
   168                           	psect	text147,global,reloc=2,class=CODE,delta=1
   169                           	psect	text148,global,reloc=2,class=CODE,delta=1
   170                           	psect	text149,global,reloc=2,class=CODE,delta=1
   171                           	psect	text150,global,reloc=2,class=CODE,delta=1
   172                           	psect	text151,global,reloc=2,class=CODE,delta=1
   173                           	psect	text152,global,reloc=2,class=CODE,delta=1
   174                           	psect	text153,global,reloc=2,class=CODE,delta=1,group=2
   175                           	psect	text154,global,reloc=2,class=CODE,delta=1,group=2
   176                           	psect	text155,global,reloc=2,class=CODE,delta=1,group=1
   177                           	psect	text156,global,reloc=2,class=CODE,delta=1,group=1
   178                           	psect	text157,global,reloc=2,class=CODE,delta=1
   179                           	psect	text158,global,reloc=2,class=CODE,delta=1
   180                           	psect	text159,global,reloc=2,class=CODE,delta=1
   181                           	psect	text160,global,reloc=2,class=CODE,delta=1
   182                           	psect	text161,global,reloc=2,class=CODE,delta=1
   183                           	psect	text162,global,reloc=2,class=CODE,delta=1
   184                           	psect	text163,global,reloc=2,class=CODE,delta=1
   185                           	psect	text164,global,reloc=2,class=CODE,delta=1
   186                           	psect	text165,global,reloc=2,class=CODE,delta=1
   187                           	psect	text166,global,reloc=2,class=CODE,delta=1
   188                           	psect	text167,global,reloc=2,class=CODE,delta=1
   189                           	psect	text168,global,reloc=2,class=CODE,delta=1
   190                           	psect	text169,global,reloc=2,class=CODE,delta=1
   191                           	psect	text170,global,reloc=2,class=CODE,delta=1
   192                           	psect	text171,global,reloc=2,class=CODE,delta=1
   193                           	psect	text172,global,reloc=2,class=CODE,delta=1
   194                           	psect	text173,global,reloc=2,class=CODE,delta=1
   195                           	psect	text174,global,reloc=2,class=CODE,delta=1
   196                           	psect	text175,global,reloc=2,class=CODE,delta=1
   197                           	psect	text176,global,reloc=2,class=CODE,delta=1
   198                           	psect	text177,global,reloc=2,class=CODE,delta=1
   199                           	psect	text178,global,reloc=2,class=CODE,delta=1
   200                           	psect	text179,global,reloc=2,class=CODE,delta=1
   201                           	psect	text180,global,reloc=2,class=CODE,delta=1
   202                           	psect	text181,global,reloc=2,class=CODE,delta=1
   203                           	psect	text182,global,reloc=2,class=CODE,delta=1
   204                           	psect	text183,global,reloc=2,class=CODE,delta=1
   205                           	psect	text184,global,reloc=2,class=CODE,delta=1
   206                           	psect	text185,global,reloc=2,class=CODE,delta=1
   207                           	psect	text186,global,reloc=2,class=CODE,delta=1
   208                           	psect	text187,global,reloc=2,class=CODE,delta=1,group=2
   209                           	psect	text188,global,reloc=2,class=CODE,delta=1
   210                           	psect	text189,global,reloc=2,class=CODE,delta=1,group=2
   211                           	psect	text190,global,reloc=2,class=CODE,delta=1
   212                           	psect	text191,global,reloc=2,class=CODE,delta=1
   213                           	psect	text192,global,reloc=2,class=CODE,delta=1
   214                           	psect	text193,global,reloc=2,class=CODE,delta=1
   215                           	psect	text194,global,reloc=2,class=CODE,delta=1
   216                           	psect	text195,global,reloc=2,class=CODE,delta=1
   217                           	psect	text196,global,reloc=2,class=CODE,delta=1
   218                           	psect	text197,global,reloc=2,class=CODE,delta=1
   219                           	psect	text198,global,reloc=2,class=CODE,delta=1
   220                           	psect	text199,global,reloc=2,class=CODE,delta=1
   221                           	psect	text200,global,reloc=2,class=CODE,delta=1
   222                           	psect	text201,global,reloc=2,class=CODE,delta=1
   223                           	psect	text202,global,reloc=2,class=CODE,delta=1
   224                           	psect	text203,global,reloc=2,class=CODE,delta=1
   225                           	psect	text204,global,reloc=2,class=CODE,delta=1
   226                           	psect	text205,global,reloc=2,class=CODE,delta=1
   227                           	psect	text206,global,reloc=2,class=CODE,delta=1
   228                           	psect	text207,global,reloc=2,class=CODE,delta=1
   229                           	psect	text208,global,reloc=2,class=CODE,delta=1
   230                           	psect	text209,global,reloc=2,class=CODE,delta=1
   231                           	psect	text210,global,reloc=2,class=CODE,delta=1
   232                           	psect	text211,global,reloc=2,class=CODE,delta=1
   233                           	psect	text212,global,reloc=2,class=CODE,delta=1
   234                           	psect	text213,global,reloc=2,class=CODE,delta=1
   235                           	psect	text214,global,reloc=2,class=CODE,delta=1
   236                           	psect	text215,global,reloc=2,class=CODE,delta=1
   237                           	psect	text216,global,reloc=2,class=CODE,delta=1
   238                           	psect	text217,global,reloc=2,class=CODE,delta=1
   239                           	psect	text218,global,reloc=2,class=CODE,delta=1
   240                           	psect	text219,global,reloc=2,class=CODE,delta=1
   241                           	psect	text220,global,reloc=2,class=CODE,delta=1
   242                           	psect	text221,global,reloc=2,class=CODE,delta=1
   243                           	psect	text222,global,reloc=2,class=CODE,delta=1
   244                           	psect	text223,global,reloc=2,class=CODE,delta=1
   245                           	psect	text224,global,reloc=2,class=CODE,delta=1
   246                           	psect	text225,global,reloc=2,class=CODE,delta=1
   247                           	psect	text226,global,reloc=2,class=CODE,delta=1
   248                           	psect	text227,global,reloc=2,class=CODE,delta=1
   249                           	psect	text228,global,reloc=2,class=CODE,delta=1
   250                           	psect	text229,global,reloc=2,class=CODE,delta=1
   251                           	psect	text230,global,reloc=2,class=CODE,delta=1
   252                           	psect	text231,global,reloc=2,class=CODE,delta=1
   253                           	psect	text232,global,reloc=2,class=CODE,delta=1
   254                           	psect	text233,global,reloc=2,class=CODE,delta=1
   255                           	psect	text234,global,reloc=2,class=CODE,delta=1
   256                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   257                           	psect	text235,global,reloc=2,class=CODE,delta=1
   258                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   259                           	dabs	1,0x600,512,_msd_buffer
   260                           	dabs	1,0xD00,48,_BDT
   261                           	dabs	1,0xD40,31,_msd_cbw
   262                           	dabs	1,0xD80,13,_msd_csw
   263                           	dabs	1,0xD38,8,_CtrlTrfData
   264                           	dabs	1,0xD30,8,_SetupPkt
   265  0000                     
   266                           ; Version 2.00
   267                           ; Generated 27/05/2018 GMT
   268                           ; 
   269                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   270                           ; All rights reserved.
   271                           ; 
   272                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   273                           ; 
   274                           ; Redistribution and use in source and binary forms, with or without modification, are
   275                           ; permitted provided that the following conditions are met:
   276                           ; 
   277                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   278                           ;        conditions and the following disclaimer.
   279                           ; 
   280                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   281                           ;        of conditions and the following disclaimer in the documentation and/or other
   282                           ;        materials provided with the distribution.
   283                           ; 
   284                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   285                           ;        software without specific prior written permission.
   286                           ; 
   287                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   288                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   289                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   290                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   291                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   292                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   293                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   294                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   295                           ; 
   296                           ; 
   297                           ; Code-generator required, PIC18F47J53 Definitions
   298                           ; 
   299                           ; SFR Addresses
   300  0000                     
   301                           	psect	intcode
   302  000008  EF04 F050          	goto	40968	;# 
   303                           
   304                           	psect	intcodelo
   305  000018  EF0C F050          	goto	40984	; ;# 
   306  0000                     
   307                           	psect	idataBANK0
   308  009050                     __pidataBANK0:
   309                           	opt stack 0
   310                           
   311                           ;initializer for _file_number
   312  009050  FF                 	db	255
   313                           
   314                           	psect	idataBANK1
   315  008C0C                     __pidataBANK1:
   316                           	opt stack 0
   317                           
   318                           ;initializer for _LUN
   319  008C0C  0E                 	db	low _ExternalFlash_MediaInitialize
   320  008C0D  8E                 	db	high _ExternalFlash_MediaInitialize
   321  008C0E  F4                 	db	low _ExternalFlash_CapacityRead
   322  008C0F  8E                 	db	high _ExternalFlash_CapacityRead
   323  008C10  BC                 	db	low _ExternalFlash_SectorSizeRead
   324  008C11  8F                 	db	high _ExternalFlash_SectorSizeRead
   325  008C12  4C                 	db	low _ExternalFlash_MediaDetect
   326  008C13  90                 	db	high _ExternalFlash_MediaDetect
   327  008C14  9C                 	db	low _ExternalFlash_SectorRead
   328  008C15  88                 	db	high _ExternalFlash_SectorRead
   329  008C16  48                 	db	low _ExternalFlash_WriteProtectStateGet
   330  008C17  90                 	db	high _ExternalFlash_WriteProtectStateGet
   331  008C18  6A                 	db	low _ExternalFlash_SectorWrite
   332  008C19  88                 	db	high _ExternalFlash_SectorWrite
   333  008C1A  00                 	db	0
   334  008C1B  00                 	db	0
   335  008C1C  00                 	db	0
   336  008C1D  00                 	db	0
   337  008C1E  00                 	db	0
   338  008C1F  00                 	db	0
   339                           
   340                           ;initializer for i2c_display_send_init_sequence@F6808
   341  008C20  3A                 	db	58
   342  008C21  1E                 	db	30
   343  008C22  39                 	db	57
   344  008C23  0C                 	db	12
   345  008C24  74                 	db	116
   346  008C25  5C                 	db	92
   347  008C26  6D                 	db	109
   348  008C27  0C                 	db	12
   349  008C28  01                 	db	1
   350                           
   351                           ;initializer for _tx_buf
   352  008C29  01                 	db	1
   353  008C2A  02                 	db	2
   354  008C2B  03                 	db	3
   355  008C2C  04                 	db	4
   356  008C2D  05                 	db	5
   357  008C2E  06                 	db	6
   358  008C2F  07                 	db	7
   359  008C30  08                 	db	8
   360                           
   361                           	psect	mediumconst
   362  009C98                     __pmediumconst:
   363                           	opt stack 0
   364  009C98  00                 	db	0
   365  009C99                     _checked_line2:
   366                           	opt stack 0
   367  009C99  46                 	db	70
   368  009C9A  69                 	db	105
   369  009C9B  6C                 	db	108
   370  009C9C  65                 	db	101
   371  009C9D  20                 	db	32
   372  009C9E  63                 	db	99
   373  009C9F  68                 	db	104
   374  009CA0  65                 	db	101
   375  009CA1  63                 	db	99
   376  009CA2  6B                 	db	107
   377  009CA3  20                 	db	32
   378  009CA4  63                 	db	99
   379  009CA5  6F                 	db	111
   380  009CA6  6D                 	db	109
   381  009CA7  70                 	db	112
   382  009CA8  6C                 	db	108
   383  009CA9  65                 	db	101
   384  009CAA  74                 	db	116
   385  009CAB  65                 	db	101
   386  009CAC  64                 	db	100
   387  009CAD  00                 	db	0
   388  009CAE                     __end_of_checked_line2:
   389                           	opt stack 0
   390  009CAE                     _failed_line3_addressRange:
   391                           	opt stack 0
   392  009CAE  41                 	db	65
   393  009CAF  64                 	db	100
   394  009CB0  64                 	db	100
   395  009CB1  72                 	db	114
   396  009CB2  2E                 	db	46
   397  009CB3  20                 	db	32
   398  009CB4  6F                 	db	111
   399  009CB5  75                 	db	117
   400  009CB6  74                 	db	116
   401  009CB7  73                 	db	115
   402  009CB8  69                 	db	105
   403  009CB9  64                 	db	100
   404  009CBA  65                 	db	101
   405  009CBB  20                 	db	32
   406  009CBC  72                 	db	114
   407  009CBD  61                 	db	97
   408  009CBE  6E                 	db	110
   409  009CBF  67                 	db	103
   410  009CC0  65                 	db	101
   411  009CC1  00                 	db	0
   412  009CC2                     __end_of_failed_line3_addressRange:
   413                           	opt stack 0
   414  009CC2                     _search_line3:
   415                           	opt stack 0
   416  009CC2  46                 	db	70
   417  009CC3  49                 	db	73
   418  009CC4  52                 	db	82
   419  009CC5  4D                 	db	77
   420  009CC6  57                 	db	87
   421  009CC7  41                 	db	65
   422  009CC8  52                 	db	82
   423  009CC9  45                 	db	69
   424  009CCA  2E                 	db	46
   425  009CCB  48                 	db	72
   426  009CCC  45                 	db	69
   427  009CCD  58                 	db	88
   428  009CCE  20                 	db	32
   429  009CCF  6F                 	db	111
   430  009CD0  6E                 	db	110
   431  009CD1  20                 	db	32
   432  009CD2  55                 	db	85
   433  009CD3  53                 	db	83
   434  009CD4  42                 	db	66
   435  009CD5  00                 	db	0
   436  009CD6                     __end_of_search_line3:
   437                           	opt stack 0
   438  009CD6                     _failed_line3_startCode:
   439                           	opt stack 0
   440  009CD6  4D                 	db	77
   441  009CD7  69                 	db	105
   442  009CD8  73                 	db	115
   443  009CD9  73                 	db	115
   444  009CDA  69                 	db	105
   445  009CDB  6E                 	db	110
   446  009CDC  67                 	db	103
   447  009CDD  20                 	db	32
   448  009CDE  73                 	db	115
   449  009CDF  74                 	db	116
   450  009CE0  61                 	db	97
   451  009CE1  72                 	db	114
   452  009CE2  74                 	db	116
   453  009CE3  20                 	db	32
   454  009CE4  63                 	db	99
   455  009CE5  6F                 	db	111
   456  009CE6  64                 	db	100
   457  009CE7  65                 	db	101
   458  009CE8  00                 	db	0
   459  009CE9                     __end_of_failed_line3_startCode:
   460                           	opt stack 0
   461  009CE9                     _found_line2:
   462                           	opt stack 0
   463  009CE9  46                 	db	70
   464  009CEA  49                 	db	73
   465  009CEB  52                 	db	82
   466  009CEC  4D                 	db	77
   467  009CED  57                 	db	87
   468  009CEE  41                 	db	65
   469  009CEF  52                 	db	82
   470  009CF0  45                 	db	69
   471  009CF1  2E                 	db	46
   472  009CF2  48                 	db	72
   473  009CF3  45                 	db	69
   474  009CF4  58                 	db	88
   475  009CF5  20                 	db	32
   476  009CF6  66                 	db	102
   477  009CF7  6F                 	db	111
   478  009CF8  75                 	db	117
   479  009CF9  6E                 	db	110
   480  009CFA  64                 	db	100
   481  009CFB  00                 	db	0
   482  009CFC                     __end_of_found_line2:
   483                           	opt stack 0
   484  009CFC                     _programming_line2:
   485                           	opt stack 0
   486  009CFC  50                 	db	80
   487  009CFD  72                 	db	114
   488  009CFE  6F                 	db	111
   489  009CFF  67                 	db	103
   490  009D00  72                 	db	114
   491  009D01  61                 	db	97
   492  009D02  6D                 	db	109
   493  009D03  6D                 	db	109
   494  009D04  69                 	db	105
   495  009D05  6E                 	db	110
   496  009D06  67                 	db	103
   497  009D07  20                 	db	32
   498  009D08  66                 	db	102
   499  009D09  6C                 	db	108
   500  009D0A  61                 	db	97
   501  009D0B  73                 	db	115
   502  009D0C  68                 	db	104
   503  009D0D  00                 	db	0
   504  009D0E                     __end_of_programming_line2:
   505                           	opt stack 0
   506  009D0E                     _failed_line2:
   507                           	opt stack 0
   508  009D0E  46                 	db	70
   509  009D0F  69                 	db	105
   510  009D10  6C                 	db	108
   511  009D11  65                 	db	101
   512  009D12  20                 	db	32
   513  009D13  63                 	db	99
   514  009D14  68                 	db	104
   515  009D15  65                 	db	101
   516  009D16  63                 	db	99
   517  009D17  6B                 	db	107
   518  009D18  20                 	db	32
   519  009D19  66                 	db	102
   520  009D1A  61                 	db	97
   521  009D1B  69                 	db	105
   522  009D1C  6C                 	db	108
   523  009D1D  65                 	db	101
   524  009D1E  64                 	db	100
   525  009D1F  00                 	db	0
   526  009D20                     __end_of_failed_line2:
   527                           	opt stack 0
   528  009D20                     _found_line4:
   529                           	opt stack 0
   530  009D20  50                 	db	80
   531  009D21  72                 	db	114
   532  009D22  65                 	db	101
   533  009D23  73                 	db	115
   534  009D24  73                 	db	115
   535  009D25  20                 	db	32
   536  009D26  74                 	db	116
   537  009D27  6F                 	db	111
   538  009D28  20                 	db	32
   539  009D29  75                 	db	117
   540  009D2A  73                 	db	115
   541  009D2B  65                 	db	101
   542  009D2C  20                 	db	32
   543  009D2D  66                 	db	102
   544  009D2E  69                 	db	105
   545  009D2F  6C                 	db	108
   546  009D30  65                 	db	101
   547  009D31  00                 	db	0
   548  009D32                     __end_of_found_line4:
   549                           	opt stack 0
   550  009D32                     _checked_line4:
   551                           	opt stack 0
   552  009D32  50                 	db	80
   553  009D33  72                 	db	114
   554  009D34  65                 	db	101
   555  009D35  73                 	db	115
   556  009D36  73                 	db	115
   557  009D37  20                 	db	32
   558  009D38  74                 	db	116
   559  009D39  6F                 	db	111
   560  009D3A  20                 	db	32
   561  009D3B  70                 	db	112
   562  009D3C  72                 	db	114
   563  009D3D  6F                 	db	111
   564  009D3E  67                 	db	103
   565  009D3F  72                 	db	114
   566  009D40  61                 	db	97
   567  009D41  6D                 	db	109
   568  009D42  00                 	db	0
   569  009D43                     __end_of_checked_line4:
   570                           	opt stack 0
   571  009D43                     _search_line2:
   572                           	opt stack 0
   573  009D43  4C                 	db	76
   574  009D44  6F                 	db	111
   575  009D45  6F                 	db	111
   576  009D46  6B                 	db	107
   577  009D47  69                 	db	105
   578  009D48  6E                 	db	110
   579  009D49  67                 	db	103
   580  009D4A  20                 	db	32
   581  009D4B  66                 	db	102
   582  009D4C  6F                 	db	111
   583  009D4D  72                 	db	114
   584  009D4E  20                 	db	32
   585  009D4F  66                 	db	102
   586  009D50  69                 	db	105
   587  009D51  6C                 	db	108
   588  009D52  65                 	db	101
   589  009D53  00                 	db	0
   590  009D54                     __end_of_search_line2:
   591                           	opt stack 0
   592  009D54                     _done_line4:
   593                           	opt stack 0
   594  009D54  50                 	db	80
   595  009D55  72                 	db	114
   596  009D56  65                 	db	101
   597  009D57  73                 	db	115
   598  009D58  73                 	db	115
   599  009D59  20                 	db	32
   600  009D5A  74                 	db	116
   601  009D5B  6F                 	db	111
   602  009D5C  20                 	db	32
   603  009D5D  72                 	db	114
   604  009D5E  65                 	db	101
   605  009D5F  62                 	db	98
   606  009D60  6F                 	db	111
   607  009D61  6F                 	db	111
   608  009D62  74                 	db	116
   609  009D63  00                 	db	0
   610  009D64                     __end_of_done_line4:
   611                           	opt stack 0
   612  009D64                     _done_line3:
   613                           	opt stack 0
   614  009D64  50                 	db	80
   615  009D65  61                 	db	97
   616  009D66  67                 	db	103
   617  009D67  65                 	db	101
   618  009D68  73                 	db	115
   619  009D69  20                 	db	32
   620  009D6A  77                 	db	119
   621  009D6B  72                 	db	114
   622  009D6C  69                 	db	105
   623  009D6D  74                 	db	116
   624  009D6E  74                 	db	116
   625  009D6F  65                 	db	101
   626  009D70  6E                 	db	110
   627  009D71  3A                 	db	58
   628  009D72  20                 	db	32
   629  009D73  00                 	db	0
   630  009D74                     __end_of_done_line3:
   631                           	opt stack 0
   632  009D74                     _done_line1:
   633                           	opt stack 0
   634  009D74  42                 	db	66
   635  009D75  6F                 	db	111
   636  009D76  6F                 	db	111
   637  009D77  74                 	db	116
   638  009D78  6C                 	db	108
   639  009D79  6F                 	db	111
   640  009D7A  61                 	db	97
   641  009D7B  64                 	db	100
   642  009D7C  65                 	db	101
   643  009D7D  72                 	db	114
   644  009D7E  20                 	db	32
   645  009D7F  4D                 	db	77
   646  009D80  6F                 	db	111
   647  009D81  64                 	db	100
   648  009D82  65                 	db	101
   649  009D83  00                 	db	0
   650  009D84                     __end_of_done_line1:
   651                           	opt stack 0
   652  009D84                     _programming_line4:
   653                           	opt stack 0
   654  009D84  50                 	db	80
   655  009D85  61                 	db	97
   656  009D86  67                 	db	103
   657  009D87  65                 	db	101
   658  009D88  73                 	db	115
   659  009D89  20                 	db	32
   660  009D8A  77                 	db	119
   661  009D8B  72                 	db	114
   662  009D8C  69                 	db	105
   663  009D8D  74                 	db	116
   664  009D8E  74                 	db	116
   665  009D8F  65                 	db	101
   666  009D90  6E                 	db	110
   667  009D91  3A                 	db	58
   668  009D92  20                 	db	32
   669  009D93  00                 	db	0
   670  009D94                     __end_of_programming_line4:
   671                           	opt stack 0
   672  009D94                     _programming_line1:
   673                           	opt stack 0
   674  009D94  42                 	db	66
   675  009D95  6F                 	db	111
   676  009D96  6F                 	db	111
   677  009D97  74                 	db	116
   678  009D98  6C                 	db	108
   679  009D99  6F                 	db	111
   680  009D9A  61                 	db	97
   681  009D9B  64                 	db	100
   682  009D9C  65                 	db	101
   683  009D9D  72                 	db	114
   684  009D9E  20                 	db	32
   685  009D9F  4D                 	db	77
   686  009DA0  6F                 	db	111
   687  009DA1  64                 	db	100
   688  009DA2  65                 	db	101
   689  009DA3  00                 	db	0
   690  009DA4                     __end_of_programming_line1:
   691                           	opt stack 0
   692  009DA4                     _failed_line1:
   693                           	opt stack 0
   694  009DA4  42                 	db	66
   695  009DA5  6F                 	db	111
   696  009DA6  6F                 	db	111
   697  009DA7  74                 	db	116
   698  009DA8  6C                 	db	108
   699  009DA9  6F                 	db	111
   700  009DAA  61                 	db	97
   701  009DAB  64                 	db	100
   702  009DAC  65                 	db	101
   703  009DAD  72                 	db	114
   704  009DAE  20                 	db	32
   705  009DAF  4D                 	db	77
   706  009DB0  6F                 	db	111
   707  009DB1  64                 	db	100
   708  009DB2  65                 	db	101
   709  009DB3  00                 	db	0
   710  009DB4                     __end_of_failed_line1:
   711                           	opt stack 0
   712  009DB4                     _checked_line1:
   713                           	opt stack 0
   714  009DB4  42                 	db	66
   715  009DB5  6F                 	db	111
   716  009DB6  6F                 	db	111
   717  009DB7  74                 	db	116
   718  009DB8  6C                 	db	108
   719  009DB9  6F                 	db	111
   720  009DBA  61                 	db	97
   721  009DBB  64                 	db	100
   722  009DBC  65                 	db	101
   723  009DBD  72                 	db	114
   724  009DBE  20                 	db	32
   725  009DBF  4D                 	db	77
   726  009DC0  6F                 	db	111
   727  009DC1  64                 	db	100
   728  009DC2  65                 	db	101
   729  009DC3  00                 	db	0
   730  009DC4                     __end_of_checked_line1:
   731                           	opt stack 0
   732  009DC4                     _verify_line1:
   733                           	opt stack 0
   734  009DC4  42                 	db	66
   735  009DC5  6F                 	db	111
   736  009DC6  6F                 	db	111
   737  009DC7  74                 	db	116
   738  009DC8  6C                 	db	108
   739  009DC9  6F                 	db	111
   740  009DCA  61                 	db	97
   741  009DCB  64                 	db	100
   742  009DCC  65                 	db	101
   743  009DCD  72                 	db	114
   744  009DCE  20                 	db	32
   745  009DCF  4D                 	db	77
   746  009DD0  6F                 	db	111
   747  009DD1  64                 	db	100
   748  009DD2  65                 	db	101
   749  009DD3  00                 	db	0
   750  009DD4                     __end_of_verify_line1:
   751                           	opt stack 0
   752  009DD4                     _found_line1:
   753                           	opt stack 0
   754  009DD4  42                 	db	66
   755  009DD5  6F                 	db	111
   756  009DD6  6F                 	db	111
   757  009DD7  74                 	db	116
   758  009DD8  6C                 	db	108
   759  009DD9  6F                 	db	111
   760  009DDA  61                 	db	97
   761  009DDB  64                 	db	100
   762  009DDC  65                 	db	101
   763  009DDD  72                 	db	114
   764  009DDE  20                 	db	32
   765  009DDF  4D                 	db	77
   766  009DE0  6F                 	db	111
   767  009DE1  64                 	db	100
   768  009DE2  65                 	db	101
   769  009DE3  00                 	db	0
   770  009DE4                     __end_of_found_line1:
   771                           	opt stack 0
   772  009DE4                     _search_line1:
   773                           	opt stack 0
   774  009DE4  42                 	db	66
   775  009DE5  6F                 	db	111
   776  009DE6  6F                 	db	111
   777  009DE7  74                 	db	116
   778  009DE8  6C                 	db	108
   779  009DE9  6F                 	db	111
   780  009DEA  61                 	db	97
   781  009DEB  64                 	db	100
   782  009DEC  65                 	db	101
   783  009DED  72                 	db	114
   784  009DEE  20                 	db	32
   785  009DEF  4D                 	db	77
   786  009DF0  6F                 	db	111
   787  009DF1  64                 	db	100
   788  009DF2  65                 	db	101
   789  009DF3  00                 	db	0
   790  009DF4                     __end_of_search_line1:
   791                           	opt stack 0
   792  009DF4                     _start_line1:
   793                           	opt stack 0
   794  009DF4  42                 	db	66
   795  009DF5  6F                 	db	111
   796  009DF6  6F                 	db	111
   797  009DF7  74                 	db	116
   798  009DF8  6C                 	db	108
   799  009DF9  6F                 	db	111
   800  009DFA  61                 	db	97
   801  009DFB  64                 	db	100
   802  009DFC  65                 	db	101
   803  009DFD  72                 	db	114
   804  009DFE  20                 	db	32
   805  009DFF  4D                 	db	77
   806  009E00  6F                 	db	111
   807  009E01  64                 	db	100
   808  009E02  65                 	db	101
   809  009E03  00                 	db	0
   810  009E04                     __end_of_start_line1:
   811                           	opt stack 0
   812  009E04                     _failed_line3_checksum:
   813                           	opt stack 0
   814  009E04  43                 	db	67
   815  009E05  68                 	db	104
   816  009E06  65                 	db	101
   817  009E07  63                 	db	99
   818  009E08  6B                 	db	107
   819  009E09  73                 	db	115
   820  009E0A  75                 	db	117
   821  009E0B  6D                 	db	109
   822  009E0C  20                 	db	32
   823  009E0D  65                 	db	101
   824  009E0E  72                 	db	114
   825  009E0F  72                 	db	114
   826  009E10  6F                 	db	111
   827  009E11  72                 	db	114
   828  009E12  00                 	db	0
   829  009E13                     __end_of_failed_line3_checksum:
   830                           	opt stack 0
   831  009E13                     _failed_line3_noNextRecord:
   832                           	opt stack 0
   833  009E13  4E                 	db	78
   834  009E14  6F                 	db	111
   835  009E15  20                 	db	32
   836  009E16  6E                 	db	110
   837  009E17  65                 	db	101
   838  009E18  78                 	db	120
   839  009E19  74                 	db	116
   840  009E1A  20                 	db	32
   841  009E1B  72                 	db	114
   842  009E1C  65                 	db	101
   843  009E1D  63                 	db	99
   844  009E1E  6F                 	db	111
   845  009E1F  72                 	db	114
   846  009E20  64                 	db	100
   847  009E21  00                 	db	0
   848  009E22                     __end_of_failed_line3_noNextRecord:
   849                           	opt stack 0
   850  009E22                     _start_line4:
   851                           	opt stack 0
   852  009E22  73                 	db	115
   853  009E23  6F                 	db	111
   854  009E24  6C                 	db	108
   855  009E25  64                 	db	100
   856  009E26  65                 	db	101
   857  009E27  72                 	db	114
   858  009E28  6E                 	db	110
   859  009E29  65                 	db	101
   860  009E2A  72                 	db	114
   861  009E2B  64                 	db	100
   862  009E2C  2E                 	db	46
   863  009E2D  63                 	db	99
   864  009E2E  6F                 	db	111
   865  009E2F  6D                 	db	109
   866  009E30  00                 	db	0
   867  009E31                     __end_of_start_line4:
   868                           	opt stack 0
   869  009E31                     _failed_line3_dataTooLong:
   870                           	opt stack 0
   871  009E31  44                 	db	68
   872  009E32  61                 	db	97
   873  009E33  74                 	db	116
   874  009E34  61                 	db	97
   875  009E35  20                 	db	32
   876  009E36  74                 	db	116
   877  009E37  6F                 	db	111
   878  009E38  6F                 	db	111
   879  009E39  20                 	db	32
   880  009E3A  6C                 	db	108
   881  009E3B  6F                 	db	111
   882  009E3C  6E                 	db	110
   883  009E3D  67                 	db	103
   884  009E3E  00                 	db	0
   885  009E3F                     __end_of_failed_line3_dataTooLong:
   886                           	opt stack 0
   887  009E3F                     _reboot_line1:
   888                           	opt stack 0
   889  009E3F  52                 	db	82
   890  009E40  65                 	db	101
   891  009E41  62                 	db	98
   892  009E42  6F                 	db	111
   893  009E43  6F                 	db	111
   894  009E44  74                 	db	116
   895  009E45  69                 	db	105
   896  009E46  6E                 	db	110
   897  009E47  67                 	db	103
   898  009E48  2E                 	db	46
   899  009E49  2E                 	db	46
   900  009E4A  2E                 	db	46
   901  009E4B  00                 	db	0
   902  009E4C                     __end_of_reboot_line1:
   903                           	opt stack 0
   904  009E4C                     _verify_line2:
   905                           	opt stack 0
   906  009E4C  56                 	db	86
   907  009E4D  65                 	db	101
   908  009E4E  72                 	db	114
   909  009E4F  69                 	db	105
   910  009E50  66                 	db	102
   911  009E51  79                 	db	121
   912  009E52  69                 	db	105
   913  009E53  6E                 	db	110
   914  009E54  67                 	db	103
   915  009E55  2E                 	db	46
   916  009E56  2E                 	db	46
   917  009E57  2E                 	db	46
   918  009E58  00                 	db	0
   919  009E59                     __end_of_verify_line2:
   920                           	opt stack 0
   921  009E59                     _search_line4:
   922                           	opt stack 0
   923  009E59  64                 	db	100
   924  009E5A  72                 	db	114
   925  009E5B  69                 	db	105
   926  009E5C  76                 	db	118
   927  009E5D  65                 	db	101
   928  009E5E  2E                 	db	46
   929  009E5F  2E                 	db	46
   930  009E60  2E                 	db	46
   931  009E61  00                 	db	0
   932  009E62                     __end_of_search_line4:
   933                           	opt stack 0
   934  009E62                     _start_line2:
   935                           	opt stack 0
   936  009E62  56                 	db	86
   937  009E63  65                 	db	101
   938  009E64  72                 	db	114
   939  009E65  73                 	db	115
   940  009E66  69                 	db	105
   941  009E67  6F                 	db	111
   942  009E68  6E                 	db	110
   943  009E69  20                 	db	32
   944  009E6A  00                 	db	0
   945  009E6B                     __end_of_start_line2:
   946                           	opt stack 0
   947  009E6B                     _failed_line4:
   948                           	opt stack 0
   949  009E6B  52                 	db	82
   950  009E6C  65                 	db	101
   951  009E6D  63                 	db	99
   952  009E6E  6F                 	db	111
   953  009E6F  72                 	db	114
   954  009E70  64                 	db	100
   955  009E71  20                 	db	32
   956  009E72  00                 	db	0
   957  009E73                     __end_of_failed_line4:
   958                           	opt stack 0
   959  009E73                     _checked_line3:
   960                           	opt stack 0
   961  009E73  72                 	db	114
   962  009E74  65                 	db	101
   963  009E75  63                 	db	99
   964  009E76  6F                 	db	111
   965  009E77  72                 	db	114
   966  009E78  64                 	db	100
   967  009E79  73                 	db	115
   968  009E7A  00                 	db	0
   969  009E7B                     __end_of_checked_line3:
   970                           	opt stack 0
   971  009E7B                     _USB_SD_Ptr:
   972                           	opt stack 0
   973  009E7B  CC                 	db	low _sd000
   974  009E7C  9F                 	db	high _sd000
   975  009E7D  E8                 	db	low _sd001
   976  009E7E  9E                 	db	high _sd001
   977  009E7F  1C                 	db	low _sd002
   978  009E80  9F                 	db	high _sd002
   979  009E81  8B                 	db	low _sd003
   980  009E82  9F                 	db	high _sd003
   981  009E83                     __end_of_USB_SD_Ptr:
   982                           	opt stack 0
   983  009E83                     _programming_line3:
   984                           	opt stack 0
   985  009E83  45                 	db	69
   986  009E84  6E                 	db	110
   987  009E85  74                 	db	116
   988  009E86  72                 	db	114
   989  009E87  79                 	db	121
   990  009E88  20                 	db	32
   991  009E89  00                 	db	0
   992  009E8A                     __end_of_programming_line3:
   993                           	opt stack 0
   994  009E8A                     _verify_line3:
   995                           	opt stack 0
   996  009E8A  52                 	db	82
   997  009E8B  65                 	db	101
   998  009E8C  63                 	db	99
   999  009E8D  6F                 	db	111
  1000  009E8E  72                 	db	114
  1001  009E8F  64                 	db	100
  1002  009E90  00                 	db	0
  1003  009E91                     __end_of_verify_line3:
  1004                           	opt stack 0
  1005  009E91                     _found_line3b:
  1006                           	opt stack 0
  1007  009E91  20                 	db	32
  1008  009E92  62                 	db	98
  1009  009E93  79                 	db	121
  1010  009E94  74                 	db	116
  1011  009E95  65                 	db	101
  1012  009E96  73                 	db	115
  1013  009E97  00                 	db	0
  1014  009E98                     __end_of_found_line3b:
  1015                           	opt stack 0
  1016  009E98                     _found_line3:
  1017                           	opt stack 0
  1018  009E98  53                 	db	83
  1019  009E99  69                 	db	105
  1020  009E9A  7A                 	db	122
  1021  009E9B  65                 	db	101
  1022  009E9C  3A                 	db	58
  1023  009E9D  20                 	db	32
  1024  009E9E  00                 	db	0
  1025  009E9F                     __end_of_found_line3:
  1026                           	opt stack 0
  1027  009E9F                     _done_line2:
  1028                           	opt stack 0
  1029  009E9F  44                 	db	68
  1030  009EA0  6F                 	db	111
  1031  009EA1  6E                 	db	110
  1032  009EA2  65                 	db	101
  1033  009EA3  21                 	db	33
  1034  009EA4  00                 	db	0
  1035  009EA5                     __end_of_done_line2:
  1036                           	opt stack 0
  1037  009EA5                     _USB_CD_Ptr:
  1038                           	opt stack 0
  1039  009EA5  A8                 	db	low _configDescriptor1
  1040  009EA6  9E                 	db	high _configDescriptor1
  1041  009EA7                     __end_of_USB_CD_Ptr:
  1042                           	opt stack 0
  1043  009EA7                     _start_line3:
  1044                           	opt stack 0
  1045  009EA7  00                 	db	0
  1046  009EA8                     __end_of_start_line3:
  1047                           	opt stack 0
  1048  009EA8                     _configDescriptor1:
  1049                           	opt stack 0
  1050  009EA8  09                 	db	9
  1051  009EA9  02                 	db	2
  1052  009EAA  40                 	db	64
  1053  009EAB  00                 	db	0
  1054  009EAC  02                 	db	2
  1055  009EAD  01                 	db	1
  1056  009EAE  00                 	db	0
  1057  009EAF  C0                 	db	192
  1058  009EB0  32                 	db	50
  1059  009EB1  09                 	db	9
  1060  009EB2  04                 	db	4
  1061  009EB3  00                 	db	0
  1062  009EB4  00                 	db	0
  1063  009EB5  02                 	db	2
  1064  009EB6  03                 	db	3
  1065  009EB7  00                 	db	0
  1066  009EB8  00                 	db	0
  1067  009EB9  00                 	db	0
  1068  009EBA  09                 	db	9
  1069  009EBB  21                 	db	33
  1070  009EBC  11                 	db	17
  1071  009EBD  01                 	db	1
  1072  009EBE  00                 	db	0
  1073  009EBF  01                 	db	1
  1074  009EC0  22                 	db	34
  1075  009EC1  1D                 	db	29
  1076  009EC2  00                 	db	0
  1077  009EC3  07                 	db	7
  1078  009EC4  05                 	db	5
  1079  009EC5  81                 	db	129
  1080  009EC6  03                 	db	3
  1081  009EC7  40                 	db	64
  1082  009EC8  00                 	db	0
  1083  009EC9  01                 	db	1
  1084  009ECA  07                 	db	7
  1085  009ECB  05                 	db	5
  1086  009ECC  01                 	db	1
  1087  009ECD  03                 	db	3
  1088  009ECE  40                 	db	64
  1089  009ECF  00                 	db	0
  1090  009ED0  01                 	db	1
  1091  009ED1  09                 	db	9
  1092  009ED2  04                 	db	4
  1093  009ED3  01                 	db	1
  1094  009ED4  00                 	db	0
  1095  009ED5  02                 	db	2
  1096  009ED6  08                 	db	8
  1097  009ED7  06                 	db	6
  1098  009ED8  50                 	db	80
  1099  009ED9  00                 	db	0
  1100  009EDA  07                 	db	7
  1101  009EDB  05                 	db	5
  1102  009EDC  82                 	db	130
  1103  009EDD  02                 	db	2
  1104  009EDE  40                 	db	64
  1105  009EDF  00                 	db	0
  1106  009EE0  01                 	db	1
  1107  009EE1  07                 	db	7
  1108  009EE2  05                 	db	5
  1109  009EE3  02                 	db	2
  1110  009EE4  02                 	db	2
  1111  009EE5  40                 	db	64
  1112  009EE6  00                 	db	0
  1113  009EE7  01                 	db	1
  1114  009EE8                     __end_of_configDescriptor1:
  1115                           	opt stack 0
  1116  009EE8                     _sd001:
  1117                           	opt stack 0
  1118  009EE8  34                 	db	52
  1119  009EE9  03                 	db	3
  1120  009EEA  0053               	dw	83
  1121  009EEC  006F               	dw	111
  1122  009EEE  006C               	dw	108
  1123  009EF0  0064               	dw	100
  1124  009EF2  0065               	dw	101
  1125  009EF4  0072               	dw	114
  1126  009EF6  006E               	dw	110
  1127  009EF8  0065               	dw	101
  1128  009EFA  0072               	dw	114
  1129  009EFC  0064               	dw	100
  1130  009EFE  002E               	dw	46
  1131  009F00  0063               	dw	99
  1132  009F02  006F               	dw	111
  1133  009F04  006D               	dw	109
  1134  009F06  0020               	dw	32
  1135  009F08  0020               	dw	32
  1136  009F0A  0020               	dw	32
  1137  009F0C  0020               	dw	32
  1138  009F0E  0020               	dw	32
  1139  009F10  0020               	dw	32
  1140  009F12  0020               	dw	32
  1141  009F14  0020               	dw	32
  1142  009F16  0020               	dw	32
  1143  009F18  0020               	dw	32
  1144  009F1A  0020               	dw	32
  1145  009F1C                     __end_of_sd001:
  1146                           	opt stack 0
  1147  009F1C                     _sd002:
  1148                           	opt stack 0
  1149  009F1C  2E                 	db	46
  1150  009F1D  03                 	db	3
  1151  009F1E  004D               	dw	77
  1152  009F20  0050               	dw	80
  1153  009F22  0050               	dw	80
  1154  009F24  0054               	dw	84
  1155  009F26  0053               	dw	83
  1156  009F28  006F               	dw	111
  1157  009F2A  006C               	dw	108
  1158  009F2C  0061               	dw	97
  1159  009F2E  0072               	dw	114
  1160  009F30  0020               	dw	32
  1161  009F32  0043               	dw	67
  1162  009F34  0068               	dw	104
  1163  009F36  0061               	dw	97
  1164  009F38  0072               	dw	114
  1165  009F3A  0067               	dw	103
  1166  009F3C  0065               	dw	101
  1167  009F3E  0072               	dw	114
  1168  009F40  0020               	dw	32
  1169  009F42  0052               	dw	82
  1170  009F44  0065               	dw	101
  1171  009F46  0076               	dw	118
  1172  009F48  0043               	dw	67
  1173  009F4A                     __end_of_sd002:
  1174                           	opt stack 0
  1175  009F4A                     _inq_resp:
  1176                           	opt stack 0
  1177  009F4A  00                 	db	0
  1178  009F4B  80                 	db	128
  1179  009F4C  04                 	db	4
  1180  009F4D  02                 	db	2
  1181  009F4E  20                 	db	32
  1182  009F4F  00                 	db	0
  1183  009F50  00                 	db	0
  1184  009F51  00                 	db	0
  1185  009F52  4D                 	db	77
  1186  009F53  69                 	db	105
  1187  009F54  63                 	db	99
  1188  009F55  72                 	db	114
  1189  009F56  6F                 	db	111
  1190  009F57  63                 	db	99
  1191  009F58  68                 	db	104
  1192  009F59  70                 	db	112
  1193  009F5A  4D                 	db	77
  1194  009F5B  61                 	db	97
  1195  009F5C  73                 	db	115
  1196  009F5D  73                 	db	115
  1197  009F5E  20                 	db	32
  1198  009F5F  53                 	db	83
  1199  009F60  74                 	db	116
  1200  009F61  6F                 	db	111
  1201  009F62  72                 	db	114
  1202  009F63  61                 	db	97
  1203  009F64  67                 	db	103
  1204  009F65  65                 	db	101
  1205  009F66  20                 	db	32
  1206  009F67  20                 	db	32
  1207  009F68  20                 	db	32
  1208  009F69  20                 	db	32
  1209  009F6A  30                 	db	48
  1210  009F6B  30                 	db	48
  1211  009F6C  30                 	db	48
  1212  009F6D  31                 	db	49
  1213  009F6E                     __end_of_inq_resp:
  1214                           	opt stack 0
  1215  009F6E                     _hid_rpt01:
  1216                           	opt stack 0
  1217  009F6E  06                 	db	6
  1218  009F6F  00                 	db	0
  1219  009F70  FF                 	db	255
  1220  009F71  09                 	db	9
  1221  009F72  01                 	db	1
  1222  009F73  A1                 	db	161
  1223  009F74  01                 	db	1
  1224  009F75  19                 	db	25
  1225  009F76  01                 	db	1
  1226  009F77  29                 	db	41
  1227  009F78  40                 	db	64
  1228  009F79  15                 	db	21
  1229  009F7A  00                 	db	0
  1230  009F7B  26                 	db	38
  1231  009F7C  FF                 	db	255
  1232  009F7D  00                 	db	0
  1233  009F7E  75                 	db	117
  1234  009F7F  08                 	db	8
  1235  009F80  95                 	db	149
  1236  009F81  40                 	db	64
  1237  009F82  81                 	db	129
  1238  009F83  00                 	db	0
  1239  009F84  19                 	db	25
  1240  009F85  01                 	db	1
  1241  009F86  29                 	db	41
  1242  009F87  40                 	db	64
  1243  009F88  91                 	db	145
  1244  009F89  00                 	db	0
  1245  009F8A  C0                 	db	192
  1246  009F8B                     __end_of_hid_rpt01:
  1247                           	opt stack 0
  1248  009F8B                     _sd003:
  1249                           	opt stack 0
  1250  009F8B  1A                 	db	26
  1251  009F8C  03                 	db	3
  1252  009F8D  0031               	dw	49
  1253  009F8F  0032               	dw	50
  1254  009F91  0033               	dw	51
  1255  009F93  0034               	dw	52
  1256  009F95  0035               	dw	53
  1257  009F97  0036               	dw	54
  1258  009F99  0037               	dw	55
  1259  009F9B  0038               	dw	56
  1260  009F9D  0039               	dw	57
  1261  009F9F  0030               	dw	48
  1262  009FA1  0039               	dw	57
  1263  009FA3  0039               	dw	57
  1264  009FA5                     __end_of_sd003:
  1265                           	opt stack 0
  1266  009FA5                     _device_dsc:
  1267                           	opt stack 0
  1268  009FA5  12                 	db	18
  1269  009FA6  01                 	db	1
  1270  009FA7  0200               	dw	512
  1271  009FA9  00                 	db	0
  1272  009FAA  00                 	db	0
  1273  009FAB  00                 	db	0
  1274  009FAC  08                 	db	8
  1275  009FAD  04D8               	dw	1240
  1276  009FAF  F08E               	dw	61582
  1277  009FB1  0100               	dw	256
  1278  009FB3  01                 	db	1
  1279  009FB4  02                 	db	2
  1280  009FB5  00                 	db	0
  1281  009FB6  01                 	db	1
  1282  009FB7                     __end_of_device_dsc:
  1283                           	opt stack 0
  1284  009FB7                     _bootloader_filename:
  1285                           	opt stack 0
  1286  009FB7  46                 	db	70
  1287  009FB8  49                 	db	73
  1288  009FB9  52                 	db	82
  1289  009FBA  4D                 	db	77
  1290  009FBB  57                 	db	87
  1291  009FBC  41                 	db	65
  1292  009FBD  52                 	db	82
  1293  009FBE  45                 	db	69
  1294  009FBF  00                 	db	0
  1295  009FC0                     __end_of_bootloader_filename:
  1296                           	opt stack 0
  1297  009FC0                     _flash_command_pagesize_528:
  1298                           	opt stack 0
  1299  009FC0  3D                 	db	61
  1300  009FC1  2A                 	db	42
  1301  009FC2  80                 	db	128
  1302  009FC3  A7                 	db	167
  1303  009FC4                     __end_of_flash_command_pagesize_528:
  1304                           	opt stack 0
  1305  009FC4                     _flash_command_pagesize_512:
  1306                           	opt stack 0
  1307  009FC4  3D                 	db	61
  1308  009FC5  2A                 	db	42
  1309  009FC6  80                 	db	128
  1310  009FC7  A6                 	db	166
  1311  009FC8                     __end_of_flash_command_pagesize_512:
  1312                           	opt stack 0
  1313  009FC8                     _bootloader_extension:
  1314                           	opt stack 0
  1315  009FC8  48                 	db	72
  1316  009FC9  45                 	db	69
  1317  009FCA  58                 	db	88
  1318  009FCB  00                 	db	0
  1319  009FCC                     __end_of_bootloader_extension:
  1320                           	opt stack 0
  1321  009FCC                     _sd000:
  1322                           	opt stack 0
  1323  009FCC  04                 	db	4
  1324  009FCD  03                 	db	3
  1325  009FCE  0409               	dw	1033
  1326  009FD0                     __end_of_sd000:
  1327                           	opt stack 0
  1328  0000                     _RPINR23	set	3838
  1329  0000                     _RPOR23	set	3799
  1330  0000                     _RPINR22	set	3837
  1331  0000                     _RPOR22	set	3798
  1332  0000                     _RPOR21	set	3797
  1333  0000                     _RPINR21	set	3836
  1334  0000                     _RPINR2	set	3810
  1335  0000                     _RPINR3	set	3811
  1336  0000                     _RPINR1	set	3809
  1337  0000                     _PPSCONbits	set	3775
  1338  0000                     _ODCON3bits	set	3904
  1339  0000                     _ANCON0bits	set	3912
  1340  0000                     _UEP0bits	set	3878
  1341  0000                     _UIEbits	set	3894
  1342  0000                     _UADDR	set	3896
  1343  0000                     _UIE	set	3894
  1344  0000                     _UEIE	set	3895
  1345  0000                     _UCFG	set	3897
  1346  0000                     _UEP1	set	3879
  1347  0000                     _UEP0	set	3878
  1348  0000                     _TBLPTR	set	4086
  1349  0000                     _DMACON2bits	set	3974
  1350  0000                     _SSP2CON1bits	set	3954
  1351  0000                     _SSP2STATbits	set	3955
  1352  0000                     _INTCON	set	4082
  1353  0000                     _EECON1	set	4006
  1354  0000                     _TABLAT	set	4085
  1355  0000                     _EECON1bits	set	4006
  1356  0000                     _SSP1CON1	set	4038
  1357  0000                     _SSP1BUF	set	4041
  1358  0000                     _SSP1CON2bits	set	4037
  1359  0000                     _SSP1CON1bits	set	4038
  1360  0000                     _SSP1ADD	set	4040
  1361  0000                     _SSP1STATbits	set	4039
  1362  0000                     _LATEbits	set	3981
  1363  0000                     _TRISEbits	set	3990
  1364  0000                     _LATBbits	set	3978
  1365  0000                     _TRISBbits	set	3987
  1366  0000                     _LATDbits	set	3980
  1367  0000                     _TRISDbits	set	3989
  1368  0000                     _LATCbits	set	3979
  1369  0000                     _TRISCbits	set	3988
  1370  0000                     _T0CONbits	set	4053
  1371  0000                     _INTCON2bits	set	4081
  1372  0000                     _EECON2	set	4007
  1373  0000                     _PORTBbits	set	3969
  1374  0000                     _INTCON3bits	set	4080
  1375  0000                     _TMR0L	set	4054
  1376  0000                     _TMR0H	set	4055
  1377  0000                     _INTCONbits	set	4082
  1378  0000                     _OSCCON	set	4051
  1379  0000                     _OSCTUNEbits	set	3995
  1380  0000                     _PORTAbits	set	3968
  1381  0000                     _TRISAbits	set	3986
  1382  0000                     _LATAbits	set	3977
  1383  0000                     _PIR3bits	set	4004
  1384  0000                     _DMABCL	set	3943
  1385  0000                     _DMABCH	set	3942
  1386  0000                     _RXADDRL	set	3945
  1387  0000                     _RXADDRH	set	3944
  1388  0000                     _DMACON1bits	set	3976
  1389  0000                     _TXADDRL	set	3947
  1390  0000                     _TXADDRH	set	3946
  1391  0000                     _PORTDbits	set	3971
  1392  0000                     _USTAT	set	3940
  1393  0000                     _PIR2bits	set	4001
  1394  0000                     _UCON	set	3941
  1395  0000                     _UIRbits	set	3938
  1396  0000                     _UCONbits	set	3941
  1397  0000                     _UIR	set	3938
  1398  0000                     _UEIR	set	3939
  1399  0000                     _PIE2bits	set	4000
  1400  009FD0                     STR_12:
  1401  009FD0  68                 	db	104	;'h'
  1402  009FD1  65                 	db	101	;'e'
  1403  009FD2  6C                 	db	108	;'l'
  1404  009FD3  6C                 	db	108	;'l'
  1405  009FD4  6F                 	db	111	;'o'
  1406  009FD5  20                 	db	32
  1407  009FD6  77                 	db	119	;'w'
  1408  009FD7  6F                 	db	111	;'o'
  1409  009FD8  72                 	db	114	;'r'
  1410  009FD9  6C                 	db	108	;'l'
  1411  009FDA  64                 	db	100	;'d'
  1412  009FDB  21                 	db	33
  1413  009FDC  00                 	db	0
  1414  009FDD                     STR_9:
  1415  009FDD  53                 	db	83	;'S'
  1416  009FDE  6F                 	db	111	;'o'
  1417  009FDF  6C                 	db	108	;'l'
  1418  009FE0  61                 	db	97	;'a'
  1419  009FE1  72                 	db	114	;'r'
  1420  009FE2  43                 	db	67	;'C'
  1421  009FE3  68                 	db	104	;'h'
  1422  009FE4  61                 	db	97	;'a'
  1423  009FE5  72                 	db	114	;'r'
  1424  009FE6  67                 	db	103	;'g'
  1425  009FE7  72                 	db	114	;'r'
  1426  009FE8  00                 	db	0
  1427  009FE9                     STR_10:
  1428  009FE9  46                 	db	70	;'F'
  1429  009FEA  49                 	db	73	;'I'
  1430  009FEB  4C                 	db	76	;'L'
  1431  009FEC  45                 	db	69	;'E'
  1432  009FED  20                 	db	32
  1433  009FEE  20                 	db	32
  1434  009FEF  20                 	db	32
  1435  009FF0  20                 	db	32
  1436  009FF1  00                 	db	0
  1437  009FF2                     STR_1:
  1438  009FF2  4D                 	db	77	;'M'
  1439  009FF3  53                 	db	83	;'S'
  1440  009FF4  44                 	db	68	;'D'
  1441  009FF5  4F                 	db	79	;'O'
  1442  009FF6  53                 	db	83	;'S'
  1443  009FF7  35                 	db	53	;'5'
  1444  009FF8  2E                 	db	46
  1445  009FF9  30                 	db	48	;'0'
  1446  009FFA  00                 	db	0
  1447  009FFB                     STR_11:
  1448  009FFB  54                 	db	84	;'T'
  1449  009FFC  58                 	db	88	;'X'
  1450  009FFD  54                 	db	84	;'T'
  1451  009FFE  00                 	db	0
  1452  0000                     
  1453                           ; #config settings
  1454  009FFF  00                 	db	0	; dummy byte at the end
  1455  0000                     
  1456                           	psect	cinit
  1457  006FBA                     __pcinit:
  1458                           	opt stack 0
  1459  006FBA                     start_initialization:
  1460                           	opt stack 0
  1461  006FBA                     __initialization:
  1462                           	opt stack 0
  1463                           
  1464                           ; Initialize objects allocated to BANK1 (37 bytes)
  1465                           ; load TBLPTR registers with __pidataBANK1
  1466  006FBA  0E0C               	movlw	low __pidataBANK1
  1467  006FBC  6EF6               	movwf	tblptrl,c
  1468  006FBE  0E8C               	movlw	high __pidataBANK1
  1469  006FC0  6EF7               	movwf	tblptrh,c
  1470  006FC2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1471  006FC4  6EF8               	movwf	tblptru,c
  1472  006FC6  EE01  F0B3         	lfsr	0,__pdataBANK1
  1473  006FCA  EE10 F025          	lfsr	1,37
  1474  006FCE                     copy_data0:
  1475  006FCE  0009               	tblrd		*+
  1476  006FD0  CFF5 FFEE          	movff	tablat,postinc0
  1477  006FD4  50E5               	movf	postdec1,w,c
  1478  006FD6  50E1               	movf	fsr1l,w,c
  1479  006FD8  E1FA               	bnz	copy_data0
  1480                           
  1481                           ; Initialize objects allocated to BANK0 (1 bytes)
  1482                           ; load TBLPTR registers with __pidataBANK0
  1483  006FDA  0E50               	movlw	low __pidataBANK0
  1484  006FDC  6EF6               	movwf	tblptrl,c
  1485  006FDE  0E90               	movlw	high __pidataBANK0
  1486  006FE0  6EF7               	movwf	tblptrh,c
  1487  006FE2  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1488  006FE4  6EF8               	movwf	tblptru,c
  1489  006FE6  0009               	tblrd		*+	;fetch initializer
  1490  006FE8  CFF5 F0FF          	movff	tablat,__pdataBANK0
  1491                           
  1492                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1493  006FEC  EE03  F0C0         	lfsr	0,__pbssBIGRAMll
  1494  006FF0  EE12 F000          	lfsr	1,512
  1495  006FF4                     clear_0:
  1496  006FF4  6AEE               	clrf	postinc0,c
  1497  006FF6  50E5               	movf	postdec1,w,c
  1498  006FF8  50E1               	movf	fsr1l,w,c
  1499  006FFA  E1FC               	bnz	clear_0
  1500  006FFC  50E2               	movf	fsr1h,w,c
  1501  006FFE  E1FA               	bnz	clear_0
  1502                           
  1503                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1504  007000  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1505  007004  EE14 F000          	lfsr	1,1024
  1506  007008                     clear_1:
  1507  007008  6AEE               	clrf	postinc0,c
  1508  00700A  50E5               	movf	postdec1,w,c
  1509  00700C  50E1               	movf	fsr1l,w,c
  1510  00700E  E1FC               	bnz	clear_1
  1511  007010  50E2               	movf	fsr1h,w,c
  1512  007012  E1FA               	bnz	clear_1
  1513                           
  1514                           ; Clear objects allocated to BANK3 (192 bytes)
  1515  007014  EE03  F000         	lfsr	0,__pbssBANK3
  1516  007018  0EC0               	movlw	192
  1517  00701A                     clear_2:
  1518  00701A  6AEE               	clrf	postinc0,c
  1519  00701C  06E8               	decf	wreg,f,c
  1520  00701E  E1FD               	bnz	clear_2
  1521                           
  1522                           ; Clear objects allocated to BANK2 (194 bytes)
  1523  007020  EE02  F000         	lfsr	0,__pbssBANK2
  1524  007024  0EC2               	movlw	194
  1525  007026                     clear_3:
  1526  007026  6AEE               	clrf	postinc0,c
  1527  007028  06E8               	decf	wreg,f,c
  1528  00702A  E1FD               	bnz	clear_3
  1529                           
  1530                           ; Clear objects allocated to BANK1 (179 bytes)
  1531  00702C  EE01  F000         	lfsr	0,__pbssBANK1
  1532  007030  0EB3               	movlw	179
  1533  007032                     clear_4:
  1534  007032  6AEE               	clrf	postinc0,c
  1535  007034  06E8               	decf	wreg,f,c
  1536  007036  E1FD               	bnz	clear_4
  1537                           
  1538                           ; Clear objects allocated to BANK0 (58 bytes)
  1539  007038  EE00  F0C5         	lfsr	0,__pbssBANK0
  1540  00703C  0E3A               	movlw	58
  1541  00703E                     clear_5:
  1542  00703E  6AEE               	clrf	postinc0,c
  1543  007040  06E8               	decf	wreg,f,c
  1544  007042  E1FD               	bnz	clear_5
  1545  007044                     end_of_initialization:
  1546                           	opt stack 0
  1547  007044                     __end_of__initialization:
  1548                           	opt stack 0
  1549  007044  0100               	movlb	0
  1550  007046  EF36  F01D         	goto	_main	;jump to C main() function
  1551                           tblptru	equ	0xFF8
  1552                           tblptrh	equ	0xFF7
  1553                           tblptrl	equ	0xFF6
  1554                           tablat	equ	0xFF5
  1555                           postinc0	equ	0xFEE
  1556                           wreg	equ	0xFE8
  1557                           postdec1	equ	0xFE5
  1558                           fsr1h	equ	0xFE2
  1559                           fsr1l	equ	0xFE1
  1560                           
  1561                           	psect	bssBANK0
  1562  0000C5                     __pbssBANK0:
  1563                           	opt stack 0
  1564  0000C5                     _os:
  1565                           	opt stack 0
  1566  0000C5                     	ds	6
  1567  0000CB                     _inPipes:
  1568                           	opt stack 0
  1569  0000CB                     	ds	6
  1570  0000D1                     _pBDTEntryIn:
  1571                           	opt stack 0
  1572  0000D1                     	ds	6
  1573  0000D7                     _hex_file_offset:
  1574                           	opt stack 0
  1575  0000D7                     	ds	4
  1576  0000DB                     _TransferLength:
  1577                           	opt stack 0
  1578  0000DB                     	ds	2
  1579  0000DD                     _USBMSDInHandle:
  1580                           	opt stack 0
  1581  0000DD                     	ds	2
  1582  0000DF                     _USBMSDOutHandle:
  1583                           	opt stack 0
  1584  0000DF                     	ds	2
  1585  0000E1                     _pBDTEntryEP0OutNext:
  1586                           	opt stack 0
  1587  0000E1                     	ds	2
  1588  0000E3                     _pBDTEntryEP0OutCurrent:
  1589                           	opt stack 0
  1590  0000E3                     	ds	2
  1591  0000E5                     _power_state:
  1592                           	opt stack 0
  1593  0000E5                     	ds	1
  1594  0000E6                     _userInterfaceStatus:
  1595                           	opt stack 0
  1596  0000E6                     	ds	1
  1597  0000E7                     _MSDHostNoData:
  1598                           	opt stack 0
  1599  0000E7                     	ds	1
  1600  0000E8                     _SoftDetach:
  1601                           	opt stack 0
  1602  0000E8                     	ds	1
  1603  0000E9                     _MSDRetryAttempt:
  1604                           	opt stack 0
  1605  0000E9                     	ds	1
  1606  0000EA                     _MSDWriteState:
  1607                           	opt stack 0
  1608  0000EA                     	ds	1
  1609  0000EB                     _MSDReadState:
  1610                           	opt stack 0
  1611  0000EB                     	ds	1
  1612  0000EC                     _MSDCommandState:
  1613                           	opt stack 0
  1614  0000EC                     	ds	1
  1615  0000ED                     _MSD_State:
  1616                           	opt stack 0
  1617  0000ED                     	ds	1
  1618  0000EE                     _USBDeferOUTDataStagePackets:
  1619                           	opt stack 0
  1620  0000EE                     	ds	1
  1621  0000EF                     _USBDeferINDataStagePackets:
  1622                           	opt stack 0
  1623  0000EF                     	ds	1
  1624  0000F0                     _USBStatusStageEnabledFlag2:
  1625                           	opt stack 0
  1626  0000F0                     	ds	1
  1627  0000F1                     _USBStatusStageEnabledFlag1:
  1628                           	opt stack 0
  1629  0000F1                     	ds	1
  1630  0000F2                     _USBDeferStatusStagePacket:
  1631                           	opt stack 0
  1632  0000F2                     	ds	1
  1633  0000F3                     _USBStatusStageTimeoutCounter:
  1634                           	opt stack 0
  1635  0000F3                     	ds	1
  1636  0000F4                     _endpoint_number:
  1637                           	opt stack 0
  1638  0000F4                     	ds	1
  1639  0000F5                     _RemoteWakeup:
  1640                           	opt stack 0
  1641  0000F5                     	ds	1
  1642  0000F6                     _controlTransferState:
  1643                           	opt stack 0
  1644  0000F6                     	ds	1
  1645  0000F7                     _shortPacketStatus:
  1646                           	opt stack 0
  1647  0000F7                     	ds	1
  1648  0000F8                     _USBDeviceState:
  1649                           	opt stack 0
  1650  0000F8                     	ds	1
  1651  0000F9                     _fast_read_cluster_number:
  1652                           	opt stack 0
  1653  0000F9                     	ds	2
  1654  0000FB                     _fast_read_cluster:
  1655                           	opt stack 0
  1656  0000FB                     	ds	2
  1657  0000FD                     _USTATcopy:
  1658                           	opt stack 0
  1659  0000FD                     	ds	1
  1660  0000FE                     _USBActiveConfiguration:
  1661                           	opt stack 0
  1662  0000FE                     	ds	1
  1663                           tblptru	equ	0xFF8
  1664                           tblptrh	equ	0xFF7
  1665                           tblptrl	equ	0xFF6
  1666                           tablat	equ	0xFF5
  1667                           postinc0	equ	0xFEE
  1668                           wreg	equ	0xFE8
  1669                           postdec1	equ	0xFE5
  1670                           fsr1h	equ	0xFE2
  1671                           fsr1l	equ	0xFE1
  1672                           
  1673                           	psect	dataBANK0
  1674  0000FF                     __pdataBANK0:
  1675                           	opt stack 0
  1676  0000FF                     _file_number:
  1677                           	opt stack 0
  1678  0000FF                     	ds	1
  1679                           tblptru	equ	0xFF8
  1680                           tblptrh	equ	0xFF7
  1681                           tblptrl	equ	0xFF6
  1682                           tablat	equ	0xFF5
  1683                           postinc0	equ	0xFEE
  1684                           wreg	equ	0xFE8
  1685                           postdec1	equ	0xFE5
  1686                           fsr1h	equ	0xFE2
  1687                           fsr1l	equ	0xFE1
  1688                           
  1689                           	psect	bssBANK1
  1690  000100                     __pbssBANK1:
  1691                           	opt stack 0
  1692  000100                     _gblCBW:
  1693                           	opt stack 0
  1694  000100                     	ds	31
  1695  00011F                     _gblSenseData:
  1696                           	opt stack 0
  1697  00011F                     	ds	18
  1698  000131                     _outPipes:
  1699                           	opt stack 0
  1700  000131                     	ds	8
  1701  000139                     _communicationSettings:
  1702                           	opt stack 0
  1703  000139                     	ds	7
  1704  000140                     _pBDTEntryOut:
  1705                           	opt stack 0
  1706  000140                     	ds	6
  1707  000146                     _extended_linear_address:
  1708                           	opt stack 0
  1709  000146                     	ds	4
  1710  00014A                     _hex_file_size:
  1711                           	opt stack 0
  1712  00014A                     	ds	4
  1713  00014E                     _file_maximum_address:
  1714                           	opt stack 0
  1715  00014E                     	ds	4
  1716  000152                     _file_minimum_address:
  1717                           	opt stack 0
  1718  000152                     	ds	4
  1719  000156                     _gblBLKLen:
  1720                           	opt stack 0
  1721  000156                     	ds	4
  1722  00015A                     _gblNumBLKS:
  1723                           	opt stack 0
  1724  00015A                     	ds	4
  1725  00015E                     _LBA:
  1726                           	opt stack 0
  1727  00015E                     	ds	4
  1728  000162                     _USB1msTickCount:
  1729                           	opt stack 0
  1730  000162                     	ds	4
  1731  000166                     _config_external:
  1732                           	opt stack 0
  1733  000166                     	ds	3
  1734  000169                     _config_internal:
  1735                           	opt stack 0
  1736  000169                     	ds	3
  1737  00016C                     _ep_data_out:
  1738                           	opt stack 0
  1739  00016C                     	ds	3
  1740  00016F                     _ep_data_in:
  1741                           	opt stack 0
  1742  00016F                     	ds	3
  1743  000172                     _FileAddress:
  1744                           	opt stack 0
  1745  000172                     	ds	2
  1746  000174                     _flash_pages_written:
  1747                           	opt stack 0
  1748  000174                     	ds	2
  1749  000176                     _total_hex_file_entries:
  1750                           	opt stack 0
  1751  000176                     	ds	2
  1752  000178                     _hex_file_entries:
  1753                           	opt stack 0
  1754  000178                     	ds	2
  1755  00017A                     _startup_timer:
  1756                           	opt stack 0
  1757  00017A                     	ds	2
  1758  00017C                     _system_ui_inactive_count:
  1759                           	opt stack 0
  1760  00017C                     	ds	2
  1761  00017E                     _USBInHandle:
  1762                           	opt stack 0
  1763  00017E                     	ds	2
  1764  000180                     _USBOutHandle:
  1765                           	opt stack 0
  1766  000180                     	ds	2
  1767  000182                     _gblMediaPresent:
  1768                           	opt stack 0
  1769  000182                     	ds	2
  1770  000184                     _MSBBufferIndex:
  1771                           	opt stack 0
  1772  000184                     	ds	2
  1773  000186                     _ptrNextData:
  1774                           	opt stack 0
  1775  000186                     	ds	2
  1776  000188                     _pDst:
  1777                           	opt stack 0
  1778  000188                     	ds	2
  1779  00018A                     _active_configuration:
  1780                           	opt stack 0
  1781  00018A                     	ds	1
  1782  00018B                     _start_from_byte_next:
  1783                           	opt stack 0
  1784  00018B                     	ds	1
  1785  00018C                     _last_error:
  1786                           	opt stack 0
  1787  00018C                     	ds	1
  1788  00018D                     _i2c_frequency:
  1789                           	opt stack 0
  1790  00018D                     	ds	1
  1791  00018E                     _MSDCBWValid:
  1792                           	opt stack 0
  1793  00018E                     	ds	1
  1794  00018F                     _gblCBWLength:
  1795                           	opt stack 0
  1796  00018F                     	ds	1
  1797  000190                     _USBTicksSinceSuspendEnd:
  1798                           	opt stack 0
  1799  000190                     	ds	1
  1800  000191                     _BothEP0OutUOWNsSet:
  1801                           	opt stack 0
  1802  000191                     	ds	1
  1803  000192                     _USBBusIsSuspended:
  1804                           	opt stack 0
  1805  000192                     	ds	1
  1806  000193                     _hex_file_entry:
  1807                           	opt stack 0
  1808  000193                     	ds	23
  1809  0001AA                     _mediaInformation:
  1810                           	opt stack 0
  1811  0001AA                     	ds	5
  1812  0001AF                     _USBAlternateInterface:
  1813                           	opt stack 0
  1814  0001AF                     	ds	2
  1815  0001B1                     _active_protocol:
  1816                           	opt stack 0
  1817  0001B1                     	ds	1
  1818  0001B2                     _idle_rate:
  1819                           	opt stack 0
  1820  0001B2                     	ds	1
  1821                           tblptru	equ	0xFF8
  1822                           tblptrh	equ	0xFF7
  1823                           tblptrl	equ	0xFF6
  1824                           tablat	equ	0xFF5
  1825                           postinc0	equ	0xFEE
  1826                           wreg	equ	0xFE8
  1827                           postdec1	equ	0xFE5
  1828                           fsr1h	equ	0xFE2
  1829                           fsr1l	equ	0xFE1
  1830                           
  1831                           	psect	dataBANK1
  1832  0001B3                     __pdataBANK1:
  1833                           	opt stack 0
  1834  0001B3                     _LUN:
  1835                           	opt stack 0
  1836  0001B3                     	ds	20
  1837  0001C7                     i2c_display_send_init_sequence@F6808:
  1838                           	opt stack 0
  1839  0001C7                     	ds	9
  1840  0001D0                     	ds	8
  1841                           tblptru	equ	0xFF8
  1842                           tblptrh	equ	0xFF7
  1843                           tblptrl	equ	0xFF6
  1844                           tablat	equ	0xFF5
  1845                           postinc0	equ	0xFEE
  1846                           wreg	equ	0xFE8
  1847                           postdec1	equ	0xFE5
  1848                           fsr1h	equ	0xFE2
  1849                           fsr1l	equ	0xFE1
  1850                           
  1851                           	psect	bssBANK2
  1852  000200                     __pbssBANK2:
  1853                           	opt stack 0
  1854  000200                     _display_content:
  1855                           	opt stack 0
  1856  000200                     	ds	80
  1857  000250                     _ReceivedDataBuffer:
  1858                           	opt stack 0
  1859  000250                     	ds	64
  1860  000290                     _file_buffer:
  1861                           	opt stack 0
  1862  000290                     	ds	50
  1863                           tblptru	equ	0xFF8
  1864                           tblptrh	equ	0xFF7
  1865                           tblptrl	equ	0xFF6
  1866                           tablat	equ	0xFF5
  1867                           postinc0	equ	0xFEE
  1868                           wreg	equ	0xFE8
  1869                           postdec1	equ	0xFE5
  1870                           fsr1h	equ	0xFE2
  1871                           fsr1l	equ	0xFE1
  1872                           
  1873                           	psect	bssBANK3
  1874  000300                     __pbssBANK3:
  1875                           	opt stack 0
  1876  000300                     __spi_external_rx_buffer:
  1877                           	opt stack 0
  1878  000300                     	ds	64
  1879  000340                     __spi_external_tx_buffer:
  1880                           	opt stack 0
  1881  000340                     	ds	64
  1882  000380                     _ToSendDataBuffer:
  1883                           	opt stack 0
  1884  000380                     	ds	64
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           postinc0	equ	0xFEE
  1890                           wreg	equ	0xFE8
  1891                           postdec1	equ	0xFE5
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           
  1895                           	psect	bssBIGRAMlh
  1896  000800                     __pbssBIGRAMlh:
  1897                           	opt stack 0
  1898  000800                     _pageBuffer:
  1899                           	opt stack 0
  1900  000800                     	ds	1024
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           	psect	bssBIGRAMll
  1912  0003C0                     __pbssBIGRAMll:
  1913                           	opt stack 0
  1914  0003C0                     _buffer:
  1915                           	opt stack 0
  1916  0003C0                     	ds	512
  1917                           tblptru	equ	0xFF8
  1918                           tblptrh	equ	0xFF7
  1919                           tblptrl	equ	0xFF6
  1920                           tablat	equ	0xFF5
  1921                           postinc0	equ	0xFEE
  1922                           wreg	equ	0xFE8
  1923                           postdec1	equ	0xFE5
  1924                           fsr1h	equ	0xFE2
  1925                           fsr1l	equ	0xFE1
  1926                           
  1927                           	psect	cstackBANK0
  1928  000060                     __pcstackBANK0:
  1929                           	opt stack 0
  1930  000060                     fat_create_file@number_of_clusters:
  1931                           	opt stack 0
  1932  000060                     fat_read_from_file_fast@sector:
  1933                           	opt stack 0
  1934  000060                     fat_resize_file@old_number_of_clusters:
  1935                           	opt stack 0
  1936  000060                     fat_modify_file@sector:
  1937                           	opt stack 0
  1938  000060                     __parse_file_rename@data:
  1939                           	opt stack 0
  1940                           
  1941                           ; 2 bytes @ 0x0
  1942  000060                     	ds	2
  1943  000062                     fat_modify_file@file_number:
  1944                           	opt stack 0
  1945  000062                     fat_create_file@first_cluster:
  1946                           	opt stack 0
  1947  000062                     fat_read_from_file_fast@working_cluster:
  1948                           	opt stack 0
  1949  000062                     fat_resize_file@new_number_of_clusters:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x2
  1953  000062                     	ds	1
  1954  000063                     fat_modify_file@return_code:
  1955                           	opt stack 0
  1956                           
  1957                           ; 1 bytes @ 0x3
  1958  000063                     	ds	1
  1959  000064                     fat_create_file@file_number:
  1960                           	opt stack 0
  1961  000064                     fat_read_from_file_fast@offset:
  1962                           	opt stack 0
  1963  000064                     fat_resize_file@first_cluster:
  1964                           	opt stack 0
  1965  000064                     fat_modify_file@cluster:
  1966                           	opt stack 0
  1967                           
  1968                           ; 2 bytes @ 0x4
  1969  000064                     	ds	1
  1970  000065                     fat_create_file@root_entry:
  1971                           	opt stack 0
  1972                           
  1973                           ; 32 bytes @ 0x5
  1974  000065                     	ds	1
  1975  000066                     fat_resize_file@file_number:
  1976                           	opt stack 0
  1977  000066                     fat_read_from_file_fast@needed_cluster:
  1978                           	opt stack 0
  1979  000066                     fat_modify_file@offset:
  1980                           	opt stack 0
  1981                           
  1982                           ; 2 bytes @ 0x6
  1983  000066                     	ds	1
  1984  000067                     fat_resize_file@root:
  1985                           	opt stack 0
  1986                           
  1987                           ; 32 bytes @ 0x7
  1988  000067                     	ds	1
  1989  000068                     fat_read_from_file_fast@read_length:
  1990                           	opt stack 0
  1991  000068                     fat_modify_file@number_of_bytes:
  1992                           	opt stack 0
  1993                           
  1994                           ; 2 bytes @ 0x8
  1995  000068                     	ds	2
  1996  00006A                     fat_read_from_file_fast@position:
  1997                           	opt stack 0
  1998  00006A                     fat_modify_file@position:
  1999                           	opt stack 0
  2000                           
  2001                           ; 4 bytes @ 0xA
  2002  00006A                     	ds	4
  2003  00006E                     ??__bootloader_verify_file:
  2004  00006E                     ??__bootloader_program:
  2005  00006E                     fat_read_from_file@start_byte:
  2006                           	opt stack 0
  2007  00006E                     fat_modify_file@root:
  2008                           	opt stack 0
  2009                           
  2010                           ; 32 bytes @ 0xE
  2011  00006E                     	ds	4
  2012  000072                     fat_read_from_file@length:
  2013                           	opt stack 0
  2014                           
  2015                           ; 4 bytes @ 0x12
  2016  000072                     	ds	4
  2017  000076                     fat_read_from_file@data:
  2018                           	opt stack 0
  2019  000076                     __bootloader_program@buffer:
  2020                           	opt stack 0
  2021  000076                     __bootloader_verify_file@root:
  2022                           	opt stack 0
  2023                           
  2024                           ; 32 bytes @ 0x16
  2025  000076                     	ds	2
  2026  000078                     fat_read_from_file@file_number:
  2027                           	opt stack 0
  2028  000078                     __bootloader_program@entry_page:
  2029                           	opt stack 0
  2030                           
  2031                           ; 2 bytes @ 0x18
  2032  000078                     	ds	1
  2033  000079                     fat_read_from_file@cluster:
  2034                           	opt stack 0
  2035                           
  2036                           ; 2 bytes @ 0x19
  2037  000079                     	ds	1
  2038  00007A                     __bootloader_program@address_within_page:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x1A
  2042  00007A                     	ds	1
  2043  00007B                     fat_read_from_file@cluster_number:
  2044                           	opt stack 0
  2045                           
  2046                           ; 2 bytes @ 0x1B
  2047  00007B                     	ds	1
  2048  00007C                     __bootloader_program@root:
  2049                           	opt stack 0
  2050                           
  2051                           ; 32 bytes @ 0x1C
  2052  00007C                     	ds	1
  2053  00007D                     fat_read_from_file@return_code:
  2054                           	opt stack 0
  2055                           
  2056                           ; 1 bytes @ 0x1D
  2057  00007D                     	ds	1
  2058  00007E                     fat_read_from_file@root:
  2059                           	opt stack 0
  2060                           
  2061                           ; 32 bytes @ 0x1E
  2062  00007E                     	ds	16
  2063  00008E                     fat_append_to_file@new_file_size:
  2064                           	opt stack 0
  2065                           
  2066                           ; 4 bytes @ 0x2E
  2067  00008E                     	ds	4
  2068  000092                     fat_append_to_file@return_code:
  2069                           	opt stack 0
  2070                           
  2071                           ; 1 bytes @ 0x32
  2072  000092                     	ds	1
  2073  000093                     fat_append_to_file@old_file_size:
  2074                           	opt stack 0
  2075                           
  2076                           ; 4 bytes @ 0x33
  2077  000093                     	ds	3
  2078  000096                     __bootloader_verify_file@rec_counter:
  2079                           	opt stack 0
  2080                           
  2081                           ; 1 bytes @ 0x36
  2082  000096                     	ds	1
  2083  000097                     fat_append_to_file@file_number:
  2084                           	opt stack 0
  2085  000097                     __bootloader_verify_file@return_value:
  2086                           	opt stack 0
  2087                           
  2088                           ; 4 bytes @ 0x37
  2089  000097                     	ds	1
  2090  000098                     __parse_command_long@data:
  2091                           	opt stack 0
  2092                           
  2093                           ; 2 bytes @ 0x38
  2094  000098                     	ds	2
  2095  00009A                     __parse_command_long@length:
  2096                           	opt stack 0
  2097                           
  2098                           ; 1 bytes @ 0x3A
  2099  00009A                     	ds	1
  2100  00009B                     api_parse@inBuffer:
  2101                           	opt stack 0
  2102  00009B                     __bootloader_verify_file@address32:
  2103                           	opt stack 0
  2104                           
  2105                           ; 4 bytes @ 0x3B
  2106  00009B                     	ds	1
  2107  00009C                     __bootloader_program@return_value:
  2108                           	opt stack 0
  2109                           
  2110                           ; 4 bytes @ 0x3C
  2111  00009C                     	ds	1
  2112  00009D                     api_parse@receivedDataLength:
  2113                           	opt stack 0
  2114                           
  2115                           ; 1 bytes @ 0x3D
  2116  00009D                     	ds	1
  2117  00009E                     ??_api_parse:
  2118  00009E                     __fill_buffer_read_file@inBuffer:
  2119                           	opt stack 0
  2120                           
  2121                           ; 2 bytes @ 0x3E
  2122  00009E                     	ds	2
  2123  0000A0                     api_parse@idx:
  2124                           	opt stack 0
  2125  0000A0                     __fill_buffer_read_file@outBuffer:
  2126                           	opt stack 0
  2127  0000A0                     __bootloader_program@address32:
  2128                           	opt stack 0
  2129                           
  2130                           ; 4 bytes @ 0x40
  2131  0000A0                     	ds	2
  2132  0000A2                     ??__fill_buffer_read_file:
  2133                           
  2134                           ; 1 bytes @ 0x42
  2135  0000A2                     	ds	2
  2136  0000A4                     __bootloader_program@start_from_byte:
  2137                           	opt stack 0
  2138                           
  2139                           ; 1 bytes @ 0x44
  2140  0000A4                     	ds	1
  2141  0000A5                     __bootloader_program@cntr:
  2142                           	opt stack 0
  2143                           
  2144                           ; 2 bytes @ 0x45
  2145  0000A5                     	ds	1
  2146  0000A6                     __fill_buffer_read_file@file_size:
  2147                           	opt stack 0
  2148                           
  2149                           ; 4 bytes @ 0x46
  2150  0000A6                     	ds	1
  2151  0000A7                     __bootloader_program@page_to_write:
  2152                           	opt stack 0
  2153                           
  2154                           ; 2 bytes @ 0x47
  2155  0000A7                     	ds	3
  2156  0000AA                     __fill_buffer_read_file@data_length:
  2157                           	opt stack 0
  2158                           
  2159                           ; 4 bytes @ 0x4A
  2160  0000AA                     	ds	4
  2161  0000AE                     __fill_buffer_read_file@start:
  2162                           	opt stack 0
  2163                           
  2164                           ; 4 bytes @ 0x4E
  2165  0000AE                     	ds	4
  2166  0000B2                     api_prepare@inBuffer:
  2167                           	opt stack 0
  2168                           
  2169                           ; 2 bytes @ 0x52
  2170  0000B2                     	ds	2
  2171  0000B4                     api_prepare@outBuffer:
  2172                           	opt stack 0
  2173                           
  2174                           ; 2 bytes @ 0x54
  2175  0000B4                     	ds	2
  2176  0000B6                     api_prepare@command:
  2177                           	opt stack 0
  2178                           
  2179                           ; 1 bytes @ 0x56
  2180  0000B6                     	ds	1
  2181  0000B7                     ??_APP_DeviceCustomHIDTasks:
  2182                           
  2183                           ; 1 bytes @ 0x57
  2184  0000B7                     	ds	4
  2185  0000BB                     ??_main:
  2186                           
  2187                           ; 1 bytes @ 0x5B
  2188  0000BB                     	ds	2
  2189  0000BD                     main@tx_start_addr:
  2190                           	opt stack 0
  2191                           
  2192                           ; 2 bytes @ 0x5D
  2193  0000BD                     	ds	2
  2194  0000BF                     main@bytes_transmitted:
  2195                           	opt stack 0
  2196                           
  2197                           ; 2 bytes @ 0x5F
  2198  0000BF                     	ds	2
  2199  0000C1                     main@rx_buffer:
  2200                           	opt stack 0
  2201                           
  2202                           ; 2 bytes @ 0x61
  2203  0000C1                     	ds	2
  2204  0000C3                     main@tx_buffer:
  2205                           	opt stack 0
  2206                           
  2207                           ; 2 bytes @ 0x63
  2208  0000C3                     	ds	2
  2209                           tblptru	equ	0xFF8
  2210                           tblptrh	equ	0xFF7
  2211                           tblptrl	equ	0xFF6
  2212                           tablat	equ	0xFF5
  2213                           postinc0	equ	0xFEE
  2214                           wreg	equ	0xFE8
  2215                           postdec1	equ	0xFE5
  2216                           fsr1h	equ	0xFE2
  2217                           fsr1l	equ	0xFE1
  2218                           
  2219                           	psect	cstackCOMRAM
  2220  000001                     __pcstackCOMRAM:
  2221                           	opt stack 0
  2222  000001                     ??_USBStdGetDscHandler:
  2223  000001                     ??_USBStdGetStatusHandler:
  2224  000001                     ??_system_delay_ms:
  2225  000001                     ??__i2c_wait_idle:
  2226  000001                     ??__display_clear:
  2227  000001                     ?_USBTransferOnePacket:
  2228                           	opt stack 0
  2229  000001                     ?_spi_get_external_rx_buffer:
  2230                           	opt stack 0
  2231  000001                     ?_spi_get_external_tx_buffer:
  2232                           	opt stack 0
  2233  000001                     ?_ExternalFlash_MediaInitialize:
  2234                           	opt stack 0
  2235  000001                     ?_ExternalFlash_SectorSizeRead:
  2236                           	opt stack 0
  2237  000001                     ?_bootloader_get_entries:
  2238                           	opt stack 0
  2239  000001                     ?_bootloader_get_total_entries:
  2240                           	opt stack 0
  2241  000001                     ?_bootloader_get_rec_address:
  2242                           	opt stack 0
  2243  000001                     ?_bootloader_get_flashPagesWritten:
  2244                           	opt stack 0
  2245  000001                     ?_strncmp:
  2246                           	opt stack 0
  2247  000001                     ?_internalFlash_pageFromAddress:
  2248                           	opt stack 0
  2249  000001                     ?_internalFlash_getBuffer:
  2250                           	opt stack 0
  2251  000001                     ?__sector_from_file_number:
  2252                           	opt stack 0
  2253  000001                     ?__offset_from_file_number:
  2254                           	opt stack 0
  2255  000001                     ?__data_sector_from_cluster:
  2256                           	opt stack 0
  2257  000001                     ?__fat_sector_from_cluster:
  2258                           	opt stack 0
  2259  000001                     ?__fat_offset_from_cluster:
  2260                           	opt stack 0
  2261  000001                     ?__cluster_from_sector_and_offset:
  2262                           	opt stack 0
  2263  000001                     ?__get_available_offset_from_buffer:
  2264                           	opt stack 0
  2265  000001                     ?__read_value_from_offset:
  2266                           	opt stack 0
  2267  000001                     ?__get_time:
  2268                           	opt stack 0
  2269  000001                     ?__get_date:
  2270                           	opt stack 0
  2271  000001                     ?_bootloader_get_rec_dataLength:
  2272                           	opt stack 0
  2273  000001                     ?___lwdiv:
  2274                           	opt stack 0
  2275  000001                     ?___lwmod:
  2276                           	opt stack 0
  2277  000001                     ?_ExternalFlash_CapacityRead:
  2278                           	opt stack 0
  2279  000001                     ?_bootloader_get_file_size:
  2280                           	opt stack 0
  2281  000001                     ?_internalFlash_addressFromPage:
  2282                           	opt stack 0
  2283  000001                     ?___lldiv:
  2284                           	opt stack 0
  2285  000001                     ?___llmod:
  2286                           	opt stack 0
  2287  000001                     USBTransferOnePacket@dir:
  2288                           	opt stack 0
  2289  000001                     USBStallEndpoint@dir:
  2290                           	opt stack 0
  2291  000001                     USBConfigureEndpoint@direction:
  2292                           	opt stack 0
  2293  000001                     USBCtrlTrfTxService@byteToSend:
  2294                           	opt stack 0
  2295  000001                     USBCtrlTrfRxService@i:
  2296                           	opt stack 0
  2297  000001                     __i2c_send@dat:
  2298                           	opt stack 0
  2299  000001                     i2c_set_frequency@frequency:
  2300                           	opt stack 0
  2301  000001                     display_get_character@position:
  2302                           	opt stack 0
  2303  000001                     __display_search@cntr:
  2304                           	opt stack 0
  2305  000001                     __display_rebooting@cntr:
  2306                           	opt stack 0
  2307  000001                     hexCharToUint8@c:
  2308                           	opt stack 0
  2309  000001                     bootloader_get_rec_data@index:
  2310                           	opt stack 0
  2311  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2312                           	opt stack 0
  2313  000001                     spi_set_configuration@configuration:
  2314                           	opt stack 0
  2315  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2316                           	opt stack 0
  2317  000001                     SYSTEM_Initialize@pll_startup_counter:
  2318                           	opt stack 0
  2319  000001                     ExternalFlash_MediaInitialize@config:
  2320                           	opt stack 0
  2321  000001                     ExternalFlash_SectorSizeRead@config:
  2322                           	opt stack 0
  2323  000001                     ExternalFlash_CapacityRead@config:
  2324                           	opt stack 0
  2325  000001                     ExternalFlash_MediaDetect@config:
  2326                           	opt stack 0
  2327  000001                     ExternalFlash_WriteProtectStateGet@config:
  2328                           	opt stack 0
  2329  000001                     __data_sector_from_cluster@fat_cluster:
  2330                           	opt stack 0
  2331  000001                     __fat_sector_from_cluster@cluster:
  2332                           	opt stack 0
  2333  000001                     __fat_offset_from_cluster@cluster:
  2334                           	opt stack 0
  2335  000001                     __cluster_from_sector_and_offset@sector:
  2336                           	opt stack 0
  2337  000001                     __get_available_offset_from_buffer@minimum_offset:
  2338                           	opt stack 0
  2339  000001                     __read_value_from_offset@offset:
  2340                           	opt stack 0
  2341  000001                     __write_value_to_offset@offset:
  2342                           	opt stack 0
  2343  000001                     __get_mbr@idx:
  2344                           	opt stack 0
  2345  000001                     __get_fbr@idx:
  2346                           	opt stack 0
  2347  000001                     __get_fat@idx:
  2348                           	opt stack 0
  2349  000001                     __get_root@idx:
  2350                           	opt stack 0
  2351  000001                     __get_data@idx:
  2352                           	opt stack 0
  2353  000001                     internalFlash_addressFromPage@page:
  2354                           	opt stack 0
  2355  000001                     __fill_buffer_get_configuration@outBuffer:
  2356                           	opt stack 0
  2357  000001                     spi_tx@data:
  2358                           	opt stack 0
  2359  000001                     spi_tx_tx@command:
  2360                           	opt stack 0
  2361  000001                     spi_tx_rx@command:
  2362                           	opt stack 0
  2363  000001                     ___lwdiv@dividend:
  2364                           	opt stack 0
  2365  000001                     ___lwmod@dividend:
  2366                           	opt stack 0
  2367  000001                     memcpy@d1:
  2368                           	opt stack 0
  2369  000001                     memset@p1:
  2370                           	opt stack 0
  2371  000001                     strncmp@s1:
  2372                           	opt stack 0
  2373  000001                     __spi_init@details:
  2374                           	opt stack 0
  2375  000001                     __bootloader_check_address@address:
  2376                           	opt stack 0
  2377  000001                     internalFlash_pageFromAddress@address:
  2378                           	opt stack 0
  2379  000001                     ___lldiv@dividend:
  2380                           	opt stack 0
  2381  000001                     ___llmod@dividend:
  2382                           	opt stack 0
  2383                           
  2384                           ; 4 bytes @ 0x0
  2385  000001                     	ds	1
  2386  000002                     ??_USBConfigureEndpoint:
  2387  000002                     ??_USBStallEndpoint:
  2388  000002                     ??_display_get_character:
  2389  000002                     USBCtrlTrfRxService@byteToRead:
  2390                           	opt stack 0
  2391  000002                     USBCtrlTrfInHandler@lastDTS:
  2392                           	opt stack 0
  2393  000002                     system_delay_ms@ms:
  2394                           	opt stack 0
  2395  000002                     hexCharToUint8@ascii:
  2396                           	opt stack 0
  2397  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2398                           	opt stack 0
  2399  000002                     USBTransferOnePacket@data:
  2400                           	opt stack 0
  2401  000002                     USBStdGetStatusHandler@p:
  2402                           	opt stack 0
  2403                           
  2404                           ; 2 bytes @ 0x1
  2405  000002                     	ds	1
  2406  000003                     ??_MSDComputeDeviceInAndResidue:
  2407  000003                     ??__get_mbr:
  2408  000003                     ??__get_fbr:
  2409  000003                     ??__get_fat:
  2410  000003                     ??__get_root:
  2411  000003                     ?_hexCharsToUint16:
  2412                           	opt stack 0
  2413  000003                     system_delay_ms@cntr:
  2414                           	opt stack 0
  2415  000003                     __display_clear@row:
  2416                           	opt stack 0
  2417  000003                     __sector_from_file_number@file_number:
  2418                           	opt stack 0
  2419  000003                     __offset_from_file_number@file_number:
  2420                           	opt stack 0
  2421  000003                     hexCharsToUint8@c2:
  2422                           	opt stack 0
  2423  000003                     hexCharsToUint16@c2:
  2424                           	opt stack 0
  2425  000003                     SYSTEM_Initialize@pll_startup_counter_3113:
  2426                           	opt stack 0
  2427  000003                     __cluster_from_sector_and_offset@offset:
  2428                           	opt stack 0
  2429  000003                     __get_available_offset_from_buffer@buffer:
  2430                           	opt stack 0
  2431  000003                     __read_value_from_offset@buffer:
  2432                           	opt stack 0
  2433  000003                     __write_value_to_offset@buffer:
  2434                           	opt stack 0
  2435  000003                     internalFlash_erasePage@page:
  2436                           	opt stack 0
  2437  000003                     internalFlash_writePage@page:
  2438                           	opt stack 0
  2439  000003                     spi_tx@length:
  2440                           	opt stack 0
  2441  000003                     spi_tx_tx@command_length:
  2442                           	opt stack 0
  2443  000003                     spi_tx_rx@command_length:
  2444                           	opt stack 0
  2445  000003                     ___lwdiv@divisor:
  2446                           	opt stack 0
  2447  000003                     ___lwmod@divisor:
  2448                           	opt stack 0
  2449  000003                     memset@c:
  2450                           	opt stack 0
  2451  000003                     strncmp@s2:
  2452                           	opt stack 0
  2453  000003                     memcpy@s1:
  2454                           	opt stack 0
  2455                           
  2456                           ; 3 bytes @ 0x2
  2457  000003                     	ds	1
  2458  000004                     ??_hexCharsToUint8:
  2459  000004                     USBTransferOnePacket@len:
  2460                           	opt stack 0
  2461  000004                     display_get_character@line:
  2462                           	opt stack 0
  2463  000004                     __display_clear@col:
  2464                           	opt stack 0
  2465  000004                     hexCharsToUint16@c3:
  2466                           	opt stack 0
  2467  000004                     spi_init@configuration:
  2468                           	opt stack 0
  2469  000004                     __sector_from_file_number@sector:
  2470                           	opt stack 0
  2471  000004                     __offset_from_file_number@offset:
  2472                           	opt stack 0
  2473                           
  2474                           ; 2 bytes @ 0x3
  2475  000004                     	ds	1
  2476  000005                     ??_USBTransferOnePacket:
  2477  000005                     ??_spi_tx:
  2478  000005                     ??_internalFlash_pageFromAddress:
  2479  000005                     ??__get_available_offset_from_buffer:
  2480  000005                     ??__read_value_from_offset:
  2481  000005                     SYSTEM_Initialize@state:
  2482                           	opt stack 0
  2483  000005                     hexCharsToUint8@c1:
  2484                           	opt stack 0
  2485  000005                     hexCharsToUint16@c4:
  2486                           	opt stack 0
  2487  000005                     __bootloader_check_address@dataLength:
  2488                           	opt stack 0
  2489  000005                     ___lwmod@counter:
  2490                           	opt stack 0
  2491  000005                     __write_value_to_offset@value:
  2492                           	opt stack 0
  2493  000005                     __fill_buffer_get_display@outBuffer:
  2494                           	opt stack 0
  2495  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2496                           	opt stack 0
  2497  000005                     spi_tx_tx@data:
  2498                           	opt stack 0
  2499  000005                     spi_tx_rx@data:
  2500                           	opt stack 0
  2501  000005                     ___lwdiv@quotient:
  2502                           	opt stack 0
  2503  000005                     memset@n:
  2504                           	opt stack 0
  2505  000005                     strncmp@len:
  2506                           	opt stack 0
  2507  000005                     internalFlash_erasePage@address:
  2508                           	opt stack 0
  2509  000005                     internalFlash_writePage@address:
  2510                           	opt stack 0
  2511  000005                     internalFlash_addressFromPage@address:
  2512                           	opt stack 0
  2513  000005                     ___lldiv@divisor:
  2514                           	opt stack 0
  2515  000005                     ___llmod@divisor:
  2516                           	opt stack 0
  2517                           
  2518                           ; 4 bytes @ 0x4
  2519  000005                     	ds	1
  2520  000006                     ??_hexCharsToUint16:
  2521  000006                     ??__bootloader_check_address:
  2522  000006                     USBStallEndpoint@ep:
  2523                           	opt stack 0
  2524  000006                     USBConfigureEndpoint@EPNum:
  2525                           	opt stack 0
  2526  000006                     hexCharsToUint8@retVal:
  2527                           	opt stack 0
  2528  000006                     __i2c_write@data:
  2529                           	opt stack 0
  2530  000006                     __i2c_read@data:
  2531                           	opt stack 0
  2532  000006                     i2c_display_write_fixed@data:
  2533                           	opt stack 0
  2534  000006                     memcpy@n:
  2535                           	opt stack 0
  2536                           
  2537                           ; 2 bytes @ 0x5
  2538  000006                     	ds	1
  2539  000007                     ??_strncmp:
  2540  000007                     ??__fill_buffer_get_bootloader_details:
  2541  000007                     ??__write_value_to_offset:
  2542  000007                     __fill_buffer_get_display@secondHalf:
  2543                           	opt stack 0
  2544  000007                     ___lwdiv@counter:
  2545                           	opt stack 0
  2546  000007                     USBStallEndpoint@p:
  2547                           	opt stack 0
  2548  000007                     USBConfigureEndpoint@handle:
  2549                           	opt stack 0
  2550  000007                     __get_available_offset_from_buffer@offset:
  2551                           	opt stack 0
  2552  000007                     spi_tx_tx@data_length:
  2553                           	opt stack 0
  2554  000007                     spi_tx_rx@data_length:
  2555                           	opt stack 0
  2556  000007                     memset@p:
  2557                           	opt stack 0
  2558                           
  2559                           ; 2 bytes @ 0x6
  2560  000007                     	ds	1
  2561  000008                     ??__fill_buffer_get_display:
  2562  000008                     __i2c_write@length:
  2563                           	opt stack 0
  2564  000008                     __i2c_read@length:
  2565                           	opt stack 0
  2566  000008                     i2c_display_write_fixed@length:
  2567                           	opt stack 0
  2568  000008                     __read_value_from_offset@value:
  2569                           	opt stack 0
  2570  000008                     utoa@buf:
  2571                           	opt stack 0
  2572  000008                     memcpy@s:
  2573                           	opt stack 0
  2574                           
  2575                           ; 3 bytes @ 0x7
  2576  000008                     	ds	1
  2577  000009                     ??_spi_tx_rx:
  2578  000009                     ??_spi_tx_tx:
  2579  000009                     ??__i2c_read:
  2580  000009                     ?_internalFlash_addressWithinPage:
  2581                           	opt stack 0
  2582  000009                     USBDeviceInit@i:
  2583                           	opt stack 0
  2584  000009                     USBEnableEndpoint@options:
  2585                           	opt stack 0
  2586  000009                     USBTransferOnePacket@ep:
  2587                           	opt stack 0
  2588  000009                     MSDErrorHandler@ErrorCase:
  2589                           	opt stack 0
  2590  000009                     __i2c_write@slave_address:
  2591                           	opt stack 0
  2592  000009                     i2c_display_write_fixed@pos:
  2593                           	opt stack 0
  2594  000009                     __flash_wakeup@command:
  2595                           	opt stack 0
  2596  000009                     hexCharsToUint16@c1:
  2597                           	opt stack 0
  2598  000009                     ___llmod@counter:
  2599                           	opt stack 0
  2600  000009                     internalFlash_writePage@cntr:
  2601                           	opt stack 0
  2602  000009                     internalFlash_addressWithinPage@address:
  2603                           	opt stack 0
  2604  000009                     ___lldiv@quotient:
  2605                           	opt stack 0
  2606                           
  2607                           ; 4 bytes @ 0x8
  2608  000009                     	ds	1
  2609  00000A                     MSDErrorHandler@OldMSD_State:
  2610                           	opt stack 0
  2611  00000A                     __i2c_write@cntr:
  2612                           	opt stack 0
  2613  00000A                     __bootloader_check_address@worst_case:
  2614                           	opt stack 0
  2615  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2616                           	opt stack 0
  2617  00000A                     USBEnableEndpoint@p:
  2618                           	opt stack 0
  2619  00000A                     USBTransferOnePacket@handle:
  2620                           	opt stack 0
  2621  00000A                     hexCharsToUint16@retVal:
  2622                           	opt stack 0
  2623  00000A                     utoa@val:
  2624                           	opt stack 0
  2625                           
  2626                           ; 2 bytes @ 0x9
  2627  00000A                     	ds	1
  2628  00000B                     __ic2_display_set_address@address:
  2629                           	opt stack 0
  2630  00000B                     i2c_digipot_backlight@level:
  2631                           	opt stack 0
  2632  00000B                     __bootloader_check_address@byte_status:
  2633                           	opt stack 0
  2634  00000B                     internalFlash_writePage@block_cntr:
  2635                           	opt stack 0
  2636  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2637                           	opt stack 0
  2638  00000B                     i2c_digipot_reset_on@data_array:
  2639                           	opt stack 0
  2640  00000B                     i2c_digipot_reset_off@data_array:
  2641                           	opt stack 0
  2642  00000B                     i2c_eeprom_writeByte@address:
  2643                           	opt stack 0
  2644  00000B                     memcpy@d:
  2645                           	opt stack 0
  2646  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2647                           	opt stack 0
  2648  00000B                     i2c_display_send_init_sequence@init_sequence:
  2649                           	opt stack 0
  2650                           
  2651                           ; 9 bytes @ 0xA
  2652  00000B                     	ds	1
  2653  00000C                     ??_USBMSDInit:
  2654  00000C                     ?_parseHexFileEntry:
  2655                           	opt stack 0
  2656  00000C                     USBEnableEndpoint@ep:
  2657                           	opt stack 0
  2658  00000C                     __bootloader_check_address@cntr:
  2659                           	opt stack 0
  2660  00000C                     internalFlash_writePage@byte_cntr:
  2661                           	opt stack 0
  2662  00000C                     _USBCheckMSDRequest$2319:
  2663                           	opt stack 0
  2664  00000C                     MSDTransferTerminated@handle:
  2665                           	opt stack 0
  2666  00000C                     __ic2_display_set_address@data_array:
  2667                           	opt stack 0
  2668  00000C                     i2c_digipot_backlight@data_array:
  2669                           	opt stack 0
  2670  00000C                     parseHexFileEntry@data:
  2671                           	opt stack 0
  2672  00000C                     utoa@base:
  2673                           	opt stack 0
  2674  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2675                           	opt stack 0
  2676                           
  2677                           ; 4 bytes @ 0xB
  2678  00000C                     	ds	1
  2679  00000D                     ?__flash_get_status:
  2680                           	opt stack 0
  2681  00000D                     i2c_eeprom_writeByte@data:
  2682                           	opt stack 0
  2683  00000D                     __fill_buffer_get_display@cntr:
  2684                           	opt stack 0
  2685  00000D                     ___lldiv@counter:
  2686                           	opt stack 0
  2687  00000D                     memcpy@tmp:
  2688                           	opt stack 0
  2689  00000D                     internalFlash_addressWithinPage@page:
  2690                           	opt stack 0
  2691                           
  2692                           ; 2 bytes @ 0xC
  2693  00000D                     	ds	1
  2694  00000E                     ??_i2c_eeprom_writeByte:
  2695  00000E                     i2c_display_cursor@position:
  2696                           	opt stack 0
  2697  00000E                     __fill_buffer_get_display@line:
  2698                           	opt stack 0
  2699  00000E                     _USBCheckMSDRequest$2320:
  2700                           	opt stack 0
  2701  00000E                     _MSDTransferTerminated$2407:
  2702                           	opt stack 0
  2703  00000E                     utoa@v:
  2704                           	opt stack 0
  2705  00000E                     parseHexFileEntry@offset:
  2706                           	opt stack 0
  2707  00000E                     internalFlash_read@address:
  2708                           	opt stack 0
  2709                           
  2710                           ; 4 bytes @ 0xD
  2711  00000E                     	ds	1
  2712  00000F                     ??_internalFlash_addressWithinPage:
  2713  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2714                           	opt stack 0
  2715  00000F                     i2c_display_cursor@line:
  2716                           	opt stack 0
  2717  00000F                     __flash_get_status@command:
  2718                           	opt stack 0
  2719  00000F                     __fill_buffer_get_display@start_line:
  2720                           	opt stack 0
  2721                           
  2722                           ; 1 bytes @ 0xE
  2723  00000F                     	ds	1
  2724  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2725                           	opt stack 0
  2726  000010                     __i2c_read@slave_address:
  2727                           	opt stack 0
  2728  000010                     i2c_display_cursor@address:
  2729                           	opt stack 0
  2730  000010                     __fill_buffer_get_display@position:
  2731                           	opt stack 0
  2732  000010                     utoa@c:
  2733                           	opt stack 0
  2734  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2735                           	opt stack 0
  2736  000010                     __flash_get_status@status:
  2737                           	opt stack 0
  2738  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2739                           	opt stack 0
  2740                           
  2741                           ; 2 bytes @ 0xF
  2742  000010                     	ds	1
  2743  000011                     MSDCheckForErrorCases@DeviceNoData:
  2744                           	opt stack 0
  2745  000011                     __i2c_read@cntr:
  2746                           	opt stack 0
  2747  000011                     i2c_eeprom_writeByte@dat:
  2748                           	opt stack 0
  2749  000011                     itoa@buf:
  2750                           	opt stack 0
  2751                           
  2752                           ; 2 bytes @ 0x10
  2753  000011                     	ds	1
  2754  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2755                           	opt stack 0
  2756  000012                     i2c_eeprom_readByte@address:
  2757                           	opt stack 0
  2758  000012                     __flash_is_busy@status:
  2759                           	opt stack 0
  2760  000012                     parseHexFileEntry@hexEntry:
  2761                           	opt stack 0
  2762  000012                     internalFlash_read@data_length:
  2763                           	opt stack 0
  2764                           
  2765                           ; 2 bytes @ 0x11
  2766  000012                     	ds	1
  2767  000013                     i2c_eeprom_writeByte@slave_address:
  2768                           	opt stack 0
  2769  000013                     itoa@val:
  2770                           	opt stack 0
  2771  000013                     internalFlash_addressWithinPage@page_start_address:
  2772                           	opt stack 0
  2773                           
  2774                           ; 4 bytes @ 0x12
  2775  000013                     	ds	1
  2776  000014                     ??_i2c_eeprom_readByte:
  2777  000014                     ??_parseHexFileEntry:
  2778  000014                     flash_is_busy@result:
  2779                           	opt stack 0
  2780  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2781                           	opt stack 0
  2782  000014                     __flash_copy_page_to_buffer@page:
  2783                           	opt stack 0
  2784  000014                     __flash_compare_page_to_buffer@page:
  2785                           	opt stack 0
  2786  000014                     __flash_write_to_buffer@start:
  2787                           	opt stack 0
  2788  000014                     __flash_write_page_from_buffer@page:
  2789                           	opt stack 0
  2790  000014                     __flash_partial_read@page:
  2791                           	opt stack 0
  2792  000014                     __flash_buffer_read@start:
  2793                           	opt stack 0
  2794  000014                     internalFlash_read@buffer:
  2795                           	opt stack 0
  2796  000014                     __flash_set_page_size@command:
  2797                           	opt stack 0
  2798                           
  2799                           ; 4 bytes @ 0x13
  2800  000014                     	ds	1
  2801  000015                     __fill_buffer_get_status@outBuffer:
  2802                           	opt stack 0
  2803  000015                     itoa@base:
  2804                           	opt stack 0
  2805                           
  2806                           ; 2 bytes @ 0x14
  2807  000015                     	ds	1
  2808  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2809  000016                     __flash_copy_page_to_buffer@buffer:
  2810                           	opt stack 0
  2811  000016                     __flash_compare_page_to_buffer@buffer:
  2812                           	opt stack 0
  2813  000016                     __flash_write_page_from_buffer@buffer:
  2814                           	opt stack 0
  2815  000016                     __flash_write_to_buffer@data:
  2816                           	opt stack 0
  2817  000016                     __flash_partial_read@start:
  2818                           	opt stack 0
  2819  000016                     __flash_buffer_read@length:
  2820                           	opt stack 0
  2821  000016                     internalFlash_readPage@page:
  2822                           	opt stack 0
  2823                           
  2824                           ; 2 bytes @ 0x15
  2825  000016                     	ds	1
  2826  000017                     ??__flash_copy_page_to_buffer:
  2827  000017                     ??__flash_compare_page_to_buffer:
  2828  000017                     ??__flash_write_page_from_buffer:
  2829  000017                     i2c_eeprom_readByte@slave_address:
  2830                           	opt stack 0
  2831  000017                     itoa@cp:
  2832                           	opt stack 0
  2833                           
  2834                           ; 2 bytes @ 0x16
  2835  000017                     	ds	1
  2836  000018                     ??_USBStdFeatureReqHandler:
  2837  000018                     USBStdSetCfgHandler@i:
  2838                           	opt stack 0
  2839  000018                     i2c_eeprom_readByte@addr:
  2840                           	opt stack 0
  2841  000018                     __flash_set_page_size@size:
  2842                           	opt stack 0
  2843  000018                     __flash_write_to_buffer@data_length:
  2844                           	opt stack 0
  2845  000018                     __flash_partial_read@length:
  2846                           	opt stack 0
  2847  000018                     __flash_buffer_read@data:
  2848                           	opt stack 0
  2849  000018                     internalFlash_readPage@address:
  2850                           	opt stack 0
  2851                           
  2852                           ; 4 bytes @ 0x17
  2853  000018                     	ds	1
  2854  000019                     USBStdFeatureReqHandler@pUEP:
  2855                           	opt stack 0
  2856  000019                     __display_itoa_u16@value:
  2857                           	opt stack 0
  2858                           
  2859                           ; 4 bytes @ 0x18
  2860  000019                     	ds	1
  2861  00001A                     __flash_write_to_buffer@buffer:
  2862                           	opt stack 0
  2863  00001A                     __flash_buffer_read@buffer:
  2864                           	opt stack 0
  2865  00001A                     __flash_compare_page_to_buffer@status:
  2866                           	opt stack 0
  2867  00001A                     __flash_partial_read@data:
  2868                           	opt stack 0
  2869  00001A                     __flash_copy_page_to_buffer@command:
  2870                           	opt stack 0
  2871  00001A                     __flash_write_page_from_buffer@command:
  2872                           	opt stack 0
  2873                           
  2874                           ; 4 bytes @ 0x19
  2875  00001A                     	ds	1
  2876  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2877                           	opt stack 0
  2878  00001B                     __flash_write_to_buffer@command:
  2879                           	opt stack 0
  2880  00001B                     __flash_buffer_read@command:
  2881                           	opt stack 0
  2882                           
  2883                           ; 4 bytes @ 0x1A
  2884  00001B                     	ds	1
  2885  00001C                     ??__flash_partial_read:
  2886  00001C                     parseHexFileEntry@i:
  2887                           	opt stack 0
  2888  00001C                     USBStdFeatureReqHandler@p:
  2889                           	opt stack 0
  2890  00001C                     __flash_compare_page_to_buffer@command:
  2891                           	opt stack 0
  2892                           
  2893                           ; 4 bytes @ 0x1B
  2894  00001C                     	ds	1
  2895  00001D                     __display_itoa_u16@text:
  2896                           	opt stack 0
  2897                           
  2898                           ; 2 bytes @ 0x1C
  2899  00001D                     	ds	1
  2900  00001E                     ??_USBCtrlEPService:
  2901  00001E                     flash_copy_page_to_buffer@page:
  2902                           	opt stack 0
  2903  00001E                     flash_write_page_from_buffer@page:
  2904                           	opt stack 0
  2905                           
  2906                           ; 2 bytes @ 0x1D
  2907  00001E                     	ds	1
  2908  00001F                     ??__display_verify:
  2909  00001F                     ??__display_checked:
  2910  00001F                     __display_programming@cntr:
  2911                           	opt stack 0
  2912  00001F                     __display_done@cntr:
  2913                           	opt stack 0
  2914  00001F                     flash_read_from_buffer@start:
  2915                           	opt stack 0
  2916  00001F                     flash_write_to_buffer@start:
  2917                           	opt stack 0
  2918  00001F                     __display_itoa_u32@value:
  2919                           	opt stack 0
  2920                           
  2921                           ; 4 bytes @ 0x1E
  2922  00001F                     	ds	1
  2923  000020                     USBDeviceTasks@i:
  2924                           	opt stack 0
  2925  000020                     flash_sector_write@page:
  2926                           	opt stack 0
  2927  000020                     flash_partial_write@page:
  2928                           	opt stack 0
  2929  000020                     __flash_partial_read@command:
  2930                           	opt stack 0
  2931                           
  2932                           ; 4 bytes @ 0x1F
  2933  000020                     	ds	1
  2934  000021                     __display_verify@cntr:
  2935                           	opt stack 0
  2936  000021                     __display_checked@start:
  2937                           	opt stack 0
  2938  000021                     flash_read_from_buffer@length:
  2939                           	opt stack 0
  2940  000021                     flash_write_to_buffer@length:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x20
  2944  000021                     	ds	1
  2945  000022                     __display_checked@cntr:
  2946                           	opt stack 0
  2947  000022                     flash_sector_write@data:
  2948                           	opt stack 0
  2949  000022                     flash_partial_write@start:
  2950                           	opt stack 0
  2951                           
  2952                           ; 2 bytes @ 0x21
  2953  000022                     	ds	1
  2954  000023                     __display_itoa_u32@text:
  2955                           	opt stack 0
  2956  000023                     flash_read_from_buffer@data:
  2957                           	opt stack 0
  2958  000023                     flash_write_to_buffer@data:
  2959                           	opt stack 0
  2960                           
  2961                           ; 2 bytes @ 0x22
  2962  000023                     	ds	1
  2963  000024                     flash_sector_write@match:
  2964                           	opt stack 0
  2965  000024                     flash_partial_write@length:
  2966                           	opt stack 0
  2967  000024                     __flash_partial_read@address:
  2968                           	opt stack 0
  2969                           
  2970                           ; 4 bytes @ 0x23
  2971  000024                     	ds	1
  2972  000025                     ??__display_found:
  2973  000025                     __display_start@cntr:
  2974                           	opt stack 0
  2975  000025                     __display_failed@cntr:
  2976                           	opt stack 0
  2977  000025                     ExternalFlash_SectorWrite@config:
  2978                           	opt stack 0
  2979  000025                     fat_format@cntr:
  2980                           	opt stack 0
  2981  000025                     fat_read_from_buffer@start:
  2982                           	opt stack 0
  2983  000025                     fat_write_to_buffer@start:
  2984                           	opt stack 0
  2985                           
  2986                           ; 2 bytes @ 0x24
  2987  000025                     	ds	1
  2988  000026                     flash_partial_write@data:
  2989                           	opt stack 0
  2990                           
  2991                           ; 2 bytes @ 0x25
  2992  000026                     	ds	1
  2993  000027                     __display_found@start:
  2994                           	opt stack 0
  2995  000027                     fat_read_from_buffer@length:
  2996                           	opt stack 0
  2997  000027                     fat_write_to_buffer@length:
  2998                           	opt stack 0
  2999  000027                     __parse_format_drive@data:
  3000                           	opt stack 0
  3001  000027                     ExternalFlash_SectorWrite@sector_addr:
  3002                           	opt stack 0
  3003                           
  3004                           ; 4 bytes @ 0x26
  3005  000027                     	ds	1
  3006  000028                     __display_found@cntr:
  3007                           	opt stack 0
  3008  000028                     flash_partial_write@match:
  3009                           	opt stack 0
  3010  000028                     flash_sector_read@page:
  3011                           	opt stack 0
  3012  000028                     flash_partial_read@page:
  3013                           	opt stack 0
  3014                           
  3015                           ; 2 bytes @ 0x27
  3016  000028                     	ds	1
  3017  000029                     ??_display_prepare:
  3018  000029                     __write_root@data:
  3019                           	opt stack 0
  3020  000029                     __delete_root@sector:
  3021                           	opt stack 0
  3022  000029                     fat_read_from_buffer@data:
  3023                           	opt stack 0
  3024  000029                     fat_write_to_buffer@data:
  3025                           	opt stack 0
  3026                           
  3027                           ; 2 bytes @ 0x28
  3028  000029                     	ds	1
  3029  00002A                     flash_sector_read@data:
  3030                           	opt stack 0
  3031  00002A                     flash_partial_read@start:
  3032                           	opt stack 0
  3033                           
  3034                           ; 2 bytes @ 0x29
  3035  00002A                     	ds	1
  3036  00002B                     display_prepare@mode:
  3037                           	opt stack 0
  3038  00002B                     ExternalFlash_SectorWrite@buffer:
  3039                           	opt stack 0
  3040  00002B                     __write_root@sector:
  3041                           	opt stack 0
  3042  00002B                     __delete_root@offset:
  3043                           	opt stack 0
  3044  00002B                     __fill_buffer_read_buffer@inBuffer:
  3045                           	opt stack 0
  3046  00002B                     __parse_write_buffer@data:
  3047                           	opt stack 0
  3048                           
  3049                           ; 2 bytes @ 0x2A
  3050  00002B                     	ds	1
  3051  00002C                     ??_fat_get_format_status:
  3052  00002C                     ?__get_available_cluster:
  3053                           	opt stack 0
  3054  00002C                     __parse_command_short@cmd:
  3055                           	opt stack 0
  3056  00002C                     flash_partial_read@length:
  3057                           	opt stack 0
  3058  00002C                     ExternalFlash_SectorRead@config:
  3059                           	opt stack 0
  3060  00002C                     __get_available_cluster@first_sector:
  3061                           	opt stack 0
  3062  00002C                     fat_find_file@name:
  3063                           	opt stack 0
  3064                           
  3065                           ; 2 bytes @ 0x2B
  3066  00002C                     	ds	1
  3067  00002D                     ??__parse_write_buffer:
  3068  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  3069                           	opt stack 0
  3070  00002D                     __delete_root@deleted_value:
  3071                           	opt stack 0
  3072  00002D                     __write_root@offset:
  3073                           	opt stack 0
  3074  00002D                     __fill_buffer_read_buffer@outBuffer:
  3075                           	opt stack 0
  3076                           
  3077                           ; 2 bytes @ 0x2C
  3078  00002D                     	ds	1
  3079  00002E                     __delete_root@file_number:
  3080                           	opt stack 0
  3081  00002E                     flash_partial_read@data:
  3082                           	opt stack 0
  3083  00002E                     ExternalFlash_SectorWrite@page:
  3084                           	opt stack 0
  3085  00002E                     __get_available_cluster@skip_sector:
  3086                           	opt stack 0
  3087  00002E                     fat_find_file@extension:
  3088                           	opt stack 0
  3089  00002E                     fat_get_format_status@cntr:
  3090                           	opt stack 0
  3091  00002E                     __parse_write_buffer@start_byte:
  3092                           	opt stack 0
  3093  00002E                     ExternalFlash_SectorRead@sector_addr:
  3094                           	opt stack 0
  3095                           
  3096                           ; 4 bytes @ 0x2D
  3097  00002E                     	ds	1
  3098  00002F                     ??__fill_buffer_read_buffer:
  3099  00002F                     __write_root@file_number:
  3100                           	opt stack 0
  3101                           
  3102                           ; 1 bytes @ 0x2E
  3103  00002F                     	ds	1
  3104  000030                     ??_MSDWriteHandler:
  3105  000030                     ??_fat_find_file:
  3106  000030                     ?__read_fat:
  3107                           	opt stack 0
  3108  000030                     ?__get_first_cluster:
  3109                           	opt stack 0
  3110  000030                     __get_available_cluster@cluster:
  3111                           	opt stack 0
  3112  000030                     __root_is_available@root_sector:
  3113                           	opt stack 0
  3114  000030                     __read_fat@cluster:
  3115                           	opt stack 0
  3116  000030                     fat_get_file_information@data:
  3117                           	opt stack 0
  3118  000030                     __parse_write_buffer@number_of_bytes:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x2F
  3122  000030                     	ds	1
  3123  000031                     __fill_buffer_read_buffer@start:
  3124                           	opt stack 0
  3125                           
  3126                           ; 2 bytes @ 0x30
  3127  000031                     	ds	1
  3128  000032                     fat_find_file@file_number:
  3129                           	opt stack 0
  3130  000032                     ExternalFlash_SectorRead@buffer:
  3131                           	opt stack 0
  3132  000032                     __get_available_cluster@offset:
  3133                           	opt stack 0
  3134  000032                     __root_is_available@offset:
  3135                           	opt stack 0
  3136  000032                     __read_fat@sector:
  3137                           	opt stack 0
  3138  000032                     __get_first_cluster@sector:
  3139                           	opt stack 0
  3140                           
  3141                           ; 2 bytes @ 0x31
  3142  000032                     	ds	1
  3143  000033                     fat_find_file@sector:
  3144                           	opt stack 0
  3145  000033                     fat_get_file_information@root_sector:
  3146                           	opt stack 0
  3147  000033                     __fill_buffer_read_buffer@data_length:
  3148                           	opt stack 0
  3149                           
  3150                           ; 2 bytes @ 0x32
  3151  000033                     	ds	1
  3152  000034                     __root_is_available@file_number:
  3153                           	opt stack 0
  3154  000034                     ExternalFlash_SectorRead@page:
  3155                           	opt stack 0
  3156  000034                     __get_available_cluster@sector:
  3157                           	opt stack 0
  3158  000034                     __read_fat@offset:
  3159                           	opt stack 0
  3160  000034                     __get_first_cluster@offset:
  3161                           	opt stack 0
  3162                           
  3163                           ; 2 bytes @ 0x33
  3164  000034                     	ds	1
  3165  000035                     __root_is_available@first_byte:
  3166                           	opt stack 0
  3167  000035                     fat_find_file@offset:
  3168                           	opt stack 0
  3169  000035                     fat_get_file_information@offset:
  3170                           	opt stack 0
  3171                           
  3172                           ; 2 bytes @ 0x34
  3173  000035                     	ds	1
  3174  000036                     ??_MSDReadHandler:
  3175  000036                     ?__make_cluster_chain:
  3176                           	opt stack 0
  3177  000036                     ?_fat_get_file_size:
  3178                           	opt stack 0
  3179  000036                     __get_available_root_entry@file_number:
  3180                           	opt stack 0
  3181  000036                     __make_cluster_chain@first_cluster:
  3182                           	opt stack 0
  3183  000036                     __read_fat@value:
  3184                           	opt stack 0
  3185  000036                     __get_first_cluster@first_cluster:
  3186                           	opt stack 0
  3187                           
  3188                           ; 2 bytes @ 0x35
  3189  000036                     	ds	1
  3190  000037                     fat_get_file_information@file_number:
  3191                           	opt stack 0
  3192  000037                     __fill_buffer_find_file@inBuffer:
  3193                           	opt stack 0
  3194                           
  3195                           ; 2 bytes @ 0x36
  3196  000037                     	ds	1
  3197  000038                     ?__find_nth_cluster:
  3198                           	opt stack 0
  3199  000038                     __get_first_cluster@file_number:
  3200                           	opt stack 0
  3201  000038                     __find_nth_cluster@cluster:
  3202                           	opt stack 0
  3203  000038                     __make_cluster_chain@number_of_clusters:
  3204                           	opt stack 0
  3205  000038                     fat_rename_file@name:
  3206                           	opt stack 0
  3207  000038                     __fill_buffer_get_file_details@inBuffer:
  3208                           	opt stack 0
  3209                           
  3210                           ; 2 bytes @ 0x37
  3211  000038                     	ds	1
  3212  000039                     __fill_buffer_find_file@outBuffer:
  3213                           	opt stack 0
  3214                           
  3215                           ; 2 bytes @ 0x38
  3216  000039                     	ds	1
  3217  00003A                     ??_MSDProcessCommandMediaPresent:
  3218  00003A                     ??__make_cluster_chain:
  3219  00003A                     __find_nth_cluster@n:
  3220                           	opt stack 0
  3221  00003A                     fat_get_file_size@sector:
  3222                           	opt stack 0
  3223  00003A                     fat_rename_file@extension:
  3224                           	opt stack 0
  3225  00003A                     __fill_buffer_get_file_details@outBuffer:
  3226                           	opt stack 0
  3227                           
  3228                           ; 2 bytes @ 0x39
  3229  00003A                     	ds	1
  3230  00003B                     ??__fill_buffer_find_file:
  3231                           
  3232                           ; 1 bytes @ 0x3A
  3233  00003B                     	ds	1
  3234  00003C                     ??__fill_buffer_get_file_details:
  3235  00003C                     fat_rename_file@return_code:
  3236                           	opt stack 0
  3237  00003C                     _MSDProcessCommandMediaPresent$2390:
  3238                           	opt stack 0
  3239  00003C                     __find_nth_cluster@offset:
  3240                           	opt stack 0
  3241  00003C                     __make_cluster_chain@next_offset:
  3242                           	opt stack 0
  3243  00003C                     fat_get_file_size@offset:
  3244                           	opt stack 0
  3245                           
  3246                           ; 2 bytes @ 0x3B
  3247  00003C                     	ds	1
  3248  00003D                     fat_rename_file@file_number:
  3249                           	opt stack 0
  3250  00003D                     __fill_buffer_get_file_details@file_number:
  3251                           	opt stack 0
  3252                           
  3253                           ; 1 bytes @ 0x3C
  3254  00003D                     	ds	1
  3255  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3256                           	opt stack 0
  3257  00003E                     __find_nth_cluster@sector_in_buffer:
  3258                           	opt stack 0
  3259  00003E                     __make_cluster_chain@minimum_sector:
  3260                           	opt stack 0
  3261  00003E                     fat_get_file_size@file_size:
  3262                           	opt stack 0
  3263  00003E                     fat_rename_file@root:
  3264                           	opt stack 0
  3265                           
  3266                           ; 32 bytes @ 0x3D
  3267  00003E                     	ds	1
  3268  00003F                     __fill_buffer_find_file@cntr:
  3269                           	opt stack 0
  3270  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3271                           	opt stack 0
  3272                           
  3273                           ; 4 bytes @ 0x3E
  3274  00003F                     	ds	1
  3275  000040                     __find_nth_cluster@sector:
  3276                           	opt stack 0
  3277  000040                     __make_cluster_chain@different_sector_cluster:
  3278                           	opt stack 0
  3279                           
  3280                           ; 2 bytes @ 0x3F
  3281  000040                     	ds	2
  3282  000042                     __make_cluster_chain@data_changed:
  3283                           	opt stack 0
  3284  000042                     fat_get_file_size@file_number:
  3285                           	opt stack 0
  3286  000042                     fat_read_from_file_fast@start_byte:
  3287                           	opt stack 0
  3288  000042                     fat_modify_file@start_byte:
  3289                           	opt stack 0
  3290                           
  3291                           ; 4 bytes @ 0x41
  3292  000042                     	ds	1
  3293  000043                     __make_cluster_chain@remaining_clusters:
  3294                           	opt stack 0
  3295  000043                     fat_copy_sector_to_buffer@sector:
  3296                           	opt stack 0
  3297  000043                     fat_write_sector_from_buffer@sector:
  3298                           	opt stack 0
  3299  000043                     MSDProcessCommandMediaPresent@capacity:
  3300                           	opt stack 0
  3301                           
  3302                           ; 4 bytes @ 0x42
  3303  000043                     	ds	2
  3304  000045                     ??_fat_copy_sector_to_buffer:
  3305  000045                     ??_fat_write_sector_from_buffer:
  3306  000045                     __make_cluster_chain@sector:
  3307                           	opt stack 0
  3308                           
  3309                           ; 2 bytes @ 0x44
  3310  000045                     	ds	1
  3311  000046                     fat_modify_file@length:
  3312                           	opt stack 0
  3313  000046                     fat_read_from_file_fast@length:
  3314                           	opt stack 0
  3315                           
  3316                           ; 4 bytes @ 0x45
  3317  000046                     	ds	1
  3318  000047                     MSDProcessCommandMediaPresent@i:
  3319                           	opt stack 0
  3320  000047                     __make_cluster_chain@sector_in_buffer:
  3321                           	opt stack 0
  3322                           
  3323                           ; 2 bytes @ 0x46
  3324  000047                     	ds	1
  3325  000048                     ??_MSDProcessCommand:
  3326  000048                     fat_modify_file@data:
  3327                           	opt stack 0
  3328                           
  3329                           ; 2 bytes @ 0x47
  3330  000048                     	ds	1
  3331  000049                     __make_cluster_chain@offset:
  3332                           	opt stack 0
  3333  000049                     fat_copy_sector_to_buffer@file_size:
  3334                           	opt stack 0
  3335  000049                     fat_write_sector_from_buffer@file_size:
  3336                           	opt stack 0
  3337                           
  3338                           ; 4 bytes @ 0x48
  3339  000049                     	ds	1
  3340  00004A                     ??_fat_modify_file:
  3341  00004A                     fat_read_from_file_fast@data:
  3342                           	opt stack 0
  3343                           
  3344                           ; 2 bytes @ 0x49
  3345  00004A                     	ds	1
  3346  00004B                     __make_cluster_chain@next_cluster:
  3347                           	opt stack 0
  3348                           
  3349                           ; 2 bytes @ 0x4A
  3350  00004B                     	ds	1
  3351  00004C                     fat_read_from_file_fast@cluster:
  3352                           	opt stack 0
  3353                           
  3354                           ; 2 bytes @ 0x4B
  3355  00004C                     	ds	1
  3356  00004D                     ??_MSDTasks:
  3357  00004D                     fat_create_file@name:
  3358                           	opt stack 0
  3359  00004D                     fat_delete_file@first_cluster:
  3360                           	opt stack 0
  3361  00004D                     fat_copy_sector_to_buffer@number_of_clusters:
  3362                           	opt stack 0
  3363  00004D                     fat_write_sector_from_buffer@number_of_clusters:
  3364                           	opt stack 0
  3365  00004D                     fat_resize_file@new_file_size:
  3366                           	opt stack 0
  3367                           
  3368                           ; 4 bytes @ 0x4C
  3369  00004D                     	ds	1
  3370  00004E                     _MSDTasks$2372:
  3371                           	opt stack 0
  3372  00004E                     fat_read_from_file_fast@cluster_number:
  3373                           	opt stack 0
  3374                           
  3375                           ; 2 bytes @ 0x4D
  3376  00004E                     	ds	1
  3377  00004F                     fat_delete_file@file_number:
  3378                           	opt stack 0
  3379  00004F                     fat_create_file@extension:
  3380                           	opt stack 0
  3381  00004F                     fat_copy_sector_to_buffer@physical_sector:
  3382                           	opt stack 0
  3383  00004F                     fat_write_sector_from_buffer@physical_sector:
  3384                           	opt stack 0
  3385                           
  3386                           ; 2 bytes @ 0x4E
  3387  00004F                     	ds	1
  3388  000050                     ??_fat_read_from_file_fast:
  3389  000050                     _MSDTasks$2373:
  3390                           	opt stack 0
  3391  000050                     __parse_file_delete@data:
  3392                           	opt stack 0
  3393                           
  3394                           ; 2 bytes @ 0x4F
  3395  000050                     	ds	1
  3396  000051                     ??_fat_resize_file:
  3397  000051                     fat_copy_sector_to_buffer@cluster:
  3398                           	opt stack 0
  3399  000051                     fat_write_sector_from_buffer@cluster:
  3400                           	opt stack 0
  3401  000051                     fat_create_file@size:
  3402                           	opt stack 0
  3403                           
  3404                           ; 4 bytes @ 0x50
  3405  000051                     	ds	1
  3406  000052                     MSDTasks@i:
  3407                           	opt stack 0
  3408                           
  3409                           ; 1 bytes @ 0x51
  3410  000052                     	ds	1
  3411  000053                     fat_copy_sector_to_buffer@file_number:
  3412                           	opt stack 0
  3413  000053                     fat_write_sector_from_buffer@file_number:
  3414                           	opt stack 0
  3415                           
  3416                           ; 1 bytes @ 0x52
  3417  000053                     	ds	1
  3418  000054                     __parse_sector_to_buffer@data:
  3419                           	opt stack 0
  3420  000054                     __parse_buffer_to_sector@data:
  3421                           	opt stack 0
  3422                           
  3423                           ; 2 bytes @ 0x53
  3424  000054                     	ds	1
  3425  000055                     ??_fat_create_file:
  3426  000055                     __parse_file_resize@data:
  3427                           	opt stack 0
  3428                           
  3429                           ; 2 bytes @ 0x54
  3430  000055                     	ds	1
  3431  000056                     ??__parse_sector_to_buffer:
  3432  000056                     ??__parse_buffer_to_sector:
  3433  000056                     fat_append_to_file@number_of_bytes:
  3434                           	opt stack 0
  3435  000056                     __parse_file_modify@data:
  3436                           	opt stack 0
  3437                           
  3438                           ; 2 bytes @ 0x55
  3439  000056                     	ds	1
  3440  000057                     ??__parse_file_resize:
  3441  000057                     __parse_sector_to_buffer@sector:
  3442                           	opt stack 0
  3443  000057                     __parse_buffer_to_sector@sector:
  3444                           	opt stack 0
  3445                           
  3446                           ; 2 bytes @ 0x56
  3447  000057                     	ds	1
  3448  000058                     ??__parse_file_modify:
  3449  000058                     fat_append_to_file@data:
  3450                           	opt stack 0
  3451  000058                     __parse_file_resize@file_size:
  3452                           	opt stack 0
  3453                           
  3454                           ; 4 bytes @ 0x57
  3455  000058                     	ds	1
  3456  000059                     __parse_file_create@data:
  3457                           	opt stack 0
  3458  000059                     __parse_file_modify@number_of_bytes:
  3459                           	opt stack 0
  3460                           
  3461                           ; 2 bytes @ 0x58
  3462  000059                     	ds	1
  3463  00005A                     __parse_file_append@data:
  3464                           	opt stack 0
  3465                           
  3466                           ; 2 bytes @ 0x59
  3467  00005A                     	ds	1
  3468  00005B                     ??__parse_file_create:
  3469  00005B                     __parse_file_modify@start_byte:
  3470                           	opt stack 0
  3471                           
  3472                           ; 4 bytes @ 0x5A
  3473  00005B                     	ds	1
  3474  00005C                     ??__parse_file_append:
  3475  00005C                     ??_fat_read_from_file:
  3476  00005C                     bootloader_run@timeslot:
  3477                           	opt stack 0
  3478  00005C                     __parse_file_create@file_size:
  3479                           	opt stack 0
  3480                           
  3481                           ; 4 bytes @ 0x5B
  3482  00005C                     	ds	2
  3483  00005E                     fat_rename_file@cntr:
  3484                           	opt stack 0
  3485                           
  3486                           ; 1 bytes @ 0x5D
  3487  00005E                     	ds	1
  3488  00005F                     
  3489                           ; 1 bytes @ 0x5E
  3490  00005F                     	ds	1
  3491  000060                     tblptru	equ	0xFF8
  3492                           tblptrh	equ	0xFF7
  3493                           tblptrl	equ	0xFF6
  3494                           tablat	equ	0xFF5
  3495                           postinc0	equ	0xFEE
  3496                           wreg	equ	0xFE8
  3497                           postdec1	equ	0xFE5
  3498                           fsr1h	equ	0xFE2
  3499                           fsr1l	equ	0xFE1
  3500                           
  3501                           ; 1 bytes @ 0x5F
  3502 ;;
  3503 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3504 ;;
  3505 ;; *************** function _main *****************
  3506 ;; Defined at:
  3507 ;;		line 54 in file "main.c"
  3508 ;; Parameters:    Size  Location     Type
  3509 ;;		None
  3510 ;; Auto vars:     Size  Location     Type
  3511 ;;  tx_buffer       2   99[BANK0 ] PTR unsigned char 
  3512 ;;		 -> _spi_external_tx_buffer(64), 
  3513 ;;  rx_buffer       2   97[BANK0 ] PTR unsigned char 
  3514 ;;		 -> _spi_external_rx_buffer(64), 
  3515 ;;  bytes_transm    2   95[BANK0 ] unsigned int 
  3516 ;;  tx_start_add    2   93[BANK0 ] unsigned int 
  3517 ;; Return value:  Size  Location     Type
  3518 ;;                  1    wreg      void 
  3519 ;; Registers used:
  3520 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3521 ;; Tracked objects:
  3522 ;;		On entry : 0/0
  3523 ;;		On exit  : 0/0
  3524 ;;		Unchanged: 0/0
  3525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3526 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3527 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3528 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3529 ;;      Totals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3530 ;;Total ram usage:       10 bytes
  3531 ;; Hardware stack levels required when called:   13
  3532 ;; This function calls:
  3533 ;;		_APP_DeviceCustomHIDTasks
  3534 ;;		_APP_DeviceMSDTasks
  3535 ;;		_SYSTEM_Initialize
  3536 ;;		_USBDeviceInit
  3537 ;;		_USBDeviceTasks
  3538 ;;		__normal_mode
  3539 ;;		_api_parse
  3540 ;;		_api_prepare
  3541 ;;		_bootloader_run
  3542 ;;		_display_prepare
  3543 ;;		_display_update
  3544 ;;		_jump_to_main_program
  3545 ;;		_spi_get_external_rx_buffer
  3546 ;;		_spi_get_external_tx_buffer
  3547 ;;		_system_full_init
  3548 ;;		_system_minimal_init
  3549 ;;		_system_minimal_init_undo
  3550 ;;		_timer_pseudo_isr
  3551 ;;		_ui_get_status
  3552 ;;		_ui_run
  3553 ;; This function is called by:
  3554 ;;		Startup code after reset
  3555 ;; This function uses a non-reentrant model
  3556 ;;
  3557                           
  3558                           	psect	text0
  3559  003A6C                     __ptext0:
  3560                           	opt stack 0
  3561  003A6C                     _main:
  3562                           	opt stack 18
  3563                           
  3564                           ;incstack = 0
  3565  003A6C  0004               	clrwdt		;# 
  3566                           
  3567                           ;main.c: 65: rx_buffer = spi_get_external_rx_buffer();
  3568  003A6E  ECC5  F047         	call	_spi_get_external_rx_buffer	;wreg free
  3569  003A72  C001  F0C1         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3570  003A76  C002  F0C2         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3571                           
  3572                           ;main.c: 66: tx_buffer = spi_get_external_tx_buffer();
  3573  003A7A  ECC0  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3574  003A7E  C001  F0C3         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3575  003A82  C002  F0C4         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3576                           
  3577                           ;main.c: 67: tx_start_addr = (uint16_t) tx_buffer;
  3578  003A86  C0C3  F0BD         	movff	main@tx_buffer,main@tx_start_addr
  3579  003A8A  C0C4  F0BE         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3580                           
  3581                           ;main.c: 71: system_minimal_init();
  3582  003A8E  EC45  F047         	call	_system_minimal_init	;wreg free
  3583                           
  3584                           ;main.c: 74: if(_normal_mode())
  3585  003A92  EC04  F03E         	call	__normal_mode	;wreg free
  3586  003A96  0900               	iorlw	0
  3587  003A98  B4D8               	btfsc	status,2,c
  3588  003A9A  D004               	goto	l893
  3589                           
  3590                           ;main.c: 75: {;main.c: 77: system_minimal_init_undo();
  3591  003A9C  EC94  F047         	call	_system_minimal_init_undo	;wreg free
  3592                           
  3593                           ;main.c: 78: jump_to_main_program();
  3594  003AA0  EC12  F048         	call	_jump_to_main_program	;wreg free
  3595  003AA4                     l893:
  3596                           
  3597                           ;main.c: 79: };main.c: 83: system_full_init();
  3598  003AA4  EC33  F03E         	call	_system_full_init	;wreg free
  3599                           
  3600                           ;main.c: 87: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3601  003AA8  0E00               	movlw	0
  3602  003AAA  EC6B  F040         	call	_SYSTEM_Initialize
  3603                           
  3604                           ;main.c: 88: USBDeviceInit();
  3605  003AAE  EC4C  F01F         	call	_USBDeviceInit	;wreg free
  3606  003AB2                     l894:
  3607  003AB2  0004               	clrwdt		;# 
  3608                           
  3609                           ;main.c: 101: USBDeviceTasks();
  3610  003AB4  ECFD  F01A         	call	_USBDeviceTasks	;wreg free
  3611                           
  3612                           ;main.c: 102: APP_DeviceMSDTasks();
  3613  003AB8  EC70  F047         	call	_APP_DeviceMSDTasks	;wreg free
  3614                           
  3615                           ;main.c: 103: APP_DeviceCustomHIDTasks();
  3616  003ABC  EC3E  F033         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3617                           
  3618                           ;main.c: 107: timer_pseudo_isr();
  3619  003AC0  ECCD  F043         	call	_timer_pseudo_isr	;wreg free
  3620                           
  3621                           ;main.c: 110: if(PORTDbits.RD2)
  3622  003AC4  A483               	btfss	3971,2,c	;volatile
  3623  003AC6  D039               	goto	l896
  3624                           
  3625                           ;main.c: 111: {;main.c: 114: bytes_transmitted = TXADDRH;
  3626  003AC8  CF6A F0BF          	movff	3946,main@bytes_transmitted	;volatile
  3627  003ACC  0100               	movlb	0	; () banked
  3628  003ACE  6BC0               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3629                           
  3630                           ; BSR set to: 0
  3631                           ;main.c: 115: bytes_transmitted <<= 8;
  3632  003AD0  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3633  003AD2  6FC0               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3634  003AD4  6BBF               	clrf	main@bytes_transmitted& (0+255),b
  3635                           
  3636                           ; BSR set to: 0
  3637                           ;main.c: 116: bytes_transmitted |= TXADDRL;
  3638  003AD6  506B               	movf	3947,w,c	;volatile
  3639  003AD8  13BF               	iorwf	main@bytes_transmitted& (0+255),f,b
  3640                           
  3641                           ; BSR set to: 0
  3642                           ;main.c: 117: --bytes_transmitted;
  3643  003ADA  07BF               	decf	main@bytes_transmitted& (0+255),f,b
  3644  003ADC  A0D8               	btfss	status,0,c
  3645  003ADE  07C0               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3646                           
  3647                           ; BSR set to: 0
  3648                           ;main.c: 118: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3649  003AE0  ECC0  F047         	call	_spi_get_external_tx_buffer	;wreg free
  3650  003AE4  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3651  003AE6  0100               	movlb	0	; () banked
  3652  003AE8  5FBF               	subwf	main@bytes_transmitted& (0+255),f,b
  3653  003AEA  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3654  003AEC  5BC0               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3655                           
  3656                           ; BSR set to: 0
  3657                           ;main.c: 121: if(bytes_transmitted>0)
  3658  003AEE  51BF               	movf	main@bytes_transmitted& (0+255),w,b
  3659  003AF0  11C0               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3660  003AF2  B4D8               	btfsc	status,2,c
  3661  003AF4  D022               	goto	l896
  3662                           
  3663                           ; BSR set to: 0
  3664                           ;main.c: 122: {;main.c: 124: DMACON1bits.DMAEN = 0;
  3665  003AF6  9088               	bcf	3976,0,c	;volatile
  3666                           
  3667                           ; BSR set to: 0
  3668                           ;main.c: 127: api_prepare(rx_buffer, tx_buffer);
  3669  003AF8  C0C1  F0B2         	movff	main@rx_buffer,api_prepare@inBuffer
  3670  003AFC  C0C2  F0B3         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3671  003B00  C0C3  F0B4         	movff	main@tx_buffer,api_prepare@outBuffer
  3672  003B04  C0C4  F0B5         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3673  003B08  ECEF  F01D         	call	_api_prepare	;wreg free
  3674                           
  3675                           ;main.c: 128: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3676  003B0C  C0C1  F09B         	movff	main@rx_buffer,api_parse@inBuffer
  3677  003B10  C0C2  F09C         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3678  003B14  C0BF  F09D         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3679  003B18  EC11  F02E         	call	_api_parse	;wreg free
  3680                           
  3681                           ;main.c: 131: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3682  003B1C  0100               	movlb	0	; () banked
  3683  003B1E  51C4               	movf	(main@tx_buffer+1)& (0+255),w,b
  3684  003B20  6E6A               	movwf	3946,c	;volatile
  3685                           
  3686                           ; BSR set to: 0
  3687                           ;main.c: 132: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3688  003B22  C0C3  FF6B         	movff	main@tx_buffer,3947	;volatile
  3689                           
  3690                           ; BSR set to: 0
  3691                           ;main.c: 135: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3692  003B26  51C2               	movf	(main@rx_buffer+1)& (0+255),w,b
  3693  003B28  6E68               	movwf	3944,c	;volatile
  3694                           
  3695                           ; BSR set to: 0
  3696                           ;main.c: 136: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3697  003B2A  C0C1  FF69         	movff	main@rx_buffer,3945	;volatile
  3698                           
  3699                           ; BSR set to: 0
  3700                           ;main.c: 139: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3701  003B2E  0E00               	movlw	0
  3702  003B30  6E66               	movwf	3942,c	;volatile
  3703                           
  3704                           ; BSR set to: 0
  3705                           ;main.c: 140: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3706  003B32  0E3F               	movlw	63
  3707  003B34  6E67               	movwf	3943,c	;volatile
  3708                           
  3709                           ; BSR set to: 0
  3710                           ;main.c: 143: PIR3bits.SSP2IF = 0;
  3711  003B36  9EA4               	bcf	4004,7,c	;volatile
  3712                           
  3713                           ; BSR set to: 0
  3714                           ;main.c: 145: DMACON1bits.DMAEN = 1;
  3715  003B38  8088               	bsf	3976,0,c	;volatile
  3716  003B3A                     l896:
  3717                           
  3718                           ;main.c: 146: };main.c: 147: };main.c: 151: if(!os.done)
  3719                           
  3720                           ; BSR set to: 0
  3721                           
  3722                           ; BSR set to: 0
  3723  003B3A  0100               	movlb	0	; () banked
  3724  003B3C  51C8               	movf	(_os+3)& (0+255),w,b	;volatile
  3725  003B3E  A4D8               	btfss	status,2,c
  3726  003B40  D7B8               	goto	l894
  3727                           
  3728                           ; BSR set to: 0
  3729                           ;main.c: 152: {;main.c: 154: ui_run();
  3730  003B42  EC6B  F024         	call	_ui_run	;wreg free
  3731                           
  3732                           ;main.c: 159: switch(os.timeSlot&0b00000111)
  3733  003B46  D025               	goto	l898
  3734  003B48                     
  3735                           ;main.c: 162: bootloader_run(0);
  3736  003B48  0E00               	movlw	0
  3737  003B4A  EC10  F03D         	call	_bootloader_run
  3738                           
  3739                           ;main.c: 163: break;
  3740  003B4E  D043               	goto	l900
  3741  003B50                     
  3742                           ;main.c: 166: bootloader_run(1);
  3743  003B50  0E01               	movlw	1
  3744  003B52  EC10  F03D         	call	_bootloader_run
  3745                           
  3746                           ;main.c: 167: break;
  3747  003B56  D03F               	goto	l900
  3748  003B58                     
  3749                           ;main.c: 170: bootloader_run(2);
  3750  003B58  0E02               	movlw	2
  3751  003B5A  EC10  F03D         	call	_bootloader_run
  3752                           
  3753                           ;main.c: 171: break;
  3754  003B5E  D03B               	goto	l900
  3755  003B60                     
  3756                           ;main.c: 174: bootloader_run(3);
  3757  003B60  0E03               	movlw	3
  3758  003B62  EC10  F03D         	call	_bootloader_run
  3759                           
  3760                           ;main.c: 175: break;
  3761  003B66  D037               	goto	l900
  3762  003B68                     
  3763                           ;main.c: 178: bootloader_run(4);
  3764  003B68  0E04               	movlw	4
  3765  003B6A  EC10  F03D         	call	_bootloader_run
  3766                           
  3767                           ;main.c: 179: break;
  3768  003B6E  D033               	goto	l900
  3769  003B70                     
  3770                           ;main.c: 182: bootloader_run(5);
  3771  003B70  0E05               	movlw	5
  3772  003B72  EC10  F03D         	call	_bootloader_run
  3773                           
  3774                           ;main.c: 183: break;
  3775  003B76  D02F               	goto	l900
  3776  003B78                     
  3777                           ;main.c: 186: display_prepare(os.display_mode);
  3778  003B78  0100               	movlb	0	; () banked
  3779  003B7A  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  3780  003B7C  ECA8  F02D         	call	_display_prepare
  3781                           
  3782                           ;main.c: 187: break;
  3783  003B80  D02A               	goto	l900
  3784  003B82                     
  3785                           ;main.c: 190: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3786  003B82  EC1E  F048         	call	_ui_get_status	;wreg free
  3787  003B86  0A05               	xorlw	5
  3788  003B88  A4D8               	btfss	status,2,c
  3789  003B8A  D025               	goto	l900
  3790                           
  3791                           ;main.c: 191: {;main.c: 192: display_update();
  3792  003B8C  EC42  F03C         	call	_display_update	;wreg free
  3793                           
  3794                           ;main.c: 195: }
  3795                           
  3796                           ;main.c: 193: };main.c: 194: break;
  3797  003B90  D022               	goto	l900
  3798  003B92                     l898:
  3799  003B92  0100               	movlb	0	; () banked
  3800  003B94  51C7               	movf	(_os+2)& (0+255),w,b	;volatile
  3801  003B96  0B07               	andlw	7
  3802  003B98  6FBB               	movwf	??_main& (0+255),b
  3803  003B9A  6BBC               	clrf	(??_main+1)& (0+255),b
  3804                           
  3805                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3806                           ; Switch size 1, requested type "space"
  3807                           ; Number of cases is 1, Range of values is 0 to 0
  3808                           ; switch strategies available:
  3809                           ; Name         Instructions Cycles
  3810                           ; simple_byte            4     3 (average)
  3811                           ;	Chosen strategy is simple_byte
  3812  003B9C  51BC               	movf	(??_main+1)& (0+255),w,b
  3813  003B9E  0A00               	xorlw	0	; case 0
  3814  003BA0  A4D8               	btfss	status,2,c
  3815  003BA2  D019               	goto	l900
  3816                           
  3817                           ; BSR set to: 0
  3818                           ; Switch size 1, requested type "space"
  3819                           ; Number of cases is 8, Range of values is 0 to 7
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte           25    13 (average)
  3823                           ;	Chosen strategy is simple_byte
  3824  003BA4  51BB               	movf	??_main& (0+255),w,b
  3825  003BA6  0A00               	xorlw	0	; case 0
  3826  003BA8  B4D8               	btfsc	status,2,c
  3827  003BAA  D7CE               	goto	l899
  3828  003BAC  0A01               	xorlw	1	; case 1
  3829  003BAE  B4D8               	btfsc	status,2,c
  3830  003BB0  D7CF               	goto	l901
  3831  003BB2  0A03               	xorlw	3	; case 2
  3832  003BB4  B4D8               	btfsc	status,2,c
  3833  003BB6  D7D0               	goto	l902
  3834  003BB8  0A01               	xorlw	1	; case 3
  3835  003BBA  B4D8               	btfsc	status,2,c
  3836  003BBC  D7D1               	goto	l903
  3837  003BBE  0A07               	xorlw	7	; case 4
  3838  003BC0  B4D8               	btfsc	status,2,c
  3839  003BC2  D7D2               	goto	l904
  3840  003BC4  0A01               	xorlw	1	; case 5
  3841  003BC6  B4D8               	btfsc	status,2,c
  3842  003BC8  D7D3               	goto	l905
  3843  003BCA  0A03               	xorlw	3	; case 6
  3844  003BCC  B4D8               	btfsc	status,2,c
  3845  003BCE  D7D4               	goto	l906
  3846  003BD0  0A01               	xorlw	1	; case 7
  3847  003BD2  B4D8               	btfsc	status,2,c
  3848  003BD4  D7D6               	goto	l907
  3849  003BD6                     l900:
  3850                           
  3851                           ;main.c: 196: os.done = 1;
  3852                           
  3853                           ; BSR set to: 0
  3854  003BD6  0E01               	movlw	1
  3855  003BD8  0100               	movlb	0	; () banked
  3856  003BDA  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  3857                           
  3858                           ; BSR set to: 0
  3859                           
  3860                           ; BSR set to: 0
  3861  003BDC  D76A               	goto	l894
  3862  003BDE                     __end_of_main:
  3863                           	opt stack 0
  3864                           tblptru	equ	0xFF8
  3865                           tblptrh	equ	0xFF7
  3866                           tblptrl	equ	0xFF6
  3867                           tablat	equ	0xFF5
  3868                           postinc0	equ	0xFEE
  3869                           wreg	equ	0xFE8
  3870                           postdec1	equ	0xFE5
  3871                           fsr1h	equ	0xFE2
  3872                           fsr1l	equ	0xFE1
  3873                           status	equ	0xFD8
  3874                           
  3875 ;; *************** function _ui_run *****************
  3876 ;; Defined at:
  3877 ;;		line 110 in file "ui.c"
  3878 ;; Parameters:    Size  Location     Type
  3879 ;;		None
  3880 ;; Auto vars:     Size  Location     Type
  3881 ;;		None
  3882 ;; Return value:  Size  Location     Type
  3883 ;;                  1    wreg      void 
  3884 ;; Registers used:
  3885 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3886 ;; Tracked objects:
  3887 ;;		On entry : 0/0
  3888 ;;		On exit  : 0/0
  3889 ;;		Unchanged: 0/0
  3890 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3891 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3892 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3893 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3894 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3895 ;;Total ram usage:        0 bytes
  3896 ;; Hardware stack levels used:    1
  3897 ;; Hardware stack levels required when called:    9
  3898 ;; This function calls:
  3899 ;;		__ui_encoder
  3900 ;;		_i2c_digipot_backlight
  3901 ;;		_i2c_digipot_reset_off
  3902 ;;		_i2c_digipot_reset_on
  3903 ;;		_i2c_display_send_init_sequence
  3904 ;;		_system_encoder_enable
  3905 ;;		_ui_init
  3906 ;; This function is called by:
  3907 ;;		_main
  3908 ;; This function uses a non-reentrant model
  3909 ;;
  3910                           
  3911                           	psect	text1
  3912  0048D6                     __ptext1:
  3913                           	opt stack 0
  3914  0048D6                     _ui_run:
  3915                           	opt stack 21
  3916                           
  3917                           ;ui.c: 112: switch(userInterfaceStatus)
  3918                           
  3919                           ; BSR set to: 0
  3920                           ;incstack = 0
  3921  0048D6  D06D               	goto	l1319
  3922  0048D8                     
  3923                           ;ui.c: 116: if (os.buttonCount!=0)
  3924  0048D8  0100               	movlb	0	; () banked
  3925  0048DA  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  3926  0048DC  B4D8               	btfsc	status,2,c
  3927  0048DE  0012               	return	
  3928                           
  3929                           ; BSR set to: 0
  3930                           ;ui.c: 117: {;ui.c: 118: ui_init();
  3931  0048E0  EC66  F047         	call	_ui_init	;wreg free
  3932                           
  3933                           ;ui.c: 119: os.buttonCount = 0;
  3934  0048E4  0E00               	movlw	0
  3935  0048E6  0100               	movlb	0	; () banked
  3936  0048E8  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;ui.c: 120: };ui.c: 121: break;
  3940  0048EA  0012               	return	
  3941  0048EC                     l1323:
  3942                           
  3943                           ; BSR set to: 0
  3944                           ;ui.c: 125: LATDbits.LD0 = 0;
  3945  0048EC  908C               	bcf	3980,0,c	;volatile
  3946                           
  3947                           ; BSR set to: 0
  3948                           ;ui.c: 127: system_ui_inactive_count = 0;
  3949  0048EE  0E00               	movlw	0
  3950  0048F0  0101               	movlb	1	; () banked
  3951  0048F2  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3952  0048F4  0E00               	movlw	0
  3953  0048F6  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3954                           
  3955                           ;ui.c: 128: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3956  0048F8  0E02               	movlw	2
  3957  0048FA  0100               	movlb	0	; () banked
  3958  0048FC  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3959                           
  3960                           ;ui.c: 129: break;
  3961  0048FE  0012               	return	
  3962  004900                     
  3963                           ; BSR set to: 0
  3964                           ;ui.c: 133: i2c_digipot_reset_on();
  3965                           
  3966                           ; BSR set to: 0
  3967  004900  EC4F  F046         	call	_i2c_digipot_reset_on	;wreg free
  3968                           
  3969                           ;ui.c: 135: system_ui_inactive_count = 0;
  3970  004904  0E00               	movlw	0
  3971  004906  0101               	movlb	1	; () banked
  3972  004908  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3973  00490A  0E00               	movlw	0
  3974  00490C  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  3975                           
  3976                           ; BSR set to: 1
  3977                           ;ui.c: 136: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3978  00490E  0E03               	movlw	3
  3979  004910  0100               	movlb	0	; () banked
  3980  004912  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  3981                           
  3982                           ;ui.c: 137: break;
  3983  004914  0012               	return	
  3984  004916                     
  3985                           ; BSR set to: 0
  3986                           ;ui.c: 140: ++system_ui_inactive_count;
  3987                           
  3988                           ; BSR set to: 0
  3989  004916  0101               	movlb	1	; () banked
  3990  004918  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3991  00491A  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3992                           
  3993                           ; BSR set to: 1
  3994                           ;ui.c: 142: if (system_ui_inactive_count>3)
  3995  00491C  517D               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3996  00491E  E104               	bnz	u12890
  3997  004920  0E04               	movlw	4
  3998  004922  5D7C               	subwf	_system_ui_inactive_count& (0+255),w,b
  3999  004924  A0D8               	btfss	status,0,c
  4000  004926  0012               	return	
  4001  004928                     u12890:
  4002                           
  4003                           ; BSR set to: 1
  4004                           ;ui.c: 143: {;ui.c: 144: i2c_digipot_reset_off();
  4005  004928  EC60  F046         	call	_i2c_digipot_reset_off	;wreg free
  4006                           
  4007                           ;ui.c: 145: system_ui_inactive_count = 0;
  4008  00492C  0E00               	movlw	0
  4009  00492E  0101               	movlb	1	; () banked
  4010  004930  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4011  004932  0E00               	movlw	0
  4012  004934  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;ui.c: 146: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  4016  004936  0E04               	movlw	4
  4017  004938  0100               	movlb	0	; () banked
  4018  00493A  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4019                           
  4020                           ; BSR set to: 0
  4021                           ;ui.c: 147: };ui.c: 148: break;
  4022  00493C  0012               	return	
  4023  00493E                     
  4024                           ; BSR set to: 0
  4025                           ;ui.c: 152: i2c_display_send_init_sequence();
  4026                           
  4027                           ; BSR set to: 0
  4028  00493E  EC0F  F045         	call	_i2c_display_send_init_sequence	;wreg free
  4029                           
  4030                           ;ui.c: 154: i2c_digipot_backlight(150);
  4031  004942  0E96               	movlw	150
  4032  004944  ECBA  F045         	call	_i2c_digipot_backlight
  4033                           
  4034                           ;ui.c: 156: system_encoder_enable();
  4035  004948  EC8C  F047         	call	_system_encoder_enable	;wreg free
  4036                           
  4037                           ;ui.c: 158: system_ui_inactive_count = 0;
  4038  00494C  0E00               	movlw	0
  4039  00494E  0101               	movlb	1	; () banked
  4040  004950  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4041  004952  0E00               	movlw	0
  4042  004954  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4043                           
  4044                           ; BSR set to: 1
  4045                           ;ui.c: 159: startup_timer = 0;
  4046  004956  0E00               	movlw	0
  4047  004958  6F7B               	movwf	(_startup_timer+1)& (0+255),b
  4048  00495A  0E00               	movlw	0
  4049  00495C  6F7A               	movwf	_startup_timer& (0+255),b
  4050                           
  4051                           ; BSR set to: 1
  4052                           ;ui.c: 160: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  4053  00495E  0E05               	movlw	5
  4054  004960  0100               	movlb	0	; () banked
  4055  004962  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  4056                           
  4057                           ;ui.c: 161: break;
  4058  004964  0012               	return	
  4059  004966                     
  4060                           ; BSR set to: 0
  4061                           ;ui.c: 164: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  4062                           
  4063                           ; BSR set to: 0
  4064  004966  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4065  004968  A4D8               	btfss	status,2,c
  4066  00496A  D00B               	goto	l1330
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;ui.c: 165: {;ui.c: 166: ++startup_timer;
  4070  00496C  0101               	movlb	1	; () banked
  4071  00496E  4B7A               	infsnz	_startup_timer& (0+255),f,b
  4072  004970  2B7B               	incf	(_startup_timer+1)& (0+255),f,b
  4073                           
  4074                           ; BSR set to: 1
  4075                           ;ui.c: 167: if(startup_timer==250)
  4076  004972  0EFA               	movlw	250
  4077  004974  197A               	xorwf	_startup_timer& (0+255),w,b
  4078  004976  117B               	iorwf	(_startup_timer+1)& (0+255),w,b
  4079  004978  A4D8               	btfss	status,2,c
  4080  00497A  D003               	goto	l1330
  4081                           
  4082                           ; BSR set to: 1
  4083                           ;ui.c: 168: {;ui.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  4084  00497C  0E10               	movlw	16
  4085  00497E  0100               	movlb	0	; () banked
  4086  004980  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4087  004982                     l1330:
  4088                           
  4089                           ;ui.c: 170: };ui.c: 171: };ui.c: 172: if (os.encoderCount==0 && os.buttonCount==0)
  4090                           
  4091                           ; BSR set to: 0
  4092  004982  0100               	movlb	0	; () banked
  4093  004984  51C5               	movf	_os& (0+255),w,b	;volatile
  4094  004986  A4D8               	btfss	status,2,c
  4095  004988  D00C               	goto	l1331
  4096                           
  4097                           ; BSR set to: 0
  4098  00498A  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4099  00498C  A4D8               	btfss	status,2,c
  4100  00498E  D009               	goto	l1331
  4101                           
  4102                           ; BSR set to: 0
  4103                           ;ui.c: 173: {;ui.c: 174: if(system_ui_inactive_count<0xFFFF)
  4104  004990  0101               	movlb	1	; () banked
  4105  004992  297C               	incf	_system_ui_inactive_count& (0+255),w,b
  4106  004994  E103               	bnz	u12940
  4107  004996  297D               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  4108  004998  B4D8               	btfsc	status,2,c
  4109  00499A  0012               	return	
  4110  00499C                     u12940:
  4111                           
  4112                           ; BSR set to: 1
  4113                           ;ui.c: 175: ++system_ui_inactive_count;
  4114  00499C  4B7C               	infsnz	_system_ui_inactive_count& (0+255),f,b
  4115  00499E  2B7D               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  4116                           
  4117                           ; BSR set to: 1
  4118                           ;ui.c: 176: }
  4119  0049A0  0012               	return	
  4120  0049A2                     l1331:
  4121                           
  4122                           ;ui.c: 177: else;ui.c: 178: {;ui.c: 179: system_ui_inactive_count = 0;
  4123                           
  4124                           ; BSR set to: 1
  4125  0049A2  0E00               	movlw	0
  4126  0049A4  0101               	movlb	1	; () banked
  4127  0049A6  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4128  0049A8  0E00               	movlw	0
  4129  0049AA  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  4130                           
  4131                           ; BSR set to: 1
  4132                           ;ui.c: 180: _ui_encoder();
  4133  0049AC  ECF1  F02B         	call	__ui_encoder	;wreg free
  4134                           
  4135                           ;ui.c: 183: }
  4136                           
  4137                           ;ui.c: 181: };ui.c: 182: break;
  4138  0049B0  0012               	return	
  4139  0049B2                     l1319:
  4140  0049B2  0100               	movlb	0	; () banked
  4141  0049B4  51E6               	movf	_userInterfaceStatus& (0+255),w,b
  4142                           
  4143                           ; Switch size 1, requested type "space"
  4144                           ; Number of cases is 6, Range of values is 0 to 5
  4145                           ; switch strategies available:
  4146                           ; Name         Instructions Cycles
  4147                           ; simple_byte           19    10 (average)
  4148                           ;	Chosen strategy is simple_byte
  4149  0049B6  0A00               	xorlw	0	; case 0
  4150  0049B8  B4D8               	btfsc	status,2,c
  4151  0049BA  D78E               	goto	l1320
  4152  0049BC  0A01               	xorlw	1	; case 1
  4153  0049BE  B4D8               	btfsc	status,2,c
  4154  0049C0  D795               	goto	l1323
  4155  0049C2  0A03               	xorlw	3	; case 2
  4156  0049C4  B4D8               	btfsc	status,2,c
  4157  0049C6  D79C               	goto	l1324
  4158  0049C8  0A01               	xorlw	1	; case 3
  4159  0049CA  B4D8               	btfsc	status,2,c
  4160  0049CC  D7A4               	goto	l1325
  4161  0049CE  0A07               	xorlw	7	; case 4
  4162  0049D0  B4D8               	btfsc	status,2,c
  4163  0049D2  D7B5               	goto	l1327
  4164  0049D4  0A01               	xorlw	1	; case 5
  4165  0049D6  A4D8               	btfss	status,2,c
  4166  0049D8  0012               	return	
  4167  0049DA  D7C5               	goto	l1328
  4168  0049DC                     __end_of_ui_run:
  4169                           	opt stack 0
  4170                           tblptru	equ	0xFF8
  4171                           tblptrh	equ	0xFF7
  4172                           tblptrl	equ	0xFF6
  4173                           tablat	equ	0xFF5
  4174                           postinc0	equ	0xFEE
  4175                           wreg	equ	0xFE8
  4176                           postdec1	equ	0xFE5
  4177                           fsr1h	equ	0xFE2
  4178                           fsr1l	equ	0xFE1
  4179                           status	equ	0xFD8
  4180                           
  4181 ;; *************** function _system_encoder_enable *****************
  4182 ;; Defined at:
  4183 ;;		line 96 in file "os.c"
  4184 ;; Parameters:    Size  Location     Type
  4185 ;;		None
  4186 ;; Auto vars:     Size  Location     Type
  4187 ;;		None
  4188 ;; Return value:  Size  Location     Type
  4189 ;;                  1    wreg      void 
  4190 ;; Registers used:
  4191 ;;		wreg, status,2
  4192 ;; Tracked objects:
  4193 ;;		On entry : 0/0
  4194 ;;		On exit  : 0/0
  4195 ;;		Unchanged: 0/0
  4196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4197 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4198 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4199 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4200 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4201 ;;Total ram usage:        0 bytes
  4202 ;; Hardware stack levels used:    1
  4203 ;; This function calls:
  4204 ;;		Nothing
  4205 ;; This function is called by:
  4206 ;;		_ui_run
  4207 ;; This function uses a non-reentrant model
  4208 ;;
  4209                           
  4210                           	psect	text2
  4211  008F18                     __ptext2:
  4212                           	opt stack 0
  4213  008F18                     _system_encoder_enable:
  4214                           	opt stack 29
  4215                           
  4216                           ;os.c: 99: INTCON3bits.INT2IF = 0;
  4217                           
  4218                           ;incstack = 0
  4219  008F18  92F0               	bcf	intcon3,1,c	;volatile
  4220                           
  4221                           ;os.c: 100: INTCON3bits.INT3IF = 0;
  4222  008F1A  94F0               	bcf	intcon3,2,c	;volatile
  4223                           
  4224                           ;os.c: 103: os.encoderCount = 0;
  4225  008F1C  0E00               	movlw	0
  4226  008F1E  0100               	movlb	0	; () banked
  4227  008F20  6FC5               	movwf	_os& (0+255),b	;volatile
  4228                           
  4229                           ; BSR set to: 0
  4230                           ;os.c: 106: INTCON3bits.INT2IE = 1;
  4231  008F22  88F0               	bsf	intcon3,4,c	;volatile
  4232                           
  4233                           ; BSR set to: 0
  4234                           ;os.c: 107: INTCON3bits.INT3IE = 1;
  4235  008F24  8AF0               	bsf	intcon3,5,c	;volatile
  4236                           
  4237                           ; BSR set to: 0
  4238  008F26  0012               	return		;funcret
  4239  008F28                     __end_of_system_encoder_enable:
  4240                           	opt stack 0
  4241                           tblptru	equ	0xFF8
  4242                           tblptrh	equ	0xFF7
  4243                           tblptrl	equ	0xFF6
  4244                           tablat	equ	0xFF5
  4245                           intcon3	equ	0xFF0
  4246                           postinc0	equ	0xFEE
  4247                           wreg	equ	0xFE8
  4248                           postdec1	equ	0xFE5
  4249                           fsr1h	equ	0xFE2
  4250                           fsr1l	equ	0xFE1
  4251                           status	equ	0xFD8
  4252                           
  4253 ;; *************** function _i2c_display_send_init_sequence *****************
  4254 ;; Defined at:
  4255 ;;		line 207 in file "i2c.c"
  4256 ;; Parameters:    Size  Location     Type
  4257 ;;		None
  4258 ;; Auto vars:     Size  Location     Type
  4259 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  4260 ;; Return value:  Size  Location     Type
  4261 ;;                  1    wreg      void 
  4262 ;; Registers used:
  4263 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4264 ;; Tracked objects:
  4265 ;;		On entry : 0/0
  4266 ;;		On exit  : 0/0
  4267 ;;		Unchanged: 0/0
  4268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4269 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4270 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4271 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4272 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4273 ;;Total ram usage:        9 bytes
  4274 ;; Hardware stack levels used:    1
  4275 ;; Hardware stack levels required when called:    2
  4276 ;; This function calls:
  4277 ;;		__i2c_write
  4278 ;;		_i2c_set_frequency
  4279 ;; This function is called by:
  4280 ;;		_ui_run
  4281 ;; This function uses a non-reentrant model
  4282 ;;
  4283                           
  4284                           	psect	text3
  4285  008A1E                     __ptext3:
  4286                           	opt stack 0
  4287  008A1E                     _i2c_display_send_init_sequence:
  4288                           	opt stack 27
  4289                           
  4290                           ;i2c.c: 209: uint8_t init_sequence[9] = {;i2c.c: 210: 0x3A,;i2c.c: 212: 0b00011110,;i2c.
      +                          c: 213: 0x39,;i2c.c: 215: 0b00001100,;i2c.c: 216: 0x74,;i2c.c: 217: 0b1011100,;i2c.c: 21
      +                          8: 0x6d,;i2c.c: 219: 0x0c,;i2c.c: 220: 0x01;i2c.c: 221: };
  4291                           
  4292                           ; BSR set to: 0
  4293                           ;incstack = 0
  4294  008A1E  EE21  F0C7         	lfsr	2,i2c_display_send_init_sequence@F6808
  4295  008A22  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4296  008A26  0E08               	movlw	8
  4297  008A28                     u12161:
  4298  008A28  CFDB FFE3          	movff	plusw2,plusw1
  4299  008A2C  06E8               	decf	wreg,f,c
  4300  008A2E  E2FC               	bc	u12161
  4301                           
  4302                           ;i2c.c: 224: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4303  008A30  0E00               	movlw	0
  4304  008A32  EC51  F045         	call	_i2c_set_frequency
  4305                           
  4306                           ;i2c.c: 227: _i2c_write(0b01111000, &init_sequence[0], 9);
  4307  008A36  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4308  008A38  6E06               	movwf	__i2c_write@data,c
  4309  008A3A  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4310  008A3C  6E07               	movwf	__i2c_write@data+1,c
  4311  008A3E  0E09               	movlw	9
  4312  008A40  6E08               	movwf	__i2c_write@length,c
  4313  008A42  0E78               	movlw	120
  4314  008A44  ECAD  F041         	call	__i2c_write
  4315  008A48  0012               	return		;funcret
  4316  008A4A                     __end_of_i2c_display_send_init_sequence:
  4317                           	opt stack 0
  4318                           tblptru	equ	0xFF8
  4319                           tblptrh	equ	0xFF7
  4320                           tblptrl	equ	0xFF6
  4321                           tablat	equ	0xFF5
  4322                           intcon3	equ	0xFF0
  4323                           postinc0	equ	0xFEE
  4324                           wreg	equ	0xFE8
  4325                           postdec1	equ	0xFE5
  4326                           plusw1	equ	0xFE3
  4327                           fsr1h	equ	0xFE2
  4328                           fsr1l	equ	0xFE1
  4329                           plusw2	equ	0xFDB
  4330                           status	equ	0xFD8
  4331                           
  4332 ;; *************** function _i2c_digipot_reset_on *****************
  4333 ;; Defined at:
  4334 ;;		line 310 in file "i2c.c"
  4335 ;; Parameters:    Size  Location     Type
  4336 ;;		None
  4337 ;; Auto vars:     Size  Location     Type
  4338 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4339 ;; Return value:  Size  Location     Type
  4340 ;;                  1    wreg      void 
  4341 ;; Registers used:
  4342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4343 ;; Tracked objects:
  4344 ;;		On entry : 0/0
  4345 ;;		On exit  : 0/0
  4346 ;;		Unchanged: 0/0
  4347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4348 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4349 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4350 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4351 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4352 ;;Total ram usage:        2 bytes
  4353 ;; Hardware stack levels used:    1
  4354 ;; Hardware stack levels required when called:    2
  4355 ;; This function calls:
  4356 ;;		__i2c_write
  4357 ;;		_i2c_set_frequency
  4358 ;; This function is called by:
  4359 ;;		_ui_run
  4360 ;; This function uses a non-reentrant model
  4361 ;;
  4362                           
  4363                           	psect	text4
  4364  008C9E                     __ptext4:
  4365                           	opt stack 0
  4366  008C9E                     _i2c_digipot_reset_on:
  4367                           	opt stack 27
  4368                           
  4369                           ;i2c.c: 312: uint8_t data_array[2];;i2c.c: 313: data_array[0] = 0x10 | 0x00;
  4370                           
  4371                           ;incstack = 0
  4372  008C9E  0E10               	movlw	16
  4373  008CA0  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4374                           
  4375                           ;i2c.c: 315: data_array[1] = 0x00;
  4376  008CA2  0E00               	movlw	0
  4377  008CA4  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4378                           
  4379                           ;i2c.c: 318: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4380  008CA6  0E02               	movlw	2
  4381  008CA8  EC51  F045         	call	_i2c_set_frequency
  4382                           
  4383                           ;i2c.c: 320: _i2c_write(0b01011100, &data_array[0], 2);
  4384  008CAC  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4385  008CAE  6E06               	movwf	__i2c_write@data,c
  4386  008CB0  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4387  008CB2  6E07               	movwf	__i2c_write@data+1,c
  4388  008CB4  0E02               	movlw	2
  4389  008CB6  6E08               	movwf	__i2c_write@length,c
  4390  008CB8  0E5C               	movlw	92
  4391  008CBA  ECAD  F041         	call	__i2c_write
  4392  008CBE  0012               	return		;funcret
  4393  008CC0                     __end_of_i2c_digipot_reset_on:
  4394                           	opt stack 0
  4395                           tblptru	equ	0xFF8
  4396                           tblptrh	equ	0xFF7
  4397                           tblptrl	equ	0xFF6
  4398                           tablat	equ	0xFF5
  4399                           intcon3	equ	0xFF0
  4400                           postinc0	equ	0xFEE
  4401                           wreg	equ	0xFE8
  4402                           postdec1	equ	0xFE5
  4403                           plusw1	equ	0xFE3
  4404                           fsr1h	equ	0xFE2
  4405                           fsr1l	equ	0xFE1
  4406                           plusw2	equ	0xFDB
  4407                           status	equ	0xFD8
  4408                           
  4409 ;; *************** function _i2c_digipot_reset_off *****************
  4410 ;; Defined at:
  4411 ;;		line 323 in file "i2c.c"
  4412 ;; Parameters:    Size  Location     Type
  4413 ;;		None
  4414 ;; Auto vars:     Size  Location     Type
  4415 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4416 ;; Return value:  Size  Location     Type
  4417 ;;                  1    wreg      void 
  4418 ;; Registers used:
  4419 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4420 ;; Tracked objects:
  4421 ;;		On entry : 0/0
  4422 ;;		On exit  : 0/0
  4423 ;;		Unchanged: 0/0
  4424 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4425 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4426 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4427 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4428 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4429 ;;Total ram usage:        2 bytes
  4430 ;; Hardware stack levels used:    1
  4431 ;; Hardware stack levels required when called:    2
  4432 ;; This function calls:
  4433 ;;		__i2c_write
  4434 ;;		_i2c_set_frequency
  4435 ;; This function is called by:
  4436 ;;		_ui_run
  4437 ;; This function uses a non-reentrant model
  4438 ;;
  4439                           
  4440                           	psect	text5
  4441  008CC0                     __ptext5:
  4442                           	opt stack 0
  4443  008CC0                     _i2c_digipot_reset_off:
  4444                           	opt stack 27
  4445                           
  4446                           ;i2c.c: 325: uint8_t data_array[2];;i2c.c: 326: data_array[0] = 0x10 | 0x00;
  4447                           
  4448                           ;incstack = 0
  4449  008CC0  0E10               	movlw	16
  4450  008CC2  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4451                           
  4452                           ;i2c.c: 327: data_array[1] = 0x80;
  4453  008CC4  0E80               	movlw	128
  4454  008CC6  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4455                           
  4456                           ;i2c.c: 330: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4457  008CC8  0E02               	movlw	2
  4458  008CCA  EC51  F045         	call	_i2c_set_frequency
  4459                           
  4460                           ;i2c.c: 332: _i2c_write(0b01011100, &data_array[0], 2);
  4461  008CCE  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4462  008CD0  6E06               	movwf	__i2c_write@data,c
  4463  008CD2  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4464  008CD4  6E07               	movwf	__i2c_write@data+1,c
  4465  008CD6  0E02               	movlw	2
  4466  008CD8  6E08               	movwf	__i2c_write@length,c
  4467  008CDA  0E5C               	movlw	92
  4468  008CDC  ECAD  F041         	call	__i2c_write
  4469  008CE0  0012               	return		;funcret
  4470  008CE2                     __end_of_i2c_digipot_reset_off:
  4471                           	opt stack 0
  4472                           tblptru	equ	0xFF8
  4473                           tblptrh	equ	0xFF7
  4474                           tblptrl	equ	0xFF6
  4475                           tablat	equ	0xFF5
  4476                           intcon3	equ	0xFF0
  4477                           postinc0	equ	0xFEE
  4478                           wreg	equ	0xFE8
  4479                           postdec1	equ	0xFE5
  4480                           plusw1	equ	0xFE3
  4481                           fsr1h	equ	0xFE2
  4482                           fsr1l	equ	0xFE1
  4483                           plusw2	equ	0xFDB
  4484                           status	equ	0xFD8
  4485                           
  4486 ;; *************** function _i2c_digipot_backlight *****************
  4487 ;; Defined at:
  4488 ;;		line 335 in file "i2c.c"
  4489 ;; Parameters:    Size  Location     Type
  4490 ;;  level           1    wreg     unsigned char 
  4491 ;; Auto vars:     Size  Location     Type
  4492 ;;  level           1   10[COMRAM] unsigned char 
  4493 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4494 ;; Return value:  Size  Location     Type
  4495 ;;                  1    wreg      void 
  4496 ;; Registers used:
  4497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4498 ;; Tracked objects:
  4499 ;;		On entry : 0/0
  4500 ;;		On exit  : 0/0
  4501 ;;		Unchanged: 0/0
  4502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4504 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4506 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4507 ;;Total ram usage:        3 bytes
  4508 ;; Hardware stack levels used:    1
  4509 ;; Hardware stack levels required when called:    2
  4510 ;; This function calls:
  4511 ;;		__i2c_write
  4512 ;;		_i2c_set_frequency
  4513 ;; This function is called by:
  4514 ;;		_ui_run
  4515 ;; This function uses a non-reentrant model
  4516 ;;
  4517                           
  4518                           	psect	text6
  4519  008B74                     __ptext6:
  4520                           	opt stack 0
  4521  008B74                     _i2c_digipot_backlight:
  4522                           	opt stack 27
  4523                           
  4524                           ;incstack = 0
  4525                           ;i2c_digipot_backlight@level stored from wreg
  4526  008B74  6E0B               	movwf	i2c_digipot_backlight@level,c
  4527                           
  4528                           ;i2c.c: 337: uint8_t data_array[2];;i2c.c: 338: data_array[0] = 0x00 | 0x00;
  4529  008B76  0E00               	movlw	0
  4530  008B78  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4531                           
  4532                           ;i2c.c: 339: data_array[1] = level>>1;
  4533  008B7A  90D8               	bcf	status,0,c
  4534  008B7C  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4535  008B7E  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4536                           
  4537                           ;i2c.c: 342: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4538  008B80  0E02               	movlw	2
  4539  008B82  EC51  F045         	call	_i2c_set_frequency
  4540                           
  4541                           ;i2c.c: 344: _i2c_write(0b01011100, &data_array[0], 2);
  4542  008B86  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4543  008B88  6E06               	movwf	__i2c_write@data,c
  4544  008B8A  0E00               	movlw	high i2c_digipot_backlight@data_array
  4545  008B8C  6E07               	movwf	__i2c_write@data+1,c
  4546  008B8E  0E02               	movlw	2
  4547  008B90  6E08               	movwf	__i2c_write@length,c
  4548  008B92  0E5C               	movlw	92
  4549  008B94  ECAD  F041         	call	__i2c_write
  4550  008B98  0012               	return		;funcret
  4551  008B9A                     __end_of_i2c_digipot_backlight:
  4552                           	opt stack 0
  4553                           tblptru	equ	0xFF8
  4554                           tblptrh	equ	0xFF7
  4555                           tblptrl	equ	0xFF6
  4556                           tablat	equ	0xFF5
  4557                           intcon3	equ	0xFF0
  4558                           postinc0	equ	0xFEE
  4559                           wreg	equ	0xFE8
  4560                           postdec1	equ	0xFE5
  4561                           plusw1	equ	0xFE3
  4562                           fsr1h	equ	0xFE2
  4563                           fsr1l	equ	0xFE1
  4564                           plusw2	equ	0xFDB
  4565                           status	equ	0xFD8
  4566                           
  4567 ;; *************** function __ui_encoder *****************
  4568 ;; Defined at:
  4569 ;;		line 22 in file "ui.c"
  4570 ;; Parameters:    Size  Location     Type
  4571 ;;		None
  4572 ;; Auto vars:     Size  Location     Type
  4573 ;;		None
  4574 ;; Return value:  Size  Location     Type
  4575 ;;                  1    wreg      void 
  4576 ;; Registers used:
  4577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4578 ;; Tracked objects:
  4579 ;;		On entry : 0/0
  4580 ;;		On exit  : 0/0
  4581 ;;		Unchanged: 0/0
  4582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4584 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4585 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4586 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4587 ;;Total ram usage:        0 bytes
  4588 ;; Hardware stack levels used:    1
  4589 ;; Hardware stack levels required when called:    8
  4590 ;; This function calls:
  4591 ;;		_i2c_eeprom_writeByte
  4592 ;;		_reboot
  4593 ;;		_system_delay_ms
  4594 ;; This function is called by:
  4595 ;;		_ui_run
  4596 ;; This function uses a non-reentrant model
  4597 ;;
  4598                           
  4599                           	psect	text7
  4600  0057E2                     __ptext7:
  4601                           	opt stack 0
  4602  0057E2                     __ui_encoder:
  4603                           	opt stack 21
  4604                           
  4605                           ;ui.c: 24: switch(os.display_mode)
  4606                           
  4607                           ;incstack = 0
  4608  0057E2  D054               	goto	l1292
  4609  0057E4                     
  4610                           ;ui.c: 27: if(os.buttonCount>0)
  4611  0057E4  0100               	movlb	0	; () banked
  4612  0057E6  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4613  0057E8  0A80               	xorlw	128
  4614  0057EA  0F7F               	addlw	-129
  4615  0057EC  A0D8               	btfss	status,0,c
  4616  0057EE  0012               	return	
  4617                           
  4618                           ; BSR set to: 0
  4619                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4620  0057F0  0E00               	movlw	0
  4621  0057F2  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4622                           
  4623                           ; BSR set to: 0
  4624                           ;ui.c: 30: };ui.c: 31: break;
  4625  0057F4  0012               	return	
  4626  0057F6                     
  4627                           ; BSR set to: 0
  4628                           ;ui.c: 34: if(os.buttonCount>0)
  4629                           
  4630                           ; BSR set to: 0
  4631  0057F6  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4632  0057F8  0A80               	xorlw	128
  4633  0057FA  0F7F               	addlw	-129
  4634  0057FC  A0D8               	btfss	status,0,c
  4635  0057FE  0012               	return	
  4636                           
  4637                           ; BSR set to: 0
  4638                           ;ui.c: 35: {;ui.c: 36: os.buttonCount = 0;
  4639  005800  0E00               	movlw	0
  4640  005802  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4641                           
  4642                           ; BSR set to: 0
  4643                           ;ui.c: 37: };ui.c: 38: break;
  4644  005804  0012               	return	
  4645  005806                     
  4646                           ; BSR set to: 0
  4647                           ;ui.c: 41: if(os.buttonCount>0)
  4648                           
  4649                           ; BSR set to: 0
  4650  005806  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4651  005808  0A80               	xorlw	128
  4652  00580A  0F7F               	addlw	-129
  4653  00580C  A0D8               	btfss	status,0,c
  4654  00580E  0012               	return	
  4655                           
  4656                           ; BSR set to: 0
  4657                           ;ui.c: 42: {;ui.c: 43: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4658  005810  0E30               	movlw	48
  4659  005812  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4660                           
  4661                           ;ui.c: 44: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4662  005814  0E30               	movlw	48
  4663  005816  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4664                           
  4665                           ;ui.c: 45: os.buttonCount = 0;
  4666  005818  0E00               	movlw	0
  4667  00581A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4668                           
  4669                           ; BSR set to: 0
  4670                           ;ui.c: 46: };ui.c: 47: break;
  4671  00581C  0012               	return	
  4672  00581E                     
  4673                           ; BSR set to: 0
  4674                           ;ui.c: 50: if(os.buttonCount>0)
  4675                           
  4676                           ; BSR set to: 0
  4677  00581E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4678  005820  0A80               	xorlw	128
  4679  005822  0F7F               	addlw	-129
  4680  005824  A0D8               	btfss	status,0,c
  4681  005826  0012               	return	
  4682                           
  4683                           ; BSR set to: 0
  4684                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4685  005828  0E00               	movlw	0
  4686  00582A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4687                           
  4688                           ; BSR set to: 0
  4689                           ;ui.c: 53: };ui.c: 54: break;
  4690  00582C  0012               	return	
  4691  00582E                     
  4692                           ; BSR set to: 0
  4693                           ;ui.c: 57: if(os.buttonCount>0)
  4694                           
  4695                           ; BSR set to: 0
  4696  00582E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4697  005830  0A80               	xorlw	128
  4698  005832  0F7F               	addlw	-129
  4699  005834  A0D8               	btfss	status,0,c
  4700  005836  0012               	return	
  4701                           
  4702                           ; BSR set to: 0
  4703                           ;ui.c: 58: {;ui.c: 59: os.buttonCount = 0;
  4704  005838  0E00               	movlw	0
  4705  00583A  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4706                           
  4707                           ; BSR set to: 0
  4708                           ;ui.c: 60: };ui.c: 61: break;
  4709  00583C  0012               	return	
  4710  00583E                     
  4711                           ; BSR set to: 0
  4712                           ;ui.c: 64: if(os.buttonCount>0)
  4713                           
  4714                           ; BSR set to: 0
  4715  00583E  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4716  005840  0A80               	xorlw	128
  4717  005842  0F7F               	addlw	-129
  4718  005844  A0D8               	btfss	status,0,c
  4719  005846  0012               	return	
  4720                           
  4721                           ; BSR set to: 0
  4722                           ;ui.c: 65: {;ui.c: 66: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4723  005848  0E60               	movlw	96
  4724  00584A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  4725                           
  4726                           ;ui.c: 67: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4727  00584C  0E60               	movlw	96
  4728  00584E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  4729                           
  4730                           ;ui.c: 68: os.buttonCount = 0;
  4731  005850  0E00               	movlw	0
  4732  005852  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4733                           
  4734                           ; BSR set to: 0
  4735                           ;ui.c: 69: };ui.c: 70: break;
  4736  005854  0012               	return	
  4737  005856                     
  4738                           ; BSR set to: 0
  4739                           ;ui.c: 73: if(os.buttonCount>0)
  4740                           
  4741                           ; BSR set to: 0
  4742  005856  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4743  005858  0A80               	xorlw	128
  4744  00585A  0F7F               	addlw	-129
  4745  00585C  A0D8               	btfss	status,0,c
  4746  00585E  0012               	return	
  4747                           
  4748                           ; BSR set to: 0
  4749                           ;ui.c: 74: {;ui.c: 75: os.buttonCount = 0;
  4750  005860  0E00               	movlw	0
  4751  005862  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  4752                           
  4753                           ; BSR set to: 0
  4754                           ;ui.c: 76: };ui.c: 77: break;
  4755  005864  0012               	return	
  4756  005866                     
  4757                           ; BSR set to: 0
  4758                           ;ui.c: 80: if(os.buttonCount>0)
  4759                           
  4760                           ; BSR set to: 0
  4761  005866  51C6               	movf	(_os+1)& (0+255),w,b	;volatile
  4762  005868  0A80               	xorlw	128
  4763  00586A  0F7F               	addlw	-129
  4764  00586C  A0D8               	btfss	status,0,c
  4765  00586E  0012               	return	
  4766                           
  4767                           ; BSR set to: 0
  4768                           ;ui.c: 81: {;ui.c: 82: i2c_eeprom_writeByte(0x100, 0x78);
  4769  005870  0E01               	movlw	1
  4770  005872  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
  4771  005874  0E00               	movlw	0
  4772  005876  6E0B               	movwf	i2c_eeprom_writeByte@address,c
  4773  005878  0E78               	movlw	120
  4774  00587A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
  4775  00587C  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
  4776                           
  4777                           ;ui.c: 83: system_delay_ms(10);
  4778  005880  0E0A               	movlw	10
  4779  005882  EC19  F046         	call	_system_delay_ms
  4780                           
  4781                           ;ui.c: 84: reboot();
  4782  005886  EC14  F047         	call	_reboot	;wreg free
  4783                           
  4784                           ;ui.c: 87: }
  4785                           
  4786                           ;ui.c: 85: };ui.c: 86: break;
  4787  00588A  0012               	return	
  4788  00588C                     l1292:
  4789  00588C  0100               	movlb	0	; () banked
  4790  00588E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  4791                           
  4792                           ; Switch size 1, requested type "space"
  4793                           ; Number of cases is 8, Range of values is 0 to 112
  4794                           ; switch strategies available:
  4795                           ; Name         Instructions Cycles
  4796                           ; simple_byte           25    13 (average)
  4797                           ;	Chosen strategy is simple_byte
  4798  005890  0A00               	xorlw	0	; case 0
  4799  005892  B4D8               	btfsc	status,2,c
  4800  005894  D7A7               	goto	l1293
  4801  005896  0A10               	xorlw	16	; case 16
  4802  005898  B4D8               	btfsc	status,2,c
  4803  00589A  D7AD               	goto	l1296
  4804  00589C  0A30               	xorlw	48	; case 32
  4805  00589E  B4D8               	btfsc	status,2,c
  4806  0058A0  D7B2               	goto	l1298
  4807  0058A2  0A10               	xorlw	16	; case 48
  4808  0058A4  B4D8               	btfsc	status,2,c
  4809  0058A6  D7BB               	goto	l1300
  4810  0058A8  0A70               	xorlw	112	; case 64
  4811  0058AA  B4D8               	btfsc	status,2,c
  4812  0058AC  D7C8               	goto	l1304
  4813  0058AE  0A10               	xorlw	16	; case 80
  4814  0058B0  B4D8               	btfsc	status,2,c
  4815  0058B2  D7BD               	goto	l1302
  4816  0058B4  0A30               	xorlw	48	; case 96
  4817  0058B6  B4D8               	btfsc	status,2,c
  4818  0058B8  D7CE               	goto	l1306
  4819  0058BA  0A10               	xorlw	16	; case 112
  4820  0058BC  A4D8               	btfss	status,2,c
  4821  0058BE  0012               	return	
  4822  0058C0  D7D2               	goto	l1308
  4823  0058C2                     __end_of__ui_encoder:
  4824                           	opt stack 0
  4825                           tblptru	equ	0xFF8
  4826                           tblptrh	equ	0xFF7
  4827                           tblptrl	equ	0xFF6
  4828                           tablat	equ	0xFF5
  4829                           intcon3	equ	0xFF0
  4830                           postinc0	equ	0xFEE
  4831                           wreg	equ	0xFE8
  4832                           postdec1	equ	0xFE5
  4833                           plusw1	equ	0xFE3
  4834                           fsr1h	equ	0xFE2
  4835                           fsr1l	equ	0xFE1
  4836                           plusw2	equ	0xFDB
  4837                           status	equ	0xFD8
  4838                           
  4839 ;; *************** function _timer_pseudo_isr *****************
  4840 ;; Defined at:
  4841 ;;		line 19 in file "os.c"
  4842 ;; Parameters:    Size  Location     Type
  4843 ;;		None
  4844 ;; Auto vars:     Size  Location     Type
  4845 ;;		None
  4846 ;; Return value:  Size  Location     Type
  4847 ;;                  1    wreg      void 
  4848 ;; Registers used:
  4849 ;;		wreg, status,2, status,0
  4850 ;; Tracked objects:
  4851 ;;		On entry : 0/0
  4852 ;;		On exit  : 0/0
  4853 ;;		Unchanged: 0/0
  4854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4855 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4856 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4857 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4858 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4859 ;;Total ram usage:        0 bytes
  4860 ;; Hardware stack levels used:    1
  4861 ;; This function calls:
  4862 ;;		Nothing
  4863 ;; This function is called by:
  4864 ;;		_main
  4865 ;; This function uses a non-reentrant model
  4866 ;;
  4867                           
  4868                           	psect	text8
  4869  00879A                     __ptext8:
  4870                           	opt stack 0
  4871  00879A                     _timer_pseudo_isr:
  4872                           	opt stack 30
  4873                           
  4874                           ;os.c: 22: if(INTCONbits.T0IF==0)
  4875                           
  4876                           ;incstack = 0
  4877  00879A  A4F2               	btfss	intcon,2,c	;volatile
  4878  00879C  0012               	return	
  4879                           
  4880                           ;os.c: 25: };os.c: 29: TMR0H = 0xD1;
  4881                           
  4882                           ;os.c: 23: {;os.c: 24: return;
  4883  00879E  0ED1               	movlw	209
  4884  0087A0  6ED7               	movwf	4055,c	;volatile
  4885                           
  4886                           ;os.c: 30: TMR0L = 0x20;
  4887  0087A2  0E20               	movlw	32
  4888  0087A4  6ED6               	movwf	4054,c	;volatile
  4889                           
  4890                           ;os.c: 31: ++os.timeSlot;
  4891  0087A6  0100               	movlb	0	; () banked
  4892  0087A8  2BC7               	incf	(_os+2)& (0+255),f,b	;volatile
  4893                           
  4894                           ; BSR set to: 0
  4895                           ;os.c: 33: os.done = 0;
  4896  0087AA  0E00               	movlw	0
  4897  0087AC  6FC8               	movwf	(_os+3)& (0+255),b	;volatile
  4898                           
  4899                           ; BSR set to: 0
  4900                           ;os.c: 34: INTCONbits.T0IF = 0;
  4901  0087AE  94F2               	bcf	intcon,2,c	;volatile
  4902                           
  4903                           ; BSR set to: 0
  4904                           ;os.c: 37: if(INTCON3bits.INT1IF)
  4905  0087B0  A0F0               	btfss	intcon3,0,c	;volatile
  4906  0087B2  D002               	goto	l1083
  4907                           
  4908                           ; BSR set to: 0
  4909                           ;os.c: 38: {;os.c: 39: ++os.buttonCount;
  4910  0087B4  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
  4911                           
  4912                           ; BSR set to: 0
  4913                           ;os.c: 40: INTCON3bits.INT1IF = 0;
  4914  0087B6  90F0               	bcf	intcon3,0,c	;volatile
  4915  0087B8                     l1083:
  4916                           
  4917                           ; BSR set to: 0
  4918                           ;os.c: 41: };os.c: 44: if(INTCON3bits.INT2IF)
  4919                           
  4920                           ; BSR set to: 0
  4921  0087B8  A2F0               	btfss	intcon3,1,c	;volatile
  4922  0087BA  D003               	goto	l1084
  4923                           
  4924                           ; BSR set to: 0
  4925                           ;os.c: 45: {;os.c: 46: if(!PORTBbits.RB6)
  4926  0087BC  AC81               	btfss	3969,6,c	;volatile
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;os.c: 47: {;os.c: 48: --os.encoderCount;
  4930  0087BE  07C5               	decf	_os& (0+255),f,b	;volatile
  4931                           
  4932                           ; BSR set to: 0
  4933                           ;os.c: 49: };os.c: 50: INTCON3bits.INT2IF = 0;
  4934                           
  4935                           ; BSR set to: 0
  4936  0087C0  92F0               	bcf	intcon3,1,c	;volatile
  4937  0087C2                     l1084:
  4938                           
  4939                           ; BSR set to: 0
  4940                           ;os.c: 51: };os.c: 52: if(INTCON3bits.INT3IF)
  4941                           
  4942                           ; BSR set to: 0
  4943  0087C2  A4F0               	btfss	intcon3,2,c	;volatile
  4944  0087C4  0012               	return	
  4945                           
  4946                           ; BSR set to: 0
  4947                           ;os.c: 53: {;os.c: 54: if(!PORTBbits.RB7)
  4948  0087C6  AE81               	btfss	3969,7,c	;volatile
  4949                           
  4950                           ; BSR set to: 0
  4951                           ;os.c: 55: {;os.c: 56: ++os.encoderCount;
  4952  0087C8  2BC5               	incf	_os& (0+255),f,b	;volatile
  4953                           
  4954                           ; BSR set to: 0
  4955                           ;os.c: 57: };os.c: 58: INTCON3bits.INT3IF = 0;
  4956                           
  4957                           ; BSR set to: 0
  4958  0087CA  94F0               	bcf	intcon3,2,c	;volatile
  4959  0087CC  0012               	return	
  4960  0087CE                     __end_of_timer_pseudo_isr:
  4961                           	opt stack 0
  4962                           tblptru	equ	0xFF8
  4963                           tblptrh	equ	0xFF7
  4964                           tblptrl	equ	0xFF6
  4965                           tablat	equ	0xFF5
  4966                           intcon	equ	0xFF2
  4967                           intcon3	equ	0xFF0
  4968                           postinc0	equ	0xFEE
  4969                           wreg	equ	0xFE8
  4970                           postdec1	equ	0xFE5
  4971                           plusw1	equ	0xFE3
  4972                           fsr1h	equ	0xFE2
  4973                           fsr1l	equ	0xFE1
  4974                           plusw2	equ	0xFDB
  4975                           status	equ	0xFD8
  4976                           
  4977 ;; *************** function _system_minimal_init_undo *****************
  4978 ;; Defined at:
  4979 ;;		line 157 in file "os.c"
  4980 ;; Parameters:    Size  Location     Type
  4981 ;;		None
  4982 ;; Auto vars:     Size  Location     Type
  4983 ;;		None
  4984 ;; Return value:  Size  Location     Type
  4985 ;;                  1    wreg      void 
  4986 ;; Registers used:
  4987 ;;		wreg, status,2, cstack
  4988 ;; Tracked objects:
  4989 ;;		On entry : 0/0
  4990 ;;		On exit  : 0/0
  4991 ;;		Unchanged: 0/0
  4992 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4993 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4994 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4995 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4996 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4997 ;;Total ram usage:        0 bytes
  4998 ;; Hardware stack levels used:    1
  4999 ;; Hardware stack levels required when called:    1
  5000 ;; This function calls:
  5001 ;;		_i2c_reset
  5002 ;; This function is called by:
  5003 ;;		_main
  5004 ;; This function uses a non-reentrant model
  5005 ;;
  5006                           
  5007                           	psect	text9
  5008  008F28                     __ptext9:
  5009                           	opt stack 0
  5010  008F28                     _system_minimal_init_undo:
  5011                           	opt stack 29
  5012                           
  5013                           ;os.c: 160: i2c_reset();
  5014                           
  5015                           ;incstack = 0
  5016  008F28  ECAC  F047         	call	_i2c_reset	;wreg free
  5017                           
  5018                           ;os.c: 163: TRISAbits.TRISA0 = 1;
  5019  008F2C  8092               	bsf	3986,0,c	;volatile
  5020                           
  5021                           ;os.c: 164: ANCON0bits.PCFG0 = 0;
  5022  008F2E  010F               	movlb	15	; () banked
  5023  008F30  9148               	bcf	72,0,b	;volatile
  5024                           
  5025                           ; BSR set to: 15
  5026                           ;os.c: 167: LATCbits.LC2 = 0;
  5027  008F32  948B               	bcf	3979,2,c	;volatile
  5028                           
  5029                           ; BSR set to: 15
  5030                           ;os.c: 168: TRISCbits.TRISC2 = 1;
  5031  008F34  8494               	bsf	3988,2,c	;volatile
  5032                           
  5033                           ; BSR set to: 15
  5034  008F36  0012               	return		;funcret
  5035  008F38                     __end_of_system_minimal_init_undo:
  5036                           	opt stack 0
  5037                           tblptru	equ	0xFF8
  5038                           tblptrh	equ	0xFF7
  5039                           tblptrl	equ	0xFF6
  5040                           tablat	equ	0xFF5
  5041                           intcon	equ	0xFF2
  5042                           intcon3	equ	0xFF0
  5043                           postinc0	equ	0xFEE
  5044                           wreg	equ	0xFE8
  5045                           postdec1	equ	0xFE5
  5046                           plusw1	equ	0xFE3
  5047                           fsr1h	equ	0xFE2
  5048                           fsr1l	equ	0xFE1
  5049                           plusw2	equ	0xFDB
  5050                           status	equ	0xFD8
  5051                           
  5052 ;; *************** function _i2c_reset *****************
  5053 ;; Defined at:
  5054 ;;		line 110 in file "i2c.c"
  5055 ;; Parameters:    Size  Location     Type
  5056 ;;		None
  5057 ;; Auto vars:     Size  Location     Type
  5058 ;;		None
  5059 ;; Return value:  Size  Location     Type
  5060 ;;                  1    wreg      void 
  5061 ;; Registers used:
  5062 ;;		wreg, status,2
  5063 ;; Tracked objects:
  5064 ;;		On entry : 0/0
  5065 ;;		On exit  : 0/0
  5066 ;;		Unchanged: 0/0
  5067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5068 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5069 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5070 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5071 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5072 ;;Total ram usage:        0 bytes
  5073 ;; Hardware stack levels used:    1
  5074 ;; This function calls:
  5075 ;;		Nothing
  5076 ;; This function is called by:
  5077 ;;		_system_minimal_init_undo
  5078 ;; This function uses a non-reentrant model
  5079 ;;
  5080                           
  5081                           	psect	text10
  5082  008F58                     __ptext10:
  5083                           	opt stack 0
  5084  008F58                     _i2c_reset:
  5085                           	opt stack 29
  5086                           
  5087                           ;i2c.c: 112: SSP1STATbits.SMP = 0;
  5088                           
  5089                           ; BSR set to: 15
  5090                           ;incstack = 0
  5091  008F58  9EC7               	bcf	4039,7,c	;volatile
  5092                           
  5093                           ;i2c.c: 113: SSP1STATbits.CKE = 0;
  5094  008F5A  9CC7               	bcf	4039,6,c	;volatile
  5095                           
  5096                           ;i2c.c: 114: SSP1CON1 = 0x00;
  5097  008F5C  0E00               	movlw	0
  5098  008F5E  6EC6               	movwf	4038,c	;volatile
  5099                           
  5100                           ;i2c.c: 115: SSP1ADD = 0x00;
  5101  008F60  0E00               	movlw	0
  5102  008F62  6EC8               	movwf	4040,c	;volatile
  5103  008F64  0012               	return		;funcret
  5104  008F66                     __end_of_i2c_reset:
  5105                           	opt stack 0
  5106                           tblptru	equ	0xFF8
  5107                           tblptrh	equ	0xFF7
  5108                           tblptrl	equ	0xFF6
  5109                           tablat	equ	0xFF5
  5110                           intcon	equ	0xFF2
  5111                           intcon3	equ	0xFF0
  5112                           postinc0	equ	0xFEE
  5113                           wreg	equ	0xFE8
  5114                           postdec1	equ	0xFE5
  5115                           plusw1	equ	0xFE3
  5116                           fsr1h	equ	0xFE2
  5117                           fsr1l	equ	0xFE1
  5118                           plusw2	equ	0xFDB
  5119                           status	equ	0xFD8
  5120                           
  5121 ;; *************** function _system_minimal_init *****************
  5122 ;; Defined at:
  5123 ;;		line 139 in file "os.c"
  5124 ;; Parameters:    Size  Location     Type
  5125 ;;		None
  5126 ;; Auto vars:     Size  Location     Type
  5127 ;;		None
  5128 ;; Return value:  Size  Location     Type
  5129 ;;                  1    wreg      void 
  5130 ;; Registers used:
  5131 ;;		wreg, status,2, status,0, cstack
  5132 ;; Tracked objects:
  5133 ;;		On entry : 0/0
  5134 ;;		On exit  : 0/0
  5135 ;;		Unchanged: 0/0
  5136 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5137 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5138 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5139 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5140 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5141 ;;Total ram usage:        0 bytes
  5142 ;; Hardware stack levels used:    1
  5143 ;; Hardware stack levels required when called:    2
  5144 ;; This function calls:
  5145 ;;		_i2c_init
  5146 ;;		_system_delay_ms
  5147 ;; This function is called by:
  5148 ;;		_main
  5149 ;; This function uses a non-reentrant model
  5150 ;;
  5151                           
  5152                           	psect	text11
  5153  008E8A                     __ptext11:
  5154                           	opt stack 0
  5155  008E8A                     _system_minimal_init:
  5156                           	opt stack 28
  5157                           
  5158                           ;os.c: 142: TRISCbits.TRISC2 = 0;
  5159                           
  5160                           ;incstack = 0
  5161  008E8A  9494               	bcf	3988,2,c	;volatile
  5162                           
  5163                           ;os.c: 143: LATCbits.LC2 = 1;
  5164  008E8C  848B               	bsf	3979,2,c	;volatile
  5165                           
  5166                           ;os.c: 146: TRISAbits.TRISA0 = 1;
  5167  008E8E  8092               	bsf	3986,0,c	;volatile
  5168                           
  5169                           ;os.c: 147: ANCON0bits.PCFG0 = 1;
  5170  008E90  010F               	movlb	15	; () banked
  5171  008E92  8148               	bsf	72,0,b	;volatile
  5172                           
  5173                           ; BSR set to: 15
  5174                           ;os.c: 150: i2c_init();
  5175  008E94  ECBA  F047         	call	_i2c_init	;wreg free
  5176                           
  5177                           ;os.c: 153: system_delay_ms(50);
  5178  008E98  0E32               	movlw	50
  5179  008E9A  EC19  F046         	call	_system_delay_ms
  5180  008E9E  0012               	return		;funcret
  5181  008EA0                     __end_of_system_minimal_init:
  5182                           	opt stack 0
  5183                           tblptru	equ	0xFF8
  5184                           tblptrh	equ	0xFF7
  5185                           tblptrl	equ	0xFF6
  5186                           tablat	equ	0xFF5
  5187                           intcon	equ	0xFF2
  5188                           intcon3	equ	0xFF0
  5189                           postinc0	equ	0xFEE
  5190                           wreg	equ	0xFE8
  5191                           postdec1	equ	0xFE5
  5192                           plusw1	equ	0xFE3
  5193                           fsr1h	equ	0xFE2
  5194                           fsr1l	equ	0xFE1
  5195                           plusw2	equ	0xFDB
  5196                           status	equ	0xFD8
  5197                           
  5198 ;; *************** function _i2c_init *****************
  5199 ;; Defined at:
  5200 ;;		line 102 in file "i2c.c"
  5201 ;; Parameters:    Size  Location     Type
  5202 ;;		None
  5203 ;; Auto vars:     Size  Location     Type
  5204 ;;		None
  5205 ;; Return value:  Size  Location     Type
  5206 ;;                  1    wreg      void 
  5207 ;; Registers used:
  5208 ;;		wreg, status,2, status,0, cstack
  5209 ;; Tracked objects:
  5210 ;;		On entry : 0/0
  5211 ;;		On exit  : 0/0
  5212 ;;		Unchanged: 0/0
  5213 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5214 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5215 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5216 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5217 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5218 ;;Total ram usage:        0 bytes
  5219 ;; Hardware stack levels used:    1
  5220 ;; Hardware stack levels required when called:    1
  5221 ;; This function calls:
  5222 ;;		__i2c_open_1
  5223 ;;		_i2c_set_frequency
  5224 ;; This function is called by:
  5225 ;;		_system_minimal_init
  5226 ;; This function uses a non-reentrant model
  5227 ;;
  5228                           
  5229                           	psect	text12
  5230  008F74                     __ptext12:
  5231                           	opt stack 0
  5232  008F74                     _i2c_init:
  5233                           	opt stack 28
  5234                           
  5235                           ;i2c.c: 105: _i2c_open_1();
  5236                           
  5237                           ;incstack = 0
  5238  008F74  EC21  F047         	call	__i2c_open_1	;wreg free
  5239                           
  5240                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  5241  008F78  0E00               	movlw	0
  5242  008F7A  EC51  F045         	call	_i2c_set_frequency
  5243  008F7E  0012               	return		;funcret
  5244  008F80                     __end_of_i2c_init:
  5245                           	opt stack 0
  5246                           tblptru	equ	0xFF8
  5247                           tblptrh	equ	0xFF7
  5248                           tblptrl	equ	0xFF6
  5249                           tablat	equ	0xFF5
  5250                           intcon	equ	0xFF2
  5251                           intcon3	equ	0xFF0
  5252                           postinc0	equ	0xFEE
  5253                           wreg	equ	0xFE8
  5254                           postdec1	equ	0xFE5
  5255                           plusw1	equ	0xFE3
  5256                           fsr1h	equ	0xFE2
  5257                           fsr1l	equ	0xFE1
  5258                           plusw2	equ	0xFDB
  5259                           status	equ	0xFD8
  5260                           
  5261 ;; *************** function __i2c_open_1 *****************
  5262 ;; Defined at:
  5263 ;;		line 36 in file "i2c.c"
  5264 ;; Parameters:    Size  Location     Type
  5265 ;;		None
  5266 ;; Auto vars:     Size  Location     Type
  5267 ;;		None
  5268 ;; Return value:  Size  Location     Type
  5269 ;;                  1    wreg      void 
  5270 ;; Registers used:
  5271 ;;		wreg, status,2
  5272 ;; Tracked objects:
  5273 ;;		On entry : 0/0
  5274 ;;		On exit  : 0/0
  5275 ;;		Unchanged: 0/0
  5276 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5277 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5278 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5279 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5280 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5281 ;;Total ram usage:        0 bytes
  5282 ;; Hardware stack levels used:    1
  5283 ;; This function calls:
  5284 ;;		Nothing
  5285 ;; This function is called by:
  5286 ;;		_i2c_init
  5287 ;; This function uses a non-reentrant model
  5288 ;;
  5289                           
  5290                           	psect	text13
  5291  008E42                     __ptext13:
  5292                           	opt stack 0
  5293  008E42                     __i2c_open_1:
  5294                           	opt stack 28
  5295                           
  5296                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5297                           
  5298                           ;incstack = 0
  5299  008E42  9EC7               	bcf	4039,7,c	;volatile
  5300                           
  5301                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5302  008E44  9CC7               	bcf	4039,6,c	;volatile
  5303                           
  5304                           ;i2c.c: 40: SSP1ADD = 29;
  5305  008E46  0E1D               	movlw	29
  5306  008E48  6EC8               	movwf	4040,c	;volatile
  5307                           
  5308                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5309  008E4A  9EC6               	bcf	4038,7,c	;volatile
  5310                           
  5311                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5312  008E4C  9CC6               	bcf	4038,6,c	;volatile
  5313                           
  5314                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5315  008E4E  50C6               	movf	4038,w,c	;volatile
  5316  008E50  0BF0               	andlw	-16
  5317  008E52  0908               	iorlw	8
  5318  008E54  6EC6               	movwf	4038,c	;volatile
  5319                           
  5320                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5321  008E56  8AC6               	bsf	4038,5,c	;volatile
  5322  008E58  0012               	return		;funcret
  5323  008E5A                     __end_of__i2c_open_1:
  5324                           	opt stack 0
  5325                           tblptru	equ	0xFF8
  5326                           tblptrh	equ	0xFF7
  5327                           tblptrl	equ	0xFF6
  5328                           tablat	equ	0xFF5
  5329                           intcon	equ	0xFF2
  5330                           intcon3	equ	0xFF0
  5331                           postinc0	equ	0xFEE
  5332                           wreg	equ	0xFE8
  5333                           postdec1	equ	0xFE5
  5334                           plusw1	equ	0xFE3
  5335                           fsr1h	equ	0xFE2
  5336                           fsr1l	equ	0xFE1
  5337                           plusw2	equ	0xFDB
  5338                           status	equ	0xFD8
  5339                           
  5340 ;; *************** function _system_full_init *****************
  5341 ;; Defined at:
  5342 ;;		line 172 in file "os.c"
  5343 ;; Parameters:    Size  Location     Type
  5344 ;;		None
  5345 ;; Auto vars:     Size  Location     Type
  5346 ;;		None
  5347 ;; Return value:  Size  Location     Type
  5348 ;;                  1    wreg      void 
  5349 ;; Registers used:
  5350 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5351 ;; Tracked objects:
  5352 ;;		On entry : 0/0
  5353 ;;		On exit  : 0/0
  5354 ;;		Unchanged: 0/0
  5355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5356 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5358 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5359 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5360 ;;Total ram usage:        0 bytes
  5361 ;; Hardware stack levels used:    1
  5362 ;; Hardware stack levels required when called:    7
  5363 ;; This function calls:
  5364 ;;		__system_encoder_init
  5365 ;;		__system_timer0_init
  5366 ;;		_fat_init
  5367 ;;		_flash_init
  5368 ;;		_ui_init
  5369 ;; This function is called by:
  5370 ;;		_main
  5371 ;; This function uses a non-reentrant model
  5372 ;;
  5373                           
  5374                           	psect	text14
  5375  007C66                     __ptext14:
  5376                           	opt stack 0
  5377  007C66                     _system_full_init:
  5378                           	opt stack 23
  5379                           
  5380                           ;os.c: 179: TRISDbits.TRISD0 = 0;
  5381                           
  5382                           ;incstack = 0
  5383  007C66  9095               	bcf	3989,0,c	;volatile
  5384                           
  5385                           ;os.c: 180: LATDbits.LD0 = 0;
  5386  007C68  908C               	bcf	3980,0,c	;volatile
  5387                           
  5388                           ;os.c: 183: TRISDbits.TRISD3 = 0;
  5389  007C6A  9695               	bcf	3989,3,c	;volatile
  5390                           
  5391                           ;os.c: 184: LATDbits.LD3 = 0;
  5392  007C6C  968C               	bcf	3980,3,c	;volatile
  5393                           
  5394                           ;os.c: 187: TRISDbits.TRISD1 = 0;
  5395  007C6E  9295               	bcf	3989,1,c	;volatile
  5396                           
  5397                           ;os.c: 188: LATDbits.LD1 = 0;
  5398  007C70  928C               	bcf	3980,1,c	;volatile
  5399                           
  5400                           ;os.c: 191: TRISBbits.TRISB1 = 0;
  5401  007C72  9293               	bcf	3987,1,c	;volatile
  5402                           
  5403                           ;os.c: 192: LATBbits.LB1 = 0;
  5404  007C74  928A               	bcf	3978,1,c	;volatile
  5405                           
  5406                           ;os.c: 195: TRISBbits.TRISB2 = 0;
  5407  007C76  9493               	bcf	3987,2,c	;volatile
  5408                           
  5409                           ;os.c: 196: LATBbits.LB2 = 0;
  5410  007C78  948A               	bcf	3978,2,c	;volatile
  5411                           
  5412                           ;os.c: 197: TRISBbits.TRISB3 = 0;
  5413  007C7A  9693               	bcf	3987,3,c	;volatile
  5414                           
  5415                           ;os.c: 198: LATBbits.LB3 = 0;
  5416  007C7C  968A               	bcf	3978,3,c	;volatile
  5417                           
  5418                           ;os.c: 201: TRISDbits.TRISD6 = 1;
  5419  007C7E  8C95               	bsf	3989,6,c	;volatile
  5420                           
  5421                           ;os.c: 202: TRISDbits.TRISD4 = 0;
  5422  007C80  9895               	bcf	3989,4,c	;volatile
  5423                           
  5424                           ;os.c: 203: TRISDbits.TRISD5 = 0;
  5425  007C82  9A95               	bcf	3989,5,c	;volatile
  5426                           
  5427                           ;os.c: 204: TRISDbits.TRISD7 = 0;
  5428  007C84  9E95               	bcf	3989,7,c	;volatile
  5429                           
  5430                           ;os.c: 205: LATDbits.LD7 = 1;
  5431  007C86  8E8C               	bsf	3980,7,c	;volatile
  5432                           
  5433                           ;os.c: 206: TRISDbits.TRISD2 = 1;
  5434  007C88  8495               	bsf	3989,2,c	;volatile
  5435                           
  5436                           ;os.c: 209: TRISCbits.TRISC7 = 0;
  5437  007C8A  9E94               	bcf	3988,7,c	;volatile
  5438                           
  5439                           ;os.c: 210: LATCbits.LC7 = 0;
  5440  007C8C  9E8B               	bcf	3979,7,c	;volatile
  5441                           
  5442                           ;os.c: 213: TRISEbits.TRISE2 = 0;
  5443  007C8E  9496               	bcf	3990,2,c	;volatile
  5444                           
  5445                           ;os.c: 214: LATEbits.LE2 = 1;
  5446  007C90  848D               	bsf	3981,2,c	;volatile
  5447                           
  5448                           ;os.c: 215: TRISEbits.TRISE1 = 0;
  5449  007C92  9296               	bcf	3990,1,c	;volatile
  5450                           
  5451                           ;os.c: 216: LATEbits.LE1 = 1;
  5452  007C94  828D               	bsf	3981,1,c	;volatile
  5453                           
  5454                           ;os.c: 217: TRISEbits.TRISE0 = 0;
  5455  007C96  9096               	bcf	3990,0,c	;volatile
  5456                           
  5457                           ;os.c: 218: LATEbits.LE0 = 1;
  5458  007C98  808D               	bsf	3981,0,c	;volatile
  5459                           
  5460                           ;os.c: 219: TRISAbits.TRISA5 = 0;
  5461  007C9A  9A92               	bcf	3986,5,c	;volatile
  5462                           
  5463                           ;os.c: 220: LATAbits.LA5 = 1;
  5464  007C9C  8A89               	bsf	3977,5,c	;volatile
  5465                           
  5466                           ;os.c: 223: TRISBbits.TRISB7 = 1;
  5467  007C9E  8E93               	bsf	3987,7,c	;volatile
  5468                           
  5469                           ;os.c: 224: TRISBbits.TRISB6 = 1;
  5470  007CA0  8C93               	bsf	3987,6,c	;volatile
  5471                           
  5472                           ;os.c: 227: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  5473  007CA2  0E10               	movlw	16
  5474  007CA4  0100               	movlb	0	; () banked
  5475  007CA6  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  5476                           
  5477                           ;os.c: 228: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  5478  007CA8  0E00               	movlw	0
  5479  007CAA  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  5480                           
  5481                           ; BSR set to: 0
  5482                           ;os.c: 231: flash_init();
  5483  007CAC  ECFA  F046         	call	_flash_init	;wreg free
  5484                           
  5485                           ;os.c: 234: fat_init();
  5486  007CB0  EC9C  F047         	call	_fat_init	;wreg free
  5487                           
  5488                           ;os.c: 237: _system_encoder_init();
  5489  007CB4  EC5D  F043         	call	__system_encoder_init	;wreg free
  5490                           
  5491                           ;os.c: 240: ui_init();
  5492  007CB8  EC66  F047         	call	_ui_init	;wreg free
  5493                           
  5494                           ;os.c: 243: _system_timer0_init();
  5495  007CBC  EC82  F046         	call	__system_timer0_init	;wreg free
  5496  007CC0  0012               	return		;funcret
  5497  007CC2                     __end_of_system_full_init:
  5498                           	opt stack 0
  5499                           tblptru	equ	0xFF8
  5500                           tblptrh	equ	0xFF7
  5501                           tblptrl	equ	0xFF6
  5502                           tablat	equ	0xFF5
  5503                           intcon	equ	0xFF2
  5504                           intcon3	equ	0xFF0
  5505                           postinc0	equ	0xFEE
  5506                           wreg	equ	0xFE8
  5507                           postdec1	equ	0xFE5
  5508                           plusw1	equ	0xFE3
  5509                           fsr1h	equ	0xFE2
  5510                           fsr1l	equ	0xFE1
  5511                           plusw2	equ	0xFDB
  5512                           status	equ	0xFD8
  5513                           
  5514 ;; *************** function _ui_init *****************
  5515 ;; Defined at:
  5516 ;;		line 101 in file "ui.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5533 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5534 ;;Total ram usage:        0 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; This function calls:
  5537 ;;		Nothing
  5538 ;; This function is called by:
  5539 ;;		_system_full_init
  5540 ;;		_ui_run
  5541 ;; This function uses a non-reentrant model
  5542 ;;
  5543                           
  5544                           	psect	text15
  5545  008ECC                     __ptext15:
  5546                           	opt stack 0
  5547  008ECC                     _ui_init:
  5548                           	opt stack 29
  5549                           
  5550                           ;ui.c: 103: system_ui_inactive_count = 0;
  5551                           
  5552                           ;incstack = 0
  5553  008ECC  0E00               	movlw	0
  5554  008ECE  0101               	movlb	1	; () banked
  5555  008ED0  6F7D               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  5556  008ED2  0E00               	movlw	0
  5557  008ED4  6F7C               	movwf	_system_ui_inactive_count& (0+255),b
  5558                           
  5559                           ; BSR set to: 1
  5560                           ;ui.c: 105: LATCbits.LC2 = 1;
  5561  008ED6  848B               	bsf	3979,2,c	;volatile
  5562                           
  5563                           ;ui.c: 106: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  5564  008ED8  0E01               	movlw	1
  5565  008EDA  0100               	movlb	0	; () banked
  5566  008EDC  6FE6               	movwf	_userInterfaceStatus& (0+255),b
  5567                           
  5568                           ; BSR set to: 0
  5569  008EDE  0012               	return		;funcret
  5570  008EE0                     __end_of_ui_init:
  5571                           	opt stack 0
  5572                           tblptru	equ	0xFF8
  5573                           tblptrh	equ	0xFF7
  5574                           tblptrl	equ	0xFF6
  5575                           tablat	equ	0xFF5
  5576                           intcon	equ	0xFF2
  5577                           intcon3	equ	0xFF0
  5578                           postinc0	equ	0xFEE
  5579                           wreg	equ	0xFE8
  5580                           postdec1	equ	0xFE5
  5581                           plusw1	equ	0xFE3
  5582                           fsr1h	equ	0xFE2
  5583                           fsr1l	equ	0xFE1
  5584                           plusw2	equ	0xFDB
  5585                           status	equ	0xFD8
  5586                           
  5587 ;; *************** function _flash_init *****************
  5588 ;; Defined at:
  5589 ;;		line 360 in file "flash.c"
  5590 ;; Parameters:    Size  Location     Type
  5591 ;;		None
  5592 ;; Auto vars:     Size  Location     Type
  5593 ;;		None
  5594 ;; Return value:  Size  Location     Type
  5595 ;;                  1    wreg      void 
  5596 ;; Registers used:
  5597 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5598 ;; Tracked objects:
  5599 ;;		On entry : 0/0
  5600 ;;		On exit  : 0/0
  5601 ;;		Unchanged: 0/0
  5602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5603 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5604 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5605 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5606 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5607 ;;Total ram usage:        0 bytes
  5608 ;; Hardware stack levels used:    1
  5609 ;; Hardware stack levels required when called:    4
  5610 ;; This function calls:
  5611 ;;		__flash_set_page_size
  5612 ;;		_spi_init
  5613 ;;		_spi_set_configuration
  5614 ;; This function is called by:
  5615 ;;		_system_full_init
  5616 ;; This function uses a non-reentrant model
  5617 ;;
  5618                           
  5619                           	psect	text16
  5620  008DF4                     __ptext16:
  5621                           	opt stack 0
  5622  008DF4                     _flash_init:
  5623                           	opt stack 25
  5624                           
  5625                           ;flash.c: 363: spi_init(SPI_CONFIGURATION_INTERNAL);
  5626                           
  5627                           ; BSR set to: 0
  5628                           ;incstack = 0
  5629  008DF4  0E00               	movlw	0
  5630  008DF6  EC21  F043         	call	_spi_init
  5631                           
  5632                           ;flash.c: 364: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5633  008DFA  0E00               	movlw	0
  5634  008DFC  EC62  F023         	call	_spi_set_configuration
  5635                           
  5636                           ;flash.c: 367: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5637  008E00  0E00               	movlw	0
  5638  008E02  EC3D  F03A         	call	__flash_set_page_size
  5639                           
  5640                           ;flash.c: 370: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5641  008E06  0E01               	movlw	1
  5642  008E08  EC62  F023         	call	_spi_set_configuration
  5643  008E0C  0012               	return		;funcret
  5644  008E0E                     __end_of_flash_init:
  5645                           	opt stack 0
  5646                           tblptru	equ	0xFF8
  5647                           tblptrh	equ	0xFF7
  5648                           tblptrl	equ	0xFF6
  5649                           tablat	equ	0xFF5
  5650                           intcon	equ	0xFF2
  5651                           intcon3	equ	0xFF0
  5652                           postinc0	equ	0xFEE
  5653                           wreg	equ	0xFE8
  5654                           postdec1	equ	0xFE5
  5655                           plusw1	equ	0xFE3
  5656                           fsr1h	equ	0xFE2
  5657                           fsr1l	equ	0xFE1
  5658                           plusw2	equ	0xFDB
  5659                           status	equ	0xFD8
  5660                           
  5661 ;; *************** function _spi_init *****************
  5662 ;; Defined at:
  5663 ;;		line 122 in file "spi.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;  configuratio    1    wreg     enum E6749
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;  configuratio    1    3[COMRAM] enum E6749
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5677 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5678 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5680 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5681 ;;Total ram usage:        1 bytes
  5682 ;; Hardware stack levels used:    1
  5683 ;; Hardware stack levels required when called:    1
  5684 ;; This function calls:
  5685 ;;		__spi_init
  5686 ;; This function is called by:
  5687 ;;		_flash_init
  5688 ;; This function uses a non-reentrant model
  5689 ;;
  5690                           
  5691                           	psect	text17
  5692  008642                     __ptext17:
  5693                           	opt stack 0
  5694  008642                     _spi_init:
  5695                           	opt stack 27
  5696                           
  5697                           ;incstack = 0
  5698                           ;spi_init@configuration stored from wreg
  5699  008642  6E04               	movwf	spi_init@configuration,c
  5700                           
  5701                           ;spi.c: 124: switch(configuration)
  5702  008644  D012               	goto	l2975
  5703  008646                     
  5704                           ;spi.c: 127: _spi_init(config_internal);
  5705  008646  C169  F001         	movff	_config_internal,__spi_init@details
  5706  00864A  C16A  F002         	movff	_config_internal+1,__spi_init@details+1
  5707  00864E  C16B  F003         	movff	_config_internal+2,__spi_init@details+2
  5708  008652  EC7A  F043         	call	__spi_init	;wreg free
  5709                           
  5710                           ;spi.c: 128: break;
  5711  008656  D010               	goto	l2977
  5712  008658                     
  5713                           ;spi.c: 131: _spi_init(config_external);
  5714  008658  C166  F001         	movff	_config_external,__spi_init@details
  5715  00865C  C167  F002         	movff	_config_external+1,__spi_init@details+1
  5716  008660  C168  F003         	movff	_config_external+2,__spi_init@details+2
  5717  008664  EC7A  F043         	call	__spi_init	;wreg free
  5718                           
  5719                           ;spi.c: 133: }
  5720                           
  5721                           ;spi.c: 132: break;
  5722  008668  D007               	goto	l2977
  5723  00866A                     l2975:
  5724  00866A  5004               	movf	spi_init@configuration,w,c
  5725                           
  5726                           ; Switch size 1, requested type "space"
  5727                           ; Number of cases is 2, Range of values is 0 to 1
  5728                           ; switch strategies available:
  5729                           ; Name         Instructions Cycles
  5730                           ; simple_byte            7     4 (average)
  5731                           ;	Chosen strategy is simple_byte
  5732  00866C  0A00               	xorlw	0	; case 0
  5733  00866E  B4D8               	btfsc	status,2,c
  5734  008670  D7EA               	goto	l2976
  5735  008672  0A01               	xorlw	1	; case 1
  5736  008674  B4D8               	btfsc	status,2,c
  5737  008676  D7F0               	goto	l2978
  5738  008678                     l2977:
  5739                           
  5740                           ;spi.c: 135: active_configuration = configuration;
  5741  008678  C004  F18A         	movff	spi_init@configuration,_active_configuration
  5742  00867C  0012               	return		;funcret
  5743  00867E                     __end_of_spi_init:
  5744                           	opt stack 0
  5745                           tblptru	equ	0xFF8
  5746                           tblptrh	equ	0xFF7
  5747                           tblptrl	equ	0xFF6
  5748                           tablat	equ	0xFF5
  5749                           intcon	equ	0xFF2
  5750                           intcon3	equ	0xFF0
  5751                           postinc0	equ	0xFEE
  5752                           wreg	equ	0xFE8
  5753                           postdec1	equ	0xFE5
  5754                           plusw1	equ	0xFE3
  5755                           fsr1h	equ	0xFE2
  5756                           fsr1l	equ	0xFE1
  5757                           plusw2	equ	0xFDB
  5758                           status	equ	0xFD8
  5759                           
  5760 ;; *************** function __spi_init *****************
  5761 ;; Defined at:
  5762 ;;		line 25 in file "spi.c"
  5763 ;; Parameters:    Size  Location     Type
  5764 ;;  details         3    0[COMRAM] struct .
  5765 ;; Auto vars:     Size  Location     Type
  5766 ;;		None
  5767 ;; Return value:  Size  Location     Type
  5768 ;;                  1    wreg      void 
  5769 ;; Registers used:
  5770 ;;		wreg, status,2
  5771 ;; Tracked objects:
  5772 ;;		On entry : 0/0
  5773 ;;		On exit  : 0/0
  5774 ;;		Unchanged: 0/0
  5775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5776 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5777 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5778 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5779 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5780 ;;Total ram usage:        3 bytes
  5781 ;; Hardware stack levels used:    1
  5782 ;; This function calls:
  5783 ;;		Nothing
  5784 ;; This function is called by:
  5785 ;;		_spi_init
  5786 ;; This function uses a non-reentrant model
  5787 ;;
  5788                           
  5789                           	psect	text18
  5790  0086F4                     __ptext18:
  5791                           	opt stack 0
  5792  0086F4                     __spi_init:
  5793                           	opt stack 27
  5794                           
  5795                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5796                           
  5797                           ;incstack = 0
  5798  0086F4  0E55               	movlw	85
  5799  0086F6  6EA7               	movwf	4007,c	;volsfr
  5800  0086F8  0EAA               	movlw	170
  5801  0086FA  6EA7               	movwf	4007,c	;volsfr
  5802  0086FC  010E               	movlb	14	; () banked
  5803  0086FE  91BF               	bcf	191,0,b	;volatile
  5804                           
  5805                           ;spi.c: 32: RPINR21 = 23;
  5806  008700  0E17               	movlw	23
  5807  008702  6FFC               	movwf	252,b	;volatile
  5808                           
  5809                           ;spi.c: 33: RPOR21 = 10;
  5810  008704  0E0A               	movlw	10
  5811  008706  6FD5               	movwf	213,b	;volatile
  5812                           
  5813                           ;spi.c: 35: RPOR22 = 11;
  5814  008708  0E0B               	movlw	11
  5815  00870A  6FD6               	movwf	214,b	;volatile
  5816                           
  5817                           ;spi.c: 36: RPINR22 = 22;
  5818  00870C  0E16               	movlw	22
  5819  00870E  6FFD               	movwf	253,b	;volatile
  5820                           
  5821                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5822  008710  0E55               	movlw	85
  5823  008712  6EA7               	movwf	4007,c	;volsfr
  5824  008714  0EAA               	movlw	170
  5825  008716  6EA7               	movwf	4007,c	;volsfr
  5826                           
  5827                           ; BSR set to: 14
  5828  008718  81BF               	bsf	191,0,b	;volatile
  5829                           
  5830                           ; BSR set to: 14
  5831                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5832  00871A  8E73               	bsf	3955,7,c	;volatile
  5833                           
  5834                           ; BSR set to: 14
  5835                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5836  00871C  8C73               	bsf	3955,6,c	;volatile
  5837                           
  5838                           ; BSR set to: 14
  5839                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5840  00871E  9872               	bcf	3954,4,c	;volatile
  5841                           
  5842                           ; BSR set to: 14
  5843                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5844  008720  9072               	bcf	3954,0,c	;volatile
  5845  008722  9272               	bcf	3954,1,c	;volatile
  5846  008724  9472               	bcf	3954,2,c	;volatile
  5847  008726  9672               	bcf	3954,3,c	;volatile
  5848                           
  5849                           ; BSR set to: 14
  5850                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5851  008728  8A72               	bsf	3954,5,c	;volatile
  5852                           
  5853                           ; BSR set to: 14
  5854  00872A  0012               	return		;funcret
  5855  00872C                     __end_of__spi_init:
  5856                           	opt stack 0
  5857                           tblptru	equ	0xFF8
  5858                           tblptrh	equ	0xFF7
  5859                           tblptrl	equ	0xFF6
  5860                           tablat	equ	0xFF5
  5861                           intcon	equ	0xFF2
  5862                           intcon3	equ	0xFF0
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           postdec1	equ	0xFE5
  5866                           plusw1	equ	0xFE3
  5867                           fsr1h	equ	0xFE2
  5868                           fsr1l	equ	0xFE1
  5869                           plusw2	equ	0xFDB
  5870                           status	equ	0xFD8
  5871                           
  5872 ;; *************** function __flash_set_page_size *****************
  5873 ;; Defined at:
  5874 ;;		line 98 in file "flash.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;  size            1    wreg     enum E6898
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;  size            1   23[COMRAM] enum E6898
  5879 ;;  command         4   19[COMRAM] unsigned char [4]
  5880 ;; Return value:  Size  Location     Type
  5881 ;;                  1    wreg      void 
  5882 ;; Registers used:
  5883 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5884 ;; Tracked objects:
  5885 ;;		On entry : 0/0
  5886 ;;		On exit  : 0/0
  5887 ;;		Unchanged: 0/0
  5888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5889 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5890 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5891 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5892 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5893 ;;Total ram usage:        5 bytes
  5894 ;; Hardware stack levels used:    1
  5895 ;; Hardware stack levels required when called:    3
  5896 ;; This function calls:
  5897 ;;		__flash_is_busy
  5898 ;;		_memcpy
  5899 ;;		_spi_tx
  5900 ;; This function is called by:
  5901 ;;		_flash_init
  5902 ;; This function uses a non-reentrant model
  5903 ;;
  5904                           
  5905                           	psect	text19
  5906  00747A                     __ptext19:
  5907                           	opt stack 0
  5908  00747A                     __flash_set_page_size:
  5909                           	opt stack 25
  5910                           
  5911                           ; BSR set to: 14
  5912                           ;incstack = 0
  5913                           ;__flash_set_page_size@size stored from wreg
  5914  00747A  6E18               	movwf	__flash_set_page_size@size,c
  5915  00747C                     
  5916                           ;flash.c: 100: uint8_t command[4];;flash.c: 103: while(_flash_is_busy());
  5917  00747C  EC71  F046         	call	__flash_is_busy	;wreg free
  5918  007480  0900               	iorlw	0
  5919  007482  A4D8               	btfss	status,2,c
  5920  007484  D7FB               	goto	l14263
  5921                           
  5922                           ;flash.c: 106: if(size==FLASH_PAGE_SIZE_512)
  5923  007486  5018               	movf	__flash_set_page_size@size,w,c
  5924  007488  A4D8               	btfss	status,2,c
  5925  00748A  D013               	goto	l1741
  5926                           
  5927                           ;flash.c: 107: memcpy(command, flash_command_pagesize_512, 4);
  5928  00748C  0E14               	movlw	low __flash_set_page_size@command
  5929  00748E  6E01               	movwf	memcpy@d1,c
  5930  007490  0E00               	movlw	high __flash_set_page_size@command
  5931  007492  6E02               	movwf	memcpy@d1+1,c
  5932  007494  0EC4               	movlw	low _flash_command_pagesize_512
  5933  007496  6E03               	movwf	memcpy@s1,c
  5934  007498  0E9F               	movlw	high _flash_command_pagesize_512
  5935  00749A  6E04               	movwf	memcpy@s1+1,c
  5936  00749C  5003               	movf	memcpy@s1,w,c
  5937  00749E  1004               	iorwf	memcpy@s1+1,w,c
  5938  0074A0  A4D8               	btfss	status,2,c
  5939  0074A2  0E00               	movlw	low (__mediumconst shr (0+16))
  5940  0074A4  6E05               	movwf	memcpy@s1+2,c
  5941  0074A6  0E00               	movlw	0
  5942  0074A8  6E07               	movwf	memcpy@n+1,c
  5943  0074AA  0E04               	movlw	4
  5944  0074AC  6E06               	movwf	memcpy@n,c
  5945  0074AE  ECDD  F03C         	call	_memcpy	;wreg free
  5946  0074B2                     l1741:
  5947                           
  5948                           ;flash.c: 108: if(size==FLASH_PAGE_SIZE_528)
  5949  0074B2  0418               	decf	__flash_set_page_size@size,w,c
  5950  0074B4  A4D8               	btfss	status,2,c
  5951  0074B6  D013               	goto	l1742
  5952                           
  5953                           ;flash.c: 109: memcpy(command, flash_command_pagesize_528, 4);
  5954  0074B8  0E14               	movlw	low __flash_set_page_size@command
  5955  0074BA  6E01               	movwf	memcpy@d1,c
  5956  0074BC  0E00               	movlw	high __flash_set_page_size@command
  5957  0074BE  6E02               	movwf	memcpy@d1+1,c
  5958  0074C0  0EC0               	movlw	low _flash_command_pagesize_528
  5959  0074C2  6E03               	movwf	memcpy@s1,c
  5960  0074C4  0E9F               	movlw	high _flash_command_pagesize_528
  5961  0074C6  6E04               	movwf	memcpy@s1+1,c
  5962  0074C8  5003               	movf	memcpy@s1,w,c
  5963  0074CA  1004               	iorwf	memcpy@s1+1,w,c
  5964  0074CC  A4D8               	btfss	status,2,c
  5965  0074CE  0E00               	movlw	low (__mediumconst shr (0+16))
  5966  0074D0  6E05               	movwf	memcpy@s1+2,c
  5967  0074D2  0E00               	movlw	0
  5968  0074D4  6E07               	movwf	memcpy@n+1,c
  5969  0074D6  0E04               	movlw	4
  5970  0074D8  6E06               	movwf	memcpy@n,c
  5971  0074DA  ECDD  F03C         	call	_memcpy	;wreg free
  5972  0074DE                     l1742:
  5973                           
  5974                           ;flash.c: 112: spi_tx(command, 4);
  5975  0074DE  0E14               	movlw	low __flash_set_page_size@command
  5976  0074E0  6E01               	movwf	spi_tx@data,c
  5977  0074E2  0E00               	movlw	high __flash_set_page_size@command
  5978  0074E4  6E02               	movwf	spi_tx@data+1,c
  5979  0074E6  0E00               	movlw	0
  5980  0074E8  6E04               	movwf	spi_tx@length+1,c
  5981  0074EA  0E04               	movlw	4
  5982  0074EC  6E03               	movwf	spi_tx@length,c
  5983  0074EE  EC12  F03F         	call	_spi_tx	;wreg free
  5984  0074F2  0012               	return		;funcret
  5985  0074F4                     __end_of__flash_set_page_size:
  5986                           	opt stack 0
  5987                           tblptru	equ	0xFF8
  5988                           tblptrh	equ	0xFF7
  5989                           tblptrl	equ	0xFF6
  5990                           tablat	equ	0xFF5
  5991                           intcon	equ	0xFF2
  5992                           intcon3	equ	0xFF0
  5993                           postinc0	equ	0xFEE
  5994                           wreg	equ	0xFE8
  5995                           postdec1	equ	0xFE5
  5996                           plusw1	equ	0xFE3
  5997                           fsr1h	equ	0xFE2
  5998                           fsr1l	equ	0xFE1
  5999                           plusw2	equ	0xFDB
  6000                           status	equ	0xFD8
  6001                           
  6002 ;; *************** function _fat_init *****************
  6003 ;; Defined at:
  6004 ;;		line 1318 in file "fat16.c"
  6005 ;; Parameters:    Size  Location     Type
  6006 ;;		None
  6007 ;; Auto vars:     Size  Location     Type
  6008 ;;		None
  6009 ;; Return value:  Size  Location     Type
  6010 ;;                  1    wreg      void 
  6011 ;; Registers used:
  6012 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6013 ;; Tracked objects:
  6014 ;;		On entry : 0/0
  6015 ;;		On exit  : 0/0
  6016 ;;		Unchanged: 0/0
  6017 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6018 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6019 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6020 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6021 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6022 ;;Total ram usage:        0 bytes
  6023 ;; Hardware stack levels used:    1
  6024 ;; Hardware stack levels required when called:    6
  6025 ;; This function calls:
  6026 ;;		_fat_format
  6027 ;;		_fat_get_format_status
  6028 ;; This function is called by:
  6029 ;;		_system_full_init
  6030 ;; This function uses a non-reentrant model
  6031 ;;
  6032                           
  6033                           	psect	text20
  6034  008F38                     __ptext20:
  6035                           	opt stack 0
  6036  008F38                     _fat_init:
  6037                           	opt stack 23
  6038                           
  6039                           ;fat16.c: 1321: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  6040                           
  6041                           ;incstack = 0
  6042  008F38  ECE6  F033         	call	_fat_get_format_status	;wreg free
  6043  008F3C  0900               	iorlw	0
  6044  008F3E  A4D8               	btfss	status,2,c
  6045  008F40  0012               	return	
  6046                           
  6047                           ;fat16.c: 1322: {;fat16.c: 1323: fat_format();
  6048  008F42  EC7D  F014         	call	_fat_format	;wreg free
  6049  008F46  0012               	return	
  6050  008F48                     __end_of_fat_init:
  6051                           	opt stack 0
  6052                           tblptru	equ	0xFF8
  6053                           tblptrh	equ	0xFF7
  6054                           tblptrl	equ	0xFF6
  6055                           tablat	equ	0xFF5
  6056                           intcon	equ	0xFF2
  6057                           intcon3	equ	0xFF0
  6058                           postinc0	equ	0xFEE
  6059                           wreg	equ	0xFE8
  6060                           postdec1	equ	0xFE5
  6061                           plusw1	equ	0xFE3
  6062                           fsr1h	equ	0xFE2
  6063                           fsr1l	equ	0xFE1
  6064                           plusw2	equ	0xFDB
  6065                           status	equ	0xFD8
  6066                           
  6067 ;; *************** function _fat_get_format_status *****************
  6068 ;; Defined at:
  6069 ;;		line 1230 in file "fat16.c"
  6070 ;; Parameters:    Size  Location     Type
  6071 ;;		None
  6072 ;; Auto vars:     Size  Location     Type
  6073 ;;  cntr            2   45[COMRAM] unsigned int 
  6074 ;; Return value:  Size  Location     Type
  6075 ;;                  1    wreg      enum E6872
  6076 ;; Registers used:
  6077 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6078 ;; Tracked objects:
  6079 ;;		On entry : 0/0
  6080 ;;		On exit  : 0/0
  6081 ;;		Unchanged: 0/0
  6082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6083 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6084 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6085 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6086 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6087 ;;Total ram usage:        4 bytes
  6088 ;; Hardware stack levels used:    1
  6089 ;; Hardware stack levels required when called:    5
  6090 ;; This function calls:
  6091 ;;		__get_fbr
  6092 ;;		__get_mbr
  6093 ;;		_flash_sector_read
  6094 ;; This function is called by:
  6095 ;;		_fat_init
  6096 ;; This function uses a non-reentrant model
  6097 ;;
  6098                           
  6099                           	psect	text21
  6100  0067CC                     __ptext21:
  6101                           	opt stack 0
  6102  0067CC                     _fat_get_format_status:
  6103                           	opt stack 23
  6104                           
  6105                           ;fat16.c: 1232: uint16_t cntr;;fat16.c: 1235: flash_sector_read(0, buffer);
  6106                           
  6107                           ;incstack = 0
  6108  0067CC  0E00               	movlw	0
  6109  0067CE  6E29               	movwf	flash_sector_read@page+1,c
  6110  0067D0  0E00               	movlw	0
  6111  0067D2  6E28               	movwf	flash_sector_read@page,c
  6112  0067D4  0EC0               	movlw	low _buffer
  6113  0067D6  6E2A               	movwf	flash_sector_read@data,c
  6114  0067D8  0E03               	movlw	high _buffer
  6115  0067DA  6E2B               	movwf	flash_sector_read@data+1,c
  6116  0067DC  EC67  F044         	call	_flash_sector_read	;wreg free
  6117                           
  6118                           ;fat16.c: 1236: for(cntr=0; cntr<512; ++cntr)
  6119  0067E0  0E00               	movlw	0
  6120  0067E2  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6121  0067E4  0E00               	movlw	0
  6122  0067E6  6E2E               	movwf	fat_get_format_status@cntr,c
  6123  0067E8                     l14291:
  6124  0067E8  0E02               	movlw	2
  6125  0067EA  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6126  0067EC  B0D8               	btfsc	status,0,c
  6127  0067EE  D016               	goto	u11350
  6128                           
  6129                           ;fat16.c: 1237: {;fat16.c: 1238: if(buffer[cntr] != _get_mbr(cntr))
  6130  0067F0  0EC0               	movlw	low _buffer
  6131  0067F2  242E               	addwf	fat_get_format_status@cntr,w,c
  6132  0067F4  6ED9               	movwf	fsr2l,c
  6133  0067F6  0E03               	movlw	high _buffer
  6134  0067F8  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6135  0067FA  6EDA               	movwf	fsr2h,c
  6136  0067FC  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  6137  006800  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  6138  006804  EC79  F02E         	call	__get_mbr	;wreg free
  6139  006808  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6140  00680A  50DE               	movf	postinc2,w,c
  6141  00680C  182D               	xorwf	??_fat_get_format_status+1,w,c
  6142  00680E  B4D8               	btfsc	status,2,c
  6143  006810  D002               	goto	l2252
  6144                           
  6145                           ;fat16.c: 1239: {;fat16.c: 1240: return DRIVE_NOT_FORMATED;
  6146  006812  0E00               	movlw	0
  6147  006814  0012               	return	
  6148  006816                     l2252:
  6149  006816  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6150  006818  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6151  00681A  D7E6               	goto	l14291
  6152  00681C                     u11350:
  6153                           
  6154                           ;fat16.c: 1241: };fat16.c: 1242: };fat16.c: 1245: flash_sector_read(1, buffer);
  6155  00681C  0E00               	movlw	0
  6156  00681E  6E29               	movwf	flash_sector_read@page+1,c
  6157  006820  0E01               	movlw	1
  6158  006822  6E28               	movwf	flash_sector_read@page,c
  6159  006824  0EC0               	movlw	low _buffer
  6160  006826  6E2A               	movwf	flash_sector_read@data,c
  6161  006828  0E03               	movlw	high _buffer
  6162  00682A  6E2B               	movwf	flash_sector_read@data+1,c
  6163  00682C  EC67  F044         	call	_flash_sector_read	;wreg free
  6164                           
  6165                           ;fat16.c: 1246: for(cntr=0; cntr<512; ++cntr)
  6166  006830  0E00               	movlw	0
  6167  006832  6E2F               	movwf	fat_get_format_status@cntr+1,c
  6168  006834  0E00               	movlw	0
  6169  006836  6E2E               	movwf	fat_get_format_status@cntr,c
  6170  006838                     l14309:
  6171  006838  0E02               	movlw	2
  6172  00683A  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  6173  00683C  B0D8               	btfsc	status,0,c
  6174  00683E  D016               	goto	u11380
  6175                           
  6176                           ;fat16.c: 1247: {;fat16.c: 1248: if(buffer[cntr] != _get_fbr(cntr))
  6177  006840  0EC0               	movlw	low _buffer
  6178  006842  242E               	addwf	fat_get_format_status@cntr,w,c
  6179  006844  6ED9               	movwf	fsr2l,c
  6180  006846  0E03               	movlw	high _buffer
  6181  006848  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  6182  00684A  6EDA               	movwf	fsr2h,c
  6183  00684C  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  6184  006850  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  6185  006854  ECE6  F00E         	call	__get_fbr	;wreg free
  6186  006858  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  6187  00685A  50DE               	movf	postinc2,w,c
  6188  00685C  182D               	xorwf	??_fat_get_format_status+1,w,c
  6189  00685E  B4D8               	btfsc	status,2,c
  6190  006860  D002               	goto	l2256
  6191                           
  6192                           ;fat16.c: 1249: {;fat16.c: 1250: return DRIVE_NOT_FORMATED;
  6193  006862  0E00               	movlw	0
  6194  006864  0012               	return	
  6195  006866                     l2256:
  6196  006866  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  6197  006868  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  6198  00686A  D7E6               	goto	l14309
  6199  00686C                     u11380:
  6200                           
  6201                           ;fat16.c: 1251: };fat16.c: 1252: };fat16.c: 1255: return DRIVE_FORMATED;
  6202  00686C  0E01               	movlw	1
  6203  00686E  0012               	return	
  6204  006870                     __end_of_fat_get_format_status:
  6205                           	opt stack 0
  6206                           tblptru	equ	0xFF8
  6207                           tblptrh	equ	0xFF7
  6208                           tblptrl	equ	0xFF6
  6209                           tablat	equ	0xFF5
  6210                           intcon	equ	0xFF2
  6211                           intcon3	equ	0xFF0
  6212                           postinc0	equ	0xFEE
  6213                           wreg	equ	0xFE8
  6214                           postdec1	equ	0xFE5
  6215                           plusw1	equ	0xFE3
  6216                           fsr1h	equ	0xFE2
  6217                           fsr1l	equ	0xFE1
  6218                           postinc2	equ	0xFDE
  6219                           plusw2	equ	0xFDB
  6220                           fsr2h	equ	0xFDA
  6221                           fsr2l	equ	0xFD9
  6222                           status	equ	0xFD8
  6223                           
  6224 ;; *************** function __system_timer0_init *****************
  6225 ;; Defined at:
  6226 ;;		line 112 in file "os.c"
  6227 ;; Parameters:    Size  Location     Type
  6228 ;;		None
  6229 ;; Auto vars:     Size  Location     Type
  6230 ;;		None
  6231 ;; Return value:  Size  Location     Type
  6232 ;;                  1    wreg      void 
  6233 ;; Registers used:
  6234 ;;		wreg, status,2
  6235 ;; Tracked objects:
  6236 ;;		On entry : 0/0
  6237 ;;		On exit  : 0/0
  6238 ;;		Unchanged: 0/0
  6239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6240 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6241 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6242 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6243 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6244 ;;Total ram usage:        0 bytes
  6245 ;; Hardware stack levels used:    1
  6246 ;; This function calls:
  6247 ;;		Nothing
  6248 ;; This function is called by:
  6249 ;;		_system_full_init
  6250 ;; This function uses a non-reentrant model
  6251 ;;
  6252                           
  6253                           	psect	text22
  6254  008D04                     __ptext22:
  6255                           	opt stack 0
  6256  008D04                     __system_timer0_init:
  6257                           	opt stack 29
  6258                           
  6259                           ;os.c: 115: T0CONbits.T0CS = 0;
  6260                           
  6261                           ;incstack = 0
  6262  008D04  9AD5               	bcf	4053,5,c	;volatile
  6263                           
  6264                           ;os.c: 117: T0CONbits.T08BIT = 0;
  6265  008D06  9CD5               	bcf	4053,6,c	;volatile
  6266                           
  6267                           ;os.c: 119: T0CONbits.T0PS2 = 0;
  6268  008D08  94D5               	bcf	4053,2,c	;volatile
  6269                           
  6270                           ;os.c: 120: T0CONbits.T0PS1 = 1;
  6271  008D0A  82D5               	bsf	4053,1,c	;volatile
  6272                           
  6273                           ;os.c: 121: T0CONbits.T0PS0 = 0;
  6274  008D0C  90D5               	bcf	4053,0,c	;volatile
  6275                           
  6276                           ;os.c: 123: T0CONbits.PSA = 0;
  6277  008D0E  96D5               	bcf	4053,3,c	;volatile
  6278                           
  6279                           ;os.c: 125: TMR0H = 0xD1;
  6280  008D10  0ED1               	movlw	209
  6281  008D12  6ED7               	movwf	4055,c	;volatile
  6282                           
  6283                           ;os.c: 126: TMR0L = 0x20;
  6284  008D14  0E20               	movlw	32
  6285  008D16  6ED6               	movwf	4054,c	;volatile
  6286                           
  6287                           ;os.c: 128: T0CONbits.TMR0ON = 1;
  6288  008D18  8ED5               	bsf	4053,7,c	;volatile
  6289                           
  6290                           ;os.c: 132: INTCONbits.TMR0IF = 0;
  6291  008D1A  94F2               	bcf	intcon,2,c	;volatile
  6292                           
  6293                           ;os.c: 135: os.timeSlot = 0;
  6294  008D1C  0E00               	movlw	0
  6295  008D1E  0100               	movlb	0	; () banked
  6296  008D20  6FC7               	movwf	(_os+2)& (0+255),b	;volatile
  6297                           
  6298                           ; BSR set to: 0
  6299  008D22  0012               	return		;funcret
  6300  008D24                     __end_of__system_timer0_init:
  6301                           	opt stack 0
  6302                           tblptru	equ	0xFF8
  6303                           tblptrh	equ	0xFF7
  6304                           tblptrl	equ	0xFF6
  6305                           tablat	equ	0xFF5
  6306                           intcon	equ	0xFF2
  6307                           intcon3	equ	0xFF0
  6308                           postinc0	equ	0xFEE
  6309                           wreg	equ	0xFE8
  6310                           postdec1	equ	0xFE5
  6311                           plusw1	equ	0xFE3
  6312                           fsr1h	equ	0xFE2
  6313                           fsr1l	equ	0xFE1
  6314                           postinc2	equ	0xFDE
  6315                           plusw2	equ	0xFDB
  6316                           fsr2h	equ	0xFDA
  6317                           fsr2l	equ	0xFD9
  6318                           status	equ	0xFD8
  6319                           
  6320 ;; *************** function __system_encoder_init *****************
  6321 ;; Defined at:
  6322 ;;		line 73 in file "os.c"
  6323 ;; Parameters:    Size  Location     Type
  6324 ;;		None
  6325 ;; Auto vars:     Size  Location     Type
  6326 ;;		None
  6327 ;; Return value:  Size  Location     Type
  6328 ;;                  1    wreg      void 
  6329 ;; Registers used:
  6330 ;;		wreg, status,2
  6331 ;; Tracked objects:
  6332 ;;		On entry : 0/0
  6333 ;;		On exit  : 0/0
  6334 ;;		Unchanged: 0/0
  6335 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6336 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6337 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6338 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6339 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6340 ;;Total ram usage:        0 bytes
  6341 ;; Hardware stack levels used:    1
  6342 ;; This function calls:
  6343 ;;		Nothing
  6344 ;; This function is called by:
  6345 ;;		_system_full_init
  6346 ;; This function uses a non-reentrant model
  6347 ;;
  6348                           
  6349                           	psect	text23
  6350  0086BA                     __ptext23:
  6351                           	opt stack 0
  6352  0086BA                     __system_encoder_init:
  6353                           	opt stack 29
  6354                           
  6355                           ;os.c: 75: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  6356                           
  6357                           ; BSR set to: 0
  6358                           ;incstack = 0
  6359  0086BA  0E55               	movlw	85
  6360  0086BC  6EA7               	movwf	4007,c	;volsfr
  6361  0086BE  0EAA               	movlw	170
  6362  0086C0  6EA7               	movwf	4007,c	;volsfr
  6363  0086C2  010E               	movlb	14	; () banked
  6364  0086C4  91BF               	bcf	191,0,b	;volatile
  6365                           
  6366                           ;os.c: 76: RPINR1 = 0;
  6367  0086C6  0E00               	movlw	0
  6368  0086C8  6FE1               	movwf	225,b	;volatile
  6369                           
  6370                           ;os.c: 77: RPINR3 = 9;
  6371  0086CA  0E09               	movlw	9
  6372  0086CC  6FE3               	movwf	227,b	;volatile
  6373                           
  6374                           ;os.c: 78: RPINR2 = 10;
  6375  0086CE  0E0A               	movlw	10
  6376  0086D0  6FE2               	movwf	226,b	;volatile
  6377                           
  6378                           ;os.c: 79: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  6379  0086D2  0E55               	movlw	85
  6380  0086D4  6EA7               	movwf	4007,c	;volsfr
  6381  0086D6  0EAA               	movlw	170
  6382  0086D8  6EA7               	movwf	4007,c	;volsfr
  6383                           
  6384                           ; BSR set to: 14
  6385  0086DA  91BF               	bcf	191,0,b	;volatile
  6386                           
  6387                           ; BSR set to: 14
  6388                           ;os.c: 82: INTCON2bits.INTEDG1 = 0;
  6389  0086DC  9AF1               	bcf	intcon2,5,c	;volatile
  6390                           
  6391                           ; BSR set to: 14
  6392                           ;os.c: 83: INTCON3bits.INT1IF = 0;
  6393  0086DE  90F0               	bcf	intcon3,0,c	;volatile
  6394                           
  6395                           ; BSR set to: 14
  6396                           ;os.c: 85: INTCON2bits.INTEDG2 = 1;
  6397  0086E0  88F1               	bsf	intcon2,4,c	;volatile
  6398                           
  6399                           ; BSR set to: 14
  6400                           ;os.c: 86: INTCON3bits.INT2IF = 0;
  6401  0086E2  92F0               	bcf	intcon3,1,c	;volatile
  6402                           
  6403                           ; BSR set to: 14
  6404                           ;os.c: 88: INTCON2bits.INTEDG3 = 1;
  6405  0086E4  86F1               	bsf	intcon2,3,c	;volatile
  6406                           
  6407                           ; BSR set to: 14
  6408                           ;os.c: 89: INTCON3bits.INT3IF = 0;
  6409  0086E6  94F0               	bcf	intcon3,2,c	;volatile
  6410                           
  6411                           ;os.c: 91: os.encoderCount = 0;
  6412  0086E8  0E00               	movlw	0
  6413  0086EA  0100               	movlb	0	; () banked
  6414  0086EC  6FC5               	movwf	_os& (0+255),b	;volatile
  6415                           
  6416                           ;os.c: 92: os.buttonCount = 0;
  6417  0086EE  0E00               	movlw	0
  6418  0086F0  6FC6               	movwf	(_os+1)& (0+255),b	;volatile
  6419                           
  6420                           ; BSR set to: 0
  6421  0086F2  0012               	return		;funcret
  6422  0086F4                     __end_of__system_encoder_init:
  6423                           	opt stack 0
  6424                           tblptru	equ	0xFF8
  6425                           tblptrh	equ	0xFF7
  6426                           tblptrl	equ	0xFF6
  6427                           tablat	equ	0xFF5
  6428                           intcon	equ	0xFF2
  6429                           intcon2	equ	0xFF1
  6430                           intcon3	equ	0xFF0
  6431                           postinc0	equ	0xFEE
  6432                           wreg	equ	0xFE8
  6433                           postdec1	equ	0xFE5
  6434                           plusw1	equ	0xFE3
  6435                           fsr1h	equ	0xFE2
  6436                           fsr1l	equ	0xFE1
  6437                           postinc2	equ	0xFDE
  6438                           plusw2	equ	0xFDB
  6439                           fsr2h	equ	0xFDA
  6440                           fsr2l	equ	0xFD9
  6441                           status	equ	0xFD8
  6442                           
  6443 ;; *************** function _spi_get_external_tx_buffer *****************
  6444 ;; Defined at:
  6445 ;;		line 75 in file "spi.c"
  6446 ;; Parameters:    Size  Location     Type
  6447 ;;		None
  6448 ;; Auto vars:     Size  Location     Type
  6449 ;;		None
  6450 ;; Return value:  Size  Location     Type
  6451 ;;                  2    0[COMRAM] PTR unsigned char 
  6452 ;; Registers used:
  6453 ;;		wreg, status,2, status,0
  6454 ;; Tracked objects:
  6455 ;;		On entry : 0/0
  6456 ;;		On exit  : 0/0
  6457 ;;		Unchanged: 0/0
  6458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6459 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6460 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6461 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6462 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6463 ;;Total ram usage:        2 bytes
  6464 ;; Hardware stack levels used:    1
  6465 ;; This function calls:
  6466 ;;		Nothing
  6467 ;; This function is called by:
  6468 ;;		_main
  6469 ;; This function uses a non-reentrant model
  6470 ;;
  6471                           
  6472                           	psect	text24
  6473  008F80                     __ptext24:
  6474                           	opt stack 0
  6475  008F80                     _spi_get_external_tx_buffer:
  6476                           	opt stack 30
  6477                           
  6478                           ;spi.c: 77: return _spi_external_tx_buffer;
  6479                           
  6480                           ; BSR set to: 0
  6481                           ;incstack = 0
  6482  008F80  0E40               	movlw	low __spi_external_tx_buffer
  6483  008F82  6E01               	movwf	?_spi_get_external_tx_buffer,c
  6484  008F84  0E03               	movlw	high __spi_external_tx_buffer
  6485  008F86  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  6486  008F88  0012               	return	
  6487  008F8A                     __end_of_spi_get_external_tx_buffer:
  6488                           	opt stack 0
  6489                           tblptru	equ	0xFF8
  6490                           tblptrh	equ	0xFF7
  6491                           tblptrl	equ	0xFF6
  6492                           tablat	equ	0xFF5
  6493                           intcon	equ	0xFF2
  6494                           intcon2	equ	0xFF1
  6495                           intcon3	equ	0xFF0
  6496                           postinc0	equ	0xFEE
  6497                           wreg	equ	0xFE8
  6498                           postdec1	equ	0xFE5
  6499                           plusw1	equ	0xFE3
  6500                           fsr1h	equ	0xFE2
  6501                           fsr1l	equ	0xFE1
  6502                           postinc2	equ	0xFDE
  6503                           plusw2	equ	0xFDB
  6504                           fsr2h	equ	0xFDA
  6505                           fsr2l	equ	0xFD9
  6506                           status	equ	0xFD8
  6507                           
  6508 ;; *************** function _spi_get_external_rx_buffer *****************
  6509 ;; Defined at:
  6510 ;;		line 80 in file "spi.c"
  6511 ;; Parameters:    Size  Location     Type
  6512 ;;		None
  6513 ;; Auto vars:     Size  Location     Type
  6514 ;;		None
  6515 ;; Return value:  Size  Location     Type
  6516 ;;                  2    0[COMRAM] PTR unsigned char 
  6517 ;; Registers used:
  6518 ;;		wreg, status,2, status,0
  6519 ;; Tracked objects:
  6520 ;;		On entry : 0/0
  6521 ;;		On exit  : 0/0
  6522 ;;		Unchanged: 0/0
  6523 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6524 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6525 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6526 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6527 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6528 ;;Total ram usage:        2 bytes
  6529 ;; Hardware stack levels used:    1
  6530 ;; This function calls:
  6531 ;;		Nothing
  6532 ;; This function is called by:
  6533 ;;		_main
  6534 ;; This function uses a non-reentrant model
  6535 ;;
  6536                           
  6537                           	psect	text25
  6538  008F8A                     __ptext25:
  6539                           	opt stack 0
  6540  008F8A                     _spi_get_external_rx_buffer:
  6541                           	opt stack 30
  6542                           
  6543                           ;spi.c: 82: return _spi_external_rx_buffer;
  6544                           
  6545                           ;incstack = 0
  6546  008F8A  0E00               	movlw	low __spi_external_rx_buffer
  6547  008F8C  6E01               	movwf	?_spi_get_external_rx_buffer,c
  6548  008F8E  0E03               	movlw	high __spi_external_rx_buffer
  6549  008F90  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  6550  008F92  0012               	return	
  6551  008F94                     __end_of_spi_get_external_rx_buffer:
  6552                           	opt stack 0
  6553                           tblptru	equ	0xFF8
  6554                           tblptrh	equ	0xFF7
  6555                           tblptrl	equ	0xFF6
  6556                           tablat	equ	0xFF5
  6557                           intcon	equ	0xFF2
  6558                           intcon2	equ	0xFF1
  6559                           intcon3	equ	0xFF0
  6560                           postinc0	equ	0xFEE
  6561                           wreg	equ	0xFE8
  6562                           postdec1	equ	0xFE5
  6563                           plusw1	equ	0xFE3
  6564                           fsr1h	equ	0xFE2
  6565                           fsr1l	equ	0xFE1
  6566                           postinc2	equ	0xFDE
  6567                           plusw2	equ	0xFDB
  6568                           fsr2h	equ	0xFDA
  6569                           fsr2l	equ	0xFD9
  6570                           status	equ	0xFD8
  6571                           
  6572 ;; *************** function _jump_to_main_program *****************
  6573 ;; Defined at:
  6574 ;;		line 251 in file "os.c"
  6575 ;; Parameters:    Size  Location     Type
  6576 ;;		None
  6577 ;; Auto vars:     Size  Location     Type
  6578 ;;		None
  6579 ;; Return value:  Size  Location     Type
  6580 ;;                  1    wreg      void 
  6581 ;; Registers used:
  6582 ;;		None
  6583 ;; Tracked objects:
  6584 ;;		On entry : 0/0
  6585 ;;		On exit  : 0/0
  6586 ;;		Unchanged: 0/0
  6587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6588 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6589 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6591 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6592 ;;Total ram usage:        0 bytes
  6593 ;; Hardware stack levels used:    1
  6594 ;; This function calls:
  6595 ;;		Nothing
  6596 ;; This function is called by:
  6597 ;;		_main
  6598 ;; This function uses a non-reentrant model
  6599 ;;
  6600                           
  6601                           	psect	text26
  6602  009024                     __ptext26:
  6603                           	opt stack 0
  6604  009024                     _jump_to_main_program:
  6605                           	opt stack 30
  6606                           
  6607                           ;incstack = 0
  6608  009024  EF00 F050          	goto	40960	; ;# 
  6609  009028  0012               	return		;funcret
  6610  00902A                     __end_of_jump_to_main_program:
  6611                           	opt stack 0
  6612                           tblptru	equ	0xFF8
  6613                           tblptrh	equ	0xFF7
  6614                           tblptrl	equ	0xFF6
  6615                           tablat	equ	0xFF5
  6616                           intcon	equ	0xFF2
  6617                           intcon2	equ	0xFF1
  6618                           intcon3	equ	0xFF0
  6619                           postinc0	equ	0xFEE
  6620                           wreg	equ	0xFE8
  6621                           postdec1	equ	0xFE5
  6622                           plusw1	equ	0xFE3
  6623                           fsr1h	equ	0xFE2
  6624                           fsr1l	equ	0xFE1
  6625                           postinc2	equ	0xFDE
  6626                           plusw2	equ	0xFDB
  6627                           fsr2h	equ	0xFDA
  6628                           fsr2l	equ	0xFD9
  6629                           status	equ	0xFD8
  6630                           
  6631 ;; *************** function _bootloader_run *****************
  6632 ;; Defined at:
  6633 ;;		line 63 in file "bootloader.c"
  6634 ;; Parameters:    Size  Location     Type
  6635 ;;  timeslot        1    wreg     unsigned char 
  6636 ;; Auto vars:     Size  Location     Type
  6637 ;;  timeslot        1   91[COMRAM] unsigned char 
  6638 ;; Return value:  Size  Location     Type
  6639 ;;                  1    wreg      void 
  6640 ;; Registers used:
  6641 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6642 ;; Tracked objects:
  6643 ;;		On entry : 0/0
  6644 ;;		On exit  : 0/0
  6645 ;;		Unchanged: 0/0
  6646 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6647 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6648 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6649 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6650 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6651 ;;Total ram usage:        1 bytes
  6652 ;; Hardware stack levels used:    1
  6653 ;; Hardware stack levels required when called:    9
  6654 ;; This function calls:
  6655 ;;		__bootloader_find_file
  6656 ;;		__bootloader_program
  6657 ;;		__bootloader_verify_file
  6658 ;; This function is called by:
  6659 ;;		_main
  6660 ;; This function uses a non-reentrant model
  6661 ;;
  6662                           
  6663                           	psect	text27
  6664  007A20                     __ptext27:
  6665                           	opt stack 0
  6666  007A20                     _bootloader_run:
  6667                           	opt stack 21
  6668                           
  6669                           ;incstack = 0
  6670                           ;bootloader_run@timeslot stored from wreg
  6671  007A20  6E5C               	movwf	bootloader_run@timeslot,c
  6672                           
  6673                           ;bootloader.c: 66: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  6674  007A22  0100               	movlb	0	; () banked
  6675  007A24  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
  6676  007A26  B4D8               	btfsc	status,2,c
  6677  007A28  0012               	return	
  6678  007A2A  D015               	goto	l2412
  6679  007A2C                     
  6680                           ; BSR set to: 0
  6681                           ;bootloader.c: 74: if(timeslot==0)
  6682                           
  6683                           ; BSR set to: 0
  6684  007A2C  505C               	movf	bootloader_run@timeslot,w,c
  6685  007A2E  A4D8               	btfss	status,2,c
  6686  007A30  0012               	return	
  6687                           
  6688                           ; BSR set to: 0
  6689                           ;bootloader.c: 75: {;bootloader.c: 76: _bootloader_find_file();
  6690  007A32  EC38  F034         	call	__bootloader_find_file	;wreg free
  6691                           
  6692                           ;bootloader.c: 77: };bootloader.c: 78: break;
  6693  007A36  0012               	return	
  6694  007A38                     
  6695                           ;bootloader.c: 81: if(timeslot==0)
  6696  007A38  505C               	movf	bootloader_run@timeslot,w,c
  6697  007A3A  A4D8               	btfss	status,2,c
  6698  007A3C  0012               	return	
  6699                           
  6700                           ;bootloader.c: 82: {;bootloader.c: 83: _bootloader_find_file();
  6701  007A3E  EC38  F034         	call	__bootloader_find_file	;wreg free
  6702                           
  6703                           ;bootloader.c: 84: };bootloader.c: 85: break;
  6704  007A42  0012               	return	
  6705  007A44                     
  6706                           ;bootloader.c: 88: _bootloader_verify_file();
  6707  007A44  ECCC  F007         	call	__bootloader_verify_file	;wreg free
  6708                           
  6709                           ;bootloader.c: 95: break;
  6710                           
  6711                           ;bootloader.c: 94: case BOOTLOADER_MODE_CHECK_FAILED:
  6712                           
  6713                           ;bootloader.c: 92: break;
  6714                           
  6715                           ;bootloader.c: 91: case BOOTLOADER_MODE_CHECK_COMPLETE:
  6716                           
  6717                           ;bootloader.c: 89: break;
  6718  007A48  0012               	return	
  6719  007A4A                     
  6720                           ;bootloader.c: 98: if(timeslot==0)
  6721  007A4A  505C               	movf	bootloader_run@timeslot,w,c
  6722  007A4C  A4D8               	btfss	status,2,c
  6723  007A4E  0012               	return	
  6724                           
  6725                           ;bootloader.c: 99: {;bootloader.c: 100: _bootloader_program();
  6726  007A50  EC4E  F002         	call	__bootloader_program	;wreg free
  6727                           
  6728                           ;bootloader.c: 106: }
  6729                           
  6730                           ;bootloader.c: 105: break;
  6731                           
  6732                           ;bootloader.c: 104: case BOOTLOADER_MODE_DONE:
  6733                           
  6734                           ;bootloader.c: 101: };bootloader.c: 102: break;
  6735  007A54  0012               	return	
  6736  007A56                     l2412:
  6737  007A56  0100               	movlb	0	; () banked
  6738  007A58  51C9               	movf	(_os+4)& (0+255),w,b	;volatile
  6739                           
  6740                           ; Switch size 1, requested type "space"
  6741                           ; Number of cases is 7, Range of values is 16 to 112
  6742                           ; switch strategies available:
  6743                           ; Name         Instructions Cycles
  6744                           ; simple_byte           22    12 (average)
  6745                           ;	Chosen strategy is simple_byte
  6746  007A5A  0A10               	xorlw	16	; case 16
  6747  007A5C  B4D8               	btfsc	status,2,c
  6748  007A5E  D7E6               	goto	l2413
  6749  007A60  0A30               	xorlw	48	; case 32
  6750  007A62  B4D8               	btfsc	status,2,c
  6751  007A64  D7E9               	goto	l2416
  6752  007A66  0A10               	xorlw	16	; case 48
  6753  007A68  B4D8               	btfsc	status,2,c
  6754  007A6A  D7EC               	goto	l2418
  6755  007A6C  0A70               	xorlw	112	; case 64
  6756  007A6E  B4D8               	btfsc	status,2,c
  6757  007A70  0012               	return	
  6758  007A72  0A10               	xorlw	16	; case 80
  6759  007A74  B4D8               	btfsc	status,2,c
  6760  007A76  0012               	return	
  6761  007A78  0A30               	xorlw	48	; case 96
  6762  007A7A  B4D8               	btfsc	status,2,c
  6763  007A7C  D7E6               	goto	l2421
  6764  007A7E  0A10               	xorlw	16	; case 112
  6765  007A80  0012               	return	
  6766  007A82                     __end_of_bootloader_run:
  6767                           	opt stack 0
  6768                           tblptru	equ	0xFF8
  6769                           tblptrh	equ	0xFF7
  6770                           tblptrl	equ	0xFF6
  6771                           tablat	equ	0xFF5
  6772                           intcon	equ	0xFF2
  6773                           intcon2	equ	0xFF1
  6774                           intcon3	equ	0xFF0
  6775                           postinc0	equ	0xFEE
  6776                           wreg	equ	0xFE8
  6777                           postdec1	equ	0xFE5
  6778                           plusw1	equ	0xFE3
  6779                           fsr1h	equ	0xFE2
  6780                           fsr1l	equ	0xFE1
  6781                           postinc2	equ	0xFDE
  6782                           plusw2	equ	0xFDB
  6783                           fsr2h	equ	0xFDA
  6784                           fsr2l	equ	0xFD9
  6785                           status	equ	0xFD8
  6786                           
  6787 ;; *************** function __bootloader_verify_file *****************
  6788 ;; Defined at:
  6789 ;;		line 182 in file "bootloader.c"
  6790 ;; Parameters:    Size  Location     Type
  6791 ;;		None
  6792 ;; Auto vars:     Size  Location     Type
  6793 ;;  root           32   22[BANK0 ] struct .
  6794 ;;  address32       4   59[BANK0 ] unsigned long 
  6795 ;;  return_value    4   55[BANK0 ] unsigned long 
  6796 ;;  rec_counter     1   54[BANK0 ] unsigned char 
  6797 ;; Return value:  Size  Location     Type
  6798 ;;                  1    wreg      void 
  6799 ;; Registers used:
  6800 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  6801 ;; Tracked objects:
  6802 ;;		On entry : 0/0
  6803 ;;		On exit  : 0/0
  6804 ;;		Unchanged: 0/0
  6805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6807 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6808 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6809 ;;      Totals:         0      49       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6810 ;;Total ram usage:       49 bytes
  6811 ;; Hardware stack levels used:    1
  6812 ;; Hardware stack levels required when called:    8
  6813 ;; This function calls:
  6814 ;;		__bootloader_check_address
  6815 ;;		_fat_get_file_information
  6816 ;;		_fat_get_file_size
  6817 ;;		_fat_read_from_file_fast
  6818 ;;		_parseHexFileEntry
  6819 ;; This function is called by:
  6820 ;;		_bootloader_run
  6821 ;; This function uses a non-reentrant model
  6822 ;;
  6823                           
  6824                           	psect	text28
  6825  000F98                     __ptext28:
  6826                           	opt stack 0
  6827  000F98                     __bootloader_verify_file:
  6828                           	opt stack 21
  6829                           
  6830                           ;bootloader.c: 184: uint8_t rec_counter;;bootloader.c: 185: uint32_t return_value = 0;
  6831                           
  6832                           ;incstack = 0
  6833  000F98  0E00               	movlw	0
  6834  000F9A  0100               	movlb	0	; () banked
  6835  000F9C  6F97               	movwf	__bootloader_verify_file@return_value& (0+255),b
  6836  000F9E  0E00               	movlw	0
  6837  000FA0  6F98               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
  6838  000FA2  0E00               	movlw	0
  6839  000FA4  6F99               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
  6840  000FA6  0E00               	movlw	0
  6841  000FA8  6F9A               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
  6842                           
  6843                           ; BSR set to: 0
  6844                           ;bootloader.c: 186: uint32_t address32;;bootloader.c: 187: rootEntry_t root;;bootloader.
      +                          c: 189: if(hex_file_offset==0)
  6845  000FAA  51D7               	movf	_hex_file_offset& (0+255),w,b
  6846  000FAC  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  6847  000FAE  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  6848  000FB0  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  6849  000FB2  A4D8               	btfss	status,2,c
  6850  000FB4  D010               	goto	l2443
  6851                           
  6852                           ; BSR set to: 0
  6853                           ;bootloader.c: 190: {;bootloader.c: 192: fat_get_file_information(file_number, &root);
  6854  000FB6  0E76               	movlw	low __bootloader_verify_file@root
  6855  000FB8  6E30               	movwf	fat_get_file_information@data,c
  6856  000FBA  0E00               	movlw	high __bootloader_verify_file@root
  6857  000FBC  6E31               	movwf	fat_get_file_information@data+1,c
  6858  000FBE  51FF               	movf	_file_number& (0+255),w,b
  6859  000FC0  EC2B  F03B         	call	_fat_get_file_information
  6860                           
  6861                           ;bootloader.c: 193: fast_read_cluster = root.firstCluster;
  6862  000FC4  C090  F0FB         	movff	__bootloader_verify_file@root+26,_fast_read_cluster
  6863  000FC8  C091  F0FC         	movff	__bootloader_verify_file@root+27,_fast_read_cluster+1
  6864                           
  6865                           ;bootloader.c: 194: fast_read_cluster_number = 0;
  6866  000FCC  0E00               	movlw	0
  6867  000FCE  0100               	movlb	0	; () banked
  6868  000FD0  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  6869  000FD2  0E00               	movlw	0
  6870  000FD4  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  6871  000FD6                     l2443:
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;bootloader.c: 195: };bootloader.c: 198: hex_file_size = fat_get_file_size(file_number);
  6875                           
  6876                           ; BSR set to: 0
  6877  000FD6  51FF               	movf	_file_number& (0+255),w,b
  6878  000FD8  EC0B  F03C         	call	_fat_get_file_size
  6879  000FDC  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
  6880  000FE0  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
  6881  000FE4  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
  6882  000FE8  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
  6883                           
  6884                           ;bootloader.c: 201: for(rec_counter=0; rec_counter<16; ++rec_counter)
  6885  000FEC  0E00               	movlw	0
  6886  000FEE  0100               	movlb	0	; () banked
  6887  000FF0  6F96               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
  6888  000FF2                     l15321:
  6889                           
  6890                           ; BSR set to: 0
  6891  000FF2  0E0F               	movlw	15
  6892  000FF4  6596               	cpfsgt	__bootloader_verify_file@rec_counter& (0+255),b
  6893  000FF6  D001               	goto	l2444
  6894  000FF8  0012               	return	
  6895  000FFA                     l2444:
  6896                           
  6897                           ; BSR set to: 0
  6898                           ;bootloader.c: 202: {;bootloader.c: 204: if((hex_file_size-hex_file_offset)>=50)
  6899                           
  6900                           ; BSR set to: 0
  6901  000FFA  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6902  000FFE  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6903  001002  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6904  001006  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6905  00100A  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6906  00100C  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6907  00100E  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6908  001010  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6909  001012  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6910  001014  0E00               	movlw	0
  6911  001016  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6912  001018  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6913  00101A  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6914  00101C  0101               	movlb	1	; () banked
  6915  00101E  514A               	movf	_hex_file_size& (0+255),w,b
  6916  001020  0100               	movlb	0	; () banked
  6917  001022  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6918  001024  6F72               	movwf	(??__bootloader_verify_file+4)& (0+255),b
  6919  001026  0101               	movlb	1	; () banked
  6920  001028  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  6921  00102A  0100               	movlb	0	; () banked
  6922  00102C  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  6923  00102E  6F73               	movwf	(??__bootloader_verify_file+5)& (0+255),b
  6924  001030  0101               	movlb	1	; () banked
  6925  001032  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  6926  001034  0100               	movlb	0	; () banked
  6927  001036  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  6928  001038  6F74               	movwf	(??__bootloader_verify_file+6)& (0+255),b
  6929  00103A  0101               	movlb	1	; () banked
  6930  00103C  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  6931  00103E  0100               	movlb	0	; () banked
  6932  001040  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  6933  001042  6F75               	movwf	(??__bootloader_verify_file+7)& (0+255),b
  6934  001044  5175               	movf	(??__bootloader_verify_file+7)& (0+255),w,b
  6935  001046  1174               	iorwf	(??__bootloader_verify_file+6)& (0+255),w,b
  6936  001048  1173               	iorwf	(??__bootloader_verify_file+5)& (0+255),w,b
  6937  00104A  E104               	bnz	u12280
  6938  00104C  0E32               	movlw	50
  6939  00104E  5D72               	subwf	(??__bootloader_verify_file+4)& (0+255),w,b
  6940  001050  A0D8               	btfss	status,0,c
  6941  001052  D01F               	goto	l2446
  6942  001054                     u12280:
  6943                           
  6944                           ; BSR set to: 0
  6945                           ;bootloader.c: 205: {;bootloader.c: 207: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  6946  001054  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6947  001058  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6948  00105C  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6949  001060  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6950  001064  0E32               	movlw	50
  6951  001066  6E46               	movwf	fat_read_from_file_fast@length,c
  6952  001068  0E00               	movlw	0
  6953  00106A  6E47               	movwf	fat_read_from_file_fast@length+1,c
  6954  00106C  0E00               	movlw	0
  6955  00106E  6E48               	movwf	fat_read_from_file_fast@length+2,c
  6956  001070  0E00               	movlw	0
  6957  001072  6E49               	movwf	fat_read_from_file_fast@length+3,c
  6958  001074  0E90               	movlw	low _file_buffer
  6959  001076  6E4A               	movwf	fat_read_from_file_fast@data,c
  6960  001078  0E02               	movlw	high _file_buffer
  6961  00107A  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  6962  00107C  0EFB               	movlw	low _fast_read_cluster
  6963  00107E  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  6964  001080  0E00               	movlw	high _fast_read_cluster
  6965  001082  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  6966  001084  0EF9               	movlw	low _fast_read_cluster_number
  6967  001086  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  6968  001088  0E00               	movlw	high _fast_read_cluster_number
  6969  00108A  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  6970  00108C  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  6971                           
  6972                           ;bootloader.c: 208: }
  6973  001090  D03C               	goto	l2447
  6974  001092                     l2446:
  6975                           
  6976                           ;bootloader.c: 209: else;bootloader.c: 210: {;bootloader.c: 212: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  6977  001092  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  6978  001096  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  6979  00109A  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  6980  00109E  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  6981  0010A2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_verify_file
  6982  0010A6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
  6983  0010AA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
  6984  0010AE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
  6985  0010B2  0100               	movlb	0	; () banked
  6986  0010B4  1F6E               	comf	??__bootloader_verify_file& (0+255),f,b
  6987  0010B6  1F6F               	comf	(??__bootloader_verify_file+1)& (0+255),f,b
  6988  0010B8  1F70               	comf	(??__bootloader_verify_file+2)& (0+255),f,b
  6989  0010BA  1F71               	comf	(??__bootloader_verify_file+3)& (0+255),f,b
  6990  0010BC  2B6E               	incf	??__bootloader_verify_file& (0+255),f,b
  6991  0010BE  0E00               	movlw	0
  6992  0010C0  236F               	addwfc	(??__bootloader_verify_file+1)& (0+255),f,b
  6993  0010C2  2370               	addwfc	(??__bootloader_verify_file+2)& (0+255),f,b
  6994  0010C4  2371               	addwfc	(??__bootloader_verify_file+3)& (0+255),f,b
  6995  0010C6  0101               	movlb	1	; () banked
  6996  0010C8  514A               	movf	_hex_file_size& (0+255),w,b
  6997  0010CA  0100               	movlb	0	; () banked
  6998  0010CC  256E               	addwf	??__bootloader_verify_file& (0+255),w,b
  6999  0010CE  6E46               	movwf	fat_read_from_file_fast@length,c
  7000  0010D0  0101               	movlb	1	; () banked
  7001  0010D2  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7002  0010D4  0100               	movlb	0	; () banked
  7003  0010D6  216F               	addwfc	(??__bootloader_verify_file+1)& (0+255),w,b
  7004  0010D8  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7005  0010DA  0101               	movlb	1	; () banked
  7006  0010DC  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7007  0010DE  0100               	movlb	0	; () banked
  7008  0010E0  2170               	addwfc	(??__bootloader_verify_file+2)& (0+255),w,b
  7009  0010E2  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7010  0010E4  0101               	movlb	1	; () banked
  7011  0010E6  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7012  0010E8  0100               	movlb	0	; () banked
  7013  0010EA  2171               	addwfc	(??__bootloader_verify_file+3)& (0+255),w,b
  7014  0010EC  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7015  0010EE  0E90               	movlw	low _file_buffer
  7016  0010F0  6E4A               	movwf	fat_read_from_file_fast@data,c
  7017  0010F2  0E02               	movlw	high _file_buffer
  7018  0010F4  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7019  0010F6  0EFB               	movlw	low _fast_read_cluster
  7020  0010F8  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7021  0010FA  0E00               	movlw	high _fast_read_cluster
  7022  0010FC  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7023  0010FE  0EF9               	movlw	low _fast_read_cluster_number
  7024  001100  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7025  001102  0E00               	movlw	high _fast_read_cluster_number
  7026  001104  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7027  001106  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7028  00110A                     l2447:
  7029                           
  7030                           ;bootloader.c: 213: };bootloader.c: 216: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7031  00110A  0E90               	movlw	low _file_buffer
  7032  00110C  6E0C               	movwf	parseHexFileEntry@data,c
  7033  00110E  0E02               	movlw	high _file_buffer
  7034  001110  6E0D               	movwf	parseHexFileEntry@data+1,c
  7035  001112  0E00               	movlw	0
  7036  001114  6E0E               	movwf	parseHexFileEntry@offset,c
  7037  001116  0E00               	movlw	0
  7038  001118  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7039  00111A  0E00               	movlw	0
  7040  00111C  6E10               	movwf	parseHexFileEntry@offset+2,c
  7041  00111E  0E00               	movlw	0
  7042  001120  6E11               	movwf	parseHexFileEntry@offset+3,c
  7043  001122  0E93               	movlw	low _hex_file_entry
  7044  001124  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7045  001126  0E01               	movlw	high _hex_file_entry
  7046  001128  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7047  00112A  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7048  00112E  C00C  F097         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
  7049  001132  C00D  F098         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
  7050  001136  C00E  F099         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
  7051  00113A  C00F  F09A         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
  7052                           
  7053                           ;bootloader.c: 219: ++hex_file_entries;
  7054  00113E  0101               	movlb	1	; () banked
  7055  001140  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7056  001142  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7057                           
  7058                           ; BSR set to: 1
  7059                           ;bootloader.c: 222: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
  7060  001144  0E04               	movlw	4
  7061  001146  1997               	xorwf	(_hex_file_entry+4)& (0+255),w,b
  7062  001148  A4D8               	btfss	status,2,c
  7063  00114A  D01C               	goto	l2448
  7064                           
  7065                           ; BSR set to: 1
  7066                           ;bootloader.c: 223: {;bootloader.c: 224: extended_linear_address = hex_file_entry.data[0
      +                          ];
  7067  00114C  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7068  00114E  6F46               	movwf	_extended_linear_address& (0+255),b
  7069  001150  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7070  001152  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7071  001154  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7072                           
  7073                           ; BSR set to: 1
  7074                           ;bootloader.c: 225: extended_linear_address <<= 8;
  7075  001156  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7076  00115A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7077  00115E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7078  001162  6B46               	clrf	_extended_linear_address& (0+255),b
  7079                           
  7080                           ; BSR set to: 1
  7081                           ;bootloader.c: 226: extended_linear_address |= hex_file_entry.data[1];
  7082  001164  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7083  001166  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7084                           
  7085                           ; BSR set to: 1
  7086                           ;bootloader.c: 227: extended_linear_address <<= 8;
  7087  001168  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7088  00116C  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7089  001170  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7090  001174  6B46               	clrf	_extended_linear_address& (0+255),b
  7091                           
  7092                           ; BSR set to: 1
  7093                           ;bootloader.c: 228: extended_linear_address <<= 8;
  7094  001176  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7095  00117A  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7096  00117E  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7097  001182  6B46               	clrf	_extended_linear_address& (0+255),b
  7098  001184                     l2448:
  7099                           
  7100                           ; BSR set to: 1
  7101                           ;bootloader.c: 229: };bootloader.c: 232: if(hex_file_entry.recordType==RecordTypeData)
  7102                           
  7103                           ; BSR set to: 1
  7104  001184  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  7105  001186  A4D8               	btfss	status,2,c
  7106  001188  D05E               	goto	l2452
  7107                           
  7108                           ; BSR set to: 1
  7109                           ;bootloader.c: 233: {;bootloader.c: 235: address32 = extended_linear_address + hex_file_
      +                          entry.address;
  7110  00118A  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7111  00118C  2546               	addwf	_extended_linear_address& (0+255),w,b
  7112  00118E  0100               	movlb	0	; () banked
  7113  001190  6F9B               	movwf	__bootloader_verify_file@address32& (0+255),b
  7114  001192  0101               	movlb	1	; () banked
  7115  001194  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7116  001196  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7117  001198  0100               	movlb	0	; () banked
  7118  00119A  6F9C               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
  7119  00119C  0E00               	movlw	0
  7120  00119E  0101               	movlb	1	; () banked
  7121  0011A0  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7122  0011A2  0100               	movlb	0	; () banked
  7123  0011A4  6F9D               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
  7124  0011A6  0E00               	movlw	0
  7125  0011A8  0101               	movlb	1	; () banked
  7126  0011AA  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7127  0011AC  0100               	movlb	0	; () banked
  7128  0011AE  6F9E               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
  7129                           
  7130                           ;bootloader.c: 238: if(address32<file_minimum_address)
  7131  0011B0  0101               	movlb	1	; () banked
  7132  0011B2  5152               	movf	_file_minimum_address& (0+255),w,b
  7133  0011B4  0100               	movlb	0	; () banked
  7134  0011B6  5D9B               	subwf	__bootloader_verify_file@address32& (0+255),w,b
  7135  0011B8  0101               	movlb	1	; () banked
  7136  0011BA  5153               	movf	(_file_minimum_address+1)& (0+255),w,b
  7137  0011BC  0100               	movlb	0	; () banked
  7138  0011BE  599C               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7139  0011C0  0101               	movlb	1	; () banked
  7140  0011C2  5154               	movf	(_file_minimum_address+2)& (0+255),w,b
  7141  0011C4  0100               	movlb	0	; () banked
  7142  0011C6  599D               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7143  0011C8  0101               	movlb	1	; () banked
  7144  0011CA  5155               	movf	(_file_minimum_address+3)& (0+255),w,b
  7145  0011CC  0100               	movlb	0	; () banked
  7146  0011CE  599E               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7147  0011D0  B0D8               	btfsc	status,0,c
  7148  0011D2  D008               	goto	l2450
  7149                           
  7150                           ; BSR set to: 0
  7151                           ;bootloader.c: 239: {;bootloader.c: 240: file_minimum_address = address32;
  7152  0011D4  C09B  F152         	movff	__bootloader_verify_file@address32,_file_minimum_address
  7153  0011D8  C09C  F153         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
  7154  0011DC  C09D  F154         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
  7155  0011E0  C09E  F155         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
  7156  0011E4                     l2450:
  7157                           
  7158                           ; BSR set to: 0
  7159                           ;bootloader.c: 241: };bootloader.c: 242: if(address32>file_maximum_address)
  7160                           
  7161                           ; BSR set to: 0
  7162  0011E4  519B               	movf	__bootloader_verify_file@address32& (0+255),w,b
  7163  0011E6  0101               	movlb	1	; () banked
  7164  0011E8  5D4E               	subwf	_file_maximum_address& (0+255),w,b
  7165  0011EA  0100               	movlb	0	; () banked
  7166  0011EC  519C               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
  7167  0011EE  0101               	movlb	1	; () banked
  7168  0011F0  594F               	subwfb	(_file_maximum_address+1)& (0+255),w,b
  7169  0011F2  0100               	movlb	0	; () banked
  7170  0011F4  519D               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
  7171  0011F6  0101               	movlb	1	; () banked
  7172  0011F8  5950               	subwfb	(_file_maximum_address+2)& (0+255),w,b
  7173  0011FA  0100               	movlb	0	; () banked
  7174  0011FC  519E               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
  7175  0011FE  0101               	movlb	1	; () banked
  7176  001200  5951               	subwfb	(_file_maximum_address+3)& (0+255),w,b
  7177  001202  B0D8               	btfsc	status,0,c
  7178  001204  D008               	goto	l2451
  7179                           
  7180                           ; BSR set to: 1
  7181                           ;bootloader.c: 243: {;bootloader.c: 244: file_maximum_address = address32;
  7182  001206  C09B  F14E         	movff	__bootloader_verify_file@address32,_file_maximum_address
  7183  00120A  C09C  F14F         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
  7184  00120E  C09D  F150         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
  7185  001212  C09E  F151         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
  7186  001216                     l2451:
  7187                           
  7188                           ; BSR set to: 1
  7189                           ;bootloader.c: 245: };bootloader.c: 248: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
  7190                           
  7191                           ; BSR set to: 1
  7192  001216  C09B  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
  7193  00121A  C09C  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
  7194  00121E  C09D  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
  7195  001222  C09E  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
  7196  001226  C193  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
  7197  00122A  ECD1  F02C         	call	__bootloader_check_address	;wreg free
  7198  00122E  0AFF               	xorlw	255
  7199  001230  A4D8               	btfss	status,2,c
  7200  001232  D009               	goto	l2452
  7201                           
  7202                           ;bootloader.c: 249: {;bootloader.c: 251: last_error = ShortRecordErrorAddressRange;
  7203  001234  0E0B               	movlw	11
  7204  001236  0101               	movlb	1	; () banked
  7205  001238  6F8C               	movwf	_last_error& (0+255),b
  7206                           
  7207                           ;bootloader.c: 253: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7208  00123A  0E50               	movlw	80
  7209  00123C  0100               	movlb	0	; () banked
  7210  00123E  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7211                           
  7212                           ;bootloader.c: 254: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7213  001240  0E50               	movlw	80
  7214  001242  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7215                           
  7216                           ;bootloader.c: 255: break;
  7217  001244  0012               	return	
  7218  001246                     l2452:
  7219                           
  7220                           ;bootloader.c: 256: };bootloader.c: 257: };bootloader.c: 259: if(return_value==0)
  7221                           
  7222                           ; BSR set to: 0
  7223                           
  7224                           ; BSR set to: 0
  7225  001246  0100               	movlb	0	; () banked
  7226  001248  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7227  00124A  1198               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7228  00124C  1199               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7229  00124E  119A               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7230  001250  A4D8               	btfss	status,2,c
  7231  001252  D027               	goto	l2453
  7232                           
  7233                           ; BSR set to: 0
  7234                           ;bootloader.c: 260: {;bootloader.c: 263: total_hex_file_entries = hex_file_entries;
  7235  001254  C178  F176         	movff	_hex_file_entries,_total_hex_file_entries
  7236  001258  C179  F177         	movff	_hex_file_entries+1,_total_hex_file_entries+1
  7237                           
  7238                           ; BSR set to: 0
  7239                           ;bootloader.c: 264: hex_file_entries = 0;
  7240  00125C  0E00               	movlw	0
  7241  00125E  0101               	movlb	1	; () banked
  7242  001260  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
  7243  001262  0E00               	movlw	0
  7244  001264  6F78               	movwf	_hex_file_entries& (0+255),b
  7245                           
  7246                           ;bootloader.c: 265: hex_file_offset = 0;
  7247  001266  0E00               	movlw	0
  7248  001268  0100               	movlb	0	; () banked
  7249  00126A  6FD7               	movwf	_hex_file_offset& (0+255),b
  7250  00126C  0E00               	movlw	0
  7251  00126E  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
  7252  001270  0E00               	movlw	0
  7253  001272  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
  7254  001274  0E00               	movlw	0
  7255  001276  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
  7256                           
  7257                           ;bootloader.c: 266: extended_linear_address = 0;
  7258  001278  0E00               	movlw	0
  7259  00127A  0101               	movlb	1	; () banked
  7260  00127C  6F46               	movwf	_extended_linear_address& (0+255),b
  7261  00127E  0E00               	movlw	0
  7262  001280  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
  7263  001282  0E00               	movlw	0
  7264  001284  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
  7265  001286  0E00               	movlw	0
  7266  001288  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
  7267                           
  7268                           ;bootloader.c: 267: flash_pages_written = 0;
  7269  00128A  0E00               	movlw	0
  7270  00128C  6F75               	movwf	(_flash_pages_written+1)& (0+255),b
  7271  00128E  0E00               	movlw	0
  7272  001290  6F74               	movwf	_flash_pages_written& (0+255),b
  7273                           
  7274                           ;bootloader.c: 268: start_from_byte_next = 0;
  7275  001292  0E00               	movlw	0
  7276  001294  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7277                           
  7278                           ;bootloader.c: 270: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
  7279  001296  0E40               	movlw	64
  7280  001298  0100               	movlb	0	; () banked
  7281  00129A  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7282                           
  7283                           ;bootloader.c: 271: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
  7284  00129C  0E40               	movlw	64
  7285  00129E  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7286                           
  7287                           ;bootloader.c: 272: break;
  7288  0012A0  0012               	return	
  7289  0012A2                     l2453:
  7290                           
  7291                           ; BSR set to: 0
  7292                           ;bootloader.c: 274: else if(return_value>0xFFFFFFF0)
  7293                           
  7294                           ; BSR set to: 0
  7295  0012A2  0EF1               	movlw	241
  7296  0012A4  5D97               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
  7297  0012A6  0EFF               	movlw	255
  7298  0012A8  5998               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7299  0012AA  0EFF               	movlw	255
  7300  0012AC  5999               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7301  0012AE  0EFF               	movlw	255
  7302  0012B0  599A               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7303  0012B2  A0D8               	btfss	status,0,c
  7304  0012B4  D009               	goto	l2455
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;bootloader.c: 275: {;bootloader.c: 277: last_error = return_value & 0xF;
  7308  0012B6  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7309  0012B8  0B0F               	andlw	15
  7310  0012BA  0101               	movlb	1	; () banked
  7311  0012BC  6F8C               	movwf	_last_error& (0+255),b
  7312                           
  7313                           ; BSR set to: 1
  7314                           ;bootloader.c: 279: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
  7315  0012BE  0E50               	movlw	80
  7316  0012C0  0100               	movlb	0	; () banked
  7317  0012C2  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7318                           
  7319                           ; BSR set to: 0
  7320                           ;bootloader.c: 280: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7321  0012C4  0E50               	movlw	80
  7322  0012C6  D7EB               	goto	L1
  7323  0012C8                     l2455:
  7324                           
  7325                           ; BSR set to: 0
  7326                           ;bootloader.c: 283: else;bootloader.c: 284: {;bootloader.c: 286: hex_file_offset += retu
      +                          rn_value;
  7327                           
  7328                           ; BSR set to: 0
  7329  0012C8  5197               	movf	__bootloader_verify_file@return_value& (0+255),w,b
  7330  0012CA  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7331  0012CC  5198               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
  7332  0012CE  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7333  0012D0  5199               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
  7334  0012D2  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7335  0012D4  519A               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
  7336  0012D6  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7337                           
  7338                           ; BSR set to: 0
  7339                           
  7340                           ; BSR set to: 0
  7341                           
  7342                           ; BSR set to: 0
  7343  0012D8  2B96               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
  7344  0012DA  D68B               	goto	l15321
  7345  0012DC                     __end_of__bootloader_verify_file:
  7346                           	opt stack 0
  7347                           tblptru	equ	0xFF8
  7348                           tblptrh	equ	0xFF7
  7349                           tblptrl	equ	0xFF6
  7350                           tablat	equ	0xFF5
  7351                           intcon	equ	0xFF2
  7352                           intcon2	equ	0xFF1
  7353                           intcon3	equ	0xFF0
  7354                           postinc0	equ	0xFEE
  7355                           wreg	equ	0xFE8
  7356                           postdec1	equ	0xFE5
  7357                           plusw1	equ	0xFE3
  7358                           fsr1h	equ	0xFE2
  7359                           fsr1l	equ	0xFE1
  7360                           postinc2	equ	0xFDE
  7361                           plusw2	equ	0xFDB
  7362                           fsr2h	equ	0xFDA
  7363                           fsr2l	equ	0xFD9
  7364                           status	equ	0xFD8
  7365                           
  7366 ;; *************** function __bootloader_program *****************
  7367 ;; Defined at:
  7368 ;;		line 291 in file "bootloader.c"
  7369 ;; Parameters:    Size  Location     Type
  7370 ;;		None
  7371 ;; Auto vars:     Size  Location     Type
  7372 ;;  root           32   28[BANK0 ] struct .
  7373 ;;  address32       4   64[BANK0 ] unsigned long 
  7374 ;;  return_value    4   60[BANK0 ] unsigned long 
  7375 ;;  page_to_writ    2   71[BANK0 ] unsigned int 
  7376 ;;  cntr            2   69[BANK0 ] unsigned int 
  7377 ;;  address_with    2   26[BANK0 ] unsigned int 
  7378 ;;  entry_page      2   24[BANK0 ] unsigned int 
  7379 ;;  buffer          2   22[BANK0 ] PTR unsigned char 
  7380 ;;		 -> pageBuffer(1024), 
  7381 ;;  start_from_b    1   68[BANK0 ] unsigned char 
  7382 ;; Return value:  Size  Location     Type
  7383 ;;                  1    wreg      void 
  7384 ;; Registers used:
  7385 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7386 ;; Tracked objects:
  7387 ;;		On entry : 0/0
  7388 ;;		On exit  : 0/0
  7389 ;;		Unchanged: 0/0
  7390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7391 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7392 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7393 ;;      Temps:          0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7394 ;;      Totals:         0      59       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7395 ;;Total ram usage:       59 bytes
  7396 ;; Hardware stack levels used:    1
  7397 ;; Hardware stack levels required when called:    8
  7398 ;; This function calls:
  7399 ;;		__bootloader_check_address
  7400 ;;		_fat_get_file_information
  7401 ;;		_fat_read_from_file_fast
  7402 ;;		_internalFlash_addressWithinPage
  7403 ;;		_internalFlash_erasePage
  7404 ;;		_internalFlash_getBuffer
  7405 ;;		_internalFlash_pageFromAddress
  7406 ;;		_internalFlash_readPage
  7407 ;;		_internalFlash_writePage
  7408 ;;		_parseHexFileEntry
  7409 ;; This function is called by:
  7410 ;;		_bootloader_run
  7411 ;; This function uses a non-reentrant model
  7412 ;;
  7413                           
  7414                           	psect	text29
  7415  00049C                     __ptext29:
  7416                           	opt stack 0
  7417  00049C                     __bootloader_program:
  7418                           	opt stack 21
  7419                           
  7420                           ;bootloader.c: 293: uint16_t cntr;;bootloader.c: 294: uint8_t* buffer;;bootloader.c: 295
      +                          : uint16_t entry_page;;bootloader.c: 296: uint16_t page_to_write = 0;
  7421                           
  7422                           ; BSR set to: 0
  7423                           ;incstack = 0
  7424  00049C  0E00               	movlw	0
  7425  00049E  0100               	movlb	0	; () banked
  7426  0004A0  6FA8               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
  7427  0004A2  0E00               	movlw	0
  7428  0004A4  6FA7               	movwf	__bootloader_program@page_to_write& (0+255),b
  7429                           
  7430                           ;bootloader.c: 297: uint8_t start_from_byte;;bootloader.c: 298: uint32_t address32;;boot
      +                          loader.c: 299: uint32_t return_value = 0;
  7431  0004A6  0E00               	movlw	0
  7432  0004A8  6F9C               	movwf	__bootloader_program@return_value& (0+255),b
  7433  0004AA  0E00               	movlw	0
  7434  0004AC  6F9D               	movwf	(__bootloader_program@return_value+1)& (0+255),b
  7435  0004AE  0E00               	movlw	0
  7436  0004B0  6F9E               	movwf	(__bootloader_program@return_value+2)& (0+255),b
  7437  0004B2  0E00               	movlw	0
  7438  0004B4  6F9F               	movwf	(__bootloader_program@return_value+3)& (0+255),b
  7439                           
  7440                           ; BSR set to: 0
  7441                           ;bootloader.c: 300: uint16_t address_within_page;;bootloader.c: 301: rootEntry_t root;;b
      +                          ootloader.c: 303: if(hex_file_offset==0)
  7442  0004B6  51D7               	movf	_hex_file_offset& (0+255),w,b
  7443  0004B8  11D8               	iorwf	(_hex_file_offset+1)& (0+255),w,b
  7444  0004BA  11D9               	iorwf	(_hex_file_offset+2)& (0+255),w,b
  7445  0004BC  11DA               	iorwf	(_hex_file_offset+3)& (0+255),w,b
  7446  0004BE  A4D8               	btfss	status,2,c
  7447  0004C0  D010               	goto	l2460
  7448                           
  7449                           ; BSR set to: 0
  7450                           ;bootloader.c: 304: {;bootloader.c: 306: fat_get_file_information(file_number, &root);
  7451  0004C2  0E7C               	movlw	low __bootloader_program@root
  7452  0004C4  6E30               	movwf	fat_get_file_information@data,c
  7453  0004C6  0E00               	movlw	high __bootloader_program@root
  7454  0004C8  6E31               	movwf	fat_get_file_information@data+1,c
  7455  0004CA  51FF               	movf	_file_number& (0+255),w,b
  7456  0004CC  EC2B  F03B         	call	_fat_get_file_information
  7457                           
  7458                           ;bootloader.c: 307: fast_read_cluster = root.firstCluster;
  7459  0004D0  C096  F0FB         	movff	__bootloader_program@root+26,_fast_read_cluster
  7460  0004D4  C097  F0FC         	movff	__bootloader_program@root+27,_fast_read_cluster+1
  7461                           
  7462                           ;bootloader.c: 308: fast_read_cluster_number = 0;
  7463  0004D8  0E00               	movlw	0
  7464  0004DA  0100               	movlb	0	; () banked
  7465  0004DC  6FFA               	movwf	(_fast_read_cluster_number+1)& (0+255),b
  7466  0004DE  0E00               	movlw	0
  7467  0004E0  6FF9               	movwf	_fast_read_cluster_number& (0+255),b
  7468  0004E2                     l2460:
  7469                           
  7470                           ;bootloader.c: 313: {;bootloader.c: 318: if((hex_file_size-hex_file_offset)>=50)
  7471                           
  7472                           ; BSR set to: 0
  7473                           
  7474                           ;bootloader.c: 309: };bootloader.c: 312: while(1)
  7475                           
  7476                           ; BSR set to: 0
  7477  0004E2  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7478  0004E6  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7479  0004EA  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7480  0004EE  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7481  0004F2  0100               	movlb	0	; () banked
  7482  0004F4  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7483  0004F6  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7484  0004F8  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7485  0004FA  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7486  0004FC  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7487  0004FE  0E00               	movlw	0
  7488  000500  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7489  000502  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7490  000504  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7491  000506  0101               	movlb	1	; () banked
  7492  000508  514A               	movf	_hex_file_size& (0+255),w,b
  7493  00050A  0100               	movlb	0	; () banked
  7494  00050C  256E               	addwf	??__bootloader_program& (0+255),w,b
  7495  00050E  6F72               	movwf	(??__bootloader_program+4)& (0+255),b
  7496  000510  0101               	movlb	1	; () banked
  7497  000512  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7498  000514  0100               	movlb	0	; () banked
  7499  000516  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7500  000518  6F73               	movwf	(??__bootloader_program+5)& (0+255),b
  7501  00051A  0101               	movlb	1	; () banked
  7502  00051C  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7503  00051E  0100               	movlb	0	; () banked
  7504  000520  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7505  000522  6F74               	movwf	(??__bootloader_program+6)& (0+255),b
  7506  000524  0101               	movlb	1	; () banked
  7507  000526  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7508  000528  0100               	movlb	0	; () banked
  7509  00052A  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7510  00052C  6F75               	movwf	(??__bootloader_program+7)& (0+255),b
  7511  00052E  5175               	movf	(??__bootloader_program+7)& (0+255),w,b
  7512  000530  1174               	iorwf	(??__bootloader_program+6)& (0+255),w,b
  7513  000532  1173               	iorwf	(??__bootloader_program+5)& (0+255),w,b
  7514  000534  E104               	bnz	u12380
  7515  000536  0E32               	movlw	50
  7516  000538  5D72               	subwf	(??__bootloader_program+4)& (0+255),w,b
  7517  00053A  A0D8               	btfss	status,0,c
  7518  00053C  D01F               	goto	l2462
  7519  00053E                     u12380:
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;bootloader.c: 319: {;bootloader.c: 321: fat_read_from_file_fast(hex_file_offset, 50, fi
      +                          le_buffer, &fast_read_cluster, &fast_read_cluster_number);
  7523  00053E  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7524  000542  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7525  000546  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7526  00054A  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7527  00054E  0E32               	movlw	50
  7528  000550  6E46               	movwf	fat_read_from_file_fast@length,c
  7529  000552  0E00               	movlw	0
  7530  000554  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7531  000556  0E00               	movlw	0
  7532  000558  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7533  00055A  0E00               	movlw	0
  7534  00055C  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7535  00055E  0E90               	movlw	low _file_buffer
  7536  000560  6E4A               	movwf	fat_read_from_file_fast@data,c
  7537  000562  0E02               	movlw	high _file_buffer
  7538  000564  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7539  000566  0EFB               	movlw	low _fast_read_cluster
  7540  000568  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7541  00056A  0E00               	movlw	high _fast_read_cluster
  7542  00056C  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7543  00056E  0EF9               	movlw	low _fast_read_cluster_number
  7544  000570  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7545  000572  0E00               	movlw	high _fast_read_cluster_number
  7546  000574  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7547  000576  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7548                           
  7549                           ;bootloader.c: 322: }
  7550  00057A  D03C               	goto	l2463
  7551  00057C                     l2462:
  7552                           
  7553                           ;bootloader.c: 323: else;bootloader.c: 324: {;bootloader.c: 326: fat_read_from_file_fast
      +                          (hex_file_offset, (hex_file_size-hex_file_offset), file_buffer, &fast_read_cluster, &fas
      +                          t_read_cluster_number);
  7554  00057C  C0D7  F042         	movff	_hex_file_offset,fat_read_from_file_fast@start_byte
  7555  000580  C0D8  F043         	movff	_hex_file_offset+1,fat_read_from_file_fast@start_byte+1
  7556  000584  C0D9  F044         	movff	_hex_file_offset+2,fat_read_from_file_fast@start_byte+2
  7557  000588  C0DA  F045         	movff	_hex_file_offset+3,fat_read_from_file_fast@start_byte+3
  7558  00058C  C0D7  F06E         	movff	_hex_file_offset,??__bootloader_program
  7559  000590  C0D8  F06F         	movff	_hex_file_offset+1,??__bootloader_program+1
  7560  000594  C0D9  F070         	movff	_hex_file_offset+2,??__bootloader_program+2
  7561  000598  C0DA  F071         	movff	_hex_file_offset+3,??__bootloader_program+3
  7562  00059C  0100               	movlb	0	; () banked
  7563  00059E  1F6E               	comf	??__bootloader_program& (0+255),f,b
  7564  0005A0  1F6F               	comf	(??__bootloader_program+1)& (0+255),f,b
  7565  0005A2  1F70               	comf	(??__bootloader_program+2)& (0+255),f,b
  7566  0005A4  1F71               	comf	(??__bootloader_program+3)& (0+255),f,b
  7567  0005A6  2B6E               	incf	??__bootloader_program& (0+255),f,b
  7568  0005A8  0E00               	movlw	0
  7569  0005AA  236F               	addwfc	(??__bootloader_program+1)& (0+255),f,b
  7570  0005AC  2370               	addwfc	(??__bootloader_program+2)& (0+255),f,b
  7571  0005AE  2371               	addwfc	(??__bootloader_program+3)& (0+255),f,b
  7572  0005B0  0101               	movlb	1	; () banked
  7573  0005B2  514A               	movf	_hex_file_size& (0+255),w,b
  7574  0005B4  0100               	movlb	0	; () banked
  7575  0005B6  256E               	addwf	??__bootloader_program& (0+255),w,b
  7576  0005B8  6E46               	movwf	fat_read_from_file_fast@length,c
  7577  0005BA  0101               	movlb	1	; () banked
  7578  0005BC  514B               	movf	(_hex_file_size+1)& (0+255),w,b
  7579  0005BE  0100               	movlb	0	; () banked
  7580  0005C0  216F               	addwfc	(??__bootloader_program+1)& (0+255),w,b
  7581  0005C2  6E47               	movwf	fat_read_from_file_fast@length+1,c
  7582  0005C4  0101               	movlb	1	; () banked
  7583  0005C6  514C               	movf	(_hex_file_size+2)& (0+255),w,b
  7584  0005C8  0100               	movlb	0	; () banked
  7585  0005CA  2170               	addwfc	(??__bootloader_program+2)& (0+255),w,b
  7586  0005CC  6E48               	movwf	fat_read_from_file_fast@length+2,c
  7587  0005CE  0101               	movlb	1	; () banked
  7588  0005D0  514D               	movf	(_hex_file_size+3)& (0+255),w,b
  7589  0005D2  0100               	movlb	0	; () banked
  7590  0005D4  2171               	addwfc	(??__bootloader_program+3)& (0+255),w,b
  7591  0005D6  6E49               	movwf	fat_read_from_file_fast@length+3,c
  7592  0005D8  0E90               	movlw	low _file_buffer
  7593  0005DA  6E4A               	movwf	fat_read_from_file_fast@data,c
  7594  0005DC  0E02               	movlw	high _file_buffer
  7595  0005DE  6E4B               	movwf	fat_read_from_file_fast@data+1,c
  7596  0005E0  0EFB               	movlw	low _fast_read_cluster
  7597  0005E2  6E4C               	movwf	fat_read_from_file_fast@cluster,c
  7598  0005E4  0E00               	movlw	high _fast_read_cluster
  7599  0005E6  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
  7600  0005E8  0EF9               	movlw	low _fast_read_cluster_number
  7601  0005EA  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
  7602  0005EC  0E00               	movlw	high _fast_read_cluster_number
  7603  0005EE  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
  7604  0005F0  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
  7605  0005F4                     l2463:
  7606                           
  7607                           ;bootloader.c: 327: };bootloader.c: 330: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
  7608  0005F4  0E90               	movlw	low _file_buffer
  7609  0005F6  6E0C               	movwf	parseHexFileEntry@data,c
  7610  0005F8  0E02               	movlw	high _file_buffer
  7611  0005FA  6E0D               	movwf	parseHexFileEntry@data+1,c
  7612  0005FC  0E00               	movlw	0
  7613  0005FE  6E0E               	movwf	parseHexFileEntry@offset,c
  7614  000600  0E00               	movlw	0
  7615  000602  6E0F               	movwf	parseHexFileEntry@offset+1,c
  7616  000604  0E00               	movlw	0
  7617  000606  6E10               	movwf	parseHexFileEntry@offset+2,c
  7618  000608  0E00               	movlw	0
  7619  00060A  6E11               	movwf	parseHexFileEntry@offset+3,c
  7620  00060C  0E93               	movlw	low _hex_file_entry
  7621  00060E  6E12               	movwf	parseHexFileEntry@hexEntry,c
  7622  000610  0E01               	movlw	high _hex_file_entry
  7623  000612  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
  7624  000614  EC10  F000         	call	_parseHexFileEntry	;wreg free
  7625  000618  C00C  F09C         	movff	?_parseHexFileEntry,__bootloader_program@return_value
  7626  00061C  C00D  F09D         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
  7627  000620  C00E  F09E         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
  7628  000624  C00F  F09F         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
  7629                           
  7630                           ;bootloader.c: 333: ++hex_file_entries;
  7631  000628  0101               	movlb	1	; () banked
  7632  00062A  4B78               	infsnz	_hex_file_entries& (0+255),f,b
  7633  00062C  2B79               	incf	(_hex_file_entries+1)& (0+255),f,b
  7634                           
  7635                           ; BSR set to: 1
  7636                           ;bootloader.c: 336: if(return_value>RecordErrorNoError)
  7637  00062E  0EF1               	movlw	241
  7638  000630  0100               	movlb	0	; () banked
  7639  000632  5D9C               	subwf	__bootloader_program@return_value& (0+255),w,b
  7640  000634  0EFF               	movlw	255
  7641  000636  599D               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
  7642  000638  0EFF               	movlw	255
  7643  00063A  599E               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
  7644  00063C  0EFF               	movlw	255
  7645  00063E  599F               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
  7646  000640  A0D8               	btfss	status,0,c
  7647  000642  D005               	goto	l2464
  7648                           
  7649                           ; BSR set to: 0
  7650                           ;bootloader.c: 337: {;bootloader.c: 339: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
  7651  000644  0E50               	movlw	80
  7652  000646  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7653                           
  7654                           ;bootloader.c: 340: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
  7655  000648  0E50               	movlw	80
  7656  00064A  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;bootloader.c: 341: return;
  7660  00064C  0012               	return	
  7661  00064E                     l2464:
  7662                           
  7663                           ; BSR set to: 0
  7664                           ;bootloader.c: 343: else;bootloader.c: 344: {;bootloader.c: 346: hex_file_offset += retu
      +                          rn_value;
  7665                           
  7666                           ; BSR set to: 0
  7667  00064E  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7668  000650  27D7               	addwf	_hex_file_offset& (0+255),f,b
  7669  000652  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7670  000654  23D8               	addwfc	(_hex_file_offset+1)& (0+255),f,b
  7671  000656  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7672  000658  23D9               	addwfc	(_hex_file_offset+2)& (0+255),f,b
  7673  00065A  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7674  00065C  23DA               	addwfc	(_hex_file_offset+3)& (0+255),f,b
  7675                           
  7676                           ; BSR set to: 0
  7677                           ;bootloader.c: 347: };bootloader.c: 349: switch(hex_file_entry.recordType)
  7678  00065E  D0FA               	goto	l2467
  7679  000660                     
  7680                           ;bootloader.c: 355: extended_linear_address = hex_file_entry.data[0];
  7681                           
  7682                           ; BSR set to: 0
  7683  000660  0101               	movlb	1	; () banked
  7684  000662  5198               	movf	(_hex_file_entry+5)& (0+255),w,b
  7685  000664  6F46               	movwf	_extended_linear_address& (0+255),b
  7686  000666  6B47               	clrf	(_extended_linear_address+1)& (0+255),b
  7687  000668  6B48               	clrf	(_extended_linear_address+2)& (0+255),b
  7688  00066A  6B49               	clrf	(_extended_linear_address+3)& (0+255),b
  7689                           
  7690                           ; BSR set to: 1
  7691                           ;bootloader.c: 356: extended_linear_address <<= 8;
  7692  00066C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7693  000670  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7694  000674  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7695  000678  6B46               	clrf	_extended_linear_address& (0+255),b
  7696                           
  7697                           ; BSR set to: 1
  7698                           ;bootloader.c: 357: extended_linear_address |= hex_file_entry.data[1];
  7699  00067A  5199               	movf	(_hex_file_entry+6)& (0+255),w,b
  7700  00067C  1346               	iorwf	_extended_linear_address& (0+255),f,b
  7701                           
  7702                           ; BSR set to: 1
  7703                           ;bootloader.c: 358: extended_linear_address <<= 8;
  7704  00067E  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7705  000682  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7706  000686  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7707  00068A  6B46               	clrf	_extended_linear_address& (0+255),b
  7708                           
  7709                           ; BSR set to: 1
  7710                           ;bootloader.c: 359: extended_linear_address <<= 8;
  7711  00068C  C148  F149         	movff	_extended_linear_address+2,_extended_linear_address+3
  7712  000690  C147  F148         	movff	_extended_linear_address+1,_extended_linear_address+2
  7713  000694  C146  F147         	movff	_extended_linear_address,_extended_linear_address+1
  7714  000698  6B46               	clrf	_extended_linear_address& (0+255),b
  7715                           
  7716                           ; BSR set to: 1
  7717                           ;bootloader.c: 361: break;
  7718                           
  7719                           ;bootloader.c: 360: continue;
  7720  00069A  D723               	goto	l2460
  7721  00069C                     l2471:
  7722                           
  7723                           ; BSR set to: 1
  7724                           ;bootloader.c: 366: start_from_byte = start_from_byte_next;
  7725  00069C  C18B  F0A4         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
  7726                           
  7727                           ; BSR set to: 1
  7728                           ;bootloader.c: 368: start_from_byte_next = 0;
  7729  0006A0  0E00               	movlw	0
  7730  0006A2  6F8B               	movwf	_start_from_byte_next& (0+255),b
  7731                           
  7732                           ; BSR set to: 1
  7733                           ;bootloader.c: 371: address32 = extended_linear_address + hex_file_entry.address;
  7734  0006A4  5195               	movf	(_hex_file_entry+2)& (0+255),w,b
  7735  0006A6  2546               	addwf	_extended_linear_address& (0+255),w,b
  7736  0006A8  0100               	movlb	0	; () banked
  7737  0006AA  6FA0               	movwf	__bootloader_program@address32& (0+255),b
  7738  0006AC  0101               	movlb	1	; () banked
  7739  0006AE  5196               	movf	(_hex_file_entry+3)& (0+255),w,b
  7740  0006B0  2147               	addwfc	(_extended_linear_address+1)& (0+255),w,b
  7741  0006B2  0100               	movlb	0	; () banked
  7742  0006B4  6FA1               	movwf	(__bootloader_program@address32+1)& (0+255),b
  7743  0006B6  0E00               	movlw	0
  7744  0006B8  0101               	movlb	1	; () banked
  7745  0006BA  2148               	addwfc	(_extended_linear_address+2)& (0+255),w,b
  7746  0006BC  0100               	movlb	0	; () banked
  7747  0006BE  6FA2               	movwf	(__bootloader_program@address32+2)& (0+255),b
  7748  0006C0  0E00               	movlw	0
  7749  0006C2  0101               	movlb	1	; () banked
  7750  0006C4  2149               	addwfc	(_extended_linear_address+3)& (0+255),w,b
  7751  0006C6  0100               	movlb	0	; () banked
  7752  0006C8  6FA3               	movwf	(__bootloader_program@address32+3)& (0+255),b
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;bootloader.c: 372: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
  7756  0006CA  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7757  0006CC  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7758  0006CE  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7759  0006D0  0E00               	movlw	0
  7760  0006D2  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7761  0006D4  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7762  0006D6  0E00               	movlw	0
  7763  0006D8  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7764  0006DA  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7765  0006DC  0E00               	movlw	0
  7766  0006DE  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7767  0006E0  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7768  0006E2  ECEC  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7769  0006E6  C001  F078         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
  7770  0006EA  C002  F079         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
  7771                           
  7772                           ;bootloader.c: 375: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
  7773  0006EE  0100               	movlb	0	; () banked
  7774  0006F0  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7775  0006F2  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7776  0006F4  6E01               	movwf	__bootloader_check_address@address,c
  7777  0006F6  0E00               	movlw	0
  7778  0006F8  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7779  0006FA  6E02               	movwf	__bootloader_check_address@address+1,c
  7780  0006FC  0E00               	movlw	0
  7781  0006FE  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7782  000700  6E03               	movwf	__bootloader_check_address@address+2,c
  7783  000702  0E00               	movlw	0
  7784  000704  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7785  000706  6E04               	movwf	__bootloader_check_address@address+3,c
  7786  000708  51A4               	movf	__bootloader_program@start_from_byte& (0+255),w,b
  7787  00070A  0800               	sublw	0
  7788  00070C  0101               	movlb	1	; () banked
  7789  00070E  2593               	addwf	_hex_file_entry& (0+255),w,b
  7790  000710  6E05               	movwf	__bootloader_check_address@dataLength,c
  7791  000712  ECD1  F02C         	call	__bootloader_check_address	;wreg free
  7792  000716  0900               	iorlw	0
  7793  000718  A4D8               	btfss	status,2,c
  7794  00071A  D6E3               	goto	l2460
  7795                           
  7796                           ;bootloader.c: 378: };bootloader.c: 380: if(page_to_write==0)
  7797                           
  7798                           ;bootloader.c: 376: {;bootloader.c: 377: break;
  7799  00071C  0100               	movlb	0	; () banked
  7800  00071E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7801  000720  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7802  000722  A4D8               	btfss	status,2,c
  7803  000724  D010               	goto	l2473
  7804                           
  7805                           ; BSR set to: 0
  7806                           ;bootloader.c: 381: {;bootloader.c: 385: page_to_write = entry_page;
  7807  000726  C078  F0A7         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
  7808  00072A  C079  F0A8         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
  7809                           
  7810                           ; BSR set to: 0
  7811                           ;bootloader.c: 386: internalFlash_readPage(page_to_write);
  7812  00072E  C0A7  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
  7813  000732  C0A8  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
  7814  000736  EC7E  F042         	call	_internalFlash_readPage	;wreg free
  7815                           
  7816                           ;bootloader.c: 387: buffer = internalFlash_getBuffer();
  7817  00073A  ECCA  F047         	call	_internalFlash_getBuffer	;wreg free
  7818  00073E  C001  F076         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
  7819  000742  C002  F077         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
  7820  000746                     l2473:
  7821                           
  7822                           ;bootloader.c: 388: };bootloader.c: 390: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
  7823  000746  C0A4  F0A5         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
  7824  00074A  0100               	movlb	0	; () banked
  7825  00074C  6BA6               	clrf	(__bootloader_program@cntr+1)& (0+255),b
  7826  00074E  D05D               	goto	l2474
  7827  000750                     
  7828                           ; BSR set to: 0
  7829                           ;bootloader.c: 391: {;bootloader.c: 394: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
  7830                           
  7831                           ; BSR set to: 0
  7832  000750  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7833  000752  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7834  000754  6E01               	movwf	internalFlash_pageFromAddress@address,c
  7835  000756  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7836  000758  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7837  00075A  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
  7838  00075C  0E00               	movlw	0
  7839  00075E  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7840  000760  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
  7841  000762  0E00               	movlw	0
  7842  000764  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7843  000766  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
  7844  000768  ECEC  F046         	call	_internalFlash_pageFromAddress	;wreg free
  7845  00076C  0100               	movlb	0	; () banked
  7846  00076E  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7847  000770  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
  7848  000772  E12A               	bnz	l15453
  7849  000774  51A8               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7850  000776  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
  7851  000778  A4D8               	btfss	status,2,c
  7852  00077A  D026               	goto	l2476
  7853                           
  7854                           ; BSR set to: 0
  7855                           ;bootloader.c: 395: {;bootloader.c: 396: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
  7856  00077C  51A5               	movf	__bootloader_program@cntr& (0+255),w,b
  7857  00077E  25A0               	addwf	__bootloader_program@address32& (0+255),w,b
  7858  000780  6E09               	movwf	internalFlash_addressWithinPage@address,c
  7859  000782  51A6               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
  7860  000784  21A1               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
  7861  000786  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  7862  000788  0E00               	movlw	0
  7863  00078A  21A2               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
  7864  00078C  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  7865  00078E  0E00               	movlw	0
  7866  000790  21A3               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
  7867  000792  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  7868  000794  C0A7  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
  7869  000798  C0A8  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
  7870  00079C  ECD4  F03D         	call	_internalFlash_addressWithinPage	;wreg free
  7871  0007A0  C009  F07A         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
  7872  0007A4  C00A  F07B         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
  7873                           
  7874                           ;bootloader.c: 397: buffer[address_within_page] = hex_file_entry.data[cntr];
  7875  0007A8  0E98               	movlw	low (_hex_file_entry+5)
  7876  0007AA  0100               	movlb	0	; () banked
  7877  0007AC  25A5               	addwf	__bootloader_program@cntr& (0+255),w,b
  7878  0007AE  6ED9               	movwf	fsr2l,c
  7879  0007B0  0E01               	movlw	high (_hex_file_entry+5)
  7880  0007B2  21A6               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
  7881  0007B4  6EDA               	movwf	fsr2h,c
  7882  0007B6  517A               	movf	__bootloader_program@address_within_page& (0+255),w,b
  7883  0007B8  2576               	addwf	__bootloader_program@buffer& (0+255),w,b
  7884  0007BA  6EE1               	movwf	fsr1l,c
  7885  0007BC  517B               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
  7886  0007BE  2177               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
  7887  0007C0  6EE2               	movwf	fsr1h,c
  7888  0007C2  CFDF FFE7          	movff	indf2,indf1
  7889                           
  7890                           ;bootloader.c: 398: }
  7891  0007C6  D01E               	goto	l2477
  7892  0007C8                     l2476:
  7893  0007C8                     l15453:
  7894                           
  7895                           ; BSR set to: 0
  7896                           ;bootloader.c: 399: else;bootloader.c: 400: {;bootloader.c: 402: hex_file_offset -= retu
      +                          rn_value;
  7897  0007C8  519C               	movf	__bootloader_program@return_value& (0+255),w,b
  7898  0007CA  5FD7               	subwf	_hex_file_offset& (0+255),f,b
  7899  0007CC  519D               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
  7900  0007CE  5BD8               	subwfb	(_hex_file_offset+1)& (0+255),f,b
  7901  0007D0  519E               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
  7902  0007D2  5BD9               	subwfb	(_hex_file_offset+2)& (0+255),f,b
  7903  0007D4  519F               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
  7904  0007D6  5BDA               	subwfb	(_hex_file_offset+3)& (0+255),f,b
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;bootloader.c: 403: --hex_file_entries;
  7908  0007D8  0101               	movlb	1	; () banked
  7909  0007DA  0778               	decf	_hex_file_entries& (0+255),f,b
  7910  0007DC  A0D8               	btfss	status,0,c
  7911  0007DE  0779               	decf	(_hex_file_entries+1)& (0+255),f,b
  7912                           
  7913                           ; BSR set to: 1
  7914                           ;bootloader.c: 405: start_from_byte_next = cntr;
  7915  0007E0  C0A5  F18B         	movff	__bootloader_program@cntr,_start_from_byte_next
  7916                           
  7917                           ; BSR set to: 1
  7918                           ;bootloader.c: 407: internalFlash_erasePage(page_to_write);
  7919  0007E4  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7920  0007E8  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7921  0007EC  ECE7  F043         	call	_internalFlash_erasePage	;wreg free
  7922                           
  7923                           ;bootloader.c: 408: internalFlash_writePage(page_to_write);
  7924  0007F0  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7925  0007F4  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7926  0007F8  ECFE  F039         	call	_internalFlash_writePage	;wreg free
  7927                           
  7928                           ;bootloader.c: 409: ++flash_pages_written;
  7929  0007FC  0101               	movlb	1	; () banked
  7930  0007FE  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7931  000800  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7932                           
  7933                           ; BSR set to: 1
  7934                           ;bootloader.c: 411: return;
  7935  000802  0012               	return	
  7936  000804                     l2477:
  7937                           
  7938                           ; BSR set to: 1
  7939  000804  0100               	movlb	0	; () banked
  7940  000806  4BA5               	infsnz	__bootloader_program@cntr& (0+255),f,b
  7941  000808  2BA6               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
  7942  00080A                     l2474:
  7943                           
  7944                           ; BSR set to: 0
  7945                           
  7946                           ; BSR set to: 0
  7947  00080A  0101               	movlb	1	; () banked
  7948  00080C  5193               	movf	_hex_file_entry& (0+255),w,b
  7949  00080E  0100               	movlb	0	; () banked
  7950  000810  5DA5               	subwf	__bootloader_program@cntr& (0+255),w,b
  7951  000812  0101               	movlb	1	; () banked
  7952  000814  5194               	movf	(_hex_file_entry+1)& (0+255),w,b
  7953  000816  0100               	movlb	0	; () banked
  7954  000818  59A6               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
  7955  00081A  B0D8               	btfsc	status,0,c
  7956  00081C  D662               	goto	l2460
  7957  00081E  D798               	goto	l2475
  7958  000820                     
  7959                           ;bootloader.c: 419: if(page_to_write!=0)
  7960                           
  7961                           ; BSR set to: 0
  7962  000820  0100               	movlb	0	; () banked
  7963  000822  51A7               	movf	__bootloader_program@page_to_write& (0+255),w,b
  7964  000824  11A8               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
  7965  000826  B4D8               	btfsc	status,2,c
  7966  000828  0012               	return	
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;bootloader.c: 420: {;bootloader.c: 422: internalFlash_erasePage(page_to_write);
  7970  00082A  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
  7971  00082E  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
  7972  000832  ECE7  F043         	call	_internalFlash_erasePage	;wreg free
  7973                           
  7974                           ;bootloader.c: 423: internalFlash_writePage(page_to_write);
  7975  000836  C0A7  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
  7976  00083A  C0A8  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
  7977  00083E  ECFE  F039         	call	_internalFlash_writePage	;wreg free
  7978                           
  7979                           ;bootloader.c: 424: ++flash_pages_written;
  7980  000842  0101               	movlb	1	; () banked
  7981  000844  4B74               	infsnz	_flash_pages_written& (0+255),f,b
  7982  000846  2B75               	incf	(_flash_pages_written+1)& (0+255),f,b
  7983                           
  7984                           ; BSR set to: 1
  7985                           ;bootloader.c: 426: os.bootloader_mode = BOOTLOADER_MODE_DONE;
  7986  000848  0E70               	movlw	112
  7987  00084A  0100               	movlb	0	; () banked
  7988  00084C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
  7989                           
  7990                           ; BSR set to: 0
  7991                           ;bootloader.c: 427: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
  7992  00084E  0E70               	movlw	112
  7993  000850  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
  7994                           
  7995                           ; BSR set to: 0
  7996                           ;bootloader.c: 428: };bootloader.c: 430: return;
  7997                           
  7998                           ; BSR set to: 0
  7999  000852  0012               	return	
  8000  000854                     l2467:
  8001                           
  8002                           ; BSR set to: 0
  8003                           
  8004                           ; BSR set to: 0
  8005  000854  0101               	movlb	1	; () banked
  8006  000856  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
  8007                           
  8008                           ; Switch size 1, requested type "space"
  8009                           ; Number of cases is 3, Range of values is 0 to 4
  8010                           ; switch strategies available:
  8011                           ; Name         Instructions Cycles
  8012                           ; simple_byte           10     6 (average)
  8013                           ;	Chosen strategy is simple_byte
  8014  000858  0A00               	xorlw	0	; case 0
  8015  00085A  B4D8               	btfsc	status,2,c
  8016  00085C  D71F               	goto	l2471
  8017  00085E  0A01               	xorlw	1	; case 1
  8018  000860  B4D8               	btfsc	status,2,c
  8019  000862  D7DE               	goto	l2479
  8020  000864  0A05               	xorlw	5	; case 4
  8021  000866  B4D8               	btfsc	status,2,c
  8022  000868  D6FB               	goto	l2468
  8023                           
  8024                           ; BSR set to: 1
  8025                           
  8026                           ; BSR set to: 1
  8027  00086A  D63B               	goto	l2460
  8028  00086C                     __end_of__bootloader_program:
  8029                           	opt stack 0
  8030                           tblptru	equ	0xFF8
  8031                           tblptrh	equ	0xFF7
  8032                           tblptrl	equ	0xFF6
  8033                           tablat	equ	0xFF5
  8034                           intcon	equ	0xFF2
  8035                           intcon2	equ	0xFF1
  8036                           intcon3	equ	0xFF0
  8037                           postinc0	equ	0xFEE
  8038                           wreg	equ	0xFE8
  8039                           indf1	equ	0xFE7
  8040                           postdec1	equ	0xFE5
  8041                           plusw1	equ	0xFE3
  8042                           fsr1h	equ	0xFE2
  8043                           fsr1l	equ	0xFE1
  8044                           indf2	equ	0xFDF
  8045                           postinc2	equ	0xFDE
  8046                           plusw2	equ	0xFDB
  8047                           fsr2h	equ	0xFDA
  8048                           fsr2l	equ	0xFD9
  8049                           status	equ	0xFD8
  8050                           
  8051 ;; *************** function _parseHexFileEntry *****************
  8052 ;; Defined at:
  8053 ;;		line 59 in file "hex.c"
  8054 ;; Parameters:    Size  Location     Type
  8055 ;;  data            2   11[COMRAM] PTR unsigned char 
  8056 ;;		 -> file_buffer(50), 
  8057 ;;  offset          4   13[COMRAM] unsigned long 
  8058 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
  8059 ;;		 -> hex_file_entry(23), 
  8060 ;; Auto vars:     Size  Location     Type
  8061 ;;  i               1   27[COMRAM] unsigned char 
  8062 ;; Return value:  Size  Location     Type
  8063 ;;                  4   11[COMRAM] unsigned long 
  8064 ;; Registers used:
  8065 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8066 ;; Tracked objects:
  8067 ;;		On entry : 0/0
  8068 ;;		On exit  : 0/0
  8069 ;;		Unchanged: 0/0
  8070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8071 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8072 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8073 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8074 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8075 ;;Total ram usage:       17 bytes
  8076 ;; Hardware stack levels used:    1
  8077 ;; Hardware stack levels required when called:    2
  8078 ;; This function calls:
  8079 ;;		_hexCharsToUint16
  8080 ;;		_hexCharsToUint8
  8081 ;; This function is called by:
  8082 ;;		__bootloader_verify_file
  8083 ;;		__bootloader_program
  8084 ;; This function uses a non-reentrant model
  8085 ;;
  8086                           
  8087                           	psect	text30
  8088  000020                     __ptext30:
  8089                           	opt stack 0
  8090  000020                     _parseHexFileEntry:
  8091                           	opt stack 26
  8092                           
  8093                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
  8094                           
  8095                           ;incstack = 0
  8096  000020  500E               	movf	parseHexFileEntry@offset,w,c
  8097  000022  240C               	addwf	parseHexFileEntry@data,w,c
  8098  000024  6ED9               	movwf	fsr2l,c
  8099  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
  8100  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8101  00002A  6EDA               	movwf	fsr2h,c
  8102  00002C  0E3A               	movlw	58
  8103  00002E  18DE               	xorwf	postinc2,w,c
  8104  000030  B4D8               	btfsc	status,2,c
  8105  000032  D005               	goto	l2322
  8106                           
  8107                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
  8108  000034  680C               	setf	?_parseHexFileEntry,c
  8109  000036  680D               	setf	?_parseHexFileEntry+1,c
  8110  000038  680E               	setf	?_parseHexFileEntry+2,c
  8111  00003A  680F               	setf	?_parseHexFileEntry+3,c
  8112  00003C  0012               	return	
  8113  00003E                     l2322:
  8114                           
  8115                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
  8116  00003E  0E02               	movlw	2
  8117  000040  240E               	addwf	parseHexFileEntry@offset,w,c
  8118  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8119  000044  0E00               	movlw	0
  8120  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8121  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8122  00004A  5014               	movf	??_parseHexFileEntry,w,c
  8123  00004C  240C               	addwf	parseHexFileEntry@data,w,c
  8124  00004E  6ED9               	movwf	fsr2l,c
  8125  000050  5015               	movf	??_parseHexFileEntry+1,w,c
  8126  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8127  000054  6EDA               	movwf	fsr2h,c
  8128  000056  50DF               	movf	indf2,w,c
  8129  000058  6E03               	movwf	hexCharsToUint8@c2,c
  8130  00005A  0E01               	movlw	1
  8131  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
  8132  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8133  000060  0E00               	movlw	0
  8134  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8135  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8136  000066  5016               	movf	??_parseHexFileEntry+2,w,c
  8137  000068  240C               	addwf	parseHexFileEntry@data,w,c
  8138  00006A  6ED9               	movwf	fsr2l,c
  8139  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
  8140  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8141  000070  6EDA               	movwf	fsr2h,c
  8142  000072  50DF               	movf	indf2,w,c
  8143  000074  ECDE  F046         	call	_hexCharsToUint8
  8144  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8145  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
  8146  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8147  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8148  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
  8149  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
  8150                           
  8151                           ;hex.c: 71: if (hexEntry->dataLength > 16)
  8152  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8153  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8154  000094  0E01               	movlw	1
  8155  000096  50DB               	movf	plusw2,w,c
  8156  000098  E104               	bnz	u11400
  8157  00009A  0E11               	movlw	17
  8158  00009C  5CDE               	subwf	postinc2,w,c
  8159  00009E  A0D8               	btfss	status,0,c
  8160  0000A0  D009               	goto	l2324
  8161  0000A2                     u11400:
  8162                           
  8163                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
  8164  0000A2  0EFC               	movlw	252
  8165  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
  8166  0000A6  0EFF               	movlw	255
  8167  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
  8168  0000AA  0EFF               	movlw	255
  8169  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
  8170  0000AE  0EFF               	movlw	255
  8171  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
  8172  0000B2  0012               	return	
  8173  0000B4                     l2324:
  8174                           
  8175                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
  8176  0000B4  0E04               	movlw	4
  8177  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
  8178  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8179  0000BA  0E00               	movlw	0
  8180  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8181  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8182  0000C0  5014               	movf	??_parseHexFileEntry,w,c
  8183  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
  8184  0000C4  6ED9               	movwf	fsr2l,c
  8185  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
  8186  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8187  0000CA  6EDA               	movwf	fsr2h,c
  8188  0000CC  50DF               	movf	indf2,w,c
  8189  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
  8190  0000D0  0E05               	movlw	5
  8191  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
  8192  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8193  0000D6  0E00               	movlw	0
  8194  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8195  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8196  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
  8197  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
  8198  0000E0  6ED9               	movwf	fsr2l,c
  8199  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
  8200  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8201  0000E6  6EDA               	movwf	fsr2h,c
  8202  0000E8  50DF               	movf	indf2,w,c
  8203  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
  8204  0000EC  0E06               	movlw	6
  8205  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
  8206  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
  8207  0000F2  0E00               	movlw	0
  8208  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8209  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8210  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
  8211  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
  8212  0000FC  6ED9               	movwf	fsr2l,c
  8213  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
  8214  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8215  000102  6EDA               	movwf	fsr2h,c
  8216  000104  50DF               	movf	indf2,w,c
  8217  000106  6E05               	movwf	hexCharsToUint16@c4,c
  8218  000108  0E03               	movlw	3
  8219  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
  8220  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
  8221  00010E  0E00               	movlw	0
  8222  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8223  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
  8224  000114  501A               	movf	??_parseHexFileEntry+6,w,c
  8225  000116  240C               	addwf	parseHexFileEntry@data,w,c
  8226  000118  6ED9               	movwf	fsr2l,c
  8227  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
  8228  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8229  00011E  6EDA               	movwf	fsr2h,c
  8230  000120  50DF               	movf	indf2,w,c
  8231  000122  EC64  F03B         	call	_hexCharsToUint16
  8232  000126  EE20 F002          	lfsr	2,2
  8233  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8234  00012C  26D9               	addwf	fsr2l,f,c
  8235  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8236  000130  22DA               	addwfc	fsr2h,f,c
  8237  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
  8238  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
  8239                           
  8240                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
  8241  00013A  EE20 F004          	lfsr	2,4
  8242  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8243  000140  26D9               	addwf	fsr2l,f,c
  8244  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8245  000144  22DA               	addwfc	fsr2h,f,c
  8246  000146  0E08               	movlw	8
  8247  000148  240E               	addwf	parseHexFileEntry@offset,w,c
  8248  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8249  00014C  0E00               	movlw	0
  8250  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8251  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
  8252  000152  5014               	movf	??_parseHexFileEntry,w,c
  8253  000154  240C               	addwf	parseHexFileEntry@data,w,c
  8254  000156  6EE1               	movwf	fsr1l,c
  8255  000158  5015               	movf	??_parseHexFileEntry+1,w,c
  8256  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8257  00015C  6EE2               	movwf	fsr1h,c
  8258  00015E  50E7               	movf	indf1,w,c
  8259  000160  6E03               	movwf	hexCharsToUint8@c2,c
  8260  000162  0E07               	movlw	7
  8261  000164  240E               	addwf	parseHexFileEntry@offset,w,c
  8262  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8263  000168  0E00               	movlw	0
  8264  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
  8265  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8266  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
  8267  000170  240C               	addwf	parseHexFileEntry@data,w,c
  8268  000172  6EE1               	movwf	fsr1l,c
  8269  000174  5017               	movf	??_parseHexFileEntry+3,w,c
  8270  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8271  000178  6EE2               	movwf	fsr1h,c
  8272  00017A  50E7               	movf	indf1,w,c
  8273  00017C  ECDE  F046         	call	_hexCharsToUint8
  8274  000180  6EDF               	movwf	indf2,c
  8275                           
  8276                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
  8277  000182  0E00               	movlw	0
  8278  000184  6E1C               	movwf	parseHexFileEntry@i,c
  8279  000186  D03D               	goto	l2325
  8280  000188                     
  8281                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
  8282  000188  501C               	movf	parseHexFileEntry@i,w,c
  8283  00018A  0D01               	mullw	1
  8284  00018C  0E05               	movlw	5
  8285  00018E  26F3               	addwf	prodl,f,c
  8286  000190  0E00               	movlw	0
  8287  000192  22F4               	addwfc	prodh,f,c
  8288  000194  50F3               	movf	prodl,w,c
  8289  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8290  000198  6ED9               	movwf	fsr2l,c
  8291  00019A  50F4               	movf	prodh,w,c
  8292  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8293  00019E  6EDA               	movwf	fsr2h,c
  8294  0001A0  501C               	movf	parseHexFileEntry@i,w,c
  8295  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8296  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8297  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
  8298  0001AA  0E00               	movlw	0
  8299  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8300  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
  8301  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
  8302  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
  8303  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8304  0001B6  0E0A               	movlw	10
  8305  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
  8306  0001BA  0E00               	movlw	0
  8307  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8308  0001BE  5014               	movf	??_parseHexFileEntry,w,c
  8309  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
  8310  0001C2  6EE1               	movwf	fsr1l,c
  8311  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
  8312  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8313  0001C8  6EE2               	movwf	fsr1h,c
  8314  0001CA  50E7               	movf	indf1,w,c
  8315  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
  8316  0001CE  501C               	movf	parseHexFileEntry@i,w,c
  8317  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8318  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8319  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8320  0001D8  0E00               	movlw	0
  8321  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8322  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
  8323  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
  8324  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
  8325  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8326  0001E4  0E09               	movlw	9
  8327  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
  8328  0001E8  0E00               	movlw	0
  8329  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8330  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
  8331  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
  8332  0001F0  6EE1               	movwf	fsr1l,c
  8333  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
  8334  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8335  0001F6  6EE2               	movwf	fsr1h,c
  8336  0001F8  50E7               	movf	indf1,w,c
  8337  0001FA  ECDE  F046         	call	_hexCharsToUint8
  8338  0001FE  6EDF               	movwf	indf2,c
  8339  000200  2A1C               	incf	parseHexFileEntry@i,f,c
  8340  000202                     l2325:
  8341  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8342  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8343  00020A  501C               	movf	parseHexFileEntry@i,w,c
  8344  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8345  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8346  000210  50DE               	movf	postinc2,w,c
  8347  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8348  000214  50DE               	movf	postinc2,w,c
  8349  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8350  000218  A0D8               	btfss	status,0,c
  8351  00021A  D7B6               	goto	l2326
  8352                           
  8353                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
  8354  00021C  EE20 F015          	lfsr	2,21
  8355  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8356  000222  26D9               	addwf	fsr2l,f,c
  8357  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8358  000226  22DA               	addwfc	fsr2h,f,c
  8359  000228  501C               	movf	parseHexFileEntry@i,w,c
  8360  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8361  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8362  000230  2614               	addwf	??_parseHexFileEntry,f,c
  8363  000232  0E00               	movlw	0
  8364  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8365  000236  500E               	movf	parseHexFileEntry@offset,w,c
  8366  000238  2614               	addwf	??_parseHexFileEntry,f,c
  8367  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8368  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8369  00023E  0E0A               	movlw	10
  8370  000240  2614               	addwf	??_parseHexFileEntry,f,c
  8371  000242  0E00               	movlw	0
  8372  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8373  000246  5014               	movf	??_parseHexFileEntry,w,c
  8374  000248  240C               	addwf	parseHexFileEntry@data,w,c
  8375  00024A  6EE1               	movwf	fsr1l,c
  8376  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
  8377  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8378  000250  6EE2               	movwf	fsr1h,c
  8379  000252  50E7               	movf	indf1,w,c
  8380  000254  6E03               	movwf	hexCharsToUint8@c2,c
  8381  000256  501C               	movf	parseHexFileEntry@i,w,c
  8382  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
  8383  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8384  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8385  000260  0E00               	movlw	0
  8386  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8387  000264  500E               	movf	parseHexFileEntry@offset,w,c
  8388  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
  8389  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
  8390  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8391  00026C  0E09               	movlw	9
  8392  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
  8393  000270  0E00               	movlw	0
  8394  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
  8395  000274  5016               	movf	??_parseHexFileEntry+2,w,c
  8396  000276  240C               	addwf	parseHexFileEntry@data,w,c
  8397  000278  6EE1               	movwf	fsr1l,c
  8398  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
  8399  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8400  00027E  6EE2               	movwf	fsr1h,c
  8401  000280  50E7               	movf	indf1,w,c
  8402  000282  ECDE  F046         	call	_hexCharsToUint8
  8403  000286  6EDF               	movwf	indf2,c
  8404                           
  8405                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
  8406  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8407  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8408  000290  EE10 F016          	lfsr	1,22
  8409  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8410  000296  26E1               	addwf	fsr1l,f,c
  8411  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8412  00029A  22E2               	addwfc	fsr1h,f,c
  8413  00029C  CFDF FFE7          	movff	indf2,indf1
  8414                           
  8415                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
  8416  0002A0  EE20 F002          	lfsr	2,2
  8417  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8418  0002A6  26D9               	addwf	fsr2l,f,c
  8419  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8420  0002AA  22DA               	addwfc	fsr2h,f,c
  8421  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
  8422  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
  8423  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
  8424  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
  8425  0002BA  EE20 F016          	lfsr	2,22
  8426  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8427  0002C0  26D9               	addwf	fsr2l,f,c
  8428  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8429  0002C4  22DA               	addwfc	fsr2h,f,c
  8430  0002C6  5014               	movf	??_parseHexFileEntry,w,c
  8431  0002C8  26DF               	addwf	indf2,f,c
  8432                           
  8433                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
  8434  0002CA  EE20 F002          	lfsr	2,2
  8435  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8436  0002D0  26D9               	addwf	fsr2l,f,c
  8437  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8438  0002D4  22DA               	addwfc	fsr2h,f,c
  8439  0002D6  50DF               	movf	indf2,w,c
  8440  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8441  0002DA  EE20 F016          	lfsr	2,22
  8442  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8443  0002E0  26D9               	addwf	fsr2l,f,c
  8444  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8445  0002E4  22DA               	addwfc	fsr2h,f,c
  8446  0002E6  5014               	movf	??_parseHexFileEntry,w,c
  8447  0002E8  26DF               	addwf	indf2,f,c
  8448                           
  8449                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
  8450  0002EA  EE20 F004          	lfsr	2,4
  8451  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8452  0002F0  26D9               	addwf	fsr2l,f,c
  8453  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8454  0002F4  22DA               	addwfc	fsr2h,f,c
  8455  0002F6  50DF               	movf	indf2,w,c
  8456  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8457  0002FA  EE20 F016          	lfsr	2,22
  8458  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8459  000300  26D9               	addwf	fsr2l,f,c
  8460  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8461  000304  22DA               	addwfc	fsr2h,f,c
  8462  000306  5014               	movf	??_parseHexFileEntry,w,c
  8463  000308  26DF               	addwf	indf2,f,c
  8464                           
  8465                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
  8466  00030A  0E00               	movlw	0
  8467  00030C  6E1C               	movwf	parseHexFileEntry@i,c
  8468  00030E  D017               	goto	l2328
  8469  000310                     
  8470                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
  8471  000310  501C               	movf	parseHexFileEntry@i,w,c
  8472  000312  0D01               	mullw	1
  8473  000314  0E05               	movlw	5
  8474  000316  26F3               	addwf	prodl,f,c
  8475  000318  0E00               	movlw	0
  8476  00031A  22F4               	addwfc	prodh,f,c
  8477  00031C  50F3               	movf	prodl,w,c
  8478  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
  8479  000320  6ED9               	movwf	fsr2l,c
  8480  000322  50F4               	movf	prodh,w,c
  8481  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
  8482  000326  6EDA               	movwf	fsr2h,c
  8483  000328  50DF               	movf	indf2,w,c
  8484  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8485  00032C  EE20 F016          	lfsr	2,22
  8486  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8487  000332  26D9               	addwf	fsr2l,f,c
  8488  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8489  000336  22DA               	addwfc	fsr2h,f,c
  8490  000338  5014               	movf	??_parseHexFileEntry,w,c
  8491  00033A  26DF               	addwf	indf2,f,c
  8492  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
  8493  00033E                     l2328:
  8494  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
  8495  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
  8496  000346  501C               	movf	parseHexFileEntry@i,w,c
  8497  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8498  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
  8499  00034C  50DE               	movf	postinc2,w,c
  8500  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
  8501  000350  50DE               	movf	postinc2,w,c
  8502  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
  8503  000354  A0D8               	btfss	status,0,c
  8504  000356  D7DC               	goto	l2329
  8505                           
  8506                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
  8507  000358  EE20 F015          	lfsr	2,21
  8508  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8509  00035E  26D9               	addwf	fsr2l,f,c
  8510  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8511  000362  22DA               	addwfc	fsr2h,f,c
  8512  000364  50DF               	movf	indf2,w,c
  8513  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
  8514  000368  EE20 F016          	lfsr	2,22
  8515  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8516  00036E  26D9               	addwf	fsr2l,f,c
  8517  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8518  000372  22DA               	addwfc	fsr2h,f,c
  8519  000374  5014               	movf	??_parseHexFileEntry,w,c
  8520  000376  26DF               	addwf	indf2,f,c
  8521                           
  8522                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
  8523  000378  EE20 F016          	lfsr	2,22
  8524  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8525  00037E  26D9               	addwf	fsr2l,f,c
  8526  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8527  000382  22DA               	addwfc	fsr2h,f,c
  8528  000384  50DF               	movf	indf2,w,c
  8529  000386  B4D8               	btfsc	status,2,c
  8530  000388  D009               	goto	l2331
  8531                           
  8532                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
  8533  00038A  0EFE               	movlw	254
  8534  00038C  6E0C               	movwf	?_parseHexFileEntry,c
  8535  00038E  0EFF               	movlw	255
  8536  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
  8537  000392  0EFF               	movlw	255
  8538  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
  8539  000396  0EFF               	movlw	255
  8540  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
  8541  00039A  0012               	return	
  8542  00039C                     l2331:
  8543                           
  8544                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
  8545  00039C  EE20 F004          	lfsr	2,4
  8546  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
  8547  0003A2  26D9               	addwf	fsr2l,f,c
  8548  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
  8549  0003A6  22DA               	addwfc	fsr2h,f,c
  8550  0003A8  04DE               	decf	postinc2,w,c
  8551  0003AA  A4D8               	btfss	status,2,c
  8552  0003AC  D009               	goto	l2332
  8553                           
  8554                           ;hex.c: 110: {;hex.c: 112: return 0;
  8555  0003AE  0E00               	movlw	0
  8556  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
  8557  0003B2  0E00               	movlw	0
  8558  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
  8559  0003B6  0E00               	movlw	0
  8560  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
  8561  0003BA  0E00               	movlw	0
  8562  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
  8563                           
  8564                           ;hex.c: 113: }
  8565  0003BE  0012               	return	
  8566  0003C0                     l2332:
  8567                           
  8568                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
  8569  0003C0  501C               	movf	parseHexFileEntry@i,w,c
  8570  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
  8571  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
  8572  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
  8573  0003CA  0E00               	movlw	0
  8574  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
  8575  0003CE  0E0B               	movlw	11
  8576  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
  8577  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
  8578  0003D4  0E00               	movlw	0
  8579  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
  8580  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
  8581  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
  8582  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
  8583  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
  8584  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
  8585  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
  8586  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
  8587  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
  8588  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
  8589  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8590  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
  8591  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8592  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
  8593  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8594                           
  8595                           ;hex.c: 117: if (data[++offset] == ':')
  8596  0003F4  0E01               	movlw	1
  8597  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
  8598  0003F8  0E00               	movlw	0
  8599  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8600  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8601  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8602  000400  500E               	movf	parseHexFileEntry@offset,w,c
  8603  000402  240C               	addwf	parseHexFileEntry@data,w,c
  8604  000404  6ED9               	movwf	fsr2l,c
  8605  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
  8606  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8607  00040A  6EDA               	movwf	fsr2h,c
  8608  00040C  0E3A               	movlw	58
  8609  00040E  18DE               	xorwf	postinc2,w,c
  8610  000410  A4D8               	btfss	status,2,c
  8611  000412  D009               	goto	l2334
  8612                           
  8613                           ;hex.c: 118: {;hex.c: 119: return offset;
  8614  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8615  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8616  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8617  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8618                           
  8619                           ;hex.c: 120: }
  8620  000424  0012               	return	
  8621  000426                     l2334:
  8622                           
  8623                           ;hex.c: 121: else if (data[++offset] == ':')
  8624  000426  0E01               	movlw	1
  8625  000428  260E               	addwf	parseHexFileEntry@offset,f,c
  8626  00042A  0E00               	movlw	0
  8627  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8628  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8629  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8630  000432  500E               	movf	parseHexFileEntry@offset,w,c
  8631  000434  240C               	addwf	parseHexFileEntry@data,w,c
  8632  000436  6ED9               	movwf	fsr2l,c
  8633  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
  8634  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8635  00043C  6EDA               	movwf	fsr2h,c
  8636  00043E  0E3A               	movlw	58
  8637  000440  18DE               	xorwf	postinc2,w,c
  8638  000442  A4D8               	btfss	status,2,c
  8639  000444  D009               	goto	l2336
  8640                           
  8641                           ;hex.c: 122: {;hex.c: 123: return offset;
  8642  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8643  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8644  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8645  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8646                           
  8647                           ;hex.c: 124: }
  8648  000456  0012               	return	
  8649  000458                     l2336:
  8650                           
  8651                           ;hex.c: 125: else if (data[++offset] == ':')
  8652  000458  0E01               	movlw	1
  8653  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
  8654  00045C  0E00               	movlw	0
  8655  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
  8656  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
  8657  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
  8658  000464  500E               	movf	parseHexFileEntry@offset,w,c
  8659  000466  240C               	addwf	parseHexFileEntry@data,w,c
  8660  000468  6ED9               	movwf	fsr2l,c
  8661  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
  8662  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
  8663  00046E  6EDA               	movwf	fsr2h,c
  8664  000470  0E3A               	movlw	58
  8665  000472  18DE               	xorwf	postinc2,w,c
  8666  000474  A4D8               	btfss	status,2,c
  8667  000476  D009               	goto	l2338
  8668                           
  8669                           ;hex.c: 126: {;hex.c: 127: return offset;
  8670  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
  8671  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
  8672  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
  8673  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
  8674                           
  8675                           ;hex.c: 128: }
  8676  000488  0012               	return	
  8677  00048A                     l2338:
  8678                           
  8679                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
  8680  00048A  0EFD               	movlw	253
  8681  00048C  6E0C               	movwf	?_parseHexFileEntry,c
  8682  00048E  0EFF               	movlw	255
  8683  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
  8684  000492  0EFF               	movlw	255
  8685  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
  8686  000496  0EFF               	movlw	255
  8687  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
  8688  00049A  0012               	return	
  8689  00049C                     __end_of_parseHexFileEntry:
  8690                           	opt stack 0
  8691                           tblptru	equ	0xFF8
  8692                           tblptrh	equ	0xFF7
  8693                           tblptrl	equ	0xFF6
  8694                           tablat	equ	0xFF5
  8695                           prodh	equ	0xFF4
  8696                           prodl	equ	0xFF3
  8697                           intcon	equ	0xFF2
  8698                           intcon2	equ	0xFF1
  8699                           intcon3	equ	0xFF0
  8700                           postinc0	equ	0xFEE
  8701                           wreg	equ	0xFE8
  8702                           indf1	equ	0xFE7
  8703                           postdec1	equ	0xFE5
  8704                           plusw1	equ	0xFE3
  8705                           fsr1h	equ	0xFE2
  8706                           fsr1l	equ	0xFE1
  8707                           indf2	equ	0xFDF
  8708                           postinc2	equ	0xFDE
  8709                           postdec2	equ	0xFDD
  8710                           plusw2	equ	0xFDB
  8711                           fsr2h	equ	0xFDA
  8712                           fsr2l	equ	0xFD9
  8713                           status	equ	0xFD8
  8714                           
  8715 ;; *************** function _hexCharsToUint8 *****************
  8716 ;; Defined at:
  8717 ;;		line 42 in file "hex.c"
  8718 ;; Parameters:    Size  Location     Type
  8719 ;;  c1              1    wreg     unsigned char 
  8720 ;;  c2              1    2[COMRAM] unsigned char 
  8721 ;; Auto vars:     Size  Location     Type
  8722 ;;  c1              1    4[COMRAM] unsigned char 
  8723 ;;  retVal          1    5[COMRAM] unsigned char 
  8724 ;; Return value:  Size  Location     Type
  8725 ;;                  1    wreg      unsigned char 
  8726 ;; Registers used:
  8727 ;;		wreg, status,2, status,0, cstack
  8728 ;; Tracked objects:
  8729 ;;		On entry : 0/0
  8730 ;;		On exit  : 0/0
  8731 ;;		Unchanged: 0/0
  8732 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8733 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8734 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8735 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8736 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8737 ;;Total ram usage:        4 bytes
  8738 ;; Hardware stack levels used:    1
  8739 ;; Hardware stack levels required when called:    1
  8740 ;; This function calls:
  8741 ;;		_hexCharToUint8
  8742 ;; This function is called by:
  8743 ;;		_parseHexFileEntry
  8744 ;; This function uses a non-reentrant model
  8745 ;;
  8746                           
  8747                           	psect	text31
  8748  008DBC                     __ptext31:
  8749                           	opt stack 0
  8750  008DBC                     _hexCharsToUint8:
  8751                           	opt stack 26
  8752                           
  8753                           ;incstack = 0
  8754                           ;hexCharsToUint8@c1 stored from wreg
  8755  008DBC  6E05               	movwf	hexCharsToUint8@c1,c
  8756                           
  8757                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
  8758  008DBE  5005               	movf	hexCharsToUint8@c1,w,c
  8759  008DC0  EC25  F045         	call	_hexCharToUint8
  8760  008DC4  6E04               	movwf	??_hexCharsToUint8& (0+255),c
  8761  008DC6  3804               	swapf	??_hexCharsToUint8,w,c
  8762  008DC8  0BF0               	andlw	240
  8763  008DCA  6E06               	movwf	hexCharsToUint8@retVal,c
  8764                           
  8765                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
  8766  008DCC  5003               	movf	hexCharsToUint8@c2,w,c
  8767  008DCE  EC25  F045         	call	_hexCharToUint8
  8768  008DD2  1206               	iorwf	hexCharsToUint8@retVal,f,c
  8769                           
  8770                           ;hex.c: 46: return retVal;
  8771  008DD4  5006               	movf	hexCharsToUint8@retVal,w,c
  8772  008DD6  0012               	return	
  8773  008DD8                     __end_of_hexCharsToUint8:
  8774                           	opt stack 0
  8775                           tblptru	equ	0xFF8
  8776                           tblptrh	equ	0xFF7
  8777                           tblptrl	equ	0xFF6
  8778                           tablat	equ	0xFF5
  8779                           prodh	equ	0xFF4
  8780                           prodl	equ	0xFF3
  8781                           intcon	equ	0xFF2
  8782                           intcon2	equ	0xFF1
  8783                           intcon3	equ	0xFF0
  8784                           postinc0	equ	0xFEE
  8785                           wreg	equ	0xFE8
  8786                           indf1	equ	0xFE7
  8787                           postdec1	equ	0xFE5
  8788                           plusw1	equ	0xFE3
  8789                           fsr1h	equ	0xFE2
  8790                           fsr1l	equ	0xFE1
  8791                           indf2	equ	0xFDF
  8792                           postinc2	equ	0xFDE
  8793                           postdec2	equ	0xFDD
  8794                           plusw2	equ	0xFDB
  8795                           fsr2h	equ	0xFDA
  8796                           fsr2l	equ	0xFD9
  8797                           status	equ	0xFD8
  8798                           
  8799 ;; *************** function _hexCharsToUint16 *****************
  8800 ;; Defined at:
  8801 ;;		line 49 in file "hex.c"
  8802 ;; Parameters:    Size  Location     Type
  8803 ;;  c1              1    wreg     unsigned char 
  8804 ;;  c2              1    2[COMRAM] unsigned char 
  8805 ;;  c3              1    3[COMRAM] unsigned char 
  8806 ;;  c4              1    4[COMRAM] unsigned char 
  8807 ;; Auto vars:     Size  Location     Type
  8808 ;;  c1              1    8[COMRAM] unsigned char 
  8809 ;;  retVal          2    9[COMRAM] unsigned int 
  8810 ;; Return value:  Size  Location     Type
  8811 ;;                  2    2[COMRAM] unsigned int 
  8812 ;; Registers used:
  8813 ;;		wreg, status,2, status,0, cstack
  8814 ;; Tracked objects:
  8815 ;;		On entry : 0/0
  8816 ;;		On exit  : 0/0
  8817 ;;		Unchanged: 0/0
  8818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8819 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8820 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8821 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8822 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8823 ;;Total ram usage:        9 bytes
  8824 ;; Hardware stack levels used:    1
  8825 ;; Hardware stack levels required when called:    1
  8826 ;; This function calls:
  8827 ;;		_hexCharToUint8
  8828 ;; This function is called by:
  8829 ;;		_parseHexFileEntry
  8830 ;; This function uses a non-reentrant model
  8831 ;;
  8832                           
  8833                           	psect	text32
  8834  0076C8                     __ptext32:
  8835                           	opt stack 0
  8836  0076C8                     _hexCharsToUint16:
  8837                           	opt stack 26
  8838                           
  8839                           ;incstack = 0
  8840                           ;hexCharsToUint16@c1 stored from wreg
  8841  0076C8  6E09               	movwf	hexCharsToUint16@c1,c
  8842                           
  8843                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
  8844  0076CA  5009               	movf	hexCharsToUint16@c1,w,c
  8845  0076CC  EC25  F045         	call	_hexCharToUint8
  8846  0076D0  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8847  0076D2  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8848  0076D4  0E0C               	movlw	12
  8849  0076D6                     u10775:
  8850  0076D6  90D8               	bcf	status,0,c
  8851  0076D8  3606               	rlcf	??_hexCharsToUint16,f,c
  8852  0076DA  3607               	rlcf	??_hexCharsToUint16+1,f,c
  8853  0076DC  2EE8               	decfsz	wreg,f,c
  8854  0076DE  D7FB               	goto	u10775
  8855  0076E0  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
  8856  0076E4  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
  8857                           
  8858                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
  8859  0076E8  5003               	movf	hexCharsToUint16@c2,w,c
  8860  0076EA  EC25  F045         	call	_hexCharToUint8
  8861  0076EE  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8862  0076F0  5006               	movf	??_hexCharsToUint16,w,c
  8863  0076F2  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
  8864  0076F4  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8865  0076F6  5007               	movf	??_hexCharsToUint16+1,w,c
  8866  0076F8  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8867  0076FA  5008               	movf	??_hexCharsToUint16+2,w,c
  8868  0076FC  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8869                           
  8870                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
  8871  0076FE  5004               	movf	hexCharsToUint16@c3,w,c
  8872  007700  EC25  F045         	call	_hexCharToUint8
  8873  007704  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8874  007706  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
  8875  007708  3A06               	swapf	??_hexCharsToUint16,f,c
  8876  00770A  3A07               	swapf	??_hexCharsToUint16+1,f,c
  8877  00770C  0EF0               	movlw	240
  8878  00770E  1607               	andwf	??_hexCharsToUint16+1,f,c
  8879  007710  5006               	movf	??_hexCharsToUint16,w,c
  8880  007712  0B0F               	andlw	15
  8881  007714  1207               	iorwf	??_hexCharsToUint16+1,f,c
  8882  007716  0EF0               	movlw	240
  8883  007718  1606               	andwf	??_hexCharsToUint16,f,c
  8884  00771A  5006               	movf	??_hexCharsToUint16,w,c
  8885  00771C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8886  00771E  5007               	movf	??_hexCharsToUint16+1,w,c
  8887  007720  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
  8888                           
  8889                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
  8890  007722  5005               	movf	hexCharsToUint16@c4,w,c
  8891  007724  EC25  F045         	call	_hexCharToUint8
  8892  007728  6E06               	movwf	??_hexCharsToUint16& (0+255),c
  8893  00772A  5006               	movf	??_hexCharsToUint16,w,c
  8894  00772C  120A               	iorwf	hexCharsToUint16@retVal,f,c
  8895                           
  8896                           ;hex.c: 55: return retVal;
  8897  00772E  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
  8898  007732  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
  8899  007736  0012               	return	
  8900  007738                     __end_of_hexCharsToUint16:
  8901                           	opt stack 0
  8902                           tblptru	equ	0xFF8
  8903                           tblptrh	equ	0xFF7
  8904                           tblptrl	equ	0xFF6
  8905                           tablat	equ	0xFF5
  8906                           prodh	equ	0xFF4
  8907                           prodl	equ	0xFF3
  8908                           intcon	equ	0xFF2
  8909                           intcon2	equ	0xFF1
  8910                           intcon3	equ	0xFF0
  8911                           postinc0	equ	0xFEE
  8912                           wreg	equ	0xFE8
  8913                           indf1	equ	0xFE7
  8914                           postdec1	equ	0xFE5
  8915                           plusw1	equ	0xFE3
  8916                           fsr1h	equ	0xFE2
  8917                           fsr1l	equ	0xFE1
  8918                           indf2	equ	0xFDF
  8919                           postinc2	equ	0xFDE
  8920                           postdec2	equ	0xFDD
  8921                           plusw2	equ	0xFDB
  8922                           fsr2h	equ	0xFDA
  8923                           fsr2l	equ	0xFD9
  8924                           status	equ	0xFD8
  8925                           
  8926 ;; *************** function _hexCharToUint8 *****************
  8927 ;; Defined at:
  8928 ;;		line 11 in file "hex.c"
  8929 ;; Parameters:    Size  Location     Type
  8930 ;;  c               1    wreg     unsigned char 
  8931 ;; Auto vars:     Size  Location     Type
  8932 ;;  c               1    0[COMRAM] unsigned char 
  8933 ;;  ascii           1    1[COMRAM] unsigned char 
  8934 ;; Return value:  Size  Location     Type
  8935 ;;                  1    wreg      unsigned char 
  8936 ;; Registers used:
  8937 ;;		wreg, status,2, status,0
  8938 ;; Tracked objects:
  8939 ;;		On entry : 0/0
  8940 ;;		On exit  : 0/0
  8941 ;;		Unchanged: 0/0
  8942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8943 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8944 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8945 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8946 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8947 ;;Total ram usage:        2 bytes
  8948 ;; Hardware stack levels used:    1
  8949 ;; This function calls:
  8950 ;;		Nothing
  8951 ;; This function is called by:
  8952 ;;		_hexCharsToUint8
  8953 ;;		_hexCharsToUint16
  8954 ;; This function uses a non-reentrant model
  8955 ;;
  8956                           
  8957                           	psect	text33
  8958  008A4A                     __ptext33:
  8959                           	opt stack 0
  8960  008A4A                     _hexCharToUint8:
  8961                           	opt stack 26
  8962                           
  8963                           ;incstack = 0
  8964                           ;hexCharToUint8@c stored from wreg
  8965  008A4A  6E01               	movwf	hexCharToUint8@c,c
  8966                           
  8967                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
  8968  008A4C  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
  8969                           
  8970                           ;hex.c: 16: if (ascii >= 97)
  8971  008A50  0E60               	movlw	96
  8972  008A52  6402               	cpfsgt	hexCharToUint8@ascii,c
  8973  008A54  D002               	goto	l2307
  8974                           
  8975                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
  8976  008A56  0E57               	movlw	87
  8977  008A58  D006               	goto	L3
  8978  008A5A                     l2307:
  8979                           
  8980                           ;hex.c: 21: else if (ascii >= 65)
  8981  008A5A  0E40               	movlw	64
  8982  008A5C  6402               	cpfsgt	hexCharToUint8@ascii,c
  8983  008A5E  D002               	goto	l2309
  8984                           
  8985                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
  8986  008A60  0E37               	movlw	55
  8987  008A62  D001               	goto	L3
  8988  008A64                     l2309:
  8989                           
  8990                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
  8991  008A64  0E30               	movlw	48
  8992  008A66                     L3:
  8993  008A66  5E02               	subwf	hexCharToUint8@ascii,f,c
  8994                           
  8995                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
  8996  008A68  0E0F               	movlw	15
  8997  008A6A  6402               	cpfsgt	hexCharToUint8@ascii,c
  8998  008A6C  D002               	goto	l2311
  8999                           
  9000                           ;hex.c: 32: {;hex.c: 33: return 0;
  9001  008A6E  0E00               	movlw	0
  9002                           
  9003                           ;hex.c: 34: }
  9004  008A70  0012               	return	
  9005  008A72                     l2311:
  9006                           
  9007                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
  9008  008A72  5002               	movf	hexCharToUint8@ascii,w,c
  9009  008A74  0012               	return	
  9010  008A76                     __end_of_hexCharToUint8:
  9011                           	opt stack 0
  9012                           tblptru	equ	0xFF8
  9013                           tblptrh	equ	0xFF7
  9014                           tblptrl	equ	0xFF6
  9015                           tablat	equ	0xFF5
  9016                           prodh	equ	0xFF4
  9017                           prodl	equ	0xFF3
  9018                           intcon	equ	0xFF2
  9019                           intcon2	equ	0xFF1
  9020                           intcon3	equ	0xFF0
  9021                           postinc0	equ	0xFEE
  9022                           wreg	equ	0xFE8
  9023                           indf1	equ	0xFE7
  9024                           postdec1	equ	0xFE5
  9025                           plusw1	equ	0xFE3
  9026                           fsr1h	equ	0xFE2
  9027                           fsr1l	equ	0xFE1
  9028                           indf2	equ	0xFDF
  9029                           postinc2	equ	0xFDE
  9030                           postdec2	equ	0xFDD
  9031                           plusw2	equ	0xFDB
  9032                           fsr2h	equ	0xFDA
  9033                           fsr2l	equ	0xFD9
  9034                           status	equ	0xFD8
  9035                           
  9036 ;; *************** function _internalFlash_writePage *****************
  9037 ;; Defined at:
  9038 ;;		line 63 in file "internal_flash.c"
  9039 ;; Parameters:    Size  Location     Type
  9040 ;;  page            2    2[COMRAM] unsigned int 
  9041 ;; Auto vars:     Size  Location     Type
  9042 ;;  address         4    4[COMRAM] unsigned long 
  9043 ;;  cntr            2    8[COMRAM] unsigned int 
  9044 ;;  byte_cntr       1   11[COMRAM] unsigned char 
  9045 ;;  block_cntr      1   10[COMRAM] unsigned char 
  9046 ;;  i               1    0        unsigned char 
  9047 ;;  gie             1    0        unsigned char 
  9048 ;; Return value:  Size  Location     Type
  9049 ;;                  1    wreg      void 
  9050 ;; Registers used:
  9051 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  9052 ;; Tracked objects:
  9053 ;;		On entry : 0/0
  9054 ;;		On exit  : 0/0
  9055 ;;		Unchanged: 0/0
  9056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9058 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9060 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9061 ;;Total ram usage:       10 bytes
  9062 ;; Hardware stack levels used:    1
  9063 ;; Hardware stack levels required when called:    1
  9064 ;; This function calls:
  9065 ;;		__internalFlash_unlockAndActivate
  9066 ;; This function is called by:
  9067 ;;		__bootloader_program
  9068 ;; This function uses a non-reentrant model
  9069 ;;
  9070                           
  9071                           	psect	text34
  9072  0073FC                     __ptext34:
  9073                           	opt stack 0
  9074  0073FC                     _internalFlash_writePage:
  9075                           	opt stack 27
  9076                           
  9077                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
  9078                           
  9079                           ;incstack = 0
  9080  0073FC  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
  9081  007400  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
  9082  007404  6A07               	clrf	internalFlash_writePage@address+2,c
  9083  007406  6A08               	clrf	internalFlash_writePage@address+3,c
  9084                           
  9085                           ;internal_flash.c: 74: address <<= 10;
  9086  007408  0E0A               	movlw	10
  9087  00740A                     u11575:
  9088  00740A  90D8               	bcf	status,0,c
  9089  00740C  3605               	rlcf	internalFlash_writePage@address,f,c
  9090  00740E  3606               	rlcf	internalFlash_writePage@address+1,f,c
  9091  007410  3607               	rlcf	internalFlash_writePage@address+2,f,c
  9092  007412  3608               	rlcf	internalFlash_writePage@address+3,f,c
  9093  007414  2EE8               	decfsz	wreg,f,c
  9094  007416  D7F9               	goto	u11575
  9095                           
  9096                           ;internal_flash.c: 76: TBLPTR = address;
  9097  007418  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
  9098  00741C  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
  9099  007420  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
  9100                           
  9101                           ;internal_flash.c: 79: cntr = 0;
  9102  007424  0E00               	movlw	0
  9103  007426  6E0A               	movwf	internalFlash_writePage@cntr+1,c
  9104  007428  0E00               	movlw	0
  9105  00742A  6E09               	movwf	internalFlash_writePage@cntr,c
  9106                           
  9107                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
  9108  00742C  0E00               	movlw	0
  9109  00742E  6E0B               	movwf	internalFlash_writePage@block_cntr,c
  9110  007430                     l14483:
  9111  007430  0E0F               	movlw	15
  9112  007432  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
  9113  007434  D001               	goto	l2559
  9114  007436  0012               	return	
  9115  007438                     l2559:
  9116                           
  9117                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
  9118  007438  0E00               	movlw	0
  9119  00743A  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
  9120  00743C                     l14489:
  9121  00743C  0E3F               	movlw	63
  9122  00743E  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
  9123  007440  D001               	goto	l2561
  9124  007442  D00D               	goto	u11600
  9125  007444                     l2561:
  9126                           
  9127                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
  9128  007444  0E00               	movlw	low _pageBuffer
  9129  007446  2409               	addwf	internalFlash_writePage@cntr,w,c
  9130  007448  6ED9               	movwf	fsr2l,c
  9131  00744A  0E08               	movlw	high _pageBuffer
  9132  00744C  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
  9133  00744E  6EDA               	movwf	fsr2h,c
  9134  007450  50DF               	movf	indf2,w,c
  9135  007452  6EF5               	movwf	tablat,c	;volatile
  9136  007454  000D               	tblwt		*+	;# 
  9137                           
  9138                           ;internal_flash.c: 91: ++cntr;
  9139  007456  4A09               	infsnz	internalFlash_writePage@cntr,f,c
  9140  007458  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
  9141  00745A  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
  9142  00745C  D7EF               	goto	l14489
  9143  00745E                     u11600:
  9144  00745E  000A               	tblrd		*-	;# 
  9145                           
  9146                           ;internal_flash.c: 98: EECON1 = 0x84;
  9147  007460  0E84               	movlw	132
  9148  007462  6EA6               	movwf	4006,c	;volsfr
  9149                           
  9150                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9151  007464  0EB5               	movlw	181
  9152  007466  EC92  F045         	call	__internalFlash_unlockAndActivate
  9153                           
  9154                           ;internal_flash.c: 100: TBLPTR++;
  9155  00746A  0E01               	movlw	1
  9156  00746C  26F6               	addwf	tblptrl,f,c	;volatile
  9157  00746E  0E00               	movlw	0
  9158  007470  22F7               	addwfc	tblptrh,f,c	;volatile
  9159  007472  0E00               	movlw	0
  9160  007474  22F8               	addwfc	tblptru,f,c	;volatile
  9161  007476  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
  9162  007478  D7DB               	goto	l14483
  9163  00747A                     __end_of_internalFlash_writePage:
  9164                           	opt stack 0
  9165                           tblptru	equ	0xFF8
  9166                           tblptrh	equ	0xFF7
  9167                           tblptrl	equ	0xFF6
  9168                           tablat	equ	0xFF5
  9169                           prodh	equ	0xFF4
  9170                           prodl	equ	0xFF3
  9171                           intcon	equ	0xFF2
  9172                           intcon2	equ	0xFF1
  9173                           intcon3	equ	0xFF0
  9174                           postinc0	equ	0xFEE
  9175                           wreg	equ	0xFE8
  9176                           indf1	equ	0xFE7
  9177                           postdec1	equ	0xFE5
  9178                           plusw1	equ	0xFE3
  9179                           fsr1h	equ	0xFE2
  9180                           fsr1l	equ	0xFE1
  9181                           indf2	equ	0xFDF
  9182                           postinc2	equ	0xFDE
  9183                           postdec2	equ	0xFDD
  9184                           plusw2	equ	0xFDB
  9185                           fsr2h	equ	0xFDA
  9186                           fsr2l	equ	0xFD9
  9187                           status	equ	0xFD8
  9188                           
  9189 ;; *************** function _internalFlash_readPage *****************
  9190 ;; Defined at:
  9191 ;;		line 37 in file "internal_flash.c"
  9192 ;; Parameters:    Size  Location     Type
  9193 ;;  page            2   21[COMRAM] unsigned int 
  9194 ;; Auto vars:     Size  Location     Type
  9195 ;;  address         4   23[COMRAM] unsigned long 
  9196 ;; Return value:  Size  Location     Type
  9197 ;;                  1    wreg      void 
  9198 ;; Registers used:
  9199 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9200 ;; Tracked objects:
  9201 ;;		On entry : 0/0
  9202 ;;		On exit  : 0/0
  9203 ;;		Unchanged: 0/0
  9204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9205 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9206 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9208 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9209 ;;Total ram usage:        6 bytes
  9210 ;; Hardware stack levels used:    1
  9211 ;; Hardware stack levels required when called:    2
  9212 ;; This function calls:
  9213 ;;		_internalFlash_addressFromPage
  9214 ;;		_internalFlash_read
  9215 ;; This function is called by:
  9216 ;;		__bootloader_program
  9217 ;; This function uses a non-reentrant model
  9218 ;;
  9219                           
  9220                           	psect	text35
  9221  0084FC                     __ptext35:
  9222                           	opt stack 0
  9223  0084FC                     _internalFlash_readPage:
  9224                           	opt stack 26
  9225                           
  9226                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
  9227                           
  9228                           ;incstack = 0
  9229  0084FC  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
  9230  008500  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
  9231  008504  ECCA  F044         	call	_internalFlash_addressFromPage	;wreg free
  9232  008508  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
  9233  00850C  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
  9234  008510  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
  9235  008514  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
  9236                           
  9237                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
  9238  008518  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
  9239  00851C  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
  9240  008520  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
  9241  008524  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
  9242  008528  0E04               	movlw	4
  9243  00852A  6E13               	movwf	internalFlash_read@data_length+1,c
  9244  00852C  0E00               	movlw	0
  9245  00852E  6E12               	movwf	internalFlash_read@data_length,c
  9246  008530  0E00               	movlw	low _pageBuffer
  9247  008532  6E14               	movwf	internalFlash_read@buffer,c
  9248  008534  0E08               	movlw	high _pageBuffer
  9249  008536  6E15               	movwf	internalFlash_read@buffer+1,c
  9250  008538  ECB2  F043         	call	_internalFlash_read	;wreg free
  9251  00853C  0012               	return		;funcret
  9252  00853E                     __end_of_internalFlash_readPage:
  9253                           	opt stack 0
  9254                           tblptru	equ	0xFF8
  9255                           tblptrh	equ	0xFF7
  9256                           tblptrl	equ	0xFF6
  9257                           tablat	equ	0xFF5
  9258                           prodh	equ	0xFF4
  9259                           prodl	equ	0xFF3
  9260                           intcon	equ	0xFF2
  9261                           intcon2	equ	0xFF1
  9262                           intcon3	equ	0xFF0
  9263                           postinc0	equ	0xFEE
  9264                           wreg	equ	0xFE8
  9265                           indf1	equ	0xFE7
  9266                           postdec1	equ	0xFE5
  9267                           plusw1	equ	0xFE3
  9268                           fsr1h	equ	0xFE2
  9269                           fsr1l	equ	0xFE1
  9270                           indf2	equ	0xFDF
  9271                           postinc2	equ	0xFDE
  9272                           postdec2	equ	0xFDD
  9273                           plusw2	equ	0xFDB
  9274                           fsr2h	equ	0xFDA
  9275                           fsr2l	equ	0xFD9
  9276                           status	equ	0xFD8
  9277                           
  9278 ;; *************** function _internalFlash_read *****************
  9279 ;; Defined at:
  9280 ;;		line 144 in file "internal_flash.c"
  9281 ;; Parameters:    Size  Location     Type
  9282 ;;  address         4   13[COMRAM] unsigned long 
  9283 ;;  data_length     2   17[COMRAM] unsigned int 
  9284 ;;  buffer          2   19[COMRAM] PTR unsigned char 
  9285 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
  9286 ;; Auto vars:     Size  Location     Type
  9287 ;;		None
  9288 ;; Return value:  Size  Location     Type
  9289 ;;                  1    wreg      unsigned char 
  9290 ;; Registers used:
  9291 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9292 ;; Tracked objects:
  9293 ;;		On entry : 0/0
  9294 ;;		On exit  : 0/0
  9295 ;;		Unchanged: 0/0
  9296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9297 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;Total ram usage:        8 bytes
  9302 ;; Hardware stack levels used:    1
  9303 ;; Hardware stack levels required when called:    1
  9304 ;; This function calls:
  9305 ;;		_memcpy
  9306 ;; This function is called by:
  9307 ;;		_internalFlash_readPage
  9308 ;;		__bootloader_verify_program_memory
  9309 ;; This function uses a non-reentrant model
  9310 ;;
  9311                           
  9312                           	psect	text36
  9313  008764                     __ptext36:
  9314                           	opt stack 0
  9315  008764                     _internalFlash_read:
  9316                           	opt stack 26
  9317                           
  9318                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
  9319                           
  9320                           ;incstack = 0
  9321  008764  5011               	movf	internalFlash_read@address+3,w,c
  9322  008766  E118               	bnz	l2575
  9323  008768  280E               	incf	internalFlash_read@address,w,c
  9324  00876A  0EFF               	movlw	255
  9325  00876C  580F               	subwfb	internalFlash_read@address+1,w,c
  9326  00876E  0E01               	movlw	1
  9327  008770  5810               	subwfb	internalFlash_read@address+2,w,c
  9328  008772  B0D8               	btfsc	status,0,c
  9329  008774  0012               	return	
  9330                           
  9331                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
  9332                           
  9333                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
  9334  008776  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
  9335  00877A  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
  9336  00877E  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
  9337  008782  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
  9338  008786  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
  9339  00878A  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
  9340  00878E  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
  9341  008792  ECDD  F03C         	call	_memcpy	;wreg free
  9342  008796  0012               	return	
  9343  008798                     l2575:
  9344  008798  0012               	return		;funcret
  9345  00879A                     __end_of_internalFlash_read:
  9346                           	opt stack 0
  9347                           tblptru	equ	0xFF8
  9348                           tblptrh	equ	0xFF7
  9349                           tblptrl	equ	0xFF6
  9350                           tablat	equ	0xFF5
  9351                           prodh	equ	0xFF4
  9352                           prodl	equ	0xFF3
  9353                           intcon	equ	0xFF2
  9354                           intcon2	equ	0xFF1
  9355                           intcon3	equ	0xFF0
  9356                           postinc0	equ	0xFEE
  9357                           wreg	equ	0xFE8
  9358                           indf1	equ	0xFE7
  9359                           postdec1	equ	0xFE5
  9360                           plusw1	equ	0xFE3
  9361                           fsr1h	equ	0xFE2
  9362                           fsr1l	equ	0xFE1
  9363                           indf2	equ	0xFDF
  9364                           postinc2	equ	0xFDE
  9365                           postdec2	equ	0xFDD
  9366                           plusw2	equ	0xFDB
  9367                           fsr2h	equ	0xFDA
  9368                           fsr2l	equ	0xFD9
  9369                           status	equ	0xFD8
  9370                           
  9371 ;; *************** function _internalFlash_pageFromAddress *****************
  9372 ;; Defined at:
  9373 ;;		line 308 in file "internal_flash.c"
  9374 ;; Parameters:    Size  Location     Type
  9375 ;;  address         4    0[COMRAM] unsigned long 
  9376 ;; Auto vars:     Size  Location     Type
  9377 ;;		None
  9378 ;; Return value:  Size  Location     Type
  9379 ;;                  2    0[COMRAM] unsigned int 
  9380 ;; Registers used:
  9381 ;;		wreg, status,2, status,0
  9382 ;; Tracked objects:
  9383 ;;		On entry : 0/0
  9384 ;;		On exit  : 0/0
  9385 ;;		Unchanged: 0/0
  9386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9387 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9388 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9389 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9390 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9391 ;;Total ram usage:        5 bytes
  9392 ;; Hardware stack levels used:    1
  9393 ;; This function calls:
  9394 ;;		Nothing
  9395 ;; This function is called by:
  9396 ;;		__bootloader_program
  9397 ;; This function uses a non-reentrant model
  9398 ;;
  9399                           
  9400                           	psect	text37
  9401  008DD8                     __ptext37:
  9402                           	opt stack 0
  9403  008DD8                     _internalFlash_pageFromAddress:
  9404                           	opt stack 28
  9405                           
  9406                           ;internal_flash.c: 310: address >>= 10;
  9407                           
  9408                           ;incstack = 0
  9409  008DD8  0E0A               	movlw	10
  9410  008DDA  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
  9411  008DDC                     u11555:
  9412  008DDC  90D8               	bcf	status,0,c
  9413  008DDE  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
  9414  008DE0  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
  9415  008DE2  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
  9416  008DE4  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
  9417  008DE6  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
  9418  008DE8  D7F9               	goto	u11555
  9419                           
  9420                           ;internal_flash.c: 311: return (uint16_t) address;
  9421  008DEA  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
  9422  008DEE  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
  9423  008DF2  0012               	return	
  9424  008DF4                     __end_of_internalFlash_pageFromAddress:
  9425                           	opt stack 0
  9426                           tblptru	equ	0xFF8
  9427                           tblptrh	equ	0xFF7
  9428                           tblptrl	equ	0xFF6
  9429                           tablat	equ	0xFF5
  9430                           prodh	equ	0xFF4
  9431                           prodl	equ	0xFF3
  9432                           intcon	equ	0xFF2
  9433                           intcon2	equ	0xFF1
  9434                           intcon3	equ	0xFF0
  9435                           postinc0	equ	0xFEE
  9436                           wreg	equ	0xFE8
  9437                           indf1	equ	0xFE7
  9438                           postdec1	equ	0xFE5
  9439                           plusw1	equ	0xFE3
  9440                           fsr1h	equ	0xFE2
  9441                           fsr1l	equ	0xFE1
  9442                           indf2	equ	0xFDF
  9443                           postinc2	equ	0xFDE
  9444                           postdec2	equ	0xFDD
  9445                           plusw2	equ	0xFDB
  9446                           fsr2h	equ	0xFDA
  9447                           fsr2l	equ	0xFD9
  9448                           status	equ	0xFD8
  9449                           
  9450 ;; *************** function _internalFlash_getBuffer *****************
  9451 ;; Defined at:
  9452 ;;		line 32 in file "internal_flash.c"
  9453 ;; Parameters:    Size  Location     Type
  9454 ;;		None
  9455 ;; Auto vars:     Size  Location     Type
  9456 ;;		None
  9457 ;; Return value:  Size  Location     Type
  9458 ;;                  2    0[COMRAM] PTR unsigned char 
  9459 ;; Registers used:
  9460 ;;		wreg, status,2, status,0
  9461 ;; Tracked objects:
  9462 ;;		On entry : 0/0
  9463 ;;		On exit  : 0/0
  9464 ;;		Unchanged: 0/0
  9465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9466 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9467 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9468 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9469 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9470 ;;Total ram usage:        2 bytes
  9471 ;; Hardware stack levels used:    1
  9472 ;; This function calls:
  9473 ;;		Nothing
  9474 ;; This function is called by:
  9475 ;;		__bootloader_program
  9476 ;; This function uses a non-reentrant model
  9477 ;;
  9478                           
  9479                           	psect	text38
  9480  008F94                     __ptext38:
  9481                           	opt stack 0
  9482  008F94                     _internalFlash_getBuffer:
  9483                           	opt stack 28
  9484                           
  9485                           ;internal_flash.c: 34: return pageBuffer;
  9486                           
  9487                           ;incstack = 0
  9488  008F94  0E00               	movlw	low _pageBuffer
  9489  008F96  6E01               	movwf	?_internalFlash_getBuffer,c
  9490  008F98  0E08               	movlw	high _pageBuffer
  9491  008F9A  6E02               	movwf	?_internalFlash_getBuffer+1,c
  9492  008F9C  0012               	return	
  9493  008F9E                     __end_of_internalFlash_getBuffer:
  9494                           	opt stack 0
  9495                           tblptru	equ	0xFF8
  9496                           tblptrh	equ	0xFF7
  9497                           tblptrl	equ	0xFF6
  9498                           tablat	equ	0xFF5
  9499                           prodh	equ	0xFF4
  9500                           prodl	equ	0xFF3
  9501                           intcon	equ	0xFF2
  9502                           intcon2	equ	0xFF1
  9503                           intcon3	equ	0xFF0
  9504                           postinc0	equ	0xFEE
  9505                           wreg	equ	0xFE8
  9506                           indf1	equ	0xFE7
  9507                           postdec1	equ	0xFE5
  9508                           plusw1	equ	0xFE3
  9509                           fsr1h	equ	0xFE2
  9510                           fsr1l	equ	0xFE1
  9511                           indf2	equ	0xFDF
  9512                           postinc2	equ	0xFDE
  9513                           postdec2	equ	0xFDD
  9514                           plusw2	equ	0xFDB
  9515                           fsr2h	equ	0xFDA
  9516                           fsr2l	equ	0xFD9
  9517                           status	equ	0xFD8
  9518                           
  9519 ;; *************** function _internalFlash_erasePage *****************
  9520 ;; Defined at:
  9521 ;;		line 44 in file "internal_flash.c"
  9522 ;; Parameters:    Size  Location     Type
  9523 ;;  page            2    2[COMRAM] unsigned int 
  9524 ;; Auto vars:     Size  Location     Type
  9525 ;;  address         4    4[COMRAM] unsigned long 
  9526 ;; Return value:  Size  Location     Type
  9527 ;;                  1    wreg      void 
  9528 ;; Registers used:
  9529 ;;		wreg, status,2, status,0, cstack
  9530 ;; Tracked objects:
  9531 ;;		On entry : 0/0
  9532 ;;		On exit  : 0/0
  9533 ;;		Unchanged: 0/0
  9534 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9535 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9536 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9537 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9538 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9539 ;;Total ram usage:        6 bytes
  9540 ;; Hardware stack levels used:    1
  9541 ;; Hardware stack levels required when called:    1
  9542 ;; This function calls:
  9543 ;;		__internalFlash_unlockAndActivate
  9544 ;; This function is called by:
  9545 ;;		__bootloader_program
  9546 ;; This function uses a non-reentrant model
  9547 ;;
  9548                           
  9549                           	psect	text39
  9550  0087CE                     __ptext39:
  9551                           	opt stack 0
  9552  0087CE                     _internalFlash_erasePage:
  9553                           	opt stack 27
  9554                           
  9555                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
  9556                           
  9557                           ;incstack = 0
  9558  0087CE  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
  9559  0087D2  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
  9560  0087D6  6A07               	clrf	internalFlash_erasePage@address+2,c
  9561  0087D8  6A08               	clrf	internalFlash_erasePage@address+3,c
  9562                           
  9563                           ;internal_flash.c: 50: address <<= 10;
  9564  0087DA  0E0A               	movlw	10
  9565  0087DC                     u11565:
  9566  0087DC  90D8               	bcf	status,0,c
  9567  0087DE  3605               	rlcf	internalFlash_erasePage@address,f,c
  9568  0087E0  3606               	rlcf	internalFlash_erasePage@address+1,f,c
  9569  0087E2  3607               	rlcf	internalFlash_erasePage@address+2,f,c
  9570  0087E4  3608               	rlcf	internalFlash_erasePage@address+3,f,c
  9571  0087E6  2EE8               	decfsz	wreg,f,c
  9572  0087E8  D7F9               	goto	u11565
  9573                           
  9574                           ;internal_flash.c: 51: TBLPTR = address;
  9575  0087EA  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
  9576  0087EE  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
  9577  0087F2  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
  9578                           
  9579                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
  9580  0087F6  84A6               	bsf	4006,2,c	;volsfr
  9581                           
  9582                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
  9583  0087F8  88A6               	bsf	4006,4,c	;volsfr
  9584                           
  9585                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
  9586  0087FA  0EB5               	movlw	181
  9587  0087FC  EC92  F045         	call	__internalFlash_unlockAndActivate
  9588  008800  0012               	return		;funcret
  9589  008802                     __end_of_internalFlash_erasePage:
  9590                           	opt stack 0
  9591                           tblptru	equ	0xFF8
  9592                           tblptrh	equ	0xFF7
  9593                           tblptrl	equ	0xFF6
  9594                           tablat	equ	0xFF5
  9595                           prodh	equ	0xFF4
  9596                           prodl	equ	0xFF3
  9597                           intcon	equ	0xFF2
  9598                           intcon2	equ	0xFF1
  9599                           intcon3	equ	0xFF0
  9600                           postinc0	equ	0xFEE
  9601                           wreg	equ	0xFE8
  9602                           indf1	equ	0xFE7
  9603                           postdec1	equ	0xFE5
  9604                           plusw1	equ	0xFE3
  9605                           fsr1h	equ	0xFE2
  9606                           fsr1l	equ	0xFE1
  9607                           indf2	equ	0xFDF
  9608                           postinc2	equ	0xFDE
  9609                           postdec2	equ	0xFDD
  9610                           plusw2	equ	0xFDB
  9611                           fsr2h	equ	0xFDA
  9612                           fsr2l	equ	0xFD9
  9613                           status	equ	0xFD8
  9614                           
  9615 ;; *************** function __internalFlash_unlockAndActivate *****************
  9616 ;; Defined at:
  9617 ;;		line 106 in file "internal_flash.c"
  9618 ;; Parameters:    Size  Location     Type
  9619 ;;  UnlockKey       1    wreg     unsigned char 
  9620 ;; Auto vars:     Size  Location     Type
  9621 ;;  UnlockKey       1    0[COMRAM] unsigned char 
  9622 ;;  InterruptEna    1    1[COMRAM] unsigned char 
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  1    wreg      void 
  9625 ;; Registers used:
  9626 ;;		wreg, status,2, status,0
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9632 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9633 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9634 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;Total ram usage:        2 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; This function calls:
  9639 ;;		Nothing
  9640 ;; This function is called by:
  9641 ;;		_internalFlash_erasePage
  9642 ;;		_internalFlash_writePage
  9643 ;;		_EraseBlock
  9644 ;; This function uses a non-reentrant model
  9645 ;;
  9646                           
  9647                           	psect	text40
  9648  008B24                     __ptext40:
  9649                           	opt stack 0
  9650  008B24                     __internalFlash_unlockAndActivate:
  9651                           	opt stack 27
  9652                           
  9653                           ;incstack = 0
  9654                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
  9655  008B24  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
  9656                           
  9657                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
  9658  008B26  0EB5               	movlw	181
  9659  008B28  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
  9660  008B2A  B4D8               	btfsc	status,2,c
  9661  008B2C  D002               	goto	l2566
  9662                           
  9663                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
  9664  008B2E  94A6               	bcf	4006,2,c	;volsfr
  9665                           
  9666                           ;internal_flash.c: 118: return;
  9667  008B30  0012               	return	
  9668  008B32                     l2566:
  9669                           
  9670                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
  9671  008B32  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
  9672                           
  9673                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
  9674  008B36  9EF2               	bcf	intcon,7,c	;volatile
  9675                           
  9676                           ;internal_flash.c: 123: EECON2 = 0x55;
  9677  008B38  0E55               	movlw	85
  9678  008B3A  6EA7               	movwf	4007,c	;volsfr
  9679                           
  9680                           ;internal_flash.c: 124: EECON2 = 0xAA;
  9681  008B3C  0EAA               	movlw	170
  9682  008B3E  6EA7               	movwf	4007,c	;volsfr
  9683                           
  9684                           ;internal_flash.c: 125: EECON1bits.WR = 1;
  9685  008B40  82A6               	bsf	4006,1,c	;volsfr
  9686                           
  9687                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
  9688  008B42  94A6               	bcf	4006,2,c	;volsfr
  9689                           
  9690                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
  9691  008B44  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
  9692  008B46  0012               	return	
  9693                           
  9694                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
  9695  008B48  8EF2               	bsf	intcon,7,c	;volatile
  9696  008B4A  0012               	return	
  9697  008B4C                     __end_of__internalFlash_unlockAndActivate:
  9698                           	opt stack 0
  9699                           tblptru	equ	0xFF8
  9700                           tblptrh	equ	0xFF7
  9701                           tblptrl	equ	0xFF6
  9702                           tablat	equ	0xFF5
  9703                           prodh	equ	0xFF4
  9704                           prodl	equ	0xFF3
  9705                           intcon	equ	0xFF2
  9706                           intcon2	equ	0xFF1
  9707                           intcon3	equ	0xFF0
  9708                           postinc0	equ	0xFEE
  9709                           wreg	equ	0xFE8
  9710                           indf1	equ	0xFE7
  9711                           postdec1	equ	0xFE5
  9712                           plusw1	equ	0xFE3
  9713                           fsr1h	equ	0xFE2
  9714                           fsr1l	equ	0xFE1
  9715                           indf2	equ	0xFDF
  9716                           postinc2	equ	0xFDE
  9717                           postdec2	equ	0xFDD
  9718                           plusw2	equ	0xFDB
  9719                           fsr2h	equ	0xFDA
  9720                           fsr2l	equ	0xFD9
  9721                           status	equ	0xFD8
  9722                           
  9723 ;; *************** function _internalFlash_addressWithinPage *****************
  9724 ;; Defined at:
  9725 ;;		line 322 in file "internal_flash.c"
  9726 ;; Parameters:    Size  Location     Type
  9727 ;;  address         4    8[COMRAM] unsigned long 
  9728 ;;  page            2   12[COMRAM] unsigned int 
  9729 ;; Auto vars:     Size  Location     Type
  9730 ;;  page_start_a    4   18[COMRAM] unsigned long 
  9731 ;; Return value:  Size  Location     Type
  9732 ;;                  2    8[COMRAM] unsigned int 
  9733 ;; Registers used:
  9734 ;;		wreg, status,2, status,0, cstack
  9735 ;; Tracked objects:
  9736 ;;		On entry : 0/0
  9737 ;;		On exit  : 0/0
  9738 ;;		Unchanged: 0/0
  9739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9740 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9741 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9742 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9743 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9744 ;;Total ram usage:       14 bytes
  9745 ;; Hardware stack levels used:    1
  9746 ;; Hardware stack levels required when called:    1
  9747 ;; This function calls:
  9748 ;;		_internalFlash_addressFromPage
  9749 ;; This function is called by:
  9750 ;;		__bootloader_program
  9751 ;; This function uses a non-reentrant model
  9752 ;;
  9753                           
  9754                           	psect	text41
  9755  007BA8                     __ptext41:
  9756                           	opt stack 0
  9757  007BA8                     _internalFlash_addressWithinPage:
  9758                           	opt stack 27
  9759                           
  9760                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
  9761                           
  9762                           ;incstack = 0
  9763  007BA8  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
  9764  007BAC  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
  9765  007BB0  ECCA  F044         	call	_internalFlash_addressFromPage	;wreg free
  9766  007BB4  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
  9767  007BB8  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
  9768  007BBC  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
  9769  007BC0  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
  9770                           
  9771                           ;internal_flash.c: 326: address = address - page_start_address;
  9772  007BC4  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
  9773  007BC8  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
  9774  007BCC  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
  9775  007BD0  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
  9776  007BD4  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
  9777  007BD6  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
  9778  007BD8  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
  9779  007BDA  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
  9780  007BDC  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
  9781  007BDE  0E00               	movlw	0
  9782  007BE0  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
  9783  007BE2  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
  9784  007BE4  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
  9785  007BE6  5009               	movf	internalFlash_addressWithinPage@address,w,c
  9786  007BE8  240F               	addwf	??_internalFlash_addressWithinPage,w,c
  9787  007BEA  6E09               	movwf	internalFlash_addressWithinPage@address,c
  9788  007BEC  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
  9789  007BEE  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
  9790  007BF0  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
  9791  007BF2  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
  9792  007BF4  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
  9793  007BF6  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
  9794  007BF8  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
  9795  007BFA  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
  9796  007BFC  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
  9797                           
  9798                           ;internal_flash.c: 327: return (uint16_t) address;
  9799  007BFE  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
  9800  007C02  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
  9801  007C06  0012               	return	
  9802  007C08                     __end_of_internalFlash_addressWithinPage:
  9803                           	opt stack 0
  9804                           tblptru	equ	0xFF8
  9805                           tblptrh	equ	0xFF7
  9806                           tblptrl	equ	0xFF6
  9807                           tablat	equ	0xFF5
  9808                           prodh	equ	0xFF4
  9809                           prodl	equ	0xFF3
  9810                           intcon	equ	0xFF2
  9811                           intcon2	equ	0xFF1
  9812                           intcon3	equ	0xFF0
  9813                           postinc0	equ	0xFEE
  9814                           wreg	equ	0xFE8
  9815                           indf1	equ	0xFE7
  9816                           postdec1	equ	0xFE5
  9817                           plusw1	equ	0xFE3
  9818                           fsr1h	equ	0xFE2
  9819                           fsr1l	equ	0xFE1
  9820                           indf2	equ	0xFDF
  9821                           postinc2	equ	0xFDE
  9822                           postdec2	equ	0xFDD
  9823                           plusw2	equ	0xFDB
  9824                           fsr2h	equ	0xFDA
  9825                           fsr2l	equ	0xFD9
  9826                           status	equ	0xFD8
  9827                           
  9828 ;; *************** function _internalFlash_addressFromPage *****************
  9829 ;; Defined at:
  9830 ;;		line 314 in file "internal_flash.c"
  9831 ;; Parameters:    Size  Location     Type
  9832 ;;  page            2    0[COMRAM] unsigned int 
  9833 ;; Auto vars:     Size  Location     Type
  9834 ;;  address         4    4[COMRAM] unsigned long 
  9835 ;; Return value:  Size  Location     Type
  9836 ;;                  4    0[COMRAM] unsigned long 
  9837 ;; Registers used:
  9838 ;;		wreg, status,2, status,0
  9839 ;; Tracked objects:
  9840 ;;		On entry : 0/0
  9841 ;;		On exit  : 0/0
  9842 ;;		Unchanged: 0/0
  9843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9845 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9847 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9848 ;;Total ram usage:        8 bytes
  9849 ;; Hardware stack levels used:    1
  9850 ;; This function calls:
  9851 ;;		Nothing
  9852 ;; This function is called by:
  9853 ;;		_internalFlash_readPage
  9854 ;;		_internalFlash_addressWithinPage
  9855 ;; This function uses a non-reentrant model
  9856 ;;
  9857                           
  9858                           	psect	text42
  9859  008994                     __ptext42:
  9860                           	opt stack 0
  9861  008994                     _internalFlash_addressFromPage:
  9862                           	opt stack 27
  9863                           
  9864                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
  9865                           
  9866                           ;incstack = 0
  9867  008994  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
  9868  008998  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
  9869  00899C  6A07               	clrf	internalFlash_addressFromPage@address+2,c
  9870  00899E  6A08               	clrf	internalFlash_addressFromPage@address+3,c
  9871                           
  9872                           ;internal_flash.c: 318: address <<= 10;
  9873  0089A0  0E0A               	movlw	10
  9874  0089A2                     u10795:
  9875  0089A2  90D8               	bcf	status,0,c
  9876  0089A4  3605               	rlcf	internalFlash_addressFromPage@address,f,c
  9877  0089A6  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
  9878  0089A8  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
  9879  0089AA  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
  9880  0089AC  2EE8               	decfsz	wreg,f,c
  9881  0089AE  D7F9               	goto	u10795
  9882                           
  9883                           ;internal_flash.c: 319: return address;
  9884  0089B0  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
  9885  0089B4  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
  9886  0089B8  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
  9887  0089BC  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
  9888  0089C0  0012               	return	
  9889  0089C2                     __end_of_internalFlash_addressFromPage:
  9890                           	opt stack 0
  9891                           tblptru	equ	0xFF8
  9892                           tblptrh	equ	0xFF7
  9893                           tblptrl	equ	0xFF6
  9894                           tablat	equ	0xFF5
  9895                           prodh	equ	0xFF4
  9896                           prodl	equ	0xFF3
  9897                           intcon	equ	0xFF2
  9898                           intcon2	equ	0xFF1
  9899                           intcon3	equ	0xFF0
  9900                           postinc0	equ	0xFEE
  9901                           wreg	equ	0xFE8
  9902                           indf1	equ	0xFE7
  9903                           postdec1	equ	0xFE5
  9904                           plusw1	equ	0xFE3
  9905                           fsr1h	equ	0xFE2
  9906                           fsr1l	equ	0xFE1
  9907                           indf2	equ	0xFDF
  9908                           postinc2	equ	0xFDE
  9909                           postdec2	equ	0xFDD
  9910                           plusw2	equ	0xFDB
  9911                           fsr2h	equ	0xFDA
  9912                           fsr2l	equ	0xFD9
  9913                           status	equ	0xFD8
  9914                           
  9915 ;; *************** function __bootloader_check_address *****************
  9916 ;; Defined at:
  9917 ;;		line 109 in file "bootloader.c"
  9918 ;; Parameters:    Size  Location     Type
  9919 ;;  address         4    0[COMRAM] unsigned long 
  9920 ;;  dataLength      1    4[COMRAM] unsigned char 
  9921 ;; Auto vars:     Size  Location     Type
  9922 ;;  cntr            1   11[COMRAM] unsigned char 
  9923 ;;  byte_status     1   10[COMRAM] enum E6963
  9924 ;;  worst_case      1    9[COMRAM] enum E6963
  9925 ;; Return value:  Size  Location     Type
  9926 ;;                  1    wreg      enum E6963
  9927 ;; Registers used:
  9928 ;;		wreg, status,2, status,0
  9929 ;; Tracked objects:
  9930 ;;		On entry : 0/0
  9931 ;;		On exit  : 0/0
  9932 ;;		Unchanged: 0/0
  9933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9934 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9935 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9936 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9937 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9938 ;;Total ram usage:       12 bytes
  9939 ;; Hardware stack levels used:    1
  9940 ;; This function calls:
  9941 ;;		Nothing
  9942 ;; This function is called by:
  9943 ;;		__bootloader_verify_file
  9944 ;;		__bootloader_program
  9945 ;; This function uses a non-reentrant model
  9946 ;;
  9947                           
  9948                           	psect	text43
  9949  0059A2                     __ptext43:
  9950                           	opt stack 0
  9951  0059A2                     __bootloader_check_address:
  9952                           	opt stack 28
  9953                           
  9954                           ;bootloader.c: 111: addressCheckResult_t byte_status;;bootloader.c: 112: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 113: uint8_t cntr;;bootloader.c: 115: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
  9955                           
  9956                           ;incstack = 0
  9957  0059A2  0E00               	movlw	0
  9958  0059A4  6E0A               	movwf	__bootloader_check_address@worst_case,c
  9959                           
  9960                           ;bootloader.c: 118: for(cntr=0; cntr<dataLength; ++cntr)
  9961  0059A6  0E00               	movlw	0
  9962  0059A8  6E0C               	movwf	__bootloader_check_address@cntr,c
  9963  0059AA  D062               	goto	l2426
  9964  0059AC                     
  9965                           ;bootloader.c: 119: {;bootloader.c: 121: if(((address+cntr)>=0x0A000) && ((address+cntr)
      +                          <=0x1FFF7))
  9966  0059AC  500C               	movf	__bootloader_check_address@cntr,w,c
  9967  0059AE  2401               	addwf	__bootloader_check_address@address,w,c
  9968  0059B0  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9969  0059B2  0E00               	movlw	0
  9970  0059B4  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9971  0059B6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9972  0059B8  0E00               	movlw	0
  9973  0059BA  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9974  0059BC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9975  0059BE  0E00               	movlw	0
  9976  0059C0  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9977  0059C2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9978  0059C4  5009               	movf	??__bootloader_check_address+3,w,c
  9979  0059C6  1008               	iorwf	??__bootloader_check_address+2,w,c
  9980  0059C8  E104               	bnz	u11480
  9981  0059CA  0EA0               	movlw	160
  9982  0059CC  5C07               	subwf	??__bootloader_check_address+1,w,c
  9983  0059CE  A0D8               	btfss	status,0,c
  9984  0059D0  D018               	goto	l2428
  9985  0059D2                     u11480:
  9986  0059D2  500C               	movf	__bootloader_check_address@cntr,w,c
  9987  0059D4  2401               	addwf	__bootloader_check_address@address,w,c
  9988  0059D6  6E06               	movwf	??__bootloader_check_address& (0+255),c
  9989  0059D8  0E00               	movlw	0
  9990  0059DA  2002               	addwfc	__bootloader_check_address@address+1,w,c
  9991  0059DC  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
  9992  0059DE  0E00               	movlw	0
  9993  0059E0  2003               	addwfc	__bootloader_check_address@address+2,w,c
  9994  0059E2  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
  9995  0059E4  0E00               	movlw	0
  9996  0059E6  2004               	addwfc	__bootloader_check_address@address+3,w,c
  9997  0059E8  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
  9998  0059EA  5009               	movf	??__bootloader_check_address+3,w,c
  9999  0059EC  E10A               	bnz	l14415
 10000  0059EE  0EF8               	movlw	248
 10001  0059F0  5C06               	subwf	??__bootloader_check_address,w,c
 10002  0059F2  0EFF               	movlw	255
 10003  0059F4  5807               	subwfb	??__bootloader_check_address+1,w,c
 10004  0059F6  0E01               	movlw	1
 10005  0059F8  5808               	subwfb	??__bootloader_check_address+2,w,c
 10006  0059FA  B0D8               	btfsc	status,0,c
 10007  0059FC  D002               	goto	l2428
 10008                           
 10009                           ;bootloader.c: 122: {;bootloader.c: 123: byte_status = ADDRESS_CHECK_RESULT_OK;
 10010  0059FE  0E00               	movlw	0
 10011  005A00  D029               	goto	L4
 10012  005A02                     l2428:
 10013  005A02                     l14415:
 10014                           
 10015                           ;bootloader.c: 127: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 10016  005A02  500C               	movf	__bootloader_check_address@cntr,w,c
 10017  005A04  2401               	addwf	__bootloader_check_address@address,w,c
 10018  005A06  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10019  005A08  0E00               	movlw	0
 10020  005A0A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10021  005A0C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10022  005A0E  0E00               	movlw	0
 10023  005A10  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10024  005A12  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10025  005A14  0E00               	movlw	0
 10026  005A16  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10027  005A18  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10028  005A1A  5009               	movf	??__bootloader_check_address+3,w,c
 10029  005A1C  E108               	bnz	u11500
 10030  005A1E  0EF8               	movlw	248
 10031  005A20  5C06               	subwf	??__bootloader_check_address,w,c
 10032  005A22  0EFF               	movlw	255
 10033  005A24  5807               	subwfb	??__bootloader_check_address+1,w,c
 10034  005A26  0E01               	movlw	1
 10035  005A28  5808               	subwfb	??__bootloader_check_address+2,w,c
 10036  005A2A  A0D8               	btfss	status,0,c
 10037  005A2C  D015               	goto	l2430
 10038  005A2E                     u11500:
 10039  005A2E  500C               	movf	__bootloader_check_address@cntr,w,c
 10040  005A30  2401               	addwf	__bootloader_check_address@address,w,c
 10041  005A32  6E06               	movwf	??__bootloader_check_address& (0+255),c
 10042  005A34  0E00               	movlw	0
 10043  005A36  2002               	addwfc	__bootloader_check_address@address+1,w,c
 10044  005A38  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 10045  005A3A  0E00               	movlw	0
 10046  005A3C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 10047  005A3E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 10048  005A40  0E00               	movlw	0
 10049  005A42  2004               	addwfc	__bootloader_check_address@address+3,w,c
 10050  005A44  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 10051  005A46  5009               	movf	??__bootloader_check_address+3,w,c
 10052  005A48  E107               	bnz	l2430
 10053  005A4A  0E02               	movlw	2
 10054  005A4C  5C08               	subwf	??__bootloader_check_address+2,w,c
 10055  005A4E  B0D8               	btfsc	status,0,c
 10056  005A50  D003               	goto	l2430
 10057                           
 10058                           ;bootloader.c: 128: {;bootloader.c: 129: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 10059  005A52  0E01               	movlw	1
 10060  005A54                     L4:
 10061  005A54  6E0B               	movwf	__bootloader_check_address@byte_status,c
 10062                           
 10063                           ;bootloader.c: 130: }
 10064  005A56  D001               	goto	l2431
 10065  005A58                     l2430:
 10066                           
 10067                           ;bootloader.c: 131: else;bootloader.c: 132: {;bootloader.c: 133: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 10068  005A58  680B               	setf	__bootloader_check_address@byte_status,c
 10069  005A5A                     l2431:
 10070                           
 10071                           ;bootloader.c: 134: };bootloader.c: 137: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 10072  005A5A  280B               	incf	__bootloader_check_address@byte_status,w,c
 10073  005A5C  A4D8               	btfss	status,2,c
 10074  005A5E  D002               	goto	l2432
 10075                           
 10076                           ;bootloader.c: 138: {;bootloader.c: 139: return ADDRESS_CHECK_RESULT_ERROR;
 10077  005A60  0EFF               	movlw	255
 10078  005A62  0012               	return	
 10079  005A64                     l2432:
 10080                           
 10081                           ;bootloader.c: 140: };bootloader.c: 143: if(byte_status > worst_case)
 10082  005A64  500B               	movf	__bootloader_check_address@byte_status,w,c
 10083  005A66  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 10084  005A68  A0D8               	btfss	status,0,c
 10085                           
 10086                           ;bootloader.c: 144: {;bootloader.c: 145: worst_case = byte_status;
 10087  005A6A  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 10088  005A6E  2A0C               	incf	__bootloader_check_address@cntr,f,c
 10089  005A70                     l2426:
 10090  005A70  5005               	movf	__bootloader_check_address@dataLength,w,c
 10091  005A72  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 10092  005A74  A0D8               	btfss	status,0,c
 10093  005A76  D79A               	goto	l2427
 10094                           
 10095                           ;bootloader.c: 146: };bootloader.c: 147: };bootloader.c: 149: return worst_case;
 10096  005A78  500A               	movf	__bootloader_check_address@worst_case,w,c
 10097  005A7A  0012               	return	
 10098  005A7C                     __end_of__bootloader_check_address:
 10099                           	opt stack 0
 10100                           tblptru	equ	0xFF8
 10101                           tblptrh	equ	0xFF7
 10102                           tblptrl	equ	0xFF6
 10103                           tablat	equ	0xFF5
 10104                           prodh	equ	0xFF4
 10105                           prodl	equ	0xFF3
 10106                           intcon	equ	0xFF2
 10107                           intcon2	equ	0xFF1
 10108                           intcon3	equ	0xFF0
 10109                           postinc0	equ	0xFEE
 10110                           wreg	equ	0xFE8
 10111                           indf1	equ	0xFE7
 10112                           postdec1	equ	0xFE5
 10113                           plusw1	equ	0xFE3
 10114                           fsr1h	equ	0xFE2
 10115                           fsr1l	equ	0xFE1
 10116                           indf2	equ	0xFDF
 10117                           postinc2	equ	0xFDE
 10118                           postdec2	equ	0xFDD
 10119                           plusw2	equ	0xFDB
 10120                           fsr2h	equ	0xFDA
 10121                           fsr2l	equ	0xFD9
 10122                           status	equ	0xFD8
 10123                           
 10124 ;; *************** function __bootloader_find_file *****************
 10125 ;; Defined at:
 10126 ;;		line 152 in file "bootloader.c"
 10127 ;; Parameters:    Size  Location     Type
 10128 ;;		None
 10129 ;; Auto vars:     Size  Location     Type
 10130 ;;		None
 10131 ;; Return value:  Size  Location     Type
 10132 ;;                  1    wreg      void 
 10133 ;; Registers used:
 10134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10135 ;; Tracked objects:
 10136 ;;		On entry : 0/0
 10137 ;;		On exit  : 0/0
 10138 ;;		Unchanged: 0/0
 10139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10140 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10141 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10143 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10144 ;;Total ram usage:        0 bytes
 10145 ;; Hardware stack levels used:    1
 10146 ;; Hardware stack levels required when called:    7
 10147 ;; This function calls:
 10148 ;;		_fat_find_file
 10149 ;;		_fat_get_file_size
 10150 ;; This function is called by:
 10151 ;;		_bootloader_run
 10152 ;; This function uses a non-reentrant model
 10153 ;;
 10154                           
 10155                           	psect	text44
 10156  006870                     __ptext44:
 10157                           	opt stack 0
 10158  006870                     __bootloader_find_file:
 10159                           	opt stack 22
 10160                           
 10161                           ;bootloader.c: 155: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 10162                           
 10163                           ;incstack = 0
 10164  006870  0EB7               	movlw	low _bootloader_filename
 10165  006872  6E2C               	movwf	fat_find_file@name,c
 10166  006874  0E9F               	movlw	high _bootloader_filename
 10167  006876  6E2D               	movwf	fat_find_file@name+1,c
 10168  006878  0EC8               	movlw	low _bootloader_extension
 10169  00687A  6E2E               	movwf	fat_find_file@extension,c
 10170  00687C  0E9F               	movlw	high _bootloader_extension
 10171  00687E  6E2F               	movwf	fat_find_file@extension+1,c
 10172  006880  EC61  F02C         	call	_fat_find_file	;wreg free
 10173  006884  0100               	movlb	0	; () banked
 10174  006886  6FFF               	movwf	_file_number& (0+255),b
 10175                           
 10176                           ; BSR set to: 0
 10177                           ;bootloader.c: 158: if(file_number!=0xFF)
 10178  006888  29FF               	incf	_file_number& (0+255),w,b
 10179  00688A  B4D8               	btfsc	status,2,c
 10180  00688C  D034               	goto	l2438
 10181                           
 10182                           ; BSR set to: 0
 10183                           ;bootloader.c: 159: {;bootloader.c: 161: hex_file_size = fat_get_file_size(file_number);
 10184  00688E  51FF               	movf	_file_number& (0+255),w,b
 10185  006890  EC0B  F03C         	call	_fat_get_file_size
 10186  006894  C036  F14A         	movff	?_fat_get_file_size,_hex_file_size
 10187  006898  C037  F14B         	movff	?_fat_get_file_size+1,_hex_file_size+1
 10188  00689C  C038  F14C         	movff	?_fat_get_file_size+2,_hex_file_size+2
 10189  0068A0  C039  F14D         	movff	?_fat_get_file_size+3,_hex_file_size+3
 10190                           
 10191                           ;bootloader.c: 163: hex_file_entries = 0;
 10192  0068A4  0E00               	movlw	0
 10193  0068A6  0101               	movlb	1	; () banked
 10194  0068A8  6F79               	movwf	(_hex_file_entries+1)& (0+255),b
 10195  0068AA  0E00               	movlw	0
 10196  0068AC  6F78               	movwf	_hex_file_entries& (0+255),b
 10197                           
 10198                           ; BSR set to: 1
 10199                           ;bootloader.c: 164: hex_file_offset = 0;
 10200  0068AE  0E00               	movlw	0
 10201  0068B0  0100               	movlb	0	; () banked
 10202  0068B2  6FD7               	movwf	_hex_file_offset& (0+255),b
 10203  0068B4  0E00               	movlw	0
 10204  0068B6  6FD8               	movwf	(_hex_file_offset+1)& (0+255),b
 10205  0068B8  0E00               	movlw	0
 10206  0068BA  6FD9               	movwf	(_hex_file_offset+2)& (0+255),b
 10207  0068BC  0E00               	movlw	0
 10208  0068BE  6FDA               	movwf	(_hex_file_offset+3)& (0+255),b
 10209                           
 10210                           ; BSR set to: 0
 10211                           ;bootloader.c: 165: file_minimum_address = 0xFFFFFFFF;
 10212  0068C0  0101               	movlb	1	; () banked
 10213  0068C2  6952               	setf	_file_minimum_address& (0+255),b
 10214  0068C4  6953               	setf	(_file_minimum_address+1)& (0+255),b
 10215  0068C6  6954               	setf	(_file_minimum_address+2)& (0+255),b
 10216  0068C8  6955               	setf	(_file_minimum_address+3)& (0+255),b
 10217                           
 10218                           ; BSR set to: 1
 10219                           ;bootloader.c: 166: file_maximum_address = 0x00000000;
 10220  0068CA  0E00               	movlw	0
 10221  0068CC  6F4E               	movwf	_file_maximum_address& (0+255),b
 10222  0068CE  0E00               	movlw	0
 10223  0068D0  6F4F               	movwf	(_file_maximum_address+1)& (0+255),b
 10224  0068D2  0E00               	movlw	0
 10225  0068D4  6F50               	movwf	(_file_maximum_address+2)& (0+255),b
 10226  0068D6  0E00               	movlw	0
 10227  0068D8  6F51               	movwf	(_file_maximum_address+3)& (0+255),b
 10228                           
 10229                           ; BSR set to: 1
 10230                           ;bootloader.c: 167: extended_linear_address = 0x00000000;
 10231  0068DA  0E00               	movlw	0
 10232  0068DC  6F46               	movwf	_extended_linear_address& (0+255),b
 10233  0068DE  0E00               	movlw	0
 10234  0068E0  6F47               	movwf	(_extended_linear_address+1)& (0+255),b
 10235  0068E2  0E00               	movlw	0
 10236  0068E4  6F48               	movwf	(_extended_linear_address+2)& (0+255),b
 10237  0068E6  0E00               	movlw	0
 10238  0068E8  6F49               	movwf	(_extended_linear_address+3)& (0+255),b
 10239                           
 10240                           ; BSR set to: 1
 10241                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 10242  0068EA  0E20               	movlw	32
 10243  0068EC  0100               	movlb	0	; () banked
 10244  0068EE  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10245                           
 10246                           ; BSR set to: 0
 10247                           ;bootloader.c: 169: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 10248  0068F0  0E20               	movlw	32
 10249  0068F2  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10250                           
 10251                           ;bootloader.c: 170: }
 10252  0068F4  0012               	return	
 10253  0068F6                     l2438:
 10254                           
 10255                           ; BSR set to: 0
 10256                           ;bootloader.c: 172: else;bootloader.c: 173: {;bootloader.c: 175: hex_file_size = 0;
 10257                           
 10258                           ; BSR set to: 0
 10259  0068F6  0E00               	movlw	0
 10260  0068F8  0101               	movlb	1	; () banked
 10261  0068FA  6F4A               	movwf	_hex_file_size& (0+255),b
 10262  0068FC  0E00               	movlw	0
 10263  0068FE  6F4B               	movwf	(_hex_file_size+1)& (0+255),b
 10264  006900  0E00               	movlw	0
 10265  006902  6F4C               	movwf	(_hex_file_size+2)& (0+255),b
 10266  006904  0E00               	movlw	0
 10267  006906  6F4D               	movwf	(_hex_file_size+3)& (0+255),b
 10268                           
 10269                           ;bootloader.c: 177: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 10270  006908  0E10               	movlw	16
 10271  00690A  0100               	movlb	0	; () banked
 10272  00690C  6FC9               	movwf	(_os+4)& (0+255),b	;volatile
 10273                           
 10274                           ;bootloader.c: 178: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
 10275  00690E  0E10               	movlw	16
 10276  006910  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 10277  006912  0012               	return	
 10278  006914                     __end_of__bootloader_find_file:
 10279                           	opt stack 0
 10280                           tblptru	equ	0xFF8
 10281                           tblptrh	equ	0xFF7
 10282                           tblptrl	equ	0xFF6
 10283                           tablat	equ	0xFF5
 10284                           prodh	equ	0xFF4
 10285                           prodl	equ	0xFF3
 10286                           intcon	equ	0xFF2
 10287                           intcon2	equ	0xFF1
 10288                           intcon3	equ	0xFF0
 10289                           postinc0	equ	0xFEE
 10290                           wreg	equ	0xFE8
 10291                           indf1	equ	0xFE7
 10292                           postdec1	equ	0xFE5
 10293                           plusw1	equ	0xFE3
 10294                           fsr1h	equ	0xFE2
 10295                           fsr1l	equ	0xFE1
 10296                           indf2	equ	0xFDF
 10297                           postinc2	equ	0xFDE
 10298                           postdec2	equ	0xFDD
 10299                           plusw2	equ	0xFDB
 10300                           fsr2h	equ	0xFDA
 10301                           fsr2l	equ	0xFD9
 10302                           status	equ	0xFD8
 10303                           
 10304 ;; *************** function __normal_mode *****************
 10305 ;; Defined at:
 10306 ;;		line 208 in file "main.c"
 10307 ;; Parameters:    Size  Location     Type
 10308 ;;		None
 10309 ;; Auto vars:     Size  Location     Type
 10310 ;;		None
 10311 ;; Return value:  Size  Location     Type
 10312 ;;                  1    wreg      unsigned char 
 10313 ;; Registers used:
 10314 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10315 ;; Tracked objects:
 10316 ;;		On entry : 0/0
 10317 ;;		On exit  : 0/0
 10318 ;;		Unchanged: 0/0
 10319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10320 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10321 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10322 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10323 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10324 ;;Total ram usage:        0 bytes
 10325 ;; Hardware stack levels used:    1
 10326 ;; Hardware stack levels required when called:    3
 10327 ;; This function calls:
 10328 ;;		_i2c_eeprom_readByte
 10329 ;;		_i2c_eeprom_writeByte
 10330 ;; This function is called by:
 10331 ;;		_main
 10332 ;; This function uses a non-reentrant model
 10333 ;;
 10334                           
 10335                           	psect	text45
 10336  007C08                     __ptext45:
 10337                           	opt stack 0
 10338  007C08                     __normal_mode:
 10339                           	opt stack 27
 10340                           
 10341                           ;main.c: 210: if(i2c_eeprom_readByte(0x100)==0x94)
 10342                           
 10343                           ; BSR set to: 0
 10344                           ;incstack = 0
 10345  007C08  0E01               	movlw	1
 10346  007C0A  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10347  007C0C  0E00               	movlw	0
 10348  007C0E  6E12               	movwf	i2c_eeprom_readByte@address,c
 10349  007C10  EC11  F041         	call	_i2c_eeprom_readByte	;wreg free
 10350  007C14  0A94               	xorlw	148
 10351  007C16  A4D8               	btfss	status,2,c
 10352  007C18  D00A               	goto	l914
 10353                           
 10354                           ;main.c: 211: {;main.c: 213: i2c_eeprom_writeByte(0x100, 0x00);
 10355  007C1A  0E01               	movlw	1
 10356  007C1C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10357  007C1E  0E00               	movlw	0
 10358  007C20  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10359  007C22  0E00               	movlw	0
 10360  007C24  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10361  007C26  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10362                           
 10363                           ;main.c: 215: return 0;
 10364  007C2A  0E00               	movlw	0
 10365  007C2C  0012               	return	
 10366  007C2E                     l914:
 10367                           
 10368                           ;main.c: 217: else if(i2c_eeprom_readByte(0x100)==0x78)
 10369  007C2E  0E01               	movlw	1
 10370  007C30  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 10371  007C32  0E00               	movlw	0
 10372  007C34  6E12               	movwf	i2c_eeprom_readByte@address,c
 10373  007C36  EC11  F041         	call	_i2c_eeprom_readByte	;wreg free
 10374  007C3A  0A78               	xorlw	120
 10375  007C3C  A4D8               	btfss	status,2,c
 10376  007C3E  D00A               	goto	l917
 10377                           
 10378                           ;main.c: 218: {;main.c: 220: i2c_eeprom_writeByte(0x100, 0x00);
 10379  007C40  0E01               	movlw	1
 10380  007C42  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 10381  007C44  0E00               	movlw	0
 10382  007C46  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 10383  007C48  0E00               	movlw	0
 10384  007C4A  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 10385  007C4C  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 10386                           
 10387                           ;main.c: 222: return 1;
 10388  007C50  0E01               	movlw	1
 10389  007C52  0012               	return	
 10390  007C54                     l917:
 10391                           
 10392                           ;main.c: 223: };main.c: 229: LATAbits.LA0 = 1;
 10393  007C54  8089               	bsf	3977,0,c	;volatile
 10394                           
 10395                           ;main.c: 230: TRISAbits.TRISA0 = 0;
 10396  007C56  9092               	bcf	3986,0,c	;volatile
 10397                           
 10398                           ;main.c: 231: TRISAbits.TRISA0 = 1;
 10399  007C58  8092               	bsf	3986,0,c	;volatile
 10400                           
 10401                           ;main.c: 233: if(!PORTAbits.RA0)
 10402  007C5A  B080               	btfsc	3968,0,c	;volatile
 10403  007C5C  D002               	goto	l918
 10404                           
 10405                           ;main.c: 234: {;main.c: 236: return 0;
 10406  007C5E  0E00               	movlw	0
 10407                           
 10408                           ;main.c: 237: }
 10409  007C60  0012               	return	
 10410  007C62                     l918:
 10411                           
 10412                           ;main.c: 238: else;main.c: 239: {;main.c: 241: return 1;
 10413  007C62  0E01               	movlw	1
 10414  007C64  0012               	return	
 10415  007C66                     __end_of__normal_mode:
 10416                           	opt stack 0
 10417                           tblptru	equ	0xFF8
 10418                           tblptrh	equ	0xFF7
 10419                           tblptrl	equ	0xFF6
 10420                           tablat	equ	0xFF5
 10421                           prodh	equ	0xFF4
 10422                           prodl	equ	0xFF3
 10423                           intcon	equ	0xFF2
 10424                           intcon2	equ	0xFF1
 10425                           intcon3	equ	0xFF0
 10426                           postinc0	equ	0xFEE
 10427                           wreg	equ	0xFE8
 10428                           indf1	equ	0xFE7
 10429                           postdec1	equ	0xFE5
 10430                           plusw1	equ	0xFE3
 10431                           fsr1h	equ	0xFE2
 10432                           fsr1l	equ	0xFE1
 10433                           indf2	equ	0xFDF
 10434                           postinc2	equ	0xFDE
 10435                           postdec2	equ	0xFDD
 10436                           plusw2	equ	0xFDB
 10437                           fsr2h	equ	0xFDA
 10438                           fsr2l	equ	0xFD9
 10439                           status	equ	0xFD8
 10440                           
 10441 ;; *************** function _i2c_eeprom_readByte *****************
 10442 ;; Defined at:
 10443 ;;		line 367 in file "i2c.c"
 10444 ;; Parameters:    Size  Location     Type
 10445 ;;  address         2   17[COMRAM] unsigned int 
 10446 ;; Auto vars:     Size  Location     Type
 10447 ;;  addr            1   23[COMRAM] unsigned char 
 10448 ;;  slave_addres    1   22[COMRAM] unsigned char 
 10449 ;; Return value:  Size  Location     Type
 10450 ;;                  1    wreg      unsigned char 
 10451 ;; Registers used:
 10452 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10453 ;; Tracked objects:
 10454 ;;		On entry : 0/0
 10455 ;;		On exit  : 0/0
 10456 ;;		Unchanged: 0/0
 10457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10458 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10459 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10460 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10461 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10462 ;;Total ram usage:        7 bytes
 10463 ;; Hardware stack levels used:    1
 10464 ;; Hardware stack levels required when called:    2
 10465 ;; This function calls:
 10466 ;;		__i2c_read
 10467 ;;		__i2c_write
 10468 ;;		_i2c_set_frequency
 10469 ;; This function is called by:
 10470 ;;		__normal_mode
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           	psect	text46
 10475  008222                     __ptext46:
 10476                           	opt stack 0
 10477  008222                     _i2c_eeprom_readByte:
 10478                           	opt stack 27
 10479                           
 10480                           ;i2c.c: 369: uint8_t slave_address;;i2c.c: 370: uint8_t addr;;i2c.c: 371: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 10481                           
 10482                           ;incstack = 0
 10483  008222  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 10484  008226  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 10485  00822A  0E07               	movlw	7
 10486  00822C  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 10487  00822E                     u12145:
 10488  00822E  90D8               	bcf	status,0,c
 10489  008230  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 10490  008232  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 10491  008234  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 10492  008236  D7FB               	goto	u12145
 10493  008238  5014               	movf	??_i2c_eeprom_readByte,w,c
 10494  00823A  0B0E               	andlw	14
 10495  00823C  09A0               	iorlw	160
 10496  00823E  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 10497                           
 10498                           ;i2c.c: 372: addr = address & 0xFF;
 10499  008240  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 10500                           
 10501                           ;i2c.c: 375: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 10502  008244  0E02               	movlw	2
 10503  008246  EC51  F045         	call	_i2c_set_frequency
 10504                           
 10505                           ;i2c.c: 377: _i2c_write(slave_address, &addr, 1);
 10506  00824A  0E18               	movlw	low i2c_eeprom_readByte@addr
 10507  00824C  6E06               	movwf	__i2c_write@data,c
 10508  00824E  0E00               	movlw	high i2c_eeprom_readByte@addr
 10509  008250  6E07               	movwf	__i2c_write@data+1,c
 10510  008252  0E01               	movlw	1
 10511  008254  6E08               	movwf	__i2c_write@length,c
 10512  008256  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10513  008258  ECAD  F041         	call	__i2c_write
 10514                           
 10515                           ;i2c.c: 378: _i2c_read(slave_address, &addr, 1);
 10516  00825C  0E18               	movlw	low i2c_eeprom_readByte@addr
 10517  00825E  6E06               	movwf	__i2c_read@data,c
 10518  008260  0E00               	movlw	high i2c_eeprom_readByte@addr
 10519  008262  6E07               	movwf	__i2c_read@data+1,c
 10520  008264  0E01               	movlw	1
 10521  008266  6E08               	movwf	__i2c_read@length,c
 10522  008268  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 10523  00826A  EC25  F038         	call	__i2c_read
 10524                           
 10525                           ;i2c.c: 379: return addr;
 10526  00826E  5018               	movf	i2c_eeprom_readByte@addr,w,c
 10527  008270  0012               	return	
 10528  008272                     __end_of_i2c_eeprom_readByte:
 10529                           	opt stack 0
 10530                           tblptru	equ	0xFF8
 10531                           tblptrh	equ	0xFF7
 10532                           tblptrl	equ	0xFF6
 10533                           tablat	equ	0xFF5
 10534                           prodh	equ	0xFF4
 10535                           prodl	equ	0xFF3
 10536                           intcon	equ	0xFF2
 10537                           intcon2	equ	0xFF1
 10538                           intcon3	equ	0xFF0
 10539                           postinc0	equ	0xFEE
 10540                           wreg	equ	0xFE8
 10541                           indf1	equ	0xFE7
 10542                           postdec1	equ	0xFE5
 10543                           plusw1	equ	0xFE3
 10544                           fsr1h	equ	0xFE2
 10545                           fsr1l	equ	0xFE1
 10546                           indf2	equ	0xFDF
 10547                           postinc2	equ	0xFDE
 10548                           postdec2	equ	0xFDD
 10549                           plusw2	equ	0xFDB
 10550                           fsr2h	equ	0xFDA
 10551                           fsr2l	equ	0xFD9
 10552                           status	equ	0xFD8
 10553                           
 10554 ;; *************** function __i2c_read *****************
 10555 ;; Defined at:
 10556 ;;		line 161 in file "i2c.c"
 10557 ;; Parameters:    Size  Location     Type
 10558 ;;  slave_addres    1    wreg     unsigned char 
 10559 ;;  data            2    5[COMRAM] PTR unsigned char 
 10560 ;;		 -> i2c_eeprom_readByte@addr(1), 
 10561 ;;  length          1    7[COMRAM] unsigned char 
 10562 ;; Auto vars:     Size  Location     Type
 10563 ;;  slave_addres    1   15[COMRAM] unsigned char 
 10564 ;;  cntr            1   16[COMRAM] unsigned char 
 10565 ;; Return value:  Size  Location     Type
 10566 ;;                  1    wreg      void 
 10567 ;; Registers used:
 10568 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 10569 ;; Tracked objects:
 10570 ;;		On entry : 0/0
 10571 ;;		On exit  : 0/0
 10572 ;;		Unchanged: 0/0
 10573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10574 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10575 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10576 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10577 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10578 ;;Total ram usage:       12 bytes
 10579 ;; Hardware stack levels used:    1
 10580 ;; Hardware stack levels required when called:    1
 10581 ;; This function calls:
 10582 ;;		__i2c_acknowledge
 10583 ;;		__i2c_get
 10584 ;;		__i2c_not_acknowledge
 10585 ;;		__i2c_send
 10586 ;;		__i2c_start
 10587 ;;		__i2c_stop
 10588 ;;		__i2c_wait_idle
 10589 ;; This function is called by:
 10590 ;;		_i2c_eeprom_readByte
 10591 ;;		_i2c_eeprom_read
 10592 ;; This function uses a non-reentrant model
 10593 ;;
 10594                           
 10595                           	psect	text47
 10596  00704A                     __ptext47:
 10597                           	opt stack 0
 10598  00704A                     __i2c_read:
 10599                           	opt stack 27
 10600                           
 10601                           ;incstack = 0
 10602                           ;__i2c_read@slave_address stored from wreg
 10603  00704A  6E10               	movwf	__i2c_read@slave_address,c
 10604                           
 10605                           ;i2c.c: 163: uint8_t cntr;;i2c.c: 165: _i2c_wait_idle();
 10606  00704C  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10607                           
 10608                           ;i2c.c: 166: _i2c_start();
 10609  007050  EC0A  F048         	call	__i2c_start	;wreg free
 10610                           
 10611                           ;i2c.c: 167: _i2c_wait_idle();
 10612  007054  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10613                           
 10614                           ;i2c.c: 168: _i2c_send(slave_address | 0x01);
 10615  007058  5010               	movf	__i2c_read@slave_address,w,c
 10616  00705A  0901               	iorlw	1
 10617  00705C  EC0E  F048         	call	__i2c_send
 10618                           
 10619                           ;i2c.c: 169: _i2c_wait_idle();
 10620  007060  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 10621                           
 10622                           ;i2c.c: 171: for(cntr=0; cntr<length-1; ++cntr)
 10623  007064  0E00               	movlw	0
 10624  007066  6E11               	movwf	__i2c_read@cntr,c
 10625  007068  D00E               	goto	l1209
 10626  00706A                     
 10627                           ;i2c.c: 172: {;i2c.c: 173: data[cntr] = _i2c_get();
 10628  00706A  5011               	movf	__i2c_read@cntr,w,c
 10629  00706C  0D01               	mullw	1
 10630  00706E  50F3               	movf	prodl,w,c
 10631  007070  2406               	addwf	__i2c_read@data,w,c
 10632  007072  6ED9               	movwf	fsr2l,c
 10633  007074  50F4               	movf	prodh,w,c
 10634  007076  2007               	addwfc	__i2c_read@data+1,w,c
 10635  007078  6EDA               	movwf	fsr2h,c
 10636  00707A  ECD4  F047         	call	__i2c_get	;wreg free
 10637  00707E  6EDF               	movwf	indf2,c
 10638                           
 10639                           ;i2c.c: 174: _i2c_acknowledge();
 10640  007080  ECD9  F047         	call	__i2c_acknowledge	;wreg free
 10641  007084  2A11               	incf	__i2c_read@cntr,f,c
 10642  007086                     l1209:
 10643  007086  0EFF               	movlw	255
 10644  007088  6E09               	movwf	??__i2c_read& (0+255),c
 10645  00708A  0EFF               	movlw	255
 10646  00708C  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 10647  00708E  5008               	movf	__i2c_read@length,w,c
 10648  007090  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 10649  007092  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 10650  007094  5009               	movf	??__i2c_read,w,c
 10651  007096  260B               	addwf	??__i2c_read+2,f,c
 10652  007098  500A               	movf	??__i2c_read+1,w,c
 10653  00709A  220C               	addwfc	??__i2c_read+3,f,c
 10654  00709C  5011               	movf	__i2c_read@cntr,w,c
 10655  00709E  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 10656  0070A0  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 10657  0070A2  500B               	movf	??__i2c_read+2,w,c
 10658  0070A4  5C0D               	subwf	??__i2c_read+4,w,c
 10659  0070A6  500E               	movf	??__i2c_read+5,w,c
 10660  0070A8  0A80               	xorlw	128
 10661  0070AA  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 10662  0070AC  500C               	movf	??__i2c_read+3,w,c
 10663  0070AE  0A80               	xorlw	128
 10664  0070B0  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 10665  0070B2  A0D8               	btfss	status,0,c
 10666  0070B4  D7DA               	goto	l1210
 10667                           
 10668                           ;i2c.c: 175: };i2c.c: 176: data[cntr] = _i2c_get();
 10669  0070B6  5011               	movf	__i2c_read@cntr,w,c
 10670  0070B8  0D01               	mullw	1
 10671  0070BA  50F3               	movf	prodl,w,c
 10672  0070BC  2406               	addwf	__i2c_read@data,w,c
 10673  0070BE  6ED9               	movwf	fsr2l,c
 10674  0070C0  50F4               	movf	prodh,w,c
 10675  0070C2  2007               	addwfc	__i2c_read@data+1,w,c
 10676  0070C4  6EDA               	movwf	fsr2h,c
 10677  0070C6  ECD4  F047         	call	__i2c_get	;wreg free
 10678  0070CA  6EDF               	movwf	indf2,c
 10679                           
 10680                           ;i2c.c: 177: _i2c_not_acknowledge();
 10681  0070CC  ECCF  F047         	call	__i2c_not_acknowledge	;wreg free
 10682                           
 10683                           ;i2c.c: 179: _i2c_stop();
 10684  0070D0  EC06  F048         	call	__i2c_stop	;wreg free
 10685  0070D4  0012               	return		;funcret
 10686  0070D6                     __end_of__i2c_read:
 10687                           	opt stack 0
 10688                           tblptru	equ	0xFF8
 10689                           tblptrh	equ	0xFF7
 10690                           tblptrl	equ	0xFF6
 10691                           tablat	equ	0xFF5
 10692                           prodh	equ	0xFF4
 10693                           prodl	equ	0xFF3
 10694                           intcon	equ	0xFF2
 10695                           intcon2	equ	0xFF1
 10696                           intcon3	equ	0xFF0
 10697                           postinc0	equ	0xFEE
 10698                           wreg	equ	0xFE8
 10699                           indf1	equ	0xFE7
 10700                           postdec1	equ	0xFE5
 10701                           plusw1	equ	0xFE3
 10702                           fsr1h	equ	0xFE2
 10703                           fsr1l	equ	0xFE1
 10704                           indf2	equ	0xFDF
 10705                           postinc2	equ	0xFDE
 10706                           postdec2	equ	0xFDD
 10707                           plusw2	equ	0xFDB
 10708                           fsr2h	equ	0xFDA
 10709                           fsr2l	equ	0xFD9
 10710                           status	equ	0xFD8
 10711                           
 10712 ;; *************** function __i2c_not_acknowledge *****************
 10713 ;; Defined at:
 10714 ;;		line 90 in file "i2c.c"
 10715 ;; Parameters:    Size  Location     Type
 10716 ;;		None
 10717 ;; Auto vars:     Size  Location     Type
 10718 ;;		None
 10719 ;; Return value:  Size  Location     Type
 10720 ;;                  1    wreg      void 
 10721 ;; Registers used:
 10722 ;;		None
 10723 ;; Tracked objects:
 10724 ;;		On entry : 0/0
 10725 ;;		On exit  : 0/0
 10726 ;;		Unchanged: 0/0
 10727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10728 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10729 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10730 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10731 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10732 ;;Total ram usage:        0 bytes
 10733 ;; Hardware stack levels used:    1
 10734 ;; This function calls:
 10735 ;;		Nothing
 10736 ;; This function is called by:
 10737 ;;		__i2c_read
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text48
 10742  008F9E                     __ptext48:
 10743                           	opt stack 0
 10744  008F9E                     __i2c_not_acknowledge:
 10745                           	opt stack 27
 10746                           
 10747                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 10748                           
 10749                           ;incstack = 0
 10750  008F9E  8AC5               	bsf	4037,5,c	;volatile
 10751                           
 10752                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 10753  008FA0  88C5               	bsf	4037,4,c	;volatile
 10754  008FA2  A8C5               	btfss	4037,4,c	;volatile
 10755  008FA4  0012               	return	
 10756  008FA6  D7FD               	goto	l1181
 10757  008FA8                     __end_of__i2c_not_acknowledge:
 10758                           	opt stack 0
 10759                           tblptru	equ	0xFF8
 10760                           tblptrh	equ	0xFF7
 10761                           tblptrl	equ	0xFF6
 10762                           tablat	equ	0xFF5
 10763                           prodh	equ	0xFF4
 10764                           prodl	equ	0xFF3
 10765                           intcon	equ	0xFF2
 10766                           intcon2	equ	0xFF1
 10767                           intcon3	equ	0xFF0
 10768                           postinc0	equ	0xFEE
 10769                           wreg	equ	0xFE8
 10770                           indf1	equ	0xFE7
 10771                           postdec1	equ	0xFE5
 10772                           plusw1	equ	0xFE3
 10773                           fsr1h	equ	0xFE2
 10774                           fsr1l	equ	0xFE1
 10775                           indf2	equ	0xFDF
 10776                           postinc2	equ	0xFDE
 10777                           postdec2	equ	0xFDD
 10778                           plusw2	equ	0xFDB
 10779                           fsr2h	equ	0xFDA
 10780                           fsr2l	equ	0xFD9
 10781                           status	equ	0xFD8
 10782                           
 10783 ;; *************** function __i2c_get *****************
 10784 ;; Defined at:
 10785 ;;		line 67 in file "i2c.c"
 10786 ;; Parameters:    Size  Location     Type
 10787 ;;		None
 10788 ;; Auto vars:     Size  Location     Type
 10789 ;;		None
 10790 ;; Return value:  Size  Location     Type
 10791 ;;                  1    wreg      unsigned char 
 10792 ;; Registers used:
 10793 ;;		wreg, status,2
 10794 ;; Tracked objects:
 10795 ;;		On entry : 0/0
 10796 ;;		On exit  : 0/0
 10797 ;;		Unchanged: 0/0
 10798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10799 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10800 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10801 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10802 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10803 ;;Total ram usage:        0 bytes
 10804 ;; Hardware stack levels used:    1
 10805 ;; This function calls:
 10806 ;;		Nothing
 10807 ;; This function is called by:
 10808 ;;		__i2c_read
 10809 ;; This function uses a non-reentrant model
 10810 ;;
 10811                           
 10812                           	psect	text49
 10813  008FA8                     __ptext49:
 10814                           	opt stack 0
 10815  008FA8                     __i2c_get:
 10816                           	opt stack 27
 10817                           
 10818                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 10819                           
 10820                           ;incstack = 0
 10821  008FA8  86C5               	bsf	4037,3,c	;volatile
 10822  008FAA  B6C5               	btfsc	4037,3,c	;volatile
 10823  008FAC  D7FE               	goto	l1163
 10824                           
 10825                           ;i2c.c: 71: return SSP1BUF;
 10826  008FAE  50C9               	movf	4041,w,c	;volatile
 10827  008FB0  0012               	return	
 10828  008FB2                     __end_of__i2c_get:
 10829                           	opt stack 0
 10830                           tblptru	equ	0xFF8
 10831                           tblptrh	equ	0xFF7
 10832                           tblptrl	equ	0xFF6
 10833                           tablat	equ	0xFF5
 10834                           prodh	equ	0xFF4
 10835                           prodl	equ	0xFF3
 10836                           intcon	equ	0xFF2
 10837                           intcon2	equ	0xFF1
 10838                           intcon3	equ	0xFF0
 10839                           postinc0	equ	0xFEE
 10840                           wreg	equ	0xFE8
 10841                           indf1	equ	0xFE7
 10842                           postdec1	equ	0xFE5
 10843                           plusw1	equ	0xFE3
 10844                           fsr1h	equ	0xFE2
 10845                           fsr1l	equ	0xFE1
 10846                           indf2	equ	0xFDF
 10847                           postinc2	equ	0xFDE
 10848                           postdec2	equ	0xFDD
 10849                           plusw2	equ	0xFDB
 10850                           fsr2h	equ	0xFDA
 10851                           fsr2l	equ	0xFD9
 10852                           status	equ	0xFD8
 10853                           
 10854 ;; *************** function __i2c_acknowledge *****************
 10855 ;; Defined at:
 10856 ;;		line 82 in file "i2c.c"
 10857 ;; Parameters:    Size  Location     Type
 10858 ;;		None
 10859 ;; Auto vars:     Size  Location     Type
 10860 ;;		None
 10861 ;; Return value:  Size  Location     Type
 10862 ;;                  1    wreg      void 
 10863 ;; Registers used:
 10864 ;;		None
 10865 ;; Tracked objects:
 10866 ;;		On entry : 0/0
 10867 ;;		On exit  : 0/0
 10868 ;;		Unchanged: 0/0
 10869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10870 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10871 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10872 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10873 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10874 ;;Total ram usage:        0 bytes
 10875 ;; Hardware stack levels used:    1
 10876 ;; This function calls:
 10877 ;;		Nothing
 10878 ;; This function is called by:
 10879 ;;		__i2c_read
 10880 ;; This function uses a non-reentrant model
 10881 ;;
 10882                           
 10883                           	psect	text50
 10884  008FB2                     __ptext50:
 10885                           	opt stack 0
 10886  008FB2                     __i2c_acknowledge:
 10887                           	opt stack 27
 10888                           
 10889                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 10890                           
 10891                           ;incstack = 0
 10892  008FB2  9AC5               	bcf	4037,5,c	;volatile
 10893                           
 10894                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 10895  008FB4  88C5               	bsf	4037,4,c	;volatile
 10896  008FB6  A8C5               	btfss	4037,4,c	;volatile
 10897  008FB8  0012               	return	
 10898  008FBA  D7FD               	goto	l1175
 10899  008FBC                     __end_of__i2c_acknowledge:
 10900                           	opt stack 0
 10901                           tblptru	equ	0xFF8
 10902                           tblptrh	equ	0xFF7
 10903                           tblptrl	equ	0xFF6
 10904                           tablat	equ	0xFF5
 10905                           prodh	equ	0xFF4
 10906                           prodl	equ	0xFF3
 10907                           intcon	equ	0xFF2
 10908                           intcon2	equ	0xFF1
 10909                           intcon3	equ	0xFF0
 10910                           postinc0	equ	0xFEE
 10911                           wreg	equ	0xFE8
 10912                           indf1	equ	0xFE7
 10913                           postdec1	equ	0xFE5
 10914                           plusw1	equ	0xFE3
 10915                           fsr1h	equ	0xFE2
 10916                           fsr1l	equ	0xFE1
 10917                           indf2	equ	0xFDF
 10918                           postinc2	equ	0xFDE
 10919                           postdec2	equ	0xFDD
 10920                           plusw2	equ	0xFDB
 10921                           fsr2h	equ	0xFDA
 10922                           fsr2l	equ	0xFD9
 10923                           status	equ	0xFD8
 10924                           
 10925 ;; *************** function _USBDeviceTasks *****************
 10926 ;; Defined at:
 10927 ;;		line 477 in file "usb_device.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;		None
 10930 ;; Auto vars:     Size  Location     Type
 10931 ;;  i               1   31[COMRAM] unsigned char 
 10932 ;; Return value:  Size  Location     Type
 10933 ;;                  1    wreg      void 
 10934 ;; Registers used:
 10935 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 10936 ;; Tracked objects:
 10937 ;;		On entry : 0/0
 10938 ;;		On exit  : 0/0
 10939 ;;		Unchanged: 0/0
 10940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10942 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10944 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10945 ;;Total ram usage:        1 bytes
 10946 ;; Hardware stack levels used:    1
 10947 ;; Hardware stack levels required when called:    8
 10948 ;; This function calls:
 10949 ;;		_USBCtrlEPAllowStatusStage
 10950 ;;		_USBCtrlEPService
 10951 ;;		_USBDeviceInit
 10952 ;;		_USBIncrement1msInternalTimers
 10953 ;;		_USBStallHandler
 10954 ;;		_USBSuspend
 10955 ;;		_USBWakeFromSuspend
 10956 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 10957 ;; This function is called by:
 10958 ;;		_main
 10959 ;; This function uses a non-reentrant model
 10960 ;;
 10961                           
 10962                           	psect	text51
 10963  0035FA                     __ptext51:
 10964                           	opt stack 0
 10965  0035FA                     _USBDeviceTasks:
 10966                           	opt stack 22
 10967                           
 10968                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 10969                           
 10970                           ; BSR set to: 0
 10971                           
 10972                           ; BSR set to: 0
 10973                           ;usb_device.c: 543: return;
 10974                           
 10975                           ; BSR set to: 0
 10976                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 10977                           
 10978                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 10979                           
 10980                           ;usb_device.c: 511: UIE = 0;
 10981                           
 10982                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 10983                           
 10984                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 10985                           
 10986                           ;incstack = 0
 10987  0035FA  0100               	movlb	0	; () banked
 10988  0035FC  51F8               	movf	_USBDeviceState& (0+255),w,b
 10989  0035FE  A4D8               	btfss	status,2,c
 10990  003600  D012               	goto	l150
 10991                           
 10992                           ; BSR set to: 0
 10993                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 10994  003602  0E00               	movlw	0
 10995  003604  6E65               	movwf	3941,c	;volatile
 10996                           
 10997                           ;usb_device.c: 572: UIE = 0;
 10998  003606  0E00               	movlw	0
 10999  003608  010F               	movlb	15	; () banked
 11000  00360A  6F36               	movwf	54,b	;volatile
 11001                           
 11002                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11003  00360C  0E16               	movlw	22
 11004  00360E  6F39               	movwf	57,b	;volatile
 11005  003610  0E9F               	movlw	159
 11006  003612  6F37               	movwf	55,b	;volatile
 11007  003614  0E7B               	movlw	123
 11008  003616  6F36               	movwf	54,b	;volatile
 11009                           
 11010                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 11011  003618  D001               	goto	l151
 11012  00361A                     l152:
 11013  00361A  8665               	bsf	3941,3,c	;volatile
 11014  00361C                     l151:
 11015  00361C  A665               	btfss	3941,3,c	;volatile
 11016  00361E  D7FD               	goto	l152
 11017                           
 11018                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 11019  003620  0E01               	movlw	1
 11020  003622  0100               	movlb	0	; () banked
 11021  003624  6FF8               	movwf	_USBDeviceState& (0+255),b
 11022  003626                     l150:
 11023                           
 11024                           ; BSR set to: 0
 11025                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 11026                           
 11027                           ; BSR set to: 0
 11028  003626  05F8               	decf	_USBDeviceState& (0+255),w,b
 11029  003628  B4D8               	btfsc	status,2,c
 11030                           
 11031                           ; BSR set to: 0
 11032                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 11033  00362A  BA65               	btfsc	3941,5,c	;volatile
 11034  00362C  D00A               	goto	l155
 11035                           
 11036                           ; BSR set to: 0
 11037                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 11038  00362E  0E00               	movlw	0
 11039  003630  6E62               	movwf	3938,c	;volatile
 11040                           
 11041                           ;usb_device.c: 612: UIE=0;
 11042  003632  0E00               	movlw	0
 11043  003634  010F               	movlb	15	; () banked
 11044  003636  6F36               	movwf	54,b	;volatile
 11045                           
 11046                           ; BSR set to: 15
 11047                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 11048  003638  8136               	bsf	54,0,b	;volatile
 11049                           
 11050                           ; BSR set to: 15
 11051                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 11052  00363A  8936               	bsf	54,4,b	;volatile
 11053                           
 11054                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 11055  00363C  0E02               	movlw	2
 11056  00363E  0100               	movlb	0	; () banked
 11057  003640  6FF8               	movwf	_USBDeviceState& (0+255),b
 11058  003642                     l155:
 11059                           
 11060                           ; BSR set to: 0
 11061                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 11062                           
 11063                           ; BSR set to: 0
 11064                           
 11065                           ; BSR set to: 0
 11066  003642  A462               	btfss	3938,2,c	;volatile
 11067  003644  D006               	goto	l156
 11068                           
 11069                           ; BSR set to: 0
 11070  003646  010F               	movlb	15	; () banked
 11071  003648  A536               	btfss	54,2,b	;volatile
 11072  00364A  D003               	goto	l156
 11073                           
 11074                           ; BSR set to: 15
 11075                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 11076  00364C  9462               	bcf	3938,2,c	;volatile
 11077                           
 11078                           ; BSR set to: 15
 11079                           ;usb_device.c: 640: USBWakeFromSuspend();
 11080  00364E  EC96  F043         	call	_USBWakeFromSuspend	;wreg free
 11081  003652                     l156:
 11082                           
 11083                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 11084  003652  A265               	btfss	3941,1,c	;volatile
 11085  003654  D002               	goto	l157
 11086                           
 11087                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 11088  003656  98A1               	bcf	4001,4,c	;volatile
 11089                           
 11090                           ;usb_device.c: 650: return;
 11091  003658  0012               	return	
 11092  00365A                     l157:
 11093                           
 11094                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 11095  00365A  A062               	btfss	3938,0,c	;volatile
 11096  00365C  D009               	goto	l158
 11097  00365E  010F               	movlb	15	; () banked
 11098  003660  A136               	btfss	54,0,b	;volatile
 11099  003662  D006               	goto	l158
 11100                           
 11101                           ; BSR set to: 15
 11102                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 11103  003664  EC4C  F01F         	call	_USBDeviceInit	;wreg free
 11104                           
 11105                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 11106  003668  0E04               	movlw	4
 11107  00366A  0100               	movlb	0	; () banked
 11108  00366C  6FF8               	movwf	_USBDeviceState& (0+255),b
 11109                           
 11110                           ; BSR set to: 0
 11111                           ;usb_device.c: 681: (UIR &= 0xFE);
 11112  00366E  9062               	bcf	3938,0,c	;volatile
 11113  003670                     l158:
 11114                           
 11115                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 11116                           
 11117                           ; BSR set to: 0
 11118  003670  A862               	btfss	3938,4,c	;volatile
 11119  003672  D004               	goto	l159
 11120  003674  010F               	movlb	15	; () banked
 11121  003676  B936               	btfsc	54,4,b	;volatile
 11122                           
 11123                           ; BSR set to: 15
 11124                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 11125  003678  ECB2  F044         	call	_USBSuspend	;wreg free
 11126  00367C                     l159:
 11127                           
 11128                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 11129  00367C  AC62               	btfss	3938,6,c	;volatile
 11130  00367E  D01C               	goto	l163
 11131                           
 11132                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 11133  003680  010F               	movlb	15	; () banked
 11134  003682  AD36               	btfss	54,6,b	;volatile
 11135  003684  D00E               	goto	l161
 11136                           
 11137                           ; BSR set to: 15
 11138                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 11139  003686  0E00               	movlw	0
 11140  003688  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11141  00368A  0E73               	movlw	115
 11142  00368C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11143  00368E  0E00               	movlw	0
 11144  003690  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11145  003692  0E00               	movlw	0
 11146  003694  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11147  003696  0E00               	movlw	0
 11148  003698  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11149  00369A  0E01               	movlw	1
 11150  00369C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11151  00369E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11152  0036A2                     l161:
 11153                           
 11154                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 11155  0036A2  9C62               	bcf	3938,6,c	;volatile
 11156                           
 11157                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 11158  0036A4  EC92  F046         	call	_USBIncrement1msInternalTimers	;wreg free
 11159                           
 11160                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 11161  0036A8  0100               	movlb	0	; () banked
 11162  0036AA  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11163  0036AC  A4D8               	btfss	status,2,c
 11164                           
 11165                           ; BSR set to: 0
 11166                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 11167  0036AE  07F3               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 11168                           
 11169                           ; BSR set to: 0
 11170                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 11171                           
 11172                           ; BSR set to: 0
 11173  0036B0  51F3               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 11174  0036B2  B4D8               	btfsc	status,2,c
 11175                           
 11176                           ; BSR set to: 0
 11177                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 11178  0036B4  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 11179  0036B8                     l163:
 11180                           
 11181                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 11182  0036B8  AA62               	btfss	3938,5,c	;volatile
 11183  0036BA  D004               	goto	l164
 11184  0036BC  010F               	movlb	15	; () banked
 11185  0036BE  BB36               	btfsc	54,5,b	;volatile
 11186                           
 11187                           ; BSR set to: 15
 11188                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 11189  0036C0  EC18  F042         	call	_USBStallHandler	;wreg free
 11190  0036C4                     l164:
 11191                           
 11192                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 11193  0036C4  A262               	btfss	3938,1,c	;volatile
 11194  0036C6  D012               	goto	l165
 11195  0036C8  010F               	movlb	15	; () banked
 11196  0036CA  A336               	btfss	54,1,b	;volatile
 11197  0036CC  D00F               	goto	l165
 11198                           
 11199                           ; BSR set to: 15
 11200                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 11201  0036CE  0E7F               	movlw	127
 11202  0036D0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11203  0036D2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11204  0036D4  0E00               	movlw	0
 11205  0036D6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11206  0036D8  0E00               	movlw	0
 11207  0036DA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11208  0036DC  0E00               	movlw	0
 11209  0036DE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11210  0036E0  0E01               	movlw	1
 11211  0036E2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11212  0036E4  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11213                           
 11214                           ;usb_device.c: 759: {UEIR = 0;};
 11215  0036E8  0E00               	movlw	0
 11216  0036EA  6E63               	movwf	3939,c	;volatile
 11217  0036EC                     l165:
 11218                           
 11219                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 11220  0036EC  0E04               	movlw	4
 11221  0036EE  0100               	movlb	0	; () banked
 11222  0036F0  61F8               	cpfslt	_USBDeviceState& (0+255),b
 11223  0036F2  D002               	goto	l166
 11224                           
 11225                           ; BSR set to: 0
 11226                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 11227  0036F4  98A1               	bcf	4001,4,c	;volatile
 11228                           
 11229                           ;usb_device.c: 777: return;
 11230  0036F6  0012               	return	
 11231  0036F8                     l166:
 11232                           
 11233                           ; BSR set to: 0
 11234                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 11235  0036F8  010F               	movlb	15	; () banked
 11236  0036FA  A736               	btfss	54,3,b	;volatile
 11237  0036FC  D03C               	goto	u12700
 11238                           
 11239                           ; BSR set to: 15
 11240                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 11241  0036FE  0E00               	movlw	0
 11242  003700  6E20               	movwf	USBDeviceTasks@i,c
 11243  003702                     l15579:
 11244                           
 11245                           ; BSR set to: 15
 11246  003702  0E03               	movlw	3
 11247  003704  6420               	cpfsgt	USBDeviceTasks@i,c
 11248  003706  D001               	goto	l168
 11249  003708  D036               	goto	u12700
 11250  00370A                     l168:
 11251                           
 11252                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 11253  00370A  A662               	btfss	3938,3,c	;volatile
 11254  00370C  D034               	goto	u12700
 11255                           
 11256                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 11257  00370E  CF64 F0FD          	movff	3940,_USTATcopy	;volatile
 11258                           
 11259                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 11260  003712  0100               	movlb	0	; () banked
 11261  003714  31FD               	rrcf	_USTATcopy& (0+255),w,b
 11262  003716  32E8               	rrcf	wreg,f,c
 11263  003718  32E8               	rrcf	wreg,f,c
 11264  00371A  0B0F               	andlw	15
 11265  00371C  6FF4               	movwf	_endpoint_number& (0+255),b
 11266                           
 11267                           ; BSR set to: 0
 11268                           ;usb_device.c: 793: (UIR &= 0xF7);
 11269  00371E  9662               	bcf	3938,3,c	;volatile
 11270                           
 11271                           ; BSR set to: 0
 11272                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 11273  003720  B5FD               	btfsc	_USTATcopy& (0+255),2,b
 11274  003722  D007               	goto	l171
 11275                           
 11276                           ; BSR set to: 0
 11277                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 11278  003724  51F4               	movf	_endpoint_number& (0+255),w,b
 11279  003726  0D01               	mullw	1
 11280  003728  0E6C               	movlw	low _ep_data_out
 11281  00372A  24F3               	addwf	prodl,w,c
 11282  00372C  6ED9               	movwf	fsr2l,c
 11283  00372E  0E01               	movlw	high _ep_data_out
 11284  003730  D007               	goto	L5
 11285  003732                     l171:
 11286                           
 11287                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 11288                           
 11289                           ; BSR set to: 1
 11290  003732  0100               	movlb	0	; () banked
 11291  003734  51F4               	movf	_endpoint_number& (0+255),w,b
 11292  003736  0D01               	mullw	1
 11293  003738  0E6F               	movlw	low _ep_data_in
 11294  00373A  24F3               	addwf	prodl,w,c
 11295  00373C  6ED9               	movwf	fsr2l,c
 11296  00373E  0E01               	movlw	high _ep_data_in
 11297  003740                     L5:
 11298  003740  20F4               	addwfc	prodh,w,c
 11299  003742  6EDA               	movwf	fsr2h,c
 11300  003744  0101               	movlb	1	; () banked
 11301  003746  70DF               	btg	indf2,0,c
 11302                           
 11303                           ; BSR set to: 1
 11304                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 11305                           
 11306                           ; BSR set to: 1
 11307  003748  0100               	movlb	0	; () banked
 11308  00374A  51F4               	movf	_endpoint_number& (0+255),w,b
 11309  00374C  A4D8               	btfss	status,2,c
 11310  00374E  D003               	goto	l173
 11311                           
 11312                           ; BSR set to: 0
 11313                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 11314  003750  EC93  F032         	call	_USBCtrlEPService	;wreg free
 11315                           
 11316                           ;usb_device.c: 813: }
 11317  003754  D00E               	goto	l175
 11318  003756                     l173:
 11319                           
 11320                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 11321  003756  0E00               	movlw	0
 11322  003758  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11323  00375A  0E72               	movlw	114
 11324  00375C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11325  00375E  0EFD               	movlw	low _USTATcopy
 11326  003760  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11327  003762  0E00               	movlw	high _USTATcopy
 11328  003764  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11329  003766  0E00               	movlw	0
 11330  003768  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11331  00376A  0E00               	movlw	0
 11332  00376C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11333  00376E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11334  003772                     l175:
 11335  003772  2A20               	incf	USBDeviceTasks@i,f,c
 11336  003774  D7C6               	goto	l15579
 11337  003776                     u12700:
 11338                           
 11339                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 11340  003776  98A1               	bcf	4001,4,c	;volatile
 11341  003778  0012               	return		;funcret
 11342  00377A                     __end_of_USBDeviceTasks:
 11343                           	opt stack 0
 11344                           tblptru	equ	0xFF8
 11345                           tblptrh	equ	0xFF7
 11346                           tblptrl	equ	0xFF6
 11347                           tablat	equ	0xFF5
 11348                           prodh	equ	0xFF4
 11349                           prodl	equ	0xFF3
 11350                           intcon	equ	0xFF2
 11351                           intcon2	equ	0xFF1
 11352                           intcon3	equ	0xFF0
 11353                           postinc0	equ	0xFEE
 11354                           wreg	equ	0xFE8
 11355                           indf1	equ	0xFE7
 11356                           postdec1	equ	0xFE5
 11357                           plusw1	equ	0xFE3
 11358                           fsr1h	equ	0xFE2
 11359                           fsr1l	equ	0xFE1
 11360                           indf2	equ	0xFDF
 11361                           postinc2	equ	0xFDE
 11362                           postdec2	equ	0xFDD
 11363                           plusw2	equ	0xFDB
 11364                           fsr2h	equ	0xFDA
 11365                           fsr2l	equ	0xFD9
 11366                           status	equ	0xFD8
 11367                           
 11368 ;; *************** function _USBWakeFromSuspend *****************
 11369 ;; Defined at:
 11370 ;;		line 2305 in file "usb_device.c"
 11371 ;; Parameters:    Size  Location     Type
 11372 ;;		None
 11373 ;; Auto vars:     Size  Location     Type
 11374 ;;		None
 11375 ;; Return value:  Size  Location     Type
 11376 ;;                  1    wreg      void 
 11377 ;; Registers used:
 11378 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11379 ;; Tracked objects:
 11380 ;;		On entry : 0/0
 11381 ;;		On exit  : 0/0
 11382 ;;		Unchanged: 0/0
 11383 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11384 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11385 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11386 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11387 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11388 ;;Total ram usage:        0 bytes
 11389 ;; Hardware stack levels used:    1
 11390 ;; Hardware stack levels required when called:    4
 11391 ;; This function calls:
 11392 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11393 ;; This function is called by:
 11394 ;;		_USBDeviceTasks
 11395 ;; This function uses a non-reentrant model
 11396 ;;
 11397                           
 11398                           	psect	text52
 11399  00872C                     __ptext52:
 11400                           	opt stack 0
 11401  00872C                     _USBWakeFromSuspend:
 11402                           	opt stack 25
 11403                           
 11404                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 11405                           
 11406                           ;incstack = 0
 11407  00872C  0E00               	movlw	0
 11408  00872E  0101               	movlb	1	; () banked
 11409  008730  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11410                           
 11411                           ; BSR set to: 1
 11412                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 11413  008732  0E00               	movlw	0
 11414  008734  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11415  008736  0E74               	movlw	116
 11416  008738  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11417  00873A  0E00               	movlw	0
 11418  00873C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11419  00873E  0E00               	movlw	0
 11420  008740  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11421  008742  0E00               	movlw	0
 11422  008744  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11423  008746  0E00               	movlw	0
 11424  008748  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11425  00874A  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11426                           
 11427                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 11428  00874E  9265               	bcf	3941,1,c	;volatile
 11429                           
 11430                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 11431  008750  010F               	movlb	15	; () banked
 11432  008752  9536               	bcf	54,2,b	;volatile
 11433                           
 11434                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 11435  008754  D001               	goto	l303
 11436  008756                     
 11437                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 11438                           
 11439                           ; BSR set to: 15
 11440  008756  9462               	bcf	3938,2,c	;volatile
 11441  008758                     l303:
 11442  008758  B462               	btfsc	3938,2,c	;volatile
 11443  00875A  D7FD               	goto	l304
 11444                           
 11445                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 11446  00875C  0E00               	movlw	0
 11447  00875E  0101               	movlb	1	; () banked
 11448  008760  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11449                           
 11450                           ; BSR set to: 1
 11451  008762  0012               	return		;funcret
 11452  008764                     __end_of_USBWakeFromSuspend:
 11453                           	opt stack 0
 11454                           tblptru	equ	0xFF8
 11455                           tblptrh	equ	0xFF7
 11456                           tblptrl	equ	0xFF6
 11457                           tablat	equ	0xFF5
 11458                           prodh	equ	0xFF4
 11459                           prodl	equ	0xFF3
 11460                           intcon	equ	0xFF2
 11461                           intcon2	equ	0xFF1
 11462                           intcon3	equ	0xFF0
 11463                           postinc0	equ	0xFEE
 11464                           wreg	equ	0xFE8
 11465                           indf1	equ	0xFE7
 11466                           postdec1	equ	0xFE5
 11467                           plusw1	equ	0xFE3
 11468                           fsr1h	equ	0xFE2
 11469                           fsr1l	equ	0xFE1
 11470                           indf2	equ	0xFDF
 11471                           postinc2	equ	0xFDE
 11472                           postdec2	equ	0xFDD
 11473                           plusw2	equ	0xFDB
 11474                           fsr2h	equ	0xFDA
 11475                           fsr2l	equ	0xFD9
 11476                           status	equ	0xFD8
 11477                           
 11478 ;; *************** function _USBSuspend *****************
 11479 ;; Defined at:
 11480 ;;		line 2247 in file "usb_device.c"
 11481 ;; Parameters:    Size  Location     Type
 11482 ;;		None
 11483 ;; Auto vars:     Size  Location     Type
 11484 ;;		None
 11485 ;; Return value:  Size  Location     Type
 11486 ;;                  1    wreg      void 
 11487 ;; Registers used:
 11488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 11489 ;; Tracked objects:
 11490 ;;		On entry : 0/0
 11491 ;;		On exit  : 0/0
 11492 ;;		Unchanged: 0/0
 11493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;Total ram usage:        0 bytes
 11499 ;; Hardware stack levels used:    1
 11500 ;; Hardware stack levels required when called:    4
 11501 ;; This function calls:
 11502 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 11503 ;; This function is called by:
 11504 ;;		_USBDeviceTasks
 11505 ;; This function uses a non-reentrant model
 11506 ;;
 11507                           
 11508                           	psect	text53
 11509  008964                     __ptext53:
 11510                           	opt stack 0
 11511  008964                     _USBSuspend:
 11512                           	opt stack 25
 11513                           
 11514                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 11515                           
 11516                           ; BSR set to: 1
 11517                           ;incstack = 0
 11518  008964  010F               	movlb	15	; () banked
 11519  008966  8536               	bsf	54,2,b	;volatile
 11520                           
 11521                           ; BSR set to: 15
 11522                           ;usb_device.c: 2273: (UIR &= 0xEF);
 11523  008968  9862               	bcf	3938,4,c	;volatile
 11524                           
 11525                           ; BSR set to: 15
 11526                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 11527  00896A  8265               	bsf	3941,1,c	;volatile
 11528                           
 11529                           ; BSR set to: 15
 11530                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 11531  00896C  0E01               	movlw	1
 11532  00896E  0101               	movlb	1	; () banked
 11533  008970  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11534                           
 11535                           ; BSR set to: 1
 11536                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 11537  008972  0E00               	movlw	0
 11538  008974  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 11539                           
 11540                           ; BSR set to: 1
 11541                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 11542  008976  0E00               	movlw	0
 11543  008978  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 11544  00897A  0E75               	movlw	117
 11545  00897C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 11546  00897E  0E00               	movlw	0
 11547  008980  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 11548  008982  0E00               	movlw	0
 11549  008984  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 11550  008986  0E00               	movlw	0
 11551  008988  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 11552  00898A  0E00               	movlw	0
 11553  00898C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 11554  00898E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 11555  008992  0012               	return		;funcret
 11556  008994                     __end_of_USBSuspend:
 11557                           	opt stack 0
 11558                           tblptru	equ	0xFF8
 11559                           tblptrh	equ	0xFF7
 11560                           tblptrl	equ	0xFF6
 11561                           tablat	equ	0xFF5
 11562                           prodh	equ	0xFF4
 11563                           prodl	equ	0xFF3
 11564                           intcon	equ	0xFF2
 11565                           intcon2	equ	0xFF1
 11566                           intcon3	equ	0xFF0
 11567                           postinc0	equ	0xFEE
 11568                           wreg	equ	0xFE8
 11569                           indf1	equ	0xFE7
 11570                           postdec1	equ	0xFE5
 11571                           plusw1	equ	0xFE3
 11572                           fsr1h	equ	0xFE2
 11573                           fsr1l	equ	0xFE1
 11574                           indf2	equ	0xFDF
 11575                           postinc2	equ	0xFDE
 11576                           postdec2	equ	0xFDD
 11577                           plusw2	equ	0xFDB
 11578                           fsr2h	equ	0xFDA
 11579                           fsr2l	equ	0xFD9
 11580                           status	equ	0xFD8
 11581                           
 11582 ;; *************** function _USBStallHandler *****************
 11583 ;; Defined at:
 11584 ;;		line 2204 in file "usb_device.c"
 11585 ;; Parameters:    Size  Location     Type
 11586 ;;		None
 11587 ;; Auto vars:     Size  Location     Type
 11588 ;;		None
 11589 ;; Return value:  Size  Location     Type
 11590 ;;                  1    wreg      void 
 11591 ;; Registers used:
 11592 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11593 ;; Tracked objects:
 11594 ;;		On entry : 0/0
 11595 ;;		On exit  : 0/0
 11596 ;;		Unchanged: 0/0
 11597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11598 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11600 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11601 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11602 ;;Total ram usage:        1 bytes
 11603 ;; Hardware stack levels used:    1
 11604 ;; This function calls:
 11605 ;;		Nothing
 11606 ;; This function is called by:
 11607 ;;		_USBDeviceTasks
 11608 ;; This function uses a non-reentrant model
 11609 ;;
 11610                           
 11611                           	psect	text54
 11612  008430                     __ptext54:
 11613                           	opt stack 0
 11614  008430                     _USBStallHandler:
 11615                           	opt stack 29
 11616                           
 11617                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 11618                           
 11619                           ;incstack = 0
 11620  008430  010F               	movlb	15	; () banked
 11621  008432  A126               	btfss	38,0,b	;volatile
 11622  008434  D01D               	goto	l295
 11623                           
 11624                           ; BSR set to: 15
 11625                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 11626  008436  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11627  00843A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11628  00843E  0E80               	movlw	128
 11629  008440  18DE               	xorwf	postinc2,w,c
 11630  008442  A4D8               	btfss	status,2,c
 11631  008444  D014               	goto	l296
 11632                           
 11633                           ; BSR set to: 15
 11634  008446  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 11635  00844A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 11636  00844E  0E84               	movlw	132
 11637  008450  18DE               	xorwf	postinc2,w,c
 11638  008452  A4D8               	btfss	status,2,c
 11639  008454  D00C               	goto	l296
 11640                           
 11641                           ; BSR set to: 15
 11642                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 11643  008456  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11644  00845A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11645  00845E  0E0C               	movlw	12
 11646  008460  6EDF               	movwf	indf2,c
 11647                           
 11648                           ; BSR set to: 15
 11649                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 11650  008462  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 11651  008466  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 11652  00846A  0E00               	movlw	0
 11653  00846C  8EDB               	bsf	plusw2,7,c
 11654  00846E                     l296:
 11655                           
 11656                           ; BSR set to: 15
 11657                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 11658                           
 11659                           ; BSR set to: 15
 11660  00846E  9126               	bcf	38,0,b	;volatile
 11661  008470                     l295:
 11662                           
 11663                           ; BSR set to: 15
 11664                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 11665  008470  9A62               	bcf	3938,5,c	;volatile
 11666                           
 11667                           ; BSR set to: 15
 11668  008472  0012               	return		;funcret
 11669  008474                     __end_of_USBStallHandler:
 11670                           	opt stack 0
 11671                           tblptru	equ	0xFF8
 11672                           tblptrh	equ	0xFF7
 11673                           tblptrl	equ	0xFF6
 11674                           tablat	equ	0xFF5
 11675                           prodh	equ	0xFF4
 11676                           prodl	equ	0xFF3
 11677                           intcon	equ	0xFF2
 11678                           intcon2	equ	0xFF1
 11679                           intcon3	equ	0xFF0
 11680                           postinc0	equ	0xFEE
 11681                           wreg	equ	0xFE8
 11682                           indf1	equ	0xFE7
 11683                           postdec1	equ	0xFE5
 11684                           plusw1	equ	0xFE3
 11685                           fsr1h	equ	0xFE2
 11686                           fsr1l	equ	0xFE1
 11687                           indf2	equ	0xFDF
 11688                           postinc2	equ	0xFDE
 11689                           postdec2	equ	0xFDD
 11690                           plusw2	equ	0xFDB
 11691                           fsr2h	equ	0xFDA
 11692                           fsr2l	equ	0xFD9
 11693                           status	equ	0xFD8
 11694                           
 11695 ;; *************** function _USBIncrement1msInternalTimers *****************
 11696 ;; Defined at:
 11697 ;;		line 3027 in file "usb_device.c"
 11698 ;; Parameters:    Size  Location     Type
 11699 ;;		None
 11700 ;; Auto vars:     Size  Location     Type
 11701 ;;		None
 11702 ;; Return value:  Size  Location     Type
 11703 ;;                  1    wreg      void 
 11704 ;; Registers used:
 11705 ;;		wreg, status,2, status,0
 11706 ;; Tracked objects:
 11707 ;;		On entry : 0/0
 11708 ;;		On exit  : 0/0
 11709 ;;		Unchanged: 0/0
 11710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11711 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11712 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11713 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11714 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11715 ;;Total ram usage:        0 bytes
 11716 ;; Hardware stack levels used:    1
 11717 ;; This function calls:
 11718 ;;		Nothing
 11719 ;; This function is called by:
 11720 ;;		_USBDeviceTasks
 11721 ;; This function uses a non-reentrant model
 11722 ;;
 11723                           
 11724                           	psect	text55
 11725  008D24                     __ptext55:
 11726                           	opt stack 0
 11727  008D24                     _USBIncrement1msInternalTimers:
 11728                           	opt stack 29
 11729                           
 11730                           ;usb_device.c: 3035: USB1msTickCount++;
 11731                           
 11732                           ; BSR set to: 15
 11733                           ;incstack = 0
 11734  008D24  0E01               	movlw	1
 11735  008D26  0101               	movlb	1	; () banked
 11736  008D28  2762               	addwf	_USB1msTickCount& (0+255),f,b
 11737  008D2A  0E00               	movlw	0
 11738  008D2C  2363               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 11739  008D2E  2364               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 11740  008D30  2365               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 11741                           
 11742                           ; BSR set to: 1
 11743                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 11744  008D32  5192               	movf	_USBBusIsSuspended& (0+255),w,b
 11745  008D34  A4D8               	btfss	status,2,c
 11746  008D36  0012               	return	
 11747                           
 11748                           ; BSR set to: 1
 11749                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 11750  008D38  2B90               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 11751                           
 11752                           ; BSR set to: 1
 11753                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 11754  008D3A  5190               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 11755  008D3C  A4D8               	btfss	status,2,c
 11756  008D3E  0012               	return	
 11757                           
 11758                           ; BSR set to: 1
 11759                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 11760  008D40  6990               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 11761                           
 11762                           ; BSR set to: 1
 11763  008D42  0012               	return	
 11764  008D44                     __end_of_USBIncrement1msInternalTimers:
 11765                           	opt stack 0
 11766                           tblptru	equ	0xFF8
 11767                           tblptrh	equ	0xFF7
 11768                           tblptrl	equ	0xFF6
 11769                           tablat	equ	0xFF5
 11770                           prodh	equ	0xFF4
 11771                           prodl	equ	0xFF3
 11772                           intcon	equ	0xFF2
 11773                           intcon2	equ	0xFF1
 11774                           intcon3	equ	0xFF0
 11775                           postinc0	equ	0xFEE
 11776                           wreg	equ	0xFE8
 11777                           indf1	equ	0xFE7
 11778                           postdec1	equ	0xFE5
 11779                           plusw1	equ	0xFE3
 11780                           fsr1h	equ	0xFE2
 11781                           fsr1l	equ	0xFE1
 11782                           indf2	equ	0xFDF
 11783                           postinc2	equ	0xFDE
 11784                           postdec2	equ	0xFDD
 11785                           plusw2	equ	0xFDB
 11786                           fsr2h	equ	0xFDA
 11787                           fsr2l	equ	0xFD9
 11788                           status	equ	0xFD8
 11789                           
 11790 ;; *************** function _USBDeviceInit *****************
 11791 ;; Defined at:
 11792 ;;		line 277 in file "usb_device.c"
 11793 ;; Parameters:    Size  Location     Type
 11794 ;;		None
 11795 ;; Auto vars:     Size  Location     Type
 11796 ;;  i               1    8[COMRAM] unsigned char 
 11797 ;; Return value:  Size  Location     Type
 11798 ;;                  1    wreg      void 
 11799 ;; Registers used:
 11800 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 11801 ;; Tracked objects:
 11802 ;;		On entry : 0/0
 11803 ;;		On exit  : 0/0
 11804 ;;		Unchanged: 0/0
 11805 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11806 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11807 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11808 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11809 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11810 ;;Total ram usage:        1 bytes
 11811 ;; Hardware stack levels used:    1
 11812 ;; Hardware stack levels required when called:    1
 11813 ;; This function calls:
 11814 ;;		_memset
 11815 ;; This function is called by:
 11816 ;;		_USBDeviceTasks
 11817 ;;		_main
 11818 ;; This function uses a non-reentrant model
 11819 ;;
 11820                           
 11821                           	psect	text56
 11822  003E98                     __ptext56:
 11823                           	opt stack 0
 11824  003E98                     _USBDeviceInit:
 11825                           	opt stack 28
 11826                           
 11827                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 11828                           
 11829                           ; BSR set to: 1
 11830                           ;incstack = 0
 11831  003E98  98A0               	bcf	4000,4,c	;volatile
 11832                           
 11833                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 11834  003E9A  0E00               	movlw	0
 11835  003E9C  6E63               	movwf	3939,c	;volatile
 11836                           
 11837                           ;usb_device.c: 291: {UIR = 0;};
 11838  003E9E  0E00               	movlw	0
 11839  003EA0  6E62               	movwf	3938,c	;volatile
 11840                           
 11841                           ;usb_device.c: 294: UEP0 = 0;
 11842  003EA2  0E00               	movlw	0
 11843  003EA4  010F               	movlb	15	; () banked
 11844  003EA6  6F26               	movwf	38,b	;volatile
 11845                           
 11846                           ; BSR set to: 15
 11847                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 11848  003EA8  0E27               	movlw	39
 11849  003EAA  6E01               	movwf	memset@p1,c
 11850  003EAC  0E0F               	movlw	15
 11851  003EAE  6E02               	movwf	memset@p1+1,c
 11852  003EB0  0E00               	movlw	0
 11853  003EB2  6E04               	movwf	memset@c+1,c
 11854  003EB4  0E00               	movlw	0
 11855  003EB6  6E03               	movwf	memset@c,c
 11856  003EB8  0E00               	movlw	0
 11857  003EBA  6E06               	movwf	memset@n+1,c
 11858  003EBC  0E02               	movlw	2
 11859  003EBE  6E05               	movwf	memset@n,c
 11860  003EC0  EC3B  F045         	call	_memset	;wreg free
 11861                           
 11862                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 11863  003EC4  0E16               	movlw	22
 11864  003EC6  010F               	movlb	15	; () banked
 11865  003EC8  6F39               	movwf	57,b	;volatile
 11866                           
 11867                           ; BSR set to: 15
 11868  003ECA  0E9F               	movlw	159
 11869  003ECC  6F37               	movwf	55,b	;volatile
 11870                           
 11871                           ; BSR set to: 15
 11872  003ECE  0E7B               	movlw	123
 11873  003ED0  6F36               	movwf	54,b	;volatile
 11874                           
 11875                           ; BSR set to: 15
 11876                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 11877  003ED2  0E00               	movlw	0
 11878  003ED4  6E09               	movwf	USBDeviceInit@i,c
 11879  003ED6                     l14843:
 11880                           
 11881                           ; BSR set to: 15
 11882  003ED6  0E0B               	movlw	11
 11883  003ED8  6409               	cpfsgt	USBDeviceInit@i,c
 11884  003EDA  D001               	goto	l139
 11885  003EDC  D00E               	goto	u11740
 11886  003EDE                     l139:
 11887                           
 11888                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 11889                           
 11890                           ; BSR set to: 15
 11891  003EDE  5009               	movf	USBDeviceInit@i,w,c
 11892  003EE0  0D04               	mullw	4
 11893  003EE2  0E00               	movlw	0
 11894  003EE4  24F3               	addwf	prodl,w,c
 11895  003EE6  6ED9               	movwf	fsr2l,c
 11896  003EE8  0E0D               	movlw	13
 11897  003EEA  20F4               	addwfc	prodh,w,c
 11898  003EEC  6EDA               	movwf	fsr2h,c
 11899  003EEE  6ADE               	clrf	postinc2,c
 11900  003EF0  6ADE               	clrf	postinc2,c
 11901  003EF2  6ADE               	clrf	postinc2,c
 11902  003EF4  6ADD               	clrf	postdec2,c
 11903  003EF6  2A09               	incf	USBDeviceInit@i,f,c
 11904  003EF8  D7EE               	goto	l14843
 11905  003EFA                     u11740:
 11906                           
 11907                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 11908  003EFA  8C65               	bsf	3941,6,c	;volatile
 11909                           
 11910                           ;usb_device.c: 316: UADDR = 0x00;
 11911  003EFC  0E00               	movlw	0
 11912  003EFE  010F               	movlb	15	; () banked
 11913  003F00  6F38               	movwf	56,b	;volatile
 11914                           
 11915                           ; BSR set to: 15
 11916                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 11917  003F02  9865               	bcf	3941,4,c	;volatile
 11918                           
 11919                           ; BSR set to: 15
 11920                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 11921  003F04  9C65               	bcf	3941,6,c	;volatile
 11922  003F06                     
 11923                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 11924                           
 11925                           ; BSR set to: 15
 11926  003F06  9662               	bcf	3938,3,c	;volatile
 11927                           
 11928                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 11929  003F08  0E00               	movlw	0
 11930  003F0A  0100               	movlb	0	; () banked
 11931  003F0C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 11932                           
 11933                           ; BSR set to: 0
 11934                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 11935  003F0E  0E00               	movlw	0
 11936  003F10  0101               	movlb	1	; () banked
 11937  003F12  6F34               	movwf	(_outPipes+3)& (0+255),b
 11938                           
 11939                           ; BSR set to: 1
 11940                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 11941  003F14  0E00               	movlw	0
 11942  003F16  6F36               	movwf	(_outPipes+5)& (0+255),b
 11943  003F18  0E00               	movlw	0
 11944  003F1A  6F35               	movwf	(_outPipes+4)& (0+255),b
 11945                           
 11946                           ; BSR set to: 1
 11947                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 11948  003F1C  B662               	btfsc	3938,3,c	;volatile
 11949  003F1E  D7F3               	goto	l141
 11950                           
 11951                           ; BSR set to: 1
 11952                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 11953                           
 11954                           ; BSR set to: 1
 11955  003F20  0E01               	movlw	1
 11956  003F22  0100               	movlb	0	; () banked
 11957  003F24  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 11958                           
 11959                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 11960  003F26  0E01               	movlw	1
 11961  003F28  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 11962                           
 11963                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 11964  003F2A  0E00               	movlw	0
 11965  003F2C  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 11966                           
 11967                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 11968  003F2E  0E00               	movlw	0
 11969  003F30  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 11970                           
 11971                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 11972  003F32  0E00               	movlw	0
 11973  003F34  0101               	movlb	1	; () banked
 11974  003F36  6F92               	movwf	_USBBusIsSuspended& (0+255),b
 11975                           
 11976                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 11977  003F38  0E00               	movlw	0
 11978  003F3A  6E09               	movwf	USBDeviceInit@i,c
 11979  003F3C                     l14871:
 11980                           
 11981                           ; BSR set to: 1
 11982  003F3C  0E02               	movlw	2
 11983  003F3E  6409               	cpfsgt	USBDeviceInit@i,c
 11984  003F40  D001               	goto	l143
 11985  003F42  D02E               	goto	u11770
 11986  003F44                     l143:
 11987                           
 11988                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 11989                           
 11990                           ; BSR set to: 1
 11991  003F44  5009               	movf	USBDeviceInit@i,w,c
 11992  003F46  0D02               	mullw	2
 11993  003F48  0ED1               	movlw	low _pBDTEntryIn
 11994  003F4A  24F3               	addwf	prodl,w,c
 11995  003F4C  6ED9               	movwf	fsr2l,c
 11996  003F4E  0E00               	movlw	high _pBDTEntryIn
 11997  003F50  20F4               	addwfc	prodh,w,c
 11998  003F52  6EDA               	movwf	fsr2h,c
 11999  003F54  0E00               	movlw	0
 12000  003F56  6EDE               	movwf	postinc2,c
 12001  003F58  0E00               	movlw	0
 12002  003F5A  6EDD               	movwf	postdec2,c
 12003                           
 12004                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 12005  003F5C  5009               	movf	USBDeviceInit@i,w,c
 12006  003F5E  0D02               	mullw	2
 12007  003F60  0E40               	movlw	low _pBDTEntryOut
 12008  003F62  24F3               	addwf	prodl,w,c
 12009  003F64  6ED9               	movwf	fsr2l,c
 12010  003F66  0E01               	movlw	high _pBDTEntryOut
 12011  003F68  20F4               	addwfc	prodh,w,c
 12012  003F6A  6EDA               	movwf	fsr2h,c
 12013  003F6C  0E00               	movlw	0
 12014  003F6E  6EDE               	movwf	postinc2,c
 12015  003F70  0E00               	movlw	0
 12016  003F72  6EDD               	movwf	postdec2,c
 12017                           
 12018                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 12019  003F74  5009               	movf	USBDeviceInit@i,w,c
 12020  003F76  0D01               	mullw	1
 12021  003F78  0E6F               	movlw	low _ep_data_in
 12022  003F7A  24F3               	addwf	prodl,w,c
 12023  003F7C  6ED9               	movwf	fsr2l,c
 12024  003F7E  0E01               	movlw	high _ep_data_in
 12025  003F80  20F4               	addwfc	prodh,w,c
 12026  003F82  6EDA               	movwf	fsr2h,c
 12027  003F84  0E00               	movlw	0
 12028  003F86  6EDF               	movwf	indf2,c
 12029                           
 12030                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 12031  003F88  5009               	movf	USBDeviceInit@i,w,c
 12032  003F8A  0D01               	mullw	1
 12033  003F8C  0E6C               	movlw	low _ep_data_out
 12034  003F8E  24F3               	addwf	prodl,w,c
 12035  003F90  6ED9               	movwf	fsr2l,c
 12036  003F92  0E01               	movlw	high _ep_data_out
 12037  003F94  20F4               	addwfc	prodh,w,c
 12038  003F96  6EDA               	movwf	fsr2h,c
 12039  003F98  0E00               	movlw	0
 12040  003F9A  6EDF               	movwf	indf2,c
 12041  003F9C  2A09               	incf	USBDeviceInit@i,f,c
 12042  003F9E  D7CE               	goto	l14871
 12043  003FA0                     u11770:
 12044                           
 12045                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 12046  003FA0  0E08               	movlw	8
 12047  003FA2  0100               	movlb	0	; () banked
 12048  003FA4  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12049  003FA6  0E0D               	movlw	13
 12050  003FA8  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12051                           
 12052                           ; BSR set to: 0
 12053                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 12054  003FAA  0E16               	movlw	22
 12055  003FAC  010F               	movlb	15	; () banked
 12056  003FAE  6F26               	movwf	38,b	;volatile
 12057                           
 12058                           ; BSR set to: 15
 12059                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 12060  003FB0  0E0D               	movlw	13
 12061  003FB2  010D               	movlb	13	; () banked
 12062  003FB4  6F03               	movwf	3,b	;volatile
 12063  003FB6  0E30               	movlw	48
 12064  003FB8  6F02               	movwf	2,b	;volatile
 12065                           
 12066                           ; BSR set to: 13
 12067                           ;usb_device.c: 359: BDT[0].CNT = 8;
 12068  003FBA  0E08               	movlw	8
 12069  003FBC  6F01               	movwf	1,b	;volatile
 12070                           
 12071                           ; BSR set to: 13
 12072                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 12073  003FBE  0E04               	movlw	4
 12074  003FC0  6F00               	movwf	0,b	;volatile
 12075                           
 12076                           ; BSR set to: 13
 12077                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 12078  003FC2  8F00               	bsf	0,7,b	;volatile
 12079                           
 12080                           ; BSR set to: 13
 12081                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 12082  003FC4  0E00               	movlw	0
 12083  003FC6  0100               	movlb	0	; () banked
 12084  003FC8  6FFE               	movwf	_USBActiveConfiguration& (0+255),b
 12085                           
 12086                           ; BSR set to: 0
 12087                           ;usb_device.c: 366: USB1msTickCount = 0;
 12088  003FCA  0E00               	movlw	0
 12089  003FCC  0101               	movlb	1	; () banked
 12090  003FCE  6F62               	movwf	_USB1msTickCount& (0+255),b
 12091  003FD0  0E00               	movlw	0
 12092  003FD2  6F63               	movwf	(_USB1msTickCount+1)& (0+255),b
 12093  003FD4  0E00               	movlw	0
 12094  003FD6  6F64               	movwf	(_USB1msTickCount+2)& (0+255),b
 12095  003FD8  0E00               	movlw	0
 12096  003FDA  6F65               	movwf	(_USB1msTickCount+3)& (0+255),b
 12097                           
 12098                           ; BSR set to: 1
 12099                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 12100  003FDC  0E00               	movlw	0
 12101  003FDE  6F90               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 12102                           
 12103                           ; BSR set to: 1
 12104                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 12105  003FE0  0E00               	movlw	0
 12106  003FE2  0100               	movlb	0	; () banked
 12107  003FE4  6FF8               	movwf	_USBDeviceState& (0+255),b
 12108                           
 12109                           ; BSR set to: 0
 12110  003FE6  0012               	return		;funcret
 12111  003FE8                     __end_of_USBDeviceInit:
 12112                           	opt stack 0
 12113                           tblptru	equ	0xFF8
 12114                           tblptrh	equ	0xFF7
 12115                           tblptrl	equ	0xFF6
 12116                           tablat	equ	0xFF5
 12117                           prodh	equ	0xFF4
 12118                           prodl	equ	0xFF3
 12119                           intcon	equ	0xFF2
 12120                           intcon2	equ	0xFF1
 12121                           intcon3	equ	0xFF0
 12122                           postinc0	equ	0xFEE
 12123                           wreg	equ	0xFE8
 12124                           indf1	equ	0xFE7
 12125                           postdec1	equ	0xFE5
 12126                           plusw1	equ	0xFE3
 12127                           fsr1h	equ	0xFE2
 12128                           fsr1l	equ	0xFE1
 12129                           indf2	equ	0xFDF
 12130                           postinc2	equ	0xFDE
 12131                           postdec2	equ	0xFDD
 12132                           plusw2	equ	0xFDB
 12133                           fsr2h	equ	0xFDA
 12134                           fsr2l	equ	0xFD9
 12135                           status	equ	0xFD8
 12136                           
 12137 ;; *************** function _USBCtrlEPService *****************
 12138 ;; Defined at:
 12139 ;;		line 2374 in file "usb_device.c"
 12140 ;; Parameters:    Size  Location     Type
 12141 ;;		None
 12142 ;; Auto vars:     Size  Location     Type
 12143 ;;		None
 12144 ;; Return value:  Size  Location     Type
 12145 ;;                  1    wreg      void 
 12146 ;; Registers used:
 12147 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 12148 ;; Tracked objects:
 12149 ;;		On entry : 0/0
 12150 ;;		On exit  : 0/0
 12151 ;;		Unchanged: 0/0
 12152 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12153 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12154 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12155 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12156 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12157 ;;Total ram usage:        2 bytes
 12158 ;; Hardware stack levels used:    1
 12159 ;; Hardware stack levels required when called:    7
 12160 ;; This function calls:
 12161 ;;		_USBCtrlTrfInHandler
 12162 ;;		_USBCtrlTrfOutHandler
 12163 ;;		_USBCtrlTrfSetupHandler
 12164 ;;		_memcpy
 12165 ;; This function is called by:
 12166 ;;		_USBDeviceTasks
 12167 ;; This function uses a non-reentrant model
 12168 ;;
 12169                           
 12170                           	psect	text57
 12171  006526                     __ptext57:
 12172                           	opt stack 0
 12173  006526                     _USBCtrlEPService:
 12174                           	opt stack 22
 12175                           
 12176                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 12177                           
 12178                           ; BSR set to: 0
 12179                           ;incstack = 0
 12180  006526  0E2D               	movlw	45
 12181  006528  0100               	movlb	0	; () banked
 12182  00652A  6FF3               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 12183                           
 12184                           ; BSR set to: 0
 12185                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 12186  00652C  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12187  006530  0EFD               	movlw	253
 12188  006532  161E               	andwf	??_USBCtrlEPService,f,c
 12189  006534  A4D8               	btfss	status,2,c
 12190  006536  D044               	goto	l309
 12191                           
 12192                           ; BSR set to: 0
 12193                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 12194  006538  C0FD  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 12195  00653C  90D8               	bcf	status,0,c
 12196  00653E  321E               	rrcf	??_USBCtrlEPService,f,c
 12197  006540  0E3F               	movlw	63
 12198  006542  161E               	andwf	??_USBCtrlEPService,f,c
 12199  006544  501E               	movf	??_USBCtrlEPService,w,c
 12200  006546  0D04               	mullw	4
 12201  006548  0E00               	movlw	0
 12202  00654A  24F3               	addwf	prodl,w,c
 12203  00654C  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 12204  00654E  0E0D               	movlw	13
 12205  006550  20F4               	addwfc	prodh,w,c
 12206  006552  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 12207                           
 12208                           ; BSR set to: 0
 12209                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 12210  006554  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 12211  006558  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 12212                           
 12213                           ; BSR set to: 0
 12214                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 12215  00655C  0E04               	movlw	4
 12216  00655E  19E1               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 12217  006560  6FE1               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 12218  006562  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12219  006564  6FE2               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 12220                           
 12221                           ; BSR set to: 0
 12222                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 12223  006566  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 12224  00656A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 12225  00656E  30DF               	rrcf	223,w,c
 12226  006570  32E8               	rrcf	wreg,f,c
 12227  006572  0B0F               	andlw	15
 12228  006574  0A0D               	xorlw	13
 12229  006576  A4D8               	btfss	status,2,c
 12230  006578  D020               	goto	l310
 12231                           
 12232                           ; BSR set to: 0
 12233                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 12234  00657A  0E30               	movlw	48
 12235  00657C  6E01               	movwf	memcpy@d1,c
 12236  00657E  0E0D               	movlw	13
 12237  006580  6E02               	movwf	memcpy@d1+1,c
 12238  006582  EE20 F002          	lfsr	2,2
 12239  006586  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 12240  006588  26D9               	addwf	fsr2l,f,c
 12241  00658A  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 12242  00658C  22DA               	addwfc	fsr2h,f,c
 12243  00658E  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 12244  006592  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 12245  006596  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 12246  00659A  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 12247  00659E  5003               	movf	memcpy@s1,w,c
 12248  0065A0  1004               	iorwf	memcpy@s1+1,w,c
 12249  0065A2  A4D8               	btfss	status,2,c
 12250  0065A4  0E20               	movlw	32
 12251  0065A6  6E05               	movwf	memcpy@s1+2,c
 12252  0065A8  0E00               	movlw	0
 12253  0065AA  6E07               	movwf	memcpy@n+1,c
 12254  0065AC  0E08               	movlw	8
 12255  0065AE  6E06               	movwf	memcpy@n,c
 12256  0065B0  ECDD  F03C         	call	_memcpy	;wreg free
 12257                           
 12258                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 12259  0065B4  ECB4  F036         	call	_USBCtrlTrfSetupHandler	;wreg free
 12260                           
 12261                           ;usb_device.c: 2411: }
 12262  0065B8  0012               	return	
 12263  0065BA                     l310:
 12264                           
 12265                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 12266  0065BA  EC77  F03C         	call	_USBCtrlTrfOutHandler	;wreg free
 12267                           
 12268                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 12269  0065BE  0012               	return	
 12270  0065C0                     l309:
 12271                           
 12272                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 12273  0065C0  0100               	movlb	0	; () banked
 12274  0065C2  51FD               	movf	_USTATcopy& (0+255),w,b
 12275  0065C4  0BFD               	andlw	253
 12276  0065C6  0A04               	xorlw	4
 12277  0065C8  A4D8               	btfss	status,2,c
 12278  0065CA  0012               	return	
 12279                           
 12280                           ; BSR set to: 0
 12281                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 12282  0065CC  EC46  F02F         	call	_USBCtrlTrfInHandler	;wreg free
 12283  0065D0  0012               	return	
 12284  0065D2                     __end_of_USBCtrlEPService:
 12285                           	opt stack 0
 12286                           tblptru	equ	0xFF8
 12287                           tblptrh	equ	0xFF7
 12288                           tblptrl	equ	0xFF6
 12289                           tablat	equ	0xFF5
 12290                           prodh	equ	0xFF4
 12291                           prodl	equ	0xFF3
 12292                           intcon	equ	0xFF2
 12293                           intcon2	equ	0xFF1
 12294                           intcon3	equ	0xFF0
 12295                           postinc0	equ	0xFEE
 12296                           wreg	equ	0xFE8
 12297                           indf1	equ	0xFE7
 12298                           postdec1	equ	0xFE5
 12299                           plusw1	equ	0xFE3
 12300                           fsr1h	equ	0xFE2
 12301                           fsr1l	equ	0xFE1
 12302                           indf2	equ	0xFDF
 12303                           postinc2	equ	0xFDE
 12304                           postdec2	equ	0xFDD
 12305                           plusw2	equ	0xFDB
 12306                           fsr2h	equ	0xFDA
 12307                           fsr2l	equ	0xFD9
 12308                           status	equ	0xFD8
 12309                           
 12310 ;; *************** function _USBCtrlTrfSetupHandler *****************
 12311 ;; Defined at:
 12312 ;;		line 2467 in file "usb_device.c"
 12313 ;; Parameters:    Size  Location     Type
 12314 ;;		None
 12315 ;; Auto vars:     Size  Location     Type
 12316 ;;		None
 12317 ;; Return value:  Size  Location     Type
 12318 ;;                  1    wreg      void 
 12319 ;; Registers used:
 12320 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12321 ;; Tracked objects:
 12322 ;;		On entry : 0/0
 12323 ;;		On exit  : 0/0
 12324 ;;		Unchanged: 0/0
 12325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12326 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12327 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12329 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12330 ;;Total ram usage:        0 bytes
 12331 ;; Hardware stack levels used:    1
 12332 ;; Hardware stack levels required when called:    6
 12333 ;; This function calls:
 12334 ;;		_USBCheckStdRequest
 12335 ;;		_USBCtrlEPServiceComplete
 12336 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12337 ;; This function is called by:
 12338 ;;		_USBCtrlEPService
 12339 ;; This function uses a non-reentrant model
 12340 ;;
 12341                           
 12342                           	psect	text58
 12343  006D68                     __ptext58:
 12344                           	opt stack 0
 12345  006D68                     _USBCtrlTrfSetupHandler:
 12346                           	opt stack 22
 12347                           
 12348                           ;usb_device.c: 2472: shortPacketStatus = 0;
 12349                           
 12350                           ;incstack = 0
 12351  006D68  0E00               	movlw	0
 12352  006D6A  0100               	movlb	0	; () banked
 12353  006D6C  6FF7               	movwf	_shortPacketStatus& (0+255),b
 12354                           
 12355                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 12356  006D6E  0E00               	movlw	0
 12357  006D70  6FF2               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 12358                           
 12359                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 12360  006D72  0E00               	movlw	0
 12361  006D74  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12362                           
 12363                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 12364  006D76  0E00               	movlw	0
 12365  006D78  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12366                           
 12367                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 12368  006D7A  0E00               	movlw	0
 12369  006D7C  0101               	movlb	1	; () banked
 12370  006D7E  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 12371                           
 12372                           ;usb_device.c: 2477: controlTransferState = 0;
 12373  006D80  0E00               	movlw	0
 12374  006D82  0100               	movlb	0	; () banked
 12375  006D84  6FF6               	movwf	_controlTransferState& (0+255),b
 12376                           
 12377                           ; BSR set to: 0
 12378                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12379  006D86  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12380  006D8A  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12381  006D8E  0E7F               	movlw	127
 12382  006D90  16DF               	andwf	indf2,f,c
 12383                           
 12384                           ; BSR set to: 0
 12385                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12386  006D92  0E04               	movlw	4
 12387  006D94  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12388  006D96  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12389  006D98  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12390  006D9A  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12391                           
 12392                           ; BSR set to: 0
 12393                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 12394  006D9C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12395  006DA0  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12396  006DA4  0E7F               	movlw	127
 12397  006DA6  16DF               	andwf	indf2,f,c
 12398                           
 12399                           ; BSR set to: 0
 12400                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 12401  006DA8  0E04               	movlw	4
 12402  006DAA  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 12403  006DAC  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 12404  006DAE  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12405  006DB0  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 12406                           
 12407                           ; BSR set to: 0
 12408                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 12409  006DB2  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12410  006DB6  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12411  006DBA  0E7F               	movlw	127
 12412  006DBC  16DF               	andwf	indf2,f,c
 12413                           
 12414                           ; BSR set to: 0
 12415                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 12416  006DBE  0E00               	movlw	0
 12417  006DC0  6FCE               	movwf	(_inPipes+3)& (0+255),b
 12418                           
 12419                           ; BSR set to: 0
 12420                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 12421  006DC2  0E00               	movlw	0
 12422  006DC4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 12423  006DC6  0E00               	movlw	0
 12424  006DC8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 12425                           
 12426                           ; BSR set to: 0
 12427                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 12428  006DCA  0E00               	movlw	0
 12429  006DCC  0101               	movlb	1	; () banked
 12430  006DCE  6F34               	movwf	(_outPipes+3)& (0+255),b
 12431                           
 12432                           ; BSR set to: 1
 12433                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 12434  006DD0  0E00               	movlw	0
 12435  006DD2  6F36               	movwf	(_outPipes+5)& (0+255),b
 12436  006DD4  0E00               	movlw	0
 12437  006DD6  6F35               	movwf	(_outPipes+4)& (0+255),b
 12438                           
 12439                           ; BSR set to: 1
 12440                           ;usb_device.c: 2502: USBCheckStdRequest();
 12441  006DD8  ECDA  F028         	call	_USBCheckStdRequest	;wreg free
 12442                           
 12443                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 12444  006DDC  0E00               	movlw	0
 12445  006DDE  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 12446  006DE0  0E03               	movlw	3
 12447  006DE2  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 12448  006DE4  0E00               	movlw	0
 12449  006DE6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 12450  006DE8  0E00               	movlw	0
 12451  006DEA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 12452  006DEC  0E00               	movlw	0
 12453  006DEE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 12454  006DF0  0E00               	movlw	0
 12455  006DF2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 12456  006DF4  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 12457                           
 12458                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 12459  006DF8  EC73  F026         	call	_USBCtrlEPServiceComplete	;wreg free
 12460  006DFC  0012               	return		;funcret
 12461  006DFE                     __end_of_USBCtrlTrfSetupHandler:
 12462                           	opt stack 0
 12463                           tblptru	equ	0xFF8
 12464                           tblptrh	equ	0xFF7
 12465                           tblptrl	equ	0xFF6
 12466                           tablat	equ	0xFF5
 12467                           prodh	equ	0xFF4
 12468                           prodl	equ	0xFF3
 12469                           intcon	equ	0xFF2
 12470                           intcon2	equ	0xFF1
 12471                           intcon3	equ	0xFF0
 12472                           postinc0	equ	0xFEE
 12473                           wreg	equ	0xFE8
 12474                           indf1	equ	0xFE7
 12475                           postdec1	equ	0xFE5
 12476                           plusw1	equ	0xFE3
 12477                           fsr1h	equ	0xFE2
 12478                           fsr1l	equ	0xFE1
 12479                           indf2	equ	0xFDF
 12480                           postinc2	equ	0xFDE
 12481                           postdec2	equ	0xFDD
 12482                           plusw2	equ	0xFDB
 12483                           fsr2h	equ	0xFDA
 12484                           fsr2l	equ	0xFD9
 12485                           status	equ	0xFD8
 12486                           
 12487 ;; *************** function _USBCtrlEPServiceComplete *****************
 12488 ;; Defined at:
 12489 ;;		line 1618 in file "usb_device.c"
 12490 ;; Parameters:    Size  Location     Type
 12491 ;;		None
 12492 ;; Auto vars:     Size  Location     Type
 12493 ;;		None
 12494 ;; Return value:  Size  Location     Type
 12495 ;;                  1    wreg      void 
 12496 ;; Registers used:
 12497 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12498 ;; Tracked objects:
 12499 ;;		On entry : 0/0
 12500 ;;		On exit  : 0/0
 12501 ;;		Unchanged: 0/0
 12502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12503 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12504 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12505 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12506 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12507 ;;Total ram usage:        0 bytes
 12508 ;; Hardware stack levels used:    1
 12509 ;; Hardware stack levels required when called:    2
 12510 ;; This function calls:
 12511 ;;		_USBCtrlEPAllowDataStage
 12512 ;;		_USBCtrlEPAllowStatusStage
 12513 ;; This function is called by:
 12514 ;;		_USBCtrlTrfSetupHandler
 12515 ;; This function uses a non-reentrant model
 12516 ;;
 12517                           
 12518                           	psect	text59
 12519  004CE6                     __ptext59:
 12520                           	opt stack 0
 12521  004CE6                     _USBCtrlEPServiceComplete:
 12522                           	opt stack 25
 12523                           
 12524                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 12525                           
 12526                           ;incstack = 0
 12527  004CE6  9865               	bcf	3941,4,c	;volatile
 12528                           
 12529                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 12530  004CE8  0100               	movlb	0	; () banked
 12531  004CEA  BFCE               	btfsc	(_inPipes+3)& (0+255),7,b
 12532  004CEC  D03C               	goto	l219
 12533                           
 12534                           ; BSR set to: 0
 12535                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 12536  004CEE  0101               	movlb	1	; () banked
 12537  004CF0  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 12538  004CF2  D00D               	goto	l220
 12539                           
 12540                           ; BSR set to: 1
 12541                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 12542  004CF4  0E02               	movlw	2
 12543  004CF6  0100               	movlb	0	; () banked
 12544  004CF8  6FF6               	movwf	_controlTransferState& (0+255),b
 12545                           
 12546                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 12547  004CFA  51EE               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 12548  004CFC  B4D8               	btfsc	status,2,c
 12549                           
 12550                           ; BSR set to: 0
 12551                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 12552  004CFE  EC2D  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12553                           
 12554                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 12555  004D02  0E00               	movlw	0
 12556  004D04  0100               	movlb	0	; () banked
 12557  004D06  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12558                           
 12559                           ; BSR set to: 0
 12560                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 12561  004D08  0E00               	movlw	0
 12562  004D0A  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12563                           
 12564                           ;usb_device.c: 1654: }
 12565  004D0C  0012               	return	
 12566  004D0E                     l220:
 12567                           
 12568                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 12569                           
 12570                           ; BSR set to: 0
 12571  004D0E  0100               	movlb	0	; () banked
 12572  004D10  EE20 F001          	lfsr	2,1
 12573  004D14  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12574  004D16  26D9               	addwf	fsr2l,f,c
 12575  004D18  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12576  004D1A  22DA               	addwfc	fsr2h,f,c
 12577  004D1C  0E08               	movlw	8
 12578  004D1E  6EDF               	movwf	indf2,c
 12579                           
 12580                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12581  004D20  EE20 F002          	lfsr	2,2
 12582  004D24  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12583  004D26  26D9               	addwf	fsr2l,f,c
 12584  004D28  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12585  004D2A  22DA               	addwfc	fsr2h,f,c
 12586  004D2C  0E30               	movlw	48
 12587  004D2E  6EDE               	movwf	postinc2,c
 12588  004D30  0E0D               	movlw	13
 12589  004D32  6EDD               	movwf	postdec2,c
 12590                           
 12591                           ; BSR set to: 0
 12592                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 12593  004D34  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12594  004D38  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12595  004D3C  0E0C               	movlw	12
 12596  004D3E  6EDF               	movwf	indf2,c
 12597                           
 12598                           ; BSR set to: 0
 12599                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12600  004D40  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12601  004D44  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12602  004D48  0E00               	movlw	0
 12603  004D4A  8EDB               	bsf	plusw2,7,c
 12604                           
 12605                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 12606  004D4C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12607  004D50  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12608  004D54  0E04               	movlw	4
 12609  004D56  6EDF               	movwf	indf2,c
 12610                           
 12611                           ; BSR set to: 0
 12612                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12613  004D58  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12614  004D5C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12615  004D60  0E00               	movlw	0
 12616  004D62  8EDB               	bsf	plusw2,7,c
 12617                           
 12618                           ; BSR set to: 0
 12619                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 12620  004D64  0012               	return	
 12621  004D66                     l219:
 12622                           
 12623                           ; BSR set to: 0
 12624                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 12625  004D66  010D               	movlb	13	; () banked
 12626  004D68  AF30               	btfss	48,7,b	;volatile
 12627  004D6A  D012               	goto	l224
 12628                           
 12629                           ; BSR set to: 13
 12630                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 12631  004D6C  0E01               	movlw	1
 12632  004D6E  0100               	movlb	0	; () banked
 12633  004D70  6FF6               	movwf	_controlTransferState& (0+255),b
 12634                           
 12635                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 12636  004D72  51EF               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 12637  004D74  B4D8               	btfsc	status,2,c
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 12641  004D76  EC2D  F035         	call	_USBCtrlEPAllowDataStage	;wreg free
 12642                           
 12643                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 12644  004D7A  0E00               	movlw	0
 12645  004D7C  0100               	movlb	0	; () banked
 12646  004D7E  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12647                           
 12648                           ; BSR set to: 0
 12649                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 12650  004D80  0E00               	movlw	0
 12651  004D82  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12652                           
 12653                           ; BSR set to: 0
 12654                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 12655  004D84  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12656  004D86  A4D8               	btfss	status,2,c
 12657  004D88  0012               	return	
 12658                           
 12659                           ; BSR set to: 0
 12660                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 12661  004D8A  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12662                           
 12663                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 12664  004D8E  0012               	return	
 12665  004D90                     l224:
 12666                           
 12667                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 12668  004D90  0E02               	movlw	2
 12669  004D92  0100               	movlb	0	; () banked
 12670  004D94  6FF6               	movwf	_controlTransferState& (0+255),b
 12671                           
 12672                           ; BSR set to: 0
 12673                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 12674  004D96  EE20 F001          	lfsr	2,1
 12675  004D9A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12676  004D9C  26D9               	addwf	fsr2l,f,c
 12677  004D9E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12678  004DA0  22DA               	addwfc	fsr2h,f,c
 12679  004DA2  0E08               	movlw	8
 12680  004DA4  6EDF               	movwf	indf2,c
 12681                           
 12682                           ; BSR set to: 0
 12683                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 12684  004DA6  EE20 F002          	lfsr	2,2
 12685  004DAA  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12686  004DAC  26D9               	addwf	fsr2l,f,c
 12687  004DAE  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12688  004DB0  22DA               	addwfc	fsr2h,f,c
 12689  004DB2  0E30               	movlw	48
 12690  004DB4  6EDE               	movwf	postinc2,c
 12691  004DB6  0E0D               	movlw	13
 12692  004DB8  6EDD               	movwf	postdec2,c
 12693                           
 12694                           ; BSR set to: 0
 12695                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 12696  004DBA  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12697  004DBE  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12698  004DC2  0E04               	movlw	4
 12699  004DC4  6EDF               	movwf	indf2,c
 12700                           
 12701                           ; BSR set to: 0
 12702                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12703  004DC6  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12704  004DCA  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12705  004DCE  0E00               	movlw	0
 12706  004DD0  8EDB               	bsf	plusw2,7,c
 12707                           
 12708                           ; BSR set to: 0
 12709                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 12710  004DD2  0E00               	movlw	0
 12711  004DD4  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 12712                           
 12713                           ; BSR set to: 0
 12714                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 12715  004DD6  0E00               	movlw	0
 12716  004DD8  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 12717                           
 12718                           ; BSR set to: 0
 12719                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 12720  004DDA  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 12721  004DDC  A4D8               	btfss	status,2,c
 12722  004DDE  0012               	return	
 12723                           
 12724                           ; BSR set to: 0
 12725                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 12726  004DE0  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 12727  004DE4  0012               	return	
 12728  004DE6                     __end_of_USBCtrlEPServiceComplete:
 12729                           	opt stack 0
 12730                           tblptru	equ	0xFF8
 12731                           tblptrh	equ	0xFF7
 12732                           tblptrl	equ	0xFF6
 12733                           tablat	equ	0xFF5
 12734                           prodh	equ	0xFF4
 12735                           prodl	equ	0xFF3
 12736                           intcon	equ	0xFF2
 12737                           intcon2	equ	0xFF1
 12738                           intcon3	equ	0xFF0
 12739                           postinc0	equ	0xFEE
 12740                           wreg	equ	0xFE8
 12741                           indf1	equ	0xFE7
 12742                           postdec1	equ	0xFE5
 12743                           plusw1	equ	0xFE3
 12744                           fsr1h	equ	0xFE2
 12745                           fsr1l	equ	0xFE1
 12746                           indf2	equ	0xFDF
 12747                           postinc2	equ	0xFDE
 12748                           postdec2	equ	0xFDD
 12749                           plusw2	equ	0xFDB
 12750                           fsr2h	equ	0xFDA
 12751                           fsr2l	equ	0xFD9
 12752                           status	equ	0xFD8
 12753                           
 12754 ;; *************** function _USBCtrlEPAllowDataStage *****************
 12755 ;; Defined at:
 12756 ;;		line 1490 in file "usb_device.c"
 12757 ;; Parameters:    Size  Location     Type
 12758 ;;		None
 12759 ;; Auto vars:     Size  Location     Type
 12760 ;;		None
 12761 ;; Return value:  Size  Location     Type
 12762 ;;                  1    wreg      void 
 12763 ;; Registers used:
 12764 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 12765 ;; Tracked objects:
 12766 ;;		On entry : 0/0
 12767 ;;		On exit  : 0/0
 12768 ;;		Unchanged: 0/0
 12769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12770 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12771 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12772 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12773 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12774 ;;Total ram usage:        0 bytes
 12775 ;; Hardware stack levels used:    1
 12776 ;; Hardware stack levels required when called:    1
 12777 ;; This function calls:
 12778 ;;		_USBCtrlTrfTxService
 12779 ;; This function is called by:
 12780 ;;		_USBCtrlEPServiceComplete
 12781 ;; This function uses a non-reentrant model
 12782 ;;
 12783                           
 12784                           	psect	text60
 12785  006A5A                     __ptext60:
 12786                           	opt stack 0
 12787  006A5A                     _USBCtrlEPAllowDataStage:
 12788                           	opt stack 25
 12789                           
 12790                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 12791                           
 12792                           ;incstack = 0
 12793  006A5A  0E00               	movlw	0
 12794  006A5C  0100               	movlb	0	; () banked
 12795  006A5E  6FEF               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 12796                           
 12797                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 12798  006A60  0E00               	movlw	0
 12799  006A62  6FEE               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 12800                           
 12801                           ; BSR set to: 0
 12802                           ;usb_device.c: 1495: if(controlTransferState == 2)
 12803  006A64  0E02               	movlw	2
 12804  006A66  19F6               	xorwf	_controlTransferState& (0+255),w,b
 12805  006A68  A4D8               	btfss	status,2,c
 12806  006A6A  D01F               	goto	l208
 12807                           
 12808                           ; BSR set to: 0
 12809                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 12810  006A6C  EE20 F001          	lfsr	2,1
 12811  006A70  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12812  006A72  26D9               	addwf	fsr2l,f,c
 12813  006A74  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12814  006A76  22DA               	addwfc	fsr2h,f,c
 12815  006A78  0E08               	movlw	8
 12816  006A7A  6EDF               	movwf	indf2,c
 12817                           
 12818                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 12819  006A7C  EE20 F002          	lfsr	2,2
 12820  006A80  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 12821  006A82  26D9               	addwf	fsr2l,f,c
 12822  006A84  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 12823  006A86  22DA               	addwfc	fsr2h,f,c
 12824  006A88  0E38               	movlw	56
 12825  006A8A  6EDE               	movwf	postinc2,c
 12826  006A8C  0E0D               	movlw	13
 12827  006A8E  6EDD               	movwf	postdec2,c
 12828                           
 12829                           ; BSR set to: 0
 12830                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 12831  006A90  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12832  006A94  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12833  006A98  0E48               	movlw	72
 12834  006A9A  6EDF               	movwf	indf2,c
 12835                           
 12836                           ; BSR set to: 0
 12837                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 12838  006A9C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 12839  006AA0  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 12840  006AA4  0E00               	movlw	0
 12841  006AA6  8EDB               	bsf	plusw2,7,c
 12842                           
 12843                           ;usb_device.c: 1502: }
 12844  006AA8  0012               	return	
 12845  006AAA                     l208:
 12846                           
 12847                           ; BSR set to: 0
 12848                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 12849                           
 12850                           ; BSR set to: 0
 12851  006AAA  51CF               	movf	(_inPipes+4)& (0+255),w,b
 12852  006AAC  010D               	movlb	13	; () banked
 12853  006AAE  5D36               	subwf	54,w,b	;volatile
 12854  006AB0  0100               	movlb	0	; () banked
 12855  006AB2  51D0               	movf	(_inPipes+5)& (0+255),w,b
 12856  006AB4  010D               	movlb	13	; () banked
 12857  006AB6  5937               	subwfb	55,w,b	;volatile
 12858  006AB8  B0D8               	btfsc	status,0,c
 12859  006ABA  D004               	goto	l210
 12860                           
 12861                           ; BSR set to: 13
 12862                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 12863  006ABC  CD36 F0CF          	movff	3382,_inPipes+4	;volatile
 12864  006AC0  CD37 F0D0          	movff	3383,_inPipes+5	;volatile
 12865  006AC4                     l210:
 12866                           
 12867                           ; BSR set to: 13
 12868                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 12869                           
 12870                           ; BSR set to: 13
 12871  006AC4  EC3E  F02D         	call	_USBCtrlTrfTxService	;wreg free
 12872                           
 12873                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 12874  006AC8  0100               	movlb	0	; () banked
 12875  006ACA  EE20 F002          	lfsr	2,2
 12876  006ACE  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 12877  006AD0  26D9               	addwf	fsr2l,f,c
 12878  006AD2  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 12879  006AD4  22DA               	addwfc	fsr2h,f,c
 12880  006AD6  0E38               	movlw	56
 12881  006AD8  6EDE               	movwf	postinc2,c
 12882  006ADA  0E0D               	movlw	13
 12883  006ADC  6EDD               	movwf	postdec2,c
 12884                           
 12885                           ; BSR set to: 0
 12886                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 12887  006ADE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12888  006AE2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12889  006AE6  0E48               	movlw	72
 12890  006AE8  6EDF               	movwf	indf2,c
 12891                           
 12892                           ; BSR set to: 0
 12893                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 12894  006AEA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 12895  006AEE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 12896  006AF2  0E00               	movlw	0
 12897  006AF4  8EDB               	bsf	plusw2,7,c
 12898  006AF6  0012               	return	
 12899  006AF8                     __end_of_USBCtrlEPAllowDataStage:
 12900                           	opt stack 0
 12901                           tblptru	equ	0xFF8
 12902                           tblptrh	equ	0xFF7
 12903                           tblptrl	equ	0xFF6
 12904                           tablat	equ	0xFF5
 12905                           prodh	equ	0xFF4
 12906                           prodl	equ	0xFF3
 12907                           intcon	equ	0xFF2
 12908                           intcon2	equ	0xFF1
 12909                           intcon3	equ	0xFF0
 12910                           postinc0	equ	0xFEE
 12911                           wreg	equ	0xFE8
 12912                           indf1	equ	0xFE7
 12913                           postdec1	equ	0xFE5
 12914                           plusw1	equ	0xFE3
 12915                           fsr1h	equ	0xFE2
 12916                           fsr1l	equ	0xFE1
 12917                           indf2	equ	0xFDF
 12918                           postinc2	equ	0xFDE
 12919                           postdec2	equ	0xFDD
 12920                           plusw2	equ	0xFDB
 12921                           fsr2h	equ	0xFDA
 12922                           fsr2l	equ	0xFD9
 12923                           status	equ	0xFD8
 12924                           
 12925 ;; *************** function _USBCheckStdRequest *****************
 12926 ;; Defined at:
 12927 ;;		line 2688 in file "usb_device.c"
 12928 ;; Parameters:    Size  Location     Type
 12929 ;;		None
 12930 ;; Auto vars:     Size  Location     Type
 12931 ;;		None
 12932 ;; Return value:  Size  Location     Type
 12933 ;;                  1    wreg      void 
 12934 ;; Registers used:
 12935 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12936 ;; Tracked objects:
 12937 ;;		On entry : 0/0
 12938 ;;		On exit  : 0/0
 12939 ;;		Unchanged: 0/0
 12940 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12941 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12942 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12943 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12944 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12945 ;;Total ram usage:        0 bytes
 12946 ;; Hardware stack levels used:    1
 12947 ;; Hardware stack levels required when called:    5
 12948 ;; This function calls:
 12949 ;;		_USBStdFeatureReqHandler
 12950 ;;		_USBStdGetDscHandler
 12951 ;;		_USBStdGetStatusHandler
 12952 ;;		_USBStdSetCfgHandler
 12953 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 12954 ;; This function is called by:
 12955 ;;		_USBCtrlTrfSetupHandler
 12956 ;; This function uses a non-reentrant model
 12957 ;;
 12958                           
 12959                           	psect	text61
 12960  0051B4                     __ptext61:
 12961                           	opt stack 0
 12962  0051B4                     _USBCheckStdRequest:
 12963                           	opt stack 22
 12964                           
 12965                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 12966                           
 12967                           ; BSR set to: 0
 12968                           ;incstack = 0
 12969  0051B4  010D               	movlb	13	; () banked
 12970  0051B6  3930               	swapf	48,w,b	;volatile
 12971  0051B8  32E8               	rrcf	wreg,f,c
 12972  0051BA  0B03               	andlw	3
 12973  0051BC  0900               	iorlw	0
 12974  0051BE  A4D8               	btfss	status,2,c
 12975  0051C0  0012               	return	
 12976  0051C2  D047               	goto	l343
 12977  0051C4                     l344:
 12978                           
 12979                           ; BSR set to: 13
 12980                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 12981  0051C4  0100               	movlb	0	; () banked
 12982  0051C6  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 12983                           
 12984                           ; BSR set to: 0
 12985                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 12986  0051C8  0E08               	movlw	8
 12987  0051CA  6FF8               	movwf	_USBDeviceState& (0+255),b
 12988                           
 12989                           ;usb_device.c: 2698: break;
 12990  0051CC  0012               	return	
 12991  0051CE                     
 12992                           ;usb_device.c: 2700: USBStdGetDscHandler();
 12993                           
 12994                           ; BSR set to: 0
 12995  0051CE  EC93  F020         	call	_USBStdGetDscHandler	;wreg free
 12996                           
 12997                           ;usb_device.c: 2701: break;
 12998  0051D2  0012               	return	
 12999  0051D4                     
 13000                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 13001  0051D4  EC4B  F029         	call	_USBStdSetCfgHandler	;wreg free
 13002                           
 13003                           ;usb_device.c: 2704: break;
 13004  0051D8  0012               	return	
 13005  0051DA                     
 13006                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 13007  0051DA  0EFE               	movlw	low _USBActiveConfiguration
 13008  0051DC  0100               	movlb	0	; () banked
 13009  0051DE  6FCB               	movwf	_inPipes& (0+255),b
 13010  0051E0  0E00               	movlw	high _USBActiveConfiguration
 13011  0051E2  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13012                           
 13013                           ; BSR set to: 0
 13014                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13015  0051E4  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13016                           
 13017                           ; BSR set to: 0
 13018                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 13019  0051E6  0E01               	movlw	1
 13020  0051E8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13021                           
 13022                           ; BSR set to: 0
 13023                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 13024  0051EA  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13025                           
 13026                           ;usb_device.c: 2710: break;
 13027  0051EC  0012               	return	
 13028  0051EE                     
 13029                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 13030                           
 13031                           ; BSR set to: 0
 13032  0051EE  ECE9  F032         	call	_USBStdGetStatusHandler	;wreg free
 13033                           
 13034                           ;usb_device.c: 2713: break;
 13035  0051F2  0012               	return	
 13036  0051F4                     
 13037                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 13038  0051F4  ECA4  F00D         	call	_USBStdFeatureReqHandler	;wreg free
 13039                           
 13040                           ;usb_device.c: 2717: break;
 13041  0051F8  0012               	return	
 13042  0051FA                     
 13043                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 13044  0051FA  010D               	movlb	13	; () banked
 13045  0051FC  5134               	movf	52,w,b	;volatile
 13046  0051FE  0D01               	mullw	1
 13047  005200  0EAF               	movlw	low _USBAlternateInterface
 13048  005202  24F3               	addwf	prodl,w,c
 13049  005204  0100               	movlb	0	; () banked
 13050  005206  6FCB               	movwf	_inPipes& (0+255),b
 13051  005208  0E01               	movlw	high _USBAlternateInterface
 13052  00520A  20F4               	addwfc	prodh,w,c
 13053  00520C  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13054                           
 13055                           ; BSR set to: 0
 13056                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13057  00520E  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13058                           
 13059                           ; BSR set to: 0
 13060                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 13061  005210  0E01               	movlw	1
 13062  005212  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 13066  005214  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13067                           
 13068                           ;usb_device.c: 2723: break;
 13069  005216  0012               	return	
 13070  005218                     l353:
 13071                           
 13072                           ; BSR set to: 13
 13073                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 13074  005218  0100               	movlb	0	; () banked
 13075  00521A  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13076                           
 13077                           ; BSR set to: 0
 13078                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 13079  00521C  010D               	movlb	13	; () banked
 13080  00521E  5134               	movf	52,w,b	;volatile
 13081  005220  0D01               	mullw	1
 13082  005222  0EAF               	movlw	low _USBAlternateInterface
 13083  005224  24F3               	addwf	prodl,w,c
 13084  005226  6ED9               	movwf	fsr2l,c
 13085  005228  0E01               	movlw	high _USBAlternateInterface
 13086  00522A  20F4               	addwfc	prodh,w,c
 13087  00522C  6EDA               	movwf	fsr2h,c
 13088  00522E  CD32 FFDF          	movff	3378,indf2	;volatile
 13089                           
 13090                           ;usb_device.c: 2727: break;
 13091  005232  0012               	return	
 13092  005234                     
 13093                           ; BSR set to: 13
 13094                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 13095                           
 13096                           ; BSR set to: 13
 13097  005234  0E00               	movlw	0
 13098  005236  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13099  005238  0E02               	movlw	2
 13100  00523A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13101  00523C  0E00               	movlw	0
 13102  00523E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13103  005240  0E00               	movlw	0
 13104  005242  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13105  005244  0E00               	movlw	0
 13106  005246  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13107  005248  0E00               	movlw	0
 13108  00524A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13109  00524C  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13110                           
 13111                           ;usb_device.c: 2734: }
 13112                           
 13113                           ;usb_device.c: 2733: break;
 13114                           
 13115                           ;usb_device.c: 2732: default:
 13116                           
 13117                           ;usb_device.c: 2731: case 12:
 13118                           
 13119                           ;usb_device.c: 2730: break;
 13120  005250  0012               	return	
 13121  005252                     l343:
 13122  005252  010D               	movlb	13	; () banked
 13123  005254  5131               	movf	49,w,b	;volatile
 13124                           
 13125                           ; Switch size 1, requested type "space"
 13126                           ; Number of cases is 11, Range of values is 0 to 12
 13127                           ; switch strategies available:
 13128                           ; Name         Instructions Cycles
 13129                           ; simple_byte           34    18 (average)
 13130                           ;	Chosen strategy is simple_byte
 13131  005256  0A00               	xorlw	0	; case 0
 13132  005258  B4D8               	btfsc	status,2,c
 13133  00525A  D7C9               	goto	l349
 13134  00525C  0A01               	xorlw	1	; case 1
 13135  00525E  B4D8               	btfsc	status,2,c
 13136  005260  D7C9               	goto	l350
 13137  005262  0A02               	xorlw	2	; case 3
 13138  005264  B4D8               	btfsc	status,2,c
 13139  005266  D7C6               	goto	l350
 13140  005268  0A06               	xorlw	6	; case 5
 13141  00526A  B4D8               	btfsc	status,2,c
 13142  00526C  D7AB               	goto	l344
 13143  00526E  0A03               	xorlw	3	; case 6
 13144  005270  B4D8               	btfsc	status,2,c
 13145  005272  D7AD               	goto	l346
 13146  005274  0A01               	xorlw	1	; case 7
 13147  005276  B4D8               	btfsc	status,2,c
 13148  005278  D7DD               	goto	l354
 13149  00527A  0A0F               	xorlw	15	; case 8
 13150  00527C  B4D8               	btfsc	status,2,c
 13151  00527E  D7AD               	goto	l348
 13152  005280  0A01               	xorlw	1	; case 9
 13153  005282  B4D8               	btfsc	status,2,c
 13154  005284  D7A7               	goto	l347
 13155  005286  0A03               	xorlw	3	; case 10
 13156  005288  B4D8               	btfsc	status,2,c
 13157  00528A  D7B7               	goto	l352
 13158  00528C  0A01               	xorlw	1	; case 11
 13159  00528E  B4D8               	btfsc	status,2,c
 13160  005290  D7C3               	goto	l353
 13161  005292  0A07               	xorlw	7	; case 12
 13162  005294  0012               	return	
 13163  005296                     __end_of_USBCheckStdRequest:
 13164                           	opt stack 0
 13165                           tblptru	equ	0xFF8
 13166                           tblptrh	equ	0xFF7
 13167                           tblptrl	equ	0xFF6
 13168                           tablat	equ	0xFF5
 13169                           prodh	equ	0xFF4
 13170                           prodl	equ	0xFF3
 13171                           intcon	equ	0xFF2
 13172                           intcon2	equ	0xFF1
 13173                           intcon3	equ	0xFF0
 13174                           postinc0	equ	0xFEE
 13175                           wreg	equ	0xFE8
 13176                           indf1	equ	0xFE7
 13177                           postdec1	equ	0xFE5
 13178                           plusw1	equ	0xFE3
 13179                           fsr1h	equ	0xFE2
 13180                           fsr1l	equ	0xFE1
 13181                           indf2	equ	0xFDF
 13182                           postinc2	equ	0xFDE
 13183                           postdec2	equ	0xFDD
 13184                           plusw2	equ	0xFDB
 13185                           fsr2h	equ	0xFDA
 13186                           fsr2l	equ	0xFD9
 13187                           status	equ	0xFD8
 13188                           
 13189 ;; *************** function _USBStdSetCfgHandler *****************
 13190 ;; Defined at:
 13191 ;;		line 1970 in file "usb_device.c"
 13192 ;; Parameters:    Size  Location     Type
 13193 ;;		None
 13194 ;; Auto vars:     Size  Location     Type
 13195 ;;  i               1   23[COMRAM] unsigned char 
 13196 ;; Return value:  Size  Location     Type
 13197 ;;                  1    wreg      void 
 13198 ;; Registers used:
 13199 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 13200 ;; Tracked objects:
 13201 ;;		On entry : 0/0
 13202 ;;		On exit  : 0/0
 13203 ;;		Unchanged: 0/0
 13204 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13205 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13206 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13207 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13208 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13209 ;;Total ram usage:        1 bytes
 13210 ;; Hardware stack levels used:    1
 13211 ;; Hardware stack levels required when called:    4
 13212 ;; This function calls:
 13213 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 13214 ;;		_memset
 13215 ;; This function is called by:
 13216 ;;		_USBCheckStdRequest
 13217 ;; This function uses a non-reentrant model
 13218 ;;
 13219                           
 13220                           	psect	text62
 13221  005296                     __ptext62:
 13222                           	opt stack 0
 13223  005296                     _USBStdSetCfgHandler:
 13224                           	opt stack 22
 13225                           
 13226                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 13227                           
 13228                           ;incstack = 0
 13229  005296  0100               	movlb	0	; () banked
 13230  005298  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13231                           
 13232                           ; BSR set to: 0
 13233                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 13234  00529A  0E27               	movlw	39
 13235  00529C  6E01               	movwf	memset@p1,c
 13236  00529E  0E0F               	movlw	15
 13237  0052A0  6E02               	movwf	memset@p1+1,c
 13238  0052A2  0E00               	movlw	0
 13239  0052A4  6E04               	movwf	memset@c+1,c
 13240  0052A6  0E00               	movlw	0
 13241  0052A8  6E03               	movwf	memset@c,c
 13242  0052AA  0E00               	movlw	0
 13243  0052AC  6E06               	movwf	memset@n+1,c
 13244  0052AE  0E02               	movlw	2
 13245  0052B0  6E05               	movwf	memset@n,c
 13246  0052B2  EC3B  F045         	call	_memset	;wreg free
 13247                           
 13248                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 13249  0052B6  0E00               	movlw	0
 13250  0052B8  6E01               	movwf	memset@p1,c
 13251  0052BA  0E0D               	movlw	13
 13252  0052BC  6E02               	movwf	memset@p1+1,c
 13253  0052BE  0E00               	movlw	0
 13254  0052C0  6E04               	movwf	memset@c+1,c
 13255  0052C2  0E00               	movlw	0
 13256  0052C4  6E03               	movwf	memset@c,c
 13257  0052C6  0E00               	movlw	0
 13258  0052C8  6E06               	movwf	memset@n+1,c
 13259  0052CA  0E30               	movlw	48
 13260  0052CC  6E05               	movwf	memset@n,c
 13261  0052CE  EC3B  F045         	call	_memset	;wreg free
 13262                           
 13263                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 13264  0052D2  8C65               	bsf	3941,6,c	;volatile
 13265                           
 13266                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 13267  0052D4  0E00               	movlw	0
 13268  0052D6  6E18               	movwf	USBStdSetCfgHandler@i,c
 13269  0052D8                     l12881:
 13270  0052D8  0E02               	movlw	2
 13271  0052DA  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 13272  0052DC  D001               	goto	l260
 13273  0052DE  D016               	goto	u9550
 13274  0052E0                     l260:
 13275                           
 13276                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 13277  0052E0  5018               	movf	USBStdSetCfgHandler@i,w,c
 13278  0052E2  0D01               	mullw	1
 13279  0052E4  0E6F               	movlw	low _ep_data_in
 13280  0052E6  24F3               	addwf	prodl,w,c
 13281  0052E8  6ED9               	movwf	fsr2l,c
 13282  0052EA  0E01               	movlw	high _ep_data_in
 13283  0052EC  20F4               	addwfc	prodh,w,c
 13284  0052EE  6EDA               	movwf	fsr2h,c
 13285  0052F0  0E00               	movlw	0
 13286  0052F2  6EDF               	movwf	indf2,c
 13287                           
 13288                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 13289  0052F4  5018               	movf	USBStdSetCfgHandler@i,w,c
 13290  0052F6  0D01               	mullw	1
 13291  0052F8  0E6C               	movlw	low _ep_data_out
 13292  0052FA  24F3               	addwf	prodl,w,c
 13293  0052FC  6ED9               	movwf	fsr2l,c
 13294  0052FE  0E01               	movlw	high _ep_data_out
 13295  005300  20F4               	addwfc	prodh,w,c
 13296  005302  6EDA               	movwf	fsr2h,c
 13297  005304  0E00               	movlw	0
 13298  005306  6EDF               	movwf	indf2,c
 13299  005308  2A18               	incf	USBStdSetCfgHandler@i,f,c
 13300  00530A  D7E6               	goto	l12881
 13301  00530C                     u9550:
 13302                           
 13303                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 13304  00530C  0EAF               	movlw	low _USBAlternateInterface
 13305  00530E  6E01               	movwf	memset@p1,c
 13306  005310  0E01               	movlw	high _USBAlternateInterface
 13307  005312  6E02               	movwf	memset@p1+1,c
 13308  005314  0E00               	movlw	0
 13309  005316  6E04               	movwf	memset@c+1,c
 13310  005318  0E00               	movlw	0
 13311  00531A  6E03               	movwf	memset@c,c
 13312  00531C  0E00               	movlw	0
 13313  00531E  6E06               	movwf	memset@n+1,c
 13314  005320  0E02               	movlw	2
 13315  005322  6E05               	movwf	memset@n,c
 13316  005324  EC3B  F045         	call	_memset	;wreg free
 13317                           
 13318                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 13319  005328  9C65               	bcf	3941,6,c	;volatile
 13320                           
 13321                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 13322  00532A  0E08               	movlw	8
 13323  00532C  0100               	movlb	0	; () banked
 13324  00532E  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 13325  005330  0E0D               	movlw	13
 13326  005332  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 13327                           
 13328                           ; BSR set to: 0
 13329                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 13330  005334  0E00               	movlw	0
 13331  005336  6FE3               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 13332  005338  0E0D               	movlw	13
 13333  00533A  6FE4               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 13334                           
 13335                           ; BSR set to: 0
 13336                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 13337  00533C  C0E3  F0E1         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 13338  005340  C0E4  F0E2         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 13339                           
 13340                           ; BSR set to: 0
 13341                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 13342  005344  CD32 F0FE          	movff	3378,_USBActiveConfiguration	;volatile
 13343                           
 13344                           ; BSR set to: 0
 13345                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 13346  005348  51FE               	movf	_USBActiveConfiguration& (0+255),w,b
 13347  00534A  A4D8               	btfss	status,2,c
 13348  00534C  D003               	goto	l262
 13349                           
 13350                           ; BSR set to: 0
 13351                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 13352  00534E  0E10               	movlw	16
 13353  005350  6FF8               	movwf	_USBDeviceState& (0+255),b
 13354                           
 13355                           ;usb_device.c: 2015: }
 13356  005352  0012               	return	
 13357  005354                     l262:
 13358                           
 13359                           ; BSR set to: 0
 13360                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 13361                           
 13362                           ; BSR set to: 0
 13363  005354  0E00               	movlw	0
 13364  005356  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 13365  005358  0E01               	movlw	1
 13366  00535A  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 13367  00535C  0EFE               	movlw	low _USBActiveConfiguration
 13368  00535E  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 13369  005360  0E00               	movlw	high _USBActiveConfiguration
 13370  005362  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 13371  005364  0E00               	movlw	0
 13372  005366  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 13373  005368  0E01               	movlw	1
 13374  00536A  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 13375  00536C  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 13376                           
 13377                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 13378  005370  0E20               	movlw	32
 13379  005372  0100               	movlb	0	; () banked
 13380  005374  6FF8               	movwf	_USBDeviceState& (0+255),b
 13381  005376  0012               	return	
 13382  005378                     __end_of_USBStdSetCfgHandler:
 13383                           	opt stack 0
 13384                           tblptru	equ	0xFF8
 13385                           tblptrh	equ	0xFF7
 13386                           tblptrl	equ	0xFF6
 13387                           tablat	equ	0xFF5
 13388                           prodh	equ	0xFF4
 13389                           prodl	equ	0xFF3
 13390                           intcon	equ	0xFF2
 13391                           intcon2	equ	0xFF1
 13392                           intcon3	equ	0xFF0
 13393                           postinc0	equ	0xFEE
 13394                           wreg	equ	0xFE8
 13395                           indf1	equ	0xFE7
 13396                           postdec1	equ	0xFE5
 13397                           plusw1	equ	0xFE3
 13398                           fsr1h	equ	0xFE2
 13399                           fsr1l	equ	0xFE1
 13400                           indf2	equ	0xFDF
 13401                           postinc2	equ	0xFDE
 13402                           postdec2	equ	0xFDD
 13403                           plusw2	equ	0xFDB
 13404                           fsr2h	equ	0xFDA
 13405                           fsr2l	equ	0xFD9
 13406                           status	equ	0xFD8
 13407                           
 13408 ;; *************** function _memset *****************
 13409 ;; Defined at:
 13410 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 13411 ;; Parameters:    Size  Location     Type
 13412 ;;  p1              2    0[COMRAM] PTR void 
 13413 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13414 ;;  c               2    2[COMRAM] int 
 13415 ;;  n               2    4[COMRAM] unsigned int 
 13416 ;; Auto vars:     Size  Location     Type
 13417 ;;  p               2    6[COMRAM] PTR unsigned char 
 13418 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 13419 ;; Return value:  Size  Location     Type
 13420 ;;                  2    0[COMRAM] PTR void 
 13421 ;; Registers used:
 13422 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13423 ;; Tracked objects:
 13424 ;;		On entry : 0/0
 13425 ;;		On exit  : 0/0
 13426 ;;		Unchanged: 0/0
 13427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13428 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13429 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13430 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13431 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13432 ;;Total ram usage:        8 bytes
 13433 ;; Hardware stack levels used:    1
 13434 ;; This function calls:
 13435 ;;		Nothing
 13436 ;; This function is called by:
 13437 ;;		_USBDeviceInit
 13438 ;;		_USBStdSetCfgHandler
 13439 ;; This function uses a non-reentrant model
 13440 ;;
 13441                           
 13442                           	psect	text63
 13443  008A76                     __ptext63:
 13444                           	opt stack 0
 13445  008A76                     _memset:
 13446                           	opt stack 28
 13447                           
 13448                           ; BSR set to: 0
 13449                           ;incstack = 0
 13450  008A76  C001  F007         	movff	memset@p1,memset@p
 13451  008A7A  C002  F008         	movff	memset@p1+1,memset@p+1
 13452  008A7E  D008               	goto	l3701
 13453  008A80                     l11493:
 13454  008A80  C007  FFD9         	movff	memset@p,fsr2l
 13455  008A84  C008  FFDA         	movff	memset@p+1,fsr2h
 13456  008A88  C003  FFDF         	movff	memset@c,indf2
 13457  008A8C  4A07               	infsnz	memset@p,f,c
 13458  008A8E  2A08               	incf	memset@p+1,f,c
 13459  008A90                     l3701:
 13460  008A90  0605               	decf	memset@n,f,c
 13461  008A92  A0D8               	btfss	status,0,c
 13462  008A94  0606               	decf	memset@n+1,f,c
 13463  008A96  2805               	incf	memset@n,w,c
 13464  008A98  E1F3               	bnz	l11493
 13465  008A9A  2806               	incf	memset@n+1,w,c
 13466  008A9C  B4D8               	btfsc	status,2,c
 13467  008A9E  0012               	return	
 13468  008AA0  D7EF               	goto	l3702
 13469  008AA2                     __end_of_memset:
 13470                           	opt stack 0
 13471                           tblptru	equ	0xFF8
 13472                           tblptrh	equ	0xFF7
 13473                           tblptrl	equ	0xFF6
 13474                           tablat	equ	0xFF5
 13475                           prodh	equ	0xFF4
 13476                           prodl	equ	0xFF3
 13477                           intcon	equ	0xFF2
 13478                           intcon2	equ	0xFF1
 13479                           intcon3	equ	0xFF0
 13480                           postinc0	equ	0xFEE
 13481                           wreg	equ	0xFE8
 13482                           indf1	equ	0xFE7
 13483                           postdec1	equ	0xFE5
 13484                           plusw1	equ	0xFE3
 13485                           fsr1h	equ	0xFE2
 13486                           fsr1l	equ	0xFE1
 13487                           indf2	equ	0xFDF
 13488                           postinc2	equ	0xFDE
 13489                           postdec2	equ	0xFDD
 13490                           plusw2	equ	0xFDB
 13491                           fsr2h	equ	0xFDA
 13492                           fsr2l	equ	0xFD9
 13493                           status	equ	0xFD8
 13494                           
 13495 ;; *************** function _USBStdGetStatusHandler *****************
 13496 ;; Defined at:
 13497 ;;		line 2131 in file "usb_device.c"
 13498 ;; Parameters:    Size  Location     Type
 13499 ;;		None
 13500 ;; Auto vars:     Size  Location     Type
 13501 ;;  p               2    1[COMRAM] PTR struct __BDT
 13502 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 13503 ;; Return value:  Size  Location     Type
 13504 ;;                  1    wreg      void 
 13505 ;; Registers used:
 13506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 13507 ;; Tracked objects:
 13508 ;;		On entry : 0/0
 13509 ;;		On exit  : 0/0
 13510 ;;		Unchanged: 0/0
 13511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13513 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13514 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13515 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13516 ;;Total ram usage:        3 bytes
 13517 ;; Hardware stack levels used:    1
 13518 ;; This function calls:
 13519 ;;		Nothing
 13520 ;; This function is called by:
 13521 ;;		_USBCheckStdRequest
 13522 ;; This function uses a non-reentrant model
 13523 ;;
 13524                           
 13525                           	psect	text64
 13526  0065D2                     __ptext64:
 13527                           	opt stack 0
 13528  0065D2                     _USBStdGetStatusHandler:
 13529                           	opt stack 26
 13530                           
 13531                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 13532                           
 13533                           ;incstack = 0
 13534  0065D2  0E00               	movlw	0
 13535  0065D4  010D               	movlb	13	; () banked
 13536  0065D6  6F38               	movwf	56,b	;volatile
 13537                           
 13538                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 13539  0065D8  0E00               	movlw	0
 13540  0065DA  6F39               	movwf	57,b	;volatile
 13541                           
 13542                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 13543  0065DC  D039               	goto	l281
 13544  0065DE                     l282:
 13545                           
 13546                           ; BSR set to: 13
 13547                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 13548  0065DE  0100               	movlb	0	; () banked
 13549  0065E0  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13550                           
 13551                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 13552                           
 13553                           ; BSR set to: 13
 13554                           
 13555                           ; BSR set to: 0
 13556                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 13557                           
 13558                           ;usb_device.c: 2144: if(0 == 1)
 13559  0065E2  0100               	movlb	0	; () banked
 13560  0065E4  05F5               	decf	_RemoteWakeup& (0+255),w,b
 13561  0065E6  A4D8               	btfss	status,2,c
 13562  0065E8  D03E               	goto	l285
 13563                           
 13564                           ; BSR set to: 0
 13565                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 13566  0065EA  010D               	movlb	13	; () banked
 13567  0065EC  8338               	bsf	56,1,b	;volatile
 13568                           
 13569                           ; BSR set to: 13
 13570                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 13571  0065EE  D03B               	goto	l285
 13572  0065F0                     l286:
 13573                           
 13574                           ; BSR set to: 13
 13575                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 13576  0065F0  0100               	movlb	0	; () banked
 13577  0065F2  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13578                           
 13579                           ;usb_device.c: 2156: break;
 13580  0065F4  D038               	goto	l285
 13581  0065F6                     l287:
 13582                           
 13583                           ; BSR set to: 13
 13584                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 13585  0065F6  0100               	movlb	0	; () banked
 13586  0065F8  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 13587                           
 13588                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 13589  0065FA  010D               	movlb	13	; () banked
 13590  0065FC  BF34               	btfsc	52,7,b	;volatile
 13591  0065FE  D00A               	goto	l288
 13592                           
 13593                           ; BSR set to: 13
 13594                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 13595  006600  5134               	movf	52,w,b	;volatile
 13596  006602  0B0F               	andlw	15
 13597  006604  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13598  006606  5001               	movf	??_USBStdGetStatusHandler,w,c
 13599  006608  0D02               	mullw	2
 13600  00660A  0E40               	movlw	low _pBDTEntryOut
 13601  00660C  24F3               	addwf	prodl,w,c
 13602  00660E  6ED9               	movwf	fsr2l,c
 13603  006610  0E01               	movlw	high _pBDTEntryOut
 13604  006612  D009               	goto	L6
 13605  006614                     l288:
 13606                           
 13607                           ; BSR set to: 13
 13608                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 13609                           
 13610                           ; BSR set to: 13
 13611  006614  5134               	movf	52,w,b	;volatile
 13612  006616  0B0F               	andlw	15
 13613  006618  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 13614  00661A  5001               	movf	??_USBStdGetStatusHandler,w,c
 13615  00661C  0D02               	mullw	2
 13616  00661E  0ED1               	movlw	low _pBDTEntryIn
 13617  006620  24F3               	addwf	prodl,w,c
 13618  006622  6ED9               	movwf	fsr2l,c
 13619  006624  0E00               	movlw	high _pBDTEntryIn
 13620  006626                     L6:
 13621  006626  20F4               	addwfc	prodh,w,c
 13622  006628  6EDA               	movwf	fsr2h,c
 13623  00662A  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 13624  00662E  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 13625                           
 13626                           ; BSR set to: 13
 13627                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 13628                           
 13629                           ; BSR set to: 13
 13630  006632  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13631  006636  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13632  00663A  AEDF               	btfss	indf2,7,c
 13633  00663C  D014               	goto	l285
 13634                           
 13635                           ; BSR set to: 13
 13636  00663E  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 13637  006642  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 13638  006646  A4DF               	btfss	indf2,2,c
 13639  006648  D00E               	goto	l285
 13640                           
 13641                           ; BSR set to: 13
 13642                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 13643  00664A  0E01               	movlw	1
 13644  00664C  6F38               	movwf	56,b	;volatile
 13645                           
 13646                           ; BSR set to: 13
 13647                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 13648                           
 13649                           ; BSR set to: 13
 13650                           ;usb_device.c: 2176: break;
 13651  00664E  D00B               	goto	l285
 13652  006650                     l281:
 13653                           
 13654                           ; BSR set to: 13
 13655                           
 13656                           ; BSR set to: 13
 13657  006650  5130               	movf	48,w,b	;volatile
 13658  006652  0B1F               	andlw	31
 13659                           
 13660                           ; Switch size 1, requested type "space"
 13661                           ; Number of cases is 3, Range of values is 0 to 2
 13662                           ; switch strategies available:
 13663                           ; Name         Instructions Cycles
 13664                           ; simple_byte           10     6 (average)
 13665                           ;	Chosen strategy is simple_byte
 13666  006654  0A00               	xorlw	0	; case 0
 13667  006656  B4D8               	btfsc	status,2,c
 13668  006658  D7C2               	goto	l282
 13669  00665A  0A01               	xorlw	1	; case 1
 13670  00665C  B4D8               	btfsc	status,2,c
 13671  00665E  D7C8               	goto	l286
 13672  006660  0A03               	xorlw	3	; case 2
 13673  006662  B4D8               	btfsc	status,2,c
 13674  006664  D7C8               	goto	l287
 13675  006666                     l285:
 13676                           
 13677                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 13678  006666  0100               	movlb	0	; () banked
 13679  006668  AFCE               	btfss	(_inPipes+3)& (0+255),7,b
 13680  00666A  0012               	return	
 13681                           
 13682                           ; BSR set to: 0
 13683                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 13684  00666C  0E38               	movlw	56
 13685  00666E  6FCB               	movwf	_inPipes& (0+255),b
 13686  006670  0E0D               	movlw	13
 13687  006672  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13688                           
 13689                           ; BSR set to: 0
 13690                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 13691  006674  81CE               	bsf	(_inPipes+3)& (0+255),0,b
 13692                           
 13693                           ; BSR set to: 0
 13694                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 13695  006676  0E02               	movlw	2
 13696  006678  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13697  00667A  0012               	return	
 13698  00667C                     __end_of_USBStdGetStatusHandler:
 13699                           	opt stack 0
 13700                           tblptru	equ	0xFF8
 13701                           tblptrh	equ	0xFF7
 13702                           tblptrl	equ	0xFF6
 13703                           tablat	equ	0xFF5
 13704                           prodh	equ	0xFF4
 13705                           prodl	equ	0xFF3
 13706                           intcon	equ	0xFF2
 13707                           intcon2	equ	0xFF1
 13708                           intcon3	equ	0xFF0
 13709                           postinc0	equ	0xFEE
 13710                           wreg	equ	0xFE8
 13711                           indf1	equ	0xFE7
 13712                           postdec1	equ	0xFE5
 13713                           plusw1	equ	0xFE3
 13714                           fsr1h	equ	0xFE2
 13715                           fsr1l	equ	0xFE1
 13716                           indf2	equ	0xFDF
 13717                           postinc2	equ	0xFDE
 13718                           postdec2	equ	0xFDD
 13719                           plusw2	equ	0xFDB
 13720                           fsr2h	equ	0xFDA
 13721                           fsr2l	equ	0xFD9
 13722                           status	equ	0xFD8
 13723                           
 13724 ;; *************** function _USBStdGetDscHandler *****************
 13725 ;; Defined at:
 13726 ;;		line 2045 in file "usb_device.c"
 13727 ;; Parameters:    Size  Location     Type
 13728 ;;		None
 13729 ;; Auto vars:     Size  Location     Type
 13730 ;;		None
 13731 ;; Return value:  Size  Location     Type
 13732 ;;                  1    wreg      void 
 13733 ;; Registers used:
 13734 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 13735 ;; Tracked objects:
 13736 ;;		On entry : 0/0
 13737 ;;		On exit  : 0/0
 13738 ;;		Unchanged: 0/0
 13739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13740 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13742 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13743 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13744 ;;Total ram usage:        2 bytes
 13745 ;; Hardware stack levels used:    1
 13746 ;; This function calls:
 13747 ;;		Nothing
 13748 ;; This function is called by:
 13749 ;;		_USBCheckStdRequest
 13750 ;; This function uses a non-reentrant model
 13751 ;;
 13752                           
 13753                           	psect	text65
 13754  004126                     __ptext65:
 13755                           	opt stack 0
 13756  004126                     _USBStdGetDscHandler:
 13757                           	opt stack 26
 13758                           
 13759                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 13760                           
 13761                           ; BSR set to: 0
 13762                           ;incstack = 0
 13763  004126  0E80               	movlw	128
 13764  004128  010D               	movlb	13	; () banked
 13765  00412A  1930               	xorwf	48,w,b	;volatile
 13766  00412C  A4D8               	btfss	status,2,c
 13767  00412E  0012               	return	
 13768                           
 13769                           ; BSR set to: 13
 13770                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 13771  004130  0EC0               	movlw	192
 13772  004132  0100               	movlb	0	; () banked
 13773  004134  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13774                           
 13775                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 13776  004136  D088               	goto	l268
 13777  004138                     
 13778                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 13779                           
 13780                           ; BSR set to: 0
 13781  004138  0EA5               	movlw	low _device_dsc
 13782  00413A  0100               	movlb	0	; () banked
 13783  00413C  6FCB               	movwf	_inPipes& (0+255),b
 13784  00413E  0E9F               	movlw	high _device_dsc
 13785  004140  6FCC               	movwf	(_inPipes+1)& (0+255),b
 13786                           
 13787                           ; BSR set to: 0
 13788                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 13789  004142  0E00               	movlw	0
 13790  004144  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13791  004146  0E12               	movlw	18
 13792  004148  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13793                           
 13794                           ;usb_device.c: 2060: break;
 13795  00414A  0012               	return	
 13796  00414C                     
 13797                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 13798                           
 13799                           ; BSR set to: 0
 13800  00414C  010D               	movlb	13	; () banked
 13801  00414E  5132               	movf	50,w,b	;volatile
 13802  004150  A4D8               	btfss	status,2,c
 13803  004152  D043               	goto	l272
 13804                           
 13805                           ; BSR set to: 13
 13806                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 13807  004154  5132               	movf	50,w,b	;volatile
 13808  004156  0D02               	mullw	2
 13809  004158  0EA5               	movlw	low _USB_CD_Ptr
 13810  00415A  24F3               	addwf	prodl,w,c
 13811  00415C  6EF6               	movwf	tblptrl,c
 13812  00415E  0E9E               	movlw	high _USB_CD_Ptr
 13813  004160  20F4               	addwfc	prodh,w,c
 13814  004162  6EF7               	movwf	tblptrh,c
 13815  004164                     	if	1	;There are 3 active tblptr bytes
 13816  004164  6AF8               	clrf	tblptru,c
 13817  004166  0E00               	movlw	low (__mediumconst shr (0+16))
 13818  004168  22F8               	addwfc	tblptru,f,c
 13819  00416A                     	endif
 13820  00416A  0009               	tblrd		*+
 13821  00416C  CFF5 F0CB          	movff	tablat,_inPipes
 13822  004170  000A               	tblrd		*-
 13823  004172  CFF5 F0CC          	movff	tablat,_inPipes+1
 13824                           
 13825                           ; BSR set to: 13
 13826                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 13827  004176  0E02               	movlw	2
 13828  004178  0100               	movlb	0	; () banked
 13829  00417A  25CB               	addwf	_inPipes& (0+255),w,b
 13830  00417C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13831  00417E  0E00               	movlw	0
 13832  004180  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13833  004182  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13834  004184  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13835  004188  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13836  00418C  6AF8               	clrf	tblptru,c
 13837  00418E  0E0E               	movlw	(high __ramtop+-1)
 13838  004190  64F7               	cpfsgt	tblptrh,c
 13839  004192  D003               	bra	u9597
 13840  004194  0008               	tblrd		*
 13841  004196  50F5               	movf	tablat,w,c
 13842  004198  D005               	bra	u9590
 13843  00419A                     u9597:
 13844  00419A  CFF6 FFE9          	movff	tblptrl,fsr0l
 13845  00419E  CFF7 FFEA          	movff	tblptrh,fsr0h
 13846  0041A2  50EF               	movf	indf0,w,c
 13847  0041A4                     u9590:
 13848  0041A4  0100               	movlb	0	; () banked
 13849  0041A6  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13850                           
 13851                           ; BSR set to: 0
 13852                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 13853  0041A8  0E03               	movlw	3
 13854  0041AA  25CB               	addwf	_inPipes& (0+255),w,b
 13855  0041AC  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13856  0041AE  0E00               	movlw	0
 13857  0041B0  21CC               	addwfc	(_inPipes+1)& (0+255),w,b
 13858  0041B2  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 13859  0041B4  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 13860  0041B8  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 13861  0041BC  6AF8               	clrf	tblptru,c
 13862  0041BE  0E0E               	movlw	(high __ramtop+-1)
 13863  0041C0  64F7               	cpfsgt	tblptrh,c
 13864  0041C2  D003               	bra	u9607
 13865  0041C4  0008               	tblrd		*
 13866  0041C6  50F5               	movf	tablat,w,c
 13867  0041C8  D005               	bra	u9600
 13868  0041CA                     u9607:
 13869  0041CA  CFF6 FFE9          	movff	tblptrl,fsr0l
 13870  0041CE  CFF7 FFEA          	movff	tblptrh,fsr0h
 13871  0041D2  50EF               	movf	indf0,w,c
 13872  0041D4                     u9600:
 13873  0041D4  0100               	movlb	0	; () banked
 13874  0041D6  6FD0               	movwf	(_inPipes+5)& (0+255),b
 13875                           
 13876                           ;usb_device.c: 2078: }
 13877  0041D8  0012               	return	
 13878  0041DA                     l272:
 13879                           
 13880                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 13881                           
 13882                           ; BSR set to: 0
 13883  0041DA  0E00               	movlw	0
 13884  0041DC  0100               	movlb	0	; () banked
 13885  0041DE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13886                           
 13887                           ; BSR set to: 0
 13888                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 13889  0041E0  0012               	return	
 13890  0041E2                     
 13891                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 13892                           
 13893                           ; BSR set to: 0
 13894  0041E2  0E04               	movlw	4
 13895  0041E4  010D               	movlb	13	; () banked
 13896  0041E6  6132               	cpfslt	50,b	;volatile
 13897  0041E8  D027               	goto	l275
 13898                           
 13899                           ; BSR set to: 13
 13900                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 13901  0041EA  5132               	movf	50,w,b	;volatile
 13902  0041EC  0D02               	mullw	2
 13903  0041EE  0E7B               	movlw	low _USB_SD_Ptr
 13904  0041F0  24F3               	addwf	prodl,w,c
 13905  0041F2  6EF6               	movwf	tblptrl,c
 13906  0041F4  0E9E               	movlw	high _USB_SD_Ptr
 13907  0041F6  20F4               	addwfc	prodh,w,c
 13908  0041F8  6EF7               	movwf	tblptrh,c
 13909  0041FA                     	if	1	;There are 3 active tblptr bytes
 13910  0041FA  6AF8               	clrf	tblptru,c
 13911  0041FC  0E00               	movlw	low (__mediumconst shr (0+16))
 13912  0041FE  22F8               	addwfc	tblptru,f,c
 13913  004200                     	endif
 13914  004200  0009               	tblrd		*+
 13915  004202  CFF5 F0CB          	movff	tablat,_inPipes
 13916  004206  000A               	tblrd		*-
 13917  004208  CFF5 F0CC          	movff	tablat,_inPipes+1
 13918                           
 13919                           ; BSR set to: 13
 13920                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 13921  00420C  C0CB  FFF6         	movff	_inPipes,tblptrl
 13922  004210  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 13923  004214  6AF8               	clrf	tblptru,c
 13924  004216  0E0E               	movlw	(high __ramtop+-1)
 13925  004218  64F7               	cpfsgt	tblptrh,c
 13926  00421A  D003               	bra	u9627
 13927  00421C  0008               	tblrd		*
 13928  00421E  50F5               	movf	tablat,w,c
 13929  004220  D005               	bra	u9620
 13930  004222                     u9627:
 13931  004222  CFF6 FFE9          	movff	tblptrl,fsr0l
 13932  004226  CFF7 FFEA          	movff	tblptrh,fsr0h
 13933  00422A  50EF               	movf	indf0,w,c
 13934  00422C                     u9620:
 13935  00422C  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 13936  00422E  5001               	movf	??_USBStdGetDscHandler,w,c
 13937  004230  0100               	movlb	0	; () banked
 13938  004232  6FCF               	movwf	(_inPipes+4)& (0+255),b
 13939  004234  6BD0               	clrf	(_inPipes+5)& (0+255),b
 13940                           
 13941                           ;usb_device.c: 2094: }
 13942  004236  0012               	return	
 13943  004238                     l275:
 13944                           
 13945                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 13946                           
 13947                           ; BSR set to: 0
 13948  004238  0E00               	movlw	0
 13949  00423A  0100               	movlb	0	; () banked
 13950  00423C  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13951                           
 13952                           ; BSR set to: 0
 13953                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 13954  00423E  0012               	return	
 13955  004240                     
 13956                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 13957                           
 13958                           ; BSR set to: 0
 13959  004240  0E00               	movlw	0
 13960  004242  0100               	movlb	0	; () banked
 13961  004244  6FCE               	movwf	(_inPipes+3)& (0+255),b
 13962                           
 13963                           ; BSR set to: 0
 13964                           ;usb_device.c: 2112: }
 13965                           
 13966                           ;usb_device.c: 2111: break;
 13967  004246  0012               	return	
 13968  004248                     l268:
 13969                           
 13970                           ; BSR set to: 0
 13971                           
 13972                           ; BSR set to: 0
 13973  004248  010D               	movlb	13	; () banked
 13974  00424A  5133               	movf	51,w,b	;volatile
 13975                           
 13976                           ; Switch size 1, requested type "space"
 13977                           ; Number of cases is 3, Range of values is 1 to 3
 13978                           ; switch strategies available:
 13979                           ; Name         Instructions Cycles
 13980                           ; simple_byte           10     6 (average)
 13981                           ;	Chosen strategy is simple_byte
 13982  00424C  0A01               	xorlw	1	; case 1
 13983  00424E  B4D8               	btfsc	status,2,c
 13984  004250  D773               	goto	l269
 13985  004252  0A03               	xorlw	3	; case 2
 13986  004254  B4D8               	btfsc	status,2,c
 13987  004256  D77A               	goto	l271
 13988  004258  0A01               	xorlw	1	; case 3
 13989  00425A  B4D8               	btfsc	status,2,c
 13990  00425C  D7C2               	goto	l274
 13991  00425E  D7F0               	goto	l277
 13992  004260                     __end_of_USBStdGetDscHandler:
 13993                           	opt stack 0
 13994                           tblptru	equ	0xFF8
 13995                           tblptrh	equ	0xFF7
 13996                           tblptrl	equ	0xFF6
 13997                           tablat	equ	0xFF5
 13998                           prodh	equ	0xFF4
 13999                           prodl	equ	0xFF3
 14000                           intcon	equ	0xFF2
 14001                           intcon2	equ	0xFF1
 14002                           intcon3	equ	0xFF0
 14003                           indf0	equ	0xFEF
 14004                           postinc0	equ	0xFEE
 14005                           fsr0h	equ	0xFEA
 14006                           fsr0l	equ	0xFE9
 14007                           wreg	equ	0xFE8
 14008                           indf1	equ	0xFE7
 14009                           postdec1	equ	0xFE5
 14010                           plusw1	equ	0xFE3
 14011                           fsr1h	equ	0xFE2
 14012                           fsr1l	equ	0xFE1
 14013                           indf2	equ	0xFDF
 14014                           postinc2	equ	0xFDE
 14015                           postdec2	equ	0xFDD
 14016                           plusw2	equ	0xFDB
 14017                           fsr2h	equ	0xFDA
 14018                           fsr2l	equ	0xFD9
 14019                           status	equ	0xFD8
 14020                           
 14021 ;; *************** function _USBStdFeatureReqHandler *****************
 14022 ;; Defined at:
 14023 ;;		line 2756 in file "usb_device.c"
 14024 ;; Parameters:    Size  Location     Type
 14025 ;;		None
 14026 ;; Auto vars:     Size  Location     Type
 14027 ;;  p               2   27[COMRAM] PTR struct __BDT
 14028 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 14029 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 14030 ;;		 -> UEP0(1), 
 14031 ;;  current_ep_d    1   26[COMRAM] struct .
 14032 ;; Return value:  Size  Location     Type
 14033 ;;                  1    wreg      void 
 14034 ;; Registers used:
 14035 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14036 ;; Tracked objects:
 14037 ;;		On entry : 0/0
 14038 ;;		On exit  : 0/0
 14039 ;;		Unchanged: 0/0
 14040 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14041 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14042 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14043 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14044 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14045 ;;Total ram usage:        6 bytes
 14046 ;; Hardware stack levels used:    1
 14047 ;; Hardware stack levels required when called:    4
 14048 ;; This function calls:
 14049 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14050 ;; This function is called by:
 14051 ;;		_USBCheckStdRequest
 14052 ;; This function uses a non-reentrant model
 14053 ;;
 14054                           
 14055                           	psect	text66
 14056  001B48                     __ptext66:
 14057                           	opt stack 0
 14058  001B48                     _USBStdFeatureReqHandler:
 14059                           	opt stack 22
 14060                           
 14061                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 14062                           
 14063                           ;incstack = 0
 14064  001B48  010D               	movlb	13	; () banked
 14065  001B4A  0532               	decf	50,w,b	;volatile
 14066  001B4C  A4D8               	btfss	status,2,c
 14067  001B4E  D011               	goto	l361
 14068                           
 14069                           ; BSR set to: 13
 14070  001B50  5130               	movf	48,w,b	;volatile
 14071  001B52  0B1F               	andlw	31
 14072  001B54  0900               	iorlw	0
 14073  001B56  A4D8               	btfss	status,2,c
 14074  001B58  D00C               	goto	l361
 14075                           
 14076                           ; BSR set to: 13
 14077                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 14078  001B5A  0100               	movlb	0	; () banked
 14079  001B5C  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14080                           
 14081                           ; BSR set to: 0
 14082                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 14083  001B5E  0E03               	movlw	3
 14084  001B60  010D               	movlb	13	; () banked
 14085  001B62  1931               	xorwf	49,w,b	;volatile
 14086  001B64  A4D8               	btfss	status,2,c
 14087  001B66  D002               	goto	l360
 14088                           
 14089                           ; BSR set to: 13
 14090                           ;usb_device.c: 2806: RemoteWakeup = 1;
 14091  001B68  0E01               	movlw	1
 14092  001B6A  D001               	goto	L7
 14093  001B6C                     l360:
 14094                           
 14095                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 14096                           
 14097                           ; BSR set to: 0
 14098  001B6C  0E00               	movlw	0
 14099  001B6E                     L7:
 14100  001B6E  0100               	movlb	0	; () banked
 14101  001B70  6FF5               	movwf	_RemoteWakeup& (0+255),b
 14102  001B72                     l361:
 14103                           
 14104                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 14105                           
 14106                           ; BSR set to: 0
 14107  001B72  010D               	movlb	13	; () banked
 14108  001B74  5132               	movf	50,w,b	;volatile
 14109  001B76  A4D8               	btfss	status,2,c
 14110  001B78  0012               	return	
 14111                           
 14112                           ; BSR set to: 13
 14113  001B7A  5130               	movf	48,w,b	;volatile
 14114  001B7C  0B1F               	andlw	31
 14115  001B7E  0A02               	xorlw	2
 14116  001B80  A4D8               	btfss	status,2,c
 14117  001B82  0012               	return	
 14118                           
 14119                           ; BSR set to: 13
 14120  001B84  5134               	movf	52,w,b	;volatile
 14121  001B86  0B0F               	andlw	15
 14122  001B88  0900               	iorlw	0
 14123  001B8A  B4D8               	btfsc	status,2,c
 14124  001B8C  0012               	return	
 14125                           
 14126                           ; BSR set to: 13
 14127  001B8E  5134               	movf	52,w,b	;volatile
 14128  001B90  0B0F               	andlw	15
 14129  001B92  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14130  001B94  0E03               	movlw	3
 14131  001B96  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 14132  001B98  0012               	return	
 14133                           
 14134                           ; BSR set to: 13
 14135  001B9A  0E20               	movlw	32
 14136  001B9C  0100               	movlb	0	; () banked
 14137  001B9E  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 14138  001BA0  A4D8               	btfss	status,2,c
 14139  001BA2  0012               	return	
 14140                           
 14141                           ; BSR set to: 0
 14142                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 14143  001BA4  8FCE               	bsf	(_inPipes+3)& (0+255),7,b
 14144                           
 14145                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 14146  001BA6  010D               	movlb	13	; () banked
 14147  001BA8  BF34               	btfsc	52,7,b	;volatile
 14148  001BAA  D019               	goto	l363
 14149                           
 14150                           ; BSR set to: 13
 14151                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 14152  001BAC  5134               	movf	52,w,b	;volatile
 14153  001BAE  0B0F               	andlw	15
 14154  001BB0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14155  001BB2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14156  001BB4  0D02               	mullw	2
 14157  001BB6  0E40               	movlw	low _pBDTEntryOut
 14158  001BB8  24F3               	addwf	prodl,w,c
 14159  001BBA  6ED9               	movwf	fsr2l,c
 14160  001BBC  0E01               	movlw	high _pBDTEntryOut
 14161  001BBE  20F4               	addwfc	prodh,w,c
 14162  001BC0  6EDA               	movwf	fsr2h,c
 14163  001BC2  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14164  001BC6  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14165                           
 14166                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 14167  001BCA  5134               	movf	52,w,b	;volatile
 14168  001BCC  0B0F               	andlw	15
 14169  001BCE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14170  001BD0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14171  001BD2  0D01               	mullw	1
 14172  001BD4  0E6C               	movlw	low _ep_data_out
 14173  001BD6  24F3               	addwf	prodl,w,c
 14174  001BD8  6ED9               	movwf	fsr2l,c
 14175  001BDA  0E01               	movlw	high _ep_data_out
 14176  001BDC  D018               	goto	L8
 14177  001BDE                     l363:
 14178                           
 14179                           ; BSR set to: 13
 14180                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 14181                           
 14182                           ; BSR set to: 13
 14183  001BDE  5134               	movf	52,w,b	;volatile
 14184  001BE0  0B0F               	andlw	15
 14185  001BE2  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14186  001BE4  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14187  001BE6  0D02               	mullw	2
 14188  001BE8  0ED1               	movlw	low _pBDTEntryIn
 14189  001BEA  24F3               	addwf	prodl,w,c
 14190  001BEC  6ED9               	movwf	fsr2l,c
 14191  001BEE  0E00               	movlw	high _pBDTEntryIn
 14192  001BF0  20F4               	addwfc	prodh,w,c
 14193  001BF2  6EDA               	movwf	fsr2h,c
 14194  001BF4  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 14195  001BF8  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 14196                           
 14197                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 14198  001BFC  5134               	movf	52,w,b	;volatile
 14199  001BFE  0B0F               	andlw	15
 14200  001C00  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14201  001C02  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14202  001C04  0D01               	mullw	1
 14203  001C06  0E6F               	movlw	low _ep_data_in
 14204  001C08  24F3               	addwf	prodl,w,c
 14205  001C0A  6ED9               	movwf	fsr2l,c
 14206  001C0C  0E01               	movlw	high _ep_data_in
 14207  001C0E                     L8:
 14208  001C0E  20F4               	addwfc	prodh,w,c
 14209  001C10  6EDA               	movwf	fsr2h,c
 14210  001C12  50DF               	movf	indf2,w,c
 14211  001C14  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 14212                           
 14213                           ; BSR set to: 13
 14214                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 14215                           
 14216                           ; BSR set to: 13
 14217  001C16  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 14218  001C18  D006               	goto	l365
 14219                           
 14220                           ; BSR set to: 13
 14221                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 14222  001C1A  0EFB               	movlw	251
 14223  001C1C  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 14224  001C1E  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14225  001C20  0EFF               	movlw	255
 14226  001C22  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 14227  001C24  D004               	goto	L9
 14228  001C26                     l365:
 14229                           
 14230                           ; BSR set to: 13
 14231                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 14232                           
 14233                           ; BSR set to: 13
 14234  001C26  0E04               	movlw	4
 14235  001C28  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 14236  001C2A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14237  001C2C  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14238  001C2E                     L9:
 14239  001C2E  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14240                           
 14241                           ; BSR set to: 13
 14242                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 14243                           
 14244                           ; BSR set to: 13
 14245  001C30  BF34               	btfsc	52,7,b	;volatile
 14246  001C32  D00A               	goto	l367
 14247                           
 14248                           ; BSR set to: 13
 14249                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 14250  001C34  5134               	movf	52,w,b	;volatile
 14251  001C36  0B0F               	andlw	15
 14252  001C38  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14253  001C3A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14254  001C3C  0D02               	mullw	2
 14255  001C3E  0E40               	movlw	low _pBDTEntryOut
 14256  001C40  24F3               	addwf	prodl,w,c
 14257  001C42  6ED9               	movwf	fsr2l,c
 14258  001C44  0E01               	movlw	high _pBDTEntryOut
 14259  001C46  D009               	goto	L10
 14260  001C48                     l367:
 14261                           
 14262                           ; BSR set to: 13
 14263                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 14264                           
 14265                           ; BSR set to: 13
 14266  001C48  5134               	movf	52,w,b	;volatile
 14267  001C4A  0B0F               	andlw	15
 14268  001C4C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14269  001C4E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14270  001C50  0D02               	mullw	2
 14271  001C52  0ED1               	movlw	low _pBDTEntryIn
 14272  001C54  24F3               	addwf	prodl,w,c
 14273  001C56  6ED9               	movwf	fsr2l,c
 14274  001C58  0E00               	movlw	high _pBDTEntryIn
 14275  001C5A                     L10:
 14276  001C5A  20F4               	addwfc	prodh,w,c
 14277  001C5C  6EDA               	movwf	fsr2h,c
 14278  001C5E  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 14279  001C62  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 14280                           
 14281                           ; BSR set to: 13
 14282                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 14283                           
 14284                           ; BSR set to: 13
 14285  001C66  0E03               	movlw	3
 14286  001C68  1931               	xorwf	49,w,b	;volatile
 14287  001C6A  A4D8               	btfss	status,2,c
 14288  001C6C  D02D               	goto	l369
 14289                           
 14290                           ; BSR set to: 13
 14291                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 14292  001C6E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14293  001C72  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14294  001C76  AEDF               	btfss	indf2,7,c
 14295  001C78  D01A               	goto	l372
 14296                           
 14297                           ; BSR set to: 13
 14298                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 14299  001C7A  BF34               	btfsc	52,7,b	;volatile
 14300  001C7C  D00A               	goto	l371
 14301                           
 14302                           ; BSR set to: 13
 14303                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 14304  001C7E  5134               	movf	52,w,b	;volatile
 14305  001C80  0B0F               	andlw	15
 14306  001C82  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14307  001C84  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14308  001C86  0D01               	mullw	1
 14309  001C88  0E6C               	movlw	low _ep_data_out
 14310  001C8A  24F3               	addwf	prodl,w,c
 14311  001C8C  6ED9               	movwf	fsr2l,c
 14312  001C8E  0E01               	movlw	high _ep_data_out
 14313  001C90  D00A               	goto	L11
 14314  001C92                     l371:
 14315                           
 14316                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 14317                           
 14318                           ; BSR set to: 1
 14319  001C92  010D               	movlb	13	; () banked
 14320  001C94  5134               	movf	52,w,b	;volatile
 14321  001C96  0B0F               	andlw	15
 14322  001C98  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14323  001C9A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14324  001C9C  0D01               	mullw	1
 14325  001C9E  0E6F               	movlw	low _ep_data_in
 14326  001CA0  24F3               	addwf	prodl,w,c
 14327  001CA2  6ED9               	movwf	fsr2l,c
 14328  001CA4  0E01               	movlw	high _ep_data_in
 14329  001CA6                     L11:
 14330  001CA6  20F4               	addwfc	prodh,w,c
 14331  001CA8  6EDA               	movwf	fsr2h,c
 14332  001CAA  0101               	movlb	1	; () banked
 14333  001CAC  82DF               	bsf	indf2,1,c
 14334  001CAE                     l372:
 14335                           
 14336                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 14337                           
 14338                           ; BSR set to: 1
 14339                           
 14340                           ; BSR set to: 1
 14341  001CAE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14342  001CB2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14343  001CB6  0E00               	movlw	0
 14344  001CB8  84DB               	bsf	plusw2,2,c
 14345                           
 14346                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 14347  001CBA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14348  001CBE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14349  001CC2  0E00               	movlw	0
 14350  001CC4  8EDB               	bsf	plusw2,7,c
 14351                           
 14352                           ;usb_device.c: 2878: }
 14353  001CC6  0012               	return	
 14354  001CC8                     l369:
 14355                           
 14356                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 14357  001CC8  0E04               	movlw	4
 14358  001CCA  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14359  001CCC  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14360  001CCE  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14361  001CD0  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14362                           
 14363                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 14364  001CD2  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14365  001CD6  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14366  001CDA  AEDF               	btfss	indf2,7,c
 14367  001CDC  D01B               	goto	l374
 14368                           
 14369                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 14370  001CDE  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14371  001CE2  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14372  001CE6  0E7F               	movlw	127
 14373  001CE8  16DF               	andwf	indf2,f,c
 14374                           
 14375                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 14376  001CEA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14377  001CEE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14378  001CF2  0E00               	movlw	0
 14379  001CF4  8CDB               	bsf	plusw2,6,c
 14380                           
 14381                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14382  001CF6  0E00               	movlw	0
 14383  001CF8  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14384  001CFA  0E05               	movlw	5
 14385  001CFC  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14386  001CFE  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14387  001D02  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14388  001D06  0E00               	movlw	0
 14389  001D08  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14390  001D0A  0E02               	movlw	2
 14391  001D0C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14392  001D0E  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14393                           
 14394                           ;usb_device.c: 2893: }
 14395  001D12  D006               	goto	l375
 14396  001D14                     l374:
 14397                           
 14398                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 14399  001D14  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14400  001D18  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14401  001D1C  0E00               	movlw	0
 14402  001D1E  8CDB               	bsf	plusw2,6,c
 14403  001D20                     l375:
 14404                           
 14405                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 14406  001D20  0E04               	movlw	4
 14407  001D22  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 14408  001D24  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 14409  001D26  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 14410  001D28  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 14411                           
 14412                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 14413  001D2A  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 14414  001D2C  D006               	goto	u9840
 14415  001D2E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14416  001D32  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14417  001D36  AEDF               	btfss	indf2,7,c
 14418  001D38  D030               	goto	l376
 14419  001D3A                     u9840:
 14420                           
 14421                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 14422  001D3A  010D               	movlb	13	; () banked
 14423  001D3C  BF34               	btfsc	52,7,b	;volatile
 14424  001D3E  D00A               	goto	l379
 14425                           
 14426                           ; BSR set to: 13
 14427                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 14428  001D40  5134               	movf	52,w,b	;volatile
 14429  001D42  0B0F               	andlw	15
 14430  001D44  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14431  001D46  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14432  001D48  0D01               	mullw	1
 14433  001D4A  0E6C               	movlw	low _ep_data_out
 14434  001D4C  24F3               	addwf	prodl,w,c
 14435  001D4E  6ED9               	movwf	fsr2l,c
 14436  001D50  0E01               	movlw	high _ep_data_out
 14437  001D52  D00A               	goto	L12
 14438  001D54                     l379:
 14439                           
 14440                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 14441                           
 14442                           ; BSR set to: 1
 14443  001D54  010D               	movlb	13	; () banked
 14444  001D56  5134               	movf	52,w,b	;volatile
 14445  001D58  0B0F               	andlw	15
 14446  001D5A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14447  001D5C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14448  001D5E  0D01               	mullw	1
 14449  001D60  0E6F               	movlw	low _ep_data_in
 14450  001D62  24F3               	addwf	prodl,w,c
 14451  001D64  6ED9               	movwf	fsr2l,c
 14452  001D66  0E01               	movlw	high _ep_data_in
 14453  001D68                     L12:
 14454  001D68  20F4               	addwfc	prodh,w,c
 14455  001D6A  6EDA               	movwf	fsr2h,c
 14456  001D6C  0101               	movlb	1	; () banked
 14457  001D6E  92DF               	bcf	indf2,1,c
 14458                           
 14459                           ; BSR set to: 1
 14460                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 14461                           
 14462                           ; BSR set to: 1
 14463  001D70  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14464  001D74  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14465  001D78  0E3B               	movlw	59
 14466  001D7A  16DF               	andwf	indf2,f,c
 14467                           
 14468                           ; BSR set to: 1
 14469                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 14470  001D7C  0E00               	movlw	0
 14471  001D7E  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 14472  001D80  0E05               	movlw	5
 14473  001D82  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 14474  001D84  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 14475  001D88  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 14476  001D8C  0E00               	movlw	0
 14477  001D8E  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 14478  001D90  0E02               	movlw	2
 14479  001D92  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 14480  001D94  EC39  F039         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 14481                           
 14482                           ;usb_device.c: 2923: }
 14483  001D98  D006               	goto	l381
 14484  001D9A                     l376:
 14485                           
 14486                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 14487  001D9A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 14488  001D9E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 14489  001DA2  0E3B               	movlw	59
 14490  001DA4  16DF               	andwf	indf2,f,c
 14491  001DA6                     l381:
 14492                           
 14493                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 14494  001DA6  010D               	movlb	13	; () banked
 14495  001DA8  5134               	movf	52,w,b	;volatile
 14496  001DAA  0B0F               	andlw	15
 14497  001DAC  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 14498  001DAE  5018               	movf	??_USBStdFeatureReqHandler,w,c
 14499  001DB0  0D01               	mullw	1
 14500  001DB2  0E26               	movlw	38
 14501  001DB4  24F3               	addwf	prodl,w,c
 14502  001DB6  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 14503  001DB8  0E0F               	movlw	15
 14504  001DBA  20F4               	addwfc	prodh,w,c
 14505  001DBC  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 14506                           
 14507                           ; BSR set to: 13
 14508                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 14509  001DBE  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 14510  001DC2  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 14511  001DC6  0EFE               	movlw	254
 14512  001DC8  16DF               	andwf	indf2,f,c
 14513                           
 14514                           ; BSR set to: 13
 14515  001DCA  0012               	return	
 14516  001DCC                     __end_of_USBStdFeatureReqHandler:
 14517                           	opt stack 0
 14518                           tblptru	equ	0xFF8
 14519                           tblptrh	equ	0xFF7
 14520                           tblptrl	equ	0xFF6
 14521                           tablat	equ	0xFF5
 14522                           prodh	equ	0xFF4
 14523                           prodl	equ	0xFF3
 14524                           intcon	equ	0xFF2
 14525                           intcon2	equ	0xFF1
 14526                           intcon3	equ	0xFF0
 14527                           indf0	equ	0xFEF
 14528                           postinc0	equ	0xFEE
 14529                           fsr0h	equ	0xFEA
 14530                           fsr0l	equ	0xFE9
 14531                           wreg	equ	0xFE8
 14532                           indf1	equ	0xFE7
 14533                           postdec1	equ	0xFE5
 14534                           plusw1	equ	0xFE3
 14535                           fsr1h	equ	0xFE2
 14536                           fsr1l	equ	0xFE1
 14537                           indf2	equ	0xFDF
 14538                           postinc2	equ	0xFDE
 14539                           postdec2	equ	0xFDD
 14540                           plusw2	equ	0xFDB
 14541                           fsr2h	equ	0xFDA
 14542                           fsr2l	equ	0xFD9
 14543                           status	equ	0xFD8
 14544                           
 14545 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 14546 ;; Defined at:
 14547 ;;		line 54 in file "usb_events.c"
 14548 ;; Parameters:    Size  Location     Type
 14549 ;;  event           2   15[COMRAM] enum E6832
 14550 ;;  pdata           2   17[COMRAM] PTR void 
 14551 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 14552 ;;		 -> BDT(48), 
 14553 ;;  size            2   19[COMRAM] unsigned int 
 14554 ;; Auto vars:     Size  Location     Type
 14555 ;;		None
 14556 ;; Return value:  Size  Location     Type
 14557 ;;                  1    wreg      unsigned char 
 14558 ;; Registers used:
 14559 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 14560 ;; Tracked objects:
 14561 ;;		On entry : 0/0
 14562 ;;		On exit  : 0/0
 14563 ;;		Unchanged: 0/0
 14564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14567 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14568 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14569 ;;Total ram usage:        8 bytes
 14570 ;; Hardware stack levels used:    1
 14571 ;; Hardware stack levels required when called:    3
 14572 ;; This function calls:
 14573 ;;		_APP_DeviceCustomHIDInitialize
 14574 ;;		_APP_DeviceMSDInitialize
 14575 ;;		_MSDTransferTerminated
 14576 ;;		_SYSTEM_Initialize
 14577 ;;		_USBCheckHIDRequest
 14578 ;;		_USBCheckMSDRequest
 14579 ;; This function is called by:
 14580 ;;		_USBDeviceTasks
 14581 ;;		_USBStdSetCfgHandler
 14582 ;;		_USBSuspend
 14583 ;;		_USBWakeFromSuspend
 14584 ;;		_USBCtrlTrfSetupHandler
 14585 ;;		_USBCheckStdRequest
 14586 ;;		_USBStdFeatureReqHandler
 14587 ;; This function uses a non-reentrant model
 14588 ;;
 14589                           
 14590                           	psect	text67
 14591  007272                     __ptext67:
 14592                           	opt stack 0
 14593  007272                     _USER_USB_CALLBACK_EVENT_HANDLER:
 14594                           	opt stack 26
 14595                           
 14596                           ;usb_events.c: 56: switch((int)event)
 14597                           
 14598                           ;incstack = 0
 14599  007272  D019               	goto	l800
 14600  007274                     
 14601                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 14602  007274  0E01               	movlw	1
 14603  007276  EC6B  F040         	call	_SYSTEM_Initialize
 14604                           
 14605                           ;usb_events.c: 79: break;
 14606  00727A  0012               	return	
 14607  00727C                     
 14608                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 14609  00727C  0E02               	movlw	2
 14610  00727E  EC6B  F040         	call	_SYSTEM_Initialize
 14611                           
 14612                           ;usb_events.c: 90: break;
 14613  007282  0012               	return	
 14614  007284                     
 14615                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 14616  007284  EC01  F044         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 14617                           
 14618                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 14619  007288  ECA4  F047         	call	_APP_DeviceMSDInitialize	;wreg free
 14620                           
 14621                           ;usb_events.c: 100: break;
 14622                           
 14623                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 14624                           
 14625                           ;usb_events.c: 97: break;
 14626  00728C  0012               	return	
 14627  00728E                     
 14628                           ;usb_events.c: 105: USBCheckHIDRequest();
 14629  00728E  ECBC  F029         	call	_USBCheckHIDRequest	;wreg free
 14630                           
 14631                           ;usb_events.c: 108: USBCheckMSDRequest();
 14632  007292  ECAA  F02F         	call	_USBCheckMSDRequest	;wreg free
 14633                           
 14634                           ;usb_events.c: 112: break;
 14635                           
 14636                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 14637                           
 14638                           ;usb_events.c: 109: break;
 14639  007296  0012               	return	
 14640  007298                     
 14641                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 14642  007298  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 14643  00729C  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 14644  0072A0  EC3E  F03F         	call	_MSDTransferTerminated	;wreg free
 14645                           
 14646                           ;usb_events.c: 129: }
 14647                           
 14648                           ;usb_events.c: 128: break;
 14649                           
 14650                           ;usb_events.c: 127: default:
 14651                           
 14652                           ;usb_events.c: 125: break;
 14653  0072A4  0012               	return	
 14654  0072A6                     l800:
 14655  0072A6  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 14656  0072AA  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 14657                           
 14658                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 14659                           ; Switch size 1, requested type "space"
 14660                           ; Number of cases is 2, Range of values is 0 to 127
 14661                           ; switch strategies available:
 14662                           ; Name         Instructions Cycles
 14663                           ; simple_byte            7     4 (average)
 14664                           ;	Chosen strategy is simple_byte
 14665  0072AE  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 14666  0072B0  0A00               	xorlw	0	; case 0
 14667  0072B2  B4D8               	btfsc	status,2,c
 14668  0072B4  D004               	goto	l16313
 14669  0072B6  0A7F               	xorlw	127	; case 127
 14670  0072B8  A4D8               	btfss	status,2,c
 14671  0072BA  0012               	return	
 14672  0072BC  D01A               	goto	l16315
 14673  0072BE                     l16313:
 14674                           
 14675                           ; Switch size 1, requested type "space"
 14676                           ; Number of cases is 8, Range of values is 1 to 117
 14677                           ; switch strategies available:
 14678                           ; Name         Instructions Cycles
 14679                           ; simple_byte           25    13 (average)
 14680                           ;	Chosen strategy is simple_byte
 14681  0072BE  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14682  0072C0  0A01               	xorlw	1	; case 1
 14683  0072C2  B4D8               	btfsc	status,2,c
 14684  0072C4  D7DF               	goto	l806
 14685  0072C6  0A03               	xorlw	3	; case 2
 14686  0072C8  B4D8               	btfsc	status,2,c
 14687  0072CA  0012               	return	
 14688  0072CC  0A01               	xorlw	1	; case 3
 14689  0072CE  B4D8               	btfsc	status,2,c
 14690  0072D0  D7DE               	goto	l808
 14691  0072D2  0A06               	xorlw	6	; case 5
 14692  0072D4  B4D8               	btfsc	status,2,c
 14693  0072D6  D7E0               	goto	l810
 14694  0072D8  0A77               	xorlw	119	; case 114
 14695  0072DA  B4D8               	btfsc	status,2,c
 14696  0072DC  0012               	return	
 14697  0072DE  0A01               	xorlw	1	; case 115
 14698  0072E0  B4D8               	btfsc	status,2,c
 14699  0072E2  0012               	return	
 14700  0072E4  0A07               	xorlw	7	; case 116
 14701  0072E6  B4D8               	btfsc	status,2,c
 14702  0072E8  D7C9               	goto	l805
 14703  0072EA  0A01               	xorlw	1	; case 117
 14704  0072EC  A4D8               	btfss	status,2,c
 14705  0072EE  0012               	return	
 14706  0072F0  D7C1               	goto	l804
 14707  0072F2                     l16315:
 14708                           
 14709                           ; Switch size 1, requested type "space"
 14710                           ; Number of cases is 1, Range of values is 255 to 255
 14711                           ; switch strategies available:
 14712                           ; Name         Instructions Cycles
 14713                           ; simple_byte            4     3 (average)
 14714                           ;	Chosen strategy is simple_byte
 14715  0072F2  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 14716  0072F4  0AFF               	xorlw	255	; case 255
 14717  0072F6  0012               	return	
 14718  0072F8                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 14719                           	opt stack 0
 14720                           tblptru	equ	0xFF8
 14721                           tblptrh	equ	0xFF7
 14722                           tblptrl	equ	0xFF6
 14723                           tablat	equ	0xFF5
 14724                           prodh	equ	0xFF4
 14725                           prodl	equ	0xFF3
 14726                           intcon	equ	0xFF2
 14727                           intcon2	equ	0xFF1
 14728                           intcon3	equ	0xFF0
 14729                           indf0	equ	0xFEF
 14730                           postinc0	equ	0xFEE
 14731                           fsr0h	equ	0xFEA
 14732                           fsr0l	equ	0xFE9
 14733                           wreg	equ	0xFE8
 14734                           indf1	equ	0xFE7
 14735                           postdec1	equ	0xFE5
 14736                           plusw1	equ	0xFE3
 14737                           fsr1h	equ	0xFE2
 14738                           fsr1l	equ	0xFE1
 14739                           indf2	equ	0xFDF
 14740                           postinc2	equ	0xFDE
 14741                           postdec2	equ	0xFDD
 14742                           plusw2	equ	0xFDB
 14743                           fsr2h	equ	0xFDA
 14744                           fsr2l	equ	0xFD9
 14745                           status	equ	0xFD8
 14746                           
 14747 ;; *************** function _USBCheckMSDRequest *****************
 14748 ;; Defined at:
 14749 ;;		line 218 in file "usb_device_msd.c"
 14750 ;; Parameters:    Size  Location     Type
 14751 ;;		None
 14752 ;; Auto vars:     Size  Location     Type
 14753 ;;		None
 14754 ;; Return value:  Size  Location     Type
 14755 ;;                  1    wreg      void 
 14756 ;; Registers used:
 14757 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 14758 ;; Tracked objects:
 14759 ;;		On entry : 0/0
 14760 ;;		On exit  : 0/0
 14761 ;;		Unchanged: 0/0
 14762 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14763 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14764 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14765 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14766 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14767 ;;Total ram usage:        4 bytes
 14768 ;; Hardware stack levels used:    1
 14769 ;; Hardware stack levels required when called:    1
 14770 ;; This function calls:
 14771 ;;		_USBTransferOnePacket
 14772 ;; This function is called by:
 14773 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 14774 ;; This function uses a non-reentrant model
 14775 ;;
 14776                           
 14777                           	psect	text68
 14778  005F54                     __ptext68:
 14779                           	opt stack 0
 14780  005F54                     _USBCheckMSDRequest:
 14781                           	opt stack 27
 14782                           
 14783                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 14784                           
 14785                           ;incstack = 0
 14786  005F54  010D               	movlb	13	; () banked
 14787  005F56  5130               	movf	48,w,b	;volatile
 14788  005F58  0B1F               	andlw	31
 14789  005F5A  06E8               	decf	wreg,f,c
 14790  005F5C  A4D8               	btfss	status,2,c
 14791  005F5E  0012               	return	
 14792                           
 14793                           ; BSR set to: 13
 14794                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 14795                           
 14796                           ; BSR set to: 13
 14797                           
 14798                           ; BSR set to: 13
 14799                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 14800  005F60  5134               	movf	52,w,b	;volatile
 14801  005F62  A4D8               	btfss	status,2,c
 14802  005F64  0012               	return	
 14803  005F66  D04F               	goto	l529
 14804  005F68                     
 14805                           ; BSR set to: 13
 14806                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 14807                           
 14808                           ; BSR set to: 13
 14809  005F68  5132               	movf	50,w,b	;volatile
 14810  005F6A  1133               	iorwf	51,w,b	;volatile
 14811  005F6C  A4D8               	btfss	status,2,c
 14812  005F6E  0012               	return	
 14813                           
 14814                           ; BSR set to: 13
 14815  005F70  5136               	movf	54,w,b	;volatile
 14816  005F72  1137               	iorwf	55,w,b	;volatile
 14817  005F74  A4D8               	btfss	status,2,c
 14818  005F76  0012               	return	
 14819                           
 14820                           ; BSR set to: 13
 14821                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 14822                           
 14823                           ; BSR set to: 13
 14824                           
 14825                           ; BSR set to: 13
 14826                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 14827  005F78  0E00               	movlw	0
 14828  005F7A  0100               	movlb	0	; () banked
 14829  005F7C  6FED               	movwf	_MSD_State& (0+255),b
 14830                           
 14831                           ; BSR set to: 0
 14832                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 14833  005F7E  69EC               	setf	_MSDCommandState& (0+255),b
 14834                           
 14835                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 14836  005F80  0E00               	movlw	0
 14837  005F82  6FEB               	movwf	_MSDReadState& (0+255),b
 14838                           
 14839                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 14840  005F84  0E00               	movlw	0
 14841  005F86  6FEA               	movwf	_MSDWriteState& (0+255),b
 14842                           
 14843                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 14844  005F88  0E01               	movlw	1
 14845  005F8A  0101               	movlb	1	; () banked
 14846  005F8C  6F8E               	movwf	_MSDCBWValid& (0+255),b
 14847                           
 14848                           ; BSR set to: 1
 14849                           
 14850                           ; BSR set to: 1
 14851                           
 14852                           ; BSR set to: 1
 14853                           
 14854                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 14855  005F8E  C144  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 14856  005F92  C145  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 14857                           
 14858                           ; BSR set to: 1
 14859  005F96  500C               	movf	_USBCheckMSDRequest$2319,w,c
 14860  005F98  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 14861  005F9A  B4D8               	btfsc	status,2,c
 14862  005F9C  D00A               	goto	u7660
 14863                           
 14864                           ; BSR set to: 1
 14865                           
 14866                           ; BSR set to: 1
 14867                           
 14868                           ; BSR set to: 1
 14869                           
 14870                           ; BSR set to: 1
 14871  005F9E  C144  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 14872  005FA2  C145  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 14873                           
 14874                           ; BSR set to: 1
 14875                           
 14876                           ; BSR set to: 1
 14877  005FA6  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 14878  005FAA  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 14879  005FAE  BEDF               	btfsc	indf2,7,c
 14880  005FB0  D00F               	goto	l534
 14881  005FB2                     u7660:
 14882                           
 14883                           ; BSR set to: 1
 14884                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 14885                           
 14886                           ; BSR set to: 1
 14887  005FB2  0E00               	movlw	0
 14888  005FB4  6E01               	movwf	USBTransferOnePacket@dir,c
 14889  005FB6  0E40               	movlw	64
 14890  005FB8  6E02               	movwf	USBTransferOnePacket@data,c
 14891  005FBA  0E0D               	movlw	13
 14892  005FBC  6E03               	movwf	USBTransferOnePacket@data+1,c
 14893  005FBE  0E40               	movlw	64
 14894  005FC0  6E04               	movwf	USBTransferOnePacket@len,c
 14895  005FC2  0E02               	movlw	2
 14896  005FC4  ECF2  F025         	call	_USBTransferOnePacket
 14897  005FC8  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 14898  005FCC  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 14899  005FD0                     l534:
 14900                           
 14901                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 14902  005FD0  0E80               	movlw	128
 14903  005FD2  0100               	movlb	0	; () banked
 14904  005FD4  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14905                           
 14906                           ;usb_device_msd.c: 263: break;
 14907  005FD6  0012               	return	
 14908  005FD8                     
 14909                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 14910                           
 14911                           ; BSR set to: 0
 14912  005FD8  010D               	movlb	13	; () banked
 14913  005FDA  5132               	movf	50,w,b	;volatile
 14914  005FDC  1133               	iorwf	51,w,b	;volatile
 14915  005FDE  A4D8               	btfss	status,2,c
 14916  005FE0  0012               	return	
 14917                           
 14918                           ; BSR set to: 13
 14919  005FE2  0536               	decf	54,w,b	;volatile
 14920  005FE4  1137               	iorwf	55,w,b	;volatile
 14921  005FE6  A4D8               	btfss	status,2,c
 14922  005FE8  0012               	return	
 14923                           
 14924                           ; BSR set to: 13
 14925                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 14926                           
 14927                           ; BSR set to: 13
 14928                           
 14929                           ; BSR set to: 13
 14930                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 14931  005FEA  0E00               	movlw	0
 14932  005FEC  6F38               	movwf	56,b	;volatile
 14933                           
 14934                           ; BSR set to: 13
 14935                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 14936  005FEE  0E38               	movlw	56
 14937  005FF0  0100               	movlb	0	; () banked
 14938  005FF2  6FCB               	movwf	_inPipes& (0+255),b
 14939  005FF4  0E0D               	movlw	13
 14940  005FF6  6FCC               	movwf	(_inPipes+1)& (0+255),b
 14941                           
 14942                           ; BSR set to: 0
 14943  005FF8  0E00               	movlw	0
 14944  005FFA  6FD0               	movwf	(_inPipes+5)& (0+255),b
 14945  005FFC  0E01               	movlw	1
 14946  005FFE  6FCF               	movwf	(_inPipes+4)& (0+255),b
 14947                           
 14948                           ; BSR set to: 0
 14949  006000  0EC1               	movlw	193
 14950  006002  6FCE               	movwf	(_inPipes+3)& (0+255),b
 14951                           
 14952                           ; BSR set to: 0
 14953                           ;usb_device_msd.c: 278: }
 14954                           
 14955                           ;usb_device_msd.c: 277: break;
 14956  006004  0012               	return	
 14957  006006                     l529:
 14958                           
 14959                           ; BSR set to: 0
 14960  006006  010D               	movlb	13	; () banked
 14961  006008  5131               	movf	49,w,b	;volatile
 14962                           
 14963                           ; Switch size 1, requested type "space"
 14964                           ; Number of cases is 2, Range of values is 254 to 255
 14965                           ; switch strategies available:
 14966                           ; Name         Instructions Cycles
 14967                           ; simple_byte            7     4 (average)
 14968                           ;	Chosen strategy is simple_byte
 14969  00600A  0AFE               	xorlw	254	; case 254
 14970  00600C  B4D8               	btfsc	status,2,c
 14971  00600E  D7E4               	goto	l546
 14972  006010  0A01               	xorlw	1	; case 255
 14973  006012  A4D8               	btfss	status,2,c
 14974  006014  0012               	return	
 14975  006016  D7A8               	goto	l530
 14976  006018                     __end_of_USBCheckMSDRequest:
 14977                           	opt stack 0
 14978                           tblptru	equ	0xFF8
 14979                           tblptrh	equ	0xFF7
 14980                           tblptrl	equ	0xFF6
 14981                           tablat	equ	0xFF5
 14982                           prodh	equ	0xFF4
 14983                           prodl	equ	0xFF3
 14984                           intcon	equ	0xFF2
 14985                           intcon2	equ	0xFF1
 14986                           intcon3	equ	0xFF0
 14987                           indf0	equ	0xFEF
 14988                           postinc0	equ	0xFEE
 14989                           fsr0h	equ	0xFEA
 14990                           fsr0l	equ	0xFE9
 14991                           wreg	equ	0xFE8
 14992                           indf1	equ	0xFE7
 14993                           postdec1	equ	0xFE5
 14994                           plusw1	equ	0xFE3
 14995                           fsr1h	equ	0xFE2
 14996                           fsr1l	equ	0xFE1
 14997                           indf2	equ	0xFDF
 14998                           postinc2	equ	0xFDE
 14999                           postdec2	equ	0xFDD
 15000                           plusw2	equ	0xFDB
 15001                           fsr2h	equ	0xFDA
 15002                           fsr2l	equ	0xFD9
 15003                           status	equ	0xFD8
 15004                           
 15005 ;; *************** function _USBCheckHIDRequest *****************
 15006 ;; Defined at:
 15007 ;;		line 153 in file "usb_device_hid.c"
 15008 ;; Parameters:    Size  Location     Type
 15009 ;;		None
 15010 ;; Auto vars:     Size  Location     Type
 15011 ;;		None
 15012 ;; Return value:  Size  Location     Type
 15013 ;;                  1    wreg      void 
 15014 ;; Registers used:
 15015 ;;		wreg, status,2, status,0
 15016 ;; Tracked objects:
 15017 ;;		On entry : 0/0
 15018 ;;		On exit  : 0/0
 15019 ;;		Unchanged: 0/0
 15020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15022 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15024 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15025 ;;Total ram usage:        0 bytes
 15026 ;; Hardware stack levels used:    1
 15027 ;; This function calls:
 15028 ;;		Nothing
 15029 ;; This function is called by:
 15030 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15031 ;; This function uses a non-reentrant model
 15032 ;;
 15033                           
 15034                           	psect	text69
 15035  005378                     __ptext69:
 15036                           	opt stack 0
 15037  005378                     _USBCheckHIDRequest:
 15038                           	opt stack 28
 15039                           
 15040                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 15041                           
 15042                           ;incstack = 0
 15043  005378  010D               	movlb	13	; () banked
 15044  00537A  5130               	movf	48,w,b	;volatile
 15045  00537C  0B1F               	andlw	31
 15046  00537E  06E8               	decf	wreg,f,c
 15047  005380  A4D8               	btfss	status,2,c
 15048  005382  0012               	return	
 15049                           
 15050                           ; BSR set to: 13
 15051                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 15052                           
 15053                           ; BSR set to: 13
 15054                           
 15055                           ; BSR set to: 13
 15056  005384  5134               	movf	52,w,b	;volatile
 15057  005386  A4D8               	btfss	status,2,c
 15058  005388  0012               	return	
 15059                           
 15060                           ; BSR set to: 13
 15061                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 15062                           
 15063                           ; BSR set to: 13
 15064                           
 15065                           ; BSR set to: 13
 15066  00538A  0E06               	movlw	6
 15067  00538C  1931               	xorwf	49,w,b	;volatile
 15068  00538E  B4D8               	btfsc	status,2,c
 15069  005390  D01A               	goto	l411
 15070  005392  D022               	goto	l414
 15071  005394                     
 15072                           ; BSR set to: 13
 15073                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 15074                           
 15075                           ; BSR set to: 13
 15076  005394  0100               	movlb	0	; () banked
 15077  005396  05FE               	decf	_USBActiveConfiguration& (0+255),w,b
 15078  005398  A4D8               	btfss	status,2,c
 15079  00539A  D01E               	goto	l414
 15080                           
 15081                           ; BSR set to: 0
 15082                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 15083  00539C  0EBA               	movlw	low (_configDescriptor1+18)
 15084  00539E  6FCB               	movwf	_inPipes& (0+255),b
 15085  0053A0  0E9E               	movlw	high (_configDescriptor1+18)
 15086  0053A2  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15087                           
 15088                           ; BSR set to: 0
 15089  0053A4  0E00               	movlw	0
 15090  0053A6  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15091  0053A8  0E09               	movlw	9
 15092  0053AA  D00B               	goto	L13
 15093  0053AC                     l10989:
 15094                           
 15095                           ; BSR set to: 0
 15096  0053AC  0EC0               	movlw	192
 15097  0053AE  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15098                           
 15099                           ; BSR set to: 0
 15100                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 15101  0053B0  D013               	goto	l414
 15102  0053B2                     
 15103                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 15104                           
 15105                           ; BSR set to: 0
 15106  0053B2  0E6E               	movlw	low _hid_rpt01
 15107  0053B4  0100               	movlb	0	; () banked
 15108  0053B6  6FCB               	movwf	_inPipes& (0+255),b
 15109  0053B8  0E9F               	movlw	high _hid_rpt01
 15110  0053BA  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15111                           
 15112                           ; BSR set to: 0
 15113  0053BC  0E00               	movlw	0
 15114  0053BE  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15115  0053C0  0E1D               	movlw	29
 15116  0053C2                     L13:
 15117  0053C2  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15118  0053C4  D7F3               	goto	l10989
 15119  0053C6                     l411:
 15120                           
 15121                           ; BSR set to: 0
 15122  0053C6  010D               	movlb	13	; () banked
 15123  0053C8  5133               	movf	51,w,b	;volatile
 15124                           
 15125                           ; Switch size 1, requested type "space"
 15126                           ; Number of cases is 3, Range of values is 33 to 35
 15127                           ; switch strategies available:
 15128                           ; Name         Instructions Cycles
 15129                           ; simple_byte           10     6 (average)
 15130                           ;	Chosen strategy is simple_byte
 15131  0053CA  0A21               	xorlw	33	; case 33
 15132  0053CC  B4D8               	btfsc	status,2,c
 15133  0053CE  D7E2               	goto	l412
 15134  0053D0  0A03               	xorlw	3	; case 34
 15135  0053D2  B4D8               	btfsc	status,2,c
 15136  0053D4  D7EE               	goto	l415
 15137  0053D6  0A01               	xorlw	1	; case 35
 15138  0053D8                     l414:
 15139                           
 15140                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 15141                           
 15142                           ; BSR set to: 13
 15143                           
 15144                           ; BSR set to: 13
 15145  0053D8  010D               	movlb	13	; () banked
 15146  0053DA  3930               	swapf	48,w,b	;volatile
 15147  0053DC  32E8               	rrcf	wreg,f,c
 15148  0053DE  0B03               	andlw	3
 15149  0053E0  06E8               	decf	wreg,f,c
 15150  0053E2  A4D8               	btfss	status,2,c
 15151  0053E4  0012               	return	
 15152  0053E6  D024               	goto	l418
 15153  0053E8                     
 15154                           ; BSR set to: 13
 15155                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 15156                           
 15157                           ; BSR set to: 13
 15158  0053E8  0EB2               	movlw	low _idle_rate
 15159  0053EA  0100               	movlb	0	; () banked
 15160  0053EC  6FCB               	movwf	_inPipes& (0+255),b
 15161  0053EE  0E01               	movlw	high _idle_rate
 15162  0053F0  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15163                           
 15164                           ; BSR set to: 0
 15165  0053F2  0E00               	movlw	0
 15166  0053F4  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15167  0053F6  0E01               	movlw	1
 15168  0053F8  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15169                           
 15170                           ; BSR set to: 0
 15171  0053FA  0EC1               	movlw	193
 15172  0053FC  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15173                           
 15174                           ;usb_device_hid.c: 223: break;
 15175  0053FE  0012               	return	
 15176  005400                     
 15177                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 15178                           
 15179                           ; BSR set to: 0
 15180  005400  0E80               	movlw	128
 15181  005402  0100               	movlb	0	; () banked
 15182  005404  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15183                           
 15184                           ; BSR set to: 0
 15185                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 15186  005406  CD33 F1B2          	movff	3379,_idle_rate	;volatile
 15187                           
 15188                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 15189  00540A  0012               	return	
 15190  00540C                     
 15191                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 15192                           
 15193                           ; BSR set to: 0
 15194  00540C  0EB1               	movlw	low _active_protocol
 15195  00540E  0100               	movlb	0	; () banked
 15196  005410  6FCB               	movwf	_inPipes& (0+255),b
 15197  005412  0E01               	movlw	high _active_protocol
 15198  005414  6FCC               	movwf	(_inPipes+1)& (0+255),b
 15199                           
 15200                           ; BSR set to: 0
 15201  005416  0E00               	movlw	0
 15202  005418  6FD0               	movwf	(_inPipes+5)& (0+255),b
 15203  00541A  0E01               	movlw	1
 15204  00541C  6FCF               	movwf	(_inPipes+4)& (0+255),b
 15205                           
 15206                           ; BSR set to: 0
 15207  00541E  0E81               	movlw	129
 15208  005420  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15209                           
 15210                           ;usb_device_hid.c: 234: break;
 15211  005422  0012               	return	
 15212  005424                     
 15213                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 15214                           
 15215                           ; BSR set to: 0
 15216  005424  0E80               	movlw	128
 15217  005426  0100               	movlb	0	; () banked
 15218  005428  6FCE               	movwf	(_inPipes+3)& (0+255),b
 15219                           
 15220                           ; BSR set to: 0
 15221                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 15222  00542A  CD32 F1B1          	movff	3378,_active_protocol	;volatile
 15223                           
 15224                           ; BSR set to: 0
 15225                           ;usb_device_hid.c: 239: }
 15226                           
 15227                           ;usb_device_hid.c: 238: break;
 15228  00542E  0012               	return	
 15229  005430                     l418:
 15230                           
 15231                           ; BSR set to: 0
 15232  005430  010D               	movlb	13	; () banked
 15233  005432  5131               	movf	49,w,b	;volatile
 15234                           
 15235                           ; Switch size 1, requested type "space"
 15236                           ; Number of cases is 6, Range of values is 1 to 11
 15237                           ; switch strategies available:
 15238                           ; Name         Instructions Cycles
 15239                           ; simple_byte           19    10 (average)
 15240                           ;	Chosen strategy is simple_byte
 15241  005434  0A01               	xorlw	1	; case 1
 15242  005436  B4D8               	btfsc	status,2,c
 15243  005438  0012               	return	
 15244  00543A  0A03               	xorlw	3	; case 2
 15245  00543C  B4D8               	btfsc	status,2,c
 15246  00543E  D7D4               	goto	l422
 15247  005440  0A01               	xorlw	1	; case 3
 15248  005442  B4D8               	btfsc	status,2,c
 15249  005444  D7E3               	goto	l424
 15250  005446  0A0A               	xorlw	10	; case 9
 15251  005448  B4D8               	btfsc	status,2,c
 15252  00544A  0012               	return	
 15253  00544C  0A03               	xorlw	3	; case 10
 15254  00544E  B4D8               	btfsc	status,2,c
 15255  005450  D7D7               	goto	l423
 15256  005452  0A01               	xorlw	1	; case 11
 15257  005454  A4D8               	btfss	status,2,c
 15258  005456  0012               	return	
 15259  005458  D7E5               	goto	l425
 15260  00545A                     __end_of_USBCheckHIDRequest:
 15261                           	opt stack 0
 15262                           tblptru	equ	0xFF8
 15263                           tblptrh	equ	0xFF7
 15264                           tblptrl	equ	0xFF6
 15265                           tablat	equ	0xFF5
 15266                           prodh	equ	0xFF4
 15267                           prodl	equ	0xFF3
 15268                           intcon	equ	0xFF2
 15269                           intcon2	equ	0xFF1
 15270                           intcon3	equ	0xFF0
 15271                           indf0	equ	0xFEF
 15272                           postinc0	equ	0xFEE
 15273                           fsr0h	equ	0xFEA
 15274                           fsr0l	equ	0xFE9
 15275                           wreg	equ	0xFE8
 15276                           indf1	equ	0xFE7
 15277                           postdec1	equ	0xFE5
 15278                           plusw1	equ	0xFE3
 15279                           fsr1h	equ	0xFE2
 15280                           fsr1l	equ	0xFE1
 15281                           indf2	equ	0xFDF
 15282                           postinc2	equ	0xFDE
 15283                           postdec2	equ	0xFDD
 15284                           plusw2	equ	0xFDB
 15285                           fsr2h	equ	0xFDA
 15286                           fsr2l	equ	0xFD9
 15287                           status	equ	0xFD8
 15288                           
 15289 ;; *************** function _SYSTEM_Initialize *****************
 15290 ;; Defined at:
 15291 ;;		line 80 in file "system.c"
 15292 ;; Parameters:    Size  Location     Type
 15293 ;;  state           1    wreg     enum E6623
 15294 ;; Auto vars:     Size  Location     Type
 15295 ;;  state           1    4[COMRAM] enum E6623
 15296 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 15297 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 15298 ;; Return value:  Size  Location     Type
 15299 ;;                  1    wreg      void 
 15300 ;; Registers used:
 15301 ;;		wreg, status,2, status,0
 15302 ;; Tracked objects:
 15303 ;;		On entry : 0/0
 15304 ;;		On exit  : 0/0
 15305 ;;		Unchanged: 0/0
 15306 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15307 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15308 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15309 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15310 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15311 ;;Total ram usage:        5 bytes
 15312 ;; Hardware stack levels used:    1
 15313 ;; This function calls:
 15314 ;;		Nothing
 15315 ;; This function is called by:
 15316 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15317 ;;		_main
 15318 ;; This function uses a non-reentrant model
 15319 ;;
 15320                           
 15321                           	psect	text70
 15322  0080D6                     __ptext70:
 15323                           	opt stack 0
 15324  0080D6                     _SYSTEM_Initialize:
 15325                           	opt stack 28
 15326                           
 15327                           ;incstack = 0
 15328                           ;SYSTEM_Initialize@state stored from wreg
 15329  0080D6  6E05               	movwf	SYSTEM_Initialize@state,c
 15330                           
 15331                           ;system.c: 82: switch(state)
 15332  0080D8  D01D               	goto	l926
 15333  0080DA                     
 15334                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 15335  0080DA  0E02               	movlw	2
 15336  0080DC  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 15337  0080DE  0E58               	movlw	88
 15338  0080E0  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 15339                           
 15340                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 15341  0080E2  8C9B               	bsf	3995,6,c	;volatile
 15342  0080E4                     l11175:
 15343  0080E4  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 15344  0080E6  A0D8               	btfss	status,0,c
 15345  0080E8  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 15346  0080EA  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 15347  0080EC  E1FB               	bnz	l11175
 15348  0080EE  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 15349  0080F0  B4D8               	btfsc	status,2,c
 15350  0080F2  0012               	return	
 15351  0080F4  D7F7               	goto	l929
 15352  0080F6                     
 15353                           ;system.c: 119: OSCCON = 0x70;
 15354  0080F6  0E70               	movlw	112
 15355  0080F8  6ED3               	movwf	4051,c	;volatile
 15356                           
 15357                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 15358  0080FA  0E03               	movlw	3
 15359  0080FC  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3113+1,c
 15360  0080FE  0E20               	movlw	32
 15361  008100  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3113,c
 15362  008102                     l11179:
 15363  008102  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3113,f,c
 15364  008104  A0D8               	btfss	status,0,c
 15365  008106  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3113+1,f,c
 15366  008108  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3113,w,c
 15367  00810A  E1FB               	bnz	l11179
 15368  00810C  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3113+1,w,c
 15369  00810E  B4D8               	btfsc	status,2,c
 15370  008110  0012               	return	
 15371  008112  D7F7               	goto	l935
 15372  008114                     l926:
 15373  008114  5005               	movf	SYSTEM_Initialize@state,w,c
 15374                           
 15375                           ; Switch size 1, requested type "space"
 15376                           ; Number of cases is 3, Range of values is 0 to 2
 15377                           ; switch strategies available:
 15378                           ; Name         Instructions Cycles
 15379                           ; simple_byte           10     6 (average)
 15380                           ;	Chosen strategy is simple_byte
 15381  008116  0A00               	xorlw	0	; case 0
 15382  008118  B4D8               	btfsc	status,2,c
 15383  00811A  D7DF               	goto	l927
 15384  00811C  0A01               	xorlw	1	; case 1
 15385  00811E  B4D8               	btfsc	status,2,c
 15386  008120  0012               	return	
 15387  008122  0A03               	xorlw	3	; case 2
 15388  008124  A4D8               	btfss	status,2,c
 15389  008126  0012               	return	
 15390  008128  D7E6               	goto	l933
 15391  00812A                     __end_of_SYSTEM_Initialize:
 15392                           	opt stack 0
 15393                           tblptru	equ	0xFF8
 15394                           tblptrh	equ	0xFF7
 15395                           tblptrl	equ	0xFF6
 15396                           tablat	equ	0xFF5
 15397                           prodh	equ	0xFF4
 15398                           prodl	equ	0xFF3
 15399                           intcon	equ	0xFF2
 15400                           intcon2	equ	0xFF1
 15401                           intcon3	equ	0xFF0
 15402                           indf0	equ	0xFEF
 15403                           postinc0	equ	0xFEE
 15404                           fsr0h	equ	0xFEA
 15405                           fsr0l	equ	0xFE9
 15406                           wreg	equ	0xFE8
 15407                           indf1	equ	0xFE7
 15408                           postdec1	equ	0xFE5
 15409                           plusw1	equ	0xFE3
 15410                           fsr1h	equ	0xFE2
 15411                           fsr1l	equ	0xFE1
 15412                           indf2	equ	0xFDF
 15413                           postinc2	equ	0xFDE
 15414                           postdec2	equ	0xFDD
 15415                           plusw2	equ	0xFDB
 15416                           fsr2h	equ	0xFDA
 15417                           fsr2l	equ	0xFD9
 15418                           status	equ	0xFD8
 15419                           
 15420 ;; *************** function _MSDTransferTerminated *****************
 15421 ;; Defined at:
 15422 ;;		line 1674 in file "usb_device_msd.c"
 15423 ;; Parameters:    Size  Location     Type
 15424 ;;  handle          2   11[COMRAM] PTR void 
 15425 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 15426 ;;		 -> BDT(48), 
 15427 ;; Auto vars:     Size  Location     Type
 15428 ;;		None
 15429 ;; Return value:  Size  Location     Type
 15430 ;;                  1    wreg      void 
 15431 ;; Registers used:
 15432 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15433 ;; Tracked objects:
 15434 ;;		On entry : 0/0
 15435 ;;		On exit  : 0/0
 15436 ;;		Unchanged: 0/0
 15437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15438 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15439 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15440 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15441 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15442 ;;Total ram usage:        4 bytes
 15443 ;; Hardware stack levels used:    1
 15444 ;; Hardware stack levels required when called:    1
 15445 ;; This function calls:
 15446 ;;		_USBStallEndpoint
 15447 ;;		_USBTransferOnePacket
 15448 ;; This function is called by:
 15449 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15450 ;; This function uses a non-reentrant model
 15451 ;;
 15452                           
 15453                           	psect	text71
 15454  007E7C                     __ptext71:
 15455                           	opt stack 0
 15456  007E7C                     _MSDTransferTerminated:
 15457                           	opt stack 27
 15458                           
 15459                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 15460                           
 15461                           ;incstack = 0
 15462  007E7C  0101               	movlb	1	; () banked
 15463  007E7E  518E               	movf	_MSDCBWValid& (0+255),w,b
 15464  007E80  A4D8               	btfss	status,2,c
 15465  007E82  D00B               	goto	l764
 15466                           
 15467                           ; BSR set to: 1
 15468                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 15469  007E84  0E01               	movlw	1
 15470  007E86  6E01               	movwf	USBStallEndpoint@dir,c
 15471  007E88  0E02               	movlw	2
 15472  007E8A  ECE7  F023         	call	_USBStallEndpoint
 15473                           
 15474                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 15475  007E8E  0E00               	movlw	0
 15476  007E90  6E01               	movwf	USBStallEndpoint@dir,c
 15477  007E92  0E02               	movlw	2
 15478  007E94  ECE7  F023         	call	_USBStallEndpoint
 15479                           
 15480                           ;usb_device_msd.c: 1681: }
 15481  007E98  0012               	return	
 15482  007E9A                     l764:
 15483  007E9A  C144  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 15484  007E9E  C145  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 15485  007EA2  500E               	movf	_MSDTransferTerminated$2407,w,c
 15486  007EA4  180C               	xorwf	MSDTransferTerminated@handle,w,c
 15487  007EA6  E114               	bnz	l767
 15488  007EA8  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 15489  007EAA  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 15490  007EAC  A4D8               	btfss	status,2,c
 15491  007EAE  0012               	return	
 15492                           
 15493                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 15494  007EB0  0E00               	movlw	0
 15495  007EB2  6E01               	movwf	USBTransferOnePacket@dir,c
 15496  007EB4  0E40               	movlw	64
 15497  007EB6  6E02               	movwf	USBTransferOnePacket@data,c
 15498  007EB8  0E0D               	movlw	13
 15499  007EBA  6E03               	movwf	USBTransferOnePacket@data+1,c
 15500  007EBC  0E40               	movlw	64
 15501  007EBE  6E04               	movwf	USBTransferOnePacket@len,c
 15502  007EC0  0E02               	movlw	2
 15503  007EC2  ECF2  F025         	call	_USBTransferOnePacket
 15504  007EC6  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15505  007ECA  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15506  007ECE  0012               	return	
 15507  007ED0                     l767:
 15508  007ED0  0012               	return		;funcret
 15509  007ED2                     __end_of_MSDTransferTerminated:
 15510                           	opt stack 0
 15511                           tblptru	equ	0xFF8
 15512                           tblptrh	equ	0xFF7
 15513                           tblptrl	equ	0xFF6
 15514                           tablat	equ	0xFF5
 15515                           prodh	equ	0xFF4
 15516                           prodl	equ	0xFF3
 15517                           intcon	equ	0xFF2
 15518                           intcon2	equ	0xFF1
 15519                           intcon3	equ	0xFF0
 15520                           indf0	equ	0xFEF
 15521                           postinc0	equ	0xFEE
 15522                           fsr0h	equ	0xFEA
 15523                           fsr0l	equ	0xFE9
 15524                           wreg	equ	0xFE8
 15525                           indf1	equ	0xFE7
 15526                           postdec1	equ	0xFE5
 15527                           plusw1	equ	0xFE3
 15528                           fsr1h	equ	0xFE2
 15529                           fsr1l	equ	0xFE1
 15530                           indf2	equ	0xFDF
 15531                           postinc2	equ	0xFDE
 15532                           postdec2	equ	0xFDD
 15533                           plusw2	equ	0xFDB
 15534                           fsr2h	equ	0xFDA
 15535                           fsr2l	equ	0xFD9
 15536                           status	equ	0xFD8
 15537                           
 15538 ;; *************** function _APP_DeviceMSDInitialize *****************
 15539 ;; Defined at:
 15540 ;;		line 84 in file "app_device_msd.c"
 15541 ;; Parameters:    Size  Location     Type
 15542 ;;		None
 15543 ;; Auto vars:     Size  Location     Type
 15544 ;;		None
 15545 ;; Return value:  Size  Location     Type
 15546 ;;                  1    wreg      void 
 15547 ;; Registers used:
 15548 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15549 ;; Tracked objects:
 15550 ;;		On entry : 0/0
 15551 ;;		On exit  : 0/0
 15552 ;;		Unchanged: 0/0
 15553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15554 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15555 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15556 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15557 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15558 ;;Total ram usage:        0 bytes
 15559 ;; Hardware stack levels used:    1
 15560 ;; Hardware stack levels required when called:    2
 15561 ;; This function calls:
 15562 ;;		_USBEnableEndpoint
 15563 ;;		_USBMSDInit
 15564 ;; This function is called by:
 15565 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15566 ;; This function uses a non-reentrant model
 15567 ;;
 15568                           
 15569                           	psect	text72
 15570  008F48                     __ptext72:
 15571                           	opt stack 0
 15572  008F48                     _APP_DeviceMSDInitialize:
 15573                           	opt stack 26
 15574                           
 15575                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 15576                           
 15577                           ;incstack = 0
 15578  008F48  0E1E               	movlw	30
 15579  008F4A  6E09               	movwf	USBEnableEndpoint@options,c
 15580  008F4C  0E02               	movlw	2
 15581  008F4E  EC3F  F043         	call	_USBEnableEndpoint
 15582                           
 15583                           ;app_device_msd.c: 93: USBMSDInit();
 15584  008F52  EC71  F025         	call	_USBMSDInit	;wreg free
 15585  008F56  0012               	return		;funcret
 15586  008F58                     __end_of_APP_DeviceMSDInitialize:
 15587                           	opt stack 0
 15588                           tblptru	equ	0xFF8
 15589                           tblptrh	equ	0xFF7
 15590                           tblptrl	equ	0xFF6
 15591                           tablat	equ	0xFF5
 15592                           prodh	equ	0xFF4
 15593                           prodl	equ	0xFF3
 15594                           intcon	equ	0xFF2
 15595                           intcon2	equ	0xFF1
 15596                           intcon3	equ	0xFF0
 15597                           indf0	equ	0xFEF
 15598                           postinc0	equ	0xFEE
 15599                           fsr0h	equ	0xFEA
 15600                           fsr0l	equ	0xFE9
 15601                           wreg	equ	0xFE8
 15602                           indf1	equ	0xFE7
 15603                           postdec1	equ	0xFE5
 15604                           plusw1	equ	0xFE3
 15605                           fsr1h	equ	0xFE2
 15606                           fsr1l	equ	0xFE1
 15607                           indf2	equ	0xFDF
 15608                           postinc2	equ	0xFDE
 15609                           postdec2	equ	0xFDD
 15610                           plusw2	equ	0xFDB
 15611                           fsr2h	equ	0xFDA
 15612                           fsr2l	equ	0xFD9
 15613                           status	equ	0xFD8
 15614                           
 15615 ;; *************** function _USBMSDInit *****************
 15616 ;; Defined at:
 15617 ;;		line 142 in file "usb_device_msd.c"
 15618 ;; Parameters:    Size  Location     Type
 15619 ;;		None
 15620 ;; Auto vars:     Size  Location     Type
 15621 ;;		None
 15622 ;; Return value:  Size  Location     Type
 15623 ;;                  1    wreg      void 
 15624 ;; Registers used:
 15625 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 15626 ;; Tracked objects:
 15627 ;;		On entry : 0/0
 15628 ;;		On exit  : 0/0
 15629 ;;		Unchanged: 0/0
 15630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15632 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15633 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15634 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15635 ;;Total ram usage:        3 bytes
 15636 ;; Hardware stack levels used:    1
 15637 ;; Hardware stack levels required when called:    1
 15638 ;; This function calls:
 15639 ;;		_ExternalFlash_MediaDetect
 15640 ;;		_ExternalFlash_MediaInitialize
 15641 ;;		_ResetSenseData
 15642 ;;		_USBTransferOnePacket
 15643 ;; This function is called by:
 15644 ;;		_APP_DeviceMSDInitialize
 15645 ;; This function uses a non-reentrant model
 15646 ;;
 15647                           
 15648                           	psect	text73
 15649  004AE2                     __ptext73:
 15650                           	opt stack 0
 15651  004AE2                     _USBMSDInit:
 15652                           	opt stack 26
 15653                           
 15654                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 15655                           
 15656                           ;incstack = 0
 15657  004AE2  0E00               	movlw	0
 15658  004AE4  6E01               	movwf	USBTransferOnePacket@dir,c
 15659  004AE6  0E40               	movlw	64
 15660  004AE8  6E02               	movwf	USBTransferOnePacket@data,c
 15661  004AEA  0E0D               	movlw	13
 15662  004AEC  6E03               	movwf	USBTransferOnePacket@data+1,c
 15663  004AEE  0E40               	movlw	64
 15664  004AF0  6E04               	movwf	USBTransferOnePacket@len,c
 15665  004AF2  0E02               	movlw	2
 15666  004AF4  ECF2  F025         	call	_USBTransferOnePacket
 15667  004AF8  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 15668  004AFC  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 15669  004B00  C0D5  F0DD         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 15670  004B04  C0D6  F0DE         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 15671                           
 15672                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 15673  004B08  0E00               	movlw	0
 15674  004B0A  0100               	movlb	0	; () banked
 15675  004B0C  6FED               	movwf	_MSD_State& (0+255),b
 15676                           
 15677                           ; BSR set to: 0
 15678                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 15679  004B0E  69EC               	setf	_MSDCommandState& (0+255),b
 15680                           
 15681                           ; BSR set to: 0
 15682                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 15683  004B10  0E00               	movlw	0
 15684  004B12  6FEB               	movwf	_MSDReadState& (0+255),b
 15685                           
 15686                           ; BSR set to: 0
 15687                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 15688  004B14  0E00               	movlw	0
 15689  004B16  6FEA               	movwf	_MSDWriteState& (0+255),b
 15690                           
 15691                           ; BSR set to: 0
 15692                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 15693  004B18  0E00               	movlw	0
 15694  004B1A  6FE7               	movwf	_MSDHostNoData& (0+255),b
 15695                           
 15696                           ; BSR set to: 0
 15697                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 15698  004B1C  0E00               	movlw	0
 15699  004B1E  0101               	movlb	1	; () banked
 15700  004B20  6F5A               	movwf	_gblNumBLKS& (0+255),b
 15701  004B22  0E00               	movlw	0
 15702  004B24  6F5B               	movwf	(_gblNumBLKS+1)& (0+255),b
 15703  004B26  0E00               	movlw	0
 15704  004B28  6F5C               	movwf	(_gblNumBLKS+2)& (0+255),b
 15705  004B2A  0E00               	movlw	0
 15706  004B2C  6F5D               	movwf	(_gblNumBLKS+3)& (0+255),b
 15707                           
 15708                           ; BSR set to: 1
 15709                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 15710  004B2E  0E00               	movlw	0
 15711  004B30  6F56               	movwf	_gblBLKLen& (0+255),b
 15712  004B32  0E00               	movlw	0
 15713  004B34  6F57               	movwf	(_gblBLKLen+1)& (0+255),b
 15714  004B36  0E00               	movlw	0
 15715  004B38  6F58               	movwf	(_gblBLKLen+2)& (0+255),b
 15716  004B3A  0E00               	movlw	0
 15717  004B3C  6F59               	movwf	(_gblBLKLen+3)& (0+255),b
 15718                           
 15719                           ; BSR set to: 1
 15720                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 15721  004B3E  0E01               	movlw	1
 15722  004B40  6F8E               	movwf	_MSDCBWValid& (0+255),b
 15723                           
 15724                           ; BSR set to: 1
 15725                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 15726  004B42  0E00               	movlw	0
 15727  004B44  6F83               	movwf	(_gblMediaPresent+1)& (0+255),b
 15728  004B46  0E00               	movlw	0
 15729  004B48  6F82               	movwf	_gblMediaPresent& (0+255),b
 15730                           
 15731                           ; BSR set to: 1
 15732                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 15733  004B4A  0E00               	movlw	0
 15734  004B4C  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 15735  004B4E  D046               	goto	l518
 15736  004B50                     
 15737                           ; BSR set to: 1
 15738                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 15739                           
 15740                           ; BSR set to: 1
 15741  004B50  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15742  004B52  0D01               	mullw	1
 15743  004B54  0EE8               	movlw	low _SoftDetach
 15744  004B56  24F3               	addwf	prodl,w,c
 15745  004B58  6ED9               	movwf	fsr2l,c
 15746  004B5A  0E00               	movlw	high _SoftDetach
 15747  004B5C  20F4               	addwfc	prodh,w,c
 15748  004B5E  6EDA               	movwf	fsr2h,c
 15749  004B60  0E00               	movlw	0
 15750  004B62  6EDF               	movwf	indf2,c
 15751                           
 15752                           ; BSR set to: 1
 15753                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 15754  004B64  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 15755  004B68  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 15756  004B6C  D801               	call	u7238
 15757  004B6E  D009               	goto	u7239
 15758  004B70                     u7238:
 15759  004B70  0005               	push	
 15760  004B72  6EFA               	movwf	pclath,c
 15761  004B74  51B9               	movf	(_LUN+6)& (0+255),w,b
 15762  004B76  6EFD               	movwf	tosl,c
 15763  004B78  51BA               	movf	(_LUN+7)& (0+255),w,b
 15764  004B7A  6EFE               	movwf	tosh,c
 15765  004B7C  6AFF               	clrf	tosu,c
 15766  004B7E  50FA               	movf	pclath,w,c
 15767  004B80  0012               	return		;indir
 15768  004B82                     u7239:
 15769  004B82  0900               	iorlw	0
 15770  004B84  B4D8               	btfsc	status,2,c
 15771  004B86  D026               	goto	l521
 15772                           
 15773                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 15774  004B88  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 15775  004B8C  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 15776  004B90  D801               	call	u7258
 15777  004B92  D00A               	goto	u7259
 15778  004B94                     u7258:
 15779  004B94  0005               	push	
 15780  004B96  6EFA               	movwf	pclath,c
 15781  004B98  0101               	movlb	1	; () banked
 15782  004B9A  51B3               	movf	_LUN& (0+255),w,b
 15783  004B9C  6EFD               	movwf	tosl,c
 15784  004B9E  51B4               	movf	(_LUN+1)& (0+255),w,b
 15785  004BA0  6EFE               	movwf	tosh,c
 15786  004BA2  6AFF               	clrf	tosu,c
 15787  004BA4  50FA               	movf	pclath,w,c
 15788  004BA6  0012               	return		;indir
 15789  004BA8                     u7259:
 15790  004BA8  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 15791  004BAA  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 15792  004BAC  B4D8               	btfsc	status,2,c
 15793  004BAE  D012               	goto	l521
 15794                           
 15795                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 15796  004BB0  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 15797  004BB4  0E01               	movlw	1
 15798  004BB6  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 15799  004BB8  0E00               	movlw	0
 15800  004BBA  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 15801  004BBC  2A0C               	incf	??_USBMSDInit,f,c
 15802  004BBE  D003               	goto	u7274
 15803  004BC0                     u7275:
 15804  004BC0  90D8               	bcf	status,0,c
 15805  004BC2  360D               	rlcf	??_USBMSDInit+1,f,c
 15806  004BC4  360E               	rlcf	??_USBMSDInit+2,f,c
 15807  004BC6                     u7274:
 15808  004BC6  2E0C               	decfsz	??_USBMSDInit,f,c
 15809  004BC8  D7FB               	goto	u7275
 15810  004BCA  500D               	movf	??_USBMSDInit+1,w,c
 15811  004BCC  0101               	movlb	1	; () banked
 15812  004BCE  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 15813  004BD0  500E               	movf	??_USBMSDInit+2,w,c
 15814  004BD2  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 15815  004BD4                     l521:
 15816                           
 15817                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 15818                           
 15819                           ; BSR set to: 1
 15820                           
 15821                           ; BSR set to: 1
 15822  004BD4  EC72  F03D         	call	_ResetSenseData	;wreg free
 15823  004BD8  0101               	movlb	1	; () banked
 15824  004BDA  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 15825  004BDC                     l518:
 15826                           
 15827                           ; BSR set to: 1
 15828                           
 15829                           ; BSR set to: 1
 15830  004BDC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 15831  004BDE  A4D8               	btfss	status,2,c
 15832  004BE0  0012               	return	
 15833  004BE2  D7B6               	goto	l519
 15834  004BE4                     __end_of_USBMSDInit:
 15835                           	opt stack 0
 15836                           tosu	equ	0xFFF
 15837                           tosh	equ	0xFFE
 15838                           tosl	equ	0xFFD
 15839                           pclath	equ	0xFFA
 15840                           tblptru	equ	0xFF8
 15841                           tblptrh	equ	0xFF7
 15842                           tblptrl	equ	0xFF6
 15843                           tablat	equ	0xFF5
 15844                           prodh	equ	0xFF4
 15845                           prodl	equ	0xFF3
 15846                           intcon	equ	0xFF2
 15847                           intcon2	equ	0xFF1
 15848                           intcon3	equ	0xFF0
 15849                           indf0	equ	0xFEF
 15850                           postinc0	equ	0xFEE
 15851                           fsr0h	equ	0xFEA
 15852                           fsr0l	equ	0xFE9
 15853                           wreg	equ	0xFE8
 15854                           indf1	equ	0xFE7
 15855                           postdec1	equ	0xFE5
 15856                           plusw1	equ	0xFE3
 15857                           fsr1h	equ	0xFE2
 15858                           fsr1l	equ	0xFE1
 15859                           indf2	equ	0xFDF
 15860                           postinc2	equ	0xFDE
 15861                           postdec2	equ	0xFDD
 15862                           plusw2	equ	0xFDB
 15863                           fsr2h	equ	0xFDA
 15864                           fsr2l	equ	0xFD9
 15865                           status	equ	0xFD8
 15866                           
 15867 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 15868 ;; Defined at:
 15869 ;;		line 47 in file "app_device_custom_hid.c"
 15870 ;; Parameters:    Size  Location     Type
 15871 ;;		None
 15872 ;; Auto vars:     Size  Location     Type
 15873 ;;		None
 15874 ;; Return value:  Size  Location     Type
 15875 ;;                  1    wreg      void 
 15876 ;; Registers used:
 15877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15878 ;; Tracked objects:
 15879 ;;		On entry : 0/0
 15880 ;;		On exit  : 0/0
 15881 ;;		Unchanged: 0/0
 15882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15885 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15886 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15887 ;;Total ram usage:        0 bytes
 15888 ;; Hardware stack levels used:    1
 15889 ;; Hardware stack levels required when called:    2
 15890 ;; This function calls:
 15891 ;;		_USBEnableEndpoint
 15892 ;;		_USBTransferOnePacket
 15893 ;; This function is called by:
 15894 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 15895 ;; This function uses a non-reentrant model
 15896 ;;
 15897                           
 15898                           	psect	text74
 15899  008802                     __ptext74:
 15900                           	opt stack 0
 15901  008802                     _APP_DeviceCustomHIDInitialize:
 15902                           	opt stack 26
 15903                           
 15904                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 15905                           
 15906                           ; BSR set to: 1
 15907                           ;incstack = 0
 15908  008802  0E00               	movlw	0
 15909  008804  0101               	movlb	1	; () banked
 15910  008806  6F7E               	movwf	_USBInHandle& (0+255),b
 15911  008808  0E00               	movlw	0
 15912  00880A  6F7F               	movwf	(_USBInHandle+1)& (0+255),b
 15913                           
 15914                           ; BSR set to: 1
 15915                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 15916  00880C  0E1E               	movlw	30
 15917  00880E  6E09               	movwf	USBEnableEndpoint@options,c
 15918  008810  0E01               	movlw	1
 15919  008812  EC3F  F043         	call	_USBEnableEndpoint
 15920                           
 15921                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 15922  008816  0E00               	movlw	0
 15923  008818  6E01               	movwf	USBTransferOnePacket@dir,c
 15924  00881A  0E50               	movlw	low _ReceivedDataBuffer
 15925  00881C  6E02               	movwf	USBTransferOnePacket@data,c
 15926  00881E  0E02               	movlw	high _ReceivedDataBuffer
 15927  008820  6E03               	movwf	USBTransferOnePacket@data+1,c
 15928  008822  0E40               	movlw	64
 15929  008824  6E04               	movwf	USBTransferOnePacket@len,c
 15930  008826  0E01               	movlw	1
 15931  008828  ECF2  F025         	call	_USBTransferOnePacket
 15932  00882C  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 15933  008830  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 15934  008834  0012               	return		;funcret
 15935  008836                     __end_of_APP_DeviceCustomHIDInitialize:
 15936                           	opt stack 0
 15937                           tosu	equ	0xFFF
 15938                           tosh	equ	0xFFE
 15939                           tosl	equ	0xFFD
 15940                           pclath	equ	0xFFA
 15941                           tblptru	equ	0xFF8
 15942                           tblptrh	equ	0xFF7
 15943                           tblptrl	equ	0xFF6
 15944                           tablat	equ	0xFF5
 15945                           prodh	equ	0xFF4
 15946                           prodl	equ	0xFF3
 15947                           intcon	equ	0xFF2
 15948                           intcon2	equ	0xFF1
 15949                           intcon3	equ	0xFF0
 15950                           indf0	equ	0xFEF
 15951                           postinc0	equ	0xFEE
 15952                           fsr0h	equ	0xFEA
 15953                           fsr0l	equ	0xFE9
 15954                           wreg	equ	0xFE8
 15955                           indf1	equ	0xFE7
 15956                           postdec1	equ	0xFE5
 15957                           plusw1	equ	0xFE3
 15958                           fsr1h	equ	0xFE2
 15959                           fsr1l	equ	0xFE1
 15960                           indf2	equ	0xFDF
 15961                           postinc2	equ	0xFDE
 15962                           postdec2	equ	0xFDD
 15963                           plusw2	equ	0xFDB
 15964                           fsr2h	equ	0xFDA
 15965                           fsr2l	equ	0xFD9
 15966                           status	equ	0xFD8
 15967                           
 15968 ;; *************** function _USBEnableEndpoint *****************
 15969 ;; Defined at:
 15970 ;;		line 878 in file "usb_device.c"
 15971 ;; Parameters:    Size  Location     Type
 15972 ;;  ep              1    wreg     unsigned char 
 15973 ;;  options         1    8[COMRAM] unsigned char 
 15974 ;; Auto vars:     Size  Location     Type
 15975 ;;  ep              1   11[COMRAM] unsigned char 
 15976 ;;  p               2    9[COMRAM] PTR unsigned char 
 15977 ;;		 -> UEP0(1), 
 15978 ;; Return value:  Size  Location     Type
 15979 ;;                  1    wreg      void 
 15980 ;; Registers used:
 15981 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 15982 ;; Tracked objects:
 15983 ;;		On entry : 0/0
 15984 ;;		On exit  : 0/0
 15985 ;;		Unchanged: 0/0
 15986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15987 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15988 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15989 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15990 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15991 ;;Total ram usage:        4 bytes
 15992 ;; Hardware stack levels used:    1
 15993 ;; Hardware stack levels required when called:    1
 15994 ;; This function calls:
 15995 ;;		_USBConfigureEndpoint
 15996 ;; This function is called by:
 15997 ;;		_APP_DeviceCustomHIDInitialize
 15998 ;;		_APP_DeviceMSDInitialize
 15999 ;; This function uses a non-reentrant model
 16000 ;;
 16001                           
 16002                           	psect	text75
 16003  00867E                     __ptext75:
 16004                           	opt stack 0
 16005  00867E                     _USBEnableEndpoint:
 16006                           	opt stack 26
 16007                           
 16008                           ;incstack = 0
 16009                           ;USBEnableEndpoint@ep stored from wreg
 16010  00867E  6E0C               	movwf	USBEnableEndpoint@ep,c
 16011                           
 16012                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 16013  008680  A409               	btfss	USBEnableEndpoint@options,2,c
 16014  008682  D005               	goto	l178
 16015                           
 16016                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 16017  008684  0E00               	movlw	0
 16018  008686  6E01               	movwf	USBConfigureEndpoint@direction,c
 16019  008688  500C               	movf	USBEnableEndpoint@ep,w,c
 16020  00868A  ECFF  F036         	call	_USBConfigureEndpoint
 16021  00868E                     l178:
 16022                           
 16023                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 16024  00868E  A209               	btfss	USBEnableEndpoint@options,1,c
 16025  008690  D005               	goto	l179
 16026                           
 16027                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 16028  008692  0E01               	movlw	1
 16029  008694  6E01               	movwf	USBConfigureEndpoint@direction,c
 16030  008696  500C               	movf	USBEnableEndpoint@ep,w,c
 16031  008698  ECFF  F036         	call	_USBConfigureEndpoint
 16032  00869C                     l179:
 16033                           
 16034                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 16035  00869C  500C               	movf	USBEnableEndpoint@ep,w,c
 16036  00869E  0D01               	mullw	1
 16037  0086A0  0E26               	movlw	38
 16038  0086A2  24F3               	addwf	prodl,w,c
 16039  0086A4  6E0A               	movwf	USBEnableEndpoint@p,c
 16040  0086A6  0E0F               	movlw	15
 16041  0086A8  20F4               	addwfc	prodh,w,c
 16042  0086AA  6E0B               	movwf	USBEnableEndpoint@p+1,c
 16043                           
 16044                           ;usb_device.c: 901: *p = options;
 16045  0086AC  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 16046  0086B0  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 16047  0086B4  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 16048  0086B8  0012               	return		;funcret
 16049  0086BA                     __end_of_USBEnableEndpoint:
 16050                           	opt stack 0
 16051                           tosu	equ	0xFFF
 16052                           tosh	equ	0xFFE
 16053                           tosl	equ	0xFFD
 16054                           pclath	equ	0xFFA
 16055                           tblptru	equ	0xFF8
 16056                           tblptrh	equ	0xFF7
 16057                           tblptrl	equ	0xFF6
 16058                           tablat	equ	0xFF5
 16059                           prodh	equ	0xFF4
 16060                           prodl	equ	0xFF3
 16061                           intcon	equ	0xFF2
 16062                           intcon2	equ	0xFF1
 16063                           intcon3	equ	0xFF0
 16064                           indf0	equ	0xFEF
 16065                           postinc0	equ	0xFEE
 16066                           fsr0h	equ	0xFEA
 16067                           fsr0l	equ	0xFE9
 16068                           wreg	equ	0xFE8
 16069                           indf1	equ	0xFE7
 16070                           postdec1	equ	0xFE5
 16071                           plusw1	equ	0xFE3
 16072                           fsr1h	equ	0xFE2
 16073                           fsr1l	equ	0xFE1
 16074                           indf2	equ	0xFDF
 16075                           postinc2	equ	0xFDE
 16076                           postdec2	equ	0xFDD
 16077                           plusw2	equ	0xFDB
 16078                           fsr2h	equ	0xFDA
 16079                           fsr2l	equ	0xFD9
 16080                           status	equ	0xFD8
 16081                           
 16082 ;; *************** function _USBConfigureEndpoint *****************
 16083 ;; Defined at:
 16084 ;;		line 1545 in file "usb_device.c"
 16085 ;; Parameters:    Size  Location     Type
 16086 ;;  EPNum           1    wreg     unsigned char 
 16087 ;;  direction       1    0[COMRAM] unsigned char 
 16088 ;; Auto vars:     Size  Location     Type
 16089 ;;  EPNum           1    5[COMRAM] unsigned char 
 16090 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 16091 ;;		 -> BDT(48), 
 16092 ;; Return value:  Size  Location     Type
 16093 ;;                  1    wreg      void 
 16094 ;; Registers used:
 16095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 16096 ;; Tracked objects:
 16097 ;;		On entry : 0/0
 16098 ;;		On exit  : 0/0
 16099 ;;		Unchanged: 0/0
 16100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16101 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16102 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16103 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16104 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16105 ;;Total ram usage:        8 bytes
 16106 ;; Hardware stack levels used:    1
 16107 ;; This function calls:
 16108 ;;		Nothing
 16109 ;; This function is called by:
 16110 ;;		_USBEnableEndpoint
 16111 ;; This function uses a non-reentrant model
 16112 ;;
 16113                           
 16114                           	psect	text76
 16115  006DFE                     __ptext76:
 16116                           	opt stack 0
 16117  006DFE                     _USBConfigureEndpoint:
 16118                           	opt stack 26
 16119                           
 16120                           ;incstack = 0
 16121                           ;USBConfigureEndpoint@EPNum stored from wreg
 16122  006DFE  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 16123                           
 16124                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 16125  006E00  0E00               	movlw	0
 16126  006E02  6E07               	movwf	USBConfigureEndpoint@handle,c
 16127  006E04  0E0D               	movlw	13
 16128  006E06  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 16129                           
 16130                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 16131  006E08  5001               	movf	USBConfigureEndpoint@direction,w,c
 16132  006E0A  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 16133  006E0C  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 16134  006E0E  90D8               	bcf	status,0,c
 16135  006E10  3602               	rlcf	??_USBConfigureEndpoint,f,c
 16136  006E12  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 16137  006E14  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16138  006E16  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 16139  006E18  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 16140  006E1A  90D8               	bcf	status,0,c
 16141  006E1C  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16142  006E1E  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16143  006E20  90D8               	bcf	status,0,c
 16144  006E22  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16145  006E24  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16146  006E26  5002               	movf	??_USBConfigureEndpoint,w,c
 16147  006E28  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 16148  006E2A  5003               	movf	??_USBConfigureEndpoint+1,w,c
 16149  006E2C  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 16150  006E2E  90D8               	bcf	status,0,c
 16151  006E30  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16152  006E32  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16153  006E34  90D8               	bcf	status,0,c
 16154  006E36  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 16155  006E38  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 16156  006E3A  5004               	movf	??_USBConfigureEndpoint+2,w,c
 16157  006E3C  2607               	addwf	USBConfigureEndpoint@handle,f,c
 16158  006E3E  5005               	movf	??_USBConfigureEndpoint+3,w,c
 16159  006E40  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 16160                           
 16161                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 16162  006E42  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16163  006E46  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16164  006E4A  9EDF               	bcf	indf2,7,c
 16165                           
 16166                           ;usb_device.c: 1559: if(direction == 0)
 16167  006E4C  5001               	movf	USBConfigureEndpoint@direction,w,c
 16168  006E4E  A4D8               	btfss	status,2,c
 16169  006E50  D007               	goto	l214
 16170                           
 16171                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 16172  006E52  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16173  006E54  0D02               	mullw	2
 16174  006E56  0E40               	movlw	low _pBDTEntryOut
 16175  006E58  24F3               	addwf	prodl,w,c
 16176  006E5A  6ED9               	movwf	fsr2l,c
 16177  006E5C  0E01               	movlw	high _pBDTEntryOut
 16178  006E5E  D006               	goto	L14
 16179  006E60                     l214:
 16180                           
 16181                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 16182  006E60  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 16183  006E62  0D02               	mullw	2
 16184  006E64  0ED1               	movlw	low _pBDTEntryIn
 16185  006E66  24F3               	addwf	prodl,w,c
 16186  006E68  6ED9               	movwf	fsr2l,c
 16187  006E6A  0E00               	movlw	high _pBDTEntryIn
 16188  006E6C                     L14:
 16189  006E6C  20F4               	addwfc	prodh,w,c
 16190  006E6E  6EDA               	movwf	fsr2h,c
 16191  006E70  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 16192  006E74  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 16193                           
 16194                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 16195  006E78  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 16196  006E7C  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 16197  006E80  9CDF               	bcf	indf2,6,c
 16198                           
 16199                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 16200  006E82  EE20 F004          	lfsr	2,4
 16201  006E86  5007               	movf	USBConfigureEndpoint@handle,w,c
 16202  006E88  26D9               	addwf	fsr2l,f,c
 16203  006E8A  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 16204  006E8C  22DA               	addwfc	fsr2h,f,c
 16205  006E8E  8CDF               	bsf	indf2,6,c
 16206  006E90  0012               	return		;funcret
 16207  006E92                     __end_of_USBConfigureEndpoint:
 16208                           	opt stack 0
 16209                           tosu	equ	0xFFF
 16210                           tosh	equ	0xFFE
 16211                           tosl	equ	0xFFD
 16212                           pclath	equ	0xFFA
 16213                           tblptru	equ	0xFF8
 16214                           tblptrh	equ	0xFF7
 16215                           tblptrl	equ	0xFF6
 16216                           tablat	equ	0xFF5
 16217                           prodh	equ	0xFF4
 16218                           prodl	equ	0xFF3
 16219                           intcon	equ	0xFF2
 16220                           intcon2	equ	0xFF1
 16221                           intcon3	equ	0xFF0
 16222                           indf0	equ	0xFEF
 16223                           postinc0	equ	0xFEE
 16224                           fsr0h	equ	0xFEA
 16225                           fsr0l	equ	0xFE9
 16226                           wreg	equ	0xFE8
 16227                           indf1	equ	0xFE7
 16228                           postdec1	equ	0xFE5
 16229                           plusw1	equ	0xFE3
 16230                           fsr1h	equ	0xFE2
 16231                           fsr1l	equ	0xFE1
 16232                           indf2	equ	0xFDF
 16233                           postinc2	equ	0xFDE
 16234                           postdec2	equ	0xFDD
 16235                           plusw2	equ	0xFDB
 16236                           fsr2h	equ	0xFDA
 16237                           fsr2l	equ	0xFD9
 16238                           status	equ	0xFD8
 16239                           
 16240 ;; *************** function _USBCtrlTrfOutHandler *****************
 16241 ;; Defined at:
 16242 ;;		line 2540 in file "usb_device.c"
 16243 ;; Parameters:    Size  Location     Type
 16244 ;;		None
 16245 ;; Auto vars:     Size  Location     Type
 16246 ;;		None
 16247 ;; Return value:  Size  Location     Type
 16248 ;;                  1    wreg      void 
 16249 ;; Registers used:
 16250 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16251 ;; Tracked objects:
 16252 ;;		On entry : 0/0
 16253 ;;		On exit  : 0/0
 16254 ;;		Unchanged: 0/0
 16255 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16256 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16257 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16258 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16259 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16260 ;;Total ram usage:        0 bytes
 16261 ;; Hardware stack levels used:    1
 16262 ;; Hardware stack levels required when called:    2
 16263 ;; This function calls:
 16264 ;;		_USBCtrlTrfRxService
 16265 ;; This function is called by:
 16266 ;;		_USBCtrlEPService
 16267 ;; This function uses a non-reentrant model
 16268 ;;
 16269                           
 16270                           	psect	text77
 16271  0078EE                     __ptext77:
 16272                           	opt stack 0
 16273  0078EE                     _USBCtrlTrfOutHandler:
 16274                           	opt stack 26
 16275                           
 16276                           ;usb_device.c: 2542: if(controlTransferState == 2)
 16277                           
 16278                           ;incstack = 0
 16279  0078EE  0E02               	movlw	2
 16280  0078F0  0100               	movlb	0	; () banked
 16281  0078F2  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16282  0078F4  A4D8               	btfss	status,2,c
 16283  0078F6  D003               	goto	l320
 16284                           
 16285                           ; BSR set to: 0
 16286                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 16287  0078F8  ECC6  F021         	call	_USBCtrlTrfRxService	;wreg free
 16288                           
 16289                           ;usb_device.c: 2545: }
 16290  0078FC  0012               	return	
 16291  0078FE                     l320:
 16292                           
 16293                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 16294  0078FE  0E00               	movlw	0
 16295  007900  0100               	movlb	0	; () banked
 16296  007902  6FF6               	movwf	_controlTransferState& (0+255),b
 16297                           
 16298                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 16299  007904  0101               	movlb	1	; () banked
 16300  007906  5191               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 16301  007908  A4D8               	btfss	status,2,c
 16302  00790A  D020               	goto	l322
 16303                           
 16304                           ; BSR set to: 1
 16305                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 16306  00790C  0100               	movlb	0	; () banked
 16307  00790E  EE20 F001          	lfsr	2,1
 16308  007912  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16309  007914  26D9               	addwf	fsr2l,f,c
 16310  007916  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16311  007918  22DA               	addwfc	fsr2h,f,c
 16312  00791A  0E08               	movlw	8
 16313  00791C  6EDF               	movwf	indf2,c
 16314                           
 16315                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16316  00791E  EE20 F002          	lfsr	2,2
 16317  007922  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16318  007924  26D9               	addwf	fsr2l,f,c
 16319  007926  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16320  007928  22DA               	addwfc	fsr2h,f,c
 16321  00792A  0E30               	movlw	48
 16322  00792C  6EDE               	movwf	postinc2,c
 16323  00792E  0E0D               	movlw	13
 16324  007930  6EDD               	movwf	postdec2,c
 16325                           
 16326                           ; BSR set to: 0
 16327                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 16328  007932  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16329  007936  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16330  00793A  0E0C               	movlw	12
 16331  00793C  6EDF               	movwf	indf2,c
 16332                           
 16333                           ; BSR set to: 0
 16334                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16335  00793E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16336  007942  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16337  007946  0E00               	movlw	0
 16338  007948  8EDB               	bsf	plusw2,7,c
 16339                           
 16340                           ;usb_device.c: 2563: }
 16341  00794A  0012               	return	
 16342  00794C                     l322:
 16343                           
 16344                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 16345                           
 16346                           ; BSR set to: 0
 16347  00794C  0E00               	movlw	0
 16348  00794E  0101               	movlb	1	; () banked
 16349  007950  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16350                           
 16351                           ; BSR set to: 1
 16352  007952  0012               	return	
 16353  007954                     __end_of_USBCtrlTrfOutHandler:
 16354                           	opt stack 0
 16355                           tosu	equ	0xFFF
 16356                           tosh	equ	0xFFE
 16357                           tosl	equ	0xFFD
 16358                           pclath	equ	0xFFA
 16359                           tblptru	equ	0xFF8
 16360                           tblptrh	equ	0xFF7
 16361                           tblptrl	equ	0xFF6
 16362                           tablat	equ	0xFF5
 16363                           prodh	equ	0xFF4
 16364                           prodl	equ	0xFF3
 16365                           intcon	equ	0xFF2
 16366                           intcon2	equ	0xFF1
 16367                           intcon3	equ	0xFF0
 16368                           indf0	equ	0xFEF
 16369                           postinc0	equ	0xFEE
 16370                           fsr0h	equ	0xFEA
 16371                           fsr0l	equ	0xFE9
 16372                           wreg	equ	0xFE8
 16373                           indf1	equ	0xFE7
 16374                           postdec1	equ	0xFE5
 16375                           plusw1	equ	0xFE3
 16376                           fsr1h	equ	0xFE2
 16377                           fsr1l	equ	0xFE1
 16378                           indf2	equ	0xFDF
 16379                           postinc2	equ	0xFDE
 16380                           postdec2	equ	0xFDD
 16381                           plusw2	equ	0xFDB
 16382                           fsr2h	equ	0xFDA
 16383                           fsr2l	equ	0xFD9
 16384                           status	equ	0xFD8
 16385                           
 16386 ;; *************** function _USBCtrlTrfRxService *****************
 16387 ;; Defined at:
 16388 ;;		line 1854 in file "usb_device.c"
 16389 ;; Parameters:    Size  Location     Type
 16390 ;;		None
 16391 ;; Auto vars:     Size  Location     Type
 16392 ;;  byteToRead      1    1[COMRAM] unsigned char 
 16393 ;;  i               1    0[COMRAM] unsigned char 
 16394 ;; Return value:  Size  Location     Type
 16395 ;;                  1    wreg      void 
 16396 ;; Registers used:
 16397 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16398 ;; Tracked objects:
 16399 ;;		On entry : 0/0
 16400 ;;		On exit  : 0/0
 16401 ;;		Unchanged: 0/0
 16402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16404 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16406 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16407 ;;Total ram usage:        2 bytes
 16408 ;; Hardware stack levels used:    1
 16409 ;; Hardware stack levels required when called:    1
 16410 ;; This function calls:
 16411 ;;		_USBCtrlEPAllowStatusStage
 16412 ;; This function is called by:
 16413 ;;		_USBCtrlTrfOutHandler
 16414 ;; This function uses a non-reentrant model
 16415 ;;
 16416                           
 16417                           	psect	text78
 16418  00438C                     __ptext78:
 16419                           	opt stack 0
 16420  00438C                     _USBCtrlTrfRxService:
 16421                           	opt stack 26
 16422                           
 16423                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 16424                           
 16425                           ;incstack = 0
 16426  00438C  0100               	movlb	0	; () banked
 16427  00438E  EE20 F001          	lfsr	2,1
 16428  004392  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16429  004394  26D9               	addwf	fsr2l,f,c
 16430  004396  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16431  004398  22DA               	addwfc	fsr2h,f,c
 16432  00439A  50DF               	movf	indf2,w,c
 16433  00439C  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 16434                           
 16435                           ; BSR set to: 0
 16436                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 16437  00439E  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16438  0043A0  0101               	movlb	1	; () banked
 16439  0043A2  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 16440  0043A4  0E00               	movlw	0
 16441  0043A6  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 16442  0043A8  A0D8               	btfss	status,0,c
 16443                           
 16444                           ; BSR set to: 1
 16445                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 16446  0043AA  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 16447                           
 16448                           ; BSR set to: 1
 16449                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 16450                           
 16451                           ; BSR set to: 1
 16452  0043AE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16453  0043B0  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 16454  0043B2  0E00               	movlw	0
 16455  0043B4  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 16456                           
 16457                           ; BSR set to: 1
 16458                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 16459  0043B6  0E00               	movlw	0
 16460  0043B8  6E01               	movwf	USBCtrlTrfRxService@i,c
 16461  0043BA  D011               	goto	l248
 16462  0043BC                     
 16463                           ; BSR set to: 1
 16464                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 16465                           
 16466                           ; BSR set to: 1
 16467  0043BC  5001               	movf	USBCtrlTrfRxService@i,w,c
 16468  0043BE  0D01               	mullw	1
 16469  0043C0  0E38               	movlw	56
 16470  0043C2  24F3               	addwf	prodl,w,c
 16471  0043C4  6ED9               	movwf	fsr2l,c
 16472  0043C6  0E0D               	movlw	13
 16473  0043C8  20F4               	addwfc	prodh,w,c
 16474  0043CA  6EDA               	movwf	fsr2h,c
 16475  0043CC  C131  FFE1         	movff	_outPipes,fsr1l
 16476  0043D0  C132  FFE2         	movff	_outPipes+1,fsr1h
 16477  0043D4  CFDF FFE7          	movff	indf2,indf1
 16478                           
 16479                           ; BSR set to: 1
 16480  0043D8  4B31               	infsnz	_outPipes& (0+255),f,b
 16481  0043DA  2B32               	incf	(_outPipes+1)& (0+255),f,b
 16482                           
 16483                           ; BSR set to: 1
 16484  0043DC  2A01               	incf	USBCtrlTrfRxService@i,f,c
 16485  0043DE                     l248:
 16486                           
 16487                           ; BSR set to: 1
 16488                           
 16489                           ; BSR set to: 1
 16490  0043DE  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 16491  0043E0  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 16492  0043E2  A0D8               	btfss	status,0,c
 16493  0043E4  D7EB               	goto	l249
 16494                           
 16495                           ; BSR set to: 1
 16496                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 16497                           
 16498                           ; BSR set to: 1
 16499  0043E6  5135               	movf	(_outPipes+4)& (0+255),w,b
 16500  0043E8  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 16501  0043EA  B4D8               	btfsc	status,2,c
 16502  0043EC  D033               	goto	l251
 16503                           
 16504                           ; BSR set to: 1
 16505                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 16506  0043EE  0100               	movlb	0	; () banked
 16507  0043F0  EE20 F001          	lfsr	2,1
 16508  0043F4  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16509  0043F6  26D9               	addwf	fsr2l,f,c
 16510  0043F8  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16511  0043FA  22DA               	addwfc	fsr2h,f,c
 16512  0043FC  0E08               	movlw	8
 16513  0043FE  6EDF               	movwf	indf2,c
 16514                           
 16515                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 16516  004400  EE20 F002          	lfsr	2,2
 16517  004404  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16518  004406  26D9               	addwf	fsr2l,f,c
 16519  004408  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16520  00440A  22DA               	addwfc	fsr2h,f,c
 16521  00440C  0E38               	movlw	56
 16522  00440E  6EDE               	movwf	postinc2,c
 16523  004410  0E0D               	movlw	13
 16524  004412  6EDD               	movwf	postdec2,c
 16525                           
 16526                           ; BSR set to: 0
 16527                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 16528  004414  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16529  004418  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16530  00441C  BCDF               	btfsc	indf2,6,c
 16531  00441E  D00D               	goto	l252
 16532                           
 16533                           ; BSR set to: 0
 16534                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 16535  004420  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16536  004424  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16537  004428  0E48               	movlw	72
 16538  00442A  6EDF               	movwf	indf2,c
 16539                           
 16540                           ; BSR set to: 0
 16541                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16542  00442C  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16543  004430  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16544  004434  0E00               	movlw	0
 16545  004436  8EDB               	bsf	plusw2,7,c
 16546                           
 16547                           ;usb_device.c: 1891: }
 16548  004438  0012               	return	
 16549  00443A                     l252:
 16550                           
 16551                           ; BSR set to: 0
 16552                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 16553                           
 16554                           ; BSR set to: 0
 16555  00443A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16556  00443E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16557  004442  0E08               	movlw	8
 16558  004444  6EDF               	movwf	indf2,c
 16559                           
 16560                           ; BSR set to: 0
 16561                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16562  004446  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16563  00444A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16564  00444E  0E00               	movlw	0
 16565  004450  8EDB               	bsf	plusw2,7,c
 16566                           
 16567                           ; BSR set to: 0
 16568                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 16569  004452  0012               	return	
 16570  004454                     l251:
 16571                           
 16572                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 16573                           
 16574                           ; BSR set to: 0
 16575  004454  0100               	movlb	0	; () banked
 16576  004456  EE20 F001          	lfsr	2,1
 16577  00445A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16578  00445C  26D9               	addwf	fsr2l,f,c
 16579  00445E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16580  004460  22DA               	addwfc	fsr2h,f,c
 16581  004462  0E08               	movlw	8
 16582  004464  6EDF               	movwf	indf2,c
 16583                           
 16584                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16585  004466  EE20 F002          	lfsr	2,2
 16586  00446A  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16587  00446C  26D9               	addwf	fsr2l,f,c
 16588  00446E  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16589  004470  22DA               	addwfc	fsr2h,f,c
 16590  004472  0E30               	movlw	48
 16591  004474  6EDE               	movwf	postinc2,c
 16592  004476  0E0D               	movlw	13
 16593  004478  6EDD               	movwf	postdec2,c
 16594                           
 16595                           ; BSR set to: 0
 16596                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 16597  00447A  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16598  00447E  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16599  004482  0E04               	movlw	4
 16600  004484  6EDF               	movwf	indf2,c
 16601                           
 16602                           ; BSR set to: 0
 16603                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 16604  004486  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16605  00448A  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16606  00448E  0E00               	movlw	0
 16607  004490  8EDB               	bsf	plusw2,7,c
 16608                           
 16609                           ; BSR set to: 0
 16610                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 16611                           
 16612                           ; BSR set to: 0
 16613  004492  0101               	movlb	1	; () banked
 16614  004494  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 16615                           
 16616                           ; BSR set to: 1
 16617                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 16618  004496  0100               	movlb	0	; () banked
 16619  004498  51F2               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 16620  00449A  A4D8               	btfss	status,2,c
 16621  00449C  0012               	return	
 16622                           
 16623                           ; BSR set to: 0
 16624                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 16625  00449E  ECE0  F02E         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16626  0044A2  0012               	return	
 16627  0044A4                     __end_of_USBCtrlTrfRxService:
 16628                           	opt stack 0
 16629                           tosu	equ	0xFFF
 16630                           tosh	equ	0xFFE
 16631                           tosl	equ	0xFFD
 16632                           pclath	equ	0xFFA
 16633                           tblptru	equ	0xFF8
 16634                           tblptrh	equ	0xFF7
 16635                           tblptrl	equ	0xFF6
 16636                           tablat	equ	0xFF5
 16637                           prodh	equ	0xFF4
 16638                           prodl	equ	0xFF3
 16639                           intcon	equ	0xFF2
 16640                           intcon2	equ	0xFF1
 16641                           intcon3	equ	0xFF0
 16642                           indf0	equ	0xFEF
 16643                           postinc0	equ	0xFEE
 16644                           fsr0h	equ	0xFEA
 16645                           fsr0l	equ	0xFE9
 16646                           wreg	equ	0xFE8
 16647                           indf1	equ	0xFE7
 16648                           postdec1	equ	0xFE5
 16649                           plusw1	equ	0xFE3
 16650                           fsr1h	equ	0xFE2
 16651                           fsr1l	equ	0xFE1
 16652                           indf2	equ	0xFDF
 16653                           postinc2	equ	0xFDE
 16654                           postdec2	equ	0xFDD
 16655                           plusw2	equ	0xFDB
 16656                           fsr2h	equ	0xFDA
 16657                           fsr2l	equ	0xFD9
 16658                           status	equ	0xFD8
 16659                           
 16660 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 16661 ;; Defined at:
 16662 ;;		line 1418 in file "usb_device.c"
 16663 ;; Parameters:    Size  Location     Type
 16664 ;;		None
 16665 ;; Auto vars:     Size  Location     Type
 16666 ;;		None
 16667 ;; Return value:  Size  Location     Type
 16668 ;;                  1    wreg      void 
 16669 ;; Registers used:
 16670 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 16671 ;; Tracked objects:
 16672 ;;		On entry : 0/0
 16673 ;;		On exit  : 0/0
 16674 ;;		Unchanged: 0/0
 16675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16677 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16680 ;;Total ram usage:        0 bytes
 16681 ;; Hardware stack levels used:    1
 16682 ;; This function calls:
 16683 ;;		Nothing
 16684 ;; This function is called by:
 16685 ;;		_USBDeviceTasks
 16686 ;;		_USBCtrlEPServiceComplete
 16687 ;;		_USBCtrlTrfRxService
 16688 ;; This function uses a non-reentrant model
 16689 ;;
 16690                           
 16691                           	psect	text79
 16692  005DC0                     __ptext79:
 16693                           	opt stack 0
 16694  005DC0                     _USBCtrlEPAllowStatusStage:
 16695                           	opt stack 26
 16696                           
 16697                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 16698                           
 16699                           ;incstack = 0
 16700  005DC0  0100               	movlb	0	; () banked
 16701  005DC2  51F1               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 16702  005DC4  A4D8               	btfss	status,2,c
 16703  005DC6  0012               	return	
 16704                           
 16705                           ; BSR set to: 0
 16706                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 16707  005DC8  0E01               	movlw	1
 16708  005DCA  6FF1               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 16709                           
 16710                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 16711  005DCC  51F0               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 16712  005DCE  A4D8               	btfss	status,2,c
 16713  005DD0  0012               	return	
 16714                           
 16715                           ; BSR set to: 0
 16716                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 16717  005DD2  0E01               	movlw	1
 16718  005DD4  6FF0               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 16719                           
 16720                           ; BSR set to: 0
 16721                           ;usb_device.c: 1434: if(controlTransferState == 2)
 16722  005DD6  0E02               	movlw	2
 16723  005DD8  19F6               	xorwf	_controlTransferState& (0+255),w,b
 16724  005DDA  A4D8               	btfss	status,2,c
 16725  005DDC  D015               	goto	l202
 16726                           
 16727                           ; BSR set to: 0
 16728                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 16729  005DDE  EE20 F001          	lfsr	2,1
 16730  005DE2  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16731  005DE4  26D9               	addwf	fsr2l,f,c
 16732  005DE6  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16733  005DE8  22DA               	addwfc	fsr2h,f,c
 16734  005DEA  0E00               	movlw	0
 16735  005DEC  6EDF               	movwf	indf2,c
 16736                           
 16737                           ; BSR set to: 0
 16738                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 16739  005DEE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16740  005DF2  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16741  005DF6  0E48               	movlw	72
 16742  005DF8  6EDF               	movwf	indf2,c
 16743                           
 16744                           ; BSR set to: 0
 16745                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 16746  005DFA  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16747  005DFE  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16748  005E02  0E00               	movlw	0
 16749  005E04  8EDB               	bsf	plusw2,7,c
 16750                           
 16751                           ;usb_device.c: 1439: }
 16752  005E06  0012               	return	
 16753  005E08                     l202:
 16754                           
 16755                           ; BSR set to: 0
 16756                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 16757                           
 16758                           ; BSR set to: 0
 16759  005E08  05F6               	decf	_controlTransferState& (0+255),w,b
 16760  005E0A  A4D8               	btfss	status,2,c
 16761  005E0C  0012               	return	
 16762                           
 16763                           ; BSR set to: 0
 16764                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 16765  005E0E  0E00               	movlw	0
 16766  005E10  0101               	movlb	1	; () banked
 16767  005E12  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16768                           
 16769                           ; BSR set to: 1
 16770                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 16771  005E14  0100               	movlb	0	; () banked
 16772  005E16  EE20 F001          	lfsr	2,1
 16773  005E1A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16774  005E1C  26D9               	addwf	fsr2l,f,c
 16775  005E1E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16776  005E20  22DA               	addwfc	fsr2h,f,c
 16777  005E22  0E08               	movlw	8
 16778  005E24  6EDF               	movwf	indf2,c
 16779                           
 16780                           ; BSR set to: 0
 16781                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 16782  005E26  EE20 F002          	lfsr	2,2
 16783  005E2A  51E3               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 16784  005E2C  26D9               	addwf	fsr2l,f,c
 16785  005E2E  51E4               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 16786  005E30  22DA               	addwfc	fsr2h,f,c
 16787  005E32  0E30               	movlw	48
 16788  005E34  6EDE               	movwf	postinc2,c
 16789  005E36  0E0D               	movlw	13
 16790  005E38  6EDD               	movwf	postdec2,c
 16791                           
 16792                           ; BSR set to: 0
 16793                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 16794  005E3A  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16795  005E3E  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16796  005E42  0E04               	movlw	4
 16797  005E44  6EDF               	movwf	indf2,c
 16798                           
 16799                           ; BSR set to: 0
 16800                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 16801  005E46  C0E3  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 16802  005E4A  C0E4  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 16803  005E4E  0E00               	movlw	0
 16804  005E50  8EDB               	bsf	plusw2,7,c
 16805                           
 16806                           ; BSR set to: 0
 16807                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 16808  005E52  0E01               	movlw	1
 16809  005E54  0101               	movlb	1	; () banked
 16810  005E56  6F91               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 16811                           
 16812                           ; BSR set to: 1
 16813                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 16814  005E58  0100               	movlb	0	; () banked
 16815  005E5A  EE20 F001          	lfsr	2,1
 16816  005E5E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16817  005E60  26D9               	addwf	fsr2l,f,c
 16818  005E62  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16819  005E64  22DA               	addwfc	fsr2h,f,c
 16820  005E66  0E08               	movlw	8
 16821  005E68  6EDF               	movwf	indf2,c
 16822                           
 16823                           ; BSR set to: 0
 16824                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 16825  005E6A  EE20 F002          	lfsr	2,2
 16826  005E6E  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 16827  005E70  26D9               	addwf	fsr2l,f,c
 16828  005E72  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 16829  005E74  22DA               	addwfc	fsr2h,f,c
 16830  005E76  0E30               	movlw	48
 16831  005E78  6EDE               	movwf	postinc2,c
 16832  005E7A  0E0D               	movlw	13
 16833  005E7C  6EDD               	movwf	postdec2,c
 16834                           
 16835                           ; BSR set to: 0
 16836                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 16837  005E7E  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 16838  005E82  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 16839  005E86  0E80               	movlw	128
 16840  005E88  6EDF               	movwf	indf2,c
 16841                           
 16842                           ; BSR set to: 0
 16843                           
 16844                           ; BSR set to: 0
 16845                           
 16846                           ; BSR set to: 0
 16847  005E8A  0012               	return	
 16848  005E8C                     __end_of_USBCtrlEPAllowStatusStage:
 16849                           	opt stack 0
 16850                           tosu	equ	0xFFF
 16851                           tosh	equ	0xFFE
 16852                           tosl	equ	0xFFD
 16853                           pclath	equ	0xFFA
 16854                           tblptru	equ	0xFF8
 16855                           tblptrh	equ	0xFF7
 16856                           tblptrl	equ	0xFF6
 16857                           tablat	equ	0xFF5
 16858                           prodh	equ	0xFF4
 16859                           prodl	equ	0xFF3
 16860                           intcon	equ	0xFF2
 16861                           intcon2	equ	0xFF1
 16862                           intcon3	equ	0xFF0
 16863                           indf0	equ	0xFEF
 16864                           postinc0	equ	0xFEE
 16865                           fsr0h	equ	0xFEA
 16866                           fsr0l	equ	0xFE9
 16867                           wreg	equ	0xFE8
 16868                           indf1	equ	0xFE7
 16869                           postdec1	equ	0xFE5
 16870                           plusw1	equ	0xFE3
 16871                           fsr1h	equ	0xFE2
 16872                           fsr1l	equ	0xFE1
 16873                           indf2	equ	0xFDF
 16874                           postinc2	equ	0xFDE
 16875                           postdec2	equ	0xFDD
 16876                           plusw2	equ	0xFDB
 16877                           fsr2h	equ	0xFDA
 16878                           fsr2l	equ	0xFD9
 16879                           status	equ	0xFD8
 16880                           
 16881 ;; *************** function _USBCtrlTrfInHandler *****************
 16882 ;; Defined at:
 16883 ;;		line 2594 in file "usb_device.c"
 16884 ;; Parameters:    Size  Location     Type
 16885 ;;		None
 16886 ;; Auto vars:     Size  Location     Type
 16887 ;;  lastDTS         1    1[COMRAM] unsigned char 
 16888 ;; Return value:  Size  Location     Type
 16889 ;;                  1    wreg      void 
 16890 ;; Registers used:
 16891 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16892 ;; Tracked objects:
 16893 ;;		On entry : 0/0
 16894 ;;		On exit  : 0/0
 16895 ;;		Unchanged: 0/0
 16896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16897 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16898 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16900 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16901 ;;Total ram usage:        1 bytes
 16902 ;; Hardware stack levels used:    1
 16903 ;; Hardware stack levels required when called:    1
 16904 ;; This function calls:
 16905 ;;		_USBCtrlTrfTxService
 16906 ;; This function is called by:
 16907 ;;		_USBCtrlEPService
 16908 ;; This function uses a non-reentrant model
 16909 ;;
 16910                           
 16911                           	psect	text80
 16912  005E8C                     __ptext80:
 16913                           	opt stack 0
 16914  005E8C                     _USBCtrlTrfInHandler:
 16915                           	opt stack 27
 16916                           
 16917                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 16918                           
 16919                           ; BSR set to: 0
 16920                           ;incstack = 0
 16921  005E8C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 16922  005E90  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 16923  005E94  0100               	movlb	0	; () banked
 16924  005E96  0E00               	movlw	0
 16925  005E98  BCDF               	btfsc	indf2,6,c
 16926  005E9A  0E01               	movlw	1
 16927  005E9C  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 16928                           
 16929                           ; BSR set to: 0
 16930                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 16931  005E9E  0E04               	movlw	4
 16932  005EA0  19D1               	xorwf	_pBDTEntryIn& (0+255),w,b
 16933  005EA2  6FD1               	movwf	_pBDTEntryIn& (0+255),b
 16934  005EA4  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16935  005EA6  6FD2               	movwf	(_pBDTEntryIn+1)& (0+255),b
 16936                           
 16937                           ; BSR set to: 0
 16938                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 16939  005EA8  0E08               	movlw	8
 16940  005EAA  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 16941  005EAC  A4D8               	btfss	status,2,c
 16942  005EAE  D00D               	goto	l329
 16943                           
 16944                           ; BSR set to: 0
 16945                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 16946  005EB0  010D               	movlb	13	; () banked
 16947  005EB2  5132               	movf	50,w,b	;volatile
 16948  005EB4  0B7F               	andlw	127
 16949  005EB6  010F               	movlb	15	; () banked
 16950  005EB8  6F38               	movwf	56,b	;volatile
 16951                           
 16952                           ; BSR set to: 15
 16953                           ;usb_device.c: 2609: if(UADDR != 0u)
 16954  005EBA  5138               	movf	56,w,b	;volatile
 16955  005EBC  B4D8               	btfsc	status,2,c
 16956  005EBE  D002               	goto	l328
 16957                           
 16958                           ; BSR set to: 15
 16959                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 16960  005EC0  0E10               	movlw	16
 16961  005EC2  D001               	goto	L15
 16962  005EC4                     l328:
 16963                           
 16964                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 16965                           
 16966                           ; BSR set to: 0
 16967  005EC4  0E04               	movlw	4
 16968  005EC6                     L15:
 16969  005EC6  0100               	movlb	0	; () banked
 16970  005EC8  6FF8               	movwf	_USBDeviceState& (0+255),b
 16971  005ECA                     l329:
 16972                           
 16973                           ; BSR set to: 0
 16974                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 16975                           
 16976                           ; BSR set to: 0
 16977                           
 16978                           ; BSR set to: 0
 16979  005ECA  05F6               	decf	_controlTransferState& (0+255),w,b
 16980  005ECC  A4D8               	btfss	status,2,c
 16981  005ECE  D03B               	goto	l330
 16982                           
 16983                           ; BSR set to: 0
 16984                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 16985  005ED0  EE20 F002          	lfsr	2,2
 16986  005ED4  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 16987  005ED6  26D9               	addwf	fsr2l,f,c
 16988  005ED8  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 16989  005EDA  22DA               	addwfc	fsr2h,f,c
 16990  005EDC  0E38               	movlw	56
 16991  005EDE  6EDE               	movwf	postinc2,c
 16992  005EE0  0E0D               	movlw	13
 16993  005EE2  6EDD               	movwf	postdec2,c
 16994                           
 16995                           ; BSR set to: 0
 16996                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 16997  005EE4  EC3E  F02D         	call	_USBCtrlTrfTxService	;wreg free
 16998                           
 16999                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 17000  005EE8  0E02               	movlw	2
 17001  005EEA  0100               	movlb	0	; () banked
 17002  005EEC  19F7               	xorwf	_shortPacketStatus& (0+255),w,b
 17003  005EEE  A4D8               	btfss	status,2,c
 17004  005EF0  D00D               	goto	l331
 17005                           
 17006                           ; BSR set to: 0
 17007                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 17008  005EF2  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17009  005EF6  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17010  005EFA  0E04               	movlw	4
 17011  005EFC  6EDF               	movwf	indf2,c
 17012                           
 17013                           ; BSR set to: 0
 17014                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17015  005EFE  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17016  005F02  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17017  005F06  0E00               	movlw	0
 17018  005F08  8EDB               	bsf	plusw2,7,c
 17019                           
 17020                           ;usb_device.c: 2635: }
 17021  005F0A  0012               	return	
 17022  005F0C                     l331:
 17023                           
 17024                           ; BSR set to: 0
 17025                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 17026                           
 17027                           ; BSR set to: 0
 17028  005F0C  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 17029  005F0E  A4D8               	btfss	status,2,c
 17030  005F10  D00D               	goto	l333
 17031                           
 17032                           ; BSR set to: 0
 17033                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 17034  005F12  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17035  005F16  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17036  005F1A  0E48               	movlw	72
 17037  005F1C  6EDF               	movwf	indf2,c
 17038                           
 17039                           ; BSR set to: 0
 17040                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17041  005F1E  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17042  005F22  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17043  005F26  0E00               	movlw	0
 17044  005F28  8EDB               	bsf	plusw2,7,c
 17045                           
 17046                           ;usb_device.c: 2642: }
 17047  005F2A  0012               	return	
 17048  005F2C                     l333:
 17049                           
 17050                           ; BSR set to: 0
 17051                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 17052                           
 17053                           ; BSR set to: 0
 17054  005F2C  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17055  005F30  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17056  005F34  0E08               	movlw	8
 17057  005F36  6EDF               	movwf	indf2,c
 17058                           
 17059                           ; BSR set to: 0
 17060                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 17061  005F38  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 17062  005F3C  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17063  005F40  0E00               	movlw	0
 17064  005F42  8EDB               	bsf	plusw2,7,c
 17065                           
 17066                           ; BSR set to: 0
 17067                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 17068                           
 17069                           ; BSR set to: 0
 17070  005F44  0012               	return	
 17071  005F46                     l330:
 17072                           
 17073                           ; BSR set to: 0
 17074                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 17075  005F46  0101               	movlb	1	; () banked
 17076  005F48  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 17077                           
 17078                           ; BSR set to: 1
 17079                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 17080                           
 17081                           ; BSR set to: 1
 17082  005F4A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 17083                           
 17084                           ; BSR set to: 1
 17085                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 17086                           
 17087                           ; BSR set to: 1
 17088  005F4C  0E00               	movlw	0
 17089  005F4E  0100               	movlb	0	; () banked
 17090  005F50  6FF6               	movwf	_controlTransferState& (0+255),b
 17091  005F52  0012               	return	
 17092  005F54                     __end_of_USBCtrlTrfInHandler:
 17093                           	opt stack 0
 17094                           tosu	equ	0xFFF
 17095                           tosh	equ	0xFFE
 17096                           tosl	equ	0xFFD
 17097                           pclath	equ	0xFFA
 17098                           tblptru	equ	0xFF8
 17099                           tblptrh	equ	0xFF7
 17100                           tblptrl	equ	0xFF6
 17101                           tablat	equ	0xFF5
 17102                           prodh	equ	0xFF4
 17103                           prodl	equ	0xFF3
 17104                           intcon	equ	0xFF2
 17105                           intcon2	equ	0xFF1
 17106                           intcon3	equ	0xFF0
 17107                           indf0	equ	0xFEF
 17108                           postinc0	equ	0xFEE
 17109                           fsr0h	equ	0xFEA
 17110                           fsr0l	equ	0xFE9
 17111                           wreg	equ	0xFE8
 17112                           indf1	equ	0xFE7
 17113                           postdec1	equ	0xFE5
 17114                           plusw1	equ	0xFE3
 17115                           fsr1h	equ	0xFE2
 17116                           fsr1l	equ	0xFE1
 17117                           indf2	equ	0xFDF
 17118                           postinc2	equ	0xFDE
 17119                           postdec2	equ	0xFDD
 17120                           plusw2	equ	0xFDB
 17121                           fsr2h	equ	0xFDA
 17122                           fsr2l	equ	0xFD9
 17123                           status	equ	0xFD8
 17124                           
 17125 ;; *************** function _USBCtrlTrfTxService *****************
 17126 ;; Defined at:
 17127 ;;		line 1773 in file "usb_device.c"
 17128 ;; Parameters:    Size  Location     Type
 17129 ;;		None
 17130 ;; Auto vars:     Size  Location     Type
 17131 ;;  byteToSend      1    0[COMRAM] unsigned char 
 17132 ;; Return value:  Size  Location     Type
 17133 ;;                  1    wreg      void 
 17134 ;; Registers used:
 17135 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 17136 ;; Tracked objects:
 17137 ;;		On entry : 0/0
 17138 ;;		On exit  : 0/0
 17139 ;;		Unchanged: 0/0
 17140 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17141 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17142 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17143 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17144 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17145 ;;Total ram usage:        1 bytes
 17146 ;; Hardware stack levels used:    1
 17147 ;; This function calls:
 17148 ;;		Nothing
 17149 ;; This function is called by:
 17150 ;;		_USBCtrlEPAllowDataStage
 17151 ;;		_USBCtrlTrfInHandler
 17152 ;; This function uses a non-reentrant model
 17153 ;;
 17154                           
 17155                           	psect	text81
 17156  005A7C                     __ptext81:
 17157                           	opt stack 0
 17158  005A7C                     _USBCtrlTrfTxService:
 17159                           	opt stack 25
 17160                           
 17161                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 17162                           
 17163                           ; BSR set to: 0
 17164                           ;incstack = 0
 17165  005A7C  0E08               	movlw	8
 17166  005A7E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 17167                           
 17168                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 17169  005A80  0100               	movlb	0	; () banked
 17170  005A82  51D0               	movf	(_inPipes+5)& (0+255),w,b
 17171  005A84  E110               	bnz	l11541
 17172  005A86  0E08               	movlw	8
 17173  005A88  5DCF               	subwf	(_inPipes+4)& (0+255),w,b
 17174  005A8A  B0D8               	btfsc	status,0,c
 17175  005A8C  D00C               	goto	l235
 17176                           
 17177                           ; BSR set to: 0
 17178                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 17179  005A8E  C0CF  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 17180                           
 17181                           ; BSR set to: 0
 17182                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 17183  005A92  51F7               	movf	_shortPacketStatus& (0+255),w,b
 17184  005A94  A4D8               	btfss	status,2,c
 17185  005A96  D002               	goto	l233
 17186                           
 17187                           ; BSR set to: 0
 17188                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 17189  005A98  0E01               	movlw	1
 17190  005A9A  D004               	goto	L16
 17191  005A9C                     l233:
 17192                           
 17193                           ; BSR set to: 0
 17194                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 17195                           
 17196                           ; BSR set to: 0
 17197  005A9C  05F7               	decf	_shortPacketStatus& (0+255),w,b
 17198  005A9E  A4D8               	btfss	status,2,c
 17199  005AA0  D002               	goto	l235
 17200                           
 17201                           ; BSR set to: 0
 17202                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 17203  005AA2  0E02               	movlw	2
 17204  005AA4                     L16:
 17205  005AA4  6FF7               	movwf	_shortPacketStatus& (0+255),b
 17206  005AA6                     l235:
 17207  005AA6                     l11541:
 17208                           
 17209                           ; BSR set to: 0
 17210                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 17211  005AA6  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17212  005AA8  5FCF               	subwf	(_inPipes+4)& (0+255),f,b
 17213  005AAA  0E00               	movlw	0
 17214  005AAC  5BD0               	subwfb	(_inPipes+5)& (0+255),f,b
 17215                           
 17216                           ; BSR set to: 0
 17217                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 17218  005AAE  EE20 F001          	lfsr	2,1
 17219  005AB2  51D1               	movf	_pBDTEntryIn& (0+255),w,b
 17220  005AB4  26D9               	addwf	fsr2l,f,c
 17221  005AB6  51D2               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 17222  005AB8  22DA               	addwfc	fsr2h,f,c
 17223  005ABA  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 17224                           
 17225                           ; BSR set to: 0
 17226                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 17227  005ABE  0E38               	movlw	56
 17228  005AC0  0101               	movlb	1	; () banked
 17229  005AC2  6F88               	movwf	_pDst& (0+255),b
 17230  005AC4  0E0D               	movlw	13
 17231  005AC6  6F89               	movwf	(_pDst+1)& (0+255),b
 17232                           
 17233                           ; BSR set to: 1
 17234                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 17235  005AC8  0100               	movlb	0	; () banked
 17236  005ACA  A1CE               	btfss	(_inPipes+3)& (0+255),0,b
 17237  005ACC  D01D               	goto	l237
 17238  005ACE  D03C               	goto	l241
 17239  005AD0                     
 17240                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 17241                           
 17242                           ; BSR set to: 0
 17243  005AD0  C0CB  FFF6         	movff	_inPipes,tblptrl
 17244  005AD4  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17245  005AD8  6AF8               	clrf	tblptru,c
 17246  005ADA  C188  FFD9         	movff	_pDst,fsr2l
 17247  005ADE  C189  FFDA         	movff	_pDst+1,fsr2h
 17248  005AE2  0E0E               	movlw	(high __ramtop+-1)
 17249  005AE4  64F7               	cpfsgt	tblptrh,c
 17250  005AE6  D003               	bra	u8347
 17251  005AE8  0008               	tblrd		*
 17252  005AEA  50F5               	movf	tablat,w,c
 17253  005AEC  D005               	bra	u8340
 17254  005AEE                     u8347:
 17255  005AEE  CFF6 FFE9          	movff	tblptrl,fsr0l
 17256  005AF2  CFF7 FFEA          	movff	tblptrh,fsr0h
 17257  005AF6  50EF               	movf	indf0,w,c
 17258  005AF8                     u8340:
 17259  005AF8  6EDF               	movwf	indf2,c
 17260  005AFA  0100               	movlb	0	; () banked
 17261  005AFC  4BCB               	infsnz	_inPipes& (0+255),f,b
 17262  005AFE  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17263                           
 17264                           ; BSR set to: 0
 17265  005B00  0101               	movlb	1	; () banked
 17266  005B02  4B88               	infsnz	_pDst& (0+255),f,b
 17267  005B04  2B89               	incf	(_pDst+1)& (0+255),f,b
 17268                           
 17269                           ; BSR set to: 1
 17270                           ;usb_device.c: 1816: byteToSend--;
 17271  005B06  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17272  005B08                     l237:
 17273                           
 17274                           ; BSR set to: 1
 17275  005B08  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17276  005B0A  B4D8               	btfsc	status,2,c
 17277  005B0C  0012               	return	
 17278  005B0E  D7E0               	goto	l238
 17279  005B10                     
 17280                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 17281  005B10  C0CB  FFF6         	movff	_inPipes,tblptrl
 17282  005B14  C0CC  FFF7         	movff	_inPipes+1,tblptrh
 17283  005B18  6AF8               	clrf	tblptru,c
 17284  005B1A  C188  FFD9         	movff	_pDst,fsr2l
 17285  005B1E  C189  FFDA         	movff	_pDst+1,fsr2h
 17286  005B22  0E0E               	movlw	(high __ramtop+-1)
 17287  005B24  64F7               	cpfsgt	tblptrh,c
 17288  005B26  D003               	bra	u8367
 17289  005B28  0008               	tblrd		*
 17290  005B2A  50F5               	movf	tablat,w,c
 17291  005B2C  D005               	bra	u8360
 17292  005B2E                     u8367:
 17293  005B2E  CFF6 FFE9          	movff	tblptrl,fsr0l
 17294  005B32  CFF7 FFEA          	movff	tblptrh,fsr0h
 17295  005B36  50EF               	movf	indf0,w,c
 17296  005B38                     u8360:
 17297  005B38  6EDF               	movwf	indf2,c
 17298  005B3A  0100               	movlb	0	; () banked
 17299  005B3C  4BCB               	infsnz	_inPipes& (0+255),f,b
 17300  005B3E  2BCC               	incf	(_inPipes+1)& (0+255),f,b
 17301                           
 17302                           ; BSR set to: 0
 17303  005B40  0101               	movlb	1	; () banked
 17304  005B42  4B88               	infsnz	_pDst& (0+255),f,b
 17305  005B44  2B89               	incf	(_pDst+1)& (0+255),f,b
 17306                           
 17307                           ; BSR set to: 1
 17308                           ;usb_device.c: 1824: byteToSend--;
 17309  005B46  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 17310  005B48                     l241:
 17311                           
 17312                           ; BSR set to: 1
 17313  005B48  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 17314  005B4A  B4D8               	btfsc	status,2,c
 17315  005B4C  0012               	return	
 17316  005B4E  D7E0               	goto	l242
 17317  005B50                     __end_of_USBCtrlTrfTxService:
 17318                           	opt stack 0
 17319                           tosu	equ	0xFFF
 17320                           tosh	equ	0xFFE
 17321                           tosl	equ	0xFFD
 17322                           pclath	equ	0xFFA
 17323                           tblptru	equ	0xFF8
 17324                           tblptrh	equ	0xFF7
 17325                           tblptrl	equ	0xFF6
 17326                           tablat	equ	0xFF5
 17327                           prodh	equ	0xFF4
 17328                           prodl	equ	0xFF3
 17329                           intcon	equ	0xFF2
 17330                           intcon2	equ	0xFF1
 17331                           intcon3	equ	0xFF0
 17332                           indf0	equ	0xFEF
 17333                           postinc0	equ	0xFEE
 17334                           fsr0h	equ	0xFEA
 17335                           fsr0l	equ	0xFE9
 17336                           wreg	equ	0xFE8
 17337                           indf1	equ	0xFE7
 17338                           postdec1	equ	0xFE5
 17339                           plusw1	equ	0xFE3
 17340                           fsr1h	equ	0xFE2
 17341                           fsr1l	equ	0xFE1
 17342                           indf2	equ	0xFDF
 17343                           postinc2	equ	0xFDE
 17344                           postdec2	equ	0xFDD
 17345                           plusw2	equ	0xFDB
 17346                           fsr2h	equ	0xFDA
 17347                           fsr2l	equ	0xFD9
 17348                           status	equ	0xFD8
 17349                           
 17350 ;; *************** function _APP_DeviceMSDTasks *****************
 17351 ;; Defined at:
 17352 ;;		line 110 in file "app_device_msd.c"
 17353 ;; Parameters:    Size  Location     Type
 17354 ;;		None
 17355 ;; Auto vars:     Size  Location     Type
 17356 ;;		None
 17357 ;; Return value:  Size  Location     Type
 17358 ;;                  1    wreg      void 
 17359 ;; Registers used:
 17360 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17361 ;; Tracked objects:
 17362 ;;		On entry : 0/0
 17363 ;;		On exit  : 0/0
 17364 ;;		Unchanged: 0/0
 17365 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17366 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17367 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17368 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17369 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17370 ;;Total ram usage:        0 bytes
 17371 ;; Hardware stack levels used:    1
 17372 ;; Hardware stack levels required when called:   11
 17373 ;; This function calls:
 17374 ;;		_MSDTasks
 17375 ;; This function is called by:
 17376 ;;		_main
 17377 ;; This function uses a non-reentrant model
 17378 ;;
 17379                           
 17380                           	psect	text82
 17381  008EE0                     __ptext82:
 17382                           	opt stack 0
 17383  008EE0                     _APP_DeviceMSDTasks:
 17384                           	opt stack 19
 17385                           
 17386                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 17387                           
 17388                           ;incstack = 0
 17389  008EE0  0E20               	movlw	32
 17390  008EE2  0100               	movlb	0	; () banked
 17391  008EE4  61F8               	cpfslt	_USBDeviceState& (0+255),b
 17392  008EE6  D001               	goto	l1008
 17393  008EE8  0012               	return	
 17394  008EEA                     l1008:
 17395                           
 17396                           ; BSR set to: 0
 17397                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 17398  008EEA  B265               	btfsc	3941,1,c	;volatile
 17399  008EEC  0012               	return	
 17400                           
 17401                           ; BSR set to: 0
 17402                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 17403                           
 17404                           ; BSR set to: 0
 17405                           
 17406                           ; BSR set to: 0
 17407                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 17408  008EEE  EC18  F010         	call	_MSDTasks	;wreg free
 17409  008EF2  0012               	return		;funcret
 17410  008EF4                     __end_of_APP_DeviceMSDTasks:
 17411                           	opt stack 0
 17412                           tosu	equ	0xFFF
 17413                           tosh	equ	0xFFE
 17414                           tosl	equ	0xFFD
 17415                           pclath	equ	0xFFA
 17416                           tblptru	equ	0xFF8
 17417                           tblptrh	equ	0xFF7
 17418                           tblptrl	equ	0xFF6
 17419                           tablat	equ	0xFF5
 17420                           prodh	equ	0xFF4
 17421                           prodl	equ	0xFF3
 17422                           intcon	equ	0xFF2
 17423                           intcon2	equ	0xFF1
 17424                           intcon3	equ	0xFF0
 17425                           indf0	equ	0xFEF
 17426                           postinc0	equ	0xFEE
 17427                           fsr0h	equ	0xFEA
 17428                           fsr0l	equ	0xFE9
 17429                           wreg	equ	0xFE8
 17430                           indf1	equ	0xFE7
 17431                           postdec1	equ	0xFE5
 17432                           plusw1	equ	0xFE3
 17433                           fsr1h	equ	0xFE2
 17434                           fsr1l	equ	0xFE1
 17435                           indf2	equ	0xFDF
 17436                           postinc2	equ	0xFDE
 17437                           postdec2	equ	0xFDD
 17438                           plusw2	equ	0xFDB
 17439                           fsr2h	equ	0xFDA
 17440                           fsr2l	equ	0xFD9
 17441                           status	equ	0xFD8
 17442                           
 17443 ;; *************** function _MSDTasks *****************
 17444 ;; Defined at:
 17445 ;;		line 335 in file "usb_device_msd.c"
 17446 ;; Parameters:    Size  Location     Type
 17447 ;;		None
 17448 ;; Auto vars:     Size  Location     Type
 17449 ;;  i               1   81[COMRAM] unsigned char 
 17450 ;; Return value:  Size  Location     Type
 17451 ;;                  1    wreg      unsigned char 
 17452 ;; Registers used:
 17453 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17454 ;; Tracked objects:
 17455 ;;		On entry : 0/0
 17456 ;;		On exit  : 0/0
 17457 ;;		Unchanged: 0/0
 17458 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17459 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17460 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17461 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17462 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17463 ;;Total ram usage:        6 bytes
 17464 ;; Hardware stack levels used:    1
 17465 ;; Hardware stack levels required when called:   10
 17466 ;; This function calls:
 17467 ;;		_MSDProcessCommand
 17468 ;;		_USBStallEndpoint
 17469 ;;		_USBTransferOnePacket
 17470 ;; This function is called by:
 17471 ;;		_APP_DeviceMSDTasks
 17472 ;; This function uses a non-reentrant model
 17473 ;;
 17474                           
 17475                           	psect	text83
 17476  002030                     __ptext83:
 17477                           	opt stack 0
 17478  002030                     _MSDTasks:
 17479                           	opt stack 19
 17480                           
 17481                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 17482                           
 17483                           ;incstack = 0
 17484  002030  0E20               	movlw	32
 17485  002032  0100               	movlb	0	; () banked
 17486  002034  19F8               	xorwf	_USBDeviceState& (0+255),w,b
 17487  002036  A4D8               	btfss	status,2,c
 17488  002038  0012               	return	
 17489  00203A  D115               	goto	l554
 17490  00203C                     
 17491                           ; BSR set to: 0
 17492                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 17493                           
 17494                           ; BSR set to: 0
 17495  00203C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17496  00203E  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17497  002040  B4D8               	btfsc	status,2,c
 17498  002042  D006               	goto	u11890
 17499                           
 17500                           ; BSR set to: 0
 17501  002044  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17502  002048  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17503  00204C  BEDF               	btfsc	indf2,7,c
 17504  00204E  0012               	return	
 17505  002050                     u11890:
 17506                           
 17507                           ; BSR set to: 0
 17508                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 17509                           
 17510                           ; BSR set to: 0
 17511  002050  0E00               	movlw	0
 17512  002052  6E52               	movwf	MSDTasks@i,c
 17513  002054                     l14981:
 17514                           
 17515                           ; BSR set to: 0
 17516  002054  0E1E               	movlw	30
 17517  002056  6452               	cpfsgt	MSDTasks@i,c
 17518  002058  D001               	goto	l559
 17519  00205A  D014               	goto	u11910
 17520  00205C                     l559:
 17521                           
 17522                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 17523                           
 17524                           ; BSR set to: 0
 17525  00205C  5052               	movf	MSDTasks@i,w,c
 17526  00205E  0D01               	mullw	1
 17527  002060  0E40               	movlw	64
 17528  002062  24F3               	addwf	prodl,w,c
 17529  002064  6ED9               	movwf	fsr2l,c
 17530  002066  0E0D               	movlw	13
 17531  002068  20F4               	addwfc	prodh,w,c
 17532  00206A  6EDA               	movwf	fsr2h,c
 17533  00206C  5052               	movf	MSDTasks@i,w,c
 17534  00206E  0D01               	mullw	1
 17535  002070  0E00               	movlw	low _gblCBW
 17536  002072  24F3               	addwf	prodl,w,c
 17537  002074  6EE1               	movwf	fsr1l,c
 17538  002076  0E01               	movlw	high _gblCBW
 17539  002078  20F4               	addwfc	prodh,w,c
 17540  00207A  6EE2               	movwf	fsr1h,c
 17541  00207C  CFDF FFE7          	movff	indf2,indf1
 17542  002080  2A52               	incf	MSDTasks@i,f,c
 17543  002082  D7E8               	goto	l14981
 17544  002084                     u11910:
 17545                           
 17546                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 17547  002084  0100               	movlb	0	; () banked
 17548  002086  EE20 F001          	lfsr	2,1
 17549  00208A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17550  00208C  26D9               	addwf	fsr2l,f,c
 17551  00208E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 17552  002090  22DA               	addwfc	fsr2h,f,c
 17553  002092  0E1F               	movlw	31
 17554  002094  18DE               	xorwf	postinc2,w,c
 17555  002096  A4D8               	btfss	status,2,c
 17556  002098  D070               	goto	l561
 17557                           
 17558                           ; BSR set to: 0
 17559  00209A  0E55               	movlw	85
 17560  00209C  0101               	movlb	1	; () banked
 17561  00209E  1900               	xorwf	_gblCBW& (0+255),w,b
 17562  0020A0  E16C               	bnz	l561
 17563  0020A2  0E53               	movlw	83
 17564  0020A4  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 17565  0020A6  E169               	bnz	l561
 17566  0020A8  0E42               	movlw	66
 17567  0020AA  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 17568  0020AC  E166               	bnz	l15031
 17569  0020AE  0E43               	movlw	67
 17570  0020B0  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 17571  0020B2  A4D8               	btfss	status,2,c
 17572  0020B4  D062               	goto	l561
 17573                           
 17574                           ; BSR set to: 1
 17575                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 17576  0020B6  0E01               	movlw	1
 17577  0020B8  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17578                           
 17579                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 17580  0020BA  510D               	movf	(_gblCBW+13)& (0+255),w,b
 17581  0020BC  A4D8               	btfss	status,2,c
 17582  0020BE  D052               	goto	l562
 17583                           
 17584                           ; BSR set to: 1
 17585  0020C0  0E11               	movlw	17
 17586  0020C2  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 17587  0020C4  D04F               	goto	l562
 17588                           
 17589                           ; BSR set to: 1
 17590  0020C6  510E               	movf	(_gblCBW+14)& (0+255),w,b
 17591  0020C8  B4D8               	btfsc	status,2,c
 17592  0020CA  D04C               	goto	l562
 17593                           
 17594                           ; BSR set to: 1
 17595  0020CC  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 17596  0020D0  0E3F               	movlw	63
 17597  0020D2  164D               	andwf	??_MSDTasks,f,c
 17598  0020D4  A4D8               	btfss	status,2,c
 17599  0020D6  D046               	goto	l562
 17600                           
 17601                           ; BSR set to: 1
 17602                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 17603  0020D8  0E55               	movlw	85
 17604  0020DA  010D               	movlb	13	; () banked
 17605  0020DC  6F80               	movwf	128,b	;volatile
 17606  0020DE  0E53               	movlw	83
 17607  0020E0  6F81               	movwf	129,b	;volatile
 17608  0020E2  0E42               	movlw	66
 17609  0020E4  6F82               	movwf	130,b	;volatile
 17610  0020E6  0E53               	movlw	83
 17611  0020E8  6F83               	movwf	131,b	;volatile
 17612                           
 17613                           ; BSR set to: 13
 17614                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 17615  0020EA  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 17616  0020EE  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 17617  0020F2  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 17618  0020F6  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 17619                           
 17620                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 17621  0020FA  0E00               	movlw	0
 17622  0020FC  6F88               	movwf	136,b	;volatile
 17623  0020FE  0E00               	movlw	0
 17624  002100  6F89               	movwf	137,b	;volatile
 17625  002102  0E00               	movlw	0
 17626  002104  6F8A               	movwf	138,b	;volatile
 17627  002106  0E00               	movlw	0
 17628  002108  6F8B               	movwf	139,b	;volatile
 17629                           
 17630                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 17631  00210A  0E00               	movlw	0
 17632  00210C  6F8C               	movwf	140,b	;volatile
 17633                           
 17634                           ; BSR set to: 13
 17635                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 17636  00210E  0100               	movlb	0	; () banked
 17637  002110  69EC               	setf	_MSDCommandState& (0+255),b
 17638                           
 17639                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 17640  002112  0E00               	movlw	0
 17641  002114  6FEB               	movwf	_MSDReadState& (0+255),b
 17642                           
 17643                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 17644  002116  0E00               	movlw	0
 17645  002118  6FEA               	movwf	_MSDWriteState& (0+255),b
 17646                           
 17647                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 17648  00211A  0E00               	movlw	0
 17649  00211C  6FE9               	movwf	_MSDRetryAttempt& (0+255),b
 17650                           
 17651                           ; BSR set to: 0
 17652                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 17653  00211E  0E03               	movlw	3
 17654  002120  0101               	movlb	1	; () banked
 17655  002122  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 17656  002124  B4D8               	btfsc	status,2,c
 17657  002126  D008               	goto	l563
 17658                           
 17659                           ; BSR set to: 1
 17660                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 17661  002128  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 17662  00212A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 17663  00212C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 17664  00212E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 17665                           
 17666                           ; BSR set to: 1
 17667                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 17668  002130  0E00               	movlw	0
 17669  002132  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 17670                           
 17671                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 17672  002134  0E00               	movlw	0
 17673  002136  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 17674  002138                     l563:
 17675                           
 17676                           ; BSR set to: 1
 17677                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 17678                           
 17679                           ; BSR set to: 1
 17680  002138  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 17681  00213A  D002               	goto	l564
 17682                           
 17683                           ; BSR set to: 1
 17684                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 17685  00213C  0E01               	movlw	1
 17686  00213E  D001               	goto	L17
 17687  002140                     l564:
 17688                           
 17689                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 17690                           
 17691                           ; BSR set to: 0
 17692  002140  0E02               	movlw	2
 17693  002142                     L17:
 17694  002142  0100               	movlb	0	; () banked
 17695  002144  6FED               	movwf	_MSD_State& (0+255),b
 17696                           
 17697                           ; BSR set to: 0
 17698                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 17699                           
 17700                           ; BSR set to: 0
 17701  002146  0101               	movlb	1	; () banked
 17702  002148  5108               	movf	(_gblCBW+8)& (0+255),w,b
 17703  00214A  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 17704  00214C  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 17705  00214E  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 17706  002150  B4D8               	btfsc	status,2,c
 17707  002152  D002               	goto	l566
 17708                           
 17709                           ; BSR set to: 1
 17710                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 17711  002154  0E00               	movlw	0
 17712  002156  D001               	goto	L18
 17713  002158                     l566:
 17714                           
 17715                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 17716                           
 17717                           ; BSR set to: 0
 17718  002158  0E01               	movlw	1
 17719  00215A                     L18:
 17720  00215A  0100               	movlb	0	; () banked
 17721  00215C  6FE7               	movwf	_MSDHostNoData& (0+255),b
 17722                           
 17723                           ; BSR set to: 0
 17724                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 17725                           
 17726                           ; BSR set to: 0
 17727  00215E  C10F  F0EC         	movff	_gblCBW+15,_MSDCommandState
 17728                           
 17729                           ;usb_device_msd.c: 454: }
 17730  002162  0012               	return	
 17731  002164                     l562:
 17732                           
 17733                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 17734                           
 17735                           ; BSR set to: 0
 17736  002164  0E01               	movlw	1
 17737  002166  6E01               	movwf	USBStallEndpoint@dir,c
 17738  002168  0E02               	movlw	2
 17739  00216A  ECE7  F023         	call	_USBStallEndpoint
 17740                           
 17741                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 17742  00216E  0E00               	movlw	0
 17743  002170  6E01               	movwf	USBStallEndpoint@dir,c
 17744  002172  0E02               	movlw	2
 17745  002174  ECE7  F023         	call	_USBStallEndpoint
 17746                           
 17747                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 17748  002178  0012               	return	
 17749  00217A                     l561:
 17750  00217A                     l15031:
 17751                           
 17752                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 17753  00217A  0E01               	movlw	1
 17754  00217C  6E01               	movwf	USBStallEndpoint@dir,c
 17755  00217E  0E02               	movlw	2
 17756  002180  ECE7  F023         	call	_USBStallEndpoint
 17757                           
 17758                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 17759  002184  0E00               	movlw	0
 17760  002186  6E01               	movwf	USBStallEndpoint@dir,c
 17761  002188  0E02               	movlw	2
 17762  00218A  ECE7  F023         	call	_USBStallEndpoint
 17763                           
 17764                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 17765  00218E  0E00               	movlw	0
 17766  002190  0101               	movlb	1	; () banked
 17767  002192  6F8E               	movwf	_MSDCBWValid& (0+255),b
 17768                           
 17769                           ; BSR set to: 1
 17770                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 17771                           
 17772                           ; BSR set to: 1
 17773  002194  0012               	return	
 17774  002196                     
 17775                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 17776                           
 17777                           ; BSR set to: 1
 17778  002196  EC52  F022         	call	_MSDProcessCommand	;wreg free
 17779  00219A  0AFF               	xorlw	255
 17780  00219C  A4D8               	btfss	status,2,c
 17781  00219E  0012               	return	
 17782                           
 17783                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 17784  0021A0  0E03               	movlw	3
 17785  0021A2  0100               	movlb	0	; () banked
 17786  0021A4  6FED               	movwf	_MSD_State& (0+255),b
 17787                           
 17788                           ; BSR set to: 0
 17789                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 17790  0021A6  0012               	return	
 17791  0021A8                     
 17792                           ; BSR set to: 0
 17793                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 17794                           
 17795                           ; BSR set to: 0
 17796  0021A8  EC52  F022         	call	_MSDProcessCommand	;wreg free
 17797  0021AC  0AFF               	xorlw	255
 17798  0021AE  A4D8               	btfss	status,2,c
 17799  0021B0  0012               	return	
 17800                           
 17801                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 17802  0021B2  010D               	movlb	13	; () banked
 17803  0021B4  518C               	movf	140,w,b	;volatile
 17804  0021B6  A4D8               	btfss	status,2,c
 17805  0021B8  D008               	goto	l575
 17806                           
 17807                           ; BSR set to: 13
 17808  0021BA  5188               	movf	136,w,b	;volatile
 17809  0021BC  1189               	iorwf	137,w,b	;volatile
 17810  0021BE  118A               	iorwf	138,w,b	;volatile
 17811  0021C0  118B               	iorwf	139,w,b	;volatile
 17812  0021C2  B4D8               	btfsc	status,2,c
 17813  0021C4  D002               	goto	l575
 17814                           
 17815                           ; BSR set to: 13
 17816                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 17817  0021C6  0E02               	movlw	2
 17818  0021C8  6F8C               	movwf	140,b	;volatile
 17819  0021CA                     l575:
 17820                           
 17821                           ; BSR set to: 13
 17822                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 17823  0021CA  0E03               	movlw	3
 17824  0021CC  0100               	movlb	0	; () banked
 17825  0021CE  6FED               	movwf	_MSD_State& (0+255),b
 17826                           
 17827                           ; BSR set to: 0
 17828                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 17829  0021D0  0012               	return	
 17830  0021D2                     
 17831                           ; BSR set to: 0
 17832                           
 17833                           ; BSR set to: 0
 17834  0021D2  C0D5  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 17835  0021D6  C0D6  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 17836                           
 17837                           ; BSR set to: 0
 17838                           
 17839                           ; BSR set to: 0
 17840                           
 17841                           ; BSR set to: 0
 17842  0021DA  504E               	movf	_MSDTasks$2372,w,c
 17843  0021DC  104F               	iorwf	_MSDTasks$2372+1,w,c
 17844  0021DE  B4D8               	btfsc	status,2,c
 17845  0021E0  D00A               	goto	l577
 17846                           
 17847                           ; BSR set to: 0
 17848  0021E2  C0D5  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 17849  0021E6  C0D6  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 17850                           
 17851                           ; BSR set to: 0
 17852                           
 17853                           ; BSR set to: 0
 17854                           
 17855                           ; BSR set to: 0
 17856                           
 17857                           ; BSR set to: 0
 17858  0021EA  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 17859  0021EE  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 17860  0021F2  BEDF               	btfsc	indf2,7,c
 17861  0021F4  0012               	return	
 17862  0021F6                     l577:
 17863                           
 17864                           ; BSR set to: 0
 17865                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 17866                           
 17867                           ; BSR set to: 0
 17868  0021F6  0E01               	movlw	1
 17869  0021F8  6E01               	movwf	USBTransferOnePacket@dir,c
 17870  0021FA  0E80               	movlw	128
 17871  0021FC  6E02               	movwf	USBTransferOnePacket@data,c
 17872  0021FE  0E0D               	movlw	13
 17873  002200  6E03               	movwf	USBTransferOnePacket@data+1,c
 17874  002202  0E0D               	movlw	13
 17875  002204  6E04               	movwf	USBTransferOnePacket@len,c
 17876  002206  0E02               	movlw	2
 17877  002208  ECF2  F025         	call	_USBTransferOnePacket
 17878  00220C  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 17879  002210  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 17880                           
 17881                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 17882  002214  0100               	movlb	0	; () banked
 17883  002216  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 17884  002218  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 17885  00221A  B4D8               	btfsc	status,2,c
 17886  00221C  D006               	goto	u12080
 17887                           
 17888                           ; BSR set to: 0
 17889  00221E  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 17890  002222  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 17891  002226  BEDF               	btfsc	indf2,7,c
 17892  002228  D00F               	goto	l586
 17893  00222A                     u12080:
 17894                           
 17895                           ; BSR set to: 0
 17896                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 17897                           
 17898                           ; BSR set to: 0
 17899  00222A  0E00               	movlw	0
 17900  00222C  6E01               	movwf	USBTransferOnePacket@dir,c
 17901  00222E  0E40               	movlw	64
 17902  002230  6E02               	movwf	USBTransferOnePacket@data,c
 17903  002232  0E0D               	movlw	13
 17904  002234  6E03               	movwf	USBTransferOnePacket@data+1,c
 17905  002236  0E40               	movlw	64
 17906  002238  6E04               	movwf	USBTransferOnePacket@len,c
 17907  00223A  0E02               	movlw	2
 17908  00223C  ECF2  F025         	call	_USBTransferOnePacket
 17909  002240  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 17910  002244  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 17911  002248                     l586:
 17912                           
 17913                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 17914  002248  0E00               	movlw	0
 17915  00224A  0100               	movlb	0	; () banked
 17916  00224C  6FED               	movwf	_MSD_State& (0+255),b
 17917                           
 17918                           ;usb_device_msd.c: 513: break;
 17919  00224E  0012               	return	
 17920  002250                     
 17921                           ; BSR set to: 0
 17922                           ;usb_device_msd.c: 518: MSD_State=0x00;
 17923                           
 17924                           ; BSR set to: 0
 17925  002250  0E00               	movlw	0
 17926  002252  6FED               	movwf	_MSD_State& (0+255),b
 17927                           
 17928                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 17929  002254  0E02               	movlw	2
 17930  002256  010D               	movlb	13	; () banked
 17931  002258  6F8C               	movwf	140,b	;volatile
 17932                           
 17933                           ; BSR set to: 13
 17934                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 17935  00225A  0E00               	movlw	0
 17936  00225C  6E01               	movwf	USBStallEndpoint@dir,c
 17937  00225E  0E02               	movlw	2
 17938  002260  ECE7  F023         	call	_USBStallEndpoint
 17939                           
 17940                           ;usb_device_msd.c: 521: }
 17941  002264  0012               	return	
 17942  002266                     l554:
 17943  002266  0100               	movlb	0	; () banked
 17944  002268  51ED               	movf	_MSD_State& (0+255),w,b
 17945                           
 17946                           ; Switch size 1, requested type "space"
 17947                           ; Number of cases is 4, Range of values is 0 to 3
 17948                           ; switch strategies available:
 17949                           ; Name         Instructions Cycles
 17950                           ; simple_byte           13     7 (average)
 17951                           ;	Chosen strategy is simple_byte
 17952  00226A  0A00               	xorlw	0	; case 0
 17953  00226C  B4D8               	btfsc	status,2,c
 17954  00226E  D6E6               	goto	l555
 17955  002270  0A01               	xorlw	1	; case 1
 17956  002272  B4D8               	btfsc	status,2,c
 17957  002274  D790               	goto	l571
 17958  002276  0A03               	xorlw	3	; case 2
 17959  002278  B4D8               	btfsc	status,2,c
 17960  00227A  D796               	goto	l573
 17961  00227C  0A01               	xorlw	1	; case 3
 17962  00227E  B4D8               	btfsc	status,2,c
 17963  002280  D7A8               	goto	l576
 17964  002282  D7E6               	goto	l589
 17965  002284                     __end_of_MSDTasks:
 17966                           	opt stack 0
 17967                           tosu	equ	0xFFF
 17968                           tosh	equ	0xFFE
 17969                           tosl	equ	0xFFD
 17970                           pclath	equ	0xFFA
 17971                           tblptru	equ	0xFF8
 17972                           tblptrh	equ	0xFF7
 17973                           tblptrl	equ	0xFF6
 17974                           tablat	equ	0xFF5
 17975                           prodh	equ	0xFF4
 17976                           prodl	equ	0xFF3
 17977                           intcon	equ	0xFF2
 17978                           intcon2	equ	0xFF1
 17979                           intcon3	equ	0xFF0
 17980                           indf0	equ	0xFEF
 17981                           postinc0	equ	0xFEE
 17982                           fsr0h	equ	0xFEA
 17983                           fsr0l	equ	0xFE9
 17984                           wreg	equ	0xFE8
 17985                           indf1	equ	0xFE7
 17986                           postdec1	equ	0xFE5
 17987                           plusw1	equ	0xFE3
 17988                           fsr1h	equ	0xFE2
 17989                           fsr1l	equ	0xFE1
 17990                           indf2	equ	0xFDF
 17991                           postinc2	equ	0xFDE
 17992                           postdec2	equ	0xFDD
 17993                           plusw2	equ	0xFDB
 17994                           fsr2h	equ	0xFDA
 17995                           fsr2l	equ	0xFD9
 17996                           status	equ	0xFD8
 17997                           
 17998 ;; *************** function _MSDProcessCommand *****************
 17999 ;; Defined at:
 18000 ;;		line 553 in file "usb_device_msd.c"
 18001 ;; Parameters:    Size  Location     Type
 18002 ;;		None
 18003 ;; Auto vars:     Size  Location     Type
 18004 ;;		None
 18005 ;; Return value:  Size  Location     Type
 18006 ;;                  1    wreg      unsigned char 
 18007 ;; Registers used:
 18008 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18009 ;; Tracked objects:
 18010 ;;		On entry : 0/0
 18011 ;;		On exit  : 0/0
 18012 ;;		Unchanged: 0/0
 18013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18014 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18015 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18016 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18017 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18018 ;;Total ram usage:        5 bytes
 18019 ;; Hardware stack levels used:    1
 18020 ;; Hardware stack levels required when called:    9
 18021 ;; This function calls:
 18022 ;;		_ExternalFlash_MediaDetect
 18023 ;;		_ExternalFlash_MediaInitialize
 18024 ;;		_MSDProcessCommandMediaAbsent
 18025 ;;		_MSDProcessCommandMediaPresent
 18026 ;; This function is called by:
 18027 ;;		_MSDTasks
 18028 ;; This function uses a non-reentrant model
 18029 ;;
 18030                           
 18031                           	psect	text84
 18032  0044A4                     __ptext84:
 18033                           	opt stack 0
 18034  0044A4                     _MSDProcessCommand:
 18035                           	opt stack 19
 18036                           
 18037                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 18038                           
 18039                           ;incstack = 0
 18040  0044A4  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 18041  0044A8  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 18042  0044AC  D801               	call	u11208
 18043  0044AE  D00A               	goto	u11209
 18044  0044B0                     u11208:
 18045  0044B0  0005               	push	
 18046  0044B2  6EFA               	movwf	pclath,c
 18047  0044B4  0101               	movlb	1	; () banked
 18048  0044B6  51B9               	movf	(_LUN+6)& (0+255),w,b
 18049  0044B8  6EFD               	movwf	tosl,c
 18050  0044BA  51BA               	movf	(_LUN+7)& (0+255),w,b
 18051  0044BC  6EFE               	movwf	tosh,c
 18052  0044BE  6AFF               	clrf	tosu,c
 18053  0044C0  50FA               	movf	pclath,w,c
 18054  0044C2  0012               	return		;indir
 18055  0044C4                     u11209:
 18056  0044C4  0900               	iorlw	0
 18057  0044C6  B4D8               	btfsc	status,2,c
 18058  0044C8  D00C               	goto	u11220
 18059  0044CA  0101               	movlb	1	; () banked
 18060  0044CC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 18061  0044CE  0D01               	mullw	1
 18062  0044D0  0EE8               	movlw	low _SoftDetach
 18063  0044D2  24F3               	addwf	prodl,w,c
 18064  0044D4  6ED9               	movwf	fsr2l,c
 18065  0044D6  0E00               	movlw	high _SoftDetach
 18066  0044D8  20F4               	addwfc	prodh,w,c
 18067  0044DA  6EDA               	movwf	fsr2h,c
 18068  0044DC  04DE               	decf	postinc2,w,c
 18069  0044DE  A4D8               	btfss	status,2,c
 18070  0044E0  D019               	goto	l592
 18071  0044E2                     u11220:
 18072                           
 18073                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 18074                           
 18075                           ; BSR set to: 1
 18076  0044E2  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18077  0044E6  0E01               	movlw	1
 18078  0044E8  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18079  0044EA  0E00               	movlw	0
 18080  0044EC  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18081  0044EE  2A48               	incf	??_MSDProcessCommand,f,c
 18082  0044F0  D003               	goto	u11234
 18083  0044F2                     u11235:
 18084  0044F2  90D8               	bcf	status,0,c
 18085  0044F4  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18086  0044F6  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18087  0044F8                     u11234:
 18088  0044F8  2E48               	decfsz	??_MSDProcessCommand,f,c
 18089  0044FA  D7FB               	goto	u11235
 18090  0044FC  1C49               	comf	??_MSDProcessCommand+1,w,c
 18091  0044FE  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 18092  004500  1C4A               	comf	??_MSDProcessCommand+2,w,c
 18093  004502  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 18094  004504  504B               	movf	??_MSDProcessCommand+3,w,c
 18095  004506  0101               	movlb	1	; () banked
 18096  004508  1782               	andwf	_gblMediaPresent& (0+255),f,b
 18097  00450A  504C               	movf	??_MSDProcessCommand+4,w,c
 18098  00450C  1783               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 18099                           
 18100                           ; BSR set to: 1
 18101                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 18102  00450E  EC41  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18103                           
 18104                           ;usb_device_msd.c: 563: }
 18105  004512  D04E               	goto	l599
 18106  004514                     l592:
 18107                           
 18108                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 18109  004514  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18110  004518  0E01               	movlw	1
 18111  00451A  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18112  00451C  0E00               	movlw	0
 18113  00451E  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18114  004520  2A48               	incf	??_MSDProcessCommand,f,c
 18115  004522  D003               	goto	u11244
 18116  004524                     u11245:
 18117  004524  90D8               	bcf	status,0,c
 18118  004526  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18119  004528  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18120  00452A                     u11244:
 18121  00452A  2E48               	decfsz	??_MSDProcessCommand,f,c
 18122  00452C  D7FB               	goto	u11245
 18123  00452E  0101               	movlb	1	; () banked
 18124  004530  5182               	movf	_gblMediaPresent& (0+255),w,b
 18125  004532  1649               	andwf	??_MSDProcessCommand+1,f,c
 18126  004534  5183               	movf	(_gblMediaPresent+1)& (0+255),w,b
 18127  004536  164A               	andwf	??_MSDProcessCommand+2,f,c
 18128  004538  5049               	movf	??_MSDProcessCommand+1,w,c
 18129  00453A  104A               	iorwf	??_MSDProcessCommand+2,w,c
 18130  00453C  A4D8               	btfss	status,2,c
 18131  00453E  D036               	goto	l596
 18132                           
 18133                           ; BSR set to: 1
 18134                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 18135  004540  C1C1  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 18136  004544  C1C2  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 18137  004548  D801               	call	u11268
 18138  00454A  D009               	goto	u11269
 18139  00454C                     u11268:
 18140  00454C  0005               	push	
 18141  00454E  6EFA               	movwf	pclath,c
 18142  004550  51B3               	movf	_LUN& (0+255),w,b
 18143  004552  6EFD               	movwf	tosl,c
 18144  004554  51B4               	movf	(_LUN+1)& (0+255),w,b
 18145  004556  6EFE               	movwf	tosh,c
 18146  004558  6AFF               	clrf	tosu,c
 18147  00455A  50FA               	movf	pclath,w,c
 18148  00455C  0012               	return		;indir
 18149  00455E                     u11269:
 18150  00455E  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 18151  004560  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 18152  004562  B4D8               	btfsc	status,2,c
 18153  004564  D020               	goto	l597
 18154                           
 18155                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 18156  004566  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 18157  00456A  0E01               	movlw	1
 18158  00456C  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 18159  00456E  0E00               	movlw	0
 18160  004570  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 18161  004572  2A48               	incf	??_MSDProcessCommand,f,c
 18162  004574  D003               	goto	u11284
 18163  004576                     u11285:
 18164  004576  90D8               	bcf	status,0,c
 18165  004578  3649               	rlcf	??_MSDProcessCommand+1,f,c
 18166  00457A  364A               	rlcf	??_MSDProcessCommand+2,f,c
 18167  00457C                     u11284:
 18168  00457C  2E48               	decfsz	??_MSDProcessCommand,f,c
 18169  00457E  D7FB               	goto	u11285
 18170  004580  5049               	movf	??_MSDProcessCommand+1,w,c
 18171  004582  0101               	movlb	1	; () banked
 18172  004584  1382               	iorwf	_gblMediaPresent& (0+255),f,b
 18173  004586  504A               	movf	??_MSDProcessCommand+2,w,c
 18174  004588  1383               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 18175                           
 18176                           ; BSR set to: 1
 18177                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 18178  00458A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18179  00458C  0BF0               	andlw	-16
 18180  00458E  0906               	iorlw	6
 18181  004590  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18182                           
 18183                           ; BSR set to: 1
 18184                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 18185  004592  0E28               	movlw	40
 18186  004594  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18187                           
 18188                           ; BSR set to: 1
 18189                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 18190  004596  0E00               	movlw	0
 18191  004598  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18192                           
 18193                           ; BSR set to: 1
 18194                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 18195  00459A  0E01               	movlw	1
 18196  00459C  010D               	movlb	13	; () banked
 18197  00459E  6F8C               	movwf	140,b	;volatile
 18198                           
 18199                           ; BSR set to: 13
 18200                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 18201  0045A0  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18202                           
 18203                           ;usb_device_msd.c: 589: }
 18204  0045A4  D005               	goto	l599
 18205  0045A6                     l597:
 18206                           
 18207                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 18208  0045A6  EC41  F03D         	call	_MSDProcessCommandMediaAbsent	;wreg free
 18209                           
 18210                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 18211  0045AA  D002               	goto	l599
 18212  0045AC                     l596:
 18213                           
 18214                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 18215  0045AC  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18216  0045B0                     l599:
 18217                           
 18218                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 18219  0045B0  0100               	movlb	0	; () banked
 18220  0045B2  51EC               	movf	_MSDCommandState& (0+255),w,b
 18221  0045B4  0012               	return	
 18222  0045B6                     __end_of_MSDProcessCommand:
 18223                           	opt stack 0
 18224                           tosu	equ	0xFFF
 18225                           tosh	equ	0xFFE
 18226                           tosl	equ	0xFFD
 18227                           pclath	equ	0xFFA
 18228                           tblptru	equ	0xFF8
 18229                           tblptrh	equ	0xFF7
 18230                           tblptrl	equ	0xFF6
 18231                           tablat	equ	0xFF5
 18232                           prodh	equ	0xFF4
 18233                           prodl	equ	0xFF3
 18234                           intcon	equ	0xFF2
 18235                           intcon2	equ	0xFF1
 18236                           intcon3	equ	0xFF0
 18237                           indf0	equ	0xFEF
 18238                           postinc0	equ	0xFEE
 18239                           fsr0h	equ	0xFEA
 18240                           fsr0l	equ	0xFE9
 18241                           wreg	equ	0xFE8
 18242                           indf1	equ	0xFE7
 18243                           postdec1	equ	0xFE5
 18244                           plusw1	equ	0xFE3
 18245                           fsr1h	equ	0xFE2
 18246                           fsr1l	equ	0xFE1
 18247                           indf2	equ	0xFDF
 18248                           postinc2	equ	0xFDE
 18249                           postdec2	equ	0xFDD
 18250                           plusw2	equ	0xFDB
 18251                           fsr2h	equ	0xFDA
 18252                           fsr2l	equ	0xFD9
 18253                           status	equ	0xFD8
 18254                           
 18255 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 18256 ;; Defined at:
 18257 ;;		line 635 in file "usb_device_msd.c"
 18258 ;; Parameters:    Size  Location     Type
 18259 ;;		None
 18260 ;; Auto vars:     Size  Location     Type
 18261 ;;		None
 18262 ;; Return value:  Size  Location     Type
 18263 ;;                  1    wreg      void 
 18264 ;; Registers used:
 18265 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18266 ;; Tracked objects:
 18267 ;;		On entry : 0/0
 18268 ;;		On exit  : 0/0
 18269 ;;		Unchanged: 0/0
 18270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18271 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18272 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18274 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18275 ;;Total ram usage:        0 bytes
 18276 ;; Hardware stack levels used:    1
 18277 ;; Hardware stack levels required when called:    8
 18278 ;; This function calls:
 18279 ;;		_MSDErrorHandler
 18280 ;;		_MSDProcessCommandMediaPresent
 18281 ;;		_ResetSenseData
 18282 ;; This function is called by:
 18283 ;;		_MSDProcessCommand
 18284 ;; This function uses a non-reentrant model
 18285 ;;
 18286                           
 18287                           	psect	text85
 18288  007A82                     __ptext85:
 18289                           	opt stack 0
 18290  007A82                     _MSDProcessCommandMediaAbsent:
 18291                           	opt stack 19
 18292                           
 18293                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 18294                           
 18295                           ; BSR set to: 0
 18296                           ;incstack = 0
 18297  007A82  D01E               	goto	l603
 18298  007A84                     
 18299                           ;usb_device_msd.c: 646: ResetSenseData();
 18300  007A84  EC72  F03D         	call	_ResetSenseData	;wreg free
 18301                           
 18302                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 18303  007A88  0101               	movlb	1	; () banked
 18304  007A8A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18305  007A8C  0BF0               	andlw	-16
 18306  007A8E  0902               	iorlw	2
 18307  007A90  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18308                           
 18309                           ; BSR set to: 1
 18310                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 18311  007A92  0E3A               	movlw	58
 18312  007A94  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18313                           
 18314                           ; BSR set to: 1
 18315                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 18316  007A96  0E00               	movlw	0
 18317  007A98  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18318                           
 18319                           ; BSR set to: 1
 18320                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 18321  007A9A  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18322                           
 18323                           ;usb_device_msd.c: 655: break;
 18324  007A9E  0012               	return	
 18325  007AA0                     
 18326                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 18327  007AA0  0E01               	movlw	1
 18328  007AA2  010D               	movlb	13	; () banked
 18329  007AA4  6F8C               	movwf	140,b	;volatile
 18330                           
 18331                           ; BSR set to: 13
 18332                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 18333  007AA6  0100               	movlb	0	; () banked
 18334  007AA8  69EC               	setf	_MSDCommandState& (0+255),b
 18335                           
 18336                           ;usb_device_msd.c: 665: break;
 18337  007AAA  0012               	return	
 18338  007AAC                     
 18339                           ; BSR set to: 0
 18340                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 18341                           
 18342                           ; BSR set to: 0
 18343  007AAC  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18344                           
 18345                           ;usb_device_msd.c: 671: break;
 18346  007AB0  0012               	return	
 18347  007AB2                     
 18348                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 18349  007AB2  EC36  F004         	call	_MSDProcessCommandMediaPresent	;wreg free
 18350                           
 18351                           ;usb_device_msd.c: 677: break;
 18352  007AB6  0012               	return	
 18353  007AB8                     
 18354                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 18355  007AB8  0E7F               	movlw	127
 18356  007ABA  ECEE  F024         	call	_MSDErrorHandler
 18357                           
 18358                           ;usb_device_msd.c: 685: }
 18359                           
 18360                           ;usb_device_msd.c: 684: break;
 18361  007ABE  0012               	return	
 18362  007AC0                     l603:
 18363  007AC0  0100               	movlb	0	; () banked
 18364  007AC2  51EC               	movf	_MSDCommandState& (0+255),w,b
 18365                           
 18366                           ; Switch size 1, requested type "space"
 18367                           ; Number of cases is 5, Range of values is 0 to 253
 18368                           ; switch strategies available:
 18369                           ; Name         Instructions Cycles
 18370                           ; simple_byte           16     9 (average)
 18371                           ;	Chosen strategy is simple_byte
 18372  007AC4  0A00               	xorlw	0	; case 0
 18373  007AC6  B4D8               	btfsc	status,2,c
 18374  007AC8  D7EB               	goto	l606
 18375  007ACA  0A03               	xorlw	3	; case 3
 18376  007ACC  B4D8               	btfsc	status,2,c
 18377  007ACE  D7DA               	goto	l604
 18378  007AD0  0A11               	xorlw	17	; case 18
 18379  007AD2  B4D8               	btfsc	status,2,c
 18380  007AD4  D7EB               	goto	l608
 18381  007AD6  0A0C               	xorlw	12	; case 30
 18382  007AD8  B4D8               	btfsc	status,2,c
 18383  007ADA  D7E2               	goto	l606
 18384  007ADC  0AE3               	xorlw	227	; case 253
 18385  007ADE  B4D8               	btfsc	status,2,c
 18386  007AE0  D7E8               	goto	l609
 18387  007AE2  D7EA               	goto	l610
 18388  007AE4                     __end_of_MSDProcessCommandMediaAbsent:
 18389                           	opt stack 0
 18390                           tosu	equ	0xFFF
 18391                           tosh	equ	0xFFE
 18392                           tosl	equ	0xFFD
 18393                           pclath	equ	0xFFA
 18394                           tblptru	equ	0xFF8
 18395                           tblptrh	equ	0xFF7
 18396                           tblptrl	equ	0xFF6
 18397                           tablat	equ	0xFF5
 18398                           prodh	equ	0xFF4
 18399                           prodl	equ	0xFF3
 18400                           intcon	equ	0xFF2
 18401                           intcon2	equ	0xFF1
 18402                           intcon3	equ	0xFF0
 18403                           indf0	equ	0xFEF
 18404                           postinc0	equ	0xFEE
 18405                           fsr0h	equ	0xFEA
 18406                           fsr0l	equ	0xFE9
 18407                           wreg	equ	0xFE8
 18408                           indf1	equ	0xFE7
 18409                           postdec1	equ	0xFE5
 18410                           plusw1	equ	0xFE3
 18411                           fsr1h	equ	0xFE2
 18412                           fsr1l	equ	0xFE1
 18413                           indf2	equ	0xFDF
 18414                           postinc2	equ	0xFDE
 18415                           postdec2	equ	0xFDD
 18416                           plusw2	equ	0xFDB
 18417                           fsr2h	equ	0xFDA
 18418                           fsr2l	equ	0xFD9
 18419                           status	equ	0xFD8
 18420                           
 18421 ;; *************** function _MSDProcessCommandMediaPresent *****************
 18422 ;; Defined at:
 18423 ;;		line 712 in file "usb_device_msd.c"
 18424 ;; Parameters:    Size  Location     Type
 18425 ;;		None
 18426 ;; Auto vars:     Size  Location     Type
 18427 ;;  capacity        4   66[COMRAM] struct .
 18428 ;;  sectorSize      4   62[COMRAM] struct .
 18429 ;;  i               1   70[COMRAM] unsigned char 
 18430 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 18431 ;; Return value:  Size  Location     Type
 18432 ;;                  1    wreg      void 
 18433 ;; Registers used:
 18434 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 18435 ;; Tracked objects:
 18436 ;;		On entry : 0/0
 18437 ;;		On exit  : 0/0
 18438 ;;		Unchanged: 0/0
 18439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18440 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18441 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18442 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18443 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18444 ;;Total ram usage:       14 bytes
 18445 ;; Hardware stack levels used:    1
 18446 ;; Hardware stack levels required when called:    7
 18447 ;; This function calls:
 18448 ;;		_ExternalFlash_CapacityRead
 18449 ;;		_ExternalFlash_SectorSizeRead
 18450 ;;		_ExternalFlash_WriteProtectStateGet
 18451 ;;		_MSDCheckForErrorCases
 18452 ;;		_MSDComputeDeviceInAndResidue
 18453 ;;		_MSDErrorHandler
 18454 ;;		_MSDReadHandler
 18455 ;;		_MSDWriteHandler
 18456 ;;		_ResetSenseData
 18457 ;;		_USBTransferOnePacket
 18458 ;;		_memcpy
 18459 ;; This function is called by:
 18460 ;;		_MSDProcessCommand
 18461 ;;		_MSDProcessCommandMediaAbsent
 18462 ;; This function uses a non-reentrant model
 18463 ;;
 18464                           
 18465                           	psect	text86
 18466  00086C                     __ptext86:
 18467                           	opt stack 0
 18468  00086C                     _MSDProcessCommandMediaPresent:
 18469                           	opt stack 20
 18470                           
 18471                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 18472                           
 18473                           ;incstack = 0
 18474  00086C  D1B9               	goto	l614
 18475  00086E                     
 18476                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 18477  00086E  EC5A  F018         	call	_MSDReadHandler	;wreg free
 18478  000872  0900               	iorlw	0
 18479  000874  A4D8               	btfss	status,2,c
 18480  000876  0012               	return	
 18481                           
 18482                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 18483  000878  0100               	movlb	0	; () banked
 18484  00087A  69EC               	setf	_MSDCommandState& (0+255),b
 18485                           
 18486                           ; BSR set to: 0
 18487                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 18488  00087C  0012               	return	
 18489  00087E                     
 18490                           ; BSR set to: 0
 18491                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 18492                           
 18493                           ; BSR set to: 0
 18494  00087E  EC48  F00C         	call	_MSDWriteHandler	;wreg free
 18495  000882  0900               	iorlw	0
 18496  000884  A4D8               	btfss	status,2,c
 18497  000886  0012               	return	
 18498                           
 18499                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 18500  000888  0100               	movlb	0	; () banked
 18501  00088A  69EC               	setf	_MSDCommandState& (0+255),b
 18502                           
 18503                           ; BSR set to: 0
 18504                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 18505  00088C  0012               	return	
 18506  00088E                     
 18507                           ; BSR set to: 0
 18508                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 18509                           
 18510                           ; BSR set to: 0
 18511  00088E  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18512  000890  A4D8               	btfss	status,2,c
 18513  000892  D002               	goto	l621
 18514                           
 18515                           ; BSR set to: 0
 18516                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 18517  000894  69EC               	setf	_MSDCommandState& (0+255),b
 18518                           
 18519                           ;usb_device_msd.c: 751: break;
 18520  000896  0012               	return	
 18521  000898                     l621:
 18522                           
 18523                           ; BSR set to: 0
 18524                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 18525  000898  C112  F0DC         	movff	_gblCBW+18,_TransferLength+1
 18526                           
 18527                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 18528  00089C  C113  F0DB         	movff	_gblCBW+19,_TransferLength
 18529                           
 18530                           ; BSR set to: 0
 18531                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 18532  0008A0  C0DB  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 18533  0008A4  C0DC  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 18534  0008A8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 18535  0008AA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 18536  0008AC  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18537  0008B0  0900               	iorlw	0
 18538  0008B2  A4D8               	btfss	status,2,c
 18539  0008B4  0012               	return	
 18540                           
 18541                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 18542                           
 18543                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 18544  0008B6  0E00               	movlw	0
 18545  0008B8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18546  0008BA  0E24               	movlw	36
 18547  0008BC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18548  0008BE  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18549                           
 18550                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 18551  0008C2  0E00               	movlw	0
 18552  0008C4  6E01               	movwf	memcpy@d1,c
 18553  0008C6  0E06               	movlw	6
 18554  0008C8  6E02               	movwf	memcpy@d1+1,c
 18555  0008CA  0E4A               	movlw	low _inq_resp
 18556  0008CC  6E03               	movwf	memcpy@s1,c
 18557  0008CE  0E9F               	movlw	high _inq_resp
 18558  0008D0  6E04               	movwf	memcpy@s1+1,c
 18559  0008D2  5003               	movf	memcpy@s1,w,c
 18560  0008D4  1004               	iorwf	memcpy@s1+1,w,c
 18561  0008D6  A4D8               	btfss	status,2,c
 18562  0008D8  0E00               	movlw	low (__mediumconst shr (0+16))
 18563  0008DA  6E05               	movwf	memcpy@s1+2,c
 18564  0008DC  0E00               	movlw	0
 18565  0008DE  6E07               	movwf	memcpy@n+1,c
 18566  0008E0  0E24               	movlw	36
 18567  0008E2  6E06               	movwf	memcpy@n,c
 18568  0008E4  ECDD  F03C         	call	_memcpy	;wreg free
 18569                           
 18570                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 18571  0008E8  0EFD               	movlw	253
 18572  0008EA  0100               	movlb	0	; () banked
 18573  0008EC  6FEC               	movwf	_MSDCommandState& (0+255),b
 18574                           
 18575                           ;usb_device_msd.c: 773: break;
 18576  0008EE  0012               	return	
 18577  0008F0                     
 18578                           ; BSR set to: 0
 18579                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 18580                           
 18581                           ; BSR set to: 0
 18582  0008F0  C1C1  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 18583  0008F4  C1C2  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 18584  0008F8  D801               	call	u9908
 18585  0008FA  D00A               	goto	u9909
 18586  0008FC                     u9908:
 18587  0008FC  0005               	push	
 18588  0008FE  6EFA               	movwf	pclath,c
 18589  000900  0101               	movlb	1	; () banked
 18590  000902  51B5               	movf	(_LUN+2)& (0+255),w,b
 18591  000904  6EFD               	movwf	tosl,c
 18592  000906  51B6               	movf	(_LUN+3)& (0+255),w,b
 18593  000908  6EFE               	movwf	tosh,c
 18594  00090A  6AFF               	clrf	tosu,c
 18595  00090C  50FA               	movf	pclath,w,c
 18596  00090E  0012               	return		;indir
 18597  000910                     u9909:
 18598  000910  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 18599  000914  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 18600  000918  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 18601  00091C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 18602                           
 18603                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 18604  000920  C1C1  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 18605  000924  C1C2  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 18606  000928  D801               	call	u9918
 18607  00092A  D00A               	goto	u9919
 18608  00092C                     u9918:
 18609  00092C  0005               	push	
 18610  00092E  6EFA               	movwf	pclath,c
 18611  000930  0101               	movlb	1	; () banked
 18612  000932  51B7               	movf	(_LUN+4)& (0+255),w,b
 18613  000934  6EFD               	movwf	tosl,c
 18614  000936  51B8               	movf	(_LUN+5)& (0+255),w,b
 18615  000938  6EFE               	movwf	tosh,c
 18616  00093A  6AFF               	clrf	tosu,c
 18617  00093C  50FA               	movf	pclath,w,c
 18618  00093E  0012               	return		;indir
 18619  000940                     u9919:
 18620  000940  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 18621  000944  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 18622  000948  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 18623  00094A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 18624                           
 18625                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 18626  00094C  EE26 F000          	lfsr	2,1536
 18627  000950  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 18628                           
 18629                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 18630  000954  EE26 F001          	lfsr	2,1537	;volatile
 18631  000958  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 18632                           
 18633                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 18634  00095C  EE26 F002          	lfsr	2,1538	;volatile
 18635  000960  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 18636                           
 18637                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 18638  000964  EE26 F003          	lfsr	2,1539	;volatile
 18639  000968  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 18640                           
 18641                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 18642  00096C  EE26 F004          	lfsr	2,1540	;volatile
 18643  000970  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 18644                           
 18645                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 18646  000974  EE26 F005          	lfsr	2,1541	;volatile
 18647  000978  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 18648                           
 18649                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 18650  00097C  EE26 F006          	lfsr	2,1542	;volatile
 18651  000980  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 18652                           
 18653                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 18654  000984  EE26 F007          	lfsr	2,1543	;volatile
 18655  000988  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 18656                           
 18657                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 18658  00098C  0E00               	movlw	0
 18659  00098E  0100               	movlb	0	; () banked
 18660  000990  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18661  000992  0E08               	movlw	8
 18662  000994  6FDB               	movwf	_TransferLength& (0+255),b
 18663                           
 18664                           ; BSR set to: 0
 18665                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 18666  000996  0E00               	movlw	0
 18667  000998  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18668  00099A  0E08               	movlw	8
 18669  00099C  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18670  00099E  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18671                           
 18672                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 18673  0009A2  0EFD               	movlw	253
 18674  0009A4  0100               	movlb	0	; () banked
 18675  0009A6  6FEC               	movwf	_MSDCommandState& (0+255),b
 18676                           
 18677                           ;usb_device_msd.c: 802: break;
 18678  0009A8  0012               	return	
 18679  0009AA                     
 18680                           ; BSR set to: 0
 18681                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 18682                           
 18683                           ; BSR set to: 0
 18684  0009AA  05E7               	decf	_MSDHostNoData& (0+255),w,b
 18685  0009AC  A4D8               	btfss	status,2,c
 18686  0009AE  D002               	goto	l625
 18687                           
 18688                           ; BSR set to: 0
 18689                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 18690  0009B0  69EC               	setf	_MSDCommandState& (0+255),b
 18691                           
 18692                           ;usb_device_msd.c: 814: break;
 18693  0009B2  0012               	return	
 18694  0009B4                     l625:
 18695                           
 18696                           ; BSR set to: 0
 18697                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 18698                           
 18699                           ; BSR set to: 0
 18700  0009B4  0E00               	movlw	0
 18701  0009B6  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18702  0009B8  0E12               	movlw	18
 18703  0009BA  6FDB               	movwf	_TransferLength& (0+255),b
 18704                           
 18705                           ; BSR set to: 0
 18706                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 18707  0009BC  0E00               	movlw	0
 18708  0009BE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18709  0009C0  0E12               	movlw	18
 18710  0009C2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18711  0009C4  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18712                           
 18713                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 18714  0009C8  0E00               	movlw	0
 18715  0009CA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 18716  0009CC                     l13113:
 18717  0009CC  0E11               	movlw	17
 18718  0009CE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 18719  0009D0  D001               	goto	l626
 18720  0009D2  D014               	goto	u9940
 18721  0009D4                     l626:
 18722                           
 18723                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 18724  0009D4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18725  0009D6  0D01               	mullw	1
 18726  0009D8  0E1F               	movlw	low _gblSenseData
 18727  0009DA  24F3               	addwf	prodl,w,c
 18728  0009DC  6ED9               	movwf	fsr2l,c
 18729  0009DE  0E01               	movlw	high _gblSenseData
 18730  0009E0  20F4               	addwfc	prodh,w,c
 18731  0009E2  6EDA               	movwf	fsr2h,c
 18732  0009E4  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 18733  0009E6  0D01               	mullw	1
 18734  0009E8  0E00               	movlw	0
 18735  0009EA  24F3               	addwf	prodl,w,c
 18736  0009EC  6EE1               	movwf	fsr1l,c
 18737  0009EE  0E06               	movlw	6
 18738  0009F0  20F4               	addwfc	prodh,w,c
 18739  0009F2  6EE2               	movwf	fsr1h,c
 18740  0009F4  CFDF FFE7          	movff	indf2,indf1
 18741  0009F8  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 18742  0009FA  D7E8               	goto	l13113
 18743  0009FC                     u9940:
 18744                           
 18745                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 18746  0009FC  0EFD               	movlw	253
 18747  0009FE  0100               	movlb	0	; () banked
 18748  000A00  6FEC               	movwf	_MSDCommandState& (0+255),b
 18749                           
 18750                           ;usb_device_msd.c: 827: break;
 18751  000A02  0012               	return	
 18752  000A04                     l628:
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 18756  000A04  0E03               	movlw	3
 18757  000A06  CFE8 F600          	movff	wreg,1536
 18758                           
 18759                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 18760  000A0A  0E00               	movlw	0
 18761  000A0C  CFE8 F601          	movff	wreg,1537	;volatile
 18762                           
 18763                           ; BSR set to: 0
 18764                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 18765  000A10  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 18766  000A14  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 18767  000A18  D801               	call	u9958
 18768  000A1A  D00A               	goto	u9959
 18769  000A1C                     u9958:
 18770  000A1C  0005               	push	
 18771  000A1E  6EFA               	movwf	pclath,c
 18772  000A20  0101               	movlb	1	; () banked
 18773  000A22  51BD               	movf	(_LUN+10)& (0+255),w,b
 18774  000A24  6EFD               	movwf	tosl,c
 18775  000A26  51BE               	movf	(_LUN+11)& (0+255),w,b
 18776  000A28  6EFE               	movwf	tosh,c
 18777  000A2A  6AFF               	clrf	tosu,c
 18778  000A2C  50FA               	movf	pclath,w,c
 18779  000A2E  0012               	return		;indir
 18780  000A30                     u9959:
 18781  000A30  0900               	iorlw	0
 18782  000A32  A4D8               	btfss	status,2,c
 18783  000A34  D004               	goto	l630
 18784  000A36  0E00               	movlw	0
 18785  000A38  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18786  000A3A  0E00               	movlw	0
 18787  000A3C  D003               	goto	L19
 18788  000A3E                     l630:
 18789  000A3E  0E00               	movlw	0
 18790  000A40  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 18791  000A42  0E80               	movlw	128
 18792  000A44                     L19:
 18793  000A44  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 18794  000A46  EE26 F002          	lfsr	2,1538	;volatile
 18795  000A4A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 18796                           
 18797                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 18798  000A4E  0E00               	movlw	0
 18799  000A50  CFE8 F603          	movff	wreg,1539	;volatile
 18800                           
 18801                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 18802  000A54  0E00               	movlw	0
 18803  000A56  0100               	movlb	0	; () banked
 18804  000A58  6FDC               	movwf	(_TransferLength+1)& (0+255),b
 18805  000A5A  0E04               	movlw	4
 18806  000A5C  6FDB               	movwf	_TransferLength& (0+255),b
 18807                           
 18808                           ; BSR set to: 0
 18809                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 18810  000A5E  0E00               	movlw	0
 18811  000A60  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 18812  000A62  0E04               	movlw	4
 18813  000A64  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 18814  000A66  EC1A  F036         	call	_MSDComputeDeviceInAndResidue	;wreg free
 18815                           
 18816                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 18817  000A6A  0EFD               	movlw	253
 18818  000A6C  0100               	movlb	0	; () banked
 18819  000A6E  6FEC               	movwf	_MSDCommandState& (0+255),b
 18820                           
 18821                           ;usb_device_msd.c: 839: break;
 18822  000A70  0012               	return	
 18823  000A72                     
 18824                           ; BSR set to: 0
 18825                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 18826                           
 18827                           ; BSR set to: 0
 18828  000A72  0101               	movlb	1	; () banked
 18829  000A74  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18830  000A76  0BF0               	andlw	-16
 18831  000A78  0905               	iorlw	5
 18832  000A7A  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 18833                           
 18834                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 18835  000A7C  0E20               	movlw	32
 18836  000A7E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 18837                           
 18838                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 18839  000A80  0E00               	movlw	0
 18840  000A82  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 18841                           
 18842                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 18843  000A84  0E01               	movlw	1
 18844  000A86  010D               	movlb	13	; () banked
 18845  000A88  6F8C               	movwf	140,b	;volatile
 18846                           
 18847                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 18848  000A8A  0E00               	movlw	0
 18849  000A8C  6F88               	movwf	136,b	;volatile
 18850  000A8E  0E00               	movlw	0
 18851  000A90  6F89               	movwf	137,b	;volatile
 18852  000A92  0E00               	movlw	0
 18853  000A94  6F8A               	movwf	138,b	;volatile
 18854  000A96  0E00               	movlw	0
 18855  000A98  6F8B               	movwf	139,b	;volatile
 18856                           
 18857                           ; BSR set to: 13
 18858                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 18859  000A9A  0100               	movlb	0	; () banked
 18860  000A9C  69EC               	setf	_MSDCommandState& (0+255),b
 18861                           
 18862                           ;usb_device_msd.c: 848: break;
 18863  000A9E  0012               	return	
 18864  000AA0                     
 18865                           ; BSR set to: 0
 18866                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 18867                           
 18868                           ; BSR set to: 0
 18869  000AA0  0E00               	movlw	0
 18870  000AA2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 18871  000AA4  0E00               	movlw	0
 18872  000AA6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 18873  000AA8  0E00               	movlw	0
 18874  000AAA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 18875  000AAC  0E00               	movlw	0
 18876  000AAE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 18877  000AB0  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 18878  000AB4  0900               	iorlw	0
 18879  000AB6  A4D8               	btfss	status,2,c
 18880  000AB8  0012               	return	
 18881                           
 18882                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 18883                           
 18884                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 18885  000ABA  0101               	movlb	1	; () banked
 18886  000ABC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 18887  000ABE  0B0F               	andlw	15
 18888  000AC0  0A06               	xorlw	6
 18889  000AC2  A4D8               	btfss	status,2,c
 18890  000AC4  D007               	goto	l636
 18891                           
 18892                           ; BSR set to: 1
 18893  000AC6  010D               	movlb	13	; () banked
 18894  000AC8  058C               	decf	140,w,b	;volatile
 18895  000ACA  A4D8               	btfss	status,2,c
 18896  000ACC  D003               	goto	l636
 18897                           
 18898                           ; BSR set to: 13
 18899                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 18900  000ACE  0100               	movlb	0	; () banked
 18901  000AD0  69EC               	setf	_MSDCommandState& (0+255),b
 18902                           
 18903                           ;usb_device_msd.c: 870: }
 18904  000AD2  0012               	return	
 18905  000AD4                     l636:
 18906                           
 18907                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 18908                           
 18909                           ; BSR set to: 0
 18910  000AD4  EC72  F03D         	call	_ResetSenseData	;wreg free
 18911                           
 18912                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 18913  000AD8  0E00               	movlw	0
 18914  000ADA  010D               	movlb	13	; () banked
 18915  000ADC  6F88               	movwf	136,b	;volatile
 18916  000ADE  0E00               	movlw	0
 18917  000AE0  6F89               	movwf	137,b	;volatile
 18918  000AE2  0E00               	movlw	0
 18919  000AE4  6F8A               	movwf	138,b	;volatile
 18920  000AE6  0E00               	movlw	0
 18921  000AE8  6F8B               	movwf	139,b	;volatile
 18922                           
 18923                           ; BSR set to: 13
 18924                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 18925  000AEA  0100               	movlb	0	; () banked
 18926  000AEC  69EC               	setf	_MSDCommandState& (0+255),b
 18927                           
 18928                           ; BSR set to: 0
 18929                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 18930  000AEE  0012               	return	
 18931  000AF0                     
 18932                           ; BSR set to: 0
 18933                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 18934                           
 18935                           ; BSR set to: 0
 18936                           
 18937                           ; BSR set to: 0
 18938  000AF0  0E00               	movlw	0
 18939  000AF2  010D               	movlb	13	; () banked
 18940  000AF4  6F88               	movwf	136,b	;volatile
 18941  000AF6  0E00               	movlw	0
 18942  000AF8  6F89               	movwf	137,b	;volatile
 18943  000AFA  0E00               	movlw	0
 18944  000AFC  6F8A               	movwf	138,b	;volatile
 18945  000AFE  0E00               	movlw	0
 18946  000B00  6F8B               	movwf	139,b	;volatile
 18947                           
 18948                           ; BSR set to: 13
 18949                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 18950  000B02  0100               	movlb	0	; () banked
 18951  000B04  69EC               	setf	_MSDCommandState& (0+255),b
 18952                           
 18953                           ;usb_device_msd.c: 885: break;
 18954  000B06  0012               	return	
 18955  000B08                     
 18956                           ; BSR set to: 0
 18957                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 18958                           
 18959                           ; BSR set to: 0
 18960  000B08  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 18961  000B0A  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 18962  000B0C  B4D8               	btfsc	status,2,c
 18963  000B0E  D006               	goto	u10010
 18964                           
 18965                           ; BSR set to: 0
 18966  000B10  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 18967  000B14  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 18968  000B18  BEDF               	btfsc	indf2,7,c
 18969  000B1A  0012               	return	
 18970  000B1C                     u10010:
 18971                           
 18972                           ; BSR set to: 0
 18973                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 18974                           
 18975                           ; BSR set to: 0
 18976  000B1C  0101               	movlb	1	; () banked
 18977  000B1E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 18978  000B20  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 18979  000B22  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 18980  000B24  E104               	bnz	u10020
 18981  000B26  0E40               	movlw	64
 18982  000B28  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 18983  000B2A  A0D8               	btfss	status,0,c
 18984  000B2C  D009               	goto	l644
 18985  000B2E                     u10020:
 18986                           
 18987                           ; BSR set to: 1
 18988                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 18989  000B2E  0E40               	movlw	64
 18990  000B30  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 18991                           
 18992                           ; BSR set to: 1
 18993                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 18994  000B32  0E40               	movlw	64
 18995  000B34  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 18996  000B36  0E00               	movlw	0
 18997  000B38  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 18998  000B3A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 18999  000B3C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19000                           
 19001                           ;usb_device_msd.c: 900: }
 19002  000B3E  D00A               	goto	l645
 19003  000B40                     l644:
 19004                           
 19005                           ; BSR set to: 1
 19006                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 19007  000B40  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 19008                           
 19009                           ; BSR set to: 1
 19010                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 19011  000B44  0E00               	movlw	0
 19012  000B46  6F08               	movwf	(_gblCBW+8)& (0+255),b
 19013  000B48  0E00               	movlw	0
 19014  000B4A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 19015  000B4C  0E00               	movlw	0
 19016  000B4E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 19017  000B50  0E00               	movlw	0
 19018  000B52  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 19019  000B54                     l645:
 19020                           
 19021                           ; BSR set to: 1
 19022                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 19023                           
 19024                           ; BSR set to: 1
 19025  000B54  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19026  000B56  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 19027  000B58  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 19028  000B5A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 19029  000B5C  0100               	movlb	0	; () banked
 19030  000B5E  5DDB               	subwf	_TransferLength& (0+255),w,b
 19031  000B60  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 19032  000B62  59DC               	subwfb	(_TransferLength+1)& (0+255),w,b
 19033  000B64  A0D8               	btfss	status,0,c
 19034  000B66  D005               	goto	l646
 19035                           
 19036                           ; BSR set to: 0
 19037                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 19038  000B68  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19039  000B6A  5FDB               	subwf	_TransferLength& (0+255),f,b
 19040  000B6C  0E00               	movlw	0
 19041  000B6E  5BDC               	subwfb	(_TransferLength+1)& (0+255),f,b
 19042                           
 19043                           ;usb_device_msd.c: 918: }
 19044  000B70  D01A               	goto	u10050
 19045  000B72                     l646:
 19046                           
 19047                           ; BSR set to: 0
 19048                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 19049                           
 19050                           ; BSR set to: 0
 19051  000B72  0E00               	movlw	0
 19052  000B74  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 19053  000B76  D013               	goto	l648
 19054  000B78                     
 19055                           ; BSR set to: 0
 19056                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 19057                           
 19058                           ; BSR set to: 0
 19059  000B78  51DB               	movf	_TransferLength& (0+255),w,b
 19060  000B7A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19061  000B7C  B4D8               	btfsc	status,2,c
 19062  000B7E  D004               	goto	l650
 19063                           
 19064                           ; BSR set to: 0
 19065                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 19066  000B80  07DB               	decf	_TransferLength& (0+255),f,b
 19067  000B82  A0D8               	btfss	status,0,c
 19068  000B84  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19069                           
 19070                           ;usb_device_msd.c: 932: }
 19071  000B86  D00A               	goto	l651
 19072  000B88                     l650:
 19073                           
 19074                           ; BSR set to: 0
 19075                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 19076                           
 19077                           ; BSR set to: 0
 19078  000B88  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 19079  000B8A  0D01               	mullw	1
 19080  000B8C  0E00               	movlw	0
 19081  000B8E  24F3               	addwf	prodl,w,c
 19082  000B90  6ED9               	movwf	fsr2l,c
 19083  000B92  0E06               	movlw	6
 19084  000B94  20F4               	addwfc	prodh,w,c
 19085  000B96  6EDA               	movwf	fsr2h,c
 19086  000B98  0E00               	movlw	0
 19087  000B9A  6EDF               	movwf	indf2,c
 19088  000B9C                     l651:
 19089                           
 19090                           ; BSR set to: 0
 19091                           
 19092                           ; BSR set to: 0
 19093  000B9C  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 19094  000B9E                     l648:
 19095                           
 19096                           ; BSR set to: 0
 19097                           
 19098                           ; BSR set to: 0
 19099  000B9E  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 19100  000BA0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 19101  000BA2  A0D8               	btfss	status,0,c
 19102  000BA4  D7E9               	goto	l649
 19103  000BA6                     u10050:
 19104                           
 19105                           ; BSR set to: 0
 19106                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 19107                           
 19108                           ; BSR set to: 0
 19109                           
 19110                           ; BSR set to: 0
 19111  000BA6  0E01               	movlw	1
 19112  000BA8  6E01               	movwf	USBTransferOnePacket@dir,c
 19113  000BAA  0E00               	movlw	0
 19114  000BAC  6E02               	movwf	USBTransferOnePacket@data,c
 19115  000BAE  0E06               	movlw	6
 19116  000BB0  6E03               	movwf	USBTransferOnePacket@data+1,c
 19117  000BB2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 19118  000BB6  0E02               	movlw	2
 19119  000BB8  ECF2  F025         	call	_USBTransferOnePacket
 19120  000BBC  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 19121  000BC0  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 19122                           
 19123                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 19124  000BC4  0101               	movlb	1	; () banked
 19125  000BC6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 19126  000BC8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 19127  000BCA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 19128  000BCC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 19129  000BCE  A4D8               	btfss	status,2,c
 19130  000BD0  0012               	return	
 19131                           
 19132                           ; BSR set to: 1
 19133                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 19134  000BD2  0100               	movlb	0	; () banked
 19135  000BD4  69EC               	setf	_MSDCommandState& (0+255),b
 19136                           
 19137                           ; BSR set to: 0
 19138                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 19139                           
 19140                           ; BSR set to: 0
 19141                           
 19142                           ;usb_device_msd.c: 949: break;
 19143  000BD6  0012               	return	
 19144  000BD8                     
 19145                           ; BSR set to: 0
 19146                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 19147                           
 19148                           ; BSR set to: 0
 19149                           
 19150                           ;usb_device_msd.c: 954: default:
 19151                           
 19152                           ; BSR set to: 0
 19153  000BD8  0E7F               	movlw	127
 19154  000BDA  ECEE  F024         	call	_MSDErrorHandler
 19155                           
 19156                           ;usb_device_msd.c: 960: }
 19157                           
 19158                           ;usb_device_msd.c: 959: break;
 19159  000BDE  0012               	return	
 19160  000BE0                     l614:
 19161  000BE0  0100               	movlb	0	; () banked
 19162  000BE2  51EC               	movf	_MSDCommandState& (0+255),w,b
 19163                           
 19164                           ; Switch size 1, requested type "space"
 19165                           ; Number of cases is 12, Range of values is 0 to 254
 19166                           ; switch strategies available:
 19167                           ; Name         Instructions Cycles
 19168                           ; simple_byte           37    19 (average)
 19169                           ;	Chosen strategy is simple_byte
 19170  000BE4  0A00               	xorlw	0	; case 0
 19171  000BE6  B4D8               	btfsc	status,2,c
 19172  000BE8  D75B               	goto	l634
 19173  000BEA  0A03               	xorlw	3	; case 3
 19174  000BEC  B4D8               	btfsc	status,2,c
 19175  000BEE  D6DD               	goto	l624
 19176  000BF0  0A11               	xorlw	17	; case 18
 19177  000BF2  B4D8               	btfsc	status,2,c
 19178  000BF4  D64C               	goto	l620
 19179  000BF6  0A08               	xorlw	8	; case 26
 19180  000BF8  B4D8               	btfsc	status,2,c
 19181  000BFA  D704               	goto	l628
 19182  000BFC  0A01               	xorlw	1	; case 27
 19183  000BFE  B4D8               	btfsc	status,2,c
 19184  000C00  D777               	goto	l638
 19185  000C02  0A05               	xorlw	5	; case 30
 19186  000C04  B4D8               	btfsc	status,2,c
 19187  000C06  D735               	goto	l633
 19188  000C08  0A3B               	xorlw	59	; case 37
 19189  000C0A  B4D8               	btfsc	status,2,c
 19190  000C0C  D671               	goto	l623
 19191  000C0E  0A0D               	xorlw	13	; case 40
 19192  000C10  B4D8               	btfsc	status,2,c
 19193  000C12  D62D               	goto	l615
 19194  000C14  0A02               	xorlw	2	; case 42
 19195  000C16  B4D8               	btfsc	status,2,c
 19196  000C18  D632               	goto	l618
 19197  000C1A  0A05               	xorlw	5	; case 47
 19198  000C1C  B4D8               	btfsc	status,2,c
 19199  000C1E  D768               	goto	l638
 19200  000C20  0AD2               	xorlw	210	; case 253
 19201  000C22  B4D8               	btfsc	status,2,c
 19202  000C24  D771               	goto	l640
 19203  000C26  0A03               	xorlw	3	; case 254
 19204  000C28  D7D7               	goto	l654
 19205  000C2A                     __end_of_MSDProcessCommandMediaPresent:
 19206                           	opt stack 0
 19207                           tosu	equ	0xFFF
 19208                           tosh	equ	0xFFE
 19209                           tosl	equ	0xFFD
 19210                           pclath	equ	0xFFA
 19211                           tblptru	equ	0xFF8
 19212                           tblptrh	equ	0xFF7
 19213                           tblptrl	equ	0xFF6
 19214                           tablat	equ	0xFF5
 19215                           prodh	equ	0xFF4
 19216                           prodl	equ	0xFF3
 19217                           intcon	equ	0xFF2
 19218                           intcon2	equ	0xFF1
 19219                           intcon3	equ	0xFF0
 19220                           indf0	equ	0xFEF
 19221                           postinc0	equ	0xFEE
 19222                           fsr0h	equ	0xFEA
 19223                           fsr0l	equ	0xFE9
 19224                           wreg	equ	0xFE8
 19225                           indf1	equ	0xFE7
 19226                           postdec1	equ	0xFE5
 19227                           plusw1	equ	0xFE3
 19228                           fsr1h	equ	0xFE2
 19229                           fsr1l	equ	0xFE1
 19230                           indf2	equ	0xFDF
 19231                           postinc2	equ	0xFDE
 19232                           postdec2	equ	0xFDD
 19233                           plusw2	equ	0xFDB
 19234                           fsr2h	equ	0xFDA
 19235                           fsr2l	equ	0xFD9
 19236                           status	equ	0xFD8
 19237                           
 19238 ;; *************** function _MSDWriteHandler *****************
 19239 ;; Defined at:
 19240 ;;		line 1188 in file "usb_device_msd.c"
 19241 ;; Parameters:    Size  Location     Type
 19242 ;;		None
 19243 ;; Auto vars:     Size  Location     Type
 19244 ;;		None
 19245 ;; Return value:  Size  Location     Type
 19246 ;;                  1    wreg      unsigned char 
 19247 ;; Registers used:
 19248 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19249 ;; Tracked objects:
 19250 ;;		On entry : 0/0
 19251 ;;		On exit  : 0/0
 19252 ;;		Unchanged: 0/0
 19253 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19254 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19255 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19256 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19257 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19258 ;;Total ram usage:        5 bytes
 19259 ;; Hardware stack levels used:    1
 19260 ;; Hardware stack levels required when called:    6
 19261 ;; This function calls:
 19262 ;;		_ExternalFlash_SectorWrite
 19263 ;;		_ExternalFlash_WriteProtectStateGet
 19264 ;;		_MSDCheckForErrorCases
 19265 ;;		_USBStallEndpoint
 19266 ;;		_USBTransferOnePacket
 19267 ;; This function is called by:
 19268 ;;		_MSDProcessCommandMediaPresent
 19269 ;; This function uses a non-reentrant model
 19270 ;;
 19271                           
 19272                           	psect	text87
 19273  001890                     __ptext87:
 19274                           	opt stack 0
 19275  001890                     _MSDWriteHandler:
 19276                           	opt stack 20
 19277                           
 19278                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 19279                           
 19280                           ;incstack = 0
 19281  001890  D146               	goto	l684
 19282  001892                     l685:
 19283                           
 19284                           ; BSR set to: 0
 19285                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 19286  001892  C111  F161         	movff	_gblCBW+17,_LBA+3
 19287                           
 19288                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 19289  001896  C112  F160         	movff	_gblCBW+18,_LBA+2
 19290                           
 19291                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 19292  00189A  C113  F15F         	movff	_gblCBW+19,_LBA+1
 19293                           
 19294                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 19295  00189E  C114  F15E         	movff	_gblCBW+20,_LBA
 19296                           
 19297                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 19298  0018A2  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 19299                           
 19300                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 19301  0018A6  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 19302                           
 19303                           ; BSR set to: 0
 19304                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 19305  0018AA  51DB               	movf	_TransferLength& (0+255),w,b
 19306  0018AC  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19307  0018AE  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 19308  0018B0  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 19309  0018B2  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19310  0018B4  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19311  0018B6  0E09               	movlw	9
 19312  0018B8                     u8515:
 19313  0018B8  90D8               	bcf	status,0,c
 19314  0018BA  3630               	rlcf	??_MSDWriteHandler,f,c
 19315  0018BC  3631               	rlcf	??_MSDWriteHandler+1,f,c
 19316  0018BE  3632               	rlcf	??_MSDWriteHandler+2,f,c
 19317  0018C0  3633               	rlcf	??_MSDWriteHandler+3,f,c
 19318  0018C2  2EE8               	decfsz	wreg,f,c
 19319  0018C4  D7F9               	goto	u8515
 19320  0018C6  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 19321  0018CA  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 19322  0018CE  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 19323  0018D2  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 19324  0018D6  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 19325  0018DA  0900               	iorlw	0
 19326  0018DC  A4D8               	btfss	status,2,c
 19327  0018DE  D131               	goto	l687
 19328                           
 19329                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 19330                           
 19331                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 19332  0018E0  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19333  0018E4  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19334  0018E8  D801               	call	u8538
 19335  0018EA  D00A               	goto	u8539
 19336  0018EC                     u8538:
 19337  0018EC  0005               	push	
 19338  0018EE  6EFA               	movwf	pclath,c
 19339  0018F0  0101               	movlb	1	; () banked
 19340  0018F2  51BD               	movf	(_LUN+10)& (0+255),w,b
 19341  0018F4  6EFD               	movwf	tosl,c
 19342  0018F6  51BE               	movf	(_LUN+11)& (0+255),w,b
 19343  0018F8  6EFE               	movwf	tosh,c
 19344  0018FA  6AFF               	clrf	tosu,c
 19345  0018FC  50FA               	movf	pclath,w,c
 19346  0018FE  0012               	return		;indir
 19347  001900                     u8539:
 19348  001900  0900               	iorlw	0
 19349  001902  B4D8               	btfsc	status,2,c
 19350  001904  D016               	goto	l688
 19351                           
 19352                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 19353  001906  0E01               	movlw	1
 19354  001908  010D               	movlb	13	; () banked
 19355  00190A  6F8C               	movwf	140,b	;volatile
 19356                           
 19357                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 19358  00190C  0101               	movlb	1	; () banked
 19359  00190E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19360  001910  0BF0               	andlw	-16
 19361  001912  0907               	iorlw	7
 19362  001914  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19363                           
 19364                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 19365  001916  0E27               	movlw	39
 19366  001918  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19367                           
 19368                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 19369  00191A  0E00               	movlw	0
 19370  00191C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19371                           
 19372                           ; BSR set to: 1
 19373                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 19374  00191E  0E00               	movlw	0
 19375  001920  6E01               	movwf	USBStallEndpoint@dir,c
 19376  001922  0E02               	movlw	2
 19377  001924  ECE7  F023         	call	_USBStallEndpoint
 19378                           
 19379                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 19380  001928  0E00               	movlw	0
 19381  00192A  0100               	movlb	0	; () banked
 19382  00192C  6FEA               	movwf	_MSDWriteState& (0+255),b
 19383                           
 19384                           ; BSR set to: 0
 19385                           ;usb_device_msd.c: 1228: return MSDWriteState;
 19386  00192E  51EA               	movf	_MSDWriteState& (0+255),w,b
 19387                           
 19388                           ; BSR set to: 0
 19389  001930  0012               	return	
 19390  001932                     l688:
 19391                           
 19392                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 19393                           
 19394                           ; BSR set to: 0
 19395  001932  0E01               	movlw	1
 19396  001934  0100               	movlb	0	; () banked
 19397  001936  6FED               	movwf	_MSD_State& (0+255),b
 19398  001938                     
 19399                           ; BSR set to: 0
 19400                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 19401                           
 19402                           ; BSR set to: 0
 19403  001938  51DB               	movf	_TransferLength& (0+255),w,b
 19404  00193A  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 19405  00193C  A4D8               	btfss	status,2,c
 19406  00193E  D002               	goto	l691
 19407                           
 19408                           ; BSR set to: 0
 19409                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 19410  001940  0E00               	movlw	0
 19411  001942  D056               	goto	L20
 19412  001944                     l691:
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 19416                           
 19417                           ; BSR set to: 0
 19418  001944  0E03               	movlw	3
 19419  001946  6FEA               	movwf	_MSDWriteState& (0+255),b
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 19423  001948  0E00               	movlw	0
 19424  00194A  0101               	movlb	1	; () banked
 19425  00194C  6F86               	movwf	_ptrNextData& (0+255),b
 19426  00194E  0E06               	movlw	6
 19427  001950  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 19428                           
 19429                           ; BSR set to: 1
 19430                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 19431  001952  0E00               	movlw	0
 19432  001954  010D               	movlb	13	; () banked
 19433  001956  6F88               	movwf	136,b	;volatile
 19434  001958  0E02               	movlw	2
 19435  00195A  6F89               	movwf	137,b	;volatile
 19436  00195C  0E00               	movlw	0
 19437  00195E  6F8A               	movwf	138,b	;volatile
 19438  001960  0E00               	movlw	0
 19439  001962  6F8B               	movwf	139,b	;volatile
 19440  001964                     l692:
 19441                           
 19442                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 19443  001964  010D               	movlb	13	; () banked
 19444  001966  5188               	movf	136,w,b	;volatile
 19445  001968  1189               	iorwf	137,w,b	;volatile
 19446  00196A  118A               	iorwf	138,w,b	;volatile
 19447  00196C  118B               	iorwf	139,w,b	;volatile
 19448  00196E  B4D8               	btfsc	status,2,c
 19449  001970  D01E               	goto	l693
 19450                           
 19451                           ; BSR set to: 13
 19452                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 19453  001972  0100               	movlb	0	; () banked
 19454  001974  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19455  001976  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19456  001978  B4D8               	btfsc	status,2,c
 19457  00197A  D006               	goto	l694
 19458                           
 19459                           ; BSR set to: 0
 19460  00197C  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19461  001980  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19462  001984  BEDF               	btfsc	indf2,7,c
 19463  001986  D0DD               	goto	l687
 19464  001988                     l694:
 19465                           
 19466                           ; BSR set to: 0
 19467                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 19468                           
 19469                           ; BSR set to: 0
 19470  001988  0E00               	movlw	0
 19471  00198A  6E01               	movwf	USBTransferOnePacket@dir,c
 19472  00198C  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 19473  001990  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 19474  001994  0E40               	movlw	64
 19475  001996  6E04               	movwf	USBTransferOnePacket@len,c
 19476  001998  0E02               	movlw	2
 19477  00199A  ECF2  F025         	call	_USBTransferOnePacket
 19478  00199E  C001  F0DF         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 19479  0019A2  C002  F0E0         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 19480                           
 19481                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 19482  0019A6  0E04               	movlw	4
 19483  0019A8  0100               	movlb	0	; () banked
 19484  0019AA  6FEA               	movwf	_MSDWriteState& (0+255),b
 19485                           
 19486                           ;usb_device_msd.c: 1260: }
 19487  0019AC  D023               	goto	l695
 19488  0019AE                     l693:
 19489                           
 19490                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 19491                           
 19492                           ; BSR set to: 0
 19493  0019AE  C1C1  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 19494  0019B2  C1C2  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 19495  0019B6  D801               	call	u8598
 19496  0019B8  D00A               	goto	u8599
 19497  0019BA                     u8598:
 19498  0019BA  0005               	push	
 19499  0019BC  6EFA               	movwf	pclath,c
 19500  0019BE  0101               	movlb	1	; () banked
 19501  0019C0  51BD               	movf	(_LUN+10)& (0+255),w,b
 19502  0019C2  6EFD               	movwf	tosl,c
 19503  0019C4  51BE               	movf	(_LUN+11)& (0+255),w,b
 19504  0019C6  6EFE               	movwf	tosh,c
 19505  0019C8  6AFF               	clrf	tosu,c
 19506  0019CA  50FA               	movf	pclath,w,c
 19507  0019CC  0012               	return		;indir
 19508  0019CE                     u8599:
 19509  0019CE  0900               	iorlw	0
 19510  0019D0  B4D8               	btfsc	status,2,c
 19511  0019D2  D00C               	goto	l696
 19512                           
 19513                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 19514  0019D4  0E01               	movlw	1
 19515  0019D6  010D               	movlb	13	; () banked
 19516  0019D8  6F8C               	movwf	140,b	;volatile
 19517                           
 19518                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 19519  0019DA  0101               	movlb	1	; () banked
 19520  0019DC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19521  0019DE  0BF0               	andlw	-16
 19522  0019E0  0902               	iorlw	2
 19523  0019E2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19524                           
 19525                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 19526  0019E4  0E27               	movlw	39
 19527  0019E6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19528                           
 19529                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 19530  0019E8  0E00               	movlw	0
 19531  0019EA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19532  0019EC                     l696:
 19533                           
 19534                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 19535  0019EC  0E02               	movlw	2
 19536  0019EE  D095               	goto	L22
 19537  0019F0                     L20:
 19538  0019F0  6FEA               	movwf	_MSDWriteState& (0+255),b
 19539                           
 19540                           ;usb_device_msd.c: 1280: break;
 19541  0019F2  D0A7               	goto	l687
 19542  0019F4                     l695:
 19543                           
 19544                           ; BSR set to: 0
 19545                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 19546                           
 19547                           ; BSR set to: 0
 19548                           
 19549                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 19550                           
 19551                           ; BSR set to: 0
 19552  0019F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19553  0019F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 19554  0019F8  B4D8               	btfsc	status,2,c
 19555  0019FA  D006               	goto	l698
 19556                           
 19557                           ; BSR set to: 0
 19558  0019FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 19559  001A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 19560  001A04  BEDF               	btfsc	indf2,7,c
 19561  001A06  D09D               	goto	l687
 19562  001A08                     l698:
 19563                           
 19564                           ; BSR set to: 0
 19565                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 19566                           
 19567                           ; BSR set to: 0
 19568  001A08  EE20 F001          	lfsr	2,1
 19569  001A0C  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19570  001A0E  26D9               	addwf	fsr2l,f,c
 19571  001A10  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19572  001A12  22DA               	addwfc	fsr2h,f,c
 19573  001A14  50DF               	movf	indf2,w,c
 19574  001A16  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19575  001A18  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19576  001A1C  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19577  001A1E  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19578  001A20  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19579  001A22  5031               	movf	??_MSDWriteHandler+1,w,c
 19580  001A24  0101               	movlb	1	; () banked
 19581  001A26  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 19582  001A28  5032               	movf	??_MSDWriteHandler+2,w,c
 19583  001A2A  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 19584  001A2C  5033               	movf	??_MSDWriteHandler+3,w,c
 19585  001A2E  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 19586  001A30  5034               	movf	??_MSDWriteHandler+4,w,c
 19587  001A32  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 19588                           
 19589                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 19590  001A34  0100               	movlb	0	; () banked
 19591  001A36  EE20 F001          	lfsr	2,1
 19592  001A3A  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 19593  001A3C  26D9               	addwf	fsr2l,f,c
 19594  001A3E  51E0               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 19595  001A40  22DA               	addwfc	fsr2h,f,c
 19596  001A42  50DF               	movf	indf2,w,c
 19597  001A44  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 19598  001A46  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 19599  001A4A  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 19600  001A4C  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 19601  001A4E  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 19602  001A50  5031               	movf	??_MSDWriteHandler+1,w,c
 19603  001A52  010D               	movlb	13	; () banked
 19604  001A54  5F88               	subwf	136,f,b	;volatile
 19605  001A56  5032               	movf	??_MSDWriteHandler+2,w,c
 19606  001A58  5B89               	subwfb	137,f,b	;volatile
 19607  001A5A  5033               	movf	??_MSDWriteHandler+3,w,c
 19608  001A5C  5B8A               	subwfb	138,f,b	;volatile
 19609  001A5E  5034               	movf	??_MSDWriteHandler+4,w,c
 19610  001A60  5B8B               	subwfb	139,f,b	;volatile
 19611                           
 19612                           ; BSR set to: 13
 19613                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 19614  001A62  0E40               	movlw	64
 19615  001A64  0101               	movlb	1	; () banked
 19616  001A66  2786               	addwf	_ptrNextData& (0+255),f,b
 19617  001A68  0E00               	movlw	0
 19618  001A6A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 19619                           
 19620                           ; BSR set to: 1
 19621                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 19622  001A6C  0E03               	movlw	3
 19623  001A6E  D055               	goto	L22
 19624  001A70                     
 19625                           ; BSR set to: 0
 19626                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 19627                           
 19628                           ; BSR set to: 0
 19629  001A70  010D               	movlb	13	; () banked
 19630  001A72  518C               	movf	140,w,b	;volatile
 19631  001A74  A4D8               	btfss	status,2,c
 19632  001A76  D03B               	goto	l703
 19633                           
 19634                           ; BSR set to: 13
 19635                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 19636  001A78  C1C1  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 19637  001A7C  C1C2  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 19638  001A80  C15E  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 19639  001A84  C15F  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 19640  001A88  C160  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 19641  001A8C  C161  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 19642  001A90  0E00               	movlw	0
 19643  001A92  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 19644  001A94  0E06               	movlw	6
 19645  001A96  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 19646  001A98  0101               	movlb	1	; () banked
 19647  001A9A  515E               	movf	_LBA& (0+255),w,b
 19648  001A9C  115F               	iorwf	(_LBA+1)& (0+255),w,b
 19649  001A9E  1160               	iorwf	(_LBA+2)& (0+255),w,b
 19650  001AA0  1161               	iorwf	(_LBA+3)& (0+255),w,b
 19651  001AA2  A4D8               	btfss	status,2,c
 19652  001AA4  D002               	goto	u8640
 19653  001AA6  0E01               	movlw	1
 19654  001AA8  D001               	goto	u8650
 19655  001AAA                     u8640:
 19656  001AAA  0E00               	movlw	0
 19657  001AAC                     u8650:
 19658  001AAC  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 19659  001AAE  D801               	call	u8668
 19660  001AB0  D009               	goto	u8669
 19661  001AB2                     u8668:
 19662  001AB2  0005               	push	
 19663  001AB4  6EFA               	movwf	pclath,c
 19664  001AB6  51BF               	movf	(_LUN+12)& (0+255),w,b
 19665  001AB8  6EFD               	movwf	tosl,c
 19666  001ABA  51C0               	movf	(_LUN+13)& (0+255),w,b
 19667  001ABC  6EFE               	movwf	tosh,c
 19668  001ABE  6AFF               	clrf	tosu,c
 19669  001AC0  50FA               	movf	pclath,w,c
 19670  001AC2  0012               	return		;indir
 19671  001AC4                     u8669:
 19672  001AC4  06E8               	decf	wreg,f,c
 19673  001AC6  B4D8               	btfsc	status,2,c
 19674  001AC8  D012               	goto	l703
 19675                           
 19676                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 19677  001ACA  0E64               	movlw	100
 19678  001ACC  0100               	movlb	0	; () banked
 19679  001ACE  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 19680  001AD0  D002               	goto	l702
 19681                           
 19682                           ; BSR set to: 0
 19683                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 19684  001AD2  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 19685                           
 19686                           ;usb_device_msd.c: 1314: break;
 19687  001AD4  D036               	goto	l687
 19688  001AD6                     l702:
 19689                           
 19690                           ; BSR set to: 0
 19691                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 19692                           
 19693                           ; BSR set to: 0
 19694  001AD6  0E01               	movlw	1
 19695  001AD8  010D               	movlb	13	; () banked
 19696  001ADA  6F8C               	movwf	140,b	;volatile
 19697                           
 19698                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 19699  001ADC  0101               	movlb	1	; () banked
 19700  001ADE  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 19701  001AE0  0BF0               	andlw	-16
 19702  001AE2  0903               	iorlw	3
 19703  001AE4  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 19704                           
 19705                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 19706  001AE6  0E00               	movlw	0
 19707  001AE8  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 19708                           
 19709                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 19710  001AEA  0E00               	movlw	0
 19711  001AEC  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 19712  001AEE                     l703:
 19713                           
 19714                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 19715                           
 19716                           ; BSR set to: 1
 19717                           
 19718                           ; BSR set to: 1
 19719                           
 19720                           ; BSR set to: 1
 19721  001AEE  0E01               	movlw	1
 19722  001AF0  0101               	movlb	1	; () banked
 19723  001AF2  275E               	addwf	_LBA& (0+255),f,b
 19724  001AF4  0E00               	movlw	0
 19725  001AF6  235F               	addwfc	(_LBA+1)& (0+255),f,b
 19726  001AF8  2360               	addwfc	(_LBA+2)& (0+255),f,b
 19727  001AFA  2361               	addwfc	(_LBA+3)& (0+255),f,b
 19728                           
 19729                           ; BSR set to: 1
 19730                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 19731  001AFC  0100               	movlb	0	; () banked
 19732  001AFE  07DB               	decf	_TransferLength& (0+255),f,b
 19733  001B00  A0D8               	btfss	status,0,c
 19734  001B02  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 19735                           
 19736                           ; BSR set to: 0
 19737                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 19738  001B04  0E01               	movlw	1
 19739  001B06  D774               	goto	L20
 19740  001B08                     
 19741                           ; BSR set to: 0
 19742                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 19743                           
 19744                           ; BSR set to: 0
 19745  001B08  0E02               	movlw	2
 19746  001B0A  010D               	movlb	13	; () banked
 19747  001B0C  6F8C               	movwf	140,b	;volatile
 19748                           
 19749                           ; BSR set to: 13
 19750                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 19751  001B0E  0E00               	movlw	0
 19752  001B10  6E01               	movwf	USBStallEndpoint@dir,c
 19753  001B12  0E02               	movlw	2
 19754  001B14  ECE7  F023         	call	_USBStallEndpoint
 19755                           
 19756                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 19757  001B18  0E00               	movlw	0
 19758  001B1A                     L22:
 19759  001B1A  0100               	movlb	0	; () banked
 19760  001B1C  D769               	goto	L20
 19761  001B1E                     l684:
 19762                           
 19763                           ; BSR set to: 0
 19764  001B1E  0100               	movlb	0	; () banked
 19765  001B20  51EA               	movf	_MSDWriteState& (0+255),w,b
 19766                           
 19767                           ; Switch size 1, requested type "space"
 19768                           ; Number of cases is 5, Range of values is 0 to 4
 19769                           ; switch strategies available:
 19770                           ; Name         Instructions Cycles
 19771                           ; simple_byte           16     9 (average)
 19772                           ;	Chosen strategy is simple_byte
 19773  001B22  0A00               	xorlw	0	; case 0
 19774  001B24  B4D8               	btfsc	status,2,c
 19775  001B26  D6B5               	goto	l685
 19776  001B28  0A01               	xorlw	1	; case 1
 19777  001B2A  B4D8               	btfsc	status,2,c
 19778  001B2C  D705               	goto	l690
 19779  001B2E  0A03               	xorlw	3	; case 2
 19780  001B30  B4D8               	btfsc	status,2,c
 19781  001B32  D79E               	goto	l699
 19782  001B34  0A01               	xorlw	1	; case 3
 19783  001B36  B4D8               	btfsc	status,2,c
 19784  001B38  D715               	goto	l692
 19785  001B3A  0A07               	xorlw	7	; case 4
 19786  001B3C  B4D8               	btfsc	status,2,c
 19787  001B3E  D75A               	goto	l695
 19788  001B40  D7E3               	goto	l704
 19789  001B42                     l687:
 19790                           
 19791                           ;usb_device_msd.c: 1347: return MSDWriteState;
 19792                           
 19793                           ; BSR set to: 0
 19794  001B42  0100               	movlb	0	; () banked
 19795  001B44  51EA               	movf	_MSDWriteState& (0+255),w,b
 19796  001B46  0012               	return	
 19797  001B48                     __end_of_MSDWriteHandler:
 19798                           	opt stack 0
 19799                           tosu	equ	0xFFF
 19800                           tosh	equ	0xFFE
 19801                           tosl	equ	0xFFD
 19802                           pclath	equ	0xFFA
 19803                           tblptru	equ	0xFF8
 19804                           tblptrh	equ	0xFF7
 19805                           tblptrl	equ	0xFF6
 19806                           tablat	equ	0xFF5
 19807                           prodh	equ	0xFF4
 19808                           prodl	equ	0xFF3
 19809                           intcon	equ	0xFF2
 19810                           intcon2	equ	0xFF1
 19811                           intcon3	equ	0xFF0
 19812                           indf0	equ	0xFEF
 19813                           postinc0	equ	0xFEE
 19814                           fsr0h	equ	0xFEA
 19815                           fsr0l	equ	0xFE9
 19816                           wreg	equ	0xFE8
 19817                           indf1	equ	0xFE7
 19818                           postdec1	equ	0xFE5
 19819                           plusw1	equ	0xFE3
 19820                           fsr1h	equ	0xFE2
 19821                           fsr1l	equ	0xFE1
 19822                           indf2	equ	0xFDF
 19823                           postinc2	equ	0xFDE
 19824                           postdec2	equ	0xFDD
 19825                           plusw2	equ	0xFDB
 19826                           fsr2h	equ	0xFDA
 19827                           fsr2l	equ	0xFD9
 19828                           status	equ	0xFD8
 19829                           
 19830 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 19831 ;; Defined at:
 19832 ;;		line 34 in file "external_flash.c"
 19833 ;; Parameters:    Size  Location     Type
 19834 ;;  config          2    0[COMRAM] PTR void 
 19835 ;;		 -> NULL(0), 
 19836 ;; Auto vars:     Size  Location     Type
 19837 ;;		None
 19838 ;; Return value:  Size  Location     Type
 19839 ;;                  1    wreg      unsigned char 
 19840 ;; Registers used:
 19841 ;;		wreg
 19842 ;; Tracked objects:
 19843 ;;		On entry : 0/0
 19844 ;;		On exit  : 0/0
 19845 ;;		Unchanged: 0/0
 19846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19847 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19848 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19849 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19850 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19851 ;;Total ram usage:        2 bytes
 19852 ;; Hardware stack levels used:    1
 19853 ;; This function calls:
 19854 ;;		Nothing
 19855 ;; This function is called by:
 19856 ;;		_MSDWriteHandler
 19857 ;;		_MSDProcessCommandMediaPresent
 19858 ;; This function uses a non-reentrant model
 19859 ;;
 19860                           
 19861                           	psect	text88
 19862  009048                     __ptext88:
 19863                           	opt stack 0
 19864  009048                     _ExternalFlash_WriteProtectStateGet:
 19865                           	opt stack 25
 19866                           
 19867                           ;external_flash.c: 37: return 0;
 19868                           
 19869                           ; BSR set to: 0
 19870                           ;incstack = 0
 19871  009048  0E00               	movlw	0
 19872  00904A  0012               	return	
 19873  00904C                     __end_of_ExternalFlash_WriteProtectStateGet:
 19874                           	opt stack 0
 19875                           tosu	equ	0xFFF
 19876                           tosh	equ	0xFFE
 19877                           tosl	equ	0xFFD
 19878                           pclath	equ	0xFFA
 19879                           tblptru	equ	0xFF8
 19880                           tblptrh	equ	0xFF7
 19881                           tblptrl	equ	0xFF6
 19882                           tablat	equ	0xFF5
 19883                           prodh	equ	0xFF4
 19884                           prodl	equ	0xFF3
 19885                           intcon	equ	0xFF2
 19886                           intcon2	equ	0xFF1
 19887                           intcon3	equ	0xFF0
 19888                           indf0	equ	0xFEF
 19889                           postinc0	equ	0xFEE
 19890                           fsr0h	equ	0xFEA
 19891                           fsr0l	equ	0xFE9
 19892                           wreg	equ	0xFE8
 19893                           indf1	equ	0xFE7
 19894                           postdec1	equ	0xFE5
 19895                           plusw1	equ	0xFE3
 19896                           fsr1h	equ	0xFE2
 19897                           fsr1l	equ	0xFE1
 19898                           indf2	equ	0xFDF
 19899                           postinc2	equ	0xFDE
 19900                           postdec2	equ	0xFDD
 19901                           plusw2	equ	0xFDB
 19902                           fsr2h	equ	0xFDA
 19903                           fsr2l	equ	0xFD9
 19904                           status	equ	0xFD8
 19905                           
 19906 ;; *************** function _ExternalFlash_SectorWrite *****************
 19907 ;; Defined at:
 19908 ;;		line 56 in file "external_flash.c"
 19909 ;; Parameters:    Size  Location     Type
 19910 ;;  config          2   36[COMRAM] PTR void 
 19911 ;;		 -> NULL(0), 
 19912 ;;  sector_addr     4   38[COMRAM] unsigned long 
 19913 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 19914 ;;		 -> msd_buffer(512), 
 19915 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 19916 ;; Auto vars:     Size  Location     Type
 19917 ;;  page            2   45[COMRAM] unsigned int 
 19918 ;; Return value:  Size  Location     Type
 19919 ;;                  1    wreg      unsigned char 
 19920 ;; Registers used:
 19921 ;;		wreg, status,2, status,0, cstack
 19922 ;; Tracked objects:
 19923 ;;		On entry : 0/0
 19924 ;;		On exit  : 0/0
 19925 ;;		Unchanged: 0/0
 19926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19927 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19928 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19930 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19931 ;;Total ram usage:       11 bytes
 19932 ;; Hardware stack levels used:    1
 19933 ;; Hardware stack levels required when called:    5
 19934 ;; This function calls:
 19935 ;;		_flash_sector_write
 19936 ;; This function is called by:
 19937 ;;		_MSDWriteHandler
 19938 ;; This function uses a non-reentrant model
 19939 ;;
 19940                           
 19941                           	psect	text89
 19942  00886A                     __ptext89:
 19943                           	opt stack 0
 19944  00886A                     _ExternalFlash_SectorWrite:
 19945                           	opt stack 20
 19946                           
 19947                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 19948                           
 19949                           ;incstack = 0
 19950  00886A  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 19951  00886E  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 19952                           
 19953                           ;external_flash.c: 61: if(sector_addr >= 8192)
 19954  008872  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 19955  008874  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 19956  008876  E104               	bnz	u7970
 19957  008878  0E20               	movlw	32
 19958  00887A  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 19959  00887C  A0D8               	btfss	status,0,c
 19960  00887E  D002               	goto	l1900
 19961  008880                     u7970:
 19962                           
 19963                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 19964  008880  0E00               	movlw	0
 19965  008882  0012               	return	
 19966  008884                     l1900:
 19967                           
 19968                           ;external_flash.c: 64: };external_flash.c: 67: flash_sector_write(page, buffer);
 19969  008884  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_sector_write@page
 19970  008888  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_sector_write@page+1
 19971  00888C  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_sector_write@data
 19972  008890  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_sector_write@data+1
 19973  008894  ECEA  F03F         	call	_flash_sector_write	;wreg free
 19974                           
 19975                           ;external_flash.c: 69: return 1;
 19976  008898  0E01               	movlw	1
 19977  00889A  0012               	return	
 19978  00889C                     __end_of_ExternalFlash_SectorWrite:
 19979                           	opt stack 0
 19980                           tosu	equ	0xFFF
 19981                           tosh	equ	0xFFE
 19982                           tosl	equ	0xFFD
 19983                           pclath	equ	0xFFA
 19984                           tblptru	equ	0xFF8
 19985                           tblptrh	equ	0xFF7
 19986                           tblptrl	equ	0xFF6
 19987                           tablat	equ	0xFF5
 19988                           prodh	equ	0xFF4
 19989                           prodl	equ	0xFF3
 19990                           intcon	equ	0xFF2
 19991                           intcon2	equ	0xFF1
 19992                           intcon3	equ	0xFF0
 19993                           indf0	equ	0xFEF
 19994                           postinc0	equ	0xFEE
 19995                           fsr0h	equ	0xFEA
 19996                           fsr0l	equ	0xFE9
 19997                           wreg	equ	0xFE8
 19998                           indf1	equ	0xFE7
 19999                           postdec1	equ	0xFE5
 20000                           plusw1	equ	0xFE3
 20001                           fsr1h	equ	0xFE2
 20002                           fsr1l	equ	0xFE1
 20003                           indf2	equ	0xFDF
 20004                           postinc2	equ	0xFDE
 20005                           postdec2	equ	0xFDD
 20006                           plusw2	equ	0xFDB
 20007                           fsr2h	equ	0xFDA
 20008                           fsr2l	equ	0xFD9
 20009                           status	equ	0xFD8
 20010                           
 20011 ;; *************** function _MSDReadHandler *****************
 20012 ;; Defined at:
 20013 ;;		line 1038 in file "usb_device_msd.c"
 20014 ;; Parameters:    Size  Location     Type
 20015 ;;		None
 20016 ;; Auto vars:     Size  Location     Type
 20017 ;;		None
 20018 ;; Return value:  Size  Location     Type
 20019 ;;                  1    wreg      unsigned char 
 20020 ;; Registers used:
 20021 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20022 ;; Tracked objects:
 20023 ;;		On entry : 0/0
 20024 ;;		On exit  : 0/0
 20025 ;;		Unchanged: 0/0
 20026 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20027 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20028 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20029 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20030 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20031 ;;Total ram usage:        4 bytes
 20032 ;; Hardware stack levels used:    1
 20033 ;; Hardware stack levels required when called:    6
 20034 ;; This function calls:
 20035 ;;		_ExternalFlash_SectorRead
 20036 ;;		_MSDCheckForErrorCases
 20037 ;;		_USBStallEndpoint
 20038 ;;		_USBTransferOnePacket
 20039 ;; This function is called by:
 20040 ;;		_MSDProcessCommandMediaPresent
 20041 ;; This function uses a non-reentrant model
 20042 ;;
 20043                           
 20044                           	psect	text90
 20045  0030B4                     __ptext90:
 20046                           	opt stack 0
 20047  0030B4                     _MSDReadHandler:
 20048                           	opt stack 20
 20049                           
 20050                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 20051                           
 20052                           ;incstack = 0
 20053  0030B4  D0D7               	goto	l665
 20054  0030B6                     l666:
 20055                           
 20056                           ; BSR set to: 0
 20057                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 20058  0030B6  C111  F161         	movff	_gblCBW+17,_LBA+3
 20059                           
 20060                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 20061  0030BA  C112  F160         	movff	_gblCBW+18,_LBA+2
 20062                           
 20063                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 20064  0030BE  C113  F15F         	movff	_gblCBW+19,_LBA+1
 20065                           
 20066                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 20067  0030C2  C114  F15E         	movff	_gblCBW+20,_LBA
 20068                           
 20069                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 20070  0030C6  C116  F0DC         	movff	_gblCBW+22,_TransferLength+1
 20071                           
 20072                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 20073  0030CA  C117  F0DB         	movff	_gblCBW+23,_TransferLength
 20074                           
 20075                           ; BSR set to: 0
 20076                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 20077  0030CE  51DB               	movf	_TransferLength& (0+255),w,b
 20078  0030D0  6E36               	movwf	??_MSDReadHandler& (0+255),c
 20079  0030D2  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 20080  0030D4  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 20081  0030D6  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 20082  0030D8  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 20083  0030DA  0E09               	movlw	9
 20084  0030DC                     u8405:
 20085  0030DC  90D8               	bcf	status,0,c
 20086  0030DE  3636               	rlcf	??_MSDReadHandler,f,c
 20087  0030E0  3637               	rlcf	??_MSDReadHandler+1,f,c
 20088  0030E2  3638               	rlcf	??_MSDReadHandler+2,f,c
 20089  0030E4  3639               	rlcf	??_MSDReadHandler+3,f,c
 20090  0030E6  2EE8               	decfsz	wreg,f,c
 20091  0030E8  D7F9               	goto	u8405
 20092  0030EA  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 20093  0030EE  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 20094  0030F2  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 20095  0030F6  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 20096  0030FA  EC2D  F02A         	call	_MSDCheckForErrorCases	;wreg free
 20097  0030FE  0900               	iorlw	0
 20098  003100  A4D8               	btfss	status,2,c
 20099  003102  D0C2               	goto	l668
 20100                           
 20101                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 20102                           
 20103                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 20104  003104  0E01               	movlw	1
 20105  003106  0100               	movlb	0	; () banked
 20106  003108  6FEB               	movwf	_MSDReadState& (0+255),b
 20107  00310A                     
 20108                           ; BSR set to: 0
 20109                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 20110                           
 20111                           ; BSR set to: 0
 20112  00310A  51DB               	movf	_TransferLength& (0+255),w,b
 20113  00310C  11DC               	iorwf	(_TransferLength+1)& (0+255),w,b
 20114  00310E  A4D8               	btfss	status,2,c
 20115  003110  D002               	goto	l670
 20116                           
 20117                           ; BSR set to: 0
 20118                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 20119  003112  0E00               	movlw	0
 20120  003114  D046               	goto	L23
 20121  003116                     l670:
 20122                           
 20123                           ; BSR set to: 0
 20124                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 20125                           
 20126                           ; BSR set to: 0
 20127  003116  07DB               	decf	_TransferLength& (0+255),f,b
 20128  003118  A0D8               	btfss	status,0,c
 20129  00311A  07DC               	decf	(_TransferLength+1)& (0+255),f,b
 20130                           
 20131                           ; BSR set to: 0
 20132                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 20133  00311C  0E02               	movlw	2
 20134  00311E  6FEB               	movwf	_MSDReadState& (0+255),b
 20135  003120                     
 20136                           ; BSR set to: 0
 20137                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 20138                           
 20139                           ; BSR set to: 0
 20140  003120  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20141  003122  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20142  003124  B4D8               	btfsc	status,2,c
 20143  003126  D006               	goto	l672
 20144                           
 20145                           ; BSR set to: 0
 20146  003128  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20147  00312C  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20148  003130  BEDF               	btfsc	indf2,7,c
 20149  003132  D0AA               	goto	l668
 20150  003134                     l672:
 20151                           
 20152                           ; BSR set to: 0
 20153                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 20154                           
 20155                           ; BSR set to: 0
 20156  003134  C1C1  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 20157  003138  C1C2  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 20158  00313C  C15E  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 20159  003140  C15F  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 20160  003144  C160  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 20161  003148  C161  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 20162  00314C  0E00               	movlw	0
 20163  00314E  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 20164  003150  0E06               	movlw	6
 20165  003152  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 20166  003154  D801               	call	u8458
 20167  003156  D00A               	goto	u8459
 20168  003158                     u8458:
 20169  003158  0005               	push	
 20170  00315A  6EFA               	movwf	pclath,c
 20171  00315C  0101               	movlb	1	; () banked
 20172  00315E  51BB               	movf	(_LUN+8)& (0+255),w,b
 20173  003160  6EFD               	movwf	tosl,c
 20174  003162  51BC               	movf	(_LUN+9)& (0+255),w,b
 20175  003164  6EFE               	movwf	tosh,c
 20176  003166  6AFF               	clrf	tosu,c
 20177  003168  50FA               	movf	pclath,w,c
 20178  00316A  0012               	return		;indir
 20179  00316C                     u8459:
 20180  00316C  06E8               	decf	wreg,f,c
 20181  00316E  B4D8               	btfsc	status,2,c
 20182  003170  D01A               	goto	l675
 20183                           
 20184                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 20185  003172  0E64               	movlw	100
 20186  003174  0100               	movlb	0	; () banked
 20187  003176  61E9               	cpfslt	_MSDRetryAttempt& (0+255),b
 20188  003178  D002               	goto	l674
 20189                           
 20190                           ; BSR set to: 0
 20191                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 20192  00317A  2BE9               	incf	_MSDRetryAttempt& (0+255),f,b
 20193                           
 20194                           ;usb_device_msd.c: 1088: break;
 20195  00317C  D085               	goto	l668
 20196  00317E                     l674:
 20197                           
 20198                           ; BSR set to: 0
 20199                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 20200                           
 20201                           ; BSR set to: 0
 20202  00317E  0E02               	movlw	2
 20203  003180  010D               	movlb	13	; () banked
 20204  003182  6F8C               	movwf	140,b	;volatile
 20205                           
 20206                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 20207  003184  0101               	movlb	1	; () banked
 20208  003186  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20209  003188  0BF0               	andlw	-16
 20210  00318A  0903               	iorlw	3
 20211  00318C  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20212                           
 20213                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 20214  00318E  0E00               	movlw	0
 20215  003190  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20216                           
 20217                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 20218  003192  0E00               	movlw	0
 20219  003194  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20220                           
 20221                           ; BSR set to: 1
 20222                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 20223  003196  0E01               	movlw	1
 20224  003198  6E01               	movwf	USBStallEndpoint@dir,c
 20225  00319A  0E02               	movlw	2
 20226  00319C  ECE7  F023         	call	_USBStallEndpoint
 20227  0031A0  D05E               	goto	l11651
 20228  0031A2                     L23:
 20229  0031A2  6FEB               	movwf	_MSDReadState& (0+255),b
 20230                           
 20231                           ;usb_device_msd.c: 1109: break;
 20232  0031A4  D071               	goto	l668
 20233  0031A6                     l675:
 20234                           
 20235                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 20236                           
 20237                           ; BSR set to: 0
 20238                           
 20239                           ; BSR set to: 0
 20240  0031A6  0E01               	movlw	1
 20241  0031A8  0101               	movlb	1	; () banked
 20242  0031AA  275E               	addwf	_LBA& (0+255),f,b
 20243  0031AC  0E00               	movlw	0
 20244  0031AE  235F               	addwfc	(_LBA+1)& (0+255),f,b
 20245  0031B0  2360               	addwfc	(_LBA+2)& (0+255),f,b
 20246  0031B2  2361               	addwfc	(_LBA+3)& (0+255),f,b
 20247                           
 20248                           ; BSR set to: 1
 20249                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 20250  0031B4  0E00               	movlw	0
 20251  0031B6  010D               	movlb	13	; () banked
 20252  0031B8  6F88               	movwf	136,b	;volatile
 20253  0031BA  0E02               	movlw	2
 20254  0031BC  6F89               	movwf	137,b	;volatile
 20255  0031BE  0E00               	movlw	0
 20256  0031C0  6F8A               	movwf	138,b	;volatile
 20257  0031C2  0E00               	movlw	0
 20258  0031C4  6F8B               	movwf	139,b	;volatile
 20259                           
 20260                           ; BSR set to: 13
 20261                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 20262  0031C6  0E00               	movlw	0
 20263  0031C8  0101               	movlb	1	; () banked
 20264  0031CA  6F86               	movwf	_ptrNextData& (0+255),b
 20265  0031CC  0E06               	movlw	6
 20266  0031CE  6F87               	movwf	(_ptrNextData+1)& (0+255),b
 20267                           
 20268                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 20269  0031D0  0E03               	movlw	3
 20270  0031D2  0100               	movlb	0	; () banked
 20271  0031D4  6FEB               	movwf	_MSDReadState& (0+255),b
 20272  0031D6                     
 20273                           ; BSR set to: 0
 20274                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 20275                           
 20276                           ; BSR set to: 0
 20277  0031D6  010D               	movlb	13	; () banked
 20278  0031D8  5188               	movf	136,w,b	;volatile
 20279  0031DA  1189               	iorwf	137,w,b	;volatile
 20280  0031DC  118A               	iorwf	138,w,b	;volatile
 20281  0031DE  118B               	iorwf	139,w,b	;volatile
 20282  0031E0  A4D8               	btfss	status,2,c
 20283  0031E2  D002               	goto	l677
 20284                           
 20285                           ; BSR set to: 13
 20286                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 20287  0031E4  0E01               	movlw	1
 20288  0031E6  D03C               	goto	L25
 20289  0031E8                     l677:
 20290                           
 20291                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 20292                           
 20293                           ; BSR set to: 0
 20294  0031E8  0E04               	movlw	4
 20295  0031EA  0100               	movlb	0	; () banked
 20296  0031EC  6FEB               	movwf	_MSDReadState& (0+255),b
 20297  0031EE                     
 20298                           ; BSR set to: 0
 20299                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 20300                           
 20301                           ; BSR set to: 0
 20302  0031EE  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20303  0031F0  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20304  0031F2  B4D8               	btfsc	status,2,c
 20305  0031F4  D006               	goto	l679
 20306                           
 20307                           ; BSR set to: 0
 20308  0031F6  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20309  0031FA  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20310  0031FE  BEDF               	btfsc	indf2,7,c
 20311  003200  D043               	goto	l668
 20312  003202                     l679:
 20313                           
 20314                           ; BSR set to: 0
 20315                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 20316                           
 20317                           ; BSR set to: 0
 20318  003202  0E01               	movlw	1
 20319  003204  6E01               	movwf	USBTransferOnePacket@dir,c
 20320  003206  C186  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 20321  00320A  C187  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 20322  00320E  0E40               	movlw	64
 20323  003210  6E04               	movwf	USBTransferOnePacket@len,c
 20324  003212  0E02               	movlw	2
 20325  003214  ECF2  F025         	call	_USBTransferOnePacket
 20326  003218  C001  F0DD         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 20327  00321C  C002  F0DE         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 20328                           
 20329                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 20330  003220  0E03               	movlw	3
 20331  003222  0100               	movlb	0	; () banked
 20332  003224  6FEB               	movwf	_MSDReadState& (0+255),b
 20333                           
 20334                           ; BSR set to: 0
 20335                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 20336  003226  0E40               	movlw	64
 20337  003228  0101               	movlb	1	; () banked
 20338  00322A  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 20339  00322C  0E00               	movlw	0
 20340  00322E  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 20341  003230  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 20342  003232  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 20343                           
 20344                           ; BSR set to: 1
 20345                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 20346  003234  0E40               	movlw	64
 20347  003236  010D               	movlb	13	; () banked
 20348  003238  5F88               	subwf	136,f,b	;volatile
 20349  00323A  0E00               	movlw	0
 20350  00323C  5B89               	subwfb	137,f,b	;volatile
 20351  00323E  5B8A               	subwfb	138,f,b	;volatile
 20352  003240  5B8B               	subwfb	139,f,b	;volatile
 20353                           
 20354                           ; BSR set to: 13
 20355                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 20356  003242  0E40               	movlw	64
 20357  003244  0101               	movlb	1	; () banked
 20358  003246  2786               	addwf	_ptrNextData& (0+255),f,b
 20359  003248  0E00               	movlw	0
 20360  00324A  2387               	addwfc	(_ptrNextData+1)& (0+255),f,b
 20361                           
 20362                           ;usb_device_msd.c: 1149: break;
 20363  00324C  D01D               	goto	l668
 20364  00324E                     
 20365                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 20366                           
 20367                           ; BSR set to: 1
 20368  00324E  0E02               	movlw	2
 20369  003250  010D               	movlb	13	; () banked
 20370  003252  6F8C               	movwf	140,b	;volatile
 20371                           
 20372                           ; BSR set to: 13
 20373                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 20374  003254  0E01               	movlw	1
 20375  003256  6E01               	movwf	USBStallEndpoint@dir,c
 20376  003258  0E02               	movlw	2
 20377  00325A  ECE7  F023         	call	_USBStallEndpoint
 20378  00325E                     l11651:
 20379                           
 20380                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 20381  00325E  0E00               	movlw	0
 20382  003260                     L25:
 20383  003260  0100               	movlb	0	; () banked
 20384  003262  D79F               	goto	L23
 20385  003264                     l665:
 20386                           
 20387                           ; BSR set to: 0
 20388  003264  0100               	movlb	0	; () banked
 20389  003266  51EB               	movf	_MSDReadState& (0+255),w,b
 20390                           
 20391                           ; Switch size 1, requested type "space"
 20392                           ; Number of cases is 5, Range of values is 0 to 4
 20393                           ; switch strategies available:
 20394                           ; Name         Instructions Cycles
 20395                           ; simple_byte           16     9 (average)
 20396                           ;	Chosen strategy is simple_byte
 20397  003268  0A00               	xorlw	0	; case 0
 20398  00326A  B4D8               	btfsc	status,2,c
 20399  00326C  D724               	goto	l666
 20400  00326E  0A01               	xorlw	1	; case 1
 20401  003270  B4D8               	btfsc	status,2,c
 20402  003272  D74B               	goto	l669
 20403  003274  0A03               	xorlw	3	; case 2
 20404  003276  B4D8               	btfsc	status,2,c
 20405  003278  D753               	goto	l671
 20406  00327A  0A01               	xorlw	1	; case 3
 20407  00327C  B4D8               	btfsc	status,2,c
 20408  00327E  D7AB               	goto	l676
 20409  003280  0A07               	xorlw	7	; case 4
 20410  003282  B4D8               	btfsc	status,2,c
 20411  003284  D7B4               	goto	l678
 20412  003286  D7E3               	goto	l680
 20413  003288                     l668:
 20414                           
 20415                           ;usb_device_msd.c: 1161: return MSDReadState;
 20416                           
 20417                           ; BSR set to: 0
 20418  003288  0100               	movlb	0	; () banked
 20419  00328A  51EB               	movf	_MSDReadState& (0+255),w,b
 20420  00328C  0012               	return	
 20421  00328E                     __end_of_MSDReadHandler:
 20422                           	opt stack 0
 20423                           tosu	equ	0xFFF
 20424                           tosh	equ	0xFFE
 20425                           tosl	equ	0xFFD
 20426                           pclath	equ	0xFFA
 20427                           tblptru	equ	0xFF8
 20428                           tblptrh	equ	0xFF7
 20429                           tblptrl	equ	0xFF6
 20430                           tablat	equ	0xFF5
 20431                           prodh	equ	0xFF4
 20432                           prodl	equ	0xFF3
 20433                           intcon	equ	0xFF2
 20434                           intcon2	equ	0xFF1
 20435                           intcon3	equ	0xFF0
 20436                           indf0	equ	0xFEF
 20437                           postinc0	equ	0xFEE
 20438                           fsr0h	equ	0xFEA
 20439                           fsr0l	equ	0xFE9
 20440                           wreg	equ	0xFE8
 20441                           indf1	equ	0xFE7
 20442                           postdec1	equ	0xFE5
 20443                           plusw1	equ	0xFE3
 20444                           fsr1h	equ	0xFE2
 20445                           fsr1l	equ	0xFE1
 20446                           indf2	equ	0xFDF
 20447                           postinc2	equ	0xFDE
 20448                           postdec2	equ	0xFDD
 20449                           plusw2	equ	0xFDB
 20450                           fsr2h	equ	0xFDA
 20451                           fsr2l	equ	0xFD9
 20452                           status	equ	0xFD8
 20453                           
 20454 ;; *************** function _MSDCheckForErrorCases *****************
 20455 ;; Defined at:
 20456 ;;		line 1434 in file "usb_device_msd.c"
 20457 ;; Parameters:    Size  Location     Type
 20458 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 20459 ;; Auto vars:     Size  Location     Type
 20460 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 20461 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 20462 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 20463 ;; Return value:  Size  Location     Type
 20464 ;;                  1    wreg      unsigned char 
 20465 ;; Registers used:
 20466 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20467 ;; Tracked objects:
 20468 ;;		On entry : 0/0
 20469 ;;		On exit  : 0/0
 20470 ;;		Unchanged: 0/0
 20471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20472 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20473 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20474 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20475 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20476 ;;Total ram usage:        7 bytes
 20477 ;; Hardware stack levels used:    1
 20478 ;; Hardware stack levels required when called:    2
 20479 ;; This function calls:
 20480 ;;		_MSDErrorHandler
 20481 ;; This function is called by:
 20482 ;;		_MSDProcessCommandMediaPresent
 20483 ;;		_MSDReadHandler
 20484 ;;		_MSDWriteHandler
 20485 ;; This function uses a non-reentrant model
 20486 ;;
 20487                           
 20488                           	psect	text91
 20489  00545A                     __ptext91:
 20490                           	opt stack 0
 20491  00545A                     _MSDCheckForErrorCases:
 20492                           	opt stack 23
 20493                           
 20494                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 20495                           
 20496                           ; BSR set to: 0
 20497                           ;incstack = 0
 20498  00545A  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20499  00545C  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20500  00545E  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20501  005460  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20502  005462  A4D8               	btfss	status,2,c
 20503  005464  D002               	goto	l710
 20504                           
 20505                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 20506  005466  0E01               	movlw	1
 20507  005468  D001               	goto	L26
 20508  00546A                     l710:
 20509                           
 20510                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 20511  00546A  0E00               	movlw	0
 20512  00546C                     L26:
 20513  00546C  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 20514                           
 20515                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 20516  00546E  0100               	movlb	0	; () banked
 20517  005470  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20518  005472  A4D8               	btfss	status,2,c
 20519  005474  D005               	goto	l712
 20520                           
 20521                           ; BSR set to: 0
 20522  005476  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20523  005478  A4D8               	btfss	status,2,c
 20524  00547A  D002               	goto	l712
 20525                           
 20526                           ; BSR set to: 0
 20527                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 20528  00547C  0E00               	movlw	0
 20529                           
 20530                           ; BSR set to: 0
 20531  00547E  0012               	return	
 20532  005480                     l712:
 20533                           
 20534                           ; BSR set to: 0
 20535                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 20536                           
 20537                           ; BSR set to: 0
 20538  005480  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 20539  005482  0101               	movlb	1	; () banked
 20540  005484  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 20541  005486  E11A               	bnz	l11107
 20542  005488  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20543  00548A  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 20544  00548C  E117               	bnz	l11107
 20545  00548E  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20546  005490  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 20547  005492  E114               	bnz	l11107
 20548  005494  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20549  005496  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 20550  005498  A4D8               	btfss	status,2,c
 20551  00549A  D010               	goto	l718
 20552                           
 20553                           ; BSR set to: 1
 20554                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 20555  00549C  0100               	movlb	0	; () banked
 20556  00549E  05ED               	decf	_MSD_State& (0+255),w,b
 20557  0054A0  A4D8               	btfss	status,2,c
 20558  0054A2  D006               	goto	l715
 20559                           
 20560                           ; BSR set to: 0
 20561                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 20562  0054A4  0E2A               	movlw	42
 20563  0054A6  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20564  0054A8  B4D8               	btfsc	status,2,c
 20565  0054AA  D008               	goto	l718
 20566                           
 20567                           ; BSR set to: 0
 20568                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 20569  0054AC  0E00               	movlw	0
 20570                           
 20571                           ; BSR set to: 0
 20572  0054AE  0012               	return	
 20573  0054B0                     l715:
 20574                           
 20575                           ; BSR set to: 0
 20576                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 20577                           
 20578                           ; BSR set to: 0
 20579  0054B0  0E2A               	movlw	42
 20580  0054B2  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20581  0054B4  A4D8               	btfss	status,2,c
 20582  0054B6  D002               	goto	l718
 20583                           
 20584                           ; BSR set to: 0
 20585                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 20586  0054B8  0E00               	movlw	0
 20587                           
 20588                           ; BSR set to: 0
 20589  0054BA  0012               	return	
 20590  0054BC                     l718:
 20591  0054BC                     l11107:
 20592                           
 20593                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 20594  0054BC  0101               	movlb	1	; () banked
 20595  0054BE  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20596  0054C0  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 20597  0054C2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 20598  0054C4  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 20599  0054C6  510A               	movf	(_gblCBW+10)& (0+255),w,b
 20600  0054C8  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 20601  0054CA  510B               	movf	(_gblCBW+11)& (0+255),w,b
 20602  0054CC  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 20603  0054CE  B0D8               	btfsc	status,0,c
 20604  0054D0  D002               	goto	l719
 20605                           
 20606                           ; BSR set to: 1
 20607                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 20608  0054D2  0E01               	movlw	1
 20609  0054D4  D001               	goto	L27
 20610  0054D6                     l719:
 20611                           
 20612                           ; BSR set to: 1
 20613                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 20614                           
 20615                           ; BSR set to: 1
 20616  0054D6  0E00               	movlw	0
 20617  0054D8                     L27:
 20618  0054D8  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 20619                           
 20620                           ; BSR set to: 1
 20621                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 20622                           
 20623                           ; BSR set to: 1
 20624  0054DA  0E02               	movlw	2
 20625  0054DC  0100               	movlb	0	; () banked
 20626  0054DE  19ED               	xorwf	_MSD_State& (0+255),w,b
 20627  0054E0  A4D8               	btfss	status,2,c
 20628  0054E2  D014               	goto	l721
 20629                           
 20630                           ; BSR set to: 0
 20631                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 20632  0054E4  0E2A               	movlw	42
 20633  0054E6  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20634  0054E8  B4D8               	btfsc	status,2,c
 20635  0054EA  D005               	goto	l722
 20636                           
 20637                           ; BSR set to: 0
 20638  0054EC  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 20639  0054EE  A4D8               	btfss	status,2,c
 20640  0054F0  D002               	goto	l722
 20641  0054F2                     u7790:
 20642                           
 20643                           ; BSR set to: 0
 20644                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 20645  0054F2  0E05               	movlw	5
 20646  0054F4  D01D               	goto	L30
 20647  0054F6                     l722:
 20648                           
 20649                           ; BSR set to: 0
 20650                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 20651                           
 20652                           ; BSR set to: 0
 20653  0054F6  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20654  0054F8  B4D8               	btfsc	status,2,c
 20655  0054FA  D00F               	goto	u7840
 20656                           
 20657                           ; BSR set to: 0
 20658                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 20659                           
 20660                           ; BSR set to: 0
 20661                           
 20662                           ; BSR set to: 0
 20663                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 20664  0054FC  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20665  0054FE  B4D8               	btfsc	status,2,c
 20666  005500  D003               	goto	u7820
 20667                           
 20668                           ; BSR set to: 0
 20669                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 20670                           
 20671                           ; BSR set to: 0
 20672                           
 20673                           ; BSR set to: 0
 20674                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 20675  005502  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20676  005504  A4D8               	btfss	status,2,c
 20677  005506  D7F5               	goto	u7790
 20678  005508                     u7820:
 20679                           
 20680                           ; BSR set to: 0
 20681                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 20682  005508  0E04               	movlw	4
 20683  00550A  D012               	goto	L30
 20684  00550C                     l721:
 20685                           
 20686                           ; BSR set to: 0
 20687                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 20688                           
 20689                           ; BSR set to: 0
 20690  00550C  0E2A               	movlw	42
 20691  00550E  19EC               	xorwf	_MSDCommandState& (0+255),w,b
 20692  005510  B4D8               	btfsc	status,2,c
 20693  005512  D00D               	goto	l737
 20694                           
 20695                           ; BSR set to: 0
 20696                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 20697                           
 20698                           ; BSR set to: 0
 20699                           
 20700                           ; BSR set to: 0
 20701                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 20702  005514  05E7               	decf	_MSDHostNoData& (0+255),w,b
 20703  005516  A4D8               	btfss	status,2,c
 20704  005518  D002               	goto	l733
 20705  00551A                     u7840:
 20706                           
 20707                           ; BSR set to: 0
 20708                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 20709  00551A  0E01               	movlw	1
 20710  00551C  D009               	goto	L30
 20711  00551E                     l733:
 20712                           
 20713                           ; BSR set to: 0
 20714                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 20715                           
 20716                           ; BSR set to: 0
 20717  00551E  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 20718  005520  B4D8               	btfsc	status,2,c
 20719  005522  D003               	goto	u7860
 20720                           
 20721                           ; BSR set to: 0
 20722                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 20723                           
 20724                           ; BSR set to: 0
 20725                           
 20726                           ; BSR set to: 0
 20727                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 20728  005524  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 20729  005526  A4D8               	btfss	status,2,c
 20730  005528  D002               	goto	l737
 20731  00552A                     u7860:
 20732                           
 20733                           ; BSR set to: 0
 20734                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 20735  00552A  0E02               	movlw	2
 20736  00552C  D001               	goto	L30
 20737  00552E                     l737:
 20738                           
 20739                           ; BSR set to: 0
 20740                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 20741                           
 20742                           ; BSR set to: 0
 20743  00552E  0E03               	movlw	3
 20744  005530                     L30:
 20745  005530  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 20746                           
 20747                           ; BSR set to: 0
 20748                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 20749                           
 20750                           ; BSR set to: 0
 20751                           
 20752                           ; BSR set to: 0
 20753                           
 20754                           ; BSR set to: 0
 20755                           
 20756                           ; BSR set to: 0
 20757                           
 20758                           ; BSR set to: 0
 20759  005532  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20760  005534  ECEE  F024         	call	_MSDErrorHandler
 20761                           
 20762                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 20763  005538  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 20764  00553A  0012               	return	
 20765  00553C                     __end_of_MSDCheckForErrorCases:
 20766                           	opt stack 0
 20767                           tosu	equ	0xFFF
 20768                           tosh	equ	0xFFE
 20769                           tosl	equ	0xFFD
 20770                           pclath	equ	0xFFA
 20771                           tblptru	equ	0xFF8
 20772                           tblptrh	equ	0xFF7
 20773                           tblptrl	equ	0xFF6
 20774                           tablat	equ	0xFF5
 20775                           prodh	equ	0xFF4
 20776                           prodl	equ	0xFF3
 20777                           intcon	equ	0xFF2
 20778                           intcon2	equ	0xFF1
 20779                           intcon3	equ	0xFF0
 20780                           indf0	equ	0xFEF
 20781                           postinc0	equ	0xFEE
 20782                           fsr0h	equ	0xFEA
 20783                           fsr0l	equ	0xFE9
 20784                           wreg	equ	0xFE8
 20785                           indf1	equ	0xFE7
 20786                           postdec1	equ	0xFE5
 20787                           plusw1	equ	0xFE3
 20788                           fsr1h	equ	0xFE2
 20789                           fsr1l	equ	0xFE1
 20790                           indf2	equ	0xFDF
 20791                           postinc2	equ	0xFDE
 20792                           postdec2	equ	0xFDD
 20793                           plusw2	equ	0xFDB
 20794                           fsr2h	equ	0xFDA
 20795                           fsr2l	equ	0xFD9
 20796                           status	equ	0xFD8
 20797                           
 20798 ;; *************** function _MSDErrorHandler *****************
 20799 ;; Defined at:
 20800 ;;		line 1577 in file "usb_device_msd.c"
 20801 ;; Parameters:    Size  Location     Type
 20802 ;;  ErrorCase       1    wreg     unsigned char 
 20803 ;; Auto vars:     Size  Location     Type
 20804 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 20805 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 20806 ;; Return value:  Size  Location     Type
 20807 ;;                  1    wreg      void 
 20808 ;; Registers used:
 20809 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20810 ;; Tracked objects:
 20811 ;;		On entry : 0/0
 20812 ;;		On exit  : 0/0
 20813 ;;		Unchanged: 0/0
 20814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20815 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20816 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20817 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20818 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20819 ;;Total ram usage:        2 bytes
 20820 ;; Hardware stack levels used:    1
 20821 ;; Hardware stack levels required when called:    1
 20822 ;; This function calls:
 20823 ;;		_ResetSenseData
 20824 ;;		_USBStallEndpoint
 20825 ;; This function is called by:
 20826 ;;		_MSDProcessCommandMediaAbsent
 20827 ;;		_MSDProcessCommandMediaPresent
 20828 ;;		_MSDCheckForErrorCases
 20829 ;; This function uses a non-reentrant model
 20830 ;;
 20831                           
 20832                           	psect	text92
 20833  0049DC                     __ptext92:
 20834                           	opt stack 0
 20835  0049DC                     _MSDErrorHandler:
 20836                           	opt stack 23
 20837                           
 20838                           ;incstack = 0
 20839                           ;MSDErrorHandler@ErrorCase stored from wreg
 20840  0049DC  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 20841                           
 20842                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 20843  0049DE  0100               	movlb	0	; () banked
 20844  0049E0  51DD               	movf	_USBMSDInHandle& (0+255),w,b
 20845  0049E2  11DE               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 20846  0049E4  B4D8               	btfsc	status,2,c
 20847  0049E6  D006               	goto	u7300
 20848                           
 20849                           ; BSR set to: 0
 20850  0049E8  C0DD  FFD9         	movff	_USBMSDInHandle,fsr2l
 20851  0049EC  C0DE  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 20852  0049F0  BEDF               	btfsc	indf2,7,c
 20853  0049F2  0012               	return	
 20854  0049F4                     u7300:
 20855                           
 20856                           ; BSR set to: 0
 20857                           
 20858                           ; BSR set to: 0
 20859  0049F4  51DF               	movf	_USBMSDOutHandle& (0+255),w,b
 20860  0049F6  11E0               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 20861  0049F8  B4D8               	btfsc	status,2,c
 20862  0049FA  D006               	goto	l741
 20863                           
 20864                           ; BSR set to: 0
 20865  0049FC  C0DF  FFD9         	movff	_USBMSDOutHandle,fsr2l
 20866  004A00  C0E0  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 20867  004A04  BEDF               	btfsc	indf2,7,c
 20868  004A06  0012               	return	
 20869  004A08                     l741:
 20870                           
 20871                           ; BSR set to: 0
 20872                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 20873  004A08  C0ED  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 20874                           
 20875                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 20876  004A0C  69EC               	setf	_MSDCommandState& (0+255),b
 20877                           
 20878                           ; BSR set to: 0
 20879                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 20880  004A0E  0E00               	movlw	0
 20881  004A10  6FEB               	movwf	_MSDReadState& (0+255),b
 20882                           
 20883                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 20884  004A12  0E00               	movlw	0
 20885  004A14  6FEA               	movwf	_MSDWriteState& (0+255),b
 20886                           
 20887                           ; BSR set to: 0
 20888                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 20889  004A16  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 20890  004A1A  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 20891  004A1E  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 20892  004A22  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 20893                           
 20894                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 20895  004A26  0E01               	movlw	1
 20896  004A28  010D               	movlb	13	; () banked
 20897  004A2A  6F8C               	movwf	140,b	;volatile
 20898                           
 20899                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 20900  004A2C  0E03               	movlw	3
 20901  004A2E  0100               	movlb	0	; () banked
 20902  004A30  6FED               	movwf	_MSD_State& (0+255),b
 20903                           
 20904                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 20905  004A32  D043               	goto	l747
 20906  004A34                     
 20907                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 20908                           
 20909                           ; BSR set to: 0
 20910  004A34  0E02               	movlw	2
 20911  004A36  010D               	movlb	13	; () banked
 20912  004A38  6F8C               	movwf	140,b	;volatile
 20913                           
 20914                           ;usb_device_msd.c: 1607: break;
 20915  004A3A  0012               	return	
 20916  004A3C                     
 20917                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 20918                           
 20919                           ; BSR set to: 13
 20920  004A3C  0E01               	movlw	1
 20921  004A3E  6E01               	movwf	USBStallEndpoint@dir,c
 20922  004A40  0E02               	movlw	2
 20923  004A42  ECE7  F023         	call	_USBStallEndpoint
 20924                           
 20925                           ;usb_device_msd.c: 1611: break;
 20926  004A46  0012               	return	
 20927  004A48                     
 20928                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 20929  004A48  0E02               	movlw	2
 20930  004A4A  010D               	movlb	13	; () banked
 20931  004A4C  6F8C               	movwf	140,b	;volatile
 20932                           
 20933                           ; BSR set to: 13
 20934                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 20935  004A4E  0E01               	movlw	1
 20936  004A50  6E01               	movwf	USBStallEndpoint@dir,c
 20937  004A52  0E02               	movlw	2
 20938  004A54  ECE7  F023         	call	_USBStallEndpoint
 20939                           
 20940                           ;usb_device_msd.c: 1616: break;
 20941  004A58  0012               	return	
 20942  004A5A                     
 20943                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 20944  004A5A  0E00               	movlw	0
 20945  004A5C  6E01               	movwf	USBStallEndpoint@dir,c
 20946  004A5E  0E02               	movlw	2
 20947  004A60  ECE7  F023         	call	_USBStallEndpoint
 20948                           
 20949                           ;usb_device_msd.c: 1620: break;
 20950  004A64  0012               	return	
 20951  004A66                     
 20952                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 20953  004A66  0E02               	movlw	2
 20954  004A68  010D               	movlb	13	; () banked
 20955  004A6A  6F8C               	movwf	140,b	;volatile
 20956                           
 20957                           ; BSR set to: 13
 20958                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 20959  004A6C  0E00               	movlw	0
 20960  004A6E  6E01               	movwf	USBStallEndpoint@dir,c
 20961  004A70  0E02               	movlw	2
 20962  004A72  ECE7  F023         	call	_USBStallEndpoint
 20963                           
 20964                           ;usb_device_msd.c: 1625: break;
 20965  004A76  0012               	return	
 20966  004A78                     
 20967                           ;usb_device_msd.c: 1628: ResetSenseData();
 20968  004A78  EC72  F03D         	call	_ResetSenseData	;wreg free
 20969                           
 20970                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 20971  004A7C  0101               	movlb	1	; () banked
 20972  004A7E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 20973  004A80  0BF0               	andlw	-16
 20974  004A82  0905               	iorlw	5
 20975  004A84  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 20976                           
 20977                           ; BSR set to: 1
 20978                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 20979  004A86  0E20               	movlw	32
 20980  004A88  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 20981                           
 20982                           ; BSR set to: 1
 20983                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 20984  004A8A  0E00               	movlw	0
 20985  004A8C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 20986                           
 20987                           ; BSR set to: 1
 20988                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 20989  004A8E  0E02               	movlw	2
 20990  004A90  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 20991  004A92  A4D8               	btfss	status,2,c
 20992  004A94  D00C               	goto	l755
 20993                           
 20994                           ; BSR set to: 1
 20995  004A96  5108               	movf	(_gblCBW+8)& (0+255),w,b
 20996  004A98  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 20997  004A9A  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 20998  004A9C  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 20999  004A9E  B4D8               	btfsc	status,2,c
 21000  004AA0  D006               	goto	l755
 21001                           
 21002                           ; BSR set to: 1
 21003                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 21004  004AA2  0E00               	movlw	0
 21005  004AA4  6E01               	movwf	USBStallEndpoint@dir,c
 21006  004AA6  0E02               	movlw	2
 21007  004AA8  ECE7  F023         	call	_USBStallEndpoint
 21008                           
 21009                           ;usb_device_msd.c: 1636: }
 21010  004AAC  0012               	return	
 21011  004AAE                     l755:
 21012                           
 21013                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 21014  004AAE  0E01               	movlw	1
 21015  004AB0  6E01               	movwf	USBStallEndpoint@dir,c
 21016  004AB2  0E02               	movlw	2
 21017  004AB4  ECE7  F023         	call	_USBStallEndpoint
 21018                           
 21019                           ;usb_device_msd.c: 1644: }
 21020                           
 21021                           ;usb_device_msd.c: 1643: break;
 21022                           
 21023                           ;usb_device_msd.c: 1642: default:
 21024                           
 21025                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 21026  004AB8  0012               	return	
 21027  004ABA                     l747:
 21028  004ABA  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 21029                           
 21030                           ; Switch size 1, requested type "space"
 21031                           ; Number of cases is 6, Range of values is 1 to 127
 21032                           ; switch strategies available:
 21033                           ; Name         Instructions Cycles
 21034                           ; simple_byte           19    10 (average)
 21035                           ;	Chosen strategy is simple_byte
 21036  004ABC  0A01               	xorlw	1	; case 1
 21037  004ABE  B4D8               	btfsc	status,2,c
 21038  004AC0  D7B9               	goto	l748
 21039  004AC2  0A03               	xorlw	3	; case 2
 21040  004AC4  B4D8               	btfsc	status,2,c
 21041  004AC6  D7BA               	goto	l750
 21042  004AC8  0A01               	xorlw	1	; case 3
 21043  004ACA  B4D8               	btfsc	status,2,c
 21044  004ACC  D7BD               	goto	l751
 21045  004ACE  0A07               	xorlw	7	; case 4
 21046  004AD0  B4D8               	btfsc	status,2,c
 21047  004AD2  D7C3               	goto	l752
 21048  004AD4  0A01               	xorlw	1	; case 5
 21049  004AD6  B4D8               	btfsc	status,2,c
 21050  004AD8  D7C6               	goto	l753
 21051  004ADA  0A7A               	xorlw	122	; case 127
 21052  004ADC  A4D8               	btfss	status,2,c
 21053  004ADE  0012               	return	
 21054  004AE0  D7CB               	goto	l754
 21055  004AE2                     __end_of_MSDErrorHandler:
 21056                           	opt stack 0
 21057                           tosu	equ	0xFFF
 21058                           tosh	equ	0xFFE
 21059                           tosl	equ	0xFFD
 21060                           pclath	equ	0xFFA
 21061                           tblptru	equ	0xFF8
 21062                           tblptrh	equ	0xFF7
 21063                           tblptrl	equ	0xFF6
 21064                           tablat	equ	0xFF5
 21065                           prodh	equ	0xFF4
 21066                           prodl	equ	0xFF3
 21067                           intcon	equ	0xFF2
 21068                           intcon2	equ	0xFF1
 21069                           intcon3	equ	0xFF0
 21070                           indf0	equ	0xFEF
 21071                           postinc0	equ	0xFEE
 21072                           fsr0h	equ	0xFEA
 21073                           fsr0l	equ	0xFE9
 21074                           wreg	equ	0xFE8
 21075                           indf1	equ	0xFE7
 21076                           postdec1	equ	0xFE5
 21077                           plusw1	equ	0xFE3
 21078                           fsr1h	equ	0xFE2
 21079                           fsr1l	equ	0xFE1
 21080                           indf2	equ	0xFDF
 21081                           postinc2	equ	0xFDE
 21082                           postdec2	equ	0xFDD
 21083                           plusw2	equ	0xFDB
 21084                           fsr2h	equ	0xFDA
 21085                           fsr2l	equ	0xFD9
 21086                           status	equ	0xFD8
 21087                           
 21088 ;; *************** function _USBStallEndpoint *****************
 21089 ;; Defined at:
 21090 ;;		line 1073 in file "usb_device.c"
 21091 ;; Parameters:    Size  Location     Type
 21092 ;;  ep              1    wreg     unsigned char 
 21093 ;;  dir             1    0[COMRAM] unsigned char 
 21094 ;; Auto vars:     Size  Location     Type
 21095 ;;  ep              1    5[COMRAM] unsigned char 
 21096 ;;  p               2    6[COMRAM] PTR struct __BDT
 21097 ;;		 -> BDT(48), 
 21098 ;; Return value:  Size  Location     Type
 21099 ;;                  1    wreg      void 
 21100 ;; Registers used:
 21101 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21102 ;; Tracked objects:
 21103 ;;		On entry : 0/0
 21104 ;;		On exit  : 0/0
 21105 ;;		Unchanged: 0/0
 21106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21107 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21108 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21109 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21110 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21111 ;;Total ram usage:        8 bytes
 21112 ;; Hardware stack levels used:    1
 21113 ;; This function calls:
 21114 ;;		Nothing
 21115 ;; This function is called by:
 21116 ;;		_MSDTasks
 21117 ;;		_MSDReadHandler
 21118 ;;		_MSDWriteHandler
 21119 ;;		_MSDErrorHandler
 21120 ;;		_MSDTransferTerminated
 21121 ;; This function uses a non-reentrant model
 21122 ;;
 21123                           
 21124                           	psect	text93
 21125  0047CE                     __ptext93:
 21126                           	opt stack 0
 21127  0047CE                     _USBStallEndpoint:
 21128                           	opt stack 27
 21129                           
 21130                           ;incstack = 0
 21131                           ;USBStallEndpoint@ep stored from wreg
 21132  0047CE  6E06               	movwf	USBStallEndpoint@ep,c
 21133                           
 21134                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 21135  0047D0  5006               	movf	USBStallEndpoint@ep,w,c
 21136  0047D2  A4D8               	btfss	status,2,c
 21137  0047D4  D02C               	goto	l191
 21138                           
 21139                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 21140  0047D6  0100               	movlb	0	; () banked
 21141  0047D8  EE20 F001          	lfsr	2,1
 21142  0047DC  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21143  0047DE  26D9               	addwf	fsr2l,f,c
 21144  0047E0  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21145  0047E2  22DA               	addwfc	fsr2h,f,c
 21146  0047E4  0E08               	movlw	8
 21147  0047E6  6EDF               	movwf	indf2,c
 21148                           
 21149                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 21150  0047E8  EE20 F002          	lfsr	2,2
 21151  0047EC  51E1               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 21152  0047EE  26D9               	addwf	fsr2l,f,c
 21153  0047F0  51E2               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 21154  0047F2  22DA               	addwfc	fsr2h,f,c
 21155  0047F4  0E30               	movlw	48
 21156  0047F6  6EDE               	movwf	postinc2,c
 21157  0047F8  0E0D               	movlw	13
 21158  0047FA  6EDD               	movwf	postdec2,c
 21159                           
 21160                           ; BSR set to: 0
 21161                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 21162  0047FC  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21163  004800  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21164  004804  0E0C               	movlw	12
 21165  004806  6EDF               	movwf	indf2,c
 21166                           
 21167                           ; BSR set to: 0
 21168                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 21169  004808  C0E1  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 21170  00480C  C0E2  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 21171  004810  0E00               	movlw	0
 21172  004812  8EDB               	bsf	plusw2,7,c
 21173                           
 21174                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 21175  004814  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21176  004818  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21177  00481C  0E04               	movlw	4
 21178  00481E  6EDF               	movwf	indf2,c
 21179                           
 21180                           ; BSR set to: 0
 21181                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 21182  004820  C0D1  FFD9         	movff	_pBDTEntryIn,fsr2l
 21183  004824  C0D2  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 21184  004828  0E00               	movlw	0
 21185  00482A  8EDB               	bsf	plusw2,7,c
 21186                           
 21187                           ;usb_device.c: 1089: }
 21188  00482C  0012               	return	
 21189  00482E                     l191:
 21190                           
 21191                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 21192                           
 21193                           ; BSR set to: 0
 21194  00482E  5001               	movf	USBStallEndpoint@dir,w,c
 21195  004830  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 21196  004832  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 21197  004834  90D8               	bcf	status,0,c
 21198  004836  3602               	rlcf	??_USBStallEndpoint,f,c
 21199  004838  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21200  00483A  5006               	movf	USBStallEndpoint@ep,w,c
 21201  00483C  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 21202  00483E  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 21203  004840  90D8               	bcf	status,0,c
 21204  004842  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21205  004844  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21206  004846  90D8               	bcf	status,0,c
 21207  004848  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21208  00484A  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21209  00484C  5002               	movf	??_USBStallEndpoint,w,c
 21210  00484E  2604               	addwf	??_USBStallEndpoint+2,f,c
 21211  004850  5003               	movf	??_USBStallEndpoint+1,w,c
 21212  004852  2205               	addwfc	??_USBStallEndpoint+3,f,c
 21213  004854  90D8               	bcf	status,0,c
 21214  004856  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21215  004858  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21216  00485A  90D8               	bcf	status,0,c
 21217  00485C  3604               	rlcf	??_USBStallEndpoint+2,f,c
 21218  00485E  3605               	rlcf	??_USBStallEndpoint+3,f,c
 21219  004860  0E00               	movlw	0
 21220  004862  2404               	addwf	??_USBStallEndpoint+2,w,c
 21221  004864  6E07               	movwf	USBStallEndpoint@p,c
 21222  004866  0E0D               	movlw	13
 21223  004868  2005               	addwfc	??_USBStallEndpoint+3,w,c
 21224  00486A  6E08               	movwf	USBStallEndpoint@p+1,c
 21225                           
 21226                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 21227  00486C  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21228  004870  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21229  004874  0E00               	movlw	0
 21230  004876  84DB               	bsf	plusw2,2,c
 21231                           
 21232                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 21233  004878  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21234  00487C  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21235  004880  0E00               	movlw	0
 21236  004882  8EDB               	bsf	plusw2,7,c
 21237                           
 21238                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 21239  004884  5006               	movf	USBStallEndpoint@ep,w,c
 21240  004886  0D04               	mullw	4
 21241  004888  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 21242  00488C  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 21243  004890  5001               	movf	USBStallEndpoint@dir,w,c
 21244  004892  0D02               	mullw	2
 21245  004894  50F3               	movf	prodl,w,c
 21246  004896  2602               	addwf	??_USBStallEndpoint,f,c
 21247  004898  50F4               	movf	prodh,w,c
 21248  00489A  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21249  00489C  90D8               	bcf	status,0,c
 21250  00489E  3602               	rlcf	??_USBStallEndpoint,f,c
 21251  0048A0  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21252  0048A2  90D8               	bcf	status,0,c
 21253  0048A4  3602               	rlcf	??_USBStallEndpoint,f,c
 21254  0048A6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 21255  0048A8  0E04               	movlw	4
 21256  0048AA  2602               	addwf	??_USBStallEndpoint,f,c
 21257  0048AC  0E00               	movlw	0
 21258  0048AE  2203               	addwfc	??_USBStallEndpoint+1,f,c
 21259  0048B0  0E00               	movlw	0
 21260  0048B2  2402               	addwf	??_USBStallEndpoint,w,c
 21261  0048B4  6E07               	movwf	USBStallEndpoint@p,c
 21262  0048B6  0E0D               	movlw	13
 21263  0048B8  2003               	addwfc	??_USBStallEndpoint+1,w,c
 21264  0048BA  6E08               	movwf	USBStallEndpoint@p+1,c
 21265                           
 21266                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 21267  0048BC  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21268  0048C0  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21269  0048C4  0E00               	movlw	0
 21270  0048C6  84DB               	bsf	plusw2,2,c
 21271                           
 21272                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 21273  0048C8  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 21274  0048CC  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 21275  0048D0  0E00               	movlw	0
 21276  0048D2  8EDB               	bsf	plusw2,7,c
 21277  0048D4  0012               	return	
 21278  0048D6                     __end_of_USBStallEndpoint:
 21279                           	opt stack 0
 21280                           tosu	equ	0xFFF
 21281                           tosh	equ	0xFFE
 21282                           tosl	equ	0xFFD
 21283                           pclath	equ	0xFFA
 21284                           tblptru	equ	0xFF8
 21285                           tblptrh	equ	0xFF7
 21286                           tblptrl	equ	0xFF6
 21287                           tablat	equ	0xFF5
 21288                           prodh	equ	0xFF4
 21289                           prodl	equ	0xFF3
 21290                           intcon	equ	0xFF2
 21291                           intcon2	equ	0xFF1
 21292                           intcon3	equ	0xFF0
 21293                           indf0	equ	0xFEF
 21294                           postinc0	equ	0xFEE
 21295                           fsr0h	equ	0xFEA
 21296                           fsr0l	equ	0xFE9
 21297                           wreg	equ	0xFE8
 21298                           indf1	equ	0xFE7
 21299                           postdec1	equ	0xFE5
 21300                           plusw1	equ	0xFE3
 21301                           fsr1h	equ	0xFE2
 21302                           fsr1l	equ	0xFE1
 21303                           indf2	equ	0xFDF
 21304                           postinc2	equ	0xFDE
 21305                           postdec2	equ	0xFDD
 21306                           plusw2	equ	0xFDB
 21307                           fsr2h	equ	0xFDA
 21308                           fsr2l	equ	0xFD9
 21309                           status	equ	0xFD8
 21310                           
 21311 ;; *************** function _ResetSenseData *****************
 21312 ;; Defined at:
 21313 ;;		line 1373 in file "usb_device_msd.c"
 21314 ;; Parameters:    Size  Location     Type
 21315 ;;		None
 21316 ;; Auto vars:     Size  Location     Type
 21317 ;;		None
 21318 ;; Return value:  Size  Location     Type
 21319 ;;                  1    wreg      void 
 21320 ;; Registers used:
 21321 ;;		wreg, status,2
 21322 ;; Tracked objects:
 21323 ;;		On entry : 0/0
 21324 ;;		On exit  : 0/0
 21325 ;;		Unchanged: 0/0
 21326 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21327 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21328 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21329 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21330 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21331 ;;Total ram usage:        0 bytes
 21332 ;; Hardware stack levels used:    1
 21333 ;; This function calls:
 21334 ;;		Nothing
 21335 ;; This function is called by:
 21336 ;;		_USBMSDInit
 21337 ;;		_MSDProcessCommandMediaAbsent
 21338 ;;		_MSDProcessCommandMediaPresent
 21339 ;;		_MSDErrorHandler
 21340 ;; This function uses a non-reentrant model
 21341 ;;
 21342                           
 21343                           	psect	text94
 21344  007AE4                     __ptext94:
 21345                           	opt stack 0
 21346  007AE4                     _ResetSenseData:
 21347                           	opt stack 26
 21348                           
 21349                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 21350                           
 21351                           ;incstack = 0
 21352  007AE4  0101               	movlb	1	; () banked
 21353  007AE6  911F               	bcf	_gblSenseData& (0+255),0,b
 21354  007AE8  931F               	bcf	_gblSenseData& (0+255),1,b
 21355  007AEA  951F               	bcf	_gblSenseData& (0+255),2,b
 21356  007AEC  971F               	bcf	_gblSenseData& (0+255),3,b
 21357  007AEE  891F               	bsf	_gblSenseData& (0+255),4,b
 21358  007AF0  8B1F               	bsf	_gblSenseData& (0+255),5,b
 21359  007AF2  8D1F               	bsf	_gblSenseData& (0+255),6,b
 21360                           
 21361                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 21362  007AF4  9F1F               	bcf	_gblSenseData& (0+255),7,b
 21363                           
 21364                           ; BSR set to: 1
 21365                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 21366  007AF6  0E00               	movlw	0
 21367  007AF8  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 21368                           
 21369                           ; BSR set to: 1
 21370                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 21371  007AFA  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 21372  007AFC  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 21373  007AFE  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 21374  007B00  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 21375                           
 21376                           ; BSR set to: 1
 21377                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 21378  007B02  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 21379                           
 21380                           ; BSR set to: 1
 21381                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 21382  007B04  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 21383                           
 21384                           ; BSR set to: 1
 21385                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 21386  007B06  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 21387                           
 21388                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 21389  007B08  0E00               	movlw	0
 21390  007B0A  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 21391                           
 21392                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 21393  007B0C  0E00               	movlw	0
 21394  007B0E  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 21395                           
 21396                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 21397  007B10  0E00               	movlw	0
 21398  007B12  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 21399                           
 21400                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 21401  007B14  0E00               	movlw	0
 21402  007B16  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 21403                           
 21404                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 21405  007B18  0E0A               	movlw	10
 21406  007B1A  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 21407                           
 21408                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 21409  007B1C  0E00               	movlw	0
 21410  007B1E  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 21411  007B20  0E00               	movlw	0
 21412  007B22  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 21413  007B24  0E00               	movlw	0
 21414  007B26  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 21415  007B28  0E00               	movlw	0
 21416  007B2A  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 21417                           
 21418                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 21419  007B2C  0E00               	movlw	0
 21420  007B2E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 21421                           
 21422                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 21423  007B30  0E00               	movlw	0
 21424  007B32  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 21425                           
 21426                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 21427  007B34  0E00               	movlw	0
 21428  007B36  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 21429                           
 21430                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 21431  007B38  0E00               	movlw	0
 21432  007B3A  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 21433                           
 21434                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 21435  007B3C  0E00               	movlw	0
 21436  007B3E  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 21437                           
 21438                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 21439  007B40  0E00               	movlw	0
 21440  007B42  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 21441                           
 21442                           ; BSR set to: 1
 21443  007B44  0012               	return		;funcret
 21444  007B46                     __end_of_ResetSenseData:
 21445                           	opt stack 0
 21446                           tosu	equ	0xFFF
 21447                           tosh	equ	0xFFE
 21448                           tosl	equ	0xFFD
 21449                           pclath	equ	0xFFA
 21450                           tblptru	equ	0xFF8
 21451                           tblptrh	equ	0xFF7
 21452                           tblptrl	equ	0xFF6
 21453                           tablat	equ	0xFF5
 21454                           prodh	equ	0xFF4
 21455                           prodl	equ	0xFF3
 21456                           intcon	equ	0xFF2
 21457                           intcon2	equ	0xFF1
 21458                           intcon3	equ	0xFF0
 21459                           indf0	equ	0xFEF
 21460                           postinc0	equ	0xFEE
 21461                           fsr0h	equ	0xFEA
 21462                           fsr0l	equ	0xFE9
 21463                           wreg	equ	0xFE8
 21464                           indf1	equ	0xFE7
 21465                           postdec1	equ	0xFE5
 21466                           plusw1	equ	0xFE3
 21467                           fsr1h	equ	0xFE2
 21468                           fsr1l	equ	0xFE1
 21469                           indf2	equ	0xFDF
 21470                           postinc2	equ	0xFDE
 21471                           postdec2	equ	0xFDD
 21472                           plusw2	equ	0xFDB
 21473                           fsr2h	equ	0xFDA
 21474                           fsr2l	equ	0xFD9
 21475                           status	equ	0xFD8
 21476                           
 21477 ;; *************** function _ExternalFlash_SectorRead *****************
 21478 ;; Defined at:
 21479 ;;		line 40 in file "external_flash.c"
 21480 ;; Parameters:    Size  Location     Type
 21481 ;;  config          2   43[COMRAM] PTR void 
 21482 ;;		 -> NULL(0), 
 21483 ;;  sector_addr     4   45[COMRAM] unsigned long 
 21484 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 21485 ;;		 -> msd_buffer(512), 
 21486 ;; Auto vars:     Size  Location     Type
 21487 ;;  page            2   51[COMRAM] unsigned int 
 21488 ;; Return value:  Size  Location     Type
 21489 ;;                  1    wreg      unsigned char 
 21490 ;; Registers used:
 21491 ;;		wreg, status,2, status,0, cstack
 21492 ;; Tracked objects:
 21493 ;;		On entry : 0/0
 21494 ;;		On exit  : 0/0
 21495 ;;		Unchanged: 0/0
 21496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21497 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21500 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21501 ;;Total ram usage:       10 bytes
 21502 ;; Hardware stack levels used:    1
 21503 ;; Hardware stack levels required when called:    5
 21504 ;; This function calls:
 21505 ;;		_flash_sector_read
 21506 ;; This function is called by:
 21507 ;;		_MSDReadHandler
 21508 ;; This function uses a non-reentrant model
 21509 ;;
 21510                           
 21511                           	psect	text95
 21512  00889C                     __ptext95:
 21513                           	opt stack 0
 21514  00889C                     _ExternalFlash_SectorRead:
 21515                           	opt stack 20
 21516                           
 21517                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 21518                           
 21519                           ; BSR set to: 1
 21520                           ;incstack = 0
 21521  00889C  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 21522  0088A0  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 21523                           
 21524                           ;external_flash.c: 45: if(sector_addr >= 8192)
 21525  0088A4  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 21526  0088A6  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 21527  0088A8  E104               	bnz	u7960
 21528  0088AA  0E20               	movlw	32
 21529  0088AC  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 21530  0088AE  A0D8               	btfss	status,0,c
 21531  0088B0  D002               	goto	l1896
 21532  0088B2                     u7960:
 21533                           
 21534                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 21535  0088B2  0E00               	movlw	0
 21536  0088B4  0012               	return	
 21537  0088B6                     l1896:
 21538                           
 21539                           ;external_flash.c: 48: };external_flash.c: 51: flash_sector_read(page, buffer);
 21540  0088B6  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_sector_read@page
 21541  0088BA  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_sector_read@page+1
 21542  0088BE  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_sector_read@data
 21543  0088C2  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_sector_read@data+1
 21544  0088C6  EC67  F044         	call	_flash_sector_read	;wreg free
 21545                           
 21546                           ;external_flash.c: 53: return 1;
 21547  0088CA  0E01               	movlw	1
 21548  0088CC  0012               	return	
 21549  0088CE                     __end_of_ExternalFlash_SectorRead:
 21550                           	opt stack 0
 21551                           tosu	equ	0xFFF
 21552                           tosh	equ	0xFFE
 21553                           tosl	equ	0xFFD
 21554                           pclath	equ	0xFFA
 21555                           tblptru	equ	0xFF8
 21556                           tblptrh	equ	0xFF7
 21557                           tblptrl	equ	0xFF6
 21558                           tablat	equ	0xFF5
 21559                           prodh	equ	0xFF4
 21560                           prodl	equ	0xFF3
 21561                           intcon	equ	0xFF2
 21562                           intcon2	equ	0xFF1
 21563                           intcon3	equ	0xFF0
 21564                           indf0	equ	0xFEF
 21565                           postinc0	equ	0xFEE
 21566                           fsr0h	equ	0xFEA
 21567                           fsr0l	equ	0xFE9
 21568                           wreg	equ	0xFE8
 21569                           indf1	equ	0xFE7
 21570                           postdec1	equ	0xFE5
 21571                           plusw1	equ	0xFE3
 21572                           fsr1h	equ	0xFE2
 21573                           fsr1l	equ	0xFE1
 21574                           indf2	equ	0xFDF
 21575                           postinc2	equ	0xFDE
 21576                           postdec2	equ	0xFDD
 21577                           plusw2	equ	0xFDB
 21578                           fsr2h	equ	0xFDA
 21579                           fsr2l	equ	0xFD9
 21580                           status	equ	0xFD8
 21581                           
 21582 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 21583 ;; Defined at:
 21584 ;;		line 993 in file "usb_device_msd.c"
 21585 ;; Parameters:    Size  Location     Type
 21586 ;;  DiExpected      2    0[COMRAM] unsigned int 
 21587 ;; Auto vars:     Size  Location     Type
 21588 ;;		None
 21589 ;; Return value:  Size  Location     Type
 21590 ;;                  1    wreg      void 
 21591 ;; Registers used:
 21592 ;;		wreg, status,2, status,0
 21593 ;; Tracked objects:
 21594 ;;		On entry : 0/0
 21595 ;;		On exit  : 0/0
 21596 ;;		Unchanged: 0/0
 21597 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21598 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21599 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21600 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21601 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21602 ;;Total ram usage:        6 bytes
 21603 ;; Hardware stack levels used:    1
 21604 ;; This function calls:
 21605 ;;		Nothing
 21606 ;; This function is called by:
 21607 ;;		_MSDProcessCommandMediaPresent
 21608 ;; This function uses a non-reentrant model
 21609 ;;
 21610                           
 21611                           	psect	text96
 21612  006C34                     __ptext96:
 21613                           	opt stack 0
 21614  006C34                     _MSDComputeDeviceInAndResidue:
 21615                           	opt stack 26
 21616                           
 21617                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 21618                           
 21619                           ;incstack = 0
 21620  006C34  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21621  006C36  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21622  006C38  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21623  006C3A  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21624  006C3C  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21625  006C3E  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21626  006C40  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 21627  006C42  0101               	movlb	1	; () banked
 21628  006C44  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 21629  006C46  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 21630  006C48  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 21631  006C4A  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 21632  006C4C  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 21633  006C4E  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 21634  006C50  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 21635  006C52  B0D8               	btfsc	status,0,c
 21636  006C54  D00E               	goto	l659
 21637                           
 21638                           ; BSR set to: 1
 21639                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 21640  006C56  0E00               	movlw	0
 21641  006C58  010D               	movlb	13	; () banked
 21642  006C5A  6F88               	movwf	136,b	;volatile
 21643  006C5C  0E00               	movlw	0
 21644  006C5E  6F89               	movwf	137,b	;volatile
 21645  006C60  0E00               	movlw	0
 21646  006C62  6F8A               	movwf	138,b	;volatile
 21647  006C64  0E00               	movlw	0
 21648  006C66  6F8B               	movwf	139,b	;volatile
 21649                           
 21650                           ; BSR set to: 13
 21651                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 21652  006C68  C108  F0DB         	movff	_gblCBW+8,_TransferLength
 21653  006C6C  C109  F0DC         	movff	_gblCBW+9,_TransferLength+1
 21654                           
 21655                           ;usb_device_msd.c: 1002: }
 21656  006C70  0012               	return	
 21657  006C72                     l659:
 21658                           
 21659                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 21660                           
 21661                           ; BSR set to: 13
 21662  006C72  0100               	movlb	0	; () banked
 21663  006C74  51DB               	movf	_TransferLength& (0+255),w,b
 21664  006C76  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 21665  006C78  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21666  006C7A  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 21667  006C7C  B0D8               	btfsc	status,0,c
 21668  006C7E  D004               	goto	l661
 21669                           
 21670                           ; BSR set to: 0
 21671                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 21672  006C80  C001  F0DB         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 21673  006C84  C002  F0DC         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 21674  006C88                     l661:
 21675                           
 21676                           ; BSR set to: 0
 21677                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 21678                           
 21679                           ; BSR set to: 0
 21680  006C88  51DB               	movf	_TransferLength& (0+255),w,b
 21681  006C8A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 21682  006C8C  51DC               	movf	(_TransferLength+1)& (0+255),w,b
 21683  006C8E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 21684  006C90  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 21685  006C92  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 21686  006C94  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 21687  006C96  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 21688  006C98  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 21689  006C9A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 21690  006C9C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 21691  006C9E  0E00               	movlw	0
 21692  006CA0  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 21693  006CA2  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 21694  006CA4  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 21695  006CA6  0101               	movlb	1	; () banked
 21696  006CA8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 21697  006CAA  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 21698  006CAC  010D               	movlb	13	; () banked
 21699  006CAE  6F88               	movwf	136,b	;volatile
 21700  006CB0  0101               	movlb	1	; () banked
 21701  006CB2  5109               	movf	(_gblCBW+9)& (0+255),w,b
 21702  006CB4  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 21703  006CB6  010D               	movlb	13	; () banked
 21704  006CB8  6F89               	movwf	137,b	;volatile
 21705  006CBA  0101               	movlb	1	; () banked
 21706  006CBC  510A               	movf	(_gblCBW+10)& (0+255),w,b
 21707  006CBE  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 21708  006CC0  010D               	movlb	13	; () banked
 21709  006CC2  6F8A               	movwf	138,b	;volatile
 21710  006CC4  0101               	movlb	1	; () banked
 21711  006CC6  510B               	movf	(_gblCBW+11)& (0+255),w,b
 21712  006CC8  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 21713  006CCA  010D               	movlb	13	; () banked
 21714  006CCC  6F8B               	movwf	139,b	;volatile
 21715  006CCE  0012               	return	
 21716  006CD0                     __end_of_MSDComputeDeviceInAndResidue:
 21717                           	opt stack 0
 21718                           tosu	equ	0xFFF
 21719                           tosh	equ	0xFFE
 21720                           tosl	equ	0xFFD
 21721                           pclath	equ	0xFFA
 21722                           tblptru	equ	0xFF8
 21723                           tblptrh	equ	0xFF7
 21724                           tblptrl	equ	0xFF6
 21725                           tablat	equ	0xFF5
 21726                           prodh	equ	0xFF4
 21727                           prodl	equ	0xFF3
 21728                           intcon	equ	0xFF2
 21729                           intcon2	equ	0xFF1
 21730                           intcon3	equ	0xFF0
 21731                           indf0	equ	0xFEF
 21732                           postinc0	equ	0xFEE
 21733                           fsr0h	equ	0xFEA
 21734                           fsr0l	equ	0xFE9
 21735                           wreg	equ	0xFE8
 21736                           indf1	equ	0xFE7
 21737                           postdec1	equ	0xFE5
 21738                           plusw1	equ	0xFE3
 21739                           fsr1h	equ	0xFE2
 21740                           fsr1l	equ	0xFE1
 21741                           indf2	equ	0xFDF
 21742                           postinc2	equ	0xFDE
 21743                           postdec2	equ	0xFDD
 21744                           plusw2	equ	0xFDB
 21745                           fsr2h	equ	0xFDA
 21746                           fsr2l	equ	0xFD9
 21747                           status	equ	0xFD8
 21748                           
 21749 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 21750 ;; Defined at:
 21751 ;;		line 18 in file "external_flash.c"
 21752 ;; Parameters:    Size  Location     Type
 21753 ;;  config          2    0[COMRAM] PTR void 
 21754 ;;		 -> NULL(0), 
 21755 ;; Auto vars:     Size  Location     Type
 21756 ;;		None
 21757 ;; Return value:  Size  Location     Type
 21758 ;;                  2    0[COMRAM] unsigned int 
 21759 ;; Registers used:
 21760 ;;		wreg, status,2
 21761 ;; Tracked objects:
 21762 ;;		On entry : 0/0
 21763 ;;		On exit  : 0/0
 21764 ;;		Unchanged: 0/0
 21765 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21766 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21767 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21768 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21769 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21770 ;;Total ram usage:        2 bytes
 21771 ;; Hardware stack levels used:    1
 21772 ;; This function calls:
 21773 ;;		Nothing
 21774 ;; This function is called by:
 21775 ;;		_MSDProcessCommandMediaPresent
 21776 ;; This function uses a non-reentrant model
 21777 ;;
 21778                           
 21779                           	psect	text97
 21780  008FBC                     __ptext97:
 21781                           	opt stack 0
 21782  008FBC                     _ExternalFlash_SectorSizeRead:
 21783                           	opt stack 26
 21784                           
 21785                           ;external_flash.c: 20: return 512;
 21786                           
 21787                           ; BSR set to: 13
 21788                           ;incstack = 0
 21789  008FBC  0E02               	movlw	2
 21790  008FBE  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 21791  008FC0  0E00               	movlw	0
 21792  008FC2  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 21793  008FC4  0012               	return	
 21794  008FC6                     __end_of_ExternalFlash_SectorSizeRead:
 21795                           	opt stack 0
 21796                           tosu	equ	0xFFF
 21797                           tosh	equ	0xFFE
 21798                           tosl	equ	0xFFD
 21799                           pclath	equ	0xFFA
 21800                           tblptru	equ	0xFF8
 21801                           tblptrh	equ	0xFF7
 21802                           tblptrl	equ	0xFF6
 21803                           tablat	equ	0xFF5
 21804                           prodh	equ	0xFF4
 21805                           prodl	equ	0xFF3
 21806                           intcon	equ	0xFF2
 21807                           intcon2	equ	0xFF1
 21808                           intcon3	equ	0xFF0
 21809                           indf0	equ	0xFEF
 21810                           postinc0	equ	0xFEE
 21811                           fsr0h	equ	0xFEA
 21812                           fsr0l	equ	0xFE9
 21813                           wreg	equ	0xFE8
 21814                           indf1	equ	0xFE7
 21815                           postdec1	equ	0xFE5
 21816                           plusw1	equ	0xFE3
 21817                           fsr1h	equ	0xFE2
 21818                           fsr1l	equ	0xFE1
 21819                           indf2	equ	0xFDF
 21820                           postinc2	equ	0xFDE
 21821                           postdec2	equ	0xFDD
 21822                           plusw2	equ	0xFDB
 21823                           fsr2h	equ	0xFDA
 21824                           fsr2l	equ	0xFD9
 21825                           status	equ	0xFD8
 21826                           
 21827 ;; *************** function _ExternalFlash_CapacityRead *****************
 21828 ;; Defined at:
 21829 ;;		line 23 in file "external_flash.c"
 21830 ;; Parameters:    Size  Location     Type
 21831 ;;  config          2    0[COMRAM] PTR void 
 21832 ;;		 -> NULL(0), 
 21833 ;; Auto vars:     Size  Location     Type
 21834 ;;		None
 21835 ;; Return value:  Size  Location     Type
 21836 ;;                  4    0[COMRAM] unsigned long 
 21837 ;; Registers used:
 21838 ;;		wreg, status,2
 21839 ;; Tracked objects:
 21840 ;;		On entry : 0/0
 21841 ;;		On exit  : 0/0
 21842 ;;		Unchanged: 0/0
 21843 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21844 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21845 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21846 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21847 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21848 ;;Total ram usage:        4 bytes
 21849 ;; Hardware stack levels used:    1
 21850 ;; This function calls:
 21851 ;;		Nothing
 21852 ;; This function is called by:
 21853 ;;		_MSDProcessCommandMediaPresent
 21854 ;; This function uses a non-reentrant model
 21855 ;;
 21856                           
 21857                           	psect	text98
 21858  008EF4                     __ptext98:
 21859                           	opt stack 0
 21860  008EF4                     _ExternalFlash_CapacityRead:
 21861                           	opt stack 26
 21862                           
 21863                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 21864                           
 21865                           ;incstack = 0
 21866  008EF4  0EFF               	movlw	255
 21867  008EF6  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 21868  008EF8  0E1F               	movlw	31
 21869  008EFA  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 21870  008EFC  0E00               	movlw	0
 21871  008EFE  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 21872  008F00  0E00               	movlw	0
 21873  008F02  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 21874  008F04  0012               	return	
 21875  008F06                     __end_of_ExternalFlash_CapacityRead:
 21876                           	opt stack 0
 21877                           tosu	equ	0xFFF
 21878                           tosh	equ	0xFFE
 21879                           tosl	equ	0xFFD
 21880                           pclath	equ	0xFFA
 21881                           tblptru	equ	0xFF8
 21882                           tblptrh	equ	0xFF7
 21883                           tblptrl	equ	0xFF6
 21884                           tablat	equ	0xFF5
 21885                           prodh	equ	0xFF4
 21886                           prodl	equ	0xFF3
 21887                           intcon	equ	0xFF2
 21888                           intcon2	equ	0xFF1
 21889                           intcon3	equ	0xFF0
 21890                           indf0	equ	0xFEF
 21891                           postinc0	equ	0xFEE
 21892                           fsr0h	equ	0xFEA
 21893                           fsr0l	equ	0xFE9
 21894                           wreg	equ	0xFE8
 21895                           indf1	equ	0xFE7
 21896                           postdec1	equ	0xFE5
 21897                           plusw1	equ	0xFE3
 21898                           fsr1h	equ	0xFE2
 21899                           fsr1l	equ	0xFE1
 21900                           indf2	equ	0xFDF
 21901                           postinc2	equ	0xFDE
 21902                           postdec2	equ	0xFDD
 21903                           plusw2	equ	0xFDB
 21904                           fsr2h	equ	0xFDA
 21905                           fsr2l	equ	0xFD9
 21906                           status	equ	0xFD8
 21907                           
 21908 ;; *************** function _ExternalFlash_MediaInitialize *****************
 21909 ;; Defined at:
 21910 ;;		line 10 in file "external_flash.c"
 21911 ;; Parameters:    Size  Location     Type
 21912 ;;  config          2    0[COMRAM] PTR void 
 21913 ;;		 -> NULL(0), 
 21914 ;; Auto vars:     Size  Location     Type
 21915 ;;		None
 21916 ;; Return value:  Size  Location     Type
 21917 ;;                  2    0[COMRAM] PTR struct .
 21918 ;; Registers used:
 21919 ;;		wreg, status,2, status,0
 21920 ;; Tracked objects:
 21921 ;;		On entry : 0/0
 21922 ;;		On exit  : 0/0
 21923 ;;		Unchanged: 0/0
 21924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21925 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21928 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21929 ;;Total ram usage:        2 bytes
 21930 ;; Hardware stack levels used:    1
 21931 ;; This function calls:
 21932 ;;		Nothing
 21933 ;; This function is called by:
 21934 ;;		_USBMSDInit
 21935 ;;		_MSDProcessCommand
 21936 ;; This function uses a non-reentrant model
 21937 ;;
 21938                           
 21939                           	psect	text99
 21940  008E0E                     __ptext99:
 21941                           	opt stack 0
 21942  008E0E                     _ExternalFlash_MediaInitialize:
 21943                           	opt stack 26
 21944                           
 21945                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 21946                           
 21947                           ;incstack = 0
 21948  008E0E  0101               	movlb	1	; () banked
 21949  008E10  81AB               	bsf	(_mediaInformation+1)& (0+255),0,b
 21950                           
 21951                           ; BSR set to: 1
 21952                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 21953  008E12  0E02               	movlw	2
 21954  008E14  6FAD               	movwf	(_mediaInformation+3)& (0+255),b
 21955  008E16  0E00               	movlw	0
 21956  008E18  6FAC               	movwf	(_mediaInformation+2)& (0+255),b
 21957                           
 21958                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 21959  008E1A  0E00               	movlw	0
 21960  008E1C  6FAA               	movwf	_mediaInformation& (0+255),b
 21961                           
 21962                           ; BSR set to: 1
 21963                           ;external_flash.c: 15: return &mediaInformation;
 21964  008E1E  0EAA               	movlw	low _mediaInformation
 21965  008E20  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 21966  008E22  0E01               	movlw	high _mediaInformation
 21967  008E24  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 21968  008E26  0012               	return	
 21969  008E28                     __end_of_ExternalFlash_MediaInitialize:
 21970                           	opt stack 0
 21971                           tosu	equ	0xFFF
 21972                           tosh	equ	0xFFE
 21973                           tosl	equ	0xFFD
 21974                           pclath	equ	0xFFA
 21975                           tblptru	equ	0xFF8
 21976                           tblptrh	equ	0xFF7
 21977                           tblptrl	equ	0xFF6
 21978                           tablat	equ	0xFF5
 21979                           prodh	equ	0xFF4
 21980                           prodl	equ	0xFF3
 21981                           intcon	equ	0xFF2
 21982                           intcon2	equ	0xFF1
 21983                           intcon3	equ	0xFF0
 21984                           indf0	equ	0xFEF
 21985                           postinc0	equ	0xFEE
 21986                           fsr0h	equ	0xFEA
 21987                           fsr0l	equ	0xFE9
 21988                           wreg	equ	0xFE8
 21989                           indf1	equ	0xFE7
 21990                           postdec1	equ	0xFE5
 21991                           plusw1	equ	0xFE3
 21992                           fsr1h	equ	0xFE2
 21993                           fsr1l	equ	0xFE1
 21994                           indf2	equ	0xFDF
 21995                           postinc2	equ	0xFDE
 21996                           postdec2	equ	0xFDD
 21997                           plusw2	equ	0xFDB
 21998                           fsr2h	equ	0xFDA
 21999                           fsr2l	equ	0xFD9
 22000                           status	equ	0xFD8
 22001                           
 22002 ;; *************** function _ExternalFlash_MediaDetect *****************
 22003 ;; Defined at:
 22004 ;;		line 29 in file "external_flash.c"
 22005 ;; Parameters:    Size  Location     Type
 22006 ;;  config          2    0[COMRAM] PTR void 
 22007 ;;		 -> NULL(0), 
 22008 ;; Auto vars:     Size  Location     Type
 22009 ;;		None
 22010 ;; Return value:  Size  Location     Type
 22011 ;;                  1    wreg      unsigned char 
 22012 ;; Registers used:
 22013 ;;		wreg
 22014 ;; Tracked objects:
 22015 ;;		On entry : 0/0
 22016 ;;		On exit  : 0/0
 22017 ;;		Unchanged: 0/0
 22018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22019 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22022 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22023 ;;Total ram usage:        2 bytes
 22024 ;; Hardware stack levels used:    1
 22025 ;; This function calls:
 22026 ;;		Nothing
 22027 ;; This function is called by:
 22028 ;;		_USBMSDInit
 22029 ;;		_MSDProcessCommand
 22030 ;; This function uses a non-reentrant model
 22031 ;;
 22032                           
 22033                           	psect	text100
 22034  00904C                     __ptext100:
 22035                           	opt stack 0
 22036  00904C                     _ExternalFlash_MediaDetect:
 22037                           	opt stack 26
 22038                           
 22039                           ;external_flash.c: 31: return 1;
 22040                           
 22041                           ; BSR set to: 1
 22042                           ;incstack = 0
 22043  00904C  0E01               	movlw	1
 22044  00904E  0012               	return	
 22045  009050                     __end_of_ExternalFlash_MediaDetect:
 22046                           	opt stack 0
 22047                           tosu	equ	0xFFF
 22048                           tosh	equ	0xFFE
 22049                           tosl	equ	0xFFD
 22050                           pclath	equ	0xFFA
 22051                           tblptru	equ	0xFF8
 22052                           tblptrh	equ	0xFF7
 22053                           tblptrl	equ	0xFF6
 22054                           tablat	equ	0xFF5
 22055                           prodh	equ	0xFF4
 22056                           prodl	equ	0xFF3
 22057                           intcon	equ	0xFF2
 22058                           intcon2	equ	0xFF1
 22059                           intcon3	equ	0xFF0
 22060                           indf0	equ	0xFEF
 22061                           postinc0	equ	0xFEE
 22062                           fsr0h	equ	0xFEA
 22063                           fsr0l	equ	0xFE9
 22064                           wreg	equ	0xFE8
 22065                           indf1	equ	0xFE7
 22066                           postdec1	equ	0xFE5
 22067                           plusw1	equ	0xFE3
 22068                           fsr1h	equ	0xFE2
 22069                           fsr1l	equ	0xFE1
 22070                           indf2	equ	0xFDF
 22071                           postinc2	equ	0xFDE
 22072                           postdec2	equ	0xFDD
 22073                           plusw2	equ	0xFDB
 22074                           fsr2h	equ	0xFDA
 22075                           fsr2l	equ	0xFD9
 22076                           status	equ	0xFD8
 22077                           
 22078 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 22079 ;; Defined at:
 22080 ;;		line 74 in file "app_device_custom_hid.c"
 22081 ;; Parameters:    Size  Location     Type
 22082 ;;		None
 22083 ;; Auto vars:     Size  Location     Type
 22084 ;;  idx             1    0        unsigned char 
 22085 ;; Return value:  Size  Location     Type
 22086 ;;                  1    wreg      void 
 22087 ;; Registers used:
 22088 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22089 ;; Tracked objects:
 22090 ;;		On entry : 0/0
 22091 ;;		On exit  : 0/0
 22092 ;;		Unchanged: 0/0
 22093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22095 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22096 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22097 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22098 ;;Total ram usage:        4 bytes
 22099 ;; Hardware stack levels used:    1
 22100 ;; Hardware stack levels required when called:   12
 22101 ;; This function calls:
 22102 ;;		_USBTransferOnePacket
 22103 ;;		_api_parse
 22104 ;;		_api_prepare
 22105 ;; This function is called by:
 22106 ;;		_main
 22107 ;; This function uses a non-reentrant model
 22108 ;;
 22109                           
 22110                           	psect	text101
 22111  00667C                     __ptext101:
 22112                           	opt stack 0
 22113  00667C                     _APP_DeviceCustomHIDTasks:
 22114                           	opt stack 18
 22115                           
 22116                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 22117                           
 22118                           ;incstack = 0
 22119  00667C  0E20               	movlw	32
 22120  00667E  0100               	movlb	0	; () banked
 22121  006680  61F8               	cpfslt	_USBDeviceState& (0+255),b
 22122  006682  D001               	goto	l966
 22123  006684  0012               	return	
 22124  006686                     l966:
 22125                           
 22126                           ; BSR set to: 0
 22127                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 22128  006686  B265               	btfsc	3941,1,c	;volatile
 22129  006688  0012               	return	
 22130                           
 22131                           ; BSR set to: 0
 22132                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 22133                           
 22134                           ; BSR set to: 0
 22135                           
 22136                           ; BSR set to: 0
 22137                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 22138  00668A  0101               	movlb	1	; () banked
 22139  00668C  5180               	movf	_USBOutHandle& (0+255),w,b
 22140  00668E  1181               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 22141  006690  B4D8               	btfsc	status,2,c
 22142  006692  D006               	goto	u12790
 22143                           
 22144                           ; BSR set to: 1
 22145  006694  C180  FFD9         	movff	_USBOutHandle,fsr2l
 22146  006698  C181  FFDA         	movff	_USBOutHandle+1,fsr2h
 22147  00669C  BEDF               	btfsc	indf2,7,c
 22148  00669E  0012               	return	
 22149  0066A0                     u12790:
 22150                           
 22151                           ; BSR set to: 1
 22152                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 22153                           
 22154                           ; BSR set to: 1
 22155  0066A0  517E               	movf	_USBInHandle& (0+255),w,b
 22156  0066A2  117F               	iorwf	(_USBInHandle+1)& (0+255),w,b
 22157  0066A4  B4D8               	btfsc	status,2,c
 22158  0066A6  D006               	goto	u12810
 22159                           
 22160                           ; BSR set to: 1
 22161  0066A8  C17E  FFD9         	movff	_USBInHandle,fsr2l
 22162  0066AC  C17F  FFDA         	movff	_USBInHandle+1,fsr2h
 22163  0066B0  BEDF               	btfsc	indf2,7,c
 22164  0066B2  D020               	goto	l972
 22165  0066B4                     u12810:
 22166                           
 22167                           ; BSR set to: 1
 22168                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 22169                           
 22170                           ; BSR set to: 1
 22171  0066B4  0E50               	movlw	_ReceivedDataBuffer& (0+255)
 22172  0066B6  0100               	movlb	0	; () banked
 22173  0066B8  6FB7               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 22174  0066BA  6BB8               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 22175  0066BC  C0B7  F0B2         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 22176  0066C0  C0B8  F0B3         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 22177  0066C4  0E80               	movlw	_ToSendDataBuffer& (0+255)
 22178  0066C6  6FB9               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 22179  0066C8  6BBA               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 22180  0066CA  C0B9  F0B4         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 22181  0066CE  C0BA  F0B5         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 22182  0066D2  ECEF  F01D         	call	_api_prepare	;wreg free
 22183                           
 22184                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 22185  0066D6  0E01               	movlw	1
 22186  0066D8  6E01               	movwf	USBTransferOnePacket@dir,c
 22187  0066DA  0E80               	movlw	low _ToSendDataBuffer
 22188  0066DC  6E02               	movwf	USBTransferOnePacket@data,c
 22189  0066DE  0E03               	movlw	high _ToSendDataBuffer
 22190  0066E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 22191  0066E2  0E40               	movlw	64
 22192  0066E4  6E04               	movwf	USBTransferOnePacket@len,c
 22193  0066E6  0E01               	movlw	1
 22194  0066E8  ECF2  F025         	call	_USBTransferOnePacket
 22195  0066EC  C001  F17E         	movff	?_USBTransferOnePacket,_USBInHandle
 22196  0066F0  C002  F17F         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 22197  0066F4                     l972:
 22198                           
 22199                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 22200  0066F4  0E50               	movlw	low _ReceivedDataBuffer
 22201  0066F6  0100               	movlb	0	; () banked
 22202  0066F8  6F9B               	movwf	api_parse@inBuffer& (0+255),b
 22203  0066FA  0E02               	movlw	high _ReceivedDataBuffer
 22204  0066FC  6F9C               	movwf	(api_parse@inBuffer+1)& (0+255),b
 22205  0066FE  0E40               	movlw	64
 22206  006700  6F9D               	movwf	api_parse@receivedDataLength& (0+255),b
 22207  006702  EC11  F02E         	call	_api_parse	;wreg free
 22208                           
 22209                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 22210  006706  0E00               	movlw	0
 22211  006708  6E01               	movwf	USBTransferOnePacket@dir,c
 22212  00670A  0E50               	movlw	low _ReceivedDataBuffer
 22213  00670C  6E02               	movwf	USBTransferOnePacket@data,c
 22214  00670E  0E02               	movlw	high _ReceivedDataBuffer
 22215  006710  6E03               	movwf	USBTransferOnePacket@data+1,c
 22216  006712  0E40               	movlw	64
 22217  006714  6E04               	movwf	USBTransferOnePacket@len,c
 22218  006716  0E01               	movlw	1
 22219  006718  ECF2  F025         	call	_USBTransferOnePacket
 22220  00671C  C001  F180         	movff	?_USBTransferOnePacket,_USBOutHandle
 22221  006720  C002  F181         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 22222  006724  0012               	return	
 22223  006726                     __end_of_APP_DeviceCustomHIDTasks:
 22224                           	opt stack 0
 22225                           tosu	equ	0xFFF
 22226                           tosh	equ	0xFFE
 22227                           tosl	equ	0xFFD
 22228                           pclath	equ	0xFFA
 22229                           tblptru	equ	0xFF8
 22230                           tblptrh	equ	0xFF7
 22231                           tblptrl	equ	0xFF6
 22232                           tablat	equ	0xFF5
 22233                           prodh	equ	0xFF4
 22234                           prodl	equ	0xFF3
 22235                           intcon	equ	0xFF2
 22236                           intcon2	equ	0xFF1
 22237                           intcon3	equ	0xFF0
 22238                           indf0	equ	0xFEF
 22239                           postinc0	equ	0xFEE
 22240                           fsr0h	equ	0xFEA
 22241                           fsr0l	equ	0xFE9
 22242                           wreg	equ	0xFE8
 22243                           indf1	equ	0xFE7
 22244                           postdec1	equ	0xFE5
 22245                           plusw1	equ	0xFE3
 22246                           fsr1h	equ	0xFE2
 22247                           fsr1l	equ	0xFE1
 22248                           indf2	equ	0xFDF
 22249                           postinc2	equ	0xFDE
 22250                           postdec2	equ	0xFDD
 22251                           plusw2	equ	0xFDB
 22252                           fsr2h	equ	0xFDA
 22253                           fsr2l	equ	0xFD9
 22254                           status	equ	0xFD8
 22255                           
 22256 ;; *************** function _api_prepare *****************
 22257 ;; Defined at:
 22258 ;;		line 57 in file "api.c"
 22259 ;; Parameters:    Size  Location     Type
 22260 ;;  inBuffer        2   82[BANK0 ] PTR unsigned char 
 22261 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22262 ;;  outBuffer       2   84[BANK0 ] PTR unsigned char 
 22263 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22264 ;; Auto vars:     Size  Location     Type
 22265 ;;  command         1   86[BANK0 ] enum E6715
 22266 ;; Return value:  Size  Location     Type
 22267 ;;                  1    wreg      void 
 22268 ;; Registers used:
 22269 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 22270 ;; Tracked objects:
 22271 ;;		On entry : 0/0
 22272 ;;		On exit  : 0/0
 22273 ;;		Unchanged: 0/0
 22274 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22275 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22276 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22277 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22278 ;;      Totals:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22279 ;;Total ram usage:        5 bytes
 22280 ;; Hardware stack levels used:    1
 22281 ;; Hardware stack levels required when called:   10
 22282 ;; This function calls:
 22283 ;;		__fill_buffer_find_file
 22284 ;;		__fill_buffer_get_bootloader_details
 22285 ;;		__fill_buffer_get_configuration
 22286 ;;		__fill_buffer_get_display
 22287 ;;		__fill_buffer_get_file_details
 22288 ;;		__fill_buffer_get_status
 22289 ;;		__fill_buffer_read_buffer
 22290 ;;		__fill_buffer_read_file
 22291 ;;		_memcpy
 22292 ;; This function is called by:
 22293 ;;		_main
 22294 ;;		_APP_DeviceCustomHIDTasks
 22295 ;; This function uses a non-reentrant model
 22296 ;;
 22297                           
 22298                           	psect	text102
 22299  003BDE                     __ptext102:
 22300                           	opt stack 0
 22301  003BDE                     _api_prepare:
 22302                           	opt stack 20
 22303                           
 22304                           ;api.c: 59: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 22305                           
 22306                           ;incstack = 0
 22307  003BDE  C0B2  FFD9         	movff	api_prepare@inBuffer,fsr2l
 22308  003BE2  C0B3  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 22309  003BE6  50DF               	movf	indf2,w,c
 22310  003BE8  0100               	movlb	0	; () banked
 22311  003BEA  6FB6               	movwf	api_prepare@command& (0+255),b
 22312                           
 22313                           ; BSR set to: 0
 22314                           ;api.c: 61: if(command>0x7F)
 22315  003BEC  0E7F               	movlw	127
 22316  003BEE  65B6               	cpfsgt	api_prepare@command& (0+255),b
 22317  003BF0  D096               	goto	l2714
 22318  003BF2  D03C               	goto	l2706
 22319  003BF4                     
 22320                           ; BSR set to: 0
 22321                           ;api.c: 77: _fill_buffer_get_file_details(inBuffer, outBuffer);
 22322                           
 22323                           ; BSR set to: 0
 22324  003BF4  C0B2  F038         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 22325  003BF8  C0B3  F039         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 22326  003BFC  C0B4  F03A         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 22327  003C00  C0B5  F03B         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 22328  003C04  ECF2  F03A         	call	__fill_buffer_get_file_details	;wreg free
 22329                           
 22330                           ;api.c: 78: break;
 22331  003C08  0012               	return	
 22332  003C0A                     
 22333                           ;api.c: 82: _fill_buffer_find_file(inBuffer, outBuffer);
 22334  003C0A  C0B2  F037         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 22335  003C0E  C0B3  F038         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 22336  003C12  C0B4  F039         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 22337  003C16  C0B5  F03A         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 22338  003C1A  ECDC  F034         	call	__fill_buffer_find_file	;wreg free
 22339                           
 22340                           ;api.c: 83: break;
 22341  003C1E  0012               	return	
 22342  003C20                     
 22343                           ;api.c: 87: _fill_buffer_read_file(inBuffer, outBuffer);
 22344  003C20  C0B2  F09E         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 22345  003C24  C0B3  F09F         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 22346  003C28  C0B4  F0A0         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 22347  003C2C  C0B5  F0A1         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 22348  003C30  EC6F  F013         	call	__fill_buffer_read_file	;wreg free
 22349                           
 22350                           ;api.c: 88: break;
 22351  003C34  0012               	return	
 22352  003C36                     
 22353                           ;api.c: 92: _fill_buffer_read_buffer(inBuffer, outBuffer);
 22354  003C36  C0B2  F02B         	movff	api_prepare@inBuffer,__fill_buffer_read_buffer@inBuffer
 22355  003C3A  C0B3  F02C         	movff	api_prepare@inBuffer+1,__fill_buffer_read_buffer@inBuffer+1
 22356  003C3E  C0B4  F02D         	movff	api_prepare@outBuffer,__fill_buffer_read_buffer@outBuffer
 22357  003C42  C0B5  F02E         	movff	api_prepare@outBuffer+1,__fill_buffer_read_buffer@outBuffer+1
 22358  003C46  EC72  F027         	call	__fill_buffer_read_buffer	;wreg free
 22359                           
 22360                           ;api.c: 93: break;
 22361  003C4A  0012               	return	
 22362  003C4C                     
 22363                           ;api.c: 96: outBuffer[0] = 0x99;
 22364  003C4C  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22365  003C50  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22366  003C54  0E99               	movlw	153
 22367  003C56  6EDF               	movwf	indf2,c
 22368                           
 22369                           ;api.c: 97: outBuffer[1] = 0x99;
 22370  003C58  0100               	movlb	0	; () banked
 22371  003C5A  EE20 F001          	lfsr	2,1
 22372  003C5E  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22373  003C60  26D9               	addwf	fsr2l,f,c
 22374  003C62  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22375  003C64  22DA               	addwfc	fsr2h,f,c
 22376  003C66  0E99               	movlw	153
 22377  003C68  6EDF               	movwf	indf2,c
 22378                           
 22379                           ;api.c: 98: }
 22380  003C6A  0012               	return	
 22381  003C6C                     l2706:
 22382                           
 22383                           ; BSR set to: 0
 22384                           
 22385                           ; BSR set to: 0
 22386  003C6C  51B6               	movf	api_prepare@command& (0+255),w,b
 22387                           
 22388                           ; Switch size 1, requested type "space"
 22389                           ; Number of cases is 4, Range of values is 128 to 131
 22390                           ; switch strategies available:
 22391                           ; Name         Instructions Cycles
 22392                           ; simple_byte           13     7 (average)
 22393                           ;	Chosen strategy is simple_byte
 22394  003C6E  0A80               	xorlw	128	; case 128
 22395  003C70  B4D8               	btfsc	status,2,c
 22396  003C72  D7C0               	goto	l2707
 22397  003C74  0A01               	xorlw	1	; case 129
 22398  003C76  B4D8               	btfsc	status,2,c
 22399  003C78  D7C8               	goto	l2709
 22400  003C7A  0A03               	xorlw	3	; case 130
 22401  003C7C  B4D8               	btfsc	status,2,c
 22402  003C7E  D7D0               	goto	l2710
 22403  003C80  0A01               	xorlw	1	; case 131
 22404  003C82  B4D8               	btfsc	status,2,c
 22405  003C84  D7D8               	goto	l2711
 22406  003C86  D7E2               	goto	l2712
 22407  003C88                     
 22408                           ; BSR set to: 0
 22409                           ;api.c: 107: _fill_buffer_get_status(outBuffer);
 22410                           
 22411                           ; BSR set to: 0
 22412  003C88  C0B4  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 22413  003C8C  C0B5  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 22414  003C90  EC9E  F02A         	call	__fill_buffer_get_status	;wreg free
 22415                           
 22416                           ;api.c: 108: break;
 22417  003C94  0012               	return	
 22418  003C96                     
 22419                           ;api.c: 112: _fill_buffer_get_display(outBuffer, 0);
 22420  003C96  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22421  003C9A  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22422  003C9E  0E00               	movlw	0
 22423  003CA0  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22424  003CA2  EC31  F031         	call	__fill_buffer_get_display	;wreg free
 22425                           
 22426                           ;api.c: 113: break;
 22427  003CA6  0012               	return	
 22428  003CA8                     
 22429                           ;api.c: 117: _fill_buffer_get_display(outBuffer, 1);
 22430  003CA8  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 22431  003CAC  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 22432  003CB0  0E01               	movlw	1
 22433  003CB2  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 22434  003CB4  EC31  F031         	call	__fill_buffer_get_display	;wreg free
 22435                           
 22436                           ;api.c: 118: break;
 22437  003CB8  0012               	return	
 22438  003CBA                     
 22439                           ;api.c: 122: _fill_buffer_get_bootloader_details(outBuffer);
 22440  003CBA  C0B4  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 22441  003CBE  C0B5  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 22442  003CC2  EC74  F016         	call	__fill_buffer_get_bootloader_details	;wreg free
 22443                           
 22444                           ;api.c: 123: break;
 22445  003CC6  0012               	return	
 22446  003CC8                     
 22447                           ;api.c: 127: _fill_buffer_get_configuration(outBuffer);
 22448  003CC8  C0B4  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 22449  003CCC  C0B5  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 22450  003CD0  EC7C  F035         	call	__fill_buffer_get_configuration	;wreg free
 22451                           
 22452                           ;api.c: 128: break;
 22453  003CD4  0012               	return	
 22454  003CD6                     
 22455                           ;api.c: 132: memcpy(outBuffer, inBuffer, 64);
 22456  003CD6  C0B4  F001         	movff	api_prepare@outBuffer,memcpy@d1
 22457  003CDA  C0B5  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 22458  003CDE  C0B2  F003         	movff	api_prepare@inBuffer,memcpy@s1
 22459  003CE2  C0B3  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 22460  003CE6  5003               	movf	memcpy@s1,w,c
 22461  003CE8  1004               	iorwf	memcpy@s1+1,w,c
 22462  003CEA  A4D8               	btfss	status,2,c
 22463  003CEC  0E20               	movlw	32
 22464  003CEE  6E05               	movwf	memcpy@s1+2,c
 22465  003CF0  0E00               	movlw	0
 22466  003CF2  6E07               	movwf	memcpy@n+1,c
 22467  003CF4  0E40               	movlw	64
 22468  003CF6  6E06               	movwf	memcpy@n,c
 22469  003CF8  ECDD  F03C         	call	_memcpy	;wreg free
 22470                           
 22471                           ;api.c: 133: break;
 22472  003CFC  0012               	return	
 22473  003CFE                     
 22474                           ;api.c: 136: outBuffer[0] = 0x99;
 22475  003CFE  C0B4  FFD9         	movff	api_prepare@outBuffer,fsr2l
 22476  003D02  C0B5  FFDA         	movff	api_prepare@outBuffer+1,fsr2h
 22477  003D06  0E99               	movlw	153
 22478  003D08  6EDF               	movwf	indf2,c
 22479                           
 22480                           ;api.c: 137: outBuffer[1] = 0x99;
 22481  003D0A  0100               	movlb	0	; () banked
 22482  003D0C  EE20 F001          	lfsr	2,1
 22483  003D10  51B4               	movf	api_prepare@outBuffer& (0+255),w,b
 22484  003D12  26D9               	addwf	fsr2l,f,c
 22485  003D14  51B5               	movf	(api_prepare@outBuffer+1)& (0+255),w,b
 22486  003D16  22DA               	addwfc	fsr2h,f,c
 22487  003D18  0E99               	movlw	153
 22488  003D1A  6EDF               	movwf	indf2,c
 22489                           
 22490                           ;api.c: 138: }
 22491  003D1C  0012               	return	
 22492  003D1E                     l2714:
 22493                           
 22494                           ; BSR set to: 0
 22495                           
 22496                           ; BSR set to: 0
 22497  003D1E  51B6               	movf	api_prepare@command& (0+255),w,b
 22498                           
 22499                           ; Switch size 1, requested type "space"
 22500                           ; Number of cases is 6, Range of values is 16 to 32
 22501                           ; switch strategies available:
 22502                           ; Name         Instructions Cycles
 22503                           ; simple_byte           19    10 (average)
 22504                           ;	Chosen strategy is simple_byte
 22505  003D20  0A10               	xorlw	16	; case 16
 22506  003D22  B4D8               	btfsc	status,2,c
 22507  003D24  D7B1               	goto	l2715
 22508  003D26  0A01               	xorlw	1	; case 17
 22509  003D28  B4D8               	btfsc	status,2,c
 22510  003D2A  D7B5               	goto	l2717
 22511  003D2C  0A03               	xorlw	3	; case 18
 22512  003D2E  B4D8               	btfsc	status,2,c
 22513  003D30  D7BB               	goto	l2718
 22514  003D32  0A01               	xorlw	1	; case 19
 22515  003D34  B4D8               	btfsc	status,2,c
 22516  003D36  D7C1               	goto	l2719
 22517  003D38  0A07               	xorlw	7	; case 20
 22518  003D3A  B4D8               	btfsc	status,2,c
 22519  003D3C  D7C5               	goto	l2720
 22520  003D3E  0A34               	xorlw	52	; case 32
 22521  003D40  B4D8               	btfsc	status,2,c
 22522  003D42  D7C9               	goto	l2721
 22523  003D44  D7DC               	goto	l2722
 22524  003D46                     __end_of_api_prepare:
 22525                           	opt stack 0
 22526                           tosu	equ	0xFFF
 22527                           tosh	equ	0xFFE
 22528                           tosl	equ	0xFFD
 22529                           pclath	equ	0xFFA
 22530                           tblptru	equ	0xFF8
 22531                           tblptrh	equ	0xFF7
 22532                           tblptrl	equ	0xFF6
 22533                           tablat	equ	0xFF5
 22534                           prodh	equ	0xFF4
 22535                           prodl	equ	0xFF3
 22536                           intcon	equ	0xFF2
 22537                           intcon2	equ	0xFF1
 22538                           intcon3	equ	0xFF0
 22539                           indf0	equ	0xFEF
 22540                           postinc0	equ	0xFEE
 22541                           fsr0h	equ	0xFEA
 22542                           fsr0l	equ	0xFE9
 22543                           wreg	equ	0xFE8
 22544                           indf1	equ	0xFE7
 22545                           postdec1	equ	0xFE5
 22546                           plusw1	equ	0xFE3
 22547                           fsr1h	equ	0xFE2
 22548                           fsr1l	equ	0xFE1
 22549                           indf2	equ	0xFDF
 22550                           postinc2	equ	0xFDE
 22551                           postdec2	equ	0xFDD
 22552                           plusw2	equ	0xFDB
 22553                           fsr2h	equ	0xFDA
 22554                           fsr2l	equ	0xFD9
 22555                           status	equ	0xFD8
 22556                           
 22557 ;; *************** function __fill_buffer_read_file *****************
 22558 ;; Defined at:
 22559 ;;		line 393 in file "api.c"
 22560 ;; Parameters:    Size  Location     Type
 22561 ;;  inBuffer        2   62[BANK0 ] PTR unsigned char 
 22562 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 22563 ;;  outBuffer       2   64[BANK0 ] PTR unsigned char 
 22564 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22565 ;; Auto vars:     Size  Location     Type
 22566 ;;  start           4   78[BANK0 ] unsigned long 
 22567 ;;  data_length     4   74[BANK0 ] unsigned long 
 22568 ;;  file_size       4   70[BANK0 ] unsigned long 
 22569 ;; Return value:  Size  Location     Type
 22570 ;;                  1    wreg      void 
 22571 ;; Registers used:
 22572 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 22573 ;; Tracked objects:
 22574 ;;		On entry : 0/0
 22575 ;;		On exit  : 0/0
 22576 ;;		Unchanged: 0/0
 22577 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22578 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22579 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22580 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22581 ;;      Totals:         0      20       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22582 ;;Total ram usage:       20 bytes
 22583 ;; Hardware stack levels used:    1
 22584 ;; Hardware stack levels required when called:    9
 22585 ;; This function calls:
 22586 ;;		_fat_get_file_size
 22587 ;;		_fat_read_from_file
 22588 ;; This function is called by:
 22589 ;;		_api_prepare
 22590 ;; This function uses a non-reentrant model
 22591 ;;
 22592                           
 22593                           	psect	text103
 22594  0026DE                     __ptext103:
 22595                           	opt stack 0
 22596  0026DE                     __fill_buffer_read_file:
 22597                           	opt stack 20
 22598                           
 22599                           ;api.c: 395: uint32_t start;;api.c: 396: uint32_t file_size;;api.c: 397: uint32_t data_l
      +                          ength;;api.c: 400: outBuffer[0] = DATAREQUEST_READ_FILE;
 22600                           
 22601                           ;incstack = 0
 22602  0026DE  C0A0  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 22603  0026E2  C0A1  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 22604  0026E6  0E82               	movlw	130
 22605  0026E8  6EDF               	movwf	indf2,c
 22606                           
 22607                           ;api.c: 403: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 22608  0026EA  0100               	movlb	0	; () banked
 22609  0026EC  EE20 F001          	lfsr	2,1
 22610  0026F0  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22611  0026F2  26D9               	addwf	fsr2l,f,c
 22612  0026F4  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22613  0026F6  22DA               	addwfc	fsr2h,f,c
 22614  0026F8  0EC1               	movlw	193
 22615  0026FA  6EDF               	movwf	indf2,c
 22616                           
 22617                           ; BSR set to: 0
 22618                           ;api.c: 404: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 22619  0026FC  EE20 F002          	lfsr	2,2
 22620  002700  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22621  002702  26D9               	addwf	fsr2l,f,c
 22622  002704  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22623  002706  22DA               	addwfc	fsr2h,f,c
 22624  002708  0E25               	movlw	37
 22625  00270A  6EDF               	movwf	indf2,c
 22626                           
 22627                           ; BSR set to: 0
 22628                           ;api.c: 407: outBuffer[3] = inBuffer[1];
 22629  00270C  EE20 F001          	lfsr	2,1
 22630  002710  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22631  002712  26D9               	addwf	fsr2l,f,c
 22632  002714  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22633  002716  22DA               	addwfc	fsr2h,f,c
 22634  002718  EE10 F003          	lfsr	1,3
 22635  00271C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22636  00271E  26E1               	addwf	fsr1l,f,c
 22637  002720  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22638  002722  22E2               	addwfc	fsr1h,f,c
 22639  002724  CFDF FFE7          	movff	indf2,indf1
 22640                           
 22641                           ; BSR set to: 0
 22642                           ;api.c: 410: outBuffer[4] = inBuffer[2];
 22643  002728  EE20 F002          	lfsr	2,2
 22644  00272C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22645  00272E  26D9               	addwf	fsr2l,f,c
 22646  002730  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22647  002732  22DA               	addwfc	fsr2h,f,c
 22648  002734  EE10 F004          	lfsr	1,4
 22649  002738  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22650  00273A  26E1               	addwf	fsr1l,f,c
 22651  00273C  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22652  00273E  22E2               	addwfc	fsr1h,f,c
 22653  002740  CFDF FFE7          	movff	indf2,indf1
 22654                           
 22655                           ; BSR set to: 0
 22656                           ;api.c: 411: outBuffer[5] = inBuffer[3];
 22657  002744  EE20 F003          	lfsr	2,3
 22658  002748  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22659  00274A  26D9               	addwf	fsr2l,f,c
 22660  00274C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22661  00274E  22DA               	addwfc	fsr2h,f,c
 22662  002750  EE10 F005          	lfsr	1,5
 22663  002754  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22664  002756  26E1               	addwf	fsr1l,f,c
 22665  002758  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22666  00275A  22E2               	addwfc	fsr1h,f,c
 22667  00275C  CFDF FFE7          	movff	indf2,indf1
 22668                           
 22669                           ; BSR set to: 0
 22670                           ;api.c: 412: outBuffer[6] = inBuffer[4];
 22671  002760  EE20 F004          	lfsr	2,4
 22672  002764  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22673  002766  26D9               	addwf	fsr2l,f,c
 22674  002768  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22675  00276A  22DA               	addwfc	fsr2h,f,c
 22676  00276C  EE10 F006          	lfsr	1,6
 22677  002770  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22678  002772  26E1               	addwf	fsr1l,f,c
 22679  002774  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22680  002776  22E2               	addwfc	fsr1h,f,c
 22681  002778  CFDF FFE7          	movff	indf2,indf1
 22682                           
 22683                           ; BSR set to: 0
 22684                           ;api.c: 413: outBuffer[7] = inBuffer[5];
 22685  00277C  EE20 F005          	lfsr	2,5
 22686  002780  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22687  002782  26D9               	addwf	fsr2l,f,c
 22688  002784  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22689  002786  22DA               	addwfc	fsr2h,f,c
 22690  002788  EE10 F007          	lfsr	1,7
 22691  00278C  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22692  00278E  26E1               	addwf	fsr1l,f,c
 22693  002790  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22694  002792  22E2               	addwfc	fsr1h,f,c
 22695  002794  CFDF FFE7          	movff	indf2,indf1
 22696                           
 22697                           ; BSR set to: 0
 22698                           ;api.c: 416: start = inBuffer[2];
 22699  002798  EE20 F002          	lfsr	2,2
 22700  00279C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22701  00279E  26D9               	addwf	fsr2l,f,c
 22702  0027A0  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22703  0027A2  22DA               	addwfc	fsr2h,f,c
 22704  0027A4  50DF               	movf	indf2,w,c
 22705  0027A6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22706  0027A8  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22707  0027AA  6FAE               	movwf	__fill_buffer_read_file@start& (0+255),b
 22708  0027AC  6BAF               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 22709  0027AE  6BB0               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 22710  0027B0  6BB1               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 22711                           
 22712                           ; BSR set to: 0
 22713                           ;api.c: 417: start <<= 8;
 22714  0027B2  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22715  0027B6  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22716  0027BA  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22717  0027BE  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22718                           
 22719                           ; BSR set to: 0
 22720                           ;api.c: 418: start |= inBuffer[3];
 22721  0027C0  EE20 F003          	lfsr	2,3
 22722  0027C4  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22723  0027C6  26D9               	addwf	fsr2l,f,c
 22724  0027C8  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22725  0027CA  22DA               	addwfc	fsr2h,f,c
 22726  0027CC  50DF               	movf	indf2,w,c
 22727  0027CE  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22728  0027D0  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22729  0027D2  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22730                           
 22731                           ; BSR set to: 0
 22732                           ;api.c: 419: start <<= 8;
 22733  0027D4  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22734  0027D8  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22735  0027DC  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22736  0027E0  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22737                           
 22738                           ; BSR set to: 0
 22739                           ;api.c: 420: start |= inBuffer[4];
 22740  0027E2  EE20 F004          	lfsr	2,4
 22741  0027E6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22742  0027E8  26D9               	addwf	fsr2l,f,c
 22743  0027EA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22744  0027EC  22DA               	addwfc	fsr2h,f,c
 22745  0027EE  50DF               	movf	indf2,w,c
 22746  0027F0  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22747  0027F2  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22748  0027F4  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22749                           
 22750                           ; BSR set to: 0
 22751                           ;api.c: 421: start <<= 8;
 22752  0027F6  C0B0  F0B1         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 22753  0027FA  C0AF  F0B0         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 22754  0027FE  C0AE  F0AF         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 22755  002802  6BAE               	clrf	__fill_buffer_read_file@start& (0+255),b
 22756                           
 22757                           ; BSR set to: 0
 22758                           ;api.c: 422: start |= inBuffer[5];
 22759  002804  EE20 F005          	lfsr	2,5
 22760  002808  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22761  00280A  26D9               	addwf	fsr2l,f,c
 22762  00280C  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22763  00280E  22DA               	addwfc	fsr2h,f,c
 22764  002810  50DF               	movf	indf2,w,c
 22765  002812  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22766  002814  51A2               	movf	??__fill_buffer_read_file& (0+255),w,b
 22767  002816  13AE               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 22768                           
 22769                           ; BSR set to: 0
 22770                           ;api.c: 425: file_size = fat_get_file_size(inBuffer[1]);
 22771  002818  EE20 F001          	lfsr	2,1
 22772  00281C  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22773  00281E  26D9               	addwf	fsr2l,f,c
 22774  002820  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22775  002822  22DA               	addwfc	fsr2h,f,c
 22776  002824  50DF               	movf	indf2,w,c
 22777  002826  EC0B  F03C         	call	_fat_get_file_size
 22778  00282A  C036  F0A6         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 22779  00282E  C037  F0A7         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 22780  002832  C038  F0A8         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 22781  002836  C039  F0A9         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 22782                           
 22783                           ;api.c: 426: data_length = file_size - start;
 22784  00283A  C0AE  F0A2         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 22785  00283E  C0AF  F0A3         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 22786  002842  C0B0  F0A4         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 22787  002846  C0B1  F0A5         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 22788  00284A  0100               	movlb	0	; () banked
 22789  00284C  1FA2               	comf	??__fill_buffer_read_file& (0+255),f,b
 22790  00284E  1FA3               	comf	(??__fill_buffer_read_file+1)& (0+255),f,b
 22791  002850  1FA4               	comf	(??__fill_buffer_read_file+2)& (0+255),f,b
 22792  002852  1FA5               	comf	(??__fill_buffer_read_file+3)& (0+255),f,b
 22793  002854  2BA2               	incf	??__fill_buffer_read_file& (0+255),f,b
 22794  002856  0E00               	movlw	0
 22795  002858  23A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),f,b
 22796  00285A  23A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),f,b
 22797  00285C  23A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),f,b
 22798  00285E  51A6               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 22799  002860  25A2               	addwf	??__fill_buffer_read_file& (0+255),w,b
 22800  002862  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22801  002864  51A7               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 22802  002866  21A3               	addwfc	(??__fill_buffer_read_file+1)& (0+255),w,b
 22803  002868  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22804  00286A  51A8               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 22805  00286C  21A4               	addwfc	(??__fill_buffer_read_file+2)& (0+255),w,b
 22806  00286E  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22807  002870  51A9               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 22808  002872  21A5               	addwfc	(??__fill_buffer_read_file+3)& (0+255),w,b
 22809  002874  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22810                           
 22811                           ; BSR set to: 0
 22812                           ;api.c: 427: if(data_length>54)
 22813  002876  51AD               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 22814  002878  11AC               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 22815  00287A  11AB               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 22816  00287C  E104               	bnz	u11640
 22817  00287E  0E37               	movlw	55
 22818  002880  5DAA               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 22819  002882  A0D8               	btfss	status,0,c
 22820  002884  D008               	goto	l2774
 22821  002886                     u11640:
 22822                           
 22823                           ; BSR set to: 0
 22824                           ;api.c: 428: {;api.c: 430: data_length = 54;
 22825  002886  0E36               	movlw	54
 22826  002888  6FAA               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 22827  00288A  0E00               	movlw	0
 22828  00288C  6FAB               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 22829  00288E  0E00               	movlw	0
 22830  002890  6FAC               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 22831  002892  0E00               	movlw	0
 22832  002894  6FAD               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 22833  002896                     l2774:
 22834                           
 22835                           ; BSR set to: 0
 22836                           ;api.c: 431: };api.c: 434: outBuffer[8] = (uint8_t) data_length;
 22837                           
 22838                           ; BSR set to: 0
 22839  002896  EE20 F008          	lfsr	2,8
 22840  00289A  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22841  00289C  26D9               	addwf	fsr2l,f,c
 22842  00289E  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22843  0028A0  22DA               	addwfc	fsr2h,f,c
 22844  0028A2  C0AA  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 22845                           
 22846                           ; BSR set to: 0
 22847                           ;api.c: 437: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 22848  0028A6  C0AE  F06E         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 22849  0028AA  C0AF  F06F         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 22850  0028AE  C0B0  F070         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 22851  0028B2  C0B1  F071         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 22852  0028B6  C0AA  F072         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 22853  0028BA  C0AB  F073         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 22854  0028BE  C0AC  F074         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 22855  0028C2  C0AD  F075         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 22856  0028C6  0E0A               	movlw	10
 22857  0028C8  25A0               	addwf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22858  0028CA  6F76               	movwf	fat_read_from_file@data& (0+255),b
 22859  0028CC  0E00               	movlw	0
 22860  0028CE  21A1               	addwfc	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22861  0028D0  6F77               	movwf	(fat_read_from_file@data+1)& (0+255),b
 22862  0028D2  EE20 F001          	lfsr	2,1
 22863  0028D6  519E               	movf	__fill_buffer_read_file@inBuffer& (0+255),w,b
 22864  0028D8  26D9               	addwf	fsr2l,f,c
 22865  0028DA  519F               	movf	(__fill_buffer_read_file@inBuffer+1)& (0+255),w,b
 22866  0028DC  22DA               	addwfc	fsr2h,f,c
 22867  0028DE  50DF               	movf	indf2,w,c
 22868  0028E0  ECED  F027         	call	_fat_read_from_file
 22869  0028E4  0100               	movlb	0	; () banked
 22870  0028E6  6FA2               	movwf	??__fill_buffer_read_file& (0+255),b
 22871  0028E8  EE20 F009          	lfsr	2,9
 22872  0028EC  51A0               	movf	__fill_buffer_read_file@outBuffer& (0+255),w,b
 22873  0028EE  26D9               	addwf	fsr2l,f,c
 22874  0028F0  51A1               	movf	(__fill_buffer_read_file@outBuffer+1)& (0+255),w,b
 22875  0028F2  22DA               	addwfc	fsr2h,f,c
 22876  0028F4  C0A2  FFDF         	movff	??__fill_buffer_read_file,indf2
 22877                           
 22878                           ; BSR set to: 0
 22879  0028F8  0012               	return		;funcret
 22880  0028FA                     __end_of__fill_buffer_read_file:
 22881                           	opt stack 0
 22882                           tosu	equ	0xFFF
 22883                           tosh	equ	0xFFE
 22884                           tosl	equ	0xFFD
 22885                           pclath	equ	0xFFA
 22886                           tblptru	equ	0xFF8
 22887                           tblptrh	equ	0xFF7
 22888                           tblptrl	equ	0xFF6
 22889                           tablat	equ	0xFF5
 22890                           prodh	equ	0xFF4
 22891                           prodl	equ	0xFF3
 22892                           intcon	equ	0xFF2
 22893                           intcon2	equ	0xFF1
 22894                           intcon3	equ	0xFF0
 22895                           indf0	equ	0xFEF
 22896                           postinc0	equ	0xFEE
 22897                           fsr0h	equ	0xFEA
 22898                           fsr0l	equ	0xFE9
 22899                           wreg	equ	0xFE8
 22900                           indf1	equ	0xFE7
 22901                           postdec1	equ	0xFE5
 22902                           plusw1	equ	0xFE3
 22903                           fsr1h	equ	0xFE2
 22904                           fsr1l	equ	0xFE1
 22905                           indf2	equ	0xFDF
 22906                           postinc2	equ	0xFDE
 22907                           postdec2	equ	0xFDD
 22908                           plusw2	equ	0xFDB
 22909                           fsr2h	equ	0xFDA
 22910                           fsr2l	equ	0xFD9
 22911                           status	equ	0xFD8
 22912                           
 22913 ;; *************** function _fat_read_from_file *****************
 22914 ;; Defined at:
 22915 ;;		line 747 in file "fat16.c"
 22916 ;; Parameters:    Size  Location     Type
 22917 ;;  file_number     1    wreg     unsigned char 
 22918 ;;  start_byte      4   14[BANK0 ] unsigned long 
 22919 ;;  length          4   18[BANK0 ] unsigned long 
 22920 ;;  data            2   22[BANK0 ] PTR unsigned char 
 22921 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 22922 ;; Auto vars:     Size  Location     Type
 22923 ;;  file_number     1   24[BANK0 ] unsigned char 
 22924 ;;  root           32   30[BANK0 ] struct .
 22925 ;;  cluster_numb    2   27[BANK0 ] unsigned int 
 22926 ;;  cluster         2   25[BANK0 ] unsigned int 
 22927 ;;  return_code     1   29[BANK0 ] unsigned char 
 22928 ;; Return value:  Size  Location     Type
 22929 ;;                  1    wreg      unsigned char 
 22930 ;; Registers used:
 22931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 22932 ;; Tracked objects:
 22933 ;;		On entry : 0/0
 22934 ;;		On exit  : 0/0
 22935 ;;		Unchanged: 0/0
 22936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22937 ;;      Params:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22938 ;;      Locals:         0      38       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22939 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22940 ;;      Totals:         4      48       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22941 ;;Total ram usage:       52 bytes
 22942 ;; Hardware stack levels used:    1
 22943 ;; Hardware stack levels required when called:    8
 22944 ;; This function calls:
 22945 ;;		_fat_get_file_information
 22946 ;;		_fat_read_from_file_fast
 22947 ;; This function is called by:
 22948 ;;		__fill_buffer_read_file
 22949 ;; This function uses a non-reentrant model
 22950 ;;
 22951                           
 22952                           	psect	text104
 22953  004FDA                     __ptext104:
 22954                           	opt stack 0
 22955  004FDA                     _fat_read_from_file:
 22956                           	opt stack 20
 22957                           
 22958                           ; BSR set to: 0
 22959                           ;incstack = 0
 22960                           ;fat_read_from_file@file_number stored from wreg
 22961  004FDA  0100               	movlb	0	; () banked
 22962  004FDC  6F78               	movwf	fat_read_from_file@file_number& (0+255),b
 22963                           
 22964                           ;fat16.c: 749: rootEntry_t root;;fat16.c: 750: uint16_t cluster;;fat16.c: 751: uint16_t 
      +                          cluster_number;;fat16.c: 752: uint8_t return_code;;fat16.c: 755: return_code = fat_get_f
      +                          ile_information(file_number, &root);
 22965  004FDE  0E7E               	movlw	low fat_read_from_file@root
 22966  004FE0  6E30               	movwf	fat_get_file_information@data,c
 22967  004FE2  0E00               	movlw	high fat_read_from_file@root
 22968  004FE4  6E31               	movwf	fat_get_file_information@data+1,c
 22969  004FE6  0100               	movlb	0	; () banked
 22970  004FE8  5178               	movf	fat_read_from_file@file_number& (0+255),w,b
 22971  004FEA  EC2B  F03B         	call	_fat_get_file_information
 22972  004FEE  0100               	movlb	0	; () banked
 22973  004FF0  6F7D               	movwf	fat_read_from_file@return_code& (0+255),b
 22974                           
 22975                           ; BSR set to: 0
 22976                           ;fat16.c: 756: if(return_code!=0x00)
 22977  004FF2  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22978  004FF4  B4D8               	btfsc	status,2,c
 22979  004FF6  D002               	goto	l2091
 22980                           
 22981                           ; BSR set to: 0
 22982                           ;fat16.c: 757: {;fat16.c: 759: return return_code;
 22983  004FF8  517D               	movf	fat_read_from_file@return_code& (0+255),w,b
 22984                           
 22985                           ; BSR set to: 0
 22986  004FFA  0012               	return	
 22987  004FFC                     l2091:
 22988                           
 22989                           ; BSR set to: 0
 22990                           ;fat16.c: 760: };fat16.c: 763: if(start_byte > root.fileSize)
 22991                           
 22992                           ; BSR set to: 0
 22993  004FFC  516E               	movf	fat_read_from_file@start_byte& (0+255),w,b
 22994  004FFE  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 22995  005000  516F               	movf	(fat_read_from_file@start_byte+1)& (0+255),w,b
 22996  005002  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 22997  005004  5170               	movf	(fat_read_from_file@start_byte+2)& (0+255),w,b
 22998  005006  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 22999  005008  5171               	movf	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23000  00500A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23001  00500C  B0D8               	btfsc	status,0,c
 23002  00500E  D002               	goto	l2093
 23003                           
 23004                           ; BSR set to: 0
 23005                           ;fat16.c: 764: {;fat16.c: 766: return 0xFF;
 23006  005010  0EFF               	movlw	255
 23007                           
 23008                           ; BSR set to: 0
 23009  005012  0012               	return	
 23010  005014                     l2093:
 23011                           
 23012                           ; BSR set to: 0
 23013                           ;fat16.c: 767: };fat16.c: 769: if(start_byte+length > root.fileSize)
 23014                           
 23015                           ; BSR set to: 0
 23016  005014  5172               	movf	fat_read_from_file@length& (0+255),w,b
 23017  005016  256E               	addwf	fat_read_from_file@start_byte& (0+255),w,b
 23018  005018  6E5C               	movwf	??_fat_read_from_file& (0+255),c
 23019  00501A  5173               	movf	(fat_read_from_file@length+1)& (0+255),w,b
 23020  00501C  216F               	addwfc	(fat_read_from_file@start_byte+1)& (0+255),w,b
 23021  00501E  6E5D               	movwf	(??_fat_read_from_file+1)& (0+255),c
 23022  005020  5174               	movf	(fat_read_from_file@length+2)& (0+255),w,b
 23023  005022  2170               	addwfc	(fat_read_from_file@start_byte+2)& (0+255),w,b
 23024  005024  6E5E               	movwf	(??_fat_read_from_file+2)& (0+255),c
 23025  005026  5175               	movf	(fat_read_from_file@length+3)& (0+255),w,b
 23026  005028  2171               	addwfc	(fat_read_from_file@start_byte+3)& (0+255),w,b
 23027  00502A  6E5F               	movwf	(??_fat_read_from_file+3)& (0+255),c
 23028  00502C  505C               	movf	??_fat_read_from_file,w,c
 23029  00502E  5D9A               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 23030  005030  505D               	movf	??_fat_read_from_file+1,w,c
 23031  005032  599B               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 23032  005034  505E               	movf	??_fat_read_from_file+2,w,c
 23033  005036  599C               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 23034  005038  505F               	movf	??_fat_read_from_file+3,w,c
 23035  00503A  599D               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 23036  00503C  B0D8               	btfsc	status,0,c
 23037  00503E  D01D               	goto	l2094
 23038                           
 23039                           ; BSR set to: 0
 23040                           ;fat16.c: 770: {;fat16.c: 772: length = root.fileSize - start_byte;
 23041  005040  C06E  F05C         	movff	fat_read_from_file@start_byte,??_fat_read_from_file
 23042  005044  C06F  F05D         	movff	fat_read_from_file@start_byte+1,??_fat_read_from_file+1
 23043  005048  C070  F05E         	movff	fat_read_from_file@start_byte+2,??_fat_read_from_file+2
 23044  00504C  C071  F05F         	movff	fat_read_from_file@start_byte+3,??_fat_read_from_file+3
 23045  005050  1E5C               	comf	??_fat_read_from_file,f,c
 23046  005052  1E5D               	comf	??_fat_read_from_file+1,f,c
 23047  005054  1E5E               	comf	??_fat_read_from_file+2,f,c
 23048  005056  1E5F               	comf	??_fat_read_from_file+3,f,c
 23049  005058  2A5C               	incf	??_fat_read_from_file,f,c
 23050  00505A  0E00               	movlw	0
 23051  00505C  225D               	addwfc	??_fat_read_from_file+1,f,c
 23052  00505E  225E               	addwfc	??_fat_read_from_file+2,f,c
 23053  005060  225F               	addwfc	??_fat_read_from_file+3,f,c
 23054  005062  519A               	movf	(fat_read_from_file@root+28)& (0+255),w,b
 23055  005064  245C               	addwf	??_fat_read_from_file,w,c
 23056  005066  6F72               	movwf	fat_read_from_file@length& (0+255),b
 23057  005068  519B               	movf	(fat_read_from_file@root+29)& (0+255),w,b
 23058  00506A  205D               	addwfc	??_fat_read_from_file+1,w,c
 23059  00506C  6F73               	movwf	(fat_read_from_file@length+1)& (0+255),b
 23060  00506E  519C               	movf	(fat_read_from_file@root+30)& (0+255),w,b
 23061  005070  205E               	addwfc	??_fat_read_from_file+2,w,c
 23062  005072  6F74               	movwf	(fat_read_from_file@length+2)& (0+255),b
 23063  005074  519D               	movf	(fat_read_from_file@root+31)& (0+255),w,b
 23064  005076  205F               	addwfc	??_fat_read_from_file+3,w,c
 23065  005078  6F75               	movwf	(fat_read_from_file@length+3)& (0+255),b
 23066  00507A                     l2094:
 23067                           
 23068                           ; BSR set to: 0
 23069                           ;fat16.c: 773: };fat16.c: 776: cluster = root.firstCluster;
 23070                           
 23071                           ; BSR set to: 0
 23072  00507A  C098  F079         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 23073  00507E  C099  F07A         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 23074                           
 23075                           ; BSR set to: 0
 23076                           ;fat16.c: 777: cluster_number = 0;
 23077  005082  0E00               	movlw	0
 23078  005084  6F7C               	movwf	(fat_read_from_file@cluster_number+1)& (0+255),b
 23079  005086  0E00               	movlw	0
 23080  005088  6F7B               	movwf	fat_read_from_file@cluster_number& (0+255),b
 23081                           
 23082                           ; BSR set to: 0
 23083                           ;fat16.c: 780: return fat_read_from_file_fast(start_byte, length, data, &cluster, &clust
      +                          er_number);
 23084  00508A  C06E  F042         	movff	fat_read_from_file@start_byte,fat_read_from_file_fast@start_byte
 23085  00508E  C06F  F043         	movff	fat_read_from_file@start_byte+1,fat_read_from_file_fast@start_byte+1
 23086  005092  C070  F044         	movff	fat_read_from_file@start_byte+2,fat_read_from_file_fast@start_byte+2
 23087  005096  C071  F045         	movff	fat_read_from_file@start_byte+3,fat_read_from_file_fast@start_byte+3
 23088  00509A  C072  F046         	movff	fat_read_from_file@length,fat_read_from_file_fast@length
 23089  00509E  C073  F047         	movff	fat_read_from_file@length+1,fat_read_from_file_fast@length+1
 23090  0050A2  C074  F048         	movff	fat_read_from_file@length+2,fat_read_from_file_fast@length+2
 23091  0050A6  C075  F049         	movff	fat_read_from_file@length+3,fat_read_from_file_fast@length+3
 23092  0050AA  C076  F04A         	movff	fat_read_from_file@data,fat_read_from_file_fast@data
 23093  0050AE  C077  F04B         	movff	fat_read_from_file@data+1,fat_read_from_file_fast@data+1
 23094  0050B2  0E79               	movlw	low fat_read_from_file@cluster
 23095  0050B4  6E4C               	movwf	fat_read_from_file_fast@cluster,c
 23096  0050B6  0E00               	movlw	high fat_read_from_file@cluster
 23097  0050B8  6E4D               	movwf	fat_read_from_file_fast@cluster+1,c
 23098  0050BA  0E7B               	movlw	low fat_read_from_file@cluster_number
 23099  0050BC  6E4E               	movwf	fat_read_from_file_fast@cluster_number,c
 23100  0050BE  0E00               	movlw	high fat_read_from_file@cluster_number
 23101  0050C0  6E4F               	movwf	fat_read_from_file_fast@cluster_number+1,c
 23102  0050C2  EC5C  F012         	call	_fat_read_from_file_fast	;wreg free
 23103  0050C6  0012               	return	
 23104  0050C8                     __end_of_fat_read_from_file:
 23105                           	opt stack 0
 23106                           tosu	equ	0xFFF
 23107                           tosh	equ	0xFFE
 23108                           tosl	equ	0xFFD
 23109                           pclath	equ	0xFFA
 23110                           tblptru	equ	0xFF8
 23111                           tblptrh	equ	0xFF7
 23112                           tblptrl	equ	0xFF6
 23113                           tablat	equ	0xFF5
 23114                           prodh	equ	0xFF4
 23115                           prodl	equ	0xFF3
 23116                           intcon	equ	0xFF2
 23117                           intcon2	equ	0xFF1
 23118                           intcon3	equ	0xFF0
 23119                           indf0	equ	0xFEF
 23120                           postinc0	equ	0xFEE
 23121                           fsr0h	equ	0xFEA
 23122                           fsr0l	equ	0xFE9
 23123                           wreg	equ	0xFE8
 23124                           indf1	equ	0xFE7
 23125                           postdec1	equ	0xFE5
 23126                           plusw1	equ	0xFE3
 23127                           fsr1h	equ	0xFE2
 23128                           fsr1l	equ	0xFE1
 23129                           indf2	equ	0xFDF
 23130                           postinc2	equ	0xFDE
 23131                           postdec2	equ	0xFDD
 23132                           plusw2	equ	0xFDB
 23133                           fsr2h	equ	0xFDA
 23134                           fsr2l	equ	0xFD9
 23135                           status	equ	0xFD8
 23136                           
 23137 ;; *************** function _fat_read_from_file_fast *****************
 23138 ;; Defined at:
 23139 ;;		line 783 in file "fat16.c"
 23140 ;; Parameters:    Size  Location     Type
 23141 ;;  start_byte      4   65[COMRAM] unsigned long 
 23142 ;;  length          4   69[COMRAM] unsigned long 
 23143 ;;  data            2   73[COMRAM] PTR unsigned char 
 23144 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 23145 ;;  cluster         2   75[COMRAM] PTR unsigned int 
 23146 ;;		 -> fast_read_cluster(2), fat_read_from_file@cluster(2), 
 23147 ;;  cluster_numb    2   77[COMRAM] PTR unsigned int 
 23148 ;;		 -> fast_read_cluster_number(2), fat_read_from_file@cluster_number(2), 
 23149 ;; Auto vars:     Size  Location     Type
 23150 ;;  position        4   10[BANK0 ] unsigned long 
 23151 ;;  read_length     2    8[BANK0 ] unsigned int 
 23152 ;;  needed_clust    2    6[BANK0 ] unsigned int 
 23153 ;;  offset          2    4[BANK0 ] unsigned int 
 23154 ;;  working_clus    2    2[BANK0 ] unsigned int 
 23155 ;;  sector          2    0[BANK0 ] unsigned int 
 23156 ;; Return value:  Size  Location     Type
 23157 ;;                  1    wreg      unsigned char 
 23158 ;; Registers used:
 23159 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 23160 ;; Tracked objects:
 23161 ;;		On entry : 0/0
 23162 ;;		On exit  : 0/0
 23163 ;;		Unchanged: 0/0
 23164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23165 ;;      Params:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23166 ;;      Locals:         0      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23167 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23168 ;;      Totals:        26      14       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23169 ;;Total ram usage:       40 bytes
 23170 ;; Hardware stack levels used:    1
 23171 ;; Hardware stack levels required when called:    7
 23172 ;; This function calls:
 23173 ;;		__data_sector_from_cluster
 23174 ;;		__find_nth_cluster
 23175 ;;		__read_fat
 23176 ;;		_flash_partial_read
 23177 ;; This function is called by:
 23178 ;;		_fat_read_from_file
 23179 ;;		__bootloader_verify_file
 23180 ;;		__bootloader_program
 23181 ;; This function uses a non-reentrant model
 23182 ;;
 23183                           
 23184                           	psect	text105
 23185  0024B8                     __ptext105:
 23186                           	opt stack 0
 23187  0024B8                     _fat_read_from_file_fast:
 23188                           	opt stack 21
 23189                           
 23190                           ;fat16.c: 785: uint32_t position;;fat16.c: 786: uint16_t offset;;fat16.c: 787: uint16_t 
      +                          sector;;fat16.c: 788: uint16_t read_length;;fat16.c: 789: uint16_t working_cluster;;fat1
      +                          6.c: 790: uint16_t needed_cluster;;fat16.c: 793: needed_cluster = (uint16_t) (start_byte
      +                          >>9);
 23191                           
 23192                           ;incstack = 0
 23193  0024B8  C042  F050         	movff	fat_read_from_file_fast@start_byte,??_fat_read_from_file_fast
 23194  0024BC  C043  F051         	movff	fat_read_from_file_fast@start_byte+1,??_fat_read_from_file_fast+1
 23195  0024C0  C044  F052         	movff	fat_read_from_file_fast@start_byte+2,??_fat_read_from_file_fast+2
 23196  0024C4  C045  F053         	movff	fat_read_from_file_fast@start_byte+3,??_fat_read_from_file_fast+3
 23197  0024C8  0E0A               	movlw	10
 23198  0024CA  D005               	goto	u10220
 23199  0024CC                     u10225:
 23200  0024CC  90D8               	bcf	status,0,c
 23201  0024CE  3253               	rrcf	??_fat_read_from_file_fast+3,f,c
 23202  0024D0  3252               	rrcf	??_fat_read_from_file_fast+2,f,c
 23203  0024D2  3251               	rrcf	??_fat_read_from_file_fast+1,f,c
 23204  0024D4  3250               	rrcf	??_fat_read_from_file_fast,f,c
 23205  0024D6                     u10220:
 23206  0024D6  2EE8               	decfsz	wreg,f,c
 23207  0024D8  D7F9               	goto	u10225
 23208  0024DA  C050  F066         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@needed_cluster
 23209  0024DE  C051  F067         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@needed_cluster+1
 23210                           
 23211                           ;fat16.c: 796: if((*cluster_number) > needed_cluster)
 23212  0024E2  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23213  0024E6  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23214  0024EA  50DE               	movf	postinc2,w,c
 23215  0024EC  0100               	movlb	0	; () banked
 23216  0024EE  5D66               	subwf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23217  0024F0  50DE               	movf	postinc2,w,c
 23218  0024F2  5967               	subwfb	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23219  0024F4  B0D8               	btfsc	status,0,c
 23220  0024F6  D002               	goto	l2097
 23221                           
 23222                           ; BSR set to: 0
 23223                           ;fat16.c: 797: {;fat16.c: 798: return 0xFF;
 23224  0024F8  0EFF               	movlw	255
 23225                           
 23226                           ; BSR set to: 0
 23227  0024FA  0012               	return	
 23228  0024FC                     l2097:
 23229                           
 23230                           ; BSR set to: 0
 23231                           ;fat16.c: 799: };fat16.c: 802: (*cluster) = _find_nth_cluster((*cluster), (needed_cluste
      +                          r-(*cluster_number)));
 23232                           
 23233                           ; BSR set to: 0
 23234  0024FC  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23235  002500  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23236  002504  CFDE F038          	movff	postinc2,__find_nth_cluster@cluster
 23237  002508  CFDD F039          	movff	postdec2,__find_nth_cluster@cluster+1
 23238  00250C  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23239  002510  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23240  002514  CFDE F050          	movff	postinc2,??_fat_read_from_file_fast
 23241  002518  CFDD F051          	movff	postdec2,??_fat_read_from_file_fast+1
 23242  00251C  1E50               	comf	??_fat_read_from_file_fast,f,c
 23243  00251E  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23244  002520  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23245  002522  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23246  002524  5166               	movf	fat_read_from_file_fast@needed_cluster& (0+255),w,b
 23247  002526  2450               	addwf	??_fat_read_from_file_fast,w,c
 23248  002528  6E3A               	movwf	__find_nth_cluster@n,c
 23249  00252A  5167               	movf	(fat_read_from_file_fast@needed_cluster+1)& (0+255),w,b
 23250  00252C  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23251  00252E  6E3B               	movwf	__find_nth_cluster@n+1,c
 23252  002530  ECCB  F035         	call	__find_nth_cluster	;wreg free
 23253  002534  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23254  002538  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23255  00253C  C038  FFDE         	movff	?__find_nth_cluster,postinc2
 23256  002540  C039  FFDD         	movff	?__find_nth_cluster+1,postdec2
 23257                           
 23258                           ;fat16.c: 805: (*cluster_number) = needed_cluster;
 23259  002544  C04E  FFD9         	movff	fat_read_from_file_fast@cluster_number,fsr2l
 23260  002548  C04F  FFDA         	movff	fat_read_from_file_fast@cluster_number+1,fsr2h
 23261  00254C  C066  FFDE         	movff	fat_read_from_file_fast@needed_cluster,postinc2
 23262  002550  C067  FFDD         	movff	fat_read_from_file_fast@needed_cluster+1,postdec2
 23263                           
 23264                           ;fat16.c: 809: working_cluster = (*cluster);
 23265  002554  C04C  FFD9         	movff	fat_read_from_file_fast@cluster,fsr2l
 23266  002558  C04D  FFDA         	movff	fat_read_from_file_fast@cluster+1,fsr2h
 23267  00255C  CFDE F062          	movff	postinc2,fat_read_from_file_fast@working_cluster
 23268  002560  CFDD F063          	movff	postdec2,fat_read_from_file_fast@working_cluster+1
 23269                           
 23270                           ;fat16.c: 812: position = (needed_cluster << 9);
 23271  002564  C066  F050         	movff	fat_read_from_file_fast@needed_cluster,??_fat_read_from_file_fast
 23272  002568  C067  F051         	movff	fat_read_from_file_fast@needed_cluster+1,??_fat_read_from_file_fast+1
 23273  00256C  0E09               	movlw	9
 23274  00256E                     u10245:
 23275  00256E  90D8               	bcf	status,0,c
 23276  002570  3650               	rlcf	??_fat_read_from_file_fast,f,c
 23277  002572  3651               	rlcf	??_fat_read_from_file_fast+1,f,c
 23278  002574  2EE8               	decfsz	wreg,f,c
 23279  002576  D7FB               	goto	u10245
 23280  002578  C050  F06A         	movff	??_fat_read_from_file_fast,fat_read_from_file_fast@position
 23281  00257C  C051  F06B         	movff	??_fat_read_from_file_fast+1,fat_read_from_file_fast@position+1
 23282  002580  0100               	movlb	0	; () banked
 23283  002582  6B6C               	clrf	(fat_read_from_file_fast@position+2)& (0+255),b
 23284  002584  6B6D               	clrf	(fat_read_from_file_fast@position+3)& (0+255),b
 23285                           
 23286                           ; BSR set to: 0
 23287                           ;fat16.c: 813: offset = start_byte - position;
 23288  002586  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23289  00258A  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23290  00258E  1E50               	comf	??_fat_read_from_file_fast,f,c
 23291  002590  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23292  002592  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23293  002594  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23294  002596  5042               	movf	fat_read_from_file_fast@start_byte,w,c
 23295  002598  2450               	addwf	??_fat_read_from_file_fast,w,c
 23296  00259A  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23297  00259C  5043               	movf	fat_read_from_file_fast@start_byte+1,w,c
 23298  00259E  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23299  0025A0  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23300                           
 23301                           ; BSR set to: 0
 23302                           ;fat16.c: 816: position = 0;
 23303  0025A2  0E00               	movlw	0
 23304  0025A4  6F6A               	movwf	fat_read_from_file_fast@position& (0+255),b
 23305  0025A6  0E00               	movlw	0
 23306  0025A8  6F6B               	movwf	(fat_read_from_file_fast@position+1)& (0+255),b
 23307  0025AA  0E00               	movlw	0
 23308  0025AC  6F6C               	movwf	(fat_read_from_file_fast@position+2)& (0+255),b
 23309  0025AE  0E00               	movlw	0
 23310  0025B0  6F6D               	movwf	(fat_read_from_file_fast@position+3)& (0+255),b
 23311                           
 23312                           ;fat16.c: 817: while(position < length)
 23313  0025B2  D089               	goto	l2099
 23314  0025B4                     
 23315                           ; BSR set to: 0
 23316                           ;fat16.c: 818: {;fat16.c: 820: if(offset==512)
 23317                           
 23318                           ; BSR set to: 0
 23319  0025B4  0E02               	movlw	2
 23320  0025B6  1965               	xorwf	(fat_read_from_file_fast@offset+1)& (0+255),w,b
 23321  0025B8  1164               	iorwf	fat_read_from_file_fast@offset& (0+255),w,b
 23322  0025BA  A4D8               	btfss	status,2,c
 23323  0025BC  D00F               	goto	l2101
 23324                           
 23325                           ; BSR set to: 0
 23326                           ;fat16.c: 821: {;fat16.c: 823: working_cluster = _read_fat(working_cluster);
 23327  0025BE  C062  F030         	movff	fat_read_from_file_fast@working_cluster,__read_fat@cluster
 23328  0025C2  C063  F031         	movff	fat_read_from_file_fast@working_cluster+1,__read_fat@cluster+1
 23329  0025C6  EC15  F040         	call	__read_fat	;wreg free
 23330  0025CA  C030  F062         	movff	?__read_fat,fat_read_from_file_fast@working_cluster
 23331  0025CE  C031  F063         	movff	?__read_fat+1,fat_read_from_file_fast@working_cluster+1
 23332                           
 23333                           ;fat16.c: 824: offset = 0;
 23334  0025D2  0E00               	movlw	0
 23335  0025D4  0100               	movlb	0	; () banked
 23336  0025D6  6F65               	movwf	(fat_read_from_file_fast@offset+1)& (0+255),b
 23337  0025D8  0E00               	movlw	0
 23338  0025DA  6F64               	movwf	fat_read_from_file_fast@offset& (0+255),b
 23339  0025DC                     l2101:
 23340                           
 23341                           ; BSR set to: 0
 23342                           ;fat16.c: 825: };fat16.c: 828: sector = _data_sector_from_cluster(working_cluster);
 23343                           
 23344                           ; BSR set to: 0
 23345  0025DC  C062  F001         	movff	fat_read_from_file_fast@working_cluster,__data_sector_from_cluster@fat_cluster
 23346  0025E0  C063  F002         	movff	fat_read_from_file_fast@working_cluster+1,__data_sector_from_cluster@fat_cluster+
      +                          1
 23347  0025E4  ECB3  F047         	call	__data_sector_from_cluster	;wreg free
 23348  0025E8  C001  F060         	movff	?__data_sector_from_cluster,fat_read_from_file_fast@sector
 23349  0025EC  C002  F061         	movff	?__data_sector_from_cluster+1,fat_read_from_file_fast@sector+1
 23350                           
 23351                           ;fat16.c: 831: read_length = 512 - offset;
 23352  0025F0  C064  F050         	movff	fat_read_from_file_fast@offset,??_fat_read_from_file_fast
 23353  0025F4  C065  F051         	movff	fat_read_from_file_fast@offset+1,??_fat_read_from_file_fast+1
 23354  0025F8  1E50               	comf	??_fat_read_from_file_fast,f,c
 23355  0025FA  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23356  0025FC  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23357  0025FE  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23358  002600  0E00               	movlw	0
 23359  002602  2450               	addwf	??_fat_read_from_file_fast,w,c
 23360  002604  0100               	movlb	0	; () banked
 23361  002606  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23362  002608  0E02               	movlw	2
 23363  00260A  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23364  00260C  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23365                           
 23366                           ; BSR set to: 0
 23367                           ;fat16.c: 832: if(read_length > (length-position))
 23368  00260E  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23369  002610  6E50               	movwf	??_fat_read_from_file_fast& (0+255),c
 23370  002612  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23371  002614  6E51               	movwf	(??_fat_read_from_file_fast+1)& (0+255),c
 23372  002616  6A52               	clrf	(??_fat_read_from_file_fast+2)& (0+255),c
 23373  002618  6A53               	clrf	(??_fat_read_from_file_fast+3)& (0+255),c
 23374  00261A  C06A  F054         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast+4
 23375  00261E  C06B  F055         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+5
 23376  002622  C06C  F056         	movff	fat_read_from_file_fast@position+2,??_fat_read_from_file_fast+6
 23377  002626  C06D  F057         	movff	fat_read_from_file_fast@position+3,??_fat_read_from_file_fast+7
 23378  00262A  1E54               	comf	??_fat_read_from_file_fast+4,f,c
 23379  00262C  1E55               	comf	??_fat_read_from_file_fast+5,f,c
 23380  00262E  1E56               	comf	??_fat_read_from_file_fast+6,f,c
 23381  002630  1E57               	comf	??_fat_read_from_file_fast+7,f,c
 23382  002632  2A54               	incf	??_fat_read_from_file_fast+4,f,c
 23383  002634  0E00               	movlw	0
 23384  002636  2255               	addwfc	??_fat_read_from_file_fast+5,f,c
 23385  002638  2256               	addwfc	??_fat_read_from_file_fast+6,f,c
 23386  00263A  2257               	addwfc	??_fat_read_from_file_fast+7,f,c
 23387  00263C  5046               	movf	fat_read_from_file_fast@length,w,c
 23388  00263E  2454               	addwf	??_fat_read_from_file_fast+4,w,c
 23389  002640  6E58               	movwf	(??_fat_read_from_file_fast+8)& (0+255),c
 23390  002642  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23391  002644  2055               	addwfc	??_fat_read_from_file_fast+5,w,c
 23392  002646  6E59               	movwf	(??_fat_read_from_file_fast+9)& (0+255),c
 23393  002648  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23394  00264A  2056               	addwfc	??_fat_read_from_file_fast+6,w,c
 23395  00264C  6E5A               	movwf	(??_fat_read_from_file_fast+10)& (0+255),c
 23396  00264E  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23397  002650  2057               	addwfc	??_fat_read_from_file_fast+7,w,c
 23398  002652  6E5B               	movwf	(??_fat_read_from_file_fast+11)& (0+255),c
 23399  002654  5050               	movf	??_fat_read_from_file_fast,w,c
 23400  002656  5C58               	subwf	??_fat_read_from_file_fast+8,w,c
 23401  002658  5051               	movf	??_fat_read_from_file_fast+1,w,c
 23402  00265A  5859               	subwfb	??_fat_read_from_file_fast+9,w,c
 23403  00265C  5052               	movf	??_fat_read_from_file_fast+2,w,c
 23404  00265E  585A               	subwfb	??_fat_read_from_file_fast+10,w,c
 23405  002660  5053               	movf	??_fat_read_from_file_fast+3,w,c
 23406  002662  585B               	subwfb	??_fat_read_from_file_fast+11,w,c
 23407  002664  B0D8               	btfsc	status,0,c
 23408  002666  D00E               	goto	l2102
 23409                           
 23410                           ; BSR set to: 0
 23411                           ;fat16.c: 833: {;fat16.c: 835: read_length = length - position;
 23412  002668  C06A  F050         	movff	fat_read_from_file_fast@position,??_fat_read_from_file_fast
 23413  00266C  C06B  F051         	movff	fat_read_from_file_fast@position+1,??_fat_read_from_file_fast+1
 23414  002670  1E50               	comf	??_fat_read_from_file_fast,f,c
 23415  002672  1E51               	comf	??_fat_read_from_file_fast+1,f,c
 23416  002674  4A50               	infsnz	??_fat_read_from_file_fast,f,c
 23417  002676  2A51               	incf	??_fat_read_from_file_fast+1,f,c
 23418  002678  5046               	movf	fat_read_from_file_fast@length,w,c
 23419  00267A  2450               	addwf	??_fat_read_from_file_fast,w,c
 23420  00267C  6F68               	movwf	fat_read_from_file_fast@read_length& (0+255),b
 23421  00267E  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23422  002680  2051               	addwfc	??_fat_read_from_file_fast+1,w,c
 23423  002682  6F69               	movwf	(fat_read_from_file_fast@read_length+1)& (0+255),b
 23424  002684                     l2102:
 23425                           
 23426                           ; BSR set to: 0
 23427                           ;fat16.c: 836: };fat16.c: 839: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 23428                           
 23429                           ; BSR set to: 0
 23430  002684  C060  F028         	movff	fat_read_from_file_fast@sector,flash_partial_read@page
 23431  002688  C061  F029         	movff	fat_read_from_file_fast@sector+1,flash_partial_read@page+1
 23432  00268C  C064  F02A         	movff	fat_read_from_file_fast@offset,flash_partial_read@start
 23433  002690  C065  F02B         	movff	fat_read_from_file_fast@offset+1,flash_partial_read@start+1
 23434  002694  C068  F02C         	movff	fat_read_from_file_fast@read_length,flash_partial_read@length
 23435  002698  C069  F02D         	movff	fat_read_from_file_fast@read_length+1,flash_partial_read@length+1
 23436  00269C  516A               	movf	fat_read_from_file_fast@position& (0+255),w,b
 23437  00269E  244A               	addwf	fat_read_from_file_fast@data,w,c
 23438  0026A0  6E2E               	movwf	flash_partial_read@data,c
 23439  0026A2  516B               	movf	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23440  0026A4  204B               	addwfc	fat_read_from_file_fast@data+1,w,c
 23441  0026A6  6E2F               	movwf	flash_partial_read@data+1,c
 23442  0026A8  EC80  F044         	call	_flash_partial_read	;wreg free
 23443                           
 23444                           ;fat16.c: 842: position += read_length;
 23445  0026AC  0100               	movlb	0	; () banked
 23446  0026AE  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23447  0026B0  276A               	addwf	fat_read_from_file_fast@position& (0+255),f,b
 23448  0026B2  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23449  0026B4  236B               	addwfc	(fat_read_from_file_fast@position+1)& (0+255),f,b
 23450  0026B6  0E00               	movlw	0
 23451  0026B8  236C               	addwfc	(fat_read_from_file_fast@position+2)& (0+255),f,b
 23452  0026BA  0E00               	movlw	0
 23453  0026BC  236D               	addwfc	(fat_read_from_file_fast@position+3)& (0+255),f,b
 23454                           
 23455                           ; BSR set to: 0
 23456                           ;fat16.c: 843: offset += read_length;
 23457  0026BE  5168               	movf	fat_read_from_file_fast@read_length& (0+255),w,b
 23458  0026C0  2764               	addwf	fat_read_from_file_fast@offset& (0+255),f,b
 23459  0026C2  5169               	movf	(fat_read_from_file_fast@read_length+1)& (0+255),w,b
 23460  0026C4  2365               	addwfc	(fat_read_from_file_fast@offset+1)& (0+255),f,b
 23461  0026C6                     l2099:
 23462                           
 23463                           ; BSR set to: 0
 23464                           
 23465                           ; BSR set to: 0
 23466  0026C6  5046               	movf	fat_read_from_file_fast@length,w,c
 23467  0026C8  5D6A               	subwf	fat_read_from_file_fast@position& (0+255),w,b
 23468  0026CA  5047               	movf	fat_read_from_file_fast@length+1,w,c
 23469  0026CC  596B               	subwfb	(fat_read_from_file_fast@position+1)& (0+255),w,b
 23470  0026CE  5048               	movf	fat_read_from_file_fast@length+2,w,c
 23471  0026D0  596C               	subwfb	(fat_read_from_file_fast@position+2)& (0+255),w,b
 23472  0026D2  5049               	movf	fat_read_from_file_fast@length+3,w,c
 23473  0026D4  596D               	subwfb	(fat_read_from_file_fast@position+3)& (0+255),w,b
 23474  0026D6  A0D8               	btfss	status,0,c
 23475  0026D8  D76D               	goto	l2100
 23476                           
 23477                           ; BSR set to: 0
 23478                           ;fat16.c: 844: };fat16.c: 847: return 0x00;
 23479                           
 23480                           ; BSR set to: 0
 23481  0026DA  0E00               	movlw	0
 23482  0026DC  0012               	return	
 23483  0026DE                     __end_of_fat_read_from_file_fast:
 23484                           	opt stack 0
 23485                           tosu	equ	0xFFF
 23486                           tosh	equ	0xFFE
 23487                           tosl	equ	0xFFD
 23488                           pclath	equ	0xFFA
 23489                           tblptru	equ	0xFF8
 23490                           tblptrh	equ	0xFF7
 23491                           tblptrl	equ	0xFF6
 23492                           tablat	equ	0xFF5
 23493                           prodh	equ	0xFF4
 23494                           prodl	equ	0xFF3
 23495                           intcon	equ	0xFF2
 23496                           intcon2	equ	0xFF1
 23497                           intcon3	equ	0xFF0
 23498                           indf0	equ	0xFEF
 23499                           postinc0	equ	0xFEE
 23500                           fsr0h	equ	0xFEA
 23501                           fsr0l	equ	0xFE9
 23502                           wreg	equ	0xFE8
 23503                           indf1	equ	0xFE7
 23504                           postdec1	equ	0xFE5
 23505                           plusw1	equ	0xFE3
 23506                           fsr1h	equ	0xFE2
 23507                           fsr1l	equ	0xFE1
 23508                           indf2	equ	0xFDF
 23509                           postinc2	equ	0xFDE
 23510                           postdec2	equ	0xFDD
 23511                           plusw2	equ	0xFDB
 23512                           fsr2h	equ	0xFDA
 23513                           fsr2l	equ	0xFD9
 23514                           status	equ	0xFD8
 23515                           
 23516 ;; *************** function __fill_buffer_read_buffer *****************
 23517 ;; Defined at:
 23518 ;;		line 440 in file "api.c"
 23519 ;; Parameters:    Size  Location     Type
 23520 ;;  inBuffer        2   42[COMRAM] PTR unsigned char 
 23521 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 23522 ;;  outBuffer       2   44[COMRAM] PTR unsigned char 
 23523 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23524 ;; Auto vars:     Size  Location     Type
 23525 ;;  data_length     2   50[COMRAM] unsigned int 
 23526 ;;  start           2   48[COMRAM] unsigned int 
 23527 ;; Return value:  Size  Location     Type
 23528 ;;                  1    wreg      void 
 23529 ;; Registers used:
 23530 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 23531 ;; Tracked objects:
 23532 ;;		On entry : 0/0
 23533 ;;		On exit  : 0/0
 23534 ;;		Unchanged: 0/0
 23535 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23536 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23537 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23538 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23539 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23540 ;;Total ram usage:       10 bytes
 23541 ;; Hardware stack levels used:    1
 23542 ;; Hardware stack levels required when called:    6
 23543 ;; This function calls:
 23544 ;;		_fat_read_from_buffer
 23545 ;; This function is called by:
 23546 ;;		_api_prepare
 23547 ;; This function uses a non-reentrant model
 23548 ;;
 23549                           
 23550                           	psect	text106
 23551  004EE4                     __ptext106:
 23552                           	opt stack 0
 23553  004EE4                     __fill_buffer_read_buffer:
 23554                           	opt stack 23
 23555                           
 23556                           ;api.c: 442: uint16_t start;;api.c: 443: uint16_t data_length;;api.c: 446: outBuffer[0] 
      +                          = DATAREQUEST_READ_BUFFER;
 23557                           
 23558                           ; BSR set to: 0
 23559                           ;incstack = 0
 23560  004EE4  C02D  FFD9         	movff	__fill_buffer_read_buffer@outBuffer,fsr2l
 23561  004EE8  C02E  FFDA         	movff	__fill_buffer_read_buffer@outBuffer+1,fsr2h
 23562  004EEC  0E83               	movlw	131
 23563  004EEE  6EDF               	movwf	indf2,c
 23564                           
 23565                           ;api.c: 449: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 23566  004EF0  EE20 F001          	lfsr	2,1
 23567  004EF4  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23568  004EF6  26D9               	addwf	fsr2l,f,c
 23569  004EF8  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23570  004EFA  22DA               	addwfc	fsr2h,f,c
 23571  004EFC  0EC1               	movlw	193
 23572  004EFE  6EDF               	movwf	indf2,c
 23573                           
 23574                           ;api.c: 450: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 23575  004F00  EE20 F002          	lfsr	2,2
 23576  004F04  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23577  004F06  26D9               	addwf	fsr2l,f,c
 23578  004F08  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23579  004F0A  22DA               	addwfc	fsr2h,f,c
 23580  004F0C  0E25               	movlw	37
 23581  004F0E  6EDF               	movwf	indf2,c
 23582                           
 23583                           ;api.c: 453: outBuffer[3] = inBuffer[1];
 23584  004F10  EE20 F001          	lfsr	2,1
 23585  004F14  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23586  004F16  26D9               	addwf	fsr2l,f,c
 23587  004F18  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23588  004F1A  22DA               	addwfc	fsr2h,f,c
 23589  004F1C  EE10 F003          	lfsr	1,3
 23590  004F20  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23591  004F22  26E1               	addwf	fsr1l,f,c
 23592  004F24  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23593  004F26  22E2               	addwfc	fsr1h,f,c
 23594  004F28  CFDF FFE7          	movff	indf2,indf1
 23595                           
 23596                           ;api.c: 454: outBuffer[4] = inBuffer[2];
 23597  004F2C  EE20 F002          	lfsr	2,2
 23598  004F30  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23599  004F32  26D9               	addwf	fsr2l,f,c
 23600  004F34  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23601  004F36  22DA               	addwfc	fsr2h,f,c
 23602  004F38  EE10 F004          	lfsr	1,4
 23603  004F3C  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23604  004F3E  26E1               	addwf	fsr1l,f,c
 23605  004F40  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23606  004F42  22E2               	addwfc	fsr1h,f,c
 23607  004F44  CFDF FFE7          	movff	indf2,indf1
 23608                           
 23609                           ;api.c: 457: start = inBuffer[1];
 23610  004F48  EE20 F001          	lfsr	2,1
 23611  004F4C  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23612  004F4E  26D9               	addwf	fsr2l,f,c
 23613  004F50  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23614  004F52  22DA               	addwfc	fsr2h,f,c
 23615  004F54  50DF               	movf	indf2,w,c
 23616  004F56  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23617  004F58  502F               	movf	??__fill_buffer_read_buffer,w,c
 23618  004F5A  6E31               	movwf	__fill_buffer_read_buffer@start,c
 23619  004F5C  6A32               	clrf	__fill_buffer_read_buffer@start+1,c
 23620                           
 23621                           ;api.c: 458: start <<= 8;
 23622  004F5E  5031               	movf	__fill_buffer_read_buffer@start,w,c
 23623  004F60  6E32               	movwf	__fill_buffer_read_buffer@start+1,c
 23624  004F62  6A31               	clrf	__fill_buffer_read_buffer@start,c
 23625                           
 23626                           ;api.c: 459: start |= inBuffer[2];
 23627  004F64  EE20 F002          	lfsr	2,2
 23628  004F68  502B               	movf	__fill_buffer_read_buffer@inBuffer,w,c
 23629  004F6A  26D9               	addwf	fsr2l,f,c
 23630  004F6C  502C               	movf	__fill_buffer_read_buffer@inBuffer+1,w,c
 23631  004F6E  22DA               	addwfc	fsr2h,f,c
 23632  004F70  50DF               	movf	indf2,w,c
 23633  004F72  6E2F               	movwf	??__fill_buffer_read_buffer& (0+255),c
 23634  004F74  502F               	movf	??__fill_buffer_read_buffer,w,c
 23635  004F76  1231               	iorwf	__fill_buffer_read_buffer@start,f,c
 23636                           
 23637                           ;api.c: 462: data_length = 512 - start;
 23638  004F78  C031  F02F         	movff	__fill_buffer_read_buffer@start,??__fill_buffer_read_buffer
 23639  004F7C  C032  F030         	movff	__fill_buffer_read_buffer@start+1,??__fill_buffer_read_buffer+1
 23640  004F80  1E2F               	comf	??__fill_buffer_read_buffer,f,c
 23641  004F82  1E30               	comf	??__fill_buffer_read_buffer+1,f,c
 23642  004F84  4A2F               	infsnz	??__fill_buffer_read_buffer,f,c
 23643  004F86  2A30               	incf	??__fill_buffer_read_buffer+1,f,c
 23644  004F88  0E00               	movlw	0
 23645  004F8A  242F               	addwf	??__fill_buffer_read_buffer,w,c
 23646  004F8C  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 23647  004F8E  0E02               	movlw	2
 23648  004F90  2030               	addwfc	??__fill_buffer_read_buffer+1,w,c
 23649  004F92  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23650                           
 23651                           ;api.c: 463: if(data_length>54)
 23652  004F94  5034               	movf	__fill_buffer_read_buffer@data_length+1,w,c
 23653  004F96  E104               	bnz	u11650
 23654  004F98  0E37               	movlw	55
 23655  004F9A  5C33               	subwf	__fill_buffer_read_buffer@data_length,w,c
 23656  004F9C  A0D8               	btfss	status,0,c
 23657  004F9E  D004               	goto	l2778
 23658  004FA0                     u11650:
 23659                           
 23660                           ;api.c: 464: {;api.c: 466: data_length = 58;
 23661  004FA0  0E00               	movlw	0
 23662  004FA2  6E34               	movwf	__fill_buffer_read_buffer@data_length+1,c
 23663  004FA4  0E3A               	movlw	58
 23664  004FA6  6E33               	movwf	__fill_buffer_read_buffer@data_length,c
 23665  004FA8                     l2778:
 23666                           
 23667                           ;api.c: 467: };api.c: 470: outBuffer[5] = (uint8_t) data_length;
 23668  004FA8  EE20 F005          	lfsr	2,5
 23669  004FAC  502D               	movf	__fill_buffer_read_buffer@outBuffer,w,c
 23670  004FAE  26D9               	addwf	fsr2l,f,c
 23671  004FB0  502E               	movf	__fill_buffer_read_buffer@outBuffer+1,w,c
 23672  004FB2  22DA               	addwfc	fsr2h,f,c
 23673  004FB4  C033  FFDF         	movff	__fill_buffer_read_buffer@data_length,indf2
 23674                           
 23675                           ;api.c: 473: fat_read_from_buffer(start, data_length, &outBuffer[6]);
 23676  004FB8  C031  F025         	movff	__fill_buffer_read_buffer@start,fat_read_from_buffer@start
 23677  004FBC  C032  F026         	movff	__fill_buffer_read_buffer@start+1,fat_read_from_buffer@start+1
 23678  004FC0  C033  F027         	movff	__fill_buffer_read_buffer@data_length,fat_read_from_buffer@length
 23679  004FC4  C034  F028         	movff	__fill_buffer_read_buffer@data_length+1,fat_read_from_buffer@length+1
 23680  004FC8  0E06               	movlw	6
 23681  004FCA  242D               	addwf	__fill_buffer_read_buffer@outBuffer,w,c
 23682  004FCC  6E29               	movwf	fat_read_from_buffer@data,c
 23683  004FCE  0E00               	movlw	0
 23684  004FD0  202E               	addwfc	__fill_buffer_read_buffer@outBuffer+1,w,c
 23685  004FD2  6E2A               	movwf	fat_read_from_buffer@data+1,c
 23686  004FD4  ECA2  F046         	call	_fat_read_from_buffer	;wreg free
 23687  004FD8  0012               	return		;funcret
 23688  004FDA                     __end_of__fill_buffer_read_buffer:
 23689                           	opt stack 0
 23690                           tosu	equ	0xFFF
 23691                           tosh	equ	0xFFE
 23692                           tosl	equ	0xFFD
 23693                           pclath	equ	0xFFA
 23694                           tblptru	equ	0xFF8
 23695                           tblptrh	equ	0xFF7
 23696                           tblptrl	equ	0xFF6
 23697                           tablat	equ	0xFF5
 23698                           prodh	equ	0xFF4
 23699                           prodl	equ	0xFF3
 23700                           intcon	equ	0xFF2
 23701                           intcon2	equ	0xFF1
 23702                           intcon3	equ	0xFF0
 23703                           indf0	equ	0xFEF
 23704                           postinc0	equ	0xFEE
 23705                           fsr0h	equ	0xFEA
 23706                           fsr0l	equ	0xFE9
 23707                           wreg	equ	0xFE8
 23708                           indf1	equ	0xFE7
 23709                           postdec1	equ	0xFE5
 23710                           plusw1	equ	0xFE3
 23711                           fsr1h	equ	0xFE2
 23712                           fsr1l	equ	0xFE1
 23713                           indf2	equ	0xFDF
 23714                           postinc2	equ	0xFDE
 23715                           postdec2	equ	0xFDD
 23716                           plusw2	equ	0xFDB
 23717                           fsr2h	equ	0xFDA
 23718                           fsr2l	equ	0xFD9
 23719                           status	equ	0xFD8
 23720                           
 23721 ;; *************** function _fat_read_from_buffer *****************
 23722 ;; Defined at:
 23723 ;;		line 1434 in file "fat16.c"
 23724 ;; Parameters:    Size  Location     Type
 23725 ;;  start           2   36[COMRAM] unsigned int 
 23726 ;;  length          2   38[COMRAM] unsigned int 
 23727 ;;  data            2   40[COMRAM] PTR unsigned char 
 23728 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23729 ;; Auto vars:     Size  Location     Type
 23730 ;;		None
 23731 ;; Return value:  Size  Location     Type
 23732 ;;                  1    wreg      void 
 23733 ;; Registers used:
 23734 ;;		wreg, status,2, status,0, cstack
 23735 ;; Tracked objects:
 23736 ;;		On entry : 0/0
 23737 ;;		On exit  : 0/0
 23738 ;;		Unchanged: 0/0
 23739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23740 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23741 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23742 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23743 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23744 ;;Total ram usage:        6 bytes
 23745 ;; Hardware stack levels used:    1
 23746 ;; Hardware stack levels required when called:    5
 23747 ;; This function calls:
 23748 ;;		_flash_read_from_buffer
 23749 ;; This function is called by:
 23750 ;;		__fill_buffer_read_buffer
 23751 ;; This function uses a non-reentrant model
 23752 ;;
 23753                           
 23754                           	psect	text107
 23755  008D44                     __ptext107:
 23756                           	opt stack 0
 23757  008D44                     _fat_read_from_buffer:
 23758                           	opt stack 23
 23759                           
 23760                           ;fat16.c: 1436: flash_read_from_buffer(start, length, data);
 23761                           
 23762                           ;incstack = 0
 23763  008D44  C025  F01F         	movff	fat_read_from_buffer@start,flash_read_from_buffer@start
 23764  008D48  C026  F020         	movff	fat_read_from_buffer@start+1,flash_read_from_buffer@start+1
 23765  008D4C  C027  F021         	movff	fat_read_from_buffer@length,flash_read_from_buffer@length
 23766  008D50  C028  F022         	movff	fat_read_from_buffer@length+1,flash_read_from_buffer@length+1
 23767  008D54  C029  F023         	movff	fat_read_from_buffer@data,flash_read_from_buffer@data
 23768  008D58  C02A  F024         	movff	fat_read_from_buffer@data+1,flash_read_from_buffer@data+1
 23769  008D5C  ECE1  F044         	call	_flash_read_from_buffer	;wreg free
 23770  008D60  0012               	return		;funcret
 23771  008D62                     __end_of_fat_read_from_buffer:
 23772                           	opt stack 0
 23773                           tosu	equ	0xFFF
 23774                           tosh	equ	0xFFE
 23775                           tosl	equ	0xFFD
 23776                           pclath	equ	0xFFA
 23777                           tblptru	equ	0xFF8
 23778                           tblptrh	equ	0xFF7
 23779                           tblptrl	equ	0xFF6
 23780                           tablat	equ	0xFF5
 23781                           prodh	equ	0xFF4
 23782                           prodl	equ	0xFF3
 23783                           intcon	equ	0xFF2
 23784                           intcon2	equ	0xFF1
 23785                           intcon3	equ	0xFF0
 23786                           indf0	equ	0xFEF
 23787                           postinc0	equ	0xFEE
 23788                           fsr0h	equ	0xFEA
 23789                           fsr0l	equ	0xFE9
 23790                           wreg	equ	0xFE8
 23791                           indf1	equ	0xFE7
 23792                           postdec1	equ	0xFE5
 23793                           plusw1	equ	0xFE3
 23794                           fsr1h	equ	0xFE2
 23795                           fsr1l	equ	0xFE1
 23796                           indf2	equ	0xFDF
 23797                           postinc2	equ	0xFDE
 23798                           postdec2	equ	0xFDD
 23799                           plusw2	equ	0xFDB
 23800                           fsr2h	equ	0xFDA
 23801                           fsr2l	equ	0xFD9
 23802                           status	equ	0xFD8
 23803                           
 23804 ;; *************** function _flash_read_from_buffer *****************
 23805 ;; Defined at:
 23806 ;;		line 545 in file "flash.c"
 23807 ;; Parameters:    Size  Location     Type
 23808 ;;  start           2   30[COMRAM] unsigned int 
 23809 ;;  length          2   32[COMRAM] unsigned int 
 23810 ;;  data            2   34[COMRAM] PTR unsigned char 
 23811 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23812 ;; Auto vars:     Size  Location     Type
 23813 ;;		None
 23814 ;; Return value:  Size  Location     Type
 23815 ;;                  1    wreg      void 
 23816 ;; Registers used:
 23817 ;;		wreg, status,2, status,0, cstack
 23818 ;; Tracked objects:
 23819 ;;		On entry : 0/0
 23820 ;;		On exit  : 0/0
 23821 ;;		Unchanged: 0/0
 23822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23823 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23825 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23826 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23827 ;;Total ram usage:        6 bytes
 23828 ;; Hardware stack levels used:    1
 23829 ;; Hardware stack levels required when called:    4
 23830 ;; This function calls:
 23831 ;;		__flash_buffer_read
 23832 ;;		_spi_set_configuration
 23833 ;; This function is called by:
 23834 ;;		_fat_read_from_buffer
 23835 ;; This function uses a non-reentrant model
 23836 ;;
 23837                           
 23838                           	psect	text108
 23839  0089C2                     __ptext108:
 23840                           	opt stack 0
 23841  0089C2                     _flash_read_from_buffer:
 23842                           	opt stack 23
 23843                           
 23844                           ;flash.c: 548: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 23845                           
 23846                           ;incstack = 0
 23847  0089C2  0E00               	movlw	0
 23848  0089C4  EC62  F023         	call	_spi_set_configuration
 23849                           
 23850                           ;flash.c: 550: _flash_buffer_read(start, length, data, FLASH_BUFFER_2);
 23851  0089C8  C01F  F014         	movff	flash_read_from_buffer@start,__flash_buffer_read@start
 23852  0089CC  C020  F015         	movff	flash_read_from_buffer@start+1,__flash_buffer_read@start+1
 23853  0089D0  C021  F016         	movff	flash_read_from_buffer@length,__flash_buffer_read@length
 23854  0089D4  C022  F017         	movff	flash_read_from_buffer@length+1,__flash_buffer_read@length+1
 23855  0089D8  C023  F018         	movff	flash_read_from_buffer@data,__flash_buffer_read@data
 23856  0089DC  C024  F019         	movff	flash_read_from_buffer@data+1,__flash_buffer_read@data+1
 23857  0089E0  0E01               	movlw	1
 23858  0089E2  6E1A               	movwf	__flash_buffer_read@buffer,c
 23859  0089E4  EC39  F041         	call	__flash_buffer_read	;wreg free
 23860                           
 23861                           ;flash.c: 553: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 23862  0089E8  0E01               	movlw	1
 23863  0089EA  EC62  F023         	call	_spi_set_configuration
 23864  0089EE  0012               	return		;funcret
 23865  0089F0                     __end_of_flash_read_from_buffer:
 23866                           	opt stack 0
 23867                           tosu	equ	0xFFF
 23868                           tosh	equ	0xFFE
 23869                           tosl	equ	0xFFD
 23870                           pclath	equ	0xFFA
 23871                           tblptru	equ	0xFF8
 23872                           tblptrh	equ	0xFF7
 23873                           tblptrl	equ	0xFF6
 23874                           tablat	equ	0xFF5
 23875                           prodh	equ	0xFF4
 23876                           prodl	equ	0xFF3
 23877                           intcon	equ	0xFF2
 23878                           intcon2	equ	0xFF1
 23879                           intcon3	equ	0xFF0
 23880                           indf0	equ	0xFEF
 23881                           postinc0	equ	0xFEE
 23882                           fsr0h	equ	0xFEA
 23883                           fsr0l	equ	0xFE9
 23884                           wreg	equ	0xFE8
 23885                           indf1	equ	0xFE7
 23886                           postdec1	equ	0xFE5
 23887                           plusw1	equ	0xFE3
 23888                           fsr1h	equ	0xFE2
 23889                           fsr1l	equ	0xFE1
 23890                           indf2	equ	0xFDF
 23891                           postinc2	equ	0xFDE
 23892                           postdec2	equ	0xFDD
 23893                           plusw2	equ	0xFDB
 23894                           fsr2h	equ	0xFDA
 23895                           fsr2l	equ	0xFD9
 23896                           status	equ	0xFD8
 23897                           
 23898 ;; *************** function __flash_buffer_read *****************
 23899 ;; Defined at:
 23900 ;;		line 331 in file "flash.c"
 23901 ;; Parameters:    Size  Location     Type
 23902 ;;  start           2   19[COMRAM] unsigned int 
 23903 ;;  length          2   21[COMRAM] unsigned int 
 23904 ;;  data            2   23[COMRAM] PTR unsigned char 
 23905 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 23906 ;;  buffer          1   25[COMRAM] enum E6902
 23907 ;; Auto vars:     Size  Location     Type
 23908 ;;  command         4   26[COMRAM] unsigned char [4]
 23909 ;; Return value:  Size  Location     Type
 23910 ;;                  1    wreg      void 
 23911 ;; Registers used:
 23912 ;;		wreg, status,2, status,0, cstack
 23913 ;; Tracked objects:
 23914 ;;		On entry : 0/0
 23915 ;;		On exit  : 0/0
 23916 ;;		Unchanged: 0/0
 23917 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23918 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23919 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23920 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23921 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23922 ;;Total ram usage:       11 bytes
 23923 ;; Hardware stack levels used:    1
 23924 ;; Hardware stack levels required when called:    3
 23925 ;; This function calls:
 23926 ;;		__flash_is_busy
 23927 ;;		_spi_tx_rx
 23928 ;; This function is called by:
 23929 ;;		_flash_read_from_buffer
 23930 ;; This function uses a non-reentrant model
 23931 ;;
 23932                           
 23933                           	psect	text109
 23934  008272                     __ptext109:
 23935                           	opt stack 0
 23936  008272                     __flash_buffer_read:
 23937                           	opt stack 23
 23938                           
 23939                           ;flash.c: 333: uint8_t command[4];;flash.c: 336: while(_flash_is_busy());
 23940                           
 23941                           ;incstack = 0
 23942  008272  EC71  F046         	call	__flash_is_busy	;wreg free
 23943  008276  0900               	iorlw	0
 23944  008278  A4D8               	btfss	status,2,c
 23945  00827A  D7FB               	goto	__flash_buffer_read
 23946                           
 23947                           ;flash.c: 339: if(buffer==FLASH_BUFFER_1)
 23948  00827C  501A               	movf	__flash_buffer_read@buffer,w,c
 23949  00827E  A4D8               	btfss	status,2,c
 23950  008280  D002               	goto	l1814
 23951                           
 23952                           ;flash.c: 340: command[0] = 0xD1;
 23953  008282  0ED1               	movlw	209
 23954  008284  6E1B               	movwf	__flash_buffer_read@command,c
 23955  008286                     l1814:
 23956                           
 23957                           ;flash.c: 341: if(buffer==FLASH_BUFFER_2)
 23958  008286  041A               	decf	__flash_buffer_read@buffer,w,c
 23959  008288  A4D8               	btfss	status,2,c
 23960  00828A  D002               	goto	l1815
 23961                           
 23962                           ;flash.c: 342: command[0] = 0xD3;
 23963  00828C  0ED3               	movlw	211
 23964  00828E  6E1B               	movwf	__flash_buffer_read@command,c
 23965  008290                     l1815:
 23966                           
 23967                           ;flash.c: 343: command[1] = 0x00;
 23968  008290  0E00               	movlw	0
 23969  008292  6E1C               	movwf	__flash_buffer_read@command+1,c
 23970                           
 23971                           ;flash.c: 344: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 23972  008294  5015               	movf	__flash_buffer_read@start+1,w,c
 23973  008296  6E1D               	movwf	__flash_buffer_read@command+2,c
 23974                           
 23975                           ;flash.c: 345: command[3] = ((unsigned char)((start)&0xFF));
 23976  008298  C014  F01E         	movff	__flash_buffer_read@start,__flash_buffer_read@command+3
 23977                           
 23978                           ;flash.c: 348: spi_tx_rx(command, 4, data, length);
 23979  00829C  0E1B               	movlw	low __flash_buffer_read@command
 23980  00829E  6E01               	movwf	spi_tx_rx@command,c
 23981  0082A0  0E00               	movlw	high __flash_buffer_read@command
 23982  0082A2  6E02               	movwf	spi_tx_rx@command+1,c
 23983  0082A4  0E00               	movlw	0
 23984  0082A6  6E04               	movwf	spi_tx_rx@command_length+1,c
 23985  0082A8  0E04               	movlw	4
 23986  0082AA  6E03               	movwf	spi_tx_rx@command_length,c
 23987  0082AC  C018  F005         	movff	__flash_buffer_read@data,spi_tx_rx@data
 23988  0082B0  C019  F006         	movff	__flash_buffer_read@data+1,spi_tx_rx@data+1
 23989  0082B4  C016  F007         	movff	__flash_buffer_read@length,spi_tx_rx@data_length
 23990  0082B8  C017  F008         	movff	__flash_buffer_read@length+1,spi_tx_rx@data_length+1
 23991  0082BC  EC93  F037         	call	_spi_tx_rx	;wreg free
 23992  0082C0  0012               	return		;funcret
 23993  0082C2                     __end_of__flash_buffer_read:
 23994                           	opt stack 0
 23995                           tosu	equ	0xFFF
 23996                           tosh	equ	0xFFE
 23997                           tosl	equ	0xFFD
 23998                           pclath	equ	0xFFA
 23999                           tblptru	equ	0xFF8
 24000                           tblptrh	equ	0xFF7
 24001                           tblptrl	equ	0xFF6
 24002                           tablat	equ	0xFF5
 24003                           prodh	equ	0xFF4
 24004                           prodl	equ	0xFF3
 24005                           intcon	equ	0xFF2
 24006                           intcon2	equ	0xFF1
 24007                           intcon3	equ	0xFF0
 24008                           indf0	equ	0xFEF
 24009                           postinc0	equ	0xFEE
 24010                           fsr0h	equ	0xFEA
 24011                           fsr0l	equ	0xFE9
 24012                           wreg	equ	0xFE8
 24013                           indf1	equ	0xFE7
 24014                           postdec1	equ	0xFE5
 24015                           plusw1	equ	0xFE3
 24016                           fsr1h	equ	0xFE2
 24017                           fsr1l	equ	0xFE1
 24018                           indf2	equ	0xFDF
 24019                           postinc2	equ	0xFDE
 24020                           postdec2	equ	0xFDD
 24021                           plusw2	equ	0xFDB
 24022                           fsr2h	equ	0xFDA
 24023                           fsr2l	equ	0xFD9
 24024                           status	equ	0xFD8
 24025                           
 24026 ;; *************** function __fill_buffer_get_status *****************
 24027 ;; Defined at:
 24028 ;;		line 201 in file "api.c"
 24029 ;; Parameters:    Size  Location     Type
 24030 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 24031 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24032 ;; Auto vars:     Size  Location     Type
 24033 ;;		None
 24034 ;; Return value:  Size  Location     Type
 24035 ;;                  1    wreg      void 
 24036 ;; Registers used:
 24037 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24038 ;; Tracked objects:
 24039 ;;		On entry : 0/0
 24040 ;;		On exit  : 0/0
 24041 ;;		Unchanged: 0/0
 24042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24043 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24044 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24045 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24046 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24047 ;;Total ram usage:        2 bytes
 24048 ;; Hardware stack levels used:    1
 24049 ;; Hardware stack levels required when called:    4
 24050 ;; This function calls:
 24051 ;;		_flash_is_busy
 24052 ;;		_ui_get_status
 24053 ;; This function is called by:
 24054 ;;		_api_prepare
 24055 ;; This function uses a non-reentrant model
 24056 ;;
 24057                           
 24058                           	psect	text110
 24059  00553C                     __ptext110:
 24060                           	opt stack 0
 24061  00553C                     __fill_buffer_get_status:
 24062                           	opt stack 25
 24063                           
 24064                           ;api.c: 204: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24065                           
 24066                           ;incstack = 0
 24067  00553C  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 24068  005540  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 24069  005544  0E10               	movlw	16
 24070  005546  6EDF               	movwf	indf2,c
 24071                           
 24072                           ;api.c: 207: outBuffer[1] = 0xC125 >> 8;
 24073  005548  EE20 F001          	lfsr	2,1
 24074  00554C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24075  00554E  26D9               	addwf	fsr2l,f,c
 24076  005550  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24077  005552  22DA               	addwfc	fsr2h,f,c
 24078  005554  0EC1               	movlw	193
 24079  005556  6EDF               	movwf	indf2,c
 24080                           
 24081                           ;api.c: 208: outBuffer[2] = (uint8_t) 0xC125;
 24082  005558  EE20 F002          	lfsr	2,2
 24083  00555C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24084  00555E  26D9               	addwf	fsr2l,f,c
 24085  005560  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24086  005562  22DA               	addwfc	fsr2h,f,c
 24087  005564  0E25               	movlw	37
 24088  005566  6EDF               	movwf	indf2,c
 24089                           
 24090                           ;api.c: 212: outBuffer[3] = (uint8_t) flash_is_busy();
 24091  005568  EE20 F003          	lfsr	2,3
 24092  00556C  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24093  00556E  26D9               	addwf	fsr2l,f,c
 24094  005570  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24095  005572  22DA               	addwfc	fsr2h,f,c
 24096  005574  EC50  F047         	call	_flash_is_busy	;wreg free
 24097  005578  6EDF               	movwf	indf2,c
 24098                           
 24099                           ;api.c: 215: outBuffer[4] = 0x00;
 24100  00557A  EE20 F004          	lfsr	2,4
 24101  00557E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24102  005580  26D9               	addwf	fsr2l,f,c
 24103  005582  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24104  005584  22DA               	addwfc	fsr2h,f,c
 24105  005586  0E00               	movlw	0
 24106  005588  6EDF               	movwf	indf2,c
 24107                           
 24108                           ;api.c: 216: outBuffer[5] = 0x03;
 24109  00558A  EE20 F005          	lfsr	2,5
 24110  00558E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24111  005590  26D9               	addwf	fsr2l,f,c
 24112  005592  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24113  005594  22DA               	addwfc	fsr2h,f,c
 24114  005596  0E03               	movlw	3
 24115  005598  6EDF               	movwf	indf2,c
 24116                           
 24117                           ;api.c: 217: outBuffer[6] = 0x04;
 24118  00559A  EE20 F006          	lfsr	2,6
 24119  00559E  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24120  0055A0  26D9               	addwf	fsr2l,f,c
 24121  0055A2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24122  0055A4  22DA               	addwfc	fsr2h,f,c
 24123  0055A6  0E04               	movlw	4
 24124  0055A8  6EDF               	movwf	indf2,c
 24125                           
 24126                           ;api.c: 220: outBuffer[7] = ui_get_status();
 24127  0055AA  EE20 F007          	lfsr	2,7
 24128  0055AE  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24129  0055B0  26D9               	addwf	fsr2l,f,c
 24130  0055B2  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24131  0055B4  22DA               	addwfc	fsr2h,f,c
 24132  0055B6  EC1E  F048         	call	_ui_get_status	;wreg free
 24133  0055BA  6EDF               	movwf	indf2,c
 24134                           
 24135                           ;api.c: 223: outBuffer[8] = os.encoderCount;
 24136  0055BC  EE20 F008          	lfsr	2,8
 24137  0055C0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24138  0055C2  26D9               	addwf	fsr2l,f,c
 24139  0055C4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24140  0055C6  22DA               	addwfc	fsr2h,f,c
 24141  0055C8  C0C5  FFDF         	movff	_os,indf2	;volatile
 24142                           
 24143                           ;api.c: 224: outBuffer[9] = os.buttonCount;
 24144  0055CC  EE20 F009          	lfsr	2,9
 24145  0055D0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24146  0055D2  26D9               	addwf	fsr2l,f,c
 24147  0055D4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24148  0055D6  22DA               	addwfc	fsr2h,f,c
 24149  0055D8  C0C6  FFDF         	movff	_os+1,indf2	;volatile
 24150                           
 24151                           ;api.c: 225: outBuffer[10] = os.timeSlot;
 24152  0055DC  EE20 F00A          	lfsr	2,10
 24153  0055E0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24154  0055E2  26D9               	addwf	fsr2l,f,c
 24155  0055E4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24156  0055E6  22DA               	addwfc	fsr2h,f,c
 24157  0055E8  C0C7  FFDF         	movff	_os+2,indf2	;volatile
 24158                           
 24159                           ;api.c: 226: outBuffer[11] = os.done;
 24160  0055EC  EE20 F00B          	lfsr	2,11
 24161  0055F0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24162  0055F2  26D9               	addwf	fsr2l,f,c
 24163  0055F4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24164  0055F6  22DA               	addwfc	fsr2h,f,c
 24165  0055F8  C0C8  FFDF         	movff	_os+3,indf2	;volatile
 24166                           
 24167                           ;api.c: 227: outBuffer[12] = os.bootloader_mode;
 24168  0055FC  EE20 F00C          	lfsr	2,12
 24169  005600  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24170  005602  26D9               	addwf	fsr2l,f,c
 24171  005604  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24172  005606  22DA               	addwfc	fsr2h,f,c
 24173  005608  C0C9  FFDF         	movff	_os+4,indf2	;volatile
 24174                           
 24175                           ;api.c: 228: outBuffer[13] = os.display_mode;
 24176  00560C  EE20 F00D          	lfsr	2,13
 24177  005610  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 24178  005612  26D9               	addwf	fsr2l,f,c
 24179  005614  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 24180  005616  22DA               	addwfc	fsr2h,f,c
 24181  005618  C0CA  FFDF         	movff	_os+5,indf2	;volatile
 24182  00561C  0012               	return		;funcret
 24183  00561E                     __end_of__fill_buffer_get_status:
 24184                           	opt stack 0
 24185                           tosu	equ	0xFFF
 24186                           tosh	equ	0xFFE
 24187                           tosl	equ	0xFFD
 24188                           pclath	equ	0xFFA
 24189                           tblptru	equ	0xFF8
 24190                           tblptrh	equ	0xFF7
 24191                           tblptrl	equ	0xFF6
 24192                           tablat	equ	0xFF5
 24193                           prodh	equ	0xFF4
 24194                           prodl	equ	0xFF3
 24195                           intcon	equ	0xFF2
 24196                           intcon2	equ	0xFF1
 24197                           intcon3	equ	0xFF0
 24198                           indf0	equ	0xFEF
 24199                           postinc0	equ	0xFEE
 24200                           fsr0h	equ	0xFEA
 24201                           fsr0l	equ	0xFE9
 24202                           wreg	equ	0xFE8
 24203                           indf1	equ	0xFE7
 24204                           postdec1	equ	0xFE5
 24205                           plusw1	equ	0xFE3
 24206                           fsr1h	equ	0xFE2
 24207                           fsr1l	equ	0xFE1
 24208                           indf2	equ	0xFDF
 24209                           postinc2	equ	0xFDE
 24210                           postdec2	equ	0xFDD
 24211                           plusw2	equ	0xFDB
 24212                           fsr2h	equ	0xFDA
 24213                           fsr2l	equ	0xFD9
 24214                           status	equ	0xFD8
 24215                           
 24216 ;; *************** function _flash_is_busy *****************
 24217 ;; Defined at:
 24218 ;;		line 377 in file "flash.c"
 24219 ;; Parameters:    Size  Location     Type
 24220 ;;		None
 24221 ;; Auto vars:     Size  Location     Type
 24222 ;;  result          1   19[COMRAM] unsigned char 
 24223 ;; Return value:  Size  Location     Type
 24224 ;;                  1    wreg      unsigned char 
 24225 ;; Registers used:
 24226 ;;		wreg, status,2, status,0, cstack
 24227 ;; Tracked objects:
 24228 ;;		On entry : 0/0
 24229 ;;		On exit  : 0/0
 24230 ;;		Unchanged: 0/0
 24231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24232 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24235 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24236 ;;Total ram usage:        1 bytes
 24237 ;; Hardware stack levels used:    1
 24238 ;; Hardware stack levels required when called:    3
 24239 ;; This function calls:
 24240 ;;		__flash_is_busy
 24241 ;;		_spi_set_configuration
 24242 ;; This function is called by:
 24243 ;;		__fill_buffer_get_status
 24244 ;; This function uses a non-reentrant model
 24245 ;;
 24246                           
 24247                           	psect	text111
 24248  008EA0                     __ptext111:
 24249                           	opt stack 0
 24250  008EA0                     _flash_is_busy:
 24251                           	opt stack 25
 24252                           
 24253                           ;flash.c: 379: uint8_t result;;flash.c: 382: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 24254                           
 24255                           ;incstack = 0
 24256  008EA0  0E00               	movlw	0
 24257  008EA2  EC62  F023         	call	_spi_set_configuration
 24258                           
 24259                           ;flash.c: 385: result = _flash_is_busy();
 24260  008EA6  EC71  F046         	call	__flash_is_busy	;wreg free
 24261  008EAA  6E14               	movwf	flash_is_busy@result,c
 24262                           
 24263                           ;flash.c: 388: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 24264  008EAC  0E01               	movlw	1
 24265  008EAE  EC62  F023         	call	_spi_set_configuration
 24266                           
 24267                           ;flash.c: 391: return result;
 24268  008EB2  5014               	movf	flash_is_busy@result,w,c
 24269  008EB4  0012               	return	
 24270  008EB6                     __end_of_flash_is_busy:
 24271                           	opt stack 0
 24272                           tosu	equ	0xFFF
 24273                           tosh	equ	0xFFE
 24274                           tosl	equ	0xFFD
 24275                           pclath	equ	0xFFA
 24276                           tblptru	equ	0xFF8
 24277                           tblptrh	equ	0xFF7
 24278                           tblptrl	equ	0xFF6
 24279                           tablat	equ	0xFF5
 24280                           prodh	equ	0xFF4
 24281                           prodl	equ	0xFF3
 24282                           intcon	equ	0xFF2
 24283                           intcon2	equ	0xFF1
 24284                           intcon3	equ	0xFF0
 24285                           indf0	equ	0xFEF
 24286                           postinc0	equ	0xFEE
 24287                           fsr0h	equ	0xFEA
 24288                           fsr0l	equ	0xFE9
 24289                           wreg	equ	0xFE8
 24290                           indf1	equ	0xFE7
 24291                           postdec1	equ	0xFE5
 24292                           plusw1	equ	0xFE3
 24293                           fsr1h	equ	0xFE2
 24294                           fsr1l	equ	0xFE1
 24295                           indf2	equ	0xFDF
 24296                           postinc2	equ	0xFDE
 24297                           postdec2	equ	0xFDD
 24298                           plusw2	equ	0xFDB
 24299                           fsr2h	equ	0xFDA
 24300                           fsr2l	equ	0xFD9
 24301                           status	equ	0xFD8
 24302                           
 24303 ;; *************** function __fill_buffer_get_file_details *****************
 24304 ;; Defined at:
 24305 ;;		line 354 in file "api.c"
 24306 ;; Parameters:    Size  Location     Type
 24307 ;;  inBuffer        2   55[COMRAM] PTR unsigned char 
 24308 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 24309 ;;  outBuffer       2   57[COMRAM] PTR unsigned char 
 24310 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24311 ;; Auto vars:     Size  Location     Type
 24312 ;;  file_number     1   60[COMRAM] unsigned char 
 24313 ;; Return value:  Size  Location     Type
 24314 ;;                  1    wreg      void 
 24315 ;; Registers used:
 24316 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 24317 ;; Tracked objects:
 24318 ;;		On entry : 0/0
 24319 ;;		On exit  : 0/0
 24320 ;;		Unchanged: 0/0
 24321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24322 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24323 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24324 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24325 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24326 ;;Total ram usage:        6 bytes
 24327 ;; Hardware stack levels used:    1
 24328 ;; Hardware stack levels required when called:    6
 24329 ;; This function calls:
 24330 ;;		_fat_get_file_information
 24331 ;; This function is called by:
 24332 ;;		_api_prepare
 24333 ;; This function uses a non-reentrant model
 24334 ;;
 24335                           
 24336                           	psect	text112
 24337  0075E4                     __ptext112:
 24338                           	opt stack 0
 24339  0075E4                     __fill_buffer_get_file_details:
 24340                           	opt stack 23
 24341                           
 24342                           ;api.c: 356: uint8_t file_number = inBuffer[1];
 24343                           
 24344                           ;incstack = 0
 24345  0075E4  EE20 F001          	lfsr	2,1
 24346  0075E8  5038               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 24347  0075EA  26D9               	addwf	fsr2l,f,c
 24348  0075EC  5039               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 24349  0075EE  22DA               	addwfc	fsr2h,f,c
 24350  0075F0  50DF               	movf	indf2,w,c
 24351  0075F2  6E3D               	movwf	__fill_buffer_get_file_details@file_number,c
 24352                           
 24353                           ;api.c: 359: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 24354  0075F4  C03A  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 24355  0075F8  C03B  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 24356  0075FC  0E80               	movlw	128
 24357  0075FE  6EDF               	movwf	indf2,c
 24358                           
 24359                           ;api.c: 362: outBuffer[1] = 0xC125 >> 8;
 24360  007600  EE20 F001          	lfsr	2,1
 24361  007604  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24362  007606  26D9               	addwf	fsr2l,f,c
 24363  007608  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24364  00760A  22DA               	addwfc	fsr2h,f,c
 24365  00760C  0EC1               	movlw	193
 24366  00760E  6EDF               	movwf	indf2,c
 24367                           
 24368                           ;api.c: 363: outBuffer[2] = (uint8_t) 0xC125;
 24369  007610  EE20 F002          	lfsr	2,2
 24370  007614  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24371  007616  26D9               	addwf	fsr2l,f,c
 24372  007618  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24373  00761A  22DA               	addwfc	fsr2h,f,c
 24374  00761C  0E25               	movlw	37
 24375  00761E  6EDF               	movwf	indf2,c
 24376                           
 24377                           ;api.c: 366: outBuffer[3] = file_number;
 24378  007620  EE20 F003          	lfsr	2,3
 24379  007624  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24380  007626  26D9               	addwf	fsr2l,f,c
 24381  007628  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24382  00762A  22DA               	addwfc	fsr2h,f,c
 24383  00762C  C03D  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 24384                           
 24385                           ;api.c: 369: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 24386  007630  0E05               	movlw	5
 24387  007632  243A               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 24388  007634  6E30               	movwf	fat_get_file_information@data,c
 24389  007636  0E00               	movlw	0
 24390  007638  203B               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 24391  00763A  6E31               	movwf	fat_get_file_information@data+1,c
 24392  00763C  503D               	movf	__fill_buffer_get_file_details@file_number,w,c
 24393  00763E  EC2B  F03B         	call	_fat_get_file_information
 24394  007642  6E3C               	movwf	??__fill_buffer_get_file_details& (0+255),c
 24395  007644  EE20 F004          	lfsr	2,4
 24396  007648  503A               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 24397  00764A  26D9               	addwf	fsr2l,f,c
 24398  00764C  503B               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 24399  00764E  22DA               	addwfc	fsr2h,f,c
 24400  007650  C03C  FFDF         	movff	??__fill_buffer_get_file_details,indf2
 24401  007654  0012               	return		;funcret
 24402  007656                     __end_of__fill_buffer_get_file_details:
 24403                           	opt stack 0
 24404                           tosu	equ	0xFFF
 24405                           tosh	equ	0xFFE
 24406                           tosl	equ	0xFFD
 24407                           pclath	equ	0xFFA
 24408                           tblptru	equ	0xFF8
 24409                           tblptrh	equ	0xFF7
 24410                           tblptrl	equ	0xFF6
 24411                           tablat	equ	0xFF5
 24412                           prodh	equ	0xFF4
 24413                           prodl	equ	0xFF3
 24414                           intcon	equ	0xFF2
 24415                           intcon2	equ	0xFF1
 24416                           intcon3	equ	0xFF0
 24417                           indf0	equ	0xFEF
 24418                           postinc0	equ	0xFEE
 24419                           fsr0h	equ	0xFEA
 24420                           fsr0l	equ	0xFE9
 24421                           wreg	equ	0xFE8
 24422                           indf1	equ	0xFE7
 24423                           postdec1	equ	0xFE5
 24424                           plusw1	equ	0xFE3
 24425                           fsr1h	equ	0xFE2
 24426                           fsr1l	equ	0xFE1
 24427                           indf2	equ	0xFDF
 24428                           postinc2	equ	0xFDE
 24429                           postdec2	equ	0xFDD
 24430                           plusw2	equ	0xFDB
 24431                           fsr2h	equ	0xFDA
 24432                           fsr2l	equ	0xFD9
 24433                           status	equ	0xFD8
 24434                           
 24435 ;; *************** function __fill_buffer_get_display *****************
 24436 ;; Defined at:
 24437 ;;		line 232 in file "api.c"
 24438 ;; Parameters:    Size  Location     Type
 24439 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24440 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24441 ;;  secondHalf      1    6[COMRAM] unsigned char 
 24442 ;; Auto vars:     Size  Location     Type
 24443 ;;  position        1   15[COMRAM] unsigned char 
 24444 ;;  start_line      1   14[COMRAM] unsigned char 
 24445 ;;  line            1   13[COMRAM] unsigned char 
 24446 ;;  cntr            1   12[COMRAM] unsigned char 
 24447 ;; Return value:  Size  Location     Type
 24448 ;;                  1    wreg      void 
 24449 ;; Registers used:
 24450 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24451 ;; Tracked objects:
 24452 ;;		On entry : 0/0
 24453 ;;		On exit  : 0/0
 24454 ;;		Unchanged: 0/0
 24455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24456 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24457 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24458 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24459 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24460 ;;Total ram usage:       12 bytes
 24461 ;; Hardware stack levels used:    1
 24462 ;; Hardware stack levels required when called:    1
 24463 ;; This function calls:
 24464 ;;		_display_get_character
 24465 ;; This function is called by:
 24466 ;;		_api_prepare
 24467 ;; This function uses a non-reentrant model
 24468 ;;
 24469                           
 24470                           	psect	text113
 24471  006262                     __ptext113:
 24472                           	opt stack 0
 24473  006262                     __fill_buffer_get_display:
 24474                           	opt stack 28
 24475                           
 24476                           ;api.c: 234: uint8_t cntr;;api.c: 235: uint8_t line;;api.c: 236: uint8_t start_line;;api
      +                          .c: 237: uint8_t position;;api.c: 240: if(secondHalf)
 24477                           
 24478                           ;incstack = 0
 24479  006262  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24480  006264  B4D8               	btfsc	status,2,c
 24481  006266  D006               	goto	l2744
 24482                           
 24483                           ;api.c: 241: {;api.c: 242: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 24484  006268  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24485  00626C  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24486  006270  0E12               	movlw	18
 24487  006272  D005               	goto	L31
 24488  006274                     l2744:
 24489                           
 24490                           ;api.c: 244: else;api.c: 245: {;api.c: 246: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 24491  006274  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 24492  006278  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 24493  00627C  0E11               	movlw	17
 24494  00627E                     L31:
 24495  00627E  6EDF               	movwf	indf2,c
 24496                           
 24497                           ;api.c: 247: };api.c: 250: outBuffer[1] = 0xC125 >> 8;
 24498  006280  EE20 F001          	lfsr	2,1
 24499  006284  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24500  006286  26D9               	addwf	fsr2l,f,c
 24501  006288  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24502  00628A  22DA               	addwfc	fsr2h,f,c
 24503  00628C  0EC1               	movlw	193
 24504  00628E  6EDF               	movwf	indf2,c
 24505                           
 24506                           ;api.c: 251: outBuffer[2] = (uint8_t) 0xC125;
 24507  006290  EE20 F002          	lfsr	2,2
 24508  006294  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 24509  006296  26D9               	addwf	fsr2l,f,c
 24510  006298  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 24511  00629A  22DA               	addwfc	fsr2h,f,c
 24512  00629C  0E25               	movlw	37
 24513  00629E  6EDF               	movwf	indf2,c
 24514                           
 24515                           ;api.c: 254: cntr = 3;
 24516  0062A0  0E03               	movlw	3
 24517  0062A2  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 24518                           
 24519                           ;api.c: 255: if(secondHalf)
 24520  0062A4  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 24521  0062A6  B4D8               	btfsc	status,2,c
 24522  0062A8  D002               	goto	l2746
 24523                           
 24524                           ;api.c: 256: {;api.c: 257: start_line = 2;
 24525  0062AA  0E02               	movlw	2
 24526  0062AC  D001               	goto	L32
 24527  0062AE                     l2746:
 24528                           
 24529                           ;api.c: 259: else;api.c: 260: {;api.c: 261: start_line = 0;
 24530  0062AE  0E00               	movlw	0
 24531  0062B0                     L32:
 24532  0062B0  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 24533                           
 24534                           ;api.c: 262: };api.c: 263: for(line=start_line; line<start_line+2; ++line)
 24535  0062B2  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 24536  0062B6  D01A               	goto	l2748
 24537  0062B8                     
 24538                           ;api.c: 264: {;api.c: 265: for(position=0; position<20; ++position)
 24539  0062B8  0E00               	movlw	0
 24540  0062BA  6E10               	movwf	__fill_buffer_get_display@position,c
 24541  0062BC                     l14661:
 24542  0062BC  0E13               	movlw	19
 24543  0062BE  6410               	cpfsgt	__fill_buffer_get_display@position,c
 24544  0062C0  D001               	goto	l2750
 24545  0062C2  D013               	goto	u11690
 24546  0062C4                     l2750:
 24547                           
 24548                           ;api.c: 266: {;api.c: 267: outBuffer[cntr] = display_get_character(line, position);
 24549  0062C4  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 24550  0062C8  500E               	movf	__fill_buffer_get_display@line,w,c
 24551  0062CA  EC7D  F045         	call	_display_get_character
 24552  0062CE  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24553  0062D0  500D               	movf	__fill_buffer_get_display@cntr,w,c
 24554  0062D2  0D01               	mullw	1
 24555  0062D4  50F3               	movf	prodl,w,c
 24556  0062D6  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 24557  0062D8  6ED9               	movwf	fsr2l,c
 24558  0062DA  50F4               	movf	prodh,w,c
 24559  0062DC  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 24560  0062DE  6EDA               	movwf	fsr2h,c
 24561  0062E0  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 24562                           
 24563                           ;api.c: 268: ++cntr;
 24564  0062E4  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 24565  0062E6  2A10               	incf	__fill_buffer_get_display@position,f,c
 24566  0062E8  D7E9               	goto	l14661
 24567  0062EA                     u11690:
 24568  0062EA  2A0E               	incf	__fill_buffer_get_display@line,f,c
 24569  0062EC                     l2748:
 24570  0062EC  500F               	movf	__fill_buffer_get_display@start_line,w,c
 24571  0062EE  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 24572  0062F0  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 24573  0062F2  0E02               	movlw	2
 24574  0062F4  2608               	addwf	??__fill_buffer_get_display,f,c
 24575  0062F6  0E00               	movlw	0
 24576  0062F8  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 24577  0062FA  500E               	movf	__fill_buffer_get_display@line,w,c
 24578  0062FC  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 24579  0062FE  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 24580  006300  5008               	movf	??__fill_buffer_get_display,w,c
 24581  006302  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 24582  006304  500B               	movf	??__fill_buffer_get_display+3,w,c
 24583  006306  0A80               	xorlw	128
 24584  006308  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 24585  00630A  5009               	movf	??__fill_buffer_get_display+1,w,c
 24586  00630C  0A80               	xorlw	128
 24587  00630E  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 24588  006310  B0D8               	btfsc	status,0,c
 24589  006312  0012               	return	
 24590  006314  D7D1               	goto	l2749
 24591  006316                     __end_of__fill_buffer_get_display:
 24592                           	opt stack 0
 24593                           tosu	equ	0xFFF
 24594                           tosh	equ	0xFFE
 24595                           tosl	equ	0xFFD
 24596                           pclath	equ	0xFFA
 24597                           tblptru	equ	0xFF8
 24598                           tblptrh	equ	0xFF7
 24599                           tblptrl	equ	0xFF6
 24600                           tablat	equ	0xFF5
 24601                           prodh	equ	0xFF4
 24602                           prodl	equ	0xFF3
 24603                           intcon	equ	0xFF2
 24604                           intcon2	equ	0xFF1
 24605                           intcon3	equ	0xFF0
 24606                           indf0	equ	0xFEF
 24607                           postinc0	equ	0xFEE
 24608                           fsr0h	equ	0xFEA
 24609                           fsr0l	equ	0xFE9
 24610                           wreg	equ	0xFE8
 24611                           indf1	equ	0xFE7
 24612                           postdec1	equ	0xFE5
 24613                           plusw1	equ	0xFE3
 24614                           fsr1h	equ	0xFE2
 24615                           fsr1l	equ	0xFE1
 24616                           indf2	equ	0xFDF
 24617                           postinc2	equ	0xFDE
 24618                           postdec2	equ	0xFDD
 24619                           plusw2	equ	0xFDB
 24620                           fsr2h	equ	0xFDA
 24621                           fsr2l	equ	0xFD9
 24622                           status	equ	0xFD8
 24623                           
 24624 ;; *************** function _display_get_character *****************
 24625 ;; Defined at:
 24626 ;;		line 70 in file "display.c"
 24627 ;; Parameters:    Size  Location     Type
 24628 ;;  line            1    wreg     unsigned char 
 24629 ;;  position        1    0[COMRAM] unsigned char 
 24630 ;; Auto vars:     Size  Location     Type
 24631 ;;  line            1    3[COMRAM] unsigned char 
 24632 ;; Return value:  Size  Location     Type
 24633 ;;                  1    wreg      unsigned char 
 24634 ;; Registers used:
 24635 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 24636 ;; Tracked objects:
 24637 ;;		On entry : 0/0
 24638 ;;		On exit  : 0/0
 24639 ;;		Unchanged: 0/0
 24640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24641 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24642 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24643 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24644 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24645 ;;Total ram usage:        4 bytes
 24646 ;; Hardware stack levels used:    1
 24647 ;; This function calls:
 24648 ;;		Nothing
 24649 ;; This function is called by:
 24650 ;;		__fill_buffer_get_display
 24651 ;; This function uses a non-reentrant model
 24652 ;;
 24653                           
 24654                           	psect	text114
 24655  008AFA                     __ptext114:
 24656                           	opt stack 0
 24657  008AFA                     _display_get_character:
 24658                           	opt stack 28
 24659                           
 24660                           ;incstack = 0
 24661                           ;display_get_character@line stored from wreg
 24662  008AFA  6E04               	movwf	display_get_character@line,c
 24663                           
 24664                           ;display.c: 72: return display_content[line][position];
 24665  008AFC  5004               	movf	display_get_character@line,w,c
 24666  008AFE  0D14               	mullw	20
 24667  008B00  0E00               	movlw	low _display_content
 24668  008B02  6E02               	movwf	??_display_get_character& (0+255),c
 24669  008B04  0E02               	movlw	high _display_content
 24670  008B06  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 24671  008B08  50F3               	movf	prodl,w,c
 24672  008B0A  2602               	addwf	??_display_get_character,f,c
 24673  008B0C  50F4               	movf	prodh,w,c
 24674  008B0E  2203               	addwfc	??_display_get_character+1,f,c
 24675  008B10  5001               	movf	display_get_character@position,w,c
 24676  008B12  0D01               	mullw	1
 24677  008B14  50F3               	movf	prodl,w,c
 24678  008B16  2402               	addwf	??_display_get_character,w,c
 24679  008B18  6ED9               	movwf	fsr2l,c
 24680  008B1A  50F4               	movf	prodh,w,c
 24681  008B1C  2003               	addwfc	??_display_get_character+1,w,c
 24682  008B1E  6EDA               	movwf	fsr2h,c
 24683  008B20  50DF               	movf	indf2,w,c
 24684  008B22  0012               	return	
 24685  008B24                     __end_of_display_get_character:
 24686                           	opt stack 0
 24687                           tosu	equ	0xFFF
 24688                           tosh	equ	0xFFE
 24689                           tosl	equ	0xFFD
 24690                           pclath	equ	0xFFA
 24691                           tblptru	equ	0xFF8
 24692                           tblptrh	equ	0xFF7
 24693                           tblptrl	equ	0xFF6
 24694                           tablat	equ	0xFF5
 24695                           prodh	equ	0xFF4
 24696                           prodl	equ	0xFF3
 24697                           intcon	equ	0xFF2
 24698                           intcon2	equ	0xFF1
 24699                           intcon3	equ	0xFF0
 24700                           indf0	equ	0xFEF
 24701                           postinc0	equ	0xFEE
 24702                           fsr0h	equ	0xFEA
 24703                           fsr0l	equ	0xFE9
 24704                           wreg	equ	0xFE8
 24705                           indf1	equ	0xFE7
 24706                           postdec1	equ	0xFE5
 24707                           plusw1	equ	0xFE3
 24708                           fsr1h	equ	0xFE2
 24709                           fsr1l	equ	0xFE1
 24710                           indf2	equ	0xFDF
 24711                           postinc2	equ	0xFDE
 24712                           postdec2	equ	0xFDD
 24713                           plusw2	equ	0xFDB
 24714                           fsr2h	equ	0xFDA
 24715                           fsr2l	equ	0xFD9
 24716                           status	equ	0xFD8
 24717                           
 24718 ;; *************** function __fill_buffer_get_configuration *****************
 24719 ;; Defined at:
 24720 ;;		line 333 in file "api.c"
 24721 ;; Parameters:    Size  Location     Type
 24722 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 24723 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24724 ;; Auto vars:     Size  Location     Type
 24725 ;;		None
 24726 ;; Return value:  Size  Location     Type
 24727 ;;                  1    wreg      void 
 24728 ;; Registers used:
 24729 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 24730 ;; Tracked objects:
 24731 ;;		On entry : 0/0
 24732 ;;		On exit  : 0/0
 24733 ;;		Unchanged: 0/0
 24734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24736 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24738 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24739 ;;Total ram usage:        2 bytes
 24740 ;; Hardware stack levels used:    1
 24741 ;; This function calls:
 24742 ;;		Nothing
 24743 ;; This function is called by:
 24744 ;;		_api_prepare
 24745 ;; This function uses a non-reentrant model
 24746 ;;
 24747                           
 24748                           	psect	text115
 24749  006AF8                     __ptext115:
 24750                           	opt stack 0
 24751  006AF8                     __fill_buffer_get_configuration:
 24752                           	opt stack 29
 24753                           
 24754                           ;api.c: 336: outBuffer[0] = DATAREQUEST_GET_STATUS;
 24755                           
 24756                           ;incstack = 0
 24757  006AF8  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 24758  006AFC  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 24759  006B00  0E10               	movlw	16
 24760  006B02  6EDF               	movwf	indf2,c
 24761                           
 24762                           ;api.c: 339: outBuffer[1] = 0xC125 >> 8;
 24763  006B04  EE20 F001          	lfsr	2,1
 24764  006B08  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24765  006B0A  26D9               	addwf	fsr2l,f,c
 24766  006B0C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24767  006B0E  22DA               	addwfc	fsr2h,f,c
 24768  006B10  0EC1               	movlw	193
 24769  006B12  6EDF               	movwf	indf2,c
 24770                           
 24771                           ;api.c: 340: outBuffer[2] = (uint8_t) 0xC125;
 24772  006B14  EE20 F002          	lfsr	2,2
 24773  006B18  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24774  006B1A  26D9               	addwf	fsr2l,f,c
 24775  006B1C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24776  006B1E  22DA               	addwfc	fsr2h,f,c
 24777  006B20  0E25               	movlw	37
 24778  006B22  6EDF               	movwf	indf2,c
 24779                           
 24780                           ;api.c: 343: outBuffer[3] = communicationSettings.spiMode;
 24781  006B24  EE20 F003          	lfsr	2,3
 24782  006B28  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24783  006B2A  26D9               	addwf	fsr2l,f,c
 24784  006B2C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24785  006B2E  22DA               	addwfc	fsr2h,f,c
 24786  006B30  C139  FFDF         	movff	_communicationSettings,indf2
 24787                           
 24788                           ;api.c: 344: outBuffer[4] = communicationSettings.spiFrequency;
 24789  006B34  EE20 F004          	lfsr	2,4
 24790  006B38  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24791  006B3A  26D9               	addwf	fsr2l,f,c
 24792  006B3C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24793  006B3E  22DA               	addwfc	fsr2h,f,c
 24794  006B40  C13A  FFDF         	movff	_communicationSettings+1,indf2
 24795                           
 24796                           ;api.c: 345: outBuffer[5] = communicationSettings.spiPolarity;
 24797  006B44  EE20 F005          	lfsr	2,5
 24798  006B48  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24799  006B4A  26D9               	addwf	fsr2l,f,c
 24800  006B4C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24801  006B4E  22DA               	addwfc	fsr2h,f,c
 24802  006B50  C13B  FFDF         	movff	_communicationSettings+2,indf2
 24803                           
 24804                           ;api.c: 348: outBuffer[6] = communicationSettings.i2cMode;
 24805  006B54  EE20 F006          	lfsr	2,6
 24806  006B58  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24807  006B5A  26D9               	addwf	fsr2l,f,c
 24808  006B5C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24809  006B5E  22DA               	addwfc	fsr2h,f,c
 24810  006B60  C13C  FFDF         	movff	_communicationSettings+3,indf2
 24811                           
 24812                           ;api.c: 349: outBuffer[7] = communicationSettings.i2cFrequency;
 24813  006B64  EE20 F007          	lfsr	2,7
 24814  006B68  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24815  006B6A  26D9               	addwf	fsr2l,f,c
 24816  006B6C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24817  006B6E  22DA               	addwfc	fsr2h,f,c
 24818  006B70  C13D  FFDF         	movff	_communicationSettings+4,indf2
 24819                           
 24820                           ;api.c: 350: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 24821  006B74  EE20 F008          	lfsr	2,8
 24822  006B78  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24823  006B7A  26D9               	addwf	fsr2l,f,c
 24824  006B7C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24825  006B7E  22DA               	addwfc	fsr2h,f,c
 24826  006B80  C13E  FFDF         	movff	_communicationSettings+5,indf2
 24827                           
 24828                           ;api.c: 351: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 24829  006B84  EE20 F009          	lfsr	2,9
 24830  006B88  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 24831  006B8A  26D9               	addwf	fsr2l,f,c
 24832  006B8C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 24833  006B8E  22DA               	addwfc	fsr2h,f,c
 24834  006B90  C13F  FFDF         	movff	_communicationSettings+6,indf2
 24835  006B94  0012               	return		;funcret
 24836  006B96                     __end_of__fill_buffer_get_configuration:
 24837                           	opt stack 0
 24838                           tosu	equ	0xFFF
 24839                           tosh	equ	0xFFE
 24840                           tosl	equ	0xFFD
 24841                           pclath	equ	0xFFA
 24842                           tblptru	equ	0xFF8
 24843                           tblptrh	equ	0xFF7
 24844                           tblptrl	equ	0xFF6
 24845                           tablat	equ	0xFF5
 24846                           prodh	equ	0xFF4
 24847                           prodl	equ	0xFF3
 24848                           intcon	equ	0xFF2
 24849                           intcon2	equ	0xFF1
 24850                           intcon3	equ	0xFF0
 24851                           indf0	equ	0xFEF
 24852                           postinc0	equ	0xFEE
 24853                           fsr0h	equ	0xFEA
 24854                           fsr0l	equ	0xFE9
 24855                           wreg	equ	0xFE8
 24856                           indf1	equ	0xFE7
 24857                           postdec1	equ	0xFE5
 24858                           plusw1	equ	0xFE3
 24859                           fsr1h	equ	0xFE2
 24860                           fsr1l	equ	0xFE1
 24861                           indf2	equ	0xFDF
 24862                           postinc2	equ	0xFDE
 24863                           postdec2	equ	0xFDD
 24864                           plusw2	equ	0xFDB
 24865                           fsr2h	equ	0xFDA
 24866                           fsr2l	equ	0xFD9
 24867                           status	equ	0xFD8
 24868                           
 24869 ;; *************** function __fill_buffer_get_bootloader_details *****************
 24870 ;; Defined at:
 24871 ;;		line 273 in file "api.c"
 24872 ;; Parameters:    Size  Location     Type
 24873 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 24874 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 24875 ;; Auto vars:     Size  Location     Type
 24876 ;;  buffer_large    4   11[COMRAM] unsigned long 
 24877 ;;  buffer_small    2   15[COMRAM] unsigned int 
 24878 ;;  cntr            1   10[COMRAM] unsigned char 
 24879 ;;  data_length     1    9[COMRAM] unsigned char 
 24880 ;; Return value:  Size  Location     Type
 24881 ;;                  1    wreg      void 
 24882 ;; Registers used:
 24883 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 24884 ;; Tracked objects:
 24885 ;;		On entry : 0/0
 24886 ;;		On exit  : 0/0
 24887 ;;		Unchanged: 0/0
 24888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24889 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24890 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24891 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24892 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24893 ;;Total ram usage:       13 bytes
 24894 ;; Hardware stack levels used:    1
 24895 ;; Hardware stack levels required when called:    1
 24896 ;; This function calls:
 24897 ;;		_bootloader_get_entries
 24898 ;;		_bootloader_get_error
 24899 ;;		_bootloader_get_file_size
 24900 ;;		_bootloader_get_flashPagesWritten
 24901 ;;		_bootloader_get_rec_address
 24902 ;;		_bootloader_get_rec_checksum
 24903 ;;		_bootloader_get_rec_checksumCheck
 24904 ;;		_bootloader_get_rec_data
 24905 ;;		_bootloader_get_rec_dataLength
 24906 ;;		_bootloader_get_rec_recordType
 24907 ;;		_bootloader_get_total_entries
 24908 ;; This function is called by:
 24909 ;;		_api_prepare
 24910 ;; This function uses a non-reentrant model
 24911 ;;
 24912                           
 24913                           	psect	text116
 24914  002CE8                     __ptext116:
 24915                           	opt stack 0
 24916  002CE8                     __fill_buffer_get_bootloader_details:
 24917                           	opt stack 28
 24918                           
 24919                           ;api.c: 275: uint8_t cntr;;api.c: 276: uint8_t data_length;;api.c: 277: uint16_t buffer_
      +                          small;;api.c: 278: uint32_t buffer_large;;api.c: 281: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 24920                           
 24921                           ;incstack = 0
 24922  002CE8  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 24923  002CEC  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 24924  002CF0  0E13               	movlw	19
 24925  002CF2  6EDF               	movwf	indf2,c
 24926                           
 24927                           ;api.c: 284: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 24928  002CF4  EE20 F001          	lfsr	2,1
 24929  002CF8  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24930  002CFA  26D9               	addwf	fsr2l,f,c
 24931  002CFC  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24932  002CFE  22DA               	addwfc	fsr2h,f,c
 24933  002D00  0EC1               	movlw	193
 24934  002D02  6EDF               	movwf	indf2,c
 24935                           
 24936                           ;api.c: 285: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 24937  002D04  EE20 F002          	lfsr	2,2
 24938  002D08  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24939  002D0A  26D9               	addwf	fsr2l,f,c
 24940  002D0C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24941  002D0E  22DA               	addwfc	fsr2h,f,c
 24942  002D10  0E25               	movlw	37
 24943  002D12  6EDF               	movwf	indf2,c
 24944                           
 24945                           ;api.c: 288: buffer_large = bootloader_get_file_size();
 24946  002D14  EC83  F047         	call	_bootloader_get_file_size	;wreg free
 24947  002D18  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 24948  002D1C  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 24949  002D20  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 24950  002D24  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 24951                           
 24952                           ;api.c: 289: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 24953  002D28  EE20 F003          	lfsr	2,3
 24954  002D2C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24955  002D2E  26D9               	addwf	fsr2l,f,c
 24956  002D30  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24957  002D32  22DA               	addwfc	fsr2h,f,c
 24958  002D34  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 24959  002D36  6EDF               	movwf	indf2,c
 24960                           
 24961                           ;api.c: 290: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 24962  002D38  EE20 F004          	lfsr	2,4
 24963  002D3C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24964  002D3E  26D9               	addwf	fsr2l,f,c
 24965  002D40  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24966  002D42  22DA               	addwfc	fsr2h,f,c
 24967  002D44  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 24968                           
 24969                           ;api.c: 291: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 24970  002D48  EE20 F005          	lfsr	2,5
 24971  002D4C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24972  002D4E  26D9               	addwf	fsr2l,f,c
 24973  002D50  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24974  002D52  22DA               	addwfc	fsr2h,f,c
 24975  002D54  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 24976  002D56  6EDF               	movwf	indf2,c
 24977                           
 24978                           ;api.c: 292: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 24979  002D58  EE20 F006          	lfsr	2,6
 24980  002D5C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24981  002D5E  26D9               	addwf	fsr2l,f,c
 24982  002D60  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24983  002D62  22DA               	addwfc	fsr2h,f,c
 24984  002D64  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 24985                           
 24986                           ;api.c: 294: buffer_small = bootloader_get_entries();
 24987  002D68  ECED  F047         	call	_bootloader_get_entries	;wreg free
 24988  002D6C  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 24989  002D70  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 24990                           
 24991                           ;api.c: 295: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 24992  002D74  EE20 F007          	lfsr	2,7
 24993  002D78  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 24994  002D7A  26D9               	addwf	fsr2l,f,c
 24995  002D7C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 24996  002D7E  22DA               	addwfc	fsr2h,f,c
 24997  002D80  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 24998  002D82  6EDF               	movwf	indf2,c
 24999                           
 25000                           ;api.c: 296: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 25001  002D84  EE20 F008          	lfsr	2,8
 25002  002D88  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25003  002D8A  26D9               	addwf	fsr2l,f,c
 25004  002D8C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25005  002D8E  22DA               	addwfc	fsr2h,f,c
 25006  002D90  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25007                           
 25008                           ;api.c: 298: buffer_small = bootloader_get_total_entries();
 25009  002D94  ECF7  F047         	call	_bootloader_get_total_entries	;wreg free
 25010  002D98  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 25011  002D9C  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 25012                           
 25013                           ;api.c: 299: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25014  002DA0  EE20 F009          	lfsr	2,9
 25015  002DA4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25016  002DA6  26D9               	addwf	fsr2l,f,c
 25017  002DA8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25018  002DAA  22DA               	addwfc	fsr2h,f,c
 25019  002DAC  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25020  002DAE  6EDF               	movwf	indf2,c
 25021                           
 25022                           ;api.c: 300: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 25023  002DB0  EE20 F00A          	lfsr	2,10
 25024  002DB4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25025  002DB6  26D9               	addwf	fsr2l,f,c
 25026  002DB8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25027  002DBA  22DA               	addwfc	fsr2h,f,c
 25028  002DBC  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25029                           
 25030                           ;api.c: 302: outBuffer[11] = (uint8_t) bootloader_get_error();
 25031  002DC0  EE20 F00B          	lfsr	2,11
 25032  002DC4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25033  002DC6  26D9               	addwf	fsr2l,f,c
 25034  002DC8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25035  002DCA  22DA               	addwfc	fsr2h,f,c
 25036  002DCC  EC21  F048         	call	_bootloader_get_error	;wreg free
 25037  002DD0  6EDF               	movwf	indf2,c
 25038                           
 25039                           ;api.c: 304: buffer_small = bootloader_get_flashPagesWritten();
 25040  002DD2  ECF2  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 25041  002DD6  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 25042  002DDA  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 25043                           
 25044                           ;api.c: 305: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25045  002DDE  EE20 F00C          	lfsr	2,12
 25046  002DE2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25047  002DE4  26D9               	addwf	fsr2l,f,c
 25048  002DE6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25049  002DE8  22DA               	addwfc	fsr2h,f,c
 25050  002DEA  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25051  002DEC  6EDF               	movwf	indf2,c
 25052                           
 25053                           ;api.c: 306: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 25054  002DEE  EE20 F00D          	lfsr	2,13
 25055  002DF2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25056  002DF4  26D9               	addwf	fsr2l,f,c
 25057  002DF6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25058  002DF8  22DA               	addwfc	fsr2h,f,c
 25059  002DFA  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25060                           
 25061                           ;api.c: 309: buffer_small = bootloader_get_rec_dataLength();
 25062  002DFE  ECE3  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 25063  002E02  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 25064  002E06  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 25065                           
 25066                           ;api.c: 310: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25067  002E0A  EE20 F00E          	lfsr	2,14
 25068  002E0E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25069  002E10  26D9               	addwf	fsr2l,f,c
 25070  002E12  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25071  002E14  22DA               	addwfc	fsr2h,f,c
 25072  002E16  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25073  002E18  6EDF               	movwf	indf2,c
 25074                           
 25075                           ;api.c: 311: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 25076  002E1A  EE20 F00F          	lfsr	2,15
 25077  002E1E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25078  002E20  26D9               	addwf	fsr2l,f,c
 25079  002E22  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25080  002E24  22DA               	addwfc	fsr2h,f,c
 25081  002E26  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25082                           
 25083                           ;api.c: 313: buffer_small = bootloader_get_rec_address();
 25084  002E2A  ECE8  F047         	call	_bootloader_get_rec_address	;wreg free
 25085  002E2E  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 25086  002E32  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 25087                           
 25088                           ;api.c: 314: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 25089  002E36  EE20 F010          	lfsr	2,16
 25090  002E3A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25091  002E3C  26D9               	addwf	fsr2l,f,c
 25092  002E3E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25093  002E40  22DA               	addwfc	fsr2h,f,c
 25094  002E42  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 25095  002E44  6EDF               	movwf	indf2,c
 25096                           
 25097                           ;api.c: 315: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 25098  002E46  EE20 F011          	lfsr	2,17
 25099  002E4A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25100  002E4C  26D9               	addwf	fsr2l,f,c
 25101  002E4E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25102  002E50  22DA               	addwfc	fsr2h,f,c
 25103  002E52  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 25104                           
 25105                           ;api.c: 317: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 25106  002E56  EE20 F012          	lfsr	2,18
 25107  002E5A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25108  002E5C  26D9               	addwf	fsr2l,f,c
 25109  002E5E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25110  002E60  22DA               	addwfc	fsr2h,f,c
 25111  002E62  EC15  F048         	call	_bootloader_get_rec_recordType	;wreg free
 25112  002E66  6EDF               	movwf	indf2,c
 25113                           
 25114                           ;api.c: 318: outBuffer[19] = bootloader_get_rec_checksum();
 25115  002E68  EE20 F013          	lfsr	2,19
 25116  002E6C  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25117  002E6E  26D9               	addwf	fsr2l,f,c
 25118  002E70  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25119  002E72  22DA               	addwfc	fsr2h,f,c
 25120  002E74  EC1B  F048         	call	_bootloader_get_rec_checksum	;wreg free
 25121  002E78  6EDF               	movwf	indf2,c
 25122                           
 25123                           ;api.c: 319: outBuffer[20] = bootloader_get_rec_checksumCheck();
 25124  002E7A  EE20 F014          	lfsr	2,20
 25125  002E7E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25126  002E80  26D9               	addwf	fsr2l,f,c
 25127  002E82  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25128  002E84  22DA               	addwfc	fsr2h,f,c
 25129  002E86  EC18  F048         	call	_bootloader_get_rec_checksumCheck	;wreg free
 25130  002E8A  6EDF               	movwf	indf2,c
 25131                           
 25132                           ;api.c: 321: data_length = (uint8_t) bootloader_get_rec_dataLength();
 25133  002E8C  ECE3  F047         	call	_bootloader_get_rec_dataLength	;wreg free
 25134  002E90  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 25135  002E92  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25136                           
 25137                           ;api.c: 322: if(data_length>43)
 25138  002E94  0E2B               	movlw	43
 25139  002E96  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 25140  002E98  D002               	goto	l2756
 25141                           
 25142                           ;api.c: 323: {;api.c: 325: data_length = 43;
 25143  002E9A  0E2B               	movlw	43
 25144  002E9C  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 25145  002E9E                     l2756:
 25146                           
 25147                           ;api.c: 326: };api.c: 327: for(cntr=0; cntr<data_length; ++cntr)
 25148  002E9E  0E00               	movlw	0
 25149  002EA0  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 25150  002EA2  D014               	goto	l2757
 25151  002EA4                     
 25152                           ;api.c: 328: {;api.c: 329: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 25153  002EA4  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25154  002EA6  EC5B  F047         	call	_bootloader_get_rec_data
 25155  002EAA  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 25156  002EAC  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 25157  002EAE  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 25158  002EB0  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 25159  002EB2  0E15               	movlw	21
 25160  002EB4  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 25161  002EB6  0E00               	movlw	0
 25162  002EB8  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 25163  002EBA  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 25164  002EBC  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 25165  002EBE  6ED9               	movwf	fsr2l,c
 25166  002EC0  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 25167  002EC2  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 25168  002EC4  6EDA               	movwf	fsr2h,c
 25169  002EC6  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 25170  002ECA  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 25171  002ECC                     l2757:
 25172  002ECC  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 25173  002ECE  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 25174  002ED0  B0D8               	btfsc	status,0,c
 25175  002ED2  0012               	return	
 25176  002ED4  D7E7               	goto	l2758
 25177  002ED6                     __end_of__fill_buffer_get_bootloader_details:
 25178                           	opt stack 0
 25179                           tosu	equ	0xFFF
 25180                           tosh	equ	0xFFE
 25181                           tosl	equ	0xFFD
 25182                           pclath	equ	0xFFA
 25183                           tblptru	equ	0xFF8
 25184                           tblptrh	equ	0xFF7
 25185                           tblptrl	equ	0xFF6
 25186                           tablat	equ	0xFF5
 25187                           prodh	equ	0xFF4
 25188                           prodl	equ	0xFF3
 25189                           intcon	equ	0xFF2
 25190                           intcon2	equ	0xFF1
 25191                           intcon3	equ	0xFF0
 25192                           indf0	equ	0xFEF
 25193                           postinc0	equ	0xFEE
 25194                           fsr0h	equ	0xFEA
 25195                           fsr0l	equ	0xFE9
 25196                           wreg	equ	0xFE8
 25197                           indf1	equ	0xFE7
 25198                           postdec1	equ	0xFE5
 25199                           plusw1	equ	0xFE3
 25200                           fsr1h	equ	0xFE2
 25201                           fsr1l	equ	0xFE1
 25202                           indf2	equ	0xFDF
 25203                           postinc2	equ	0xFDE
 25204                           postdec2	equ	0xFDD
 25205                           plusw2	equ	0xFDB
 25206                           fsr2h	equ	0xFDA
 25207                           fsr2l	equ	0xFD9
 25208                           status	equ	0xFD8
 25209                           
 25210 ;; *************** function _bootloader_get_rec_recordType *****************
 25211 ;; Defined at:
 25212 ;;		line 491 in file "bootloader.c"
 25213 ;; Parameters:    Size  Location     Type
 25214 ;;		None
 25215 ;; Auto vars:     Size  Location     Type
 25216 ;;		None
 25217 ;; Return value:  Size  Location     Type
 25218 ;;                  1    wreg      enum E6772
 25219 ;; Registers used:
 25220 ;;		wreg, status,2
 25221 ;; Tracked objects:
 25222 ;;		On entry : 0/0
 25223 ;;		On exit  : 0/0
 25224 ;;		Unchanged: 0/0
 25225 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25226 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25227 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25228 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25229 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25230 ;;Total ram usage:        0 bytes
 25231 ;; Hardware stack levels used:    1
 25232 ;; This function calls:
 25233 ;;		Nothing
 25234 ;; This function is called by:
 25235 ;;		__fill_buffer_get_bootloader_details
 25236 ;; This function uses a non-reentrant model
 25237 ;;
 25238                           
 25239                           	psect	text117
 25240  00902A                     __ptext117:
 25241                           	opt stack 0
 25242  00902A                     _bootloader_get_rec_recordType:
 25243                           	opt stack 28
 25244                           
 25245                           ;bootloader.c: 493: return hex_file_entry.recordType;
 25246                           
 25247                           ;incstack = 0
 25248  00902A  0101               	movlb	1	; () banked
 25249  00902C  5197               	movf	(_hex_file_entry+4)& (0+255),w,b
 25250  00902E  0012               	return	
 25251  009030                     __end_of_bootloader_get_rec_recordType:
 25252                           	opt stack 0
 25253                           tosu	equ	0xFFF
 25254                           tosh	equ	0xFFE
 25255                           tosl	equ	0xFFD
 25256                           pclath	equ	0xFFA
 25257                           tblptru	equ	0xFF8
 25258                           tblptrh	equ	0xFF7
 25259                           tblptrl	equ	0xFF6
 25260                           tablat	equ	0xFF5
 25261                           prodh	equ	0xFF4
 25262                           prodl	equ	0xFF3
 25263                           intcon	equ	0xFF2
 25264                           intcon2	equ	0xFF1
 25265                           intcon3	equ	0xFF0
 25266                           indf0	equ	0xFEF
 25267                           postinc0	equ	0xFEE
 25268                           fsr0h	equ	0xFEA
 25269                           fsr0l	equ	0xFE9
 25270                           wreg	equ	0xFE8
 25271                           indf1	equ	0xFE7
 25272                           postdec1	equ	0xFE5
 25273                           plusw1	equ	0xFE3
 25274                           fsr1h	equ	0xFE2
 25275                           fsr1l	equ	0xFE1
 25276                           indf2	equ	0xFDF
 25277                           postinc2	equ	0xFDE
 25278                           postdec2	equ	0xFDD
 25279                           plusw2	equ	0xFDB
 25280                           fsr2h	equ	0xFDA
 25281                           fsr2l	equ	0xFD9
 25282                           status	equ	0xFD8
 25283                           
 25284 ;; *************** function _bootloader_get_rec_dataLength *****************
 25285 ;; Defined at:
 25286 ;;		line 480 in file "bootloader.c"
 25287 ;; Parameters:    Size  Location     Type
 25288 ;;		None
 25289 ;; Auto vars:     Size  Location     Type
 25290 ;;		None
 25291 ;; Return value:  Size  Location     Type
 25292 ;;                  2    0[COMRAM] unsigned int 
 25293 ;; Registers used:
 25294 ;;		None
 25295 ;; Tracked objects:
 25296 ;;		On entry : 0/0
 25297 ;;		On exit  : 0/0
 25298 ;;		Unchanged: 0/0
 25299 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25300 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25301 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25302 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25303 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25304 ;;Total ram usage:        2 bytes
 25305 ;; Hardware stack levels used:    1
 25306 ;; This function calls:
 25307 ;;		Nothing
 25308 ;; This function is called by:
 25309 ;;		__fill_buffer_get_bootloader_details
 25310 ;; This function uses a non-reentrant model
 25311 ;;
 25312                           
 25313                           	psect	text118
 25314  008FC6                     __ptext118:
 25315                           	opt stack 0
 25316  008FC6                     _bootloader_get_rec_dataLength:
 25317                           	opt stack 28
 25318                           
 25319                           ;bootloader.c: 482: return hex_file_entry.dataLength;
 25320                           
 25321                           ; BSR set to: 1
 25322                           ;incstack = 0
 25323  008FC6  C193  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 25324  008FCA  C194  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 25325  008FCE  0012               	return		;funcret
 25326  008FD0                     __end_of_bootloader_get_rec_dataLength:
 25327                           	opt stack 0
 25328                           tosu	equ	0xFFF
 25329                           tosh	equ	0xFFE
 25330                           tosl	equ	0xFFD
 25331                           pclath	equ	0xFFA
 25332                           tblptru	equ	0xFF8
 25333                           tblptrh	equ	0xFF7
 25334                           tblptrl	equ	0xFF6
 25335                           tablat	equ	0xFF5
 25336                           prodh	equ	0xFF4
 25337                           prodl	equ	0xFF3
 25338                           intcon	equ	0xFF2
 25339                           intcon2	equ	0xFF1
 25340                           intcon3	equ	0xFF0
 25341                           indf0	equ	0xFEF
 25342                           postinc0	equ	0xFEE
 25343                           fsr0h	equ	0xFEA
 25344                           fsr0l	equ	0xFE9
 25345                           wreg	equ	0xFE8
 25346                           indf1	equ	0xFE7
 25347                           postdec1	equ	0xFE5
 25348                           plusw1	equ	0xFE3
 25349                           fsr1h	equ	0xFE2
 25350                           fsr1l	equ	0xFE1
 25351                           indf2	equ	0xFDF
 25352                           postinc2	equ	0xFDE
 25353                           postdec2	equ	0xFDD
 25354                           plusw2	equ	0xFDB
 25355                           fsr2h	equ	0xFDA
 25356                           fsr2l	equ	0xFD9
 25357                           status	equ	0xFD8
 25358                           
 25359 ;; *************** function _bootloader_get_rec_data *****************
 25360 ;; Defined at:
 25361 ;;		line 496 in file "bootloader.c"
 25362 ;; Parameters:    Size  Location     Type
 25363 ;;  index           1    wreg     unsigned char 
 25364 ;; Auto vars:     Size  Location     Type
 25365 ;;  index           1    0[COMRAM] unsigned char 
 25366 ;; Return value:  Size  Location     Type
 25367 ;;                  1    wreg      unsigned char 
 25368 ;; Registers used:
 25369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 25370 ;; Tracked objects:
 25371 ;;		On entry : 0/0
 25372 ;;		On exit  : 0/0
 25373 ;;		Unchanged: 0/0
 25374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25375 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25376 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25378 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25379 ;;Total ram usage:        1 bytes
 25380 ;; Hardware stack levels used:    1
 25381 ;; This function calls:
 25382 ;;		Nothing
 25383 ;; This function is called by:
 25384 ;;		__fill_buffer_get_bootloader_details
 25385 ;; This function uses a non-reentrant model
 25386 ;;
 25387                           
 25388                           	psect	text119
 25389  008EB6                     __ptext119:
 25390                           	opt stack 0
 25391  008EB6                     _bootloader_get_rec_data:
 25392                           	opt stack 28
 25393                           
 25394                           ;incstack = 0
 25395                           ;bootloader_get_rec_data@index stored from wreg
 25396  008EB6  6E01               	movwf	bootloader_get_rec_data@index,c
 25397                           
 25398                           ;bootloader.c: 498: return hex_file_entry.data[index];
 25399  008EB8  5001               	movf	bootloader_get_rec_data@index,w,c
 25400  008EBA  0D01               	mullw	1
 25401  008EBC  0E98               	movlw	low (_hex_file_entry+5)
 25402  008EBE  24F3               	addwf	prodl,w,c
 25403  008EC0  6ED9               	movwf	fsr2l,c
 25404  008EC2  0E01               	movlw	high (_hex_file_entry+5)
 25405  008EC4  20F4               	addwfc	prodh,w,c
 25406  008EC6  6EDA               	movwf	fsr2h,c
 25407  008EC8  50DF               	movf	indf2,w,c
 25408  008ECA  0012               	return	
 25409  008ECC                     __end_of_bootloader_get_rec_data:
 25410                           	opt stack 0
 25411                           tosu	equ	0xFFF
 25412                           tosh	equ	0xFFE
 25413                           tosl	equ	0xFFD
 25414                           pclath	equ	0xFFA
 25415                           tblptru	equ	0xFF8
 25416                           tblptrh	equ	0xFF7
 25417                           tblptrl	equ	0xFF6
 25418                           tablat	equ	0xFF5
 25419                           prodh	equ	0xFF4
 25420                           prodl	equ	0xFF3
 25421                           intcon	equ	0xFF2
 25422                           intcon2	equ	0xFF1
 25423                           intcon3	equ	0xFF0
 25424                           indf0	equ	0xFEF
 25425                           postinc0	equ	0xFEE
 25426                           fsr0h	equ	0xFEA
 25427                           fsr0l	equ	0xFE9
 25428                           wreg	equ	0xFE8
 25429                           indf1	equ	0xFE7
 25430                           postdec1	equ	0xFE5
 25431                           plusw1	equ	0xFE3
 25432                           fsr1h	equ	0xFE2
 25433                           fsr1l	equ	0xFE1
 25434                           indf2	equ	0xFDF
 25435                           postinc2	equ	0xFDE
 25436                           postdec2	equ	0xFDD
 25437                           plusw2	equ	0xFDB
 25438                           fsr2h	equ	0xFDA
 25439                           fsr2l	equ	0xFD9
 25440                           status	equ	0xFD8
 25441                           
 25442 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 25443 ;; Defined at:
 25444 ;;		line 506 in file "bootloader.c"
 25445 ;; Parameters:    Size  Location     Type
 25446 ;;		None
 25447 ;; Auto vars:     Size  Location     Type
 25448 ;;		None
 25449 ;; Return value:  Size  Location     Type
 25450 ;;                  1    wreg      unsigned char 
 25451 ;; Registers used:
 25452 ;;		wreg, status,2
 25453 ;; Tracked objects:
 25454 ;;		On entry : 0/0
 25455 ;;		On exit  : 0/0
 25456 ;;		Unchanged: 0/0
 25457 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25458 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25459 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25460 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25461 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25462 ;;Total ram usage:        0 bytes
 25463 ;; Hardware stack levels used:    1
 25464 ;; This function calls:
 25465 ;;		Nothing
 25466 ;; This function is called by:
 25467 ;;		__fill_buffer_get_bootloader_details
 25468 ;; This function uses a non-reentrant model
 25469 ;;
 25470                           
 25471                           	psect	text120
 25472  009030                     __ptext120:
 25473                           	opt stack 0
 25474  009030                     _bootloader_get_rec_checksumCheck:
 25475                           	opt stack 28
 25476                           
 25477                           ;bootloader.c: 508: return hex_file_entry.checksumCheck;
 25478                           
 25479                           ;incstack = 0
 25480  009030  0101               	movlb	1	; () banked
 25481  009032  51A9               	movf	(_hex_file_entry+22)& (0+255),w,b
 25482  009034  0012               	return	
 25483  009036                     __end_of_bootloader_get_rec_checksumCheck:
 25484                           	opt stack 0
 25485                           tosu	equ	0xFFF
 25486                           tosh	equ	0xFFE
 25487                           tosl	equ	0xFFD
 25488                           pclath	equ	0xFFA
 25489                           tblptru	equ	0xFF8
 25490                           tblptrh	equ	0xFF7
 25491                           tblptrl	equ	0xFF6
 25492                           tablat	equ	0xFF5
 25493                           prodh	equ	0xFF4
 25494                           prodl	equ	0xFF3
 25495                           intcon	equ	0xFF2
 25496                           intcon2	equ	0xFF1
 25497                           intcon3	equ	0xFF0
 25498                           indf0	equ	0xFEF
 25499                           postinc0	equ	0xFEE
 25500                           fsr0h	equ	0xFEA
 25501                           fsr0l	equ	0xFE9
 25502                           wreg	equ	0xFE8
 25503                           indf1	equ	0xFE7
 25504                           postdec1	equ	0xFE5
 25505                           plusw1	equ	0xFE3
 25506                           fsr1h	equ	0xFE2
 25507                           fsr1l	equ	0xFE1
 25508                           indf2	equ	0xFDF
 25509                           postinc2	equ	0xFDE
 25510                           postdec2	equ	0xFDD
 25511                           plusw2	equ	0xFDB
 25512                           fsr2h	equ	0xFDA
 25513                           fsr2l	equ	0xFD9
 25514                           status	equ	0xFD8
 25515                           
 25516 ;; *************** function _bootloader_get_rec_checksum *****************
 25517 ;; Defined at:
 25518 ;;		line 501 in file "bootloader.c"
 25519 ;; Parameters:    Size  Location     Type
 25520 ;;		None
 25521 ;; Auto vars:     Size  Location     Type
 25522 ;;		None
 25523 ;; Return value:  Size  Location     Type
 25524 ;;                  1    wreg      unsigned char 
 25525 ;; Registers used:
 25526 ;;		wreg, status,2
 25527 ;; Tracked objects:
 25528 ;;		On entry : 0/0
 25529 ;;		On exit  : 0/0
 25530 ;;		Unchanged: 0/0
 25531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25532 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25533 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25534 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25535 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25536 ;;Total ram usage:        0 bytes
 25537 ;; Hardware stack levels used:    1
 25538 ;; This function calls:
 25539 ;;		Nothing
 25540 ;; This function is called by:
 25541 ;;		__fill_buffer_get_bootloader_details
 25542 ;; This function uses a non-reentrant model
 25543 ;;
 25544                           
 25545                           	psect	text121
 25546  009036                     __ptext121:
 25547                           	opt stack 0
 25548  009036                     _bootloader_get_rec_checksum:
 25549                           	opt stack 28
 25550                           
 25551                           ;bootloader.c: 503: return hex_file_entry.checksum;
 25552                           
 25553                           ; BSR set to: 1
 25554                           ;incstack = 0
 25555  009036  0101               	movlb	1	; () banked
 25556  009038  51A8               	movf	(_hex_file_entry+21)& (0+255),w,b
 25557  00903A  0012               	return	
 25558  00903C                     __end_of_bootloader_get_rec_checksum:
 25559                           	opt stack 0
 25560                           tosu	equ	0xFFF
 25561                           tosh	equ	0xFFE
 25562                           tosl	equ	0xFFD
 25563                           pclath	equ	0xFFA
 25564                           tblptru	equ	0xFF8
 25565                           tblptrh	equ	0xFF7
 25566                           tblptrl	equ	0xFF6
 25567                           tablat	equ	0xFF5
 25568                           prodh	equ	0xFF4
 25569                           prodl	equ	0xFF3
 25570                           intcon	equ	0xFF2
 25571                           intcon2	equ	0xFF1
 25572                           intcon3	equ	0xFF0
 25573                           indf0	equ	0xFEF
 25574                           postinc0	equ	0xFEE
 25575                           fsr0h	equ	0xFEA
 25576                           fsr0l	equ	0xFE9
 25577                           wreg	equ	0xFE8
 25578                           indf1	equ	0xFE7
 25579                           postdec1	equ	0xFE5
 25580                           plusw1	equ	0xFE3
 25581                           fsr1h	equ	0xFE2
 25582                           fsr1l	equ	0xFE1
 25583                           indf2	equ	0xFDF
 25584                           postinc2	equ	0xFDE
 25585                           postdec2	equ	0xFDD
 25586                           plusw2	equ	0xFDB
 25587                           fsr2h	equ	0xFDA
 25588                           fsr2l	equ	0xFD9
 25589                           status	equ	0xFD8
 25590                           
 25591 ;; *************** function __fill_buffer_find_file *****************
 25592 ;; Defined at:
 25593 ;;		line 372 in file "api.c"
 25594 ;; Parameters:    Size  Location     Type
 25595 ;;  inBuffer        2   54[COMRAM] PTR unsigned char 
 25596 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 25597 ;;  outBuffer       2   56[COMRAM] PTR unsigned char 
 25598 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 25599 ;; Auto vars:     Size  Location     Type
 25600 ;;  cntr            1   62[COMRAM] unsigned char 
 25601 ;; Return value:  Size  Location     Type
 25602 ;;                  1    wreg      void 
 25603 ;; Registers used:
 25604 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 25605 ;; Tracked objects:
 25606 ;;		On entry : 0/0
 25607 ;;		On exit  : 0/0
 25608 ;;		Unchanged: 0/0
 25609 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25610 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25611 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25612 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25613 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25614 ;;Total ram usage:        9 bytes
 25615 ;; Hardware stack levels used:    1
 25616 ;; Hardware stack levels required when called:    6
 25617 ;; This function calls:
 25618 ;;		_fat_find_file
 25619 ;; This function is called by:
 25620 ;;		_api_prepare
 25621 ;; This function uses a non-reentrant model
 25622 ;;
 25623                           
 25624                           	psect	text122
 25625  0069B8                     __ptext122:
 25626                           	opt stack 0
 25627  0069B8                     __fill_buffer_find_file:
 25628                           	opt stack 23
 25629                           
 25630                           ;api.c: 374: uint8_t cntr;;api.c: 377: outBuffer[0] = DATAREQUEST_FIND_FILE;
 25631                           
 25632                           ; BSR set to: 1
 25633                           ;incstack = 0
 25634  0069B8  C039  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 25635  0069BC  C03A  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 25636  0069C0  0E81               	movlw	129
 25637  0069C2  6EDF               	movwf	indf2,c
 25638                           
 25639                           ;api.c: 380: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 25640  0069C4  EE20 F001          	lfsr	2,1
 25641  0069C8  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25642  0069CA  26D9               	addwf	fsr2l,f,c
 25643  0069CC  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25644  0069CE  22DA               	addwfc	fsr2h,f,c
 25645  0069D0  0EC1               	movlw	193
 25646  0069D2  6EDF               	movwf	indf2,c
 25647                           
 25648                           ;api.c: 381: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 25649  0069D4  EE20 F002          	lfsr	2,2
 25650  0069D8  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25651  0069DA  26D9               	addwf	fsr2l,f,c
 25652  0069DC  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25653  0069DE  22DA               	addwfc	fsr2h,f,c
 25654  0069E0  0E25               	movlw	37
 25655  0069E2  6EDF               	movwf	indf2,c
 25656                           
 25657                           ;api.c: 384: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 25658  0069E4  0E01               	movlw	1
 25659  0069E6  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25660  0069E8  6E2C               	movwf	fat_find_file@name,c
 25661  0069EA  0E00               	movlw	0
 25662  0069EC  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25663  0069EE  6E2D               	movwf	fat_find_file@name+1,c
 25664  0069F0  0E09               	movlw	9
 25665  0069F2  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25666  0069F4  6E2E               	movwf	fat_find_file@extension,c
 25667  0069F6  0E00               	movlw	0
 25668  0069F8  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25669  0069FA  6E2F               	movwf	fat_find_file@extension+1,c
 25670  0069FC  EC61  F02C         	call	_fat_find_file	;wreg free
 25671  006A00  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25672  006A02  EE20 F003          	lfsr	2,3
 25673  006A06  5039               	movf	__fill_buffer_find_file@outBuffer,w,c
 25674  006A08  26D9               	addwf	fsr2l,f,c
 25675  006A0A  503A               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 25676  006A0C  22DA               	addwfc	fsr2h,f,c
 25677  006A0E  C03B  FFDF         	movff	??__fill_buffer_find_file,indf2
 25678                           
 25679                           ;api.c: 387: for(cntr=0; cntr<11; ++cntr)
 25680  006A12  0E00               	movlw	0
 25681  006A14  6E3F               	movwf	__fill_buffer_find_file@cntr,c
 25682  006A16                     l14533:
 25683  006A16  0E0A               	movlw	10
 25684  006A18  643F               	cpfsgt	__fill_buffer_find_file@cntr,c
 25685  006A1A  D001               	goto	l2769
 25686  006A1C  0012               	return	
 25687  006A1E                     l2769:
 25688                           
 25689                           ;api.c: 388: {;api.c: 389: outBuffer[cntr+12] = inBuffer[cntr+1];
 25690  006A1E  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25691  006A20  6E3B               	movwf	??__fill_buffer_find_file& (0+255),c
 25692  006A22  6A3C               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 25693  006A24  0E01               	movlw	1
 25694  006A26  263B               	addwf	??__fill_buffer_find_file,f,c
 25695  006A28  0E00               	movlw	0
 25696  006A2A  223C               	addwfc	??__fill_buffer_find_file+1,f,c
 25697  006A2C  503B               	movf	??__fill_buffer_find_file,w,c
 25698  006A2E  2437               	addwf	__fill_buffer_find_file@inBuffer,w,c
 25699  006A30  6ED9               	movwf	fsr2l,c
 25700  006A32  503C               	movf	??__fill_buffer_find_file+1,w,c
 25701  006A34  2038               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 25702  006A36  6EDA               	movwf	fsr2h,c
 25703  006A38  503F               	movf	__fill_buffer_find_file@cntr,w,c
 25704  006A3A  6E3D               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 25705  006A3C  6A3E               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 25706  006A3E  0E0C               	movlw	12
 25707  006A40  263D               	addwf	??__fill_buffer_find_file+2,f,c
 25708  006A42  0E00               	movlw	0
 25709  006A44  223E               	addwfc	??__fill_buffer_find_file+3,f,c
 25710  006A46  503D               	movf	??__fill_buffer_find_file+2,w,c
 25711  006A48  2439               	addwf	__fill_buffer_find_file@outBuffer,w,c
 25712  006A4A  6EE1               	movwf	fsr1l,c
 25713  006A4C  503E               	movf	??__fill_buffer_find_file+3,w,c
 25714  006A4E  203A               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 25715  006A50  6EE2               	movwf	fsr1h,c
 25716  006A52  CFDF FFE7          	movff	indf2,indf1
 25717  006A56  2A3F               	incf	__fill_buffer_find_file@cntr,f,c
 25718  006A58  D7DE               	goto	l14533
 25719  006A5A                     __end_of__fill_buffer_find_file:
 25720                           	opt stack 0
 25721                           tosu	equ	0xFFF
 25722                           tosh	equ	0xFFE
 25723                           tosl	equ	0xFFD
 25724                           pclath	equ	0xFFA
 25725                           tblptru	equ	0xFF8
 25726                           tblptrh	equ	0xFF7
 25727                           tblptrl	equ	0xFF6
 25728                           tablat	equ	0xFF5
 25729                           prodh	equ	0xFF4
 25730                           prodl	equ	0xFF3
 25731                           intcon	equ	0xFF2
 25732                           intcon2	equ	0xFF1
 25733                           intcon3	equ	0xFF0
 25734                           indf0	equ	0xFEF
 25735                           postinc0	equ	0xFEE
 25736                           fsr0h	equ	0xFEA
 25737                           fsr0l	equ	0xFE9
 25738                           wreg	equ	0xFE8
 25739                           indf1	equ	0xFE7
 25740                           postdec1	equ	0xFE5
 25741                           plusw1	equ	0xFE3
 25742                           fsr1h	equ	0xFE2
 25743                           fsr1l	equ	0xFE1
 25744                           indf2	equ	0xFDF
 25745                           postinc2	equ	0xFDE
 25746                           postdec2	equ	0xFDD
 25747                           plusw2	equ	0xFDB
 25748                           fsr2h	equ	0xFDA
 25749                           fsr2l	equ	0xFD9
 25750                           status	equ	0xFD8
 25751                           
 25752 ;; *************** function _api_parse *****************
 25753 ;; Defined at:
 25754 ;;		line 142 in file "api.c"
 25755 ;; Parameters:    Size  Location     Type
 25756 ;;  inBuffer        2   59[BANK0 ] PTR unsigned char 
 25757 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 25758 ;;  receivedData    1   61[BANK0 ] unsigned char 
 25759 ;; Auto vars:     Size  Location     Type
 25760 ;;  idx             1   64[BANK0 ] unsigned char 
 25761 ;; Return value:  Size  Location     Type
 25762 ;;                  1    wreg      void 
 25763 ;; Registers used:
 25764 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 25765 ;; Tracked objects:
 25766 ;;		On entry : 0/0
 25767 ;;		On exit  : 0/0
 25768 ;;		Unchanged: 0/0
 25769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25770 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25771 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25772 ;;      Temps:          0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25773 ;;      Totals:         0       6       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25774 ;;Total ram usage:        6 bytes
 25775 ;; Hardware stack levels used:    1
 25776 ;; Hardware stack levels required when called:   11
 25777 ;; This function calls:
 25778 ;;		__parse_command_long
 25779 ;;		__parse_command_short
 25780 ;; This function is called by:
 25781 ;;		_main
 25782 ;;		_APP_DeviceCustomHIDTasks
 25783 ;; This function uses a non-reentrant model
 25784 ;;
 25785                           
 25786                           	psect	text123
 25787  005C22                     __ptext123:
 25788                           	opt stack 0
 25789  005C22                     _api_parse:
 25790                           	opt stack 19
 25791                           
 25792                           ;api.c: 146: uint8_t idx;;api.c: 148: if(inBuffer[0]>0x7F)
 25793                           
 25794                           ;incstack = 0
 25795  005C22  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25796  005C26  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25797  005C2A  0E7F               	movlw	127
 25798  005C2C  64DF               	cpfsgt	indf2,c
 25799  005C2E  D001               	goto	l2726
 25800  005C30  0012               	return	
 25801  005C32                     l2726:
 25802                           
 25803                           ;api.c: 153: };api.c: 155: if(inBuffer[0]==DATAREQUEST_GET_ECHO)
 25804  005C32  C09B  FFD9         	movff	api_parse@inBuffer,fsr2l
 25805  005C36  C09C  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 25806  005C3A  0E20               	movlw	32
 25807  005C3C  18DE               	xorwf	postinc2,w,c
 25808  005C3E  B4D8               	btfsc	status,2,c
 25809  005C40  0012               	return	
 25810                           
 25811                           ;api.c: 160: };api.c: 162: idx = 1;
 25812                           
 25813                           ;api.c: 156: {;api.c: 159: return;
 25814  005C42  0E01               	movlw	1
 25815  005C44  0100               	movlb	0	; () banked
 25816  005C46  6FA0               	movwf	api_parse@idx& (0+255),b
 25817                           
 25818                           ;api.c: 163: while(idx<receivedDataLength)
 25819  005C48  D04F               	goto	l2734
 25820  005C4A                     
 25821                           ; BSR set to: 0
 25822                           ;api.c: 164: {;api.c: 166: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 25823                           
 25824                           ; BSR set to: 0
 25825  005C4A  51A0               	movf	api_parse@idx& (0+255),w,b
 25826  005C4C  0D01               	mullw	1
 25827  005C4E  50F3               	movf	prodl,w,c
 25828  005C50  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25829  005C52  6ED9               	movwf	fsr2l,c
 25830  005C54  50F4               	movf	prodh,w,c
 25831  005C56  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25832  005C58  6EDA               	movwf	fsr2h,c
 25833  005C5A  0E99               	movlw	153
 25834  005C5C  18DE               	xorwf	postinc2,w,c
 25835  005C5E  B4D8               	btfsc	status,2,c
 25836  005C60  0012               	return	
 25837  005C62  D027               	goto	l2732
 25838  005C64                     
 25839                           ; BSR set to: 0
 25840                           ;api.c: 174: _parse_command_short(inBuffer[idx]);
 25841                           
 25842                           ; BSR set to: 0
 25843  005C64  51A0               	movf	api_parse@idx& (0+255),w,b
 25844  005C66  0D01               	mullw	1
 25845  005C68  50F3               	movf	prodl,w,c
 25846  005C6A  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25847  005C6C  6ED9               	movwf	fsr2l,c
 25848  005C6E  50F4               	movf	prodh,w,c
 25849  005C70  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25850  005C72  6EDA               	movwf	fsr2h,c
 25851  005C74  50DF               	movf	indf2,w,c
 25852  005C76  EC8B  F031         	call	__parse_command_short
 25853  005C7A  D00B               	goto	l15133
 25854  005C7C                     
 25855                           ; BSR set to: 0
 25856                           ;api.c: 179: _parse_command_short(inBuffer[idx]);
 25857                           
 25858                           ; BSR set to: 0
 25859  005C7C  51A0               	movf	api_parse@idx& (0+255),w,b
 25860  005C7E  0D01               	mullw	1
 25861  005C80  50F3               	movf	prodl,w,c
 25862  005C82  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25863  005C84  6ED9               	movwf	fsr2l,c
 25864  005C86  50F4               	movf	prodh,w,c
 25865  005C88  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25866  005C8A  6EDA               	movwf	fsr2h,c
 25867  005C8C  50DF               	movf	indf2,w,c
 25868  005C8E  EC8B  F031         	call	__parse_command_short
 25869  005C92                     l15133:
 25870                           
 25871                           ;api.c: 180: ++idx;
 25872  005C92  0100               	movlb	0	; () banked
 25873  005C94  2BA0               	incf	api_parse@idx& (0+255),f,b
 25874                           
 25875                           ;api.c: 181: break;
 25876  005C96  D028               	goto	l2734
 25877  005C98                     
 25878                           ; BSR set to: 0
 25879                           ;api.c: 184: idx += _parse_command_long(&inBuffer[idx]);
 25880                           
 25881                           ; BSR set to: 0
 25882  005C98  51A0               	movf	api_parse@idx& (0+255),w,b
 25883  005C9A  0D01               	mullw	1
 25884  005C9C  50F3               	movf	prodl,w,c
 25885  005C9E  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25886  005CA0  6F98               	movwf	__parse_command_long@data& (0+255),b
 25887  005CA2  50F4               	movf	prodh,w,c
 25888  005CA4  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25889  005CA6  6F99               	movwf	(__parse_command_long@data+1)& (0+255),b
 25890  005CA8  EC0F  F02B         	call	__parse_command_long	;wreg free
 25891  005CAC  0100               	movlb	0	; () banked
 25892  005CAE  27A0               	addwf	api_parse@idx& (0+255),f,b
 25893                           
 25894                           ;api.c: 185: break;
 25895  005CB0  D01B               	goto	l2734
 25896  005CB2                     l2732:
 25897                           
 25898                           ; BSR set to: 0
 25899                           
 25900                           ; BSR set to: 0
 25901  005CB2  51A0               	movf	api_parse@idx& (0+255),w,b
 25902  005CB4  0D01               	mullw	1
 25903  005CB6  50F3               	movf	prodl,w,c
 25904  005CB8  259B               	addwf	api_parse@inBuffer& (0+255),w,b
 25905  005CBA  6ED9               	movwf	fsr2l,c
 25906  005CBC  50F4               	movf	prodh,w,c
 25907  005CBE  219C               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 25908  005CC0  6EDA               	movwf	fsr2h,c
 25909  005CC2  50DF               	movf	indf2,w,c
 25910  005CC4  0BF0               	andlw	240
 25911  005CC6  6F9E               	movwf	??_api_parse& (0+255),b
 25912  005CC8  6B9F               	clrf	(??_api_parse+1)& (0+255),b
 25913                           
 25914                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 25915                           ; Switch size 1, requested type "space"
 25916                           ; Number of cases is 1, Range of values is 0 to 0
 25917                           ; switch strategies available:
 25918                           ; Name         Instructions Cycles
 25919                           ; simple_byte            4     3 (average)
 25920                           ;	Chosen strategy is simple_byte
 25921  005CCA  519F               	movf	(??_api_parse+1)& (0+255),w,b
 25922  005CCC  0A00               	xorlw	0	; case 0
 25923  005CCE  A4D8               	btfss	status,2,c
 25924  005CD0  0012               	return	
 25925                           
 25926                           ; BSR set to: 0
 25927                           ; Switch size 1, requested type "space"
 25928                           ; Number of cases is 3, Range of values is 32 to 80
 25929                           ; switch strategies available:
 25930                           ; Name         Instructions Cycles
 25931                           ; simple_byte           10     6 (average)
 25932                           ;	Chosen strategy is simple_byte
 25933  005CD2  519E               	movf	??_api_parse& (0+255),w,b
 25934  005CD4  0A20               	xorlw	32	; case 32
 25935  005CD6  B4D8               	btfsc	status,2,c
 25936  005CD8  D7C5               	goto	l2733
 25937  005CDA  0A10               	xorlw	16	; case 48
 25938  005CDC  B4D8               	btfsc	status,2,c
 25939  005CDE  D7CE               	goto	l2735
 25940  005CE0  0A60               	xorlw	96	; case 80
 25941  005CE2  A4D8               	btfss	status,2,c
 25942  005CE4  0012               	return	
 25943  005CE6  D7D8               	goto	l2736
 25944  005CE8                     l2734:
 25945                           
 25946                           ; BSR set to: 0
 25947                           
 25948                           ; BSR set to: 0
 25949                           
 25950                           ; BSR set to: 0
 25951  005CE8  519D               	movf	api_parse@receivedDataLength& (0+255),w,b
 25952  005CEA  5DA0               	subwf	api_parse@idx& (0+255),w,b
 25953  005CEC  B0D8               	btfsc	status,0,c
 25954  005CEE  0012               	return	
 25955  005CF0  D7AC               	goto	l2730
 25956  005CF2                     __end_of_api_parse:
 25957                           	opt stack 0
 25958                           tosu	equ	0xFFF
 25959                           tosh	equ	0xFFE
 25960                           tosl	equ	0xFFD
 25961                           pclath	equ	0xFFA
 25962                           tblptru	equ	0xFF8
 25963                           tblptrh	equ	0xFF7
 25964                           tblptrl	equ	0xFF6
 25965                           tablat	equ	0xFF5
 25966                           prodh	equ	0xFF4
 25967                           prodl	equ	0xFF3
 25968                           intcon	equ	0xFF2
 25969                           intcon2	equ	0xFF1
 25970                           intcon3	equ	0xFF0
 25971                           indf0	equ	0xFEF
 25972                           postinc0	equ	0xFEE
 25973                           fsr0h	equ	0xFEA
 25974                           fsr0l	equ	0xFE9
 25975                           wreg	equ	0xFE8
 25976                           indf1	equ	0xFE7
 25977                           postdec1	equ	0xFE5
 25978                           plusw1	equ	0xFE3
 25979                           fsr1h	equ	0xFE2
 25980                           fsr1l	equ	0xFE1
 25981                           indf2	equ	0xFDF
 25982                           postinc2	equ	0xFDE
 25983                           postdec2	equ	0xFDD
 25984                           plusw2	equ	0xFDB
 25985                           fsr2h	equ	0xFDA
 25986                           fsr2l	equ	0xFD9
 25987                           status	equ	0xFD8
 25988                           
 25989 ;; *************** function __parse_command_short *****************
 25990 ;; Defined at:
 25991 ;;		line 477 in file "api.c"
 25992 ;; Parameters:    Size  Location     Type
 25993 ;;  cmd             1    wreg     unsigned char 
 25994 ;; Auto vars:     Size  Location     Type
 25995 ;;  cmd             1   43[COMRAM] unsigned char 
 25996 ;; Return value:  Size  Location     Type
 25997 ;;                  1    wreg      void 
 25998 ;; Registers used:
 25999 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26000 ;; Tracked objects:
 26001 ;;		On entry : 0/0
 26002 ;;		On exit  : 0/0
 26003 ;;		Unchanged: 0/0
 26004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26006 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26008 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26009 ;;Total ram usage:        1 bytes
 26010 ;; Hardware stack levels used:    1
 26011 ;; Hardware stack levels required when called:    8
 26012 ;; This function calls:
 26013 ;;		_i2c_eeprom_writeByte
 26014 ;;		_reboot
 26015 ;;		_system_delay_ms
 26016 ;; This function is called by:
 26017 ;;		_api_parse
 26018 ;; This function uses a non-reentrant model
 26019 ;;
 26020                           
 26021                           	psect	text124
 26022  006316                     __ptext124:
 26023                           	opt stack 0
 26024  006316                     __parse_command_short:
 26025                           	opt stack 21
 26026                           
 26027                           ;incstack = 0
 26028                           ;__parse_command_short@cmd stored from wreg
 26029  006316  6E2C               	movwf	__parse_command_short@cmd,c
 26030                           
 26031                           ;api.c: 479: switch(cmd)
 26032  006318  D041               	goto	l2782
 26033  00631A                     
 26034                           ;api.c: 482: i2c_eeprom_writeByte(0x100, 0x00);
 26035  00631A  0E01               	movlw	1
 26036  00631C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26037  00631E  0E00               	movlw	0
 26038  006320  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26039  006322  0E00               	movlw	0
 26040  006324  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26041  006326  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 26042                           
 26043                           ;api.c: 483: system_delay_ms(10);
 26044  00632A  0E0A               	movlw	10
 26045  00632C  EC19  F046         	call	_system_delay_ms
 26046                           
 26047                           ;api.c: 484: reboot();
 26048  006330  EC14  F047         	call	_reboot	;wreg free
 26049                           
 26050                           ;api.c: 485: break;
 26051  006334  0012               	return	
 26052  006336                     
 26053                           ;api.c: 488: i2c_eeprom_writeByte(0x100, 0x94);
 26054  006336  0E01               	movlw	1
 26055  006338  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26056  00633A  0E00               	movlw	0
 26057  00633C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26058  00633E  0E94               	movlw	148
 26059  006340  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26060  006342  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 26061                           
 26062                           ;api.c: 489: system_delay_ms(10);
 26063  006346  0E0A               	movlw	10
 26064  006348  EC19  F046         	call	_system_delay_ms
 26065                           
 26066                           ;api.c: 490: reboot();
 26067  00634C  EC14  F047         	call	_reboot	;wreg free
 26068                           
 26069                           ;api.c: 491: break;
 26070  006350  0012               	return	
 26071  006352                     
 26072                           ;api.c: 494: i2c_eeprom_writeByte(0x100, 0x78);
 26073  006352  0E01               	movlw	1
 26074  006354  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26075  006356  0E00               	movlw	0
 26076  006358  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26077  00635A  0E78               	movlw	120
 26078  00635C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26079  00635E  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 26080                           
 26081                           ;api.c: 495: system_delay_ms(10);
 26082  006362  0E0A               	movlw	10
 26083  006364  EC19  F046         	call	_system_delay_ms
 26084                           
 26085                           ;api.c: 496: reboot();
 26086  006368  EC14  F047         	call	_reboot	;wreg free
 26087                           
 26088                           ;api.c: 497: break;
 26089  00636C  0012               	return	
 26090  00636E                     
 26091                           ;api.c: 501: i2c_eeprom_writeByte(0x100, 0x78);
 26092  00636E  0E01               	movlw	1
 26093  006370  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 26094  006372  0E00               	movlw	0
 26095  006374  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 26096  006376  0E78               	movlw	120
 26097  006378  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 26098  00637A  ECE1  F042         	call	_i2c_eeprom_writeByte	;wreg free
 26099                           
 26100                           ;api.c: 502: system_delay_ms(10);
 26101  00637E  0E0A               	movlw	10
 26102  006380  EC19  F046         	call	_system_delay_ms
 26103                           
 26104                           ;api.c: 503: reboot();
 26105  006384  EC14  F047         	call	_reboot	;wreg free
 26106                           
 26107                           ;api.c: 504: break;
 26108  006388  0012               	return	
 26109  00638A                     
 26110                           ;api.c: 507: --os.encoderCount;
 26111  00638A  0100               	movlb	0	; () banked
 26112  00638C  07C5               	decf	_os& (0+255),f,b	;volatile
 26113                           
 26114                           ;api.c: 508: break;
 26115  00638E  0012               	return	
 26116  006390                     
 26117                           ;api.c: 511: ++os.encoderCount;
 26118                           
 26119                           ; BSR set to: 0
 26120  006390  0100               	movlb	0	; () banked
 26121  006392  2BC5               	incf	_os& (0+255),f,b	;volatile
 26122                           
 26123                           ;api.c: 512: break;
 26124  006394  0012               	return	
 26125  006396                     
 26126                           ;api.c: 515: ++os.buttonCount;
 26127                           
 26128                           ; BSR set to: 0
 26129  006396  0100               	movlb	0	; () banked
 26130  006398  2BC6               	incf	(_os+1)& (0+255),f,b	;volatile
 26131                           
 26132                           ; BSR set to: 0
 26133                           ;api.c: 517: }
 26134                           
 26135                           ;api.c: 516: break;
 26136  00639A  0012               	return	
 26137  00639C                     l2782:
 26138                           
 26139                           ; BSR set to: 0
 26140  00639C  502C               	movf	__parse_command_short@cmd,w,c
 26141                           
 26142                           ; Switch size 1, requested type "space"
 26143                           ; Number of cases is 7, Range of values is 32 to 62
 26144                           ; switch strategies available:
 26145                           ; Name         Instructions Cycles
 26146                           ; simple_byte           22    12 (average)
 26147                           ;	Chosen strategy is simple_byte
 26148  00639E  0A20               	xorlw	32	; case 32
 26149  0063A0  B4D8               	btfsc	status,2,c
 26150  0063A2  D7BB               	goto	l2783
 26151  0063A4  0A01               	xorlw	1	; case 33
 26152  0063A6  B4D8               	btfsc	status,2,c
 26153  0063A8  D7C6               	goto	l2785
 26154  0063AA  0A03               	xorlw	3	; case 34
 26155  0063AC  B4D8               	btfsc	status,2,c
 26156  0063AE  D7D1               	goto	l2786
 26157  0063B0  0A01               	xorlw	1	; case 35
 26158  0063B2  B4D8               	btfsc	status,2,c
 26159  0063B4  D7DC               	goto	l2787
 26160  0063B6  0A1F               	xorlw	31	; case 60
 26161  0063B8  B4D8               	btfsc	status,2,c
 26162  0063BA  D7E7               	goto	l2788
 26163  0063BC  0A01               	xorlw	1	; case 61
 26164  0063BE  B4D8               	btfsc	status,2,c
 26165  0063C0  D7E7               	goto	l2789
 26166  0063C2  0A03               	xorlw	3	; case 62
 26167  0063C4  A4D8               	btfss	status,2,c
 26168  0063C6  0012               	return	
 26169  0063C8  D7E6               	goto	l2790
 26170  0063CA                     __end_of__parse_command_short:
 26171                           	opt stack 0
 26172                           tosu	equ	0xFFF
 26173                           tosh	equ	0xFFE
 26174                           tosl	equ	0xFFD
 26175                           pclath	equ	0xFFA
 26176                           tblptru	equ	0xFF8
 26177                           tblptrh	equ	0xFF7
 26178                           tblptrl	equ	0xFF6
 26179                           tablat	equ	0xFF5
 26180                           prodh	equ	0xFF4
 26181                           prodl	equ	0xFF3
 26182                           intcon	equ	0xFF2
 26183                           intcon2	equ	0xFF1
 26184                           intcon3	equ	0xFF0
 26185                           indf0	equ	0xFEF
 26186                           postinc0	equ	0xFEE
 26187                           fsr0h	equ	0xFEA
 26188                           fsr0l	equ	0xFE9
 26189                           wreg	equ	0xFE8
 26190                           indf1	equ	0xFE7
 26191                           postdec1	equ	0xFE5
 26192                           plusw1	equ	0xFE3
 26193                           fsr1h	equ	0xFE2
 26194                           fsr1l	equ	0xFE1
 26195                           indf2	equ	0xFDF
 26196                           postinc2	equ	0xFDE
 26197                           postdec2	equ	0xFDD
 26198                           plusw2	equ	0xFDB
 26199                           fsr2h	equ	0xFDA
 26200                           fsr2l	equ	0xFD9
 26201                           status	equ	0xFD8
 26202                           
 26203 ;; *************** function _system_delay_ms *****************
 26204 ;; Defined at:
 26205 ;;		line 63 in file "os.c"
 26206 ;; Parameters:    Size  Location     Type
 26207 ;;  ms              1    wreg     unsigned char 
 26208 ;; Auto vars:     Size  Location     Type
 26209 ;;  ms              1    1[COMRAM] unsigned char 
 26210 ;;  cntr            1    2[COMRAM] unsigned char 
 26211 ;; Return value:  Size  Location     Type
 26212 ;;                  1    wreg      void 
 26213 ;; Registers used:
 26214 ;;		wreg, status,2, status,0, cstack
 26215 ;; Tracked objects:
 26216 ;;		On entry : 0/0
 26217 ;;		On exit  : 0/0
 26218 ;;		Unchanged: 0/0
 26219 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26220 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26221 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26222 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26223 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26224 ;;Total ram usage:        3 bytes
 26225 ;; Hardware stack levels used:    1
 26226 ;; This function calls:
 26227 ;;		Nothing
 26228 ;; This function is called by:
 26229 ;;		_system_minimal_init
 26230 ;;		__ui_encoder
 26231 ;;		__parse_command_short
 26232 ;; This function uses a non-reentrant model
 26233 ;;
 26234                           
 26235                           	psect	text125
 26236  008C32                     __ptext125:
 26237                           	opt stack 0
 26238  008C32                     _system_delay_ms:
 26239                           	opt stack 28
 26240                           
 26241                           ;incstack = 0
 26242                           ;system_delay_ms@ms stored from wreg
 26243  008C32  6E02               	movwf	system_delay_ms@ms,c
 26244                           
 26245                           ;os.c: 65: uint8_t cntr;;os.c: 66: for(cntr=0; cntr<ms; ++cntr)
 26246  008C34  0E00               	movlw	0
 26247  008C36  6E03               	movwf	system_delay_ms@cntr,c
 26248  008C38  D009               	goto	l1090
 26249  008C3A                     
 26250                           ;os.c: 67: {;os.c: 68: _delay((unsigned long)((6)*(8000000/4000.0)));
 26251  008C3A  0E10               	movlw	16
 26252  008C3C  6E01               	movwf	??_system_delay_ms& (0+255),c
 26253  008C3E  0E94               	movlw	148
 26254  008C40                     u13297:
 26255  008C40  2EE8               	decfsz	wreg,f,c
 26256  008C42  D7FE               	bra	u13297
 26257  008C44  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 26258  008C46  D7FC               	bra	u13297
 26259  008C48  D000               	nop2	
 26260  008C4A  2A03               	incf	system_delay_ms@cntr,f,c
 26261  008C4C                     l1090:
 26262  008C4C  5002               	movf	system_delay_ms@ms,w,c
 26263  008C4E  5C03               	subwf	system_delay_ms@cntr,w,c
 26264  008C50  B0D8               	btfsc	status,0,c
 26265  008C52  0012               	return	
 26266  008C54  D7F2               	goto	l1091
 26267  008C56                     __end_of_system_delay_ms:
 26268                           	opt stack 0
 26269                           tosu	equ	0xFFF
 26270                           tosh	equ	0xFFE
 26271                           tosl	equ	0xFFD
 26272                           pclath	equ	0xFFA
 26273                           tblptru	equ	0xFF8
 26274                           tblptrh	equ	0xFF7
 26275                           tblptrl	equ	0xFF6
 26276                           tablat	equ	0xFF5
 26277                           prodh	equ	0xFF4
 26278                           prodl	equ	0xFF3
 26279                           intcon	equ	0xFF2
 26280                           intcon2	equ	0xFF1
 26281                           intcon3	equ	0xFF0
 26282                           indf0	equ	0xFEF
 26283                           postinc0	equ	0xFEE
 26284                           fsr0h	equ	0xFEA
 26285                           fsr0l	equ	0xFE9
 26286                           wreg	equ	0xFE8
 26287                           indf1	equ	0xFE7
 26288                           postdec1	equ	0xFE5
 26289                           plusw1	equ	0xFE3
 26290                           fsr1h	equ	0xFE2
 26291                           fsr1l	equ	0xFE1
 26292                           indf2	equ	0xFDF
 26293                           postinc2	equ	0xFDE
 26294                           postdec2	equ	0xFDD
 26295                           plusw2	equ	0xFDB
 26296                           fsr2h	equ	0xFDA
 26297                           fsr2l	equ	0xFD9
 26298                           status	equ	0xFD8
 26299                           
 26300 ;; *************** function _reboot *****************
 26301 ;; Defined at:
 26302 ;;		line 259 in file "os.c"
 26303 ;; Parameters:    Size  Location     Type
 26304 ;;		None
 26305 ;; Auto vars:     Size  Location     Type
 26306 ;;		None
 26307 ;; Return value:  Size  Location     Type
 26308 ;;                  1    wreg      void 
 26309 ;; Registers used:
 26310 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26311 ;; Tracked objects:
 26312 ;;		On entry : 0/0
 26313 ;;		On exit  : 0/0
 26314 ;;		Unchanged: 0/0
 26315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26316 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26319 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26320 ;;Total ram usage:        0 bytes
 26321 ;; Hardware stack levels used:    1
 26322 ;; Hardware stack levels required when called:    7
 26323 ;; This function calls:
 26324 ;;		_display_prepare
 26325 ;;		_display_update
 26326 ;;		_ui_get_status
 26327 ;; This function is called by:
 26328 ;;		__ui_encoder
 26329 ;;		__parse_command_short
 26330 ;; This function uses a non-reentrant model
 26331 ;;
 26332                           
 26333                           	psect	text126
 26334  008E28                     __ptext126:
 26335                           	opt stack 0
 26336  008E28                     _reboot:
 26337                           	opt stack 21
 26338                           
 26339                           ;os.c: 262: os.display_mode = DISPLAY_MODE_BOOTLOADER_REBOOTING;
 26340                           
 26341                           ;incstack = 0
 26342  008E28  0E80               	movlw	128
 26343  008E2A  0100               	movlb	0	; () banked
 26344  008E2C  6FCA               	movwf	(_os+5)& (0+255),b	;volatile
 26345                           
 26346                           ; BSR set to: 0
 26347                           ;os.c: 263: display_prepare(os.display_mode);
 26348  008E2E  51CA               	movf	(_os+5)& (0+255),w,b	;volatile
 26349  008E30  ECA8  F02D         	call	_display_prepare
 26350                           
 26351                           ;os.c: 264: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
 26352  008E34  EC1E  F048         	call	_ui_get_status	;wreg free
 26353  008E38  0A05               	xorlw	5
 26354  008E3A  B4D8               	btfsc	status,2,c
 26355                           
 26356                           ;os.c: 265: {;os.c: 266: display_update();
 26357  008E3C  EC42  F03C         	call	_display_update	;wreg free
 26358  008E40                     
 26359                           ;os.c: 267: };os.c: 270: while(1);
 26360  008E40  D7FF               	goto	l1117
 26361  008E42                     __end_of_reboot:
 26362                           	opt stack 0
 26363                           tosu	equ	0xFFF
 26364                           tosh	equ	0xFFE
 26365                           tosl	equ	0xFFD
 26366                           pclath	equ	0xFFA
 26367                           tblptru	equ	0xFF8
 26368                           tblptrh	equ	0xFF7
 26369                           tblptrl	equ	0xFF6
 26370                           tablat	equ	0xFF5
 26371                           prodh	equ	0xFF4
 26372                           prodl	equ	0xFF3
 26373                           intcon	equ	0xFF2
 26374                           intcon2	equ	0xFF1
 26375                           intcon3	equ	0xFF0
 26376                           indf0	equ	0xFEF
 26377                           postinc0	equ	0xFEE
 26378                           fsr0h	equ	0xFEA
 26379                           fsr0l	equ	0xFE9
 26380                           wreg	equ	0xFE8
 26381                           indf1	equ	0xFE7
 26382                           postdec1	equ	0xFE5
 26383                           plusw1	equ	0xFE3
 26384                           fsr1h	equ	0xFE2
 26385                           fsr1l	equ	0xFE1
 26386                           indf2	equ	0xFDF
 26387                           postinc2	equ	0xFDE
 26388                           postdec2	equ	0xFDD
 26389                           plusw2	equ	0xFDB
 26390                           fsr2h	equ	0xFDA
 26391                           fsr2l	equ	0xFD9
 26392                           status	equ	0xFD8
 26393                           
 26394 ;; *************** function _ui_get_status *****************
 26395 ;; Defined at:
 26396 ;;		line 95 in file "ui.c"
 26397 ;; Parameters:    Size  Location     Type
 26398 ;;		None
 26399 ;; Auto vars:     Size  Location     Type
 26400 ;;		None
 26401 ;; Return value:  Size  Location     Type
 26402 ;;                  1    wreg      enum E7928
 26403 ;; Registers used:
 26404 ;;		wreg, status,2
 26405 ;; Tracked objects:
 26406 ;;		On entry : 0/0
 26407 ;;		On exit  : 0/0
 26408 ;;		Unchanged: 0/0
 26409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26413 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26414 ;;Total ram usage:        0 bytes
 26415 ;; Hardware stack levels used:    1
 26416 ;; This function calls:
 26417 ;;		Nothing
 26418 ;; This function is called by:
 26419 ;;		_main
 26420 ;;		_reboot
 26421 ;;		__fill_buffer_get_status
 26422 ;; This function uses a non-reentrant model
 26423 ;;
 26424                           
 26425                           	psect	text127
 26426  00903C                     __ptext127:
 26427                           	opt stack 0
 26428  00903C                     _ui_get_status:
 26429                           	opt stack 27
 26430                           
 26431                           ;ui.c: 97: return userInterfaceStatus;
 26432                           
 26433                           ;incstack = 0
 26434  00903C  0100               	movlb	0	; () banked
 26435  00903E  51E6               	movf	_userInterfaceStatus& (0+255),w,b
 26436  009040  0012               	return	
 26437  009042                     __end_of_ui_get_status:
 26438                           	opt stack 0
 26439                           tosu	equ	0xFFF
 26440                           tosh	equ	0xFFE
 26441                           tosl	equ	0xFFD
 26442                           pclath	equ	0xFFA
 26443                           tblptru	equ	0xFF8
 26444                           tblptrh	equ	0xFF7
 26445                           tblptrl	equ	0xFF6
 26446                           tablat	equ	0xFF5
 26447                           prodh	equ	0xFF4
 26448                           prodl	equ	0xFF3
 26449                           intcon	equ	0xFF2
 26450                           intcon2	equ	0xFF1
 26451                           intcon3	equ	0xFF0
 26452                           indf0	equ	0xFEF
 26453                           postinc0	equ	0xFEE
 26454                           fsr0h	equ	0xFEA
 26455                           fsr0l	equ	0xFE9
 26456                           wreg	equ	0xFE8
 26457                           indf1	equ	0xFE7
 26458                           postdec1	equ	0xFE5
 26459                           plusw1	equ	0xFE3
 26460                           fsr1h	equ	0xFE2
 26461                           fsr1l	equ	0xFE1
 26462                           indf2	equ	0xFDF
 26463                           postinc2	equ	0xFDE
 26464                           postdec2	equ	0xFDD
 26465                           plusw2	equ	0xFDB
 26466                           fsr2h	equ	0xFDA
 26467                           fsr2l	equ	0xFD9
 26468                           status	equ	0xFD8
 26469                           
 26470 ;; *************** function _display_update *****************
 26471 ;; Defined at:
 26472 ;;		line 555 in file "display.c"
 26473 ;; Parameters:    Size  Location     Type
 26474 ;;		None
 26475 ;; Auto vars:     Size  Location     Type
 26476 ;;		None
 26477 ;; Return value:  Size  Location     Type
 26478 ;;                  1    wreg      void 
 26479 ;; Registers used:
 26480 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26481 ;; Tracked objects:
 26482 ;;		On entry : 0/0
 26483 ;;		On exit  : 0/0
 26484 ;;		Unchanged: 0/0
 26485 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26486 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26487 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26488 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26489 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26490 ;;Total ram usage:        0 bytes
 26491 ;; Hardware stack levels used:    1
 26492 ;; Hardware stack levels required when called:    4
 26493 ;; This function calls:
 26494 ;;		_i2c_display_cursor
 26495 ;;		_i2c_display_write_fixed
 26496 ;; This function is called by:
 26497 ;;		_main
 26498 ;;		_reboot
 26499 ;; This function uses a non-reentrant model
 26500 ;;
 26501                           
 26502                           	psect	text128
 26503  007884                     __ptext128:
 26504                           	opt stack 0
 26505  007884                     _display_update:
 26506                           	opt stack 23
 26507                           
 26508                           ;display.c: 557: i2c_display_cursor(0, 0);
 26509                           
 26510                           ; BSR set to: 0
 26511                           ;incstack = 0
 26512  007884  0E00               	movlw	0
 26513  007886  6E0E               	movwf	i2c_display_cursor@position,c
 26514  007888  0E00               	movlw	0
 26515  00788A  EC2B  F046         	call	_i2c_display_cursor
 26516                           
 26517                           ;display.c: 558: i2c_display_write_fixed(&display_content[0][0], 20);
 26518  00788E  0E00               	movlw	low _display_content
 26519  007890  6E06               	movwf	i2c_display_write_fixed@data,c
 26520  007892  0E02               	movlw	high _display_content
 26521  007894  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26522  007896  0E14               	movlw	20
 26523  007898  6E08               	movwf	i2c_display_write_fixed@length,c
 26524  00789A  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26525                           
 26526                           ;display.c: 559: i2c_display_cursor(1, 0);
 26527  00789E  0E00               	movlw	0
 26528  0078A0  6E0E               	movwf	i2c_display_cursor@position,c
 26529  0078A2  0E01               	movlw	1
 26530  0078A4  EC2B  F046         	call	_i2c_display_cursor
 26531                           
 26532                           ;display.c: 560: i2c_display_write_fixed(&display_content[1][0], 20);
 26533  0078A8  0E14               	movlw	low (_display_content+20)
 26534  0078AA  6E06               	movwf	i2c_display_write_fixed@data,c
 26535  0078AC  0E02               	movlw	high (_display_content+20)
 26536  0078AE  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26537  0078B0  0E14               	movlw	20
 26538  0078B2  6E08               	movwf	i2c_display_write_fixed@length,c
 26539  0078B4  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26540                           
 26541                           ;display.c: 561: i2c_display_cursor(2, 0);
 26542  0078B8  0E00               	movlw	0
 26543  0078BA  6E0E               	movwf	i2c_display_cursor@position,c
 26544  0078BC  0E02               	movlw	2
 26545  0078BE  EC2B  F046         	call	_i2c_display_cursor
 26546                           
 26547                           ;display.c: 562: i2c_display_write_fixed(&display_content[2][0], 20);
 26548  0078C2  0E28               	movlw	low (_display_content+40)
 26549  0078C4  6E06               	movwf	i2c_display_write_fixed@data,c
 26550  0078C6  0E02               	movlw	high (_display_content+40)
 26551  0078C8  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26552  0078CA  0E14               	movlw	20
 26553  0078CC  6E08               	movwf	i2c_display_write_fixed@length,c
 26554  0078CE  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26555                           
 26556                           ;display.c: 563: i2c_display_cursor(3, 0);
 26557  0078D2  0E00               	movlw	0
 26558  0078D4  6E0E               	movwf	i2c_display_cursor@position,c
 26559  0078D6  0E03               	movlw	3
 26560  0078D8  EC2B  F046         	call	_i2c_display_cursor
 26561                           
 26562                           ;display.c: 564: i2c_display_write_fixed(&display_content[3][0], 20);
 26563  0078DC  0E3C               	movlw	low (_display_content+60)
 26564  0078DE  6E06               	movwf	i2c_display_write_fixed@data,c
 26565  0078E0  0E02               	movlw	high (_display_content+60)
 26566  0078E2  6E07               	movwf	i2c_display_write_fixed@data+1,c
 26567  0078E4  0E14               	movlw	20
 26568  0078E6  6E08               	movwf	i2c_display_write_fixed@length,c
 26569  0078E8  EC69  F03F         	call	_i2c_display_write_fixed	;wreg free
 26570  0078EC  0012               	return		;funcret
 26571  0078EE                     __end_of_display_update:
 26572                           	opt stack 0
 26573                           tosu	equ	0xFFF
 26574                           tosh	equ	0xFFE
 26575                           tosl	equ	0xFFD
 26576                           pclath	equ	0xFFA
 26577                           tblptru	equ	0xFF8
 26578                           tblptrh	equ	0xFF7
 26579                           tblptrl	equ	0xFF6
 26580                           tablat	equ	0xFF5
 26581                           prodh	equ	0xFF4
 26582                           prodl	equ	0xFF3
 26583                           intcon	equ	0xFF2
 26584                           intcon2	equ	0xFF1
 26585                           intcon3	equ	0xFF0
 26586                           indf0	equ	0xFEF
 26587                           postinc0	equ	0xFEE
 26588                           fsr0h	equ	0xFEA
 26589                           fsr0l	equ	0xFE9
 26590                           wreg	equ	0xFE8
 26591                           indf1	equ	0xFE7
 26592                           postdec1	equ	0xFE5
 26593                           plusw1	equ	0xFE3
 26594                           fsr1h	equ	0xFE2
 26595                           fsr1l	equ	0xFE1
 26596                           indf2	equ	0xFDF
 26597                           postinc2	equ	0xFDE
 26598                           postdec2	equ	0xFDD
 26599                           plusw2	equ	0xFDB
 26600                           fsr2h	equ	0xFDA
 26601                           fsr2l	equ	0xFD9
 26602                           status	equ	0xFD8
 26603                           
 26604 ;; *************** function _i2c_display_write_fixed *****************
 26605 ;; Defined at:
 26606 ;;		line 270 in file "i2c.c"
 26607 ;; Parameters:    Size  Location     Type
 26608 ;;  data            2    5[COMRAM] PTR unsigned char 
 26609 ;;		 -> display_content(80), 
 26610 ;;  length          1    7[COMRAM] unsigned char 
 26611 ;; Auto vars:     Size  Location     Type
 26612 ;;  pos             1    8[COMRAM] unsigned char 
 26613 ;; Return value:  Size  Location     Type
 26614 ;;                  1    wreg      void 
 26615 ;; Registers used:
 26616 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26617 ;; Tracked objects:
 26618 ;;		On entry : 0/0
 26619 ;;		On exit  : 0/0
 26620 ;;		Unchanged: 0/0
 26621 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26622 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26623 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26624 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26625 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26626 ;;Total ram usage:        4 bytes
 26627 ;; Hardware stack levels used:    1
 26628 ;; Hardware stack levels required when called:    1
 26629 ;; This function calls:
 26630 ;;		__i2c_send
 26631 ;;		__i2c_start
 26632 ;;		__i2c_stop
 26633 ;;		__i2c_wait_idle
 26634 ;;		_i2c_set_frequency
 26635 ;; This function is called by:
 26636 ;;		_display_update
 26637 ;; This function uses a non-reentrant model
 26638 ;;
 26639                           
 26640                           	psect	text129
 26641  007ED2                     __ptext129:
 26642                           	opt stack 0
 26643  007ED2                     _i2c_display_write_fixed:
 26644                           	opt stack 25
 26645                           
 26646                           ;i2c.c: 272: uint8_t pos;;i2c.c: 275: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26647                           
 26648                           ;incstack = 0
 26649  007ED2  0E02               	movlw	2
 26650  007ED4  EC51  F045         	call	_i2c_set_frequency
 26651                           
 26652                           ;i2c.c: 277: _i2c_wait_idle();
 26653  007ED8  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26654                           
 26655                           ;i2c.c: 278: _i2c_start();
 26656  007EDC  EC0A  F048         	call	__i2c_start	;wreg free
 26657                           
 26658                           ;i2c.c: 279: _i2c_wait_idle();
 26659  007EE0  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26660                           
 26661                           ;i2c.c: 280: _i2c_send(0b01111000);
 26662  007EE4  0E78               	movlw	120
 26663  007EE6  EC0E  F048         	call	__i2c_send
 26664                           
 26665                           ;i2c.c: 281: _i2c_wait_idle();
 26666  007EEA  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26667                           
 26668                           ;i2c.c: 282: _i2c_send(0b01000000);
 26669  007EEE  0E40               	movlw	64
 26670  007EF0  EC0E  F048         	call	__i2c_send
 26671                           
 26672                           ;i2c.c: 283: _i2c_wait_idle();
 26673  007EF4  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26674                           
 26675                           ;i2c.c: 286: for(pos=0; pos<length; ++pos)
 26676  007EF8  0E00               	movlw	0
 26677  007EFA  6E09               	movwf	i2c_display_write_fixed@pos,c
 26678  007EFC  D00E               	goto	l1232
 26679  007EFE                     
 26680                           ;i2c.c: 287: {;i2c.c: 288: _i2c_send(data[pos]);
 26681  007EFE  5009               	movf	i2c_display_write_fixed@pos,w,c
 26682  007F00  0D01               	mullw	1
 26683  007F02  50F3               	movf	prodl,w,c
 26684  007F04  2406               	addwf	i2c_display_write_fixed@data,w,c
 26685  007F06  6ED9               	movwf	fsr2l,c
 26686  007F08  50F4               	movf	prodh,w,c
 26687  007F0A  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
 26688  007F0C  6EDA               	movwf	fsr2h,c
 26689  007F0E  50DF               	movf	indf2,w,c
 26690  007F10  EC0E  F048         	call	__i2c_send
 26691                           
 26692                           ;i2c.c: 289: _i2c_wait_idle();
 26693  007F14  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 26694  007F18  2A09               	incf	i2c_display_write_fixed@pos,f,c
 26695  007F1A                     l1232:
 26696  007F1A  5008               	movf	i2c_display_write_fixed@length,w,c
 26697  007F1C  5C09               	subwf	i2c_display_write_fixed@pos,w,c
 26698  007F1E  A0D8               	btfss	status,0,c
 26699  007F20  D7EE               	goto	l1233
 26700                           
 26701                           ;i2c.c: 290: };i2c.c: 292: _i2c_stop();
 26702  007F22  EC06  F048         	call	__i2c_stop	;wreg free
 26703  007F26  0012               	return		;funcret
 26704  007F28                     __end_of_i2c_display_write_fixed:
 26705                           	opt stack 0
 26706                           tosu	equ	0xFFF
 26707                           tosh	equ	0xFFE
 26708                           tosl	equ	0xFFD
 26709                           pclath	equ	0xFFA
 26710                           tblptru	equ	0xFF8
 26711                           tblptrh	equ	0xFF7
 26712                           tblptrl	equ	0xFF6
 26713                           tablat	equ	0xFF5
 26714                           prodh	equ	0xFF4
 26715                           prodl	equ	0xFF3
 26716                           intcon	equ	0xFF2
 26717                           intcon2	equ	0xFF1
 26718                           intcon3	equ	0xFF0
 26719                           indf0	equ	0xFEF
 26720                           postinc0	equ	0xFEE
 26721                           fsr0h	equ	0xFEA
 26722                           fsr0l	equ	0xFE9
 26723                           wreg	equ	0xFE8
 26724                           indf1	equ	0xFE7
 26725                           postdec1	equ	0xFE5
 26726                           plusw1	equ	0xFE3
 26727                           fsr1h	equ	0xFE2
 26728                           fsr1l	equ	0xFE1
 26729                           indf2	equ	0xFDF
 26730                           postinc2	equ	0xFDE
 26731                           postdec2	equ	0xFDD
 26732                           plusw2	equ	0xFDB
 26733                           fsr2h	equ	0xFDA
 26734                           fsr2l	equ	0xFD9
 26735                           status	equ	0xFD8
 26736                           
 26737 ;; *************** function _i2c_display_cursor *****************
 26738 ;; Defined at:
 26739 ;;		line 230 in file "i2c.c"
 26740 ;; Parameters:    Size  Location     Type
 26741 ;;  line            1    wreg     unsigned char 
 26742 ;;  position        1   13[COMRAM] unsigned char 
 26743 ;; Auto vars:     Size  Location     Type
 26744 ;;  line            1   14[COMRAM] unsigned char 
 26745 ;;  address         1   15[COMRAM] unsigned char 
 26746 ;; Return value:  Size  Location     Type
 26747 ;;                  1    wreg      void 
 26748 ;; Registers used:
 26749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26750 ;; Tracked objects:
 26751 ;;		On entry : 0/0
 26752 ;;		On exit  : 0/0
 26753 ;;		Unchanged: 0/0
 26754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26755 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26756 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26758 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26759 ;;Total ram usage:        3 bytes
 26760 ;; Hardware stack levels used:    1
 26761 ;; Hardware stack levels required when called:    3
 26762 ;; This function calls:
 26763 ;;		__ic2_display_set_address
 26764 ;;		_i2c_set_frequency
 26765 ;; This function is called by:
 26766 ;;		_display_update
 26767 ;; This function uses a non-reentrant model
 26768 ;;
 26769                           
 26770                           	psect	text130
 26771  008C56                     __ptext130:
 26772                           	opt stack 0
 26773  008C56                     _i2c_display_cursor:
 26774                           	opt stack 23
 26775                           
 26776                           ;incstack = 0
 26777                           ;i2c_display_cursor@line stored from wreg
 26778  008C56  6E0F               	movwf	i2c_display_cursor@line,c
 26779                           
 26780                           ;i2c.c: 232: uint8_t address;;i2c.c: 235: line &= 0b11;
 26781  008C58  0E03               	movlw	3
 26782  008C5A  160F               	andwf	i2c_display_cursor@line,f,c
 26783                           
 26784                           ;i2c.c: 236: address = line<<5;
 26785  008C5C  380F               	swapf	i2c_display_cursor@line,w,c
 26786  008C5E  46E8               	rlncf	wreg,f,c
 26787  008C60  0BE0               	andlw	224
 26788  008C62  6E10               	movwf	i2c_display_cursor@address,c
 26789                           
 26790                           ;i2c.c: 237: position &= 0b11111;
 26791  008C64  0E1F               	movlw	31
 26792  008C66  160E               	andwf	i2c_display_cursor@position,f,c
 26793                           
 26794                           ;i2c.c: 238: address |= position;
 26795  008C68  500E               	movf	i2c_display_cursor@position,w,c
 26796  008C6A  1210               	iorwf	i2c_display_cursor@address,f,c
 26797                           
 26798                           ;i2c.c: 241: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26799  008C6C  0E02               	movlw	2
 26800  008C6E  EC51  F045         	call	_i2c_set_frequency
 26801                           
 26802                           ;i2c.c: 244: _ic2_display_set_address(address);
 26803  008C72  5010               	movf	i2c_display_cursor@address,w,c
 26804  008C74  ECCD  F045         	call	__ic2_display_set_address
 26805  008C78  0012               	return		;funcret
 26806  008C7A                     __end_of_i2c_display_cursor:
 26807                           	opt stack 0
 26808                           tosu	equ	0xFFF
 26809                           tosh	equ	0xFFE
 26810                           tosl	equ	0xFFD
 26811                           pclath	equ	0xFFA
 26812                           tblptru	equ	0xFF8
 26813                           tblptrh	equ	0xFF7
 26814                           tblptrl	equ	0xFF6
 26815                           tablat	equ	0xFF5
 26816                           prodh	equ	0xFF4
 26817                           prodl	equ	0xFF3
 26818                           intcon	equ	0xFF2
 26819                           intcon2	equ	0xFF1
 26820                           intcon3	equ	0xFF0
 26821                           indf0	equ	0xFEF
 26822                           postinc0	equ	0xFEE
 26823                           fsr0h	equ	0xFEA
 26824                           fsr0l	equ	0xFE9
 26825                           wreg	equ	0xFE8
 26826                           indf1	equ	0xFE7
 26827                           postdec1	equ	0xFE5
 26828                           plusw1	equ	0xFE3
 26829                           fsr1h	equ	0xFE2
 26830                           fsr1l	equ	0xFE1
 26831                           indf2	equ	0xFDF
 26832                           postinc2	equ	0xFDE
 26833                           postdec2	equ	0xFDD
 26834                           plusw2	equ	0xFDB
 26835                           fsr2h	equ	0xFDA
 26836                           fsr2l	equ	0xFD9
 26837                           status	equ	0xFD8
 26838                           
 26839 ;; *************** function __ic2_display_set_address *****************
 26840 ;; Defined at:
 26841 ;;		line 194 in file "i2c.c"
 26842 ;; Parameters:    Size  Location     Type
 26843 ;;  address         1    wreg     unsigned char 
 26844 ;; Auto vars:     Size  Location     Type
 26845 ;;  address         1   10[COMRAM] unsigned char 
 26846 ;;  data_array      2   11[COMRAM] unsigned char [2]
 26847 ;; Return value:  Size  Location     Type
 26848 ;;                  1    wreg      void 
 26849 ;; Registers used:
 26850 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26851 ;; Tracked objects:
 26852 ;;		On entry : 0/0
 26853 ;;		On exit  : 0/0
 26854 ;;		Unchanged: 0/0
 26855 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26856 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26857 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26858 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26859 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26860 ;;Total ram usage:        3 bytes
 26861 ;; Hardware stack levels used:    1
 26862 ;; Hardware stack levels required when called:    2
 26863 ;; This function calls:
 26864 ;;		__i2c_write
 26865 ;;		_i2c_set_frequency
 26866 ;; This function is called by:
 26867 ;;		_i2c_display_cursor
 26868 ;; This function uses a non-reentrant model
 26869 ;;
 26870                           
 26871                           	psect	text131
 26872  008B9A                     __ptext131:
 26873                           	opt stack 0
 26874  008B9A                     __ic2_display_set_address:
 26875                           	opt stack 23
 26876                           
 26877                           ;incstack = 0
 26878                           ;__ic2_display_set_address@address stored from wreg
 26879  008B9A  6E0B               	movwf	__ic2_display_set_address@address,c
 26880                           
 26881                           ;i2c.c: 196: uint8_t data_array[2];;i2c.c: 197: data_array[0] = 0b00000000;
 26882  008B9C  0E00               	movlw	0
 26883  008B9E  6E0C               	movwf	__ic2_display_set_address@data_array,c
 26884                           
 26885                           ;i2c.c: 198: data_array[1] = 0b10000000 | address;
 26886  008BA0  500B               	movf	__ic2_display_set_address@address,w,c
 26887  008BA2  0980               	iorlw	128
 26888  008BA4  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
 26889                           
 26890                           ;i2c.c: 201: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 26891  008BA6  0E02               	movlw	2
 26892  008BA8  EC51  F045         	call	_i2c_set_frequency
 26893                           
 26894                           ;i2c.c: 204: _i2c_write(0b01111000, &data_array[0], 2);
 26895  008BAC  0E0C               	movlw	low __ic2_display_set_address@data_array
 26896  008BAE  6E06               	movwf	__i2c_write@data,c
 26897  008BB0  0E00               	movlw	high __ic2_display_set_address@data_array
 26898  008BB2  6E07               	movwf	__i2c_write@data+1,c
 26899  008BB4  0E02               	movlw	2
 26900  008BB6  6E08               	movwf	__i2c_write@length,c
 26901  008BB8  0E78               	movlw	120
 26902  008BBA  ECAD  F041         	call	__i2c_write
 26903  008BBE  0012               	return		;funcret
 26904  008BC0                     __end_of__ic2_display_set_address:
 26905                           	opt stack 0
 26906                           tosu	equ	0xFFF
 26907                           tosh	equ	0xFFE
 26908                           tosl	equ	0xFFD
 26909                           pclath	equ	0xFFA
 26910                           tblptru	equ	0xFF8
 26911                           tblptrh	equ	0xFF7
 26912                           tblptrl	equ	0xFF6
 26913                           tablat	equ	0xFF5
 26914                           prodh	equ	0xFF4
 26915                           prodl	equ	0xFF3
 26916                           intcon	equ	0xFF2
 26917                           intcon2	equ	0xFF1
 26918                           intcon3	equ	0xFF0
 26919                           indf0	equ	0xFEF
 26920                           postinc0	equ	0xFEE
 26921                           fsr0h	equ	0xFEA
 26922                           fsr0l	equ	0xFE9
 26923                           wreg	equ	0xFE8
 26924                           indf1	equ	0xFE7
 26925                           postdec1	equ	0xFE5
 26926                           plusw1	equ	0xFE3
 26927                           fsr1h	equ	0xFE2
 26928                           fsr1l	equ	0xFE1
 26929                           indf2	equ	0xFDF
 26930                           postinc2	equ	0xFDE
 26931                           postdec2	equ	0xFDD
 26932                           plusw2	equ	0xFDB
 26933                           fsr2h	equ	0xFDA
 26934                           fsr2l	equ	0xFD9
 26935                           status	equ	0xFD8
 26936                           
 26937 ;; *************** function _display_prepare *****************
 26938 ;; Defined at:
 26939 ;;		line 286 in file "display.c"
 26940 ;; Parameters:    Size  Location     Type
 26941 ;;  mode            1    wreg     unsigned char 
 26942 ;; Auto vars:     Size  Location     Type
 26943 ;;  mode            1   42[COMRAM] unsigned char 
 26944 ;; Return value:  Size  Location     Type
 26945 ;;                  1    wreg      void 
 26946 ;; Registers used:
 26947 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 26948 ;; Tracked objects:
 26949 ;;		On entry : 0/0
 26950 ;;		On exit  : 0/0
 26951 ;;		Unchanged: 0/0
 26952 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26953 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26954 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26955 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26956 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26957 ;;Total ram usage:        3 bytes
 26958 ;; Hardware stack levels used:    1
 26959 ;; Hardware stack levels required when called:    6
 26960 ;; This function calls:
 26961 ;;		__display_checked
 26962 ;;		__display_clear
 26963 ;;		__display_done
 26964 ;;		__display_failed
 26965 ;;		__display_found
 26966 ;;		__display_programming
 26967 ;;		__display_rebooting
 26968 ;;		__display_search
 26969 ;;		__display_start
 26970 ;;		__display_verify
 26971 ;; This function is called by:
 26972 ;;		_main
 26973 ;;		_reboot
 26974 ;; This function uses a non-reentrant model
 26975 ;;
 26976                           
 26977                           	psect	text132
 26978  005B50                     __ptext132:
 26979                           	opt stack 0
 26980  005B50                     _display_prepare:
 26981                           	opt stack 21
 26982                           
 26983                           ;incstack = 0
 26984                           ;display_prepare@mode stored from wreg
 26985  005B50  6E2B               	movwf	display_prepare@mode,c
 26986                           
 26987                           ;display.c: 288: _display_clear();
 26988  005B52  EC89  F041         	call	__display_clear	;wreg free
 26989                           
 26990                           ;display.c: 290: switch(mode&0xF0)
 26991  005B56  D01B               	goto	l1542
 26992  005B58                     
 26993                           ;display.c: 293: _display_start();
 26994  005B58  EC7C  F015         	call	__display_start	;wreg free
 26995                           
 26996                           ;display.c: 294: break;
 26997  005B5C  D047               	goto	l1553
 26998  005B5E                     
 26999                           ;display.c: 297: _display_search();
 27000  005B5E  ECA3  F01E         	call	__display_search	;wreg free
 27001                           
 27002                           ;display.c: 298: break;
 27003  005B62  D044               	goto	l1553
 27004  005B64                     
 27005                           ;display.c: 301: _display_found();
 27006  005B64  EC6B  F017         	call	__display_found	;wreg free
 27007                           
 27008                           ;display.c: 302: break;
 27009  005B68  D041               	goto	l1553
 27010  005B6A                     
 27011                           ;display.c: 305: _display_verify();
 27012  005B6A  EC30  F021         	call	__display_verify	;wreg free
 27013                           
 27014                           ;display.c: 306: break;
 27015  005B6E  D03E               	goto	l1553
 27016  005B70                     
 27017                           ;display.c: 309: _display_checked();
 27018  005B70  ECBD  F01B         	call	__display_checked	;wreg free
 27019                           
 27020                           ;display.c: 310: break;
 27021  005B74  D03B               	goto	l1553
 27022  005B76                     
 27023                           ;display.c: 313: _display_failed();
 27024  005B76  EC6E  F009         	call	__display_failed	;wreg free
 27025                           
 27026                           ;display.c: 314: break;
 27027  005B7A  D038               	goto	l1553
 27028  005B7C                     
 27029                           ;display.c: 317: _display_programming();
 27030  005B7C  EC47  F019         	call	__display_programming	;wreg free
 27031                           
 27032                           ;display.c: 318: break;
 27033  005B80  D035               	goto	l1553
 27034  005B82                     
 27035                           ;display.c: 321: _display_done();
 27036  005B82  EC7B  F01C         	call	__display_done	;wreg free
 27037                           
 27038                           ;display.c: 322: break;
 27039  005B86  D032               	goto	l1553
 27040  005B88                     
 27041                           ;display.c: 325: _display_rebooting();
 27042  005B88  EC94  F03F         	call	__display_rebooting	;wreg free
 27043                           
 27044                           ;display.c: 327: }
 27045                           
 27046                           ;display.c: 326: break;
 27047  005B8C  D02F               	goto	l1553
 27048  005B8E                     l1542:
 27049  005B8E  502B               	movf	display_prepare@mode,w,c
 27050  005B90  0BF0               	andlw	240
 27051  005B92  6E29               	movwf	??_display_prepare& (0+255),c
 27052  005B94  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27053                           
 27054                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27055                           ; Switch size 1, requested type "space"
 27056                           ; Number of cases is 1, Range of values is 0 to 0
 27057                           ; switch strategies available:
 27058                           ; Name         Instructions Cycles
 27059                           ; simple_byte            4     3 (average)
 27060                           ;	Chosen strategy is simple_byte
 27061  005B96  502A               	movf	??_display_prepare+1,w,c
 27062  005B98  0A00               	xorlw	0	; case 0
 27063  005B9A  A4D8               	btfss	status,2,c
 27064  005B9C  D027               	goto	l1553
 27065                           
 27066                           ; Switch size 1, requested type "space"
 27067                           ; Number of cases is 9, Range of values is 0 to 128
 27068                           ; switch strategies available:
 27069                           ; Name         Instructions Cycles
 27070                           ; simple_byte           28    15 (average)
 27071                           ;	Chosen strategy is simple_byte
 27072  005B9E  5029               	movf	??_display_prepare,w,c
 27073  005BA0  0A00               	xorlw	0	; case 0
 27074  005BA2  B4D8               	btfsc	status,2,c
 27075  005BA4  D7D9               	goto	l1543
 27076  005BA6  0A10               	xorlw	16	; case 16
 27077  005BA8  B4D8               	btfsc	status,2,c
 27078  005BAA  D7D9               	goto	l1545
 27079  005BAC  0A30               	xorlw	48	; case 32
 27080  005BAE  B4D8               	btfsc	status,2,c
 27081  005BB0  D7D9               	goto	l1546
 27082  005BB2  0A10               	xorlw	16	; case 48
 27083  005BB4  B4D8               	btfsc	status,2,c
 27084  005BB6  D7D9               	goto	l1547
 27085  005BB8  0A70               	xorlw	112	; case 64
 27086  005BBA  B4D8               	btfsc	status,2,c
 27087  005BBC  D7D9               	goto	l1548
 27088  005BBE  0A10               	xorlw	16	; case 80
 27089  005BC0  B4D8               	btfsc	status,2,c
 27090  005BC2  D7D9               	goto	l1549
 27091  005BC4  0A30               	xorlw	48	; case 96
 27092  005BC6  B4D8               	btfsc	status,2,c
 27093  005BC8  D7D9               	goto	l1550
 27094  005BCA  0A10               	xorlw	16	; case 112
 27095  005BCC  B4D8               	btfsc	status,2,c
 27096  005BCE  D7D9               	goto	l1551
 27097  005BD0  0AF0               	xorlw	240	; case 128
 27098  005BD2  B4D8               	btfsc	status,2,c
 27099  005BD4  D7D9               	goto	l1552
 27100                           
 27101                           ;display.c: 330: switch((os.timeSlot>>5)&0b11)
 27102  005BD6  D00A               	goto	l1553
 27103  005BD8                     
 27104                           ;display.c: 333: display_content[0][17] = '.';
 27105  005BD8  0E2E               	movlw	46
 27106  005BDA  0102               	movlb	2	; () banked
 27107  005BDC  6F11               	movwf	(_display_content+17)& (0+255),b
 27108  005BDE                     l1555:
 27109                           
 27110                           ;display.c: 336: display_content[0][16] = '.';
 27111  005BDE  0E2E               	movlw	46
 27112  005BE0  0102               	movlb	2	; () banked
 27113  005BE2  6F10               	movwf	(_display_content+16)& (0+255),b
 27114  005BE4                     l1556:
 27115                           
 27116                           ;display.c: 339: display_content[0][15] = '.';
 27117  005BE4  0E2E               	movlw	46
 27118  005BE6  0102               	movlb	2	; () banked
 27119  005BE8  6F0F               	movwf	(_display_content+15)& (0+255),b
 27120                           
 27121                           ;display.c: 341: }
 27122  005BEA  D015               	goto	l1557
 27123  005BEC                     l1553:
 27124                           
 27125                           ; BSR set to: 2
 27126  005BEC  0100               	movlb	0	; () banked
 27127  005BEE  39C7               	swapf	(_os+2)& (0+255),w,b	;volatile
 27128  005BF0  42E8               	rrncf	wreg,f,c
 27129  005BF2  0B07               	andlw	7
 27130  005BF4  0B03               	andlw	3
 27131  005BF6  6E29               	movwf	??_display_prepare& (0+255),c
 27132  005BF8  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
 27133                           
 27134                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 27135                           ; Switch size 1, requested type "space"
 27136                           ; Number of cases is 1, Range of values is 0 to 0
 27137                           ; switch strategies available:
 27138                           ; Name         Instructions Cycles
 27139                           ; simple_byte            4     3 (average)
 27140                           ;	Chosen strategy is simple_byte
 27141  005BFA  502A               	movf	??_display_prepare+1,w,c
 27142  005BFC  0A00               	xorlw	0	; case 0
 27143  005BFE  A4D8               	btfss	status,2,c
 27144  005C00  D00A               	goto	l1557
 27145                           
 27146                           ; BSR set to: 0
 27147                           ; Switch size 1, requested type "space"
 27148                           ; Number of cases is 3, Range of values is 1 to 3
 27149                           ; switch strategies available:
 27150                           ; Name         Instructions Cycles
 27151                           ; simple_byte           10     6 (average)
 27152                           ;	Chosen strategy is simple_byte
 27153  005C02  5029               	movf	??_display_prepare,w,c
 27154  005C04  0A01               	xorlw	1	; case 1
 27155  005C06  B4D8               	btfsc	status,2,c
 27156  005C08  D7ED               	goto	l1556
 27157  005C0A  0A03               	xorlw	3	; case 2
 27158  005C0C  B4D8               	btfsc	status,2,c
 27159  005C0E  D7E7               	goto	l1555
 27160  005C10  0A01               	xorlw	1	; case 3
 27161  005C12  B4D8               	btfsc	status,2,c
 27162  005C14  D7E1               	goto	l1554
 27163  005C16                     l1557:
 27164                           
 27165                           ;display.c: 345: if(INTCONbits.GIE)
 27166  005C16  AEF2               	btfss	intcon,7,c	;volatile
 27167  005C18  0012               	return	
 27168                           
 27169                           ;display.c: 346: {;display.c: 347: display_content[0][18] = 'I';
 27170  005C1A  0E49               	movlw	73
 27171  005C1C  0102               	movlb	2	; () banked
 27172  005C1E  6F12               	movwf	(_display_content+18)& (0+255),b
 27173  005C20  0012               	return	
 27174  005C22                     __end_of_display_prepare:
 27175                           	opt stack 0
 27176                           tosu	equ	0xFFF
 27177                           tosh	equ	0xFFE
 27178                           tosl	equ	0xFFD
 27179                           pclath	equ	0xFFA
 27180                           tblptru	equ	0xFF8
 27181                           tblptrh	equ	0xFF7
 27182                           tblptrl	equ	0xFF6
 27183                           tablat	equ	0xFF5
 27184                           prodh	equ	0xFF4
 27185                           prodl	equ	0xFF3
 27186                           intcon	equ	0xFF2
 27187                           intcon2	equ	0xFF1
 27188                           intcon3	equ	0xFF0
 27189                           indf0	equ	0xFEF
 27190                           postinc0	equ	0xFEE
 27191                           fsr0h	equ	0xFEA
 27192                           fsr0l	equ	0xFE9
 27193                           wreg	equ	0xFE8
 27194                           indf1	equ	0xFE7
 27195                           postdec1	equ	0xFE5
 27196                           plusw1	equ	0xFE3
 27197                           fsr1h	equ	0xFE2
 27198                           fsr1l	equ	0xFE1
 27199                           indf2	equ	0xFDF
 27200                           postinc2	equ	0xFDE
 27201                           postdec2	equ	0xFDD
 27202                           plusw2	equ	0xFDB
 27203                           fsr2h	equ	0xFDA
 27204                           fsr2l	equ	0xFD9
 27205                           status	equ	0xFD8
 27206                           
 27207 ;; *************** function __display_verify *****************
 27208 ;; Defined at:
 27209 ;;		line 417 in file "display.c"
 27210 ;; Parameters:    Size  Location     Type
 27211 ;;		None
 27212 ;; Auto vars:     Size  Location     Type
 27213 ;;  cntr            1   32[COMRAM] unsigned char 
 27214 ;;  start           1    0        unsigned char 
 27215 ;; Return value:  Size  Location     Type
 27216 ;;                  1    wreg      void 
 27217 ;; Registers used:
 27218 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27219 ;; Tracked objects:
 27220 ;;		On entry : 0/0
 27221 ;;		On exit  : 0/0
 27222 ;;		Unchanged: 0/0
 27223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27224 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27225 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27226 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27228 ;;Total ram usage:        3 bytes
 27229 ;; Hardware stack levels used:    1
 27230 ;; Hardware stack levels required when called:    4
 27231 ;; This function calls:
 27232 ;;		__display_itoa_u16
 27233 ;;		_bootloader_get_entries
 27234 ;; This function is called by:
 27235 ;;		_display_prepare
 27236 ;; This function uses a non-reentrant model
 27237 ;;
 27238                           
 27239                           	psect	text133
 27240  004260                     __ptext133:
 27241                           	opt stack 0
 27242  004260                     __display_verify:
 27243                           	opt stack 22
 27244                           
 27245                           ;display.c: 419: uint8_t cntr;;display.c: 420: uint8_t start;;display.c: 421: cntr = 0;
 27246                           
 27247                           ;incstack = 0
 27248  004260  0E00               	movlw	0
 27249  004262  6E21               	movwf	__display_verify@cntr,c
 27250                           
 27251                           ;display.c: 422: while(verify_line1[cntr])
 27252  004264  D017               	goto	l1610
 27253  004266                     
 27254                           ;display.c: 423: display_content[0][cntr] = verify_line1[cntr++];
 27255  004266  5021               	movf	__display_verify@cntr,w,c
 27256  004268  0D01               	mullw	1
 27257  00426A  0EC4               	movlw	low _verify_line1
 27258  00426C  24F3               	addwf	prodl,w,c
 27259  00426E  6EF6               	movwf	tblptrl,c
 27260  004270  0E9D               	movlw	high _verify_line1
 27261  004272  20F4               	addwfc	prodh,w,c
 27262  004274  6EF7               	movwf	tblptrh,c
 27263  004276                     	if	1	;There are 3 active tblptr bytes
 27264  004276  6AF8               	clrf	tblptru,c
 27265  004278  0E00               	movlw	low (__mediumconst shr (0+16))
 27266  00427A  22F8               	addwfc	tblptru,f,c
 27267  00427C                     	endif
 27268  00427C  5021               	movf	__display_verify@cntr,w,c
 27269  00427E  0D01               	mullw	1
 27270  004280  0E00               	movlw	low _display_content
 27271  004282  24F3               	addwf	prodl,w,c
 27272  004284  6ED9               	movwf	fsr2l,c
 27273  004286  0E02               	movlw	high _display_content
 27274  004288  20F4               	addwfc	prodh,w,c
 27275  00428A  6EDA               	movwf	fsr2h,c
 27276  00428C  0008               	tblrd		*
 27277  00428E  CFF5 FFDF          	movff	tablat,indf2
 27278  004292  2A21               	incf	__display_verify@cntr,f,c
 27279  004294                     l1610:
 27280  004294  5021               	movf	__display_verify@cntr,w,c
 27281  004296  0D01               	mullw	1
 27282  004298  0EC4               	movlw	low _verify_line1
 27283  00429A  24F3               	addwf	prodl,w,c
 27284  00429C  6EF6               	movwf	tblptrl,c
 27285  00429E  0E9D               	movlw	high _verify_line1
 27286  0042A0  20F4               	addwfc	prodh,w,c
 27287  0042A2  6EF7               	movwf	tblptrh,c
 27288  0042A4                     	if	1	;There are 3 active tblptr bytes
 27289  0042A4  6AF8               	clrf	tblptru,c
 27290  0042A6  0E00               	movlw	low (__mediumconst shr (0+16))
 27291  0042A8  22F8               	addwfc	tblptru,f,c
 27292  0042AA                     	endif
 27293  0042AA  0008               	tblrd		*
 27294  0042AC  50F5               	movf	tablat,w,c
 27295  0042AE  0900               	iorlw	0
 27296  0042B0  A4D8               	btfss	status,2,c
 27297  0042B2  D7D9               	goto	l1611
 27298                           
 27299                           ;display.c: 424: cntr = 0;
 27300  0042B4  0E00               	movlw	0
 27301  0042B6  6E21               	movwf	__display_verify@cntr,c
 27302                           
 27303                           ;display.c: 425: while(verify_line2[cntr])
 27304  0042B8  D017               	goto	l1613
 27305  0042BA                     
 27306                           ;display.c: 426: display_content[1][cntr] = verify_line2[cntr++];
 27307  0042BA  5021               	movf	__display_verify@cntr,w,c
 27308  0042BC  0D01               	mullw	1
 27309  0042BE  0E4C               	movlw	low _verify_line2
 27310  0042C0  24F3               	addwf	prodl,w,c
 27311  0042C2  6EF6               	movwf	tblptrl,c
 27312  0042C4  0E9E               	movlw	high _verify_line2
 27313  0042C6  20F4               	addwfc	prodh,w,c
 27314  0042C8  6EF7               	movwf	tblptrh,c
 27315  0042CA                     	if	1	;There are 3 active tblptr bytes
 27316  0042CA  6AF8               	clrf	tblptru,c
 27317  0042CC  0E00               	movlw	low (__mediumconst shr (0+16))
 27318  0042CE  22F8               	addwfc	tblptru,f,c
 27319  0042D0                     	endif
 27320  0042D0  5021               	movf	__display_verify@cntr,w,c
 27321  0042D2  0D01               	mullw	1
 27322  0042D4  0E14               	movlw	low (_display_content+20)
 27323  0042D6  24F3               	addwf	prodl,w,c
 27324  0042D8  6ED9               	movwf	fsr2l,c
 27325  0042DA  0E02               	movlw	high (_display_content+20)
 27326  0042DC  20F4               	addwfc	prodh,w,c
 27327  0042DE  6EDA               	movwf	fsr2h,c
 27328  0042E0  0008               	tblrd		*
 27329  0042E2  CFF5 FFDF          	movff	tablat,indf2
 27330  0042E6  2A21               	incf	__display_verify@cntr,f,c
 27331  0042E8                     l1613:
 27332  0042E8  5021               	movf	__display_verify@cntr,w,c
 27333  0042EA  0D01               	mullw	1
 27334  0042EC  0E4C               	movlw	low _verify_line2
 27335  0042EE  24F3               	addwf	prodl,w,c
 27336  0042F0  6EF6               	movwf	tblptrl,c
 27337  0042F2  0E9E               	movlw	high _verify_line2
 27338  0042F4  20F4               	addwfc	prodh,w,c
 27339  0042F6  6EF7               	movwf	tblptrh,c
 27340  0042F8                     	if	1	;There are 3 active tblptr bytes
 27341  0042F8  6AF8               	clrf	tblptru,c
 27342  0042FA  0E00               	movlw	low (__mediumconst shr (0+16))
 27343  0042FC  22F8               	addwfc	tblptru,f,c
 27344  0042FE                     	endif
 27345  0042FE  0008               	tblrd		*
 27346  004300  50F5               	movf	tablat,w,c
 27347  004302  0900               	iorlw	0
 27348  004304  A4D8               	btfss	status,2,c
 27349  004306  D7D9               	goto	l1614
 27350                           
 27351                           ;display.c: 427: cntr = 0;
 27352  004308  0E00               	movlw	0
 27353  00430A  6E21               	movwf	__display_verify@cntr,c
 27354                           
 27355                           ;display.c: 428: while(verify_line3[cntr])
 27356  00430C  D017               	goto	l1616
 27357  00430E                     
 27358                           ;display.c: 429: display_content[2][cntr] = verify_line3[cntr++];
 27359  00430E  5021               	movf	__display_verify@cntr,w,c
 27360  004310  0D01               	mullw	1
 27361  004312  0E8A               	movlw	low _verify_line3
 27362  004314  24F3               	addwf	prodl,w,c
 27363  004316  6EF6               	movwf	tblptrl,c
 27364  004318  0E9E               	movlw	high _verify_line3
 27365  00431A  20F4               	addwfc	prodh,w,c
 27366  00431C  6EF7               	movwf	tblptrh,c
 27367  00431E                     	if	1	;There are 3 active tblptr bytes
 27368  00431E  6AF8               	clrf	tblptru,c
 27369  004320  0E00               	movlw	low (__mediumconst shr (0+16))
 27370  004322  22F8               	addwfc	tblptru,f,c
 27371  004324                     	endif
 27372  004324  5021               	movf	__display_verify@cntr,w,c
 27373  004326  0D01               	mullw	1
 27374  004328  0E28               	movlw	low (_display_content+40)
 27375  00432A  24F3               	addwf	prodl,w,c
 27376  00432C  6ED9               	movwf	fsr2l,c
 27377  00432E  0E02               	movlw	high (_display_content+40)
 27378  004330  20F4               	addwfc	prodh,w,c
 27379  004332  6EDA               	movwf	fsr2h,c
 27380  004334  0008               	tblrd		*
 27381  004336  CFF5 FFDF          	movff	tablat,indf2
 27382  00433A  2A21               	incf	__display_verify@cntr,f,c
 27383  00433C                     l1616:
 27384  00433C  5021               	movf	__display_verify@cntr,w,c
 27385  00433E  0D01               	mullw	1
 27386  004340  0E8A               	movlw	low _verify_line3
 27387  004342  24F3               	addwf	prodl,w,c
 27388  004344  6EF6               	movwf	tblptrl,c
 27389  004346  0E9E               	movlw	high _verify_line3
 27390  004348  20F4               	addwfc	prodh,w,c
 27391  00434A  6EF7               	movwf	tblptrh,c
 27392  00434C                     	if	1	;There are 3 active tblptr bytes
 27393  00434C  6AF8               	clrf	tblptru,c
 27394  00434E  0E00               	movlw	low (__mediumconst shr (0+16))
 27395  004350  22F8               	addwfc	tblptru,f,c
 27396  004352                     	endif
 27397  004352  0008               	tblrd		*
 27398  004354  50F5               	movf	tablat,w,c
 27399  004356  0900               	iorlw	0
 27400  004358  A4D8               	btfss	status,2,c
 27401  00435A  D7D9               	goto	l1617
 27402                           
 27403                           ;display.c: 430: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
 27404  00435C  ECED  F047         	call	_bootloader_get_entries	;wreg free
 27405  004360  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 27406  004364  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 27407  004368  6A1B               	clrf	__display_itoa_u16@value+2,c
 27408  00436A  6A1C               	clrf	__display_itoa_u16@value+3,c
 27409  00436C  5021               	movf	__display_verify@cntr,w,c
 27410  00436E  6E1F               	movwf	??__display_verify& (0+255),c
 27411  004370  6A20               	clrf	(??__display_verify+1)& (0+255),c
 27412  004372  0E01               	movlw	1
 27413  004374  261F               	addwf	??__display_verify,f,c
 27414  004376  0E00               	movlw	0
 27415  004378  2220               	addwfc	??__display_verify+1,f,c
 27416  00437A  0E28               	movlw	low (_display_content+40)
 27417  00437C  241F               	addwf	??__display_verify,w,c
 27418  00437E  6E1D               	movwf	__display_itoa_u16@text,c
 27419  004380  0E02               	movlw	high (_display_content+40)
 27420  004382  2020               	addwfc	??__display_verify+1,w,c
 27421  004384  6E1E               	movwf	__display_itoa_u16@text+1,c
 27422  004386  EC0C  F030         	call	__display_itoa_u16	;wreg free
 27423  00438A  0012               	return		;funcret
 27424  00438C                     __end_of__display_verify:
 27425                           	opt stack 0
 27426                           tosu	equ	0xFFF
 27427                           tosh	equ	0xFFE
 27428                           tosl	equ	0xFFD
 27429                           pclath	equ	0xFFA
 27430                           tblptru	equ	0xFF8
 27431                           tblptrh	equ	0xFF7
 27432                           tblptrl	equ	0xFF6
 27433                           tablat	equ	0xFF5
 27434                           prodh	equ	0xFF4
 27435                           prodl	equ	0xFF3
 27436                           intcon	equ	0xFF2
 27437                           intcon2	equ	0xFF1
 27438                           intcon3	equ	0xFF0
 27439                           indf0	equ	0xFEF
 27440                           postinc0	equ	0xFEE
 27441                           fsr0h	equ	0xFEA
 27442                           fsr0l	equ	0xFE9
 27443                           wreg	equ	0xFE8
 27444                           indf1	equ	0xFE7
 27445                           postdec1	equ	0xFE5
 27446                           plusw1	equ	0xFE3
 27447                           fsr1h	equ	0xFE2
 27448                           fsr1l	equ	0xFE1
 27449                           indf2	equ	0xFDF
 27450                           postinc2	equ	0xFDE
 27451                           postdec2	equ	0xFDD
 27452                           plusw2	equ	0xFDB
 27453                           fsr2h	equ	0xFDA
 27454                           fsr2l	equ	0xFD9
 27455                           status	equ	0xFD8
 27456                           
 27457 ;; *************** function __display_start *****************
 27458 ;; Defined at:
 27459 ;;		line 351 in file "display.c"
 27460 ;; Parameters:    Size  Location     Type
 27461 ;;		None
 27462 ;; Auto vars:     Size  Location     Type
 27463 ;;  cntr            1   36[COMRAM] unsigned char 
 27464 ;; Return value:  Size  Location     Type
 27465 ;;                  1    wreg      void 
 27466 ;; Registers used:
 27467 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 27468 ;; Tracked objects:
 27469 ;;		On entry : 0/0
 27470 ;;		On exit  : 0/0
 27471 ;;		Unchanged: 0/0
 27472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27473 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27474 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27475 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27476 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27477 ;;Total ram usage:        1 bytes
 27478 ;; Hardware stack levels used:    1
 27479 ;; Hardware stack levels required when called:    5
 27480 ;; This function calls:
 27481 ;;		__display_itoa_u32
 27482 ;; This function is called by:
 27483 ;;		_display_prepare
 27484 ;; This function uses a non-reentrant model
 27485 ;;
 27486                           
 27487                           	psect	text134
 27488  002AF8                     __ptext134:
 27489                           	opt stack 0
 27490  002AF8                     __display_start:
 27491                           	opt stack 21
 27492                           
 27493                           ;display.c: 353: uint8_t cntr;;display.c: 354: cntr = 0;
 27494                           
 27495                           ;incstack = 0
 27496  002AF8  0E00               	movlw	0
 27497  002AFA  6E25               	movwf	__display_start@cntr,c
 27498                           
 27499                           ;display.c: 355: while(start_line1[cntr])
 27500  002AFC  D017               	goto	l1562
 27501  002AFE                     
 27502                           ;display.c: 356: display_content[0][cntr] = start_line1[cntr++];
 27503  002AFE  5025               	movf	__display_start@cntr,w,c
 27504  002B00  0D01               	mullw	1
 27505  002B02  0EF4               	movlw	low _start_line1
 27506  002B04  24F3               	addwf	prodl,w,c
 27507  002B06  6EF6               	movwf	tblptrl,c
 27508  002B08  0E9D               	movlw	high _start_line1
 27509  002B0A  20F4               	addwfc	prodh,w,c
 27510  002B0C  6EF7               	movwf	tblptrh,c
 27511  002B0E                     	if	1	;There are 3 active tblptr bytes
 27512  002B0E  6AF8               	clrf	tblptru,c
 27513  002B10  0E00               	movlw	low (__mediumconst shr (0+16))
 27514  002B12  22F8               	addwfc	tblptru,f,c
 27515  002B14                     	endif
 27516  002B14  5025               	movf	__display_start@cntr,w,c
 27517  002B16  0D01               	mullw	1
 27518  002B18  0E00               	movlw	low _display_content
 27519  002B1A  24F3               	addwf	prodl,w,c
 27520  002B1C  6ED9               	movwf	fsr2l,c
 27521  002B1E  0E02               	movlw	high _display_content
 27522  002B20  20F4               	addwfc	prodh,w,c
 27523  002B22  6EDA               	movwf	fsr2h,c
 27524  002B24  0008               	tblrd		*
 27525  002B26  CFF5 FFDF          	movff	tablat,indf2
 27526  002B2A  2A25               	incf	__display_start@cntr,f,c
 27527  002B2C                     l1562:
 27528  002B2C  5025               	movf	__display_start@cntr,w,c
 27529  002B2E  0D01               	mullw	1
 27530  002B30  0EF4               	movlw	low _start_line1
 27531  002B32  24F3               	addwf	prodl,w,c
 27532  002B34  6EF6               	movwf	tblptrl,c
 27533  002B36  0E9D               	movlw	high _start_line1
 27534  002B38  20F4               	addwfc	prodh,w,c
 27535  002B3A  6EF7               	movwf	tblptrh,c
 27536  002B3C                     	if	1	;There are 3 active tblptr bytes
 27537  002B3C  6AF8               	clrf	tblptru,c
 27538  002B3E  0E00               	movlw	low (__mediumconst shr (0+16))
 27539  002B40  22F8               	addwfc	tblptru,f,c
 27540  002B42                     	endif
 27541  002B42  0008               	tblrd		*
 27542  002B44  50F5               	movf	tablat,w,c
 27543  002B46  0900               	iorlw	0
 27544  002B48  A4D8               	btfss	status,2,c
 27545  002B4A  D7D9               	goto	l1563
 27546                           
 27547                           ;display.c: 357: cntr = 0;
 27548  002B4C  0E00               	movlw	0
 27549  002B4E  6E25               	movwf	__display_start@cntr,c
 27550                           
 27551                           ;display.c: 358: while(start_line2[cntr])
 27552  002B50  D017               	goto	l1565
 27553  002B52                     
 27554                           ;display.c: 359: display_content[1][cntr] = start_line2[cntr++];
 27555  002B52  5025               	movf	__display_start@cntr,w,c
 27556  002B54  0D01               	mullw	1
 27557  002B56  0E62               	movlw	low _start_line2
 27558  002B58  24F3               	addwf	prodl,w,c
 27559  002B5A  6EF6               	movwf	tblptrl,c
 27560  002B5C  0E9E               	movlw	high _start_line2
 27561  002B5E  20F4               	addwfc	prodh,w,c
 27562  002B60  6EF7               	movwf	tblptrh,c
 27563  002B62                     	if	1	;There are 3 active tblptr bytes
 27564  002B62  6AF8               	clrf	tblptru,c
 27565  002B64  0E00               	movlw	low (__mediumconst shr (0+16))
 27566  002B66  22F8               	addwfc	tblptru,f,c
 27567  002B68                     	endif
 27568  002B68  5025               	movf	__display_start@cntr,w,c
 27569  002B6A  0D01               	mullw	1
 27570  002B6C  0E14               	movlw	low (_display_content+20)
 27571  002B6E  24F3               	addwf	prodl,w,c
 27572  002B70  6ED9               	movwf	fsr2l,c
 27573  002B72  0E02               	movlw	high (_display_content+20)
 27574  002B74  20F4               	addwfc	prodh,w,c
 27575  002B76  6EDA               	movwf	fsr2h,c
 27576  002B78  0008               	tblrd		*
 27577  002B7A  CFF5 FFDF          	movff	tablat,indf2
 27578  002B7E  2A25               	incf	__display_start@cntr,f,c
 27579  002B80                     l1565:
 27580  002B80  5025               	movf	__display_start@cntr,w,c
 27581  002B82  0D01               	mullw	1
 27582  002B84  0E62               	movlw	low _start_line2
 27583  002B86  24F3               	addwf	prodl,w,c
 27584  002B88  6EF6               	movwf	tblptrl,c
 27585  002B8A  0E9E               	movlw	high _start_line2
 27586  002B8C  20F4               	addwfc	prodh,w,c
 27587  002B8E  6EF7               	movwf	tblptrh,c
 27588  002B90                     	if	1	;There are 3 active tblptr bytes
 27589  002B90  6AF8               	clrf	tblptru,c
 27590  002B92  0E00               	movlw	low (__mediumconst shr (0+16))
 27591  002B94  22F8               	addwfc	tblptru,f,c
 27592  002B96                     	endif
 27593  002B96  0008               	tblrd		*
 27594  002B98  50F5               	movf	tablat,w,c
 27595  002B9A  0900               	iorlw	0
 27596  002B9C  A4D8               	btfss	status,2,c
 27597  002B9E  D7D9               	goto	l1566
 27598                           
 27599                           ;display.c: 360: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
 27600  002BA0  0E00               	movlw	0
 27601  002BA2  6E1F               	movwf	__display_itoa_u32@value,c
 27602  002BA4  0E00               	movlw	0
 27603  002BA6  6E20               	movwf	__display_itoa_u32@value+1,c
 27604  002BA8  0E00               	movlw	0
 27605  002BAA  6E21               	movwf	__display_itoa_u32@value+2,c
 27606  002BAC  0E00               	movlw	0
 27607  002BAE  6E22               	movwf	__display_itoa_u32@value+3,c
 27608  002BB0  5025               	movf	__display_start@cntr,w,c
 27609  002BB2  0D01               	mullw	1
 27610  002BB4  0E14               	movlw	low (_display_content+20)
 27611  002BB6  24F3               	addwf	prodl,w,c
 27612  002BB8  6E23               	movwf	__display_itoa_u32@text,c
 27613  002BBA  0E02               	movlw	high (_display_content+20)
 27614  002BBC  20F4               	addwfc	prodh,w,c
 27615  002BBE  6E24               	movwf	__display_itoa_u32@text+1,c
 27616  002BC0  EC15  F006         	call	__display_itoa_u32	;wreg free
 27617  002BC4  2625               	addwf	__display_start@cntr,f,c
 27618                           
 27619                           ;display.c: 361: display_content[1][cntr++] = '.';
 27620  002BC6  5025               	movf	__display_start@cntr,w,c
 27621  002BC8  0D01               	mullw	1
 27622  002BCA  0E14               	movlw	low (_display_content+20)
 27623  002BCC  24F3               	addwf	prodl,w,c
 27624  002BCE  6ED9               	movwf	fsr2l,c
 27625  002BD0  0E02               	movlw	high (_display_content+20)
 27626  002BD2  20F4               	addwfc	prodh,w,c
 27627  002BD4  6EDA               	movwf	fsr2h,c
 27628  002BD6  0E2E               	movlw	46
 27629  002BD8  6EDF               	movwf	indf2,c
 27630  002BDA  2A25               	incf	__display_start@cntr,f,c
 27631                           
 27632                           ;display.c: 362: cntr += _display_itoa_u32(0x03, &display_content[1][cntr]);
 27633  002BDC  0E03               	movlw	3
 27634  002BDE  6E1F               	movwf	__display_itoa_u32@value,c
 27635  002BE0  0E00               	movlw	0
 27636  002BE2  6E20               	movwf	__display_itoa_u32@value+1,c
 27637  002BE4  0E00               	movlw	0
 27638  002BE6  6E21               	movwf	__display_itoa_u32@value+2,c
 27639  002BE8  0E00               	movlw	0
 27640  002BEA  6E22               	movwf	__display_itoa_u32@value+3,c
 27641  002BEC  5025               	movf	__display_start@cntr,w,c
 27642  002BEE  0D01               	mullw	1
 27643  002BF0  0E14               	movlw	low (_display_content+20)
 27644  002BF2  24F3               	addwf	prodl,w,c
 27645  002BF4  6E23               	movwf	__display_itoa_u32@text,c
 27646  002BF6  0E02               	movlw	high (_display_content+20)
 27647  002BF8  20F4               	addwfc	prodh,w,c
 27648  002BFA  6E24               	movwf	__display_itoa_u32@text+1,c
 27649  002BFC  EC15  F006         	call	__display_itoa_u32	;wreg free
 27650  002C00  2625               	addwf	__display_start@cntr,f,c
 27651                           
 27652                           ;display.c: 363: display_content[1][cntr++] = '.';
 27653  002C02  5025               	movf	__display_start@cntr,w,c
 27654  002C04  0D01               	mullw	1
 27655  002C06  0E14               	movlw	low (_display_content+20)
 27656  002C08  24F3               	addwf	prodl,w,c
 27657  002C0A  6ED9               	movwf	fsr2l,c
 27658  002C0C  0E02               	movlw	high (_display_content+20)
 27659  002C0E  20F4               	addwfc	prodh,w,c
 27660  002C10  6EDA               	movwf	fsr2h,c
 27661  002C12  0E2E               	movlw	46
 27662  002C14  6EDF               	movwf	indf2,c
 27663  002C16  2A25               	incf	__display_start@cntr,f,c
 27664                           
 27665                           ;display.c: 364: cntr += _display_itoa_u32(0x04, &display_content[1][cntr]);
 27666  002C18  0E04               	movlw	4
 27667  002C1A  6E1F               	movwf	__display_itoa_u32@value,c
 27668  002C1C  0E00               	movlw	0
 27669  002C1E  6E20               	movwf	__display_itoa_u32@value+1,c
 27670  002C20  0E00               	movlw	0
 27671  002C22  6E21               	movwf	__display_itoa_u32@value+2,c
 27672  002C24  0E00               	movlw	0
 27673  002C26  6E22               	movwf	__display_itoa_u32@value+3,c
 27674  002C28  5025               	movf	__display_start@cntr,w,c
 27675  002C2A  0D01               	mullw	1
 27676  002C2C  0E14               	movlw	low (_display_content+20)
 27677  002C2E  24F3               	addwf	prodl,w,c
 27678  002C30  6E23               	movwf	__display_itoa_u32@text,c
 27679  002C32  0E02               	movlw	high (_display_content+20)
 27680  002C34  20F4               	addwfc	prodh,w,c
 27681  002C36  6E24               	movwf	__display_itoa_u32@text+1,c
 27682  002C38  EC15  F006         	call	__display_itoa_u32	;wreg free
 27683  002C3C  2625               	addwf	__display_start@cntr,f,c
 27684                           
 27685                           ;display.c: 365: cntr = 0;
 27686  002C3E  0E00               	movlw	0
 27687  002C40  6E25               	movwf	__display_start@cntr,c
 27688                           
 27689                           ;display.c: 366: while(start_line3[cntr])
 27690  002C42  D017               	goto	l1568
 27691  002C44                     
 27692                           ;display.c: 367: display_content[2][cntr] = start_line3[cntr++];
 27693  002C44  5025               	movf	__display_start@cntr,w,c
 27694  002C46  0D01               	mullw	1
 27695  002C48  0EA7               	movlw	low _start_line3
 27696  002C4A  24F3               	addwf	prodl,w,c
 27697  002C4C  6EF6               	movwf	tblptrl,c
 27698  002C4E  0E9E               	movlw	high _start_line3
 27699  002C50  20F4               	addwfc	prodh,w,c
 27700  002C52  6EF7               	movwf	tblptrh,c
 27701  002C54                     	if	1	;There are 3 active tblptr bytes
 27702  002C54  6AF8               	clrf	tblptru,c
 27703  002C56  0E00               	movlw	low (__mediumconst shr (0+16))
 27704  002C58  22F8               	addwfc	tblptru,f,c
 27705  002C5A                     	endif
 27706  002C5A  5025               	movf	__display_start@cntr,w,c
 27707  002C5C  0D01               	mullw	1
 27708  002C5E  0E28               	movlw	low (_display_content+40)
 27709  002C60  24F3               	addwf	prodl,w,c
 27710  002C62  6ED9               	movwf	fsr2l,c
 27711  002C64  0E02               	movlw	high (_display_content+40)
 27712  002C66  20F4               	addwfc	prodh,w,c
 27713  002C68  6EDA               	movwf	fsr2h,c
 27714  002C6A  0008               	tblrd		*
 27715  002C6C  CFF5 FFDF          	movff	tablat,indf2
 27716  002C70  2A25               	incf	__display_start@cntr,f,c
 27717  002C72                     l1568:
 27718  002C72  5025               	movf	__display_start@cntr,w,c
 27719  002C74  0D01               	mullw	1
 27720  002C76  0EA7               	movlw	low _start_line3
 27721  002C78  24F3               	addwf	prodl,w,c
 27722  002C7A  6EF6               	movwf	tblptrl,c
 27723  002C7C  0E9E               	movlw	high _start_line3
 27724  002C7E  20F4               	addwfc	prodh,w,c
 27725  002C80  6EF7               	movwf	tblptrh,c
 27726  002C82                     	if	1	;There are 3 active tblptr bytes
 27727  002C82  6AF8               	clrf	tblptru,c
 27728  002C84  0E00               	movlw	low (__mediumconst shr (0+16))
 27729  002C86  22F8               	addwfc	tblptru,f,c
 27730  002C88                     	endif
 27731  002C88  0008               	tblrd		*
 27732  002C8A  50F5               	movf	tablat,w,c
 27733  002C8C  0900               	iorlw	0
 27734  002C8E  A4D8               	btfss	status,2,c
 27735  002C90  D7D9               	goto	l1569
 27736                           
 27737                           ;display.c: 368: cntr = 0;
 27738  002C92  0E00               	movlw	0
 27739  002C94  6E25               	movwf	__display_start@cntr,c
 27740                           
 27741                           ;display.c: 369: while(start_line4[cntr])
 27742  002C96  D017               	goto	l1571
 27743  002C98                     
 27744                           ;display.c: 370: display_content[3][cntr] = start_line4[cntr++];
 27745  002C98  5025               	movf	__display_start@cntr,w,c
 27746  002C9A  0D01               	mullw	1
 27747  002C9C  0E22               	movlw	low _start_line4
 27748  002C9E  24F3               	addwf	prodl,w,c
 27749  002CA0  6EF6               	movwf	tblptrl,c
 27750  002CA2  0E9E               	movlw	high _start_line4
 27751  002CA4  20F4               	addwfc	prodh,w,c
 27752  002CA6  6EF7               	movwf	tblptrh,c
 27753  002CA8                     	if	1	;There are 3 active tblptr bytes
 27754  002CA8  6AF8               	clrf	tblptru,c
 27755  002CAA  0E00               	movlw	low (__mediumconst shr (0+16))
 27756  002CAC  22F8               	addwfc	tblptru,f,c
 27757  002CAE                     	endif
 27758  002CAE  5025               	movf	__display_start@cntr,w,c
 27759  002CB0  0D01               	mullw	1
 27760  002CB2  0E3C               	movlw	low (_display_content+60)
 27761  002CB4  24F3               	addwf	prodl,w,c
 27762  002CB6  6ED9               	movwf	fsr2l,c
 27763  002CB8  0E02               	movlw	high (_display_content+60)
 27764  002CBA  20F4               	addwfc	prodh,w,c
 27765  002CBC  6EDA               	movwf	fsr2h,c
 27766  002CBE  0008               	tblrd		*
 27767  002CC0  CFF5 FFDF          	movff	tablat,indf2
 27768  002CC4  2A25               	incf	__display_start@cntr,f,c
 27769  002CC6                     l1571:
 27770  002CC6  5025               	movf	__display_start@cntr,w,c
 27771  002CC8  0D01               	mullw	1
 27772  002CCA  0E22               	movlw	low _start_line4
 27773  002CCC  24F3               	addwf	prodl,w,c
 27774  002CCE  6EF6               	movwf	tblptrl,c
 27775  002CD0  0E9E               	movlw	high _start_line4
 27776  002CD2  20F4               	addwfc	prodh,w,c
 27777  002CD4  6EF7               	movwf	tblptrh,c
 27778  002CD6                     	if	1	;There are 3 active tblptr bytes
 27779  002CD6  6AF8               	clrf	tblptru,c
 27780  002CD8  0E00               	movlw	low (__mediumconst shr (0+16))
 27781  002CDA  22F8               	addwfc	tblptru,f,c
 27782  002CDC                     	endif
 27783  002CDC  0008               	tblrd		*
 27784  002CDE  50F5               	movf	tablat,w,c
 27785  002CE0  0900               	iorlw	0
 27786  002CE2  B4D8               	btfsc	status,2,c
 27787  002CE4  0012               	return	
 27788  002CE6  D7D8               	goto	l1572
 27789  002CE8                     __end_of__display_start:
 27790                           	opt stack 0
 27791                           tosu	equ	0xFFF
 27792                           tosh	equ	0xFFE
 27793                           tosl	equ	0xFFD
 27794                           pclath	equ	0xFFA
 27795                           tblptru	equ	0xFF8
 27796                           tblptrh	equ	0xFF7
 27797                           tblptrl	equ	0xFF6
 27798                           tablat	equ	0xFF5
 27799                           prodh	equ	0xFF4
 27800                           prodl	equ	0xFF3
 27801                           intcon	equ	0xFF2
 27802                           intcon2	equ	0xFF1
 27803                           intcon3	equ	0xFF0
 27804                           indf0	equ	0xFEF
 27805                           postinc0	equ	0xFEE
 27806                           fsr0h	equ	0xFEA
 27807                           fsr0l	equ	0xFE9
 27808                           wreg	equ	0xFE8
 27809                           indf1	equ	0xFE7
 27810                           postdec1	equ	0xFE5
 27811                           plusw1	equ	0xFE3
 27812                           fsr1h	equ	0xFE2
 27813                           fsr1l	equ	0xFE1
 27814                           indf2	equ	0xFDF
 27815                           postinc2	equ	0xFDE
 27816                           postdec2	equ	0xFDD
 27817                           plusw2	equ	0xFDB
 27818                           fsr2h	equ	0xFDA
 27819                           fsr2l	equ	0xFD9
 27820                           status	equ	0xFD8
 27821                           
 27822 ;; *************** function __display_search *****************
 27823 ;; Defined at:
 27824 ;;		line 373 in file "display.c"
 27825 ;; Parameters:    Size  Location     Type
 27826 ;;		None
 27827 ;; Auto vars:     Size  Location     Type
 27828 ;;  cntr            1    0[COMRAM] unsigned char 
 27829 ;; Return value:  Size  Location     Type
 27830 ;;                  1    wreg      void 
 27831 ;; Registers used:
 27832 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 27833 ;; Tracked objects:
 27834 ;;		On entry : 0/0
 27835 ;;		On exit  : 0/0
 27836 ;;		Unchanged: 0/0
 27837 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27838 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27839 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27840 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27841 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27842 ;;Total ram usage:        1 bytes
 27843 ;; Hardware stack levels used:    1
 27844 ;; This function calls:
 27845 ;;		Nothing
 27846 ;; This function is called by:
 27847 ;;		_display_prepare
 27848 ;; This function uses a non-reentrant model
 27849 ;;
 27850                           
 27851                           	psect	text135
 27852  003D46                     __ptext135:
 27853                           	opt stack 0
 27854  003D46                     __display_search:
 27855                           	opt stack 26
 27856                           
 27857                           ;display.c: 375: uint8_t cntr;;display.c: 376: cntr = 0;
 27858                           
 27859                           ;incstack = 0
 27860  003D46  0E00               	movlw	0
 27861  003D48  6E01               	movwf	__display_search@cntr,c
 27862                           
 27863                           ;display.c: 377: while(search_line1[cntr])
 27864  003D4A  D017               	goto	l1577
 27865  003D4C                     
 27866                           ;display.c: 378: display_content[0][cntr] = search_line1[cntr++];
 27867  003D4C  5001               	movf	__display_search@cntr,w,c
 27868  003D4E  0D01               	mullw	1
 27869  003D50  0EE4               	movlw	low _search_line1
 27870  003D52  24F3               	addwf	prodl,w,c
 27871  003D54  6EF6               	movwf	tblptrl,c
 27872  003D56  0E9D               	movlw	high _search_line1
 27873  003D58  20F4               	addwfc	prodh,w,c
 27874  003D5A  6EF7               	movwf	tblptrh,c
 27875  003D5C                     	if	1	;There are 3 active tblptr bytes
 27876  003D5C  6AF8               	clrf	tblptru,c
 27877  003D5E  0E00               	movlw	low (__mediumconst shr (0+16))
 27878  003D60  22F8               	addwfc	tblptru,f,c
 27879  003D62                     	endif
 27880  003D62  5001               	movf	__display_search@cntr,w,c
 27881  003D64  0D01               	mullw	1
 27882  003D66  0E00               	movlw	low _display_content
 27883  003D68  24F3               	addwf	prodl,w,c
 27884  003D6A  6ED9               	movwf	fsr2l,c
 27885  003D6C  0E02               	movlw	high _display_content
 27886  003D6E  20F4               	addwfc	prodh,w,c
 27887  003D70  6EDA               	movwf	fsr2h,c
 27888  003D72  0008               	tblrd		*
 27889  003D74  CFF5 FFDF          	movff	tablat,indf2
 27890  003D78  2A01               	incf	__display_search@cntr,f,c
 27891  003D7A                     l1577:
 27892  003D7A  5001               	movf	__display_search@cntr,w,c
 27893  003D7C  0D01               	mullw	1
 27894  003D7E  0EE4               	movlw	low _search_line1
 27895  003D80  24F3               	addwf	prodl,w,c
 27896  003D82  6EF6               	movwf	tblptrl,c
 27897  003D84  0E9D               	movlw	high _search_line1
 27898  003D86  20F4               	addwfc	prodh,w,c
 27899  003D88  6EF7               	movwf	tblptrh,c
 27900  003D8A                     	if	1	;There are 3 active tblptr bytes
 27901  003D8A  6AF8               	clrf	tblptru,c
 27902  003D8C  0E00               	movlw	low (__mediumconst shr (0+16))
 27903  003D8E  22F8               	addwfc	tblptru,f,c
 27904  003D90                     	endif
 27905  003D90  0008               	tblrd		*
 27906  003D92  50F5               	movf	tablat,w,c
 27907  003D94  0900               	iorlw	0
 27908  003D96  A4D8               	btfss	status,2,c
 27909  003D98  D7D9               	goto	l1578
 27910                           
 27911                           ;display.c: 379: cntr = 0;
 27912  003D9A  0E00               	movlw	0
 27913  003D9C  6E01               	movwf	__display_search@cntr,c
 27914                           
 27915                           ;display.c: 380: while(search_line2[cntr])
 27916  003D9E  D017               	goto	l1580
 27917  003DA0                     
 27918                           ;display.c: 381: display_content[1][cntr] = search_line2[cntr++];
 27919  003DA0  5001               	movf	__display_search@cntr,w,c
 27920  003DA2  0D01               	mullw	1
 27921  003DA4  0E43               	movlw	low _search_line2
 27922  003DA6  24F3               	addwf	prodl,w,c
 27923  003DA8  6EF6               	movwf	tblptrl,c
 27924  003DAA  0E9D               	movlw	high _search_line2
 27925  003DAC  20F4               	addwfc	prodh,w,c
 27926  003DAE  6EF7               	movwf	tblptrh,c
 27927  003DB0                     	if	1	;There are 3 active tblptr bytes
 27928  003DB0  6AF8               	clrf	tblptru,c
 27929  003DB2  0E00               	movlw	low (__mediumconst shr (0+16))
 27930  003DB4  22F8               	addwfc	tblptru,f,c
 27931  003DB6                     	endif
 27932  003DB6  5001               	movf	__display_search@cntr,w,c
 27933  003DB8  0D01               	mullw	1
 27934  003DBA  0E14               	movlw	low (_display_content+20)
 27935  003DBC  24F3               	addwf	prodl,w,c
 27936  003DBE  6ED9               	movwf	fsr2l,c
 27937  003DC0  0E02               	movlw	high (_display_content+20)
 27938  003DC2  20F4               	addwfc	prodh,w,c
 27939  003DC4  6EDA               	movwf	fsr2h,c
 27940  003DC6  0008               	tblrd		*
 27941  003DC8  CFF5 FFDF          	movff	tablat,indf2
 27942  003DCC  2A01               	incf	__display_search@cntr,f,c
 27943  003DCE                     l1580:
 27944  003DCE  5001               	movf	__display_search@cntr,w,c
 27945  003DD0  0D01               	mullw	1
 27946  003DD2  0E43               	movlw	low _search_line2
 27947  003DD4  24F3               	addwf	prodl,w,c
 27948  003DD6  6EF6               	movwf	tblptrl,c
 27949  003DD8  0E9D               	movlw	high _search_line2
 27950  003DDA  20F4               	addwfc	prodh,w,c
 27951  003DDC  6EF7               	movwf	tblptrh,c
 27952  003DDE                     	if	1	;There are 3 active tblptr bytes
 27953  003DDE  6AF8               	clrf	tblptru,c
 27954  003DE0  0E00               	movlw	low (__mediumconst shr (0+16))
 27955  003DE2  22F8               	addwfc	tblptru,f,c
 27956  003DE4                     	endif
 27957  003DE4  0008               	tblrd		*
 27958  003DE6  50F5               	movf	tablat,w,c
 27959  003DE8  0900               	iorlw	0
 27960  003DEA  A4D8               	btfss	status,2,c
 27961  003DEC  D7D9               	goto	l1581
 27962                           
 27963                           ;display.c: 382: cntr = 0;
 27964  003DEE  0E00               	movlw	0
 27965  003DF0  6E01               	movwf	__display_search@cntr,c
 27966                           
 27967                           ;display.c: 383: while(search_line3[cntr])
 27968  003DF2  D017               	goto	l1583
 27969  003DF4                     
 27970                           ;display.c: 384: display_content[2][cntr] = search_line3[cntr++];
 27971  003DF4  5001               	movf	__display_search@cntr,w,c
 27972  003DF6  0D01               	mullw	1
 27973  003DF8  0EC2               	movlw	low _search_line3
 27974  003DFA  24F3               	addwf	prodl,w,c
 27975  003DFC  6EF6               	movwf	tblptrl,c
 27976  003DFE  0E9C               	movlw	high _search_line3
 27977  003E00  20F4               	addwfc	prodh,w,c
 27978  003E02  6EF7               	movwf	tblptrh,c
 27979  003E04                     	if	1	;There are 3 active tblptr bytes
 27980  003E04  6AF8               	clrf	tblptru,c
 27981  003E06  0E00               	movlw	low (__mediumconst shr (0+16))
 27982  003E08  22F8               	addwfc	tblptru,f,c
 27983  003E0A                     	endif
 27984  003E0A  5001               	movf	__display_search@cntr,w,c
 27985  003E0C  0D01               	mullw	1
 27986  003E0E  0E28               	movlw	low (_display_content+40)
 27987  003E10  24F3               	addwf	prodl,w,c
 27988  003E12  6ED9               	movwf	fsr2l,c
 27989  003E14  0E02               	movlw	high (_display_content+40)
 27990  003E16  20F4               	addwfc	prodh,w,c
 27991  003E18  6EDA               	movwf	fsr2h,c
 27992  003E1A  0008               	tblrd		*
 27993  003E1C  CFF5 FFDF          	movff	tablat,indf2
 27994  003E20  2A01               	incf	__display_search@cntr,f,c
 27995  003E22                     l1583:
 27996  003E22  5001               	movf	__display_search@cntr,w,c
 27997  003E24  0D01               	mullw	1
 27998  003E26  0EC2               	movlw	low _search_line3
 27999  003E28  24F3               	addwf	prodl,w,c
 28000  003E2A  6EF6               	movwf	tblptrl,c
 28001  003E2C  0E9C               	movlw	high _search_line3
 28002  003E2E  20F4               	addwfc	prodh,w,c
 28003  003E30  6EF7               	movwf	tblptrh,c
 28004  003E32                     	if	1	;There are 3 active tblptr bytes
 28005  003E32  6AF8               	clrf	tblptru,c
 28006  003E34  0E00               	movlw	low (__mediumconst shr (0+16))
 28007  003E36  22F8               	addwfc	tblptru,f,c
 28008  003E38                     	endif
 28009  003E38  0008               	tblrd		*
 28010  003E3A  50F5               	movf	tablat,w,c
 28011  003E3C  0900               	iorlw	0
 28012  003E3E  A4D8               	btfss	status,2,c
 28013  003E40  D7D9               	goto	l1584
 28014                           
 28015                           ;display.c: 385: cntr = 0;
 28016  003E42  0E00               	movlw	0
 28017  003E44  6E01               	movwf	__display_search@cntr,c
 28018                           
 28019                           ;display.c: 386: while(search_line4[cntr])
 28020  003E46  D017               	goto	l1586
 28021  003E48                     
 28022                           ;display.c: 387: display_content[3][cntr] = search_line4[cntr++];
 28023  003E48  5001               	movf	__display_search@cntr,w,c
 28024  003E4A  0D01               	mullw	1
 28025  003E4C  0E59               	movlw	low _search_line4
 28026  003E4E  24F3               	addwf	prodl,w,c
 28027  003E50  6EF6               	movwf	tblptrl,c
 28028  003E52  0E9E               	movlw	high _search_line4
 28029  003E54  20F4               	addwfc	prodh,w,c
 28030  003E56  6EF7               	movwf	tblptrh,c
 28031  003E58                     	if	1	;There are 3 active tblptr bytes
 28032  003E58  6AF8               	clrf	tblptru,c
 28033  003E5A  0E00               	movlw	low (__mediumconst shr (0+16))
 28034  003E5C  22F8               	addwfc	tblptru,f,c
 28035  003E5E                     	endif
 28036  003E5E  5001               	movf	__display_search@cntr,w,c
 28037  003E60  0D01               	mullw	1
 28038  003E62  0E3C               	movlw	low (_display_content+60)
 28039  003E64  24F3               	addwf	prodl,w,c
 28040  003E66  6ED9               	movwf	fsr2l,c
 28041  003E68  0E02               	movlw	high (_display_content+60)
 28042  003E6A  20F4               	addwfc	prodh,w,c
 28043  003E6C  6EDA               	movwf	fsr2h,c
 28044  003E6E  0008               	tblrd		*
 28045  003E70  CFF5 FFDF          	movff	tablat,indf2
 28046  003E74  2A01               	incf	__display_search@cntr,f,c
 28047  003E76                     l1586:
 28048  003E76  5001               	movf	__display_search@cntr,w,c
 28049  003E78  0D01               	mullw	1
 28050  003E7A  0E59               	movlw	low _search_line4
 28051  003E7C  24F3               	addwf	prodl,w,c
 28052  003E7E  6EF6               	movwf	tblptrl,c
 28053  003E80  0E9E               	movlw	high _search_line4
 28054  003E82  20F4               	addwfc	prodh,w,c
 28055  003E84  6EF7               	movwf	tblptrh,c
 28056  003E86                     	if	1	;There are 3 active tblptr bytes
 28057  003E86  6AF8               	clrf	tblptru,c
 28058  003E88  0E00               	movlw	low (__mediumconst shr (0+16))
 28059  003E8A  22F8               	addwfc	tblptru,f,c
 28060  003E8C                     	endif
 28061  003E8C  0008               	tblrd		*
 28062  003E8E  50F5               	movf	tablat,w,c
 28063  003E90  0900               	iorlw	0
 28064  003E92  B4D8               	btfsc	status,2,c
 28065  003E94  0012               	return	
 28066  003E96  D7D8               	goto	l1587
 28067  003E98                     __end_of__display_search:
 28068                           	opt stack 0
 28069                           tosu	equ	0xFFF
 28070                           tosh	equ	0xFFE
 28071                           tosl	equ	0xFFD
 28072                           pclath	equ	0xFFA
 28073                           tblptru	equ	0xFF8
 28074                           tblptrh	equ	0xFF7
 28075                           tblptrl	equ	0xFF6
 28076                           tablat	equ	0xFF5
 28077                           prodh	equ	0xFF4
 28078                           prodl	equ	0xFF3
 28079                           intcon	equ	0xFF2
 28080                           intcon2	equ	0xFF1
 28081                           intcon3	equ	0xFF0
 28082                           indf0	equ	0xFEF
 28083                           postinc0	equ	0xFEE
 28084                           fsr0h	equ	0xFEA
 28085                           fsr0l	equ	0xFE9
 28086                           wreg	equ	0xFE8
 28087                           indf1	equ	0xFE7
 28088                           postdec1	equ	0xFE5
 28089                           plusw1	equ	0xFE3
 28090                           fsr1h	equ	0xFE2
 28091                           fsr1l	equ	0xFE1
 28092                           indf2	equ	0xFDF
 28093                           postinc2	equ	0xFDE
 28094                           postdec2	equ	0xFDD
 28095                           plusw2	equ	0xFDB
 28096                           fsr2h	equ	0xFDA
 28097                           fsr2l	equ	0xFD9
 28098                           status	equ	0xFD8
 28099                           
 28100 ;; *************** function __display_rebooting *****************
 28101 ;; Defined at:
 28102 ;;		line 547 in file "display.c"
 28103 ;; Parameters:    Size  Location     Type
 28104 ;;		None
 28105 ;; Auto vars:     Size  Location     Type
 28106 ;;  cntr            1    0[COMRAM] unsigned char 
 28107 ;; Return value:  Size  Location     Type
 28108 ;;                  1    wreg      void 
 28109 ;; Registers used:
 28110 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 28111 ;; Tracked objects:
 28112 ;;		On entry : 0/0
 28113 ;;		On exit  : 0/0
 28114 ;;		Unchanged: 0/0
 28115 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28116 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28117 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28118 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28119 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28120 ;;Total ram usage:        1 bytes
 28121 ;; Hardware stack levels used:    1
 28122 ;; This function calls:
 28123 ;;		Nothing
 28124 ;; This function is called by:
 28125 ;;		_display_prepare
 28126 ;; This function uses a non-reentrant model
 28127 ;;
 28128                           
 28129                           	psect	text136
 28130  007F28                     __ptext136:
 28131                           	opt stack 0
 28132  007F28                     __display_rebooting:
 28133                           	opt stack 26
 28134                           
 28135                           ;display.c: 549: uint8_t cntr;;display.c: 550: cntr = 0;
 28136                           
 28137                           ;incstack = 0
 28138  007F28  0E00               	movlw	0
 28139  007F2A  6E01               	movwf	__display_rebooting@cntr,c
 28140                           
 28141                           ;display.c: 551: while(reboot_line1[cntr])
 28142  007F2C  D017               	goto	l1701
 28143  007F2E                     
 28144                           ;display.c: 552: display_content[0][cntr] = reboot_line1[cntr++];
 28145  007F2E  5001               	movf	__display_rebooting@cntr,w,c
 28146  007F30  0D01               	mullw	1
 28147  007F32  0E3F               	movlw	low _reboot_line1
 28148  007F34  24F3               	addwf	prodl,w,c
 28149  007F36  6EF6               	movwf	tblptrl,c
 28150  007F38  0E9E               	movlw	high _reboot_line1
 28151  007F3A  20F4               	addwfc	prodh,w,c
 28152  007F3C  6EF7               	movwf	tblptrh,c
 28153  007F3E                     	if	1	;There are 3 active tblptr bytes
 28154  007F3E  6AF8               	clrf	tblptru,c
 28155  007F40  0E00               	movlw	low (__mediumconst shr (0+16))
 28156  007F42  22F8               	addwfc	tblptru,f,c
 28157  007F44                     	endif
 28158  007F44  5001               	movf	__display_rebooting@cntr,w,c
 28159  007F46  0D01               	mullw	1
 28160  007F48  0E00               	movlw	low _display_content
 28161  007F4A  24F3               	addwf	prodl,w,c
 28162  007F4C  6ED9               	movwf	fsr2l,c
 28163  007F4E  0E02               	movlw	high _display_content
 28164  007F50  20F4               	addwfc	prodh,w,c
 28165  007F52  6EDA               	movwf	fsr2h,c
 28166  007F54  0008               	tblrd		*
 28167  007F56  CFF5 FFDF          	movff	tablat,indf2
 28168  007F5A  2A01               	incf	__display_rebooting@cntr,f,c
 28169  007F5C                     l1701:
 28170  007F5C  5001               	movf	__display_rebooting@cntr,w,c
 28171  007F5E  0D01               	mullw	1
 28172  007F60  0E3F               	movlw	low _reboot_line1
 28173  007F62  24F3               	addwf	prodl,w,c
 28174  007F64  6EF6               	movwf	tblptrl,c
 28175  007F66  0E9E               	movlw	high _reboot_line1
 28176  007F68  20F4               	addwfc	prodh,w,c
 28177  007F6A  6EF7               	movwf	tblptrh,c
 28178  007F6C                     	if	1	;There are 3 active tblptr bytes
 28179  007F6C  6AF8               	clrf	tblptru,c
 28180  007F6E  0E00               	movlw	low (__mediumconst shr (0+16))
 28181  007F70  22F8               	addwfc	tblptru,f,c
 28182  007F72                     	endif
 28183  007F72  0008               	tblrd		*
 28184  007F74  50F5               	movf	tablat,w,c
 28185  007F76  0900               	iorlw	0
 28186  007F78  B4D8               	btfsc	status,2,c
 28187  007F7A  0012               	return	
 28188  007F7C  D7D8               	goto	l1702
 28189  007F7E                     __end_of__display_rebooting:
 28190                           	opt stack 0
 28191                           tosu	equ	0xFFF
 28192                           tosh	equ	0xFFE
 28193                           tosl	equ	0xFFD
 28194                           pclath	equ	0xFFA
 28195                           tblptru	equ	0xFF8
 28196                           tblptrh	equ	0xFF7
 28197                           tblptrl	equ	0xFF6
 28198                           tablat	equ	0xFF5
 28199                           prodh	equ	0xFF4
 28200                           prodl	equ	0xFF3
 28201                           intcon	equ	0xFF2
 28202                           intcon2	equ	0xFF1
 28203                           intcon3	equ	0xFF0
 28204                           indf0	equ	0xFEF
 28205                           postinc0	equ	0xFEE
 28206                           fsr0h	equ	0xFEA
 28207                           fsr0l	equ	0xFE9
 28208                           wreg	equ	0xFE8
 28209                           indf1	equ	0xFE7
 28210                           postdec1	equ	0xFE5
 28211                           plusw1	equ	0xFE3
 28212                           fsr1h	equ	0xFE2
 28213                           fsr1l	equ	0xFE1
 28214                           indf2	equ	0xFDF
 28215                           postinc2	equ	0xFDE
 28216                           postdec2	equ	0xFDD
 28217                           plusw2	equ	0xFDB
 28218                           fsr2h	equ	0xFDA
 28219                           fsr2l	equ	0xFD9
 28220                           status	equ	0xFD8
 28221                           
 28222 ;; *************** function __display_programming *****************
 28223 ;; Defined at:
 28224 ;;		line 505 in file "display.c"
 28225 ;; Parameters:    Size  Location     Type
 28226 ;;		None
 28227 ;; Auto vars:     Size  Location     Type
 28228 ;;  cntr            1   30[COMRAM] unsigned char 
 28229 ;; Return value:  Size  Location     Type
 28230 ;;                  1    wreg      void 
 28231 ;; Registers used:
 28232 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28233 ;; Tracked objects:
 28234 ;;		On entry : 0/0
 28235 ;;		On exit  : 0/0
 28236 ;;		Unchanged: 0/0
 28237 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28238 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28239 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28240 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28241 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28242 ;;Total ram usage:        1 bytes
 28243 ;; Hardware stack levels used:    1
 28244 ;; Hardware stack levels required when called:    4
 28245 ;; This function calls:
 28246 ;;		__display_itoa_u16
 28247 ;;		_bootloader_get_entries
 28248 ;;		_bootloader_get_flashPagesWritten
 28249 ;;		_bootloader_get_total_entries
 28250 ;; This function is called by:
 28251 ;;		_display_prepare
 28252 ;; This function uses a non-reentrant model
 28253 ;;
 28254                           
 28255                           	psect	text137
 28256  00328E                     __ptext137:
 28257                           	opt stack 0
 28258  00328E                     __display_programming:
 28259                           	opt stack 22
 28260                           
 28261                           ;display.c: 507: uint8_t cntr;;display.c: 508: cntr = 0;
 28262                           
 28263                           ;incstack = 0
 28264  00328E  0E00               	movlw	0
 28265  003290  6E1F               	movwf	__display_programming@cntr,c
 28266                           
 28267                           ;display.c: 509: while(programming_line1[cntr])
 28268  003292  D017               	goto	l1671
 28269  003294                     
 28270                           ;display.c: 510: display_content[0][cntr] = programming_line1[cntr++];
 28271  003294  501F               	movf	__display_programming@cntr,w,c
 28272  003296  0D01               	mullw	1
 28273  003298  0E94               	movlw	low _programming_line1
 28274  00329A  24F3               	addwf	prodl,w,c
 28275  00329C  6EF6               	movwf	tblptrl,c
 28276  00329E  0E9D               	movlw	high _programming_line1
 28277  0032A0  20F4               	addwfc	prodh,w,c
 28278  0032A2  6EF7               	movwf	tblptrh,c
 28279  0032A4                     	if	1	;There are 3 active tblptr bytes
 28280  0032A4  6AF8               	clrf	tblptru,c
 28281  0032A6  0E00               	movlw	low (__mediumconst shr (0+16))
 28282  0032A8  22F8               	addwfc	tblptru,f,c
 28283  0032AA                     	endif
 28284  0032AA  501F               	movf	__display_programming@cntr,w,c
 28285  0032AC  0D01               	mullw	1
 28286  0032AE  0E00               	movlw	low _display_content
 28287  0032B0  24F3               	addwf	prodl,w,c
 28288  0032B2  6ED9               	movwf	fsr2l,c
 28289  0032B4  0E02               	movlw	high _display_content
 28290  0032B6  20F4               	addwfc	prodh,w,c
 28291  0032B8  6EDA               	movwf	fsr2h,c
 28292  0032BA  0008               	tblrd		*
 28293  0032BC  CFF5 FFDF          	movff	tablat,indf2
 28294  0032C0  2A1F               	incf	__display_programming@cntr,f,c
 28295  0032C2                     l1671:
 28296  0032C2  501F               	movf	__display_programming@cntr,w,c
 28297  0032C4  0D01               	mullw	1
 28298  0032C6  0E94               	movlw	low _programming_line1
 28299  0032C8  24F3               	addwf	prodl,w,c
 28300  0032CA  6EF6               	movwf	tblptrl,c
 28301  0032CC  0E9D               	movlw	high _programming_line1
 28302  0032CE  20F4               	addwfc	prodh,w,c
 28303  0032D0  6EF7               	movwf	tblptrh,c
 28304  0032D2                     	if	1	;There are 3 active tblptr bytes
 28305  0032D2  6AF8               	clrf	tblptru,c
 28306  0032D4  0E00               	movlw	low (__mediumconst shr (0+16))
 28307  0032D6  22F8               	addwfc	tblptru,f,c
 28308  0032D8                     	endif
 28309  0032D8  0008               	tblrd		*
 28310  0032DA  50F5               	movf	tablat,w,c
 28311  0032DC  0900               	iorlw	0
 28312  0032DE  A4D8               	btfss	status,2,c
 28313  0032E0  D7D9               	goto	l1672
 28314                           
 28315                           ;display.c: 512: cntr = 0;
 28316  0032E2  0E00               	movlw	0
 28317  0032E4  6E1F               	movwf	__display_programming@cntr,c
 28318                           
 28319                           ;display.c: 513: while(programming_line2[cntr])
 28320  0032E6  D017               	goto	l1674
 28321  0032E8                     
 28322                           ;display.c: 514: display_content[1][cntr] = programming_line2[cntr++];
 28323  0032E8  501F               	movf	__display_programming@cntr,w,c
 28324  0032EA  0D01               	mullw	1
 28325  0032EC  0EFC               	movlw	low _programming_line2
 28326  0032EE  24F3               	addwf	prodl,w,c
 28327  0032F0  6EF6               	movwf	tblptrl,c
 28328  0032F2  0E9C               	movlw	high _programming_line2
 28329  0032F4  20F4               	addwfc	prodh,w,c
 28330  0032F6  6EF7               	movwf	tblptrh,c
 28331  0032F8                     	if	1	;There are 3 active tblptr bytes
 28332  0032F8  6AF8               	clrf	tblptru,c
 28333  0032FA  0E00               	movlw	low (__mediumconst shr (0+16))
 28334  0032FC  22F8               	addwfc	tblptru,f,c
 28335  0032FE                     	endif
 28336  0032FE  501F               	movf	__display_programming@cntr,w,c
 28337  003300  0D01               	mullw	1
 28338  003302  0E14               	movlw	low (_display_content+20)
 28339  003304  24F3               	addwf	prodl,w,c
 28340  003306  6ED9               	movwf	fsr2l,c
 28341  003308  0E02               	movlw	high (_display_content+20)
 28342  00330A  20F4               	addwfc	prodh,w,c
 28343  00330C  6EDA               	movwf	fsr2h,c
 28344  00330E  0008               	tblrd		*
 28345  003310  CFF5 FFDF          	movff	tablat,indf2
 28346  003314  2A1F               	incf	__display_programming@cntr,f,c
 28347  003316                     l1674:
 28348  003316  501F               	movf	__display_programming@cntr,w,c
 28349  003318  0D01               	mullw	1
 28350  00331A  0EFC               	movlw	low _programming_line2
 28351  00331C  24F3               	addwf	prodl,w,c
 28352  00331E  6EF6               	movwf	tblptrl,c
 28353  003320  0E9C               	movlw	high _programming_line2
 28354  003322  20F4               	addwfc	prodh,w,c
 28355  003324  6EF7               	movwf	tblptrh,c
 28356  003326                     	if	1	;There are 3 active tblptr bytes
 28357  003326  6AF8               	clrf	tblptru,c
 28358  003328  0E00               	movlw	low (__mediumconst shr (0+16))
 28359  00332A  22F8               	addwfc	tblptru,f,c
 28360  00332C                     	endif
 28361  00332C  0008               	tblrd		*
 28362  00332E  50F5               	movf	tablat,w,c
 28363  003330  0900               	iorlw	0
 28364  003332  A4D8               	btfss	status,2,c
 28365  003334  D7D9               	goto	l1675
 28366                           
 28367                           ;display.c: 516: cntr = 0;
 28368  003336  0E00               	movlw	0
 28369  003338  6E1F               	movwf	__display_programming@cntr,c
 28370                           
 28371                           ;display.c: 517: while(programming_line3[cntr])
 28372  00333A  D017               	goto	l1677
 28373  00333C                     
 28374                           ;display.c: 518: display_content[2][cntr] = programming_line3[cntr++];
 28375  00333C  501F               	movf	__display_programming@cntr,w,c
 28376  00333E  0D01               	mullw	1
 28377  003340  0E83               	movlw	low _programming_line3
 28378  003342  24F3               	addwf	prodl,w,c
 28379  003344  6EF6               	movwf	tblptrl,c
 28380  003346  0E9E               	movlw	high _programming_line3
 28381  003348  20F4               	addwfc	prodh,w,c
 28382  00334A  6EF7               	movwf	tblptrh,c
 28383  00334C                     	if	1	;There are 3 active tblptr bytes
 28384  00334C  6AF8               	clrf	tblptru,c
 28385  00334E  0E00               	movlw	low (__mediumconst shr (0+16))
 28386  003350  22F8               	addwfc	tblptru,f,c
 28387  003352                     	endif
 28388  003352  501F               	movf	__display_programming@cntr,w,c
 28389  003354  0D01               	mullw	1
 28390  003356  0E28               	movlw	low (_display_content+40)
 28391  003358  24F3               	addwf	prodl,w,c
 28392  00335A  6ED9               	movwf	fsr2l,c
 28393  00335C  0E02               	movlw	high (_display_content+40)
 28394  00335E  20F4               	addwfc	prodh,w,c
 28395  003360  6EDA               	movwf	fsr2h,c
 28396  003362  0008               	tblrd		*
 28397  003364  CFF5 FFDF          	movff	tablat,indf2
 28398  003368  2A1F               	incf	__display_programming@cntr,f,c
 28399  00336A                     l1677:
 28400  00336A  501F               	movf	__display_programming@cntr,w,c
 28401  00336C  0D01               	mullw	1
 28402  00336E  0E83               	movlw	low _programming_line3
 28403  003370  24F3               	addwf	prodl,w,c
 28404  003372  6EF6               	movwf	tblptrl,c
 28405  003374  0E9E               	movlw	high _programming_line3
 28406  003376  20F4               	addwfc	prodh,w,c
 28407  003378  6EF7               	movwf	tblptrh,c
 28408  00337A                     	if	1	;There are 3 active tblptr bytes
 28409  00337A  6AF8               	clrf	tblptru,c
 28410  00337C  0E00               	movlw	low (__mediumconst shr (0+16))
 28411  00337E  22F8               	addwfc	tblptru,f,c
 28412  003380                     	endif
 28413  003380  0008               	tblrd		*
 28414  003382  50F5               	movf	tablat,w,c
 28415  003384  0900               	iorlw	0
 28416  003386  A4D8               	btfss	status,2,c
 28417  003388  D7D9               	goto	l1678
 28418                           
 28419                           ;display.c: 519: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
 28420  00338A  ECED  F047         	call	_bootloader_get_entries	;wreg free
 28421  00338E  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 28422  003392  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 28423  003396  6A1B               	clrf	__display_itoa_u16@value+2,c
 28424  003398  6A1C               	clrf	__display_itoa_u16@value+3,c
 28425  00339A  501F               	movf	__display_programming@cntr,w,c
 28426  00339C  0D01               	mullw	1
 28427  00339E  0E28               	movlw	low (_display_content+40)
 28428  0033A0  24F3               	addwf	prodl,w,c
 28429  0033A2  6E1D               	movwf	__display_itoa_u16@text,c
 28430  0033A4  0E02               	movlw	high (_display_content+40)
 28431  0033A6  20F4               	addwfc	prodh,w,c
 28432  0033A8  6E1E               	movwf	__display_itoa_u16@text+1,c
 28433  0033AA  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28434  0033AE  261F               	addwf	__display_programming@cntr,f,c
 28435                           
 28436                           ;display.c: 520: display_content[2][cntr++] = '/';
 28437  0033B0  501F               	movf	__display_programming@cntr,w,c
 28438  0033B2  0D01               	mullw	1
 28439  0033B4  0E28               	movlw	low (_display_content+40)
 28440  0033B6  24F3               	addwf	prodl,w,c
 28441  0033B8  6ED9               	movwf	fsr2l,c
 28442  0033BA  0E02               	movlw	high (_display_content+40)
 28443  0033BC  20F4               	addwfc	prodh,w,c
 28444  0033BE  6EDA               	movwf	fsr2h,c
 28445  0033C0  0E2F               	movlw	47
 28446  0033C2  6EDF               	movwf	indf2,c
 28447  0033C4  2A1F               	incf	__display_programming@cntr,f,c
 28448                           
 28449                           ;display.c: 521: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
 28450  0033C6  ECF7  F047         	call	_bootloader_get_total_entries	;wreg free
 28451  0033CA  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 28452  0033CE  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 28453  0033D2  6A1B               	clrf	__display_itoa_u16@value+2,c
 28454  0033D4  6A1C               	clrf	__display_itoa_u16@value+3,c
 28455  0033D6  501F               	movf	__display_programming@cntr,w,c
 28456  0033D8  0D01               	mullw	1
 28457  0033DA  0E28               	movlw	low (_display_content+40)
 28458  0033DC  24F3               	addwf	prodl,w,c
 28459  0033DE  6E1D               	movwf	__display_itoa_u16@text,c
 28460  0033E0  0E02               	movlw	high (_display_content+40)
 28461  0033E2  20F4               	addwfc	prodh,w,c
 28462  0033E4  6E1E               	movwf	__display_itoa_u16@text+1,c
 28463  0033E6  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28464                           
 28465                           ;display.c: 523: cntr = 0;
 28466  0033EA  0E00               	movlw	0
 28467  0033EC  6E1F               	movwf	__display_programming@cntr,c
 28468                           
 28469                           ;display.c: 524: while(programming_line4[cntr])
 28470  0033EE  D017               	goto	l1680
 28471  0033F0                     
 28472                           ;display.c: 525: display_content[3][cntr] = programming_line4[cntr++];
 28473  0033F0  501F               	movf	__display_programming@cntr,w,c
 28474  0033F2  0D01               	mullw	1
 28475  0033F4  0E84               	movlw	low _programming_line4
 28476  0033F6  24F3               	addwf	prodl,w,c
 28477  0033F8  6EF6               	movwf	tblptrl,c
 28478  0033FA  0E9D               	movlw	high _programming_line4
 28479  0033FC  20F4               	addwfc	prodh,w,c
 28480  0033FE  6EF7               	movwf	tblptrh,c
 28481  003400                     	if	1	;There are 3 active tblptr bytes
 28482  003400  6AF8               	clrf	tblptru,c
 28483  003402  0E00               	movlw	low (__mediumconst shr (0+16))
 28484  003404  22F8               	addwfc	tblptru,f,c
 28485  003406                     	endif
 28486  003406  501F               	movf	__display_programming@cntr,w,c
 28487  003408  0D01               	mullw	1
 28488  00340A  0E3C               	movlw	low (_display_content+60)
 28489  00340C  24F3               	addwf	prodl,w,c
 28490  00340E  6ED9               	movwf	fsr2l,c
 28491  003410  0E02               	movlw	high (_display_content+60)
 28492  003412  20F4               	addwfc	prodh,w,c
 28493  003414  6EDA               	movwf	fsr2h,c
 28494  003416  0008               	tblrd		*
 28495  003418  CFF5 FFDF          	movff	tablat,indf2
 28496  00341C  2A1F               	incf	__display_programming@cntr,f,c
 28497  00341E                     l1680:
 28498  00341E  501F               	movf	__display_programming@cntr,w,c
 28499  003420  0D01               	mullw	1
 28500  003422  0E84               	movlw	low _programming_line4
 28501  003424  24F3               	addwf	prodl,w,c
 28502  003426  6EF6               	movwf	tblptrl,c
 28503  003428  0E9D               	movlw	high _programming_line4
 28504  00342A  20F4               	addwfc	prodh,w,c
 28505  00342C  6EF7               	movwf	tblptrh,c
 28506  00342E                     	if	1	;There are 3 active tblptr bytes
 28507  00342E  6AF8               	clrf	tblptru,c
 28508  003430  0E00               	movlw	low (__mediumconst shr (0+16))
 28509  003432  22F8               	addwfc	tblptru,f,c
 28510  003434                     	endif
 28511  003434  0008               	tblrd		*
 28512  003436  50F5               	movf	tablat,w,c
 28513  003438  0900               	iorlw	0
 28514  00343A  A4D8               	btfss	status,2,c
 28515  00343C  D7D9               	goto	l1681
 28516                           
 28517                           ;display.c: 526: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
 28518  00343E  ECF2  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 28519  003442  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 28520  003446  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 28521  00344A  6A1B               	clrf	__display_itoa_u16@value+2,c
 28522  00344C  6A1C               	clrf	__display_itoa_u16@value+3,c
 28523  00344E  501F               	movf	__display_programming@cntr,w,c
 28524  003450  0D01               	mullw	1
 28525  003452  0E3C               	movlw	low (_display_content+60)
 28526  003454  24F3               	addwf	prodl,w,c
 28527  003456  6E1D               	movwf	__display_itoa_u16@text,c
 28528  003458  0E02               	movlw	high (_display_content+60)
 28529  00345A  20F4               	addwfc	prodh,w,c
 28530  00345C  6E1E               	movwf	__display_itoa_u16@text+1,c
 28531  00345E  EC0C  F030         	call	__display_itoa_u16	;wreg free
 28532  003462  0012               	return		;funcret
 28533  003464                     __end_of__display_programming:
 28534                           	opt stack 0
 28535                           tosu	equ	0xFFF
 28536                           tosh	equ	0xFFE
 28537                           tosl	equ	0xFFD
 28538                           pclath	equ	0xFFA
 28539                           tblptru	equ	0xFF8
 28540                           tblptrh	equ	0xFF7
 28541                           tblptrl	equ	0xFF6
 28542                           tablat	equ	0xFF5
 28543                           prodh	equ	0xFF4
 28544                           prodl	equ	0xFF3
 28545                           intcon	equ	0xFF2
 28546                           intcon2	equ	0xFF1
 28547                           intcon3	equ	0xFF0
 28548                           indf0	equ	0xFEF
 28549                           postinc0	equ	0xFEE
 28550                           fsr0h	equ	0xFEA
 28551                           fsr0l	equ	0xFE9
 28552                           wreg	equ	0xFE8
 28553                           indf1	equ	0xFE7
 28554                           postdec1	equ	0xFE5
 28555                           plusw1	equ	0xFE3
 28556                           fsr1h	equ	0xFE2
 28557                           fsr1l	equ	0xFE1
 28558                           indf2	equ	0xFDF
 28559                           postinc2	equ	0xFDE
 28560                           postdec2	equ	0xFDD
 28561                           plusw2	equ	0xFDB
 28562                           fsr2h	equ	0xFDA
 28563                           fsr2l	equ	0xFD9
 28564                           status	equ	0xFD8
 28565                           
 28566 ;; *************** function __display_found *****************
 28567 ;; Defined at:
 28568 ;;		line 390 in file "display.c"
 28569 ;; Parameters:    Size  Location     Type
 28570 ;;		None
 28571 ;; Auto vars:     Size  Location     Type
 28572 ;;  cntr            1   39[COMRAM] unsigned char 
 28573 ;;  start           1   38[COMRAM] unsigned char 
 28574 ;; Return value:  Size  Location     Type
 28575 ;;                  1    wreg      void 
 28576 ;; Registers used:
 28577 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28578 ;; Tracked objects:
 28579 ;;		On entry : 0/0
 28580 ;;		On exit  : 0/0
 28581 ;;		Unchanged: 0/0
 28582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28583 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28584 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28585 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28586 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28587 ;;Total ram usage:        4 bytes
 28588 ;; Hardware stack levels used:    1
 28589 ;; Hardware stack levels required when called:    5
 28590 ;; This function calls:
 28591 ;;		__display_itoa_u32
 28592 ;;		_bootloader_get_file_size
 28593 ;; This function is called by:
 28594 ;;		_display_prepare
 28595 ;; This function uses a non-reentrant model
 28596 ;;
 28597                           
 28598                           	psect	text138
 28599  002ED6                     __ptext138:
 28600                           	opt stack 0
 28601  002ED6                     __display_found:
 28602                           	opt stack 21
 28603                           
 28604                           ;display.c: 392: uint8_t cntr;;display.c: 393: uint8_t start;;display.c: 395: cntr = 0;
 28605                           
 28606                           ;incstack = 0
 28607  002ED6  0E00               	movlw	0
 28608  002ED8  6E28               	movwf	__display_found@cntr,c
 28609                           
 28610                           ;display.c: 396: while(found_line1[cntr])
 28611  002EDA  D017               	goto	l1592
 28612  002EDC                     
 28613                           ;display.c: 397: display_content[0][cntr] = found_line1[cntr++];
 28614  002EDC  5028               	movf	__display_found@cntr,w,c
 28615  002EDE  0D01               	mullw	1
 28616  002EE0  0ED4               	movlw	low _found_line1
 28617  002EE2  24F3               	addwf	prodl,w,c
 28618  002EE4  6EF6               	movwf	tblptrl,c
 28619  002EE6  0E9D               	movlw	high _found_line1
 28620  002EE8  20F4               	addwfc	prodh,w,c
 28621  002EEA  6EF7               	movwf	tblptrh,c
 28622  002EEC                     	if	1	;There are 3 active tblptr bytes
 28623  002EEC  6AF8               	clrf	tblptru,c
 28624  002EEE  0E00               	movlw	low (__mediumconst shr (0+16))
 28625  002EF0  22F8               	addwfc	tblptru,f,c
 28626  002EF2                     	endif
 28627  002EF2  5028               	movf	__display_found@cntr,w,c
 28628  002EF4  0D01               	mullw	1
 28629  002EF6  0E00               	movlw	low _display_content
 28630  002EF8  24F3               	addwf	prodl,w,c
 28631  002EFA  6ED9               	movwf	fsr2l,c
 28632  002EFC  0E02               	movlw	high _display_content
 28633  002EFE  20F4               	addwfc	prodh,w,c
 28634  002F00  6EDA               	movwf	fsr2h,c
 28635  002F02  0008               	tblrd		*
 28636  002F04  CFF5 FFDF          	movff	tablat,indf2
 28637  002F08  2A28               	incf	__display_found@cntr,f,c
 28638  002F0A                     l1592:
 28639  002F0A  5028               	movf	__display_found@cntr,w,c
 28640  002F0C  0D01               	mullw	1
 28641  002F0E  0ED4               	movlw	low _found_line1
 28642  002F10  24F3               	addwf	prodl,w,c
 28643  002F12  6EF6               	movwf	tblptrl,c
 28644  002F14  0E9D               	movlw	high _found_line1
 28645  002F16  20F4               	addwfc	prodh,w,c
 28646  002F18  6EF7               	movwf	tblptrh,c
 28647  002F1A                     	if	1	;There are 3 active tblptr bytes
 28648  002F1A  6AF8               	clrf	tblptru,c
 28649  002F1C  0E00               	movlw	low (__mediumconst shr (0+16))
 28650  002F1E  22F8               	addwfc	tblptru,f,c
 28651  002F20                     	endif
 28652  002F20  0008               	tblrd		*
 28653  002F22  50F5               	movf	tablat,w,c
 28654  002F24  0900               	iorlw	0
 28655  002F26  A4D8               	btfss	status,2,c
 28656  002F28  D7D9               	goto	l1593
 28657                           
 28658                           ;display.c: 399: cntr = 0;
 28659  002F2A  0E00               	movlw	0
 28660  002F2C  6E28               	movwf	__display_found@cntr,c
 28661                           
 28662                           ;display.c: 400: while(found_line2[cntr])
 28663  002F2E  D017               	goto	l1595
 28664  002F30                     
 28665                           ;display.c: 401: display_content[1][cntr] = found_line2[cntr++];
 28666  002F30  5028               	movf	__display_found@cntr,w,c
 28667  002F32  0D01               	mullw	1
 28668  002F34  0EE9               	movlw	low _found_line2
 28669  002F36  24F3               	addwf	prodl,w,c
 28670  002F38  6EF6               	movwf	tblptrl,c
 28671  002F3A  0E9C               	movlw	high _found_line2
 28672  002F3C  20F4               	addwfc	prodh,w,c
 28673  002F3E  6EF7               	movwf	tblptrh,c
 28674  002F40                     	if	1	;There are 3 active tblptr bytes
 28675  002F40  6AF8               	clrf	tblptru,c
 28676  002F42  0E00               	movlw	low (__mediumconst shr (0+16))
 28677  002F44  22F8               	addwfc	tblptru,f,c
 28678  002F46                     	endif
 28679  002F46  5028               	movf	__display_found@cntr,w,c
 28680  002F48  0D01               	mullw	1
 28681  002F4A  0E14               	movlw	low (_display_content+20)
 28682  002F4C  24F3               	addwf	prodl,w,c
 28683  002F4E  6ED9               	movwf	fsr2l,c
 28684  002F50  0E02               	movlw	high (_display_content+20)
 28685  002F52  20F4               	addwfc	prodh,w,c
 28686  002F54  6EDA               	movwf	fsr2h,c
 28687  002F56  0008               	tblrd		*
 28688  002F58  CFF5 FFDF          	movff	tablat,indf2
 28689  002F5C  2A28               	incf	__display_found@cntr,f,c
 28690  002F5E                     l1595:
 28691  002F5E  5028               	movf	__display_found@cntr,w,c
 28692  002F60  0D01               	mullw	1
 28693  002F62  0EE9               	movlw	low _found_line2
 28694  002F64  24F3               	addwf	prodl,w,c
 28695  002F66  6EF6               	movwf	tblptrl,c
 28696  002F68  0E9C               	movlw	high _found_line2
 28697  002F6A  20F4               	addwfc	prodh,w,c
 28698  002F6C  6EF7               	movwf	tblptrh,c
 28699  002F6E                     	if	1	;There are 3 active tblptr bytes
 28700  002F6E  6AF8               	clrf	tblptru,c
 28701  002F70  0E00               	movlw	low (__mediumconst shr (0+16))
 28702  002F72  22F8               	addwfc	tblptru,f,c
 28703  002F74                     	endif
 28704  002F74  0008               	tblrd		*
 28705  002F76  50F5               	movf	tablat,w,c
 28706  002F78  0900               	iorlw	0
 28707  002F7A  A4D8               	btfss	status,2,c
 28708  002F7C  D7D9               	goto	l1596
 28709                           
 28710                           ;display.c: 403: cntr = 0;
 28711  002F7E  0E00               	movlw	0
 28712  002F80  6E28               	movwf	__display_found@cntr,c
 28713                           
 28714                           ;display.c: 404: while(found_line3[cntr])
 28715  002F82  D017               	goto	l1598
 28716  002F84                     
 28717                           ;display.c: 405: display_content[2][cntr] = found_line3[cntr++];
 28718  002F84  5028               	movf	__display_found@cntr,w,c
 28719  002F86  0D01               	mullw	1
 28720  002F88  0E98               	movlw	low _found_line3
 28721  002F8A  24F3               	addwf	prodl,w,c
 28722  002F8C  6EF6               	movwf	tblptrl,c
 28723  002F8E  0E9E               	movlw	high _found_line3
 28724  002F90  20F4               	addwfc	prodh,w,c
 28725  002F92  6EF7               	movwf	tblptrh,c
 28726  002F94                     	if	1	;There are 3 active tblptr bytes
 28727  002F94  6AF8               	clrf	tblptru,c
 28728  002F96  0E00               	movlw	low (__mediumconst shr (0+16))
 28729  002F98  22F8               	addwfc	tblptru,f,c
 28730  002F9A                     	endif
 28731  002F9A  5028               	movf	__display_found@cntr,w,c
 28732  002F9C  0D01               	mullw	1
 28733  002F9E  0E28               	movlw	low (_display_content+40)
 28734  002FA0  24F3               	addwf	prodl,w,c
 28735  002FA2  6ED9               	movwf	fsr2l,c
 28736  002FA4  0E02               	movlw	high (_display_content+40)
 28737  002FA6  20F4               	addwfc	prodh,w,c
 28738  002FA8  6EDA               	movwf	fsr2h,c
 28739  002FAA  0008               	tblrd		*
 28740  002FAC  CFF5 FFDF          	movff	tablat,indf2
 28741  002FB0  2A28               	incf	__display_found@cntr,f,c
 28742  002FB2                     l1598:
 28743  002FB2  5028               	movf	__display_found@cntr,w,c
 28744  002FB4  0D01               	mullw	1
 28745  002FB6  0E98               	movlw	low _found_line3
 28746  002FB8  24F3               	addwf	prodl,w,c
 28747  002FBA  6EF6               	movwf	tblptrl,c
 28748  002FBC  0E9E               	movlw	high _found_line3
 28749  002FBE  20F4               	addwfc	prodh,w,c
 28750  002FC0  6EF7               	movwf	tblptrh,c
 28751  002FC2                     	if	1	;There are 3 active tblptr bytes
 28752  002FC2  6AF8               	clrf	tblptru,c
 28753  002FC4  0E00               	movlw	low (__mediumconst shr (0+16))
 28754  002FC6  22F8               	addwfc	tblptru,f,c
 28755  002FC8                     	endif
 28756  002FC8  0008               	tblrd		*
 28757  002FCA  50F5               	movf	tablat,w,c
 28758  002FCC  0900               	iorlw	0
 28759  002FCE  A4D8               	btfss	status,2,c
 28760  002FD0  D7D9               	goto	l1599
 28761                           
 28762                           ;display.c: 406: start = cntr;
 28763  002FD2  C028  F027         	movff	__display_found@cntr,__display_found@start
 28764                           
 28765                           ;display.c: 407: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
 28766  002FD6  EC83  F047         	call	_bootloader_get_file_size	;wreg free
 28767  002FDA  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
 28768  002FDE  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
 28769  002FE2  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
 28770  002FE6  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
 28771  002FEA  5028               	movf	__display_found@cntr,w,c
 28772  002FEC  0D01               	mullw	1
 28773  002FEE  0E28               	movlw	low (_display_content+40)
 28774  002FF0  24F3               	addwf	prodl,w,c
 28775  002FF2  6E23               	movwf	__display_itoa_u32@text,c
 28776  002FF4  0E02               	movlw	high (_display_content+40)
 28777  002FF6  20F4               	addwfc	prodh,w,c
 28778  002FF8  6E24               	movwf	__display_itoa_u32@text+1,c
 28779  002FFA  EC15  F006         	call	__display_itoa_u32	;wreg free
 28780  002FFE  2627               	addwf	__display_found@start,f,c
 28781                           
 28782                           ;display.c: 408: cntr = 0;
 28783  003000  0E00               	movlw	0
 28784  003002  6E28               	movwf	__display_found@cntr,c
 28785                           
 28786                           ;display.c: 409: while(found_line3b[cntr])
 28787  003004  D01C               	goto	l1601
 28788  003006                     
 28789                           ;display.c: 410: display_content[2][start+cntr] = found_line3b[cntr++];
 28790  003006  5028               	movf	__display_found@cntr,w,c
 28791  003008  0D01               	mullw	1
 28792  00300A  0E91               	movlw	low _found_line3b
 28793  00300C  24F3               	addwf	prodl,w,c
 28794  00300E  6EF6               	movwf	tblptrl,c
 28795  003010  0E9E               	movlw	high _found_line3b
 28796  003012  20F4               	addwfc	prodh,w,c
 28797  003014  6EF7               	movwf	tblptrh,c
 28798  003016                     	if	1	;There are 3 active tblptr bytes
 28799  003016  6AF8               	clrf	tblptru,c
 28800  003018  0E00               	movlw	low (__mediumconst shr (0+16))
 28801  00301A  22F8               	addwfc	tblptru,f,c
 28802  00301C                     	endif
 28803  00301C  5028               	movf	__display_found@cntr,w,c
 28804  00301E  C027  F025         	movff	__display_found@start,??__display_found
 28805  003022  6A26               	clrf	(??__display_found+1)& (0+255),c
 28806  003024  2625               	addwf	??__display_found,f,c
 28807  003026  0E00               	movlw	0
 28808  003028  2226               	addwfc	??__display_found+1,f,c
 28809  00302A  0E28               	movlw	low (_display_content+40)
 28810  00302C  2425               	addwf	??__display_found,w,c
 28811  00302E  6ED9               	movwf	fsr2l,c
 28812  003030  0E02               	movlw	high (_display_content+40)
 28813  003032  2026               	addwfc	??__display_found+1,w,c
 28814  003034  6EDA               	movwf	fsr2h,c
 28815  003036  0008               	tblrd		*
 28816  003038  CFF5 FFDF          	movff	tablat,indf2
 28817  00303C  2A28               	incf	__display_found@cntr,f,c
 28818  00303E                     l1601:
 28819  00303E  5028               	movf	__display_found@cntr,w,c
 28820  003040  0D01               	mullw	1
 28821  003042  0E91               	movlw	low _found_line3b
 28822  003044  24F3               	addwf	prodl,w,c
 28823  003046  6EF6               	movwf	tblptrl,c
 28824  003048  0E9E               	movlw	high _found_line3b
 28825  00304A  20F4               	addwfc	prodh,w,c
 28826  00304C  6EF7               	movwf	tblptrh,c
 28827  00304E                     	if	1	;There are 3 active tblptr bytes
 28828  00304E  6AF8               	clrf	tblptru,c
 28829  003050  0E00               	movlw	low (__mediumconst shr (0+16))
 28830  003052  22F8               	addwfc	tblptru,f,c
 28831  003054                     	endif
 28832  003054  0008               	tblrd		*
 28833  003056  50F5               	movf	tablat,w,c
 28834  003058  0900               	iorlw	0
 28835  00305A  A4D8               	btfss	status,2,c
 28836  00305C  D7D4               	goto	l1602
 28837                           
 28838                           ;display.c: 412: cntr = 0;
 28839  00305E  0E00               	movlw	0
 28840  003060  6E28               	movwf	__display_found@cntr,c
 28841                           
 28842                           ;display.c: 413: while(found_line4[cntr])
 28843  003062  D017               	goto	l1604
 28844  003064                     
 28845                           ;display.c: 414: display_content[3][cntr] = found_line4[cntr++];
 28846  003064  5028               	movf	__display_found@cntr,w,c
 28847  003066  0D01               	mullw	1
 28848  003068  0E20               	movlw	low _found_line4
 28849  00306A  24F3               	addwf	prodl,w,c
 28850  00306C  6EF6               	movwf	tblptrl,c
 28851  00306E  0E9D               	movlw	high _found_line4
 28852  003070  20F4               	addwfc	prodh,w,c
 28853  003072  6EF7               	movwf	tblptrh,c
 28854  003074                     	if	1	;There are 3 active tblptr bytes
 28855  003074  6AF8               	clrf	tblptru,c
 28856  003076  0E00               	movlw	low (__mediumconst shr (0+16))
 28857  003078  22F8               	addwfc	tblptru,f,c
 28858  00307A                     	endif
 28859  00307A  5028               	movf	__display_found@cntr,w,c
 28860  00307C  0D01               	mullw	1
 28861  00307E  0E3C               	movlw	low (_display_content+60)
 28862  003080  24F3               	addwf	prodl,w,c
 28863  003082  6ED9               	movwf	fsr2l,c
 28864  003084  0E02               	movlw	high (_display_content+60)
 28865  003086  20F4               	addwfc	prodh,w,c
 28866  003088  6EDA               	movwf	fsr2h,c
 28867  00308A  0008               	tblrd		*
 28868  00308C  CFF5 FFDF          	movff	tablat,indf2
 28869  003090  2A28               	incf	__display_found@cntr,f,c
 28870  003092                     l1604:
 28871  003092  5028               	movf	__display_found@cntr,w,c
 28872  003094  0D01               	mullw	1
 28873  003096  0E20               	movlw	low _found_line4
 28874  003098  24F3               	addwf	prodl,w,c
 28875  00309A  6EF6               	movwf	tblptrl,c
 28876  00309C  0E9D               	movlw	high _found_line4
 28877  00309E  20F4               	addwfc	prodh,w,c
 28878  0030A0  6EF7               	movwf	tblptrh,c
 28879  0030A2                     	if	1	;There are 3 active tblptr bytes
 28880  0030A2  6AF8               	clrf	tblptru,c
 28881  0030A4  0E00               	movlw	low (__mediumconst shr (0+16))
 28882  0030A6  22F8               	addwfc	tblptru,f,c
 28883  0030A8                     	endif
 28884  0030A8  0008               	tblrd		*
 28885  0030AA  50F5               	movf	tablat,w,c
 28886  0030AC  0900               	iorlw	0
 28887  0030AE  B4D8               	btfsc	status,2,c
 28888  0030B0  0012               	return	
 28889  0030B2  D7D8               	goto	l1605
 28890  0030B4                     __end_of__display_found:
 28891                           	opt stack 0
 28892                           tosu	equ	0xFFF
 28893                           tosh	equ	0xFFE
 28894                           tosl	equ	0xFFD
 28895                           pclath	equ	0xFFA
 28896                           tblptru	equ	0xFF8
 28897                           tblptrh	equ	0xFF7
 28898                           tblptrl	equ	0xFF6
 28899                           tablat	equ	0xFF5
 28900                           prodh	equ	0xFF4
 28901                           prodl	equ	0xFF3
 28902                           intcon	equ	0xFF2
 28903                           intcon2	equ	0xFF1
 28904                           intcon3	equ	0xFF0
 28905                           indf0	equ	0xFEF
 28906                           postinc0	equ	0xFEE
 28907                           fsr0h	equ	0xFEA
 28908                           fsr0l	equ	0xFE9
 28909                           wreg	equ	0xFE8
 28910                           indf1	equ	0xFE7
 28911                           postdec1	equ	0xFE5
 28912                           plusw1	equ	0xFE3
 28913                           fsr1h	equ	0xFE2
 28914                           fsr1l	equ	0xFE1
 28915                           indf2	equ	0xFDF
 28916                           postinc2	equ	0xFDE
 28917                           postdec2	equ	0xFDD
 28918                           plusw2	equ	0xFDB
 28919                           fsr2h	equ	0xFDA
 28920                           fsr2l	equ	0xFD9
 28921                           status	equ	0xFD8
 28922                           
 28923 ;; *************** function _bootloader_get_file_size *****************
 28924 ;; Defined at:
 28925 ;;		line 460 in file "bootloader.c"
 28926 ;; Parameters:    Size  Location     Type
 28927 ;;		None
 28928 ;; Auto vars:     Size  Location     Type
 28929 ;;		None
 28930 ;; Return value:  Size  Location     Type
 28931 ;;                  4    0[COMRAM] unsigned long 
 28932 ;; Registers used:
 28933 ;;		None
 28934 ;; Tracked objects:
 28935 ;;		On entry : 0/0
 28936 ;;		On exit  : 0/0
 28937 ;;		Unchanged: 0/0
 28938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28939 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28940 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28942 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28943 ;;Total ram usage:        4 bytes
 28944 ;; Hardware stack levels used:    1
 28945 ;; This function calls:
 28946 ;;		Nothing
 28947 ;; This function is called by:
 28948 ;;		__display_found
 28949 ;;		__fill_buffer_get_bootloader_details
 28950 ;; This function uses a non-reentrant model
 28951 ;;
 28952                           
 28953                           	psect	text139
 28954  008F06                     __ptext139:
 28955                           	opt stack 0
 28956  008F06                     _bootloader_get_file_size:
 28957                           	opt stack 25
 28958                           
 28959                           ;bootloader.c: 462: return hex_file_size;
 28960                           
 28961                           ;incstack = 0
 28962  008F06  C14A  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 28963  008F0A  C14B  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 28964  008F0E  C14C  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 28965  008F12  C14D  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 28966  008F16  0012               	return		;funcret
 28967  008F18                     __end_of_bootloader_get_file_size:
 28968                           	opt stack 0
 28969                           tosu	equ	0xFFF
 28970                           tosh	equ	0xFFE
 28971                           tosl	equ	0xFFD
 28972                           pclath	equ	0xFFA
 28973                           tblptru	equ	0xFF8
 28974                           tblptrh	equ	0xFF7
 28975                           tblptrl	equ	0xFF6
 28976                           tablat	equ	0xFF5
 28977                           prodh	equ	0xFF4
 28978                           prodl	equ	0xFF3
 28979                           intcon	equ	0xFF2
 28980                           intcon2	equ	0xFF1
 28981                           intcon3	equ	0xFF0
 28982                           indf0	equ	0xFEF
 28983                           postinc0	equ	0xFEE
 28984                           fsr0h	equ	0xFEA
 28985                           fsr0l	equ	0xFE9
 28986                           wreg	equ	0xFE8
 28987                           indf1	equ	0xFE7
 28988                           postdec1	equ	0xFE5
 28989                           plusw1	equ	0xFE3
 28990                           fsr1h	equ	0xFE2
 28991                           fsr1l	equ	0xFE1
 28992                           indf2	equ	0xFDF
 28993                           postinc2	equ	0xFDE
 28994                           postdec2	equ	0xFDD
 28995                           plusw2	equ	0xFDB
 28996                           fsr2h	equ	0xFDA
 28997                           fsr2l	equ	0xFD9
 28998                           status	equ	0xFD8
 28999                           
 29000 ;; *************** function __display_failed *****************
 29001 ;; Defined at:
 29002 ;;		line 455 in file "display.c"
 29003 ;; Parameters:    Size  Location     Type
 29004 ;;		None
 29005 ;; Auto vars:     Size  Location     Type
 29006 ;;  cntr            1   36[COMRAM] unsigned char 
 29007 ;;  start           1    0        unsigned char 
 29008 ;; Return value:  Size  Location     Type
 29009 ;;                  1    wreg      void 
 29010 ;; Registers used:
 29011 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 29012 ;; Tracked objects:
 29013 ;;		On entry : 0/0
 29014 ;;		On exit  : 0/0
 29015 ;;		Unchanged: 0/0
 29016 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29017 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29018 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29019 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29020 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29021 ;;Total ram usage:        1 bytes
 29022 ;; Hardware stack levels used:    1
 29023 ;; Hardware stack levels required when called:    5
 29024 ;; This function calls:
 29025 ;;		__display_itoa_u16
 29026 ;;		__display_itoa_u32
 29027 ;;		_bootloader_get_entries
 29028 ;;		_bootloader_get_error
 29029 ;;		_bootloader_get_rec_address
 29030 ;; This function is called by:
 29031 ;;		_display_prepare
 29032 ;; This function uses a non-reentrant model
 29033 ;;
 29034                           
 29035                           	psect	text140
 29036  0012DC                     __ptext140:
 29037                           	opt stack 0
 29038  0012DC                     __display_failed:
 29039                           	opt stack 21
 29040                           
 29041                           ;display.c: 457: uint8_t cntr;;display.c: 458: uint8_t start;;display.c: 459: cntr = 0;
 29042                           
 29043                           ;incstack = 0
 29044  0012DC  0E00               	movlw	0
 29045  0012DE  6E25               	movwf	__display_failed@cntr,c
 29046                           
 29047                           ;display.c: 460: while(failed_line1[cntr])
 29048  0012E0  D017               	goto	l1637
 29049  0012E2                     
 29050                           ;display.c: 461: display_content[0][cntr] = failed_line1[cntr++];
 29051  0012E2  5025               	movf	__display_failed@cntr,w,c
 29052  0012E4  0D01               	mullw	1
 29053  0012E6  0EA4               	movlw	low _failed_line1
 29054  0012E8  24F3               	addwf	prodl,w,c
 29055  0012EA  6EF6               	movwf	tblptrl,c
 29056  0012EC  0E9D               	movlw	high _failed_line1
 29057  0012EE  20F4               	addwfc	prodh,w,c
 29058  0012F0  6EF7               	movwf	tblptrh,c
 29059  0012F2                     	if	1	;There are 3 active tblptr bytes
 29060  0012F2  6AF8               	clrf	tblptru,c
 29061  0012F4  0E00               	movlw	low (__mediumconst shr (0+16))
 29062  0012F6  22F8               	addwfc	tblptru,f,c
 29063  0012F8                     	endif
 29064  0012F8  5025               	movf	__display_failed@cntr,w,c
 29065  0012FA  0D01               	mullw	1
 29066  0012FC  0E00               	movlw	low _display_content
 29067  0012FE  24F3               	addwf	prodl,w,c
 29068  001300  6ED9               	movwf	fsr2l,c
 29069  001302  0E02               	movlw	high _display_content
 29070  001304  20F4               	addwfc	prodh,w,c
 29071  001306  6EDA               	movwf	fsr2h,c
 29072  001308  0008               	tblrd		*
 29073  00130A  CFF5 FFDF          	movff	tablat,indf2
 29074  00130E  2A25               	incf	__display_failed@cntr,f,c
 29075  001310                     l1637:
 29076  001310  5025               	movf	__display_failed@cntr,w,c
 29077  001312  0D01               	mullw	1
 29078  001314  0EA4               	movlw	low _failed_line1
 29079  001316  24F3               	addwf	prodl,w,c
 29080  001318  6EF6               	movwf	tblptrl,c
 29081  00131A  0E9D               	movlw	high _failed_line1
 29082  00131C  20F4               	addwfc	prodh,w,c
 29083  00131E  6EF7               	movwf	tblptrh,c
 29084  001320                     	if	1	;There are 3 active tblptr bytes
 29085  001320  6AF8               	clrf	tblptru,c
 29086  001322  0E00               	movlw	low (__mediumconst shr (0+16))
 29087  001324  22F8               	addwfc	tblptru,f,c
 29088  001326                     	endif
 29089  001326  0008               	tblrd		*
 29090  001328  50F5               	movf	tablat,w,c
 29091  00132A  0900               	iorlw	0
 29092  00132C  A4D8               	btfss	status,2,c
 29093  00132E  D7D9               	goto	l1638
 29094                           
 29095                           ;display.c: 462: cntr = 0;
 29096  001330  0E00               	movlw	0
 29097  001332  6E25               	movwf	__display_failed@cntr,c
 29098                           
 29099                           ;display.c: 463: while(failed_line2[cntr])
 29100  001334  D017               	goto	l1640
 29101  001336                     
 29102                           ;display.c: 464: display_content[1][cntr] = failed_line2[cntr++];
 29103  001336  5025               	movf	__display_failed@cntr,w,c
 29104  001338  0D01               	mullw	1
 29105  00133A  0E0E               	movlw	low _failed_line2
 29106  00133C  24F3               	addwf	prodl,w,c
 29107  00133E  6EF6               	movwf	tblptrl,c
 29108  001340  0E9D               	movlw	high _failed_line2
 29109  001342  20F4               	addwfc	prodh,w,c
 29110  001344  6EF7               	movwf	tblptrh,c
 29111  001346                     	if	1	;There are 3 active tblptr bytes
 29112  001346  6AF8               	clrf	tblptru,c
 29113  001348  0E00               	movlw	low (__mediumconst shr (0+16))
 29114  00134A  22F8               	addwfc	tblptru,f,c
 29115  00134C                     	endif
 29116  00134C  5025               	movf	__display_failed@cntr,w,c
 29117  00134E  0D01               	mullw	1
 29118  001350  0E14               	movlw	low (_display_content+20)
 29119  001352  24F3               	addwf	prodl,w,c
 29120  001354  6ED9               	movwf	fsr2l,c
 29121  001356  0E02               	movlw	high (_display_content+20)
 29122  001358  20F4               	addwfc	prodh,w,c
 29123  00135A  6EDA               	movwf	fsr2h,c
 29124  00135C  0008               	tblrd		*
 29125  00135E  CFF5 FFDF          	movff	tablat,indf2
 29126  001362  2A25               	incf	__display_failed@cntr,f,c
 29127  001364                     l1640:
 29128  001364  5025               	movf	__display_failed@cntr,w,c
 29129  001366  0D01               	mullw	1
 29130  001368  0E0E               	movlw	low _failed_line2
 29131  00136A  24F3               	addwf	prodl,w,c
 29132  00136C  6EF6               	movwf	tblptrl,c
 29133  00136E  0E9D               	movlw	high _failed_line2
 29134  001370  20F4               	addwfc	prodh,w,c
 29135  001372  6EF7               	movwf	tblptrh,c
 29136  001374                     	if	1	;There are 3 active tblptr bytes
 29137  001374  6AF8               	clrf	tblptru,c
 29138  001376  0E00               	movlw	low (__mediumconst shr (0+16))
 29139  001378  22F8               	addwfc	tblptru,f,c
 29140  00137A                     	endif
 29141  00137A  0008               	tblrd		*
 29142  00137C  50F5               	movf	tablat,w,c
 29143  00137E  0900               	iorlw	0
 29144  001380  A4D8               	btfss	status,2,c
 29145  001382  D7D9               	goto	l1641
 29146                           
 29147                           ;display.c: 466: cntr = 0;
 29148  001384  0E00               	movlw	0
 29149  001386  6E25               	movwf	__display_failed@cntr,c
 29150                           
 29151                           ;display.c: 467: switch(bootloader_get_error())
 29152  001388  D0D6               	goto	l1643
 29153  00138A                     
 29154                           ;display.c: 471: display_content[2][cntr] = failed_line3_startCode[cntr++];
 29155  00138A  5025               	movf	__display_failed@cntr,w,c
 29156  00138C  0D01               	mullw	1
 29157  00138E  0ED6               	movlw	low _failed_line3_startCode
 29158  001390  24F3               	addwf	prodl,w,c
 29159  001392  6EF6               	movwf	tblptrl,c
 29160  001394  0E9C               	movlw	high _failed_line3_startCode
 29161  001396  20F4               	addwfc	prodh,w,c
 29162  001398  6EF7               	movwf	tblptrh,c
 29163  00139A                     	if	1	;There are 3 active tblptr bytes
 29164  00139A  6AF8               	clrf	tblptru,c
 29165  00139C  0E00               	movlw	low (__mediumconst shr (0+16))
 29166  00139E  22F8               	addwfc	tblptru,f,c
 29167  0013A0                     	endif
 29168  0013A0  5025               	movf	__display_failed@cntr,w,c
 29169  0013A2  0D01               	mullw	1
 29170  0013A4  0E28               	movlw	low (_display_content+40)
 29171  0013A6  24F3               	addwf	prodl,w,c
 29172  0013A8  6ED9               	movwf	fsr2l,c
 29173  0013AA  0E02               	movlw	high (_display_content+40)
 29174  0013AC  20F4               	addwfc	prodh,w,c
 29175  0013AE  6EDA               	movwf	fsr2h,c
 29176  0013B0  0008               	tblrd		*
 29177  0013B2  CFF5 FFDF          	movff	tablat,indf2
 29178  0013B6  2A25               	incf	__display_failed@cntr,f,c
 29179  0013B8  5025               	movf	__display_failed@cntr,w,c
 29180  0013BA  0D01               	mullw	1
 29181  0013BC  0ED6               	movlw	low _failed_line3_startCode
 29182  0013BE  24F3               	addwf	prodl,w,c
 29183  0013C0  6EF6               	movwf	tblptrl,c
 29184  0013C2  0E9C               	movlw	high _failed_line3_startCode
 29185  0013C4  20F4               	addwfc	prodh,w,c
 29186  0013C6  6EF7               	movwf	tblptrh,c
 29187  0013C8                     	if	1	;There are 3 active tblptr bytes
 29188  0013C8  6AF8               	clrf	tblptru,c
 29189  0013CA  0E00               	movlw	low (__mediumconst shr (0+16))
 29190  0013CC  22F8               	addwfc	tblptru,f,c
 29191  0013CE                     	endif
 29192  0013CE  0008               	tblrd		*
 29193  0013D0  50F5               	movf	tablat,w,c
 29194  0013D2  0900               	iorlw	0
 29195  0013D4  B4D8               	btfsc	status,2,c
 29196  0013D6  D0C0               	goto	l1648
 29197  0013D8  D7D8               	goto	l1646
 29198  0013DA                     
 29199                           ;display.c: 476: display_content[2][cntr] = failed_line3_checksum[cntr++];
 29200  0013DA  5025               	movf	__display_failed@cntr,w,c
 29201  0013DC  0D01               	mullw	1
 29202  0013DE  0E04               	movlw	low _failed_line3_checksum
 29203  0013E0  24F3               	addwf	prodl,w,c
 29204  0013E2  6EF6               	movwf	tblptrl,c
 29205  0013E4  0E9E               	movlw	high _failed_line3_checksum
 29206  0013E6  20F4               	addwfc	prodh,w,c
 29207  0013E8  6EF7               	movwf	tblptrh,c
 29208  0013EA                     	if	1	;There are 3 active tblptr bytes
 29209  0013EA  6AF8               	clrf	tblptru,c
 29210  0013EC  0E00               	movlw	low (__mediumconst shr (0+16))
 29211  0013EE  22F8               	addwfc	tblptru,f,c
 29212  0013F0                     	endif
 29213  0013F0  5025               	movf	__display_failed@cntr,w,c
 29214  0013F2  0D01               	mullw	1
 29215  0013F4  0E28               	movlw	low (_display_content+40)
 29216  0013F6  24F3               	addwf	prodl,w,c
 29217  0013F8  6ED9               	movwf	fsr2l,c
 29218  0013FA  0E02               	movlw	high (_display_content+40)
 29219  0013FC  20F4               	addwfc	prodh,w,c
 29220  0013FE  6EDA               	movwf	fsr2h,c
 29221  001400  0008               	tblrd		*
 29222  001402  CFF5 FFDF          	movff	tablat,indf2
 29223  001406  2A25               	incf	__display_failed@cntr,f,c
 29224  001408  5025               	movf	__display_failed@cntr,w,c
 29225  00140A  0D01               	mullw	1
 29226  00140C  0E04               	movlw	low _failed_line3_checksum
 29227  00140E  24F3               	addwf	prodl,w,c
 29228  001410  6EF6               	movwf	tblptrl,c
 29229  001412  0E9E               	movlw	high _failed_line3_checksum
 29230  001414  20F4               	addwfc	prodh,w,c
 29231  001416  6EF7               	movwf	tblptrh,c
 29232  001418                     	if	1	;There are 3 active tblptr bytes
 29233  001418  6AF8               	clrf	tblptru,c
 29234  00141A  0E00               	movlw	low (__mediumconst shr (0+16))
 29235  00141C  22F8               	addwfc	tblptru,f,c
 29236  00141E                     	endif
 29237  00141E  0008               	tblrd		*
 29238  001420  50F5               	movf	tablat,w,c
 29239  001422  0900               	iorlw	0
 29240  001424  B4D8               	btfsc	status,2,c
 29241  001426  D098               	goto	l1648
 29242  001428  D7D8               	goto	l1651
 29243  00142A                     
 29244                           ;display.c: 483: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 29245  00142A  5025               	movf	__display_failed@cntr,w,c
 29246  00142C  0D01               	mullw	1
 29247  00142E  0E13               	movlw	low _failed_line3_noNextRecord
 29248  001430  24F3               	addwf	prodl,w,c
 29249  001432  6EF6               	movwf	tblptrl,c
 29250  001434  0E9E               	movlw	high _failed_line3_noNextRecord
 29251  001436  20F4               	addwfc	prodh,w,c
 29252  001438  6EF7               	movwf	tblptrh,c
 29253  00143A                     	if	1	;There are 3 active tblptr bytes
 29254  00143A  6AF8               	clrf	tblptru,c
 29255  00143C  0E00               	movlw	low (__mediumconst shr (0+16))
 29256  00143E  22F8               	addwfc	tblptru,f,c
 29257  001440                     	endif
 29258  001440  5025               	movf	__display_failed@cntr,w,c
 29259  001442  0D01               	mullw	1
 29260  001444  0E28               	movlw	low (_display_content+40)
 29261  001446  24F3               	addwf	prodl,w,c
 29262  001448  6ED9               	movwf	fsr2l,c
 29263  00144A  0E02               	movlw	high (_display_content+40)
 29264  00144C  20F4               	addwfc	prodh,w,c
 29265  00144E  6EDA               	movwf	fsr2h,c
 29266  001450  0008               	tblrd		*
 29267  001452  CFF5 FFDF          	movff	tablat,indf2
 29268  001456  2A25               	incf	__display_failed@cntr,f,c
 29269  001458  5025               	movf	__display_failed@cntr,w,c
 29270  00145A  0D01               	mullw	1
 29271  00145C  0E13               	movlw	low _failed_line3_noNextRecord
 29272  00145E  24F3               	addwf	prodl,w,c
 29273  001460  6EF6               	movwf	tblptrl,c
 29274  001462  0E9E               	movlw	high _failed_line3_noNextRecord
 29275  001464  20F4               	addwfc	prodh,w,c
 29276  001466  6EF7               	movwf	tblptrh,c
 29277  001468                     	if	1	;There are 3 active tblptr bytes
 29278  001468  6AF8               	clrf	tblptru,c
 29279  00146A  0E00               	movlw	low (__mediumconst shr (0+16))
 29280  00146C  22F8               	addwfc	tblptru,f,c
 29281  00146E                     	endif
 29282  00146E  0008               	tblrd		*
 29283  001470  50F5               	movf	tablat,w,c
 29284  001472  0900               	iorlw	0
 29285  001474  B4D8               	btfsc	status,2,c
 29286  001476  D070               	goto	l1648
 29287  001478  D7D8               	goto	l1655
 29288  00147A                     
 29289                           ;display.c: 488: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 29290  00147A  5025               	movf	__display_failed@cntr,w,c
 29291  00147C  0D01               	mullw	1
 29292  00147E  0E31               	movlw	low _failed_line3_dataTooLong
 29293  001480  24F3               	addwf	prodl,w,c
 29294  001482  6EF6               	movwf	tblptrl,c
 29295  001484  0E9E               	movlw	high _failed_line3_dataTooLong
 29296  001486  20F4               	addwfc	prodh,w,c
 29297  001488  6EF7               	movwf	tblptrh,c
 29298  00148A                     	if	1	;There are 3 active tblptr bytes
 29299  00148A  6AF8               	clrf	tblptru,c
 29300  00148C  0E00               	movlw	low (__mediumconst shr (0+16))
 29301  00148E  22F8               	addwfc	tblptru,f,c
 29302  001490                     	endif
 29303  001490  5025               	movf	__display_failed@cntr,w,c
 29304  001492  0D01               	mullw	1
 29305  001494  0E28               	movlw	low (_display_content+40)
 29306  001496  24F3               	addwf	prodl,w,c
 29307  001498  6ED9               	movwf	fsr2l,c
 29308  00149A  0E02               	movlw	high (_display_content+40)
 29309  00149C  20F4               	addwfc	prodh,w,c
 29310  00149E  6EDA               	movwf	fsr2h,c
 29311  0014A0  0008               	tblrd		*
 29312  0014A2  CFF5 FFDF          	movff	tablat,indf2
 29313  0014A6  2A25               	incf	__display_failed@cntr,f,c
 29314  0014A8  5025               	movf	__display_failed@cntr,w,c
 29315  0014AA  0D01               	mullw	1
 29316  0014AC  0E31               	movlw	low _failed_line3_dataTooLong
 29317  0014AE  24F3               	addwf	prodl,w,c
 29318  0014B0  6EF6               	movwf	tblptrl,c
 29319  0014B2  0E9E               	movlw	high _failed_line3_dataTooLong
 29320  0014B4  20F4               	addwfc	prodh,w,c
 29321  0014B6  6EF7               	movwf	tblptrh,c
 29322  0014B8                     	if	1	;There are 3 active tblptr bytes
 29323  0014B8  6AF8               	clrf	tblptru,c
 29324  0014BA  0E00               	movlw	low (__mediumconst shr (0+16))
 29325  0014BC  22F8               	addwfc	tblptru,f,c
 29326  0014BE                     	endif
 29327  0014BE  0008               	tblrd		*
 29328  0014C0  50F5               	movf	tablat,w,c
 29329  0014C2  0900               	iorlw	0
 29330  0014C4  B4D8               	btfsc	status,2,c
 29331  0014C6  D048               	goto	l1648
 29332  0014C8  D7D8               	goto	l1659
 29333  0014CA                     
 29334                           ;display.c: 493: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 29335  0014CA  5025               	movf	__display_failed@cntr,w,c
 29336  0014CC  0D01               	mullw	1
 29337  0014CE  0EAE               	movlw	low _failed_line3_addressRange
 29338  0014D0  24F3               	addwf	prodl,w,c
 29339  0014D2  6EF6               	movwf	tblptrl,c
 29340  0014D4  0E9C               	movlw	high _failed_line3_addressRange
 29341  0014D6  20F4               	addwfc	prodh,w,c
 29342  0014D8  6EF7               	movwf	tblptrh,c
 29343  0014DA                     	if	1	;There are 3 active tblptr bytes
 29344  0014DA  6AF8               	clrf	tblptru,c
 29345  0014DC  0E00               	movlw	low (__mediumconst shr (0+16))
 29346  0014DE  22F8               	addwfc	tblptru,f,c
 29347  0014E0                     	endif
 29348  0014E0  5025               	movf	__display_failed@cntr,w,c
 29349  0014E2  0D01               	mullw	1
 29350  0014E4  0E28               	movlw	low (_display_content+40)
 29351  0014E6  24F3               	addwf	prodl,w,c
 29352  0014E8  6ED9               	movwf	fsr2l,c
 29353  0014EA  0E02               	movlw	high (_display_content+40)
 29354  0014EC  20F4               	addwfc	prodh,w,c
 29355  0014EE  6EDA               	movwf	fsr2h,c
 29356  0014F0  0008               	tblrd		*
 29357  0014F2  CFF5 FFDF          	movff	tablat,indf2
 29358  0014F6  2A25               	incf	__display_failed@cntr,f,c
 29359  0014F8  5025               	movf	__display_failed@cntr,w,c
 29360  0014FA  0D01               	mullw	1
 29361  0014FC  0EAE               	movlw	low _failed_line3_addressRange
 29362  0014FE  24F3               	addwf	prodl,w,c
 29363  001500  6EF6               	movwf	tblptrl,c
 29364  001502  0E9C               	movlw	high _failed_line3_addressRange
 29365  001504  20F4               	addwfc	prodh,w,c
 29366  001506  6EF7               	movwf	tblptrh,c
 29367  001508                     	if	1	;There are 3 active tblptr bytes
 29368  001508  6AF8               	clrf	tblptru,c
 29369  00150A  0E00               	movlw	low (__mediumconst shr (0+16))
 29370  00150C  22F8               	addwfc	tblptru,f,c
 29371  00150E                     	endif
 29372  00150E  0008               	tblrd		*
 29373  001510  50F5               	movf	tablat,w,c
 29374  001512  0900               	iorlw	0
 29375  001514  A4D8               	btfss	status,2,c
 29376  001516  D7D9               	goto	l1663
 29377                           
 29378                           ;display.c: 494: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 29379  001518  ECE8  F047         	call	_bootloader_get_rec_address	;wreg free
 29380  00151C  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 29381  001520  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 29382  001524  6A21               	clrf	__display_itoa_u32@value+2,c
 29383  001526  6A22               	clrf	__display_itoa_u32@value+3,c
 29384  001528  0E4A               	movlw	low (_display_content+74)
 29385  00152A  6E23               	movwf	__display_itoa_u32@text,c
 29386  00152C  0E02               	movlw	high (_display_content+74)
 29387  00152E  6E24               	movwf	__display_itoa_u32@text+1,c
 29388  001530  EC15  F006         	call	__display_itoa_u32	;wreg free
 29389                           
 29390                           ;display.c: 497: }
 29391                           
 29392                           ;display.c: 495: break;
 29393  001534  D011               	goto	l1648
 29394  001536                     l1643:
 29395  001536  EC21  F048         	call	_bootloader_get_error	;wreg free
 29396                           
 29397                           ; Switch size 1, requested type "space"
 29398                           ; Number of cases is 5, Range of values is 11 to 15
 29399                           ; switch strategies available:
 29400                           ; Name         Instructions Cycles
 29401                           ; simple_byte           16     9 (average)
 29402                           ;	Chosen strategy is simple_byte
 29403  00153A  0A0B               	xorlw	11	; case 11
 29404  00153C  B4D8               	btfsc	status,2,c
 29405  00153E  D7DC               	goto	l1662
 29406  001540  0A07               	xorlw	7	; case 12
 29407  001542  B4D8               	btfsc	status,2,c
 29408  001544  D7B1               	goto	l1658
 29409  001546  0A01               	xorlw	1	; case 13
 29410  001548  B4D8               	btfsc	status,2,c
 29411  00154A  D786               	goto	l1654
 29412  00154C  0A03               	xorlw	3	; case 14
 29413  00154E  B4D8               	btfsc	status,2,c
 29414  001550  D75B               	goto	l1650
 29415  001552  0A01               	xorlw	1	; case 15
 29416  001554  B4D8               	btfsc	status,2,c
 29417  001556  D730               	goto	l1645
 29418  001558                     l1648:
 29419                           
 29420                           ;display.c: 499: cntr = 0;
 29421  001558  0E00               	movlw	0
 29422  00155A  6E25               	movwf	__display_failed@cntr,c
 29423                           
 29424                           ;display.c: 500: while(failed_line4[cntr])
 29425  00155C  D017               	goto	l1665
 29426  00155E                     
 29427                           ;display.c: 501: display_content[3][cntr] = failed_line4[cntr++];
 29428  00155E  5025               	movf	__display_failed@cntr,w,c
 29429  001560  0D01               	mullw	1
 29430  001562  0E6B               	movlw	low _failed_line4
 29431  001564  24F3               	addwf	prodl,w,c
 29432  001566  6EF6               	movwf	tblptrl,c
 29433  001568  0E9E               	movlw	high _failed_line4
 29434  00156A  20F4               	addwfc	prodh,w,c
 29435  00156C  6EF7               	movwf	tblptrh,c
 29436  00156E                     	if	1	;There are 3 active tblptr bytes
 29437  00156E  6AF8               	clrf	tblptru,c
 29438  001570  0E00               	movlw	low (__mediumconst shr (0+16))
 29439  001572  22F8               	addwfc	tblptru,f,c
 29440  001574                     	endif
 29441  001574  5025               	movf	__display_failed@cntr,w,c
 29442  001576  0D01               	mullw	1
 29443  001578  0E3C               	movlw	low (_display_content+60)
 29444  00157A  24F3               	addwf	prodl,w,c
 29445  00157C  6ED9               	movwf	fsr2l,c
 29446  00157E  0E02               	movlw	high (_display_content+60)
 29447  001580  20F4               	addwfc	prodh,w,c
 29448  001582  6EDA               	movwf	fsr2h,c
 29449  001584  0008               	tblrd		*
 29450  001586  CFF5 FFDF          	movff	tablat,indf2
 29451  00158A  2A25               	incf	__display_failed@cntr,f,c
 29452  00158C                     l1665:
 29453  00158C  5025               	movf	__display_failed@cntr,w,c
 29454  00158E  0D01               	mullw	1
 29455  001590  0E6B               	movlw	low _failed_line4
 29456  001592  24F3               	addwf	prodl,w,c
 29457  001594  6EF6               	movwf	tblptrl,c
 29458  001596  0E9E               	movlw	high _failed_line4
 29459  001598  20F4               	addwfc	prodh,w,c
 29460  00159A  6EF7               	movwf	tblptrh,c
 29461  00159C                     	if	1	;There are 3 active tblptr bytes
 29462  00159C  6AF8               	clrf	tblptru,c
 29463  00159E  0E00               	movlw	low (__mediumconst shr (0+16))
 29464  0015A0  22F8               	addwfc	tblptru,f,c
 29465  0015A2                     	endif
 29466  0015A2  0008               	tblrd		*
 29467  0015A4  50F5               	movf	tablat,w,c
 29468  0015A6  0900               	iorlw	0
 29469  0015A8  A4D8               	btfss	status,2,c
 29470  0015AA  D7D9               	goto	l1666
 29471                           
 29472                           ;display.c: 502: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 29473  0015AC  ECED  F047         	call	_bootloader_get_entries	;wreg free
 29474  0015B0  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 29475  0015B4  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 29476  0015B8  6A1B               	clrf	__display_itoa_u16@value+2,c
 29477  0015BA  6A1C               	clrf	__display_itoa_u16@value+3,c
 29478  0015BC  5025               	movf	__display_failed@cntr,w,c
 29479  0015BE  0D01               	mullw	1
 29480  0015C0  0E3C               	movlw	low (_display_content+60)
 29481  0015C2  24F3               	addwf	prodl,w,c
 29482  0015C4  6E1D               	movwf	__display_itoa_u16@text,c
 29483  0015C6  0E02               	movlw	high (_display_content+60)
 29484  0015C8  20F4               	addwfc	prodh,w,c
 29485  0015CA  6E1E               	movwf	__display_itoa_u16@text+1,c
 29486  0015CC  EC0C  F030         	call	__display_itoa_u16	;wreg free
 29487  0015D0  0012               	return		;funcret
 29488  0015D2                     __end_of__display_failed:
 29489                           	opt stack 0
 29490                           tosu	equ	0xFFF
 29491                           tosh	equ	0xFFE
 29492                           tosl	equ	0xFFD
 29493                           pclath	equ	0xFFA
 29494                           tblptru	equ	0xFF8
 29495                           tblptrh	equ	0xFF7
 29496                           tblptrl	equ	0xFF6
 29497                           tablat	equ	0xFF5
 29498                           prodh	equ	0xFF4
 29499                           prodl	equ	0xFF3
 29500                           intcon	equ	0xFF2
 29501                           intcon2	equ	0xFF1
 29502                           intcon3	equ	0xFF0
 29503                           indf0	equ	0xFEF
 29504                           postinc0	equ	0xFEE
 29505                           fsr0h	equ	0xFEA
 29506                           fsr0l	equ	0xFE9
 29507                           wreg	equ	0xFE8
 29508                           indf1	equ	0xFE7
 29509                           postdec1	equ	0xFE5
 29510                           plusw1	equ	0xFE3
 29511                           fsr1h	equ	0xFE2
 29512                           fsr1l	equ	0xFE1
 29513                           indf2	equ	0xFDF
 29514                           postinc2	equ	0xFDE
 29515                           postdec2	equ	0xFDD
 29516                           plusw2	equ	0xFDB
 29517                           fsr2h	equ	0xFDA
 29518                           fsr2l	equ	0xFD9
 29519                           status	equ	0xFD8
 29520                           
 29521 ;; *************** function _bootloader_get_rec_address *****************
 29522 ;; Defined at:
 29523 ;;		line 485 in file "bootloader.c"
 29524 ;; Parameters:    Size  Location     Type
 29525 ;;		None
 29526 ;; Auto vars:     Size  Location     Type
 29527 ;;		None
 29528 ;; Return value:  Size  Location     Type
 29529 ;;                  2    0[COMRAM] unsigned int 
 29530 ;; Registers used:
 29531 ;;		None
 29532 ;; Tracked objects:
 29533 ;;		On entry : 0/0
 29534 ;;		On exit  : 0/0
 29535 ;;		Unchanged: 0/0
 29536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29537 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29538 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29539 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29540 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29541 ;;Total ram usage:        2 bytes
 29542 ;; Hardware stack levels used:    1
 29543 ;; This function calls:
 29544 ;;		Nothing
 29545 ;; This function is called by:
 29546 ;;		__display_failed
 29547 ;;		__fill_buffer_get_bootloader_details
 29548 ;; This function uses a non-reentrant model
 29549 ;;
 29550                           
 29551                           	psect	text141
 29552  008FD0                     __ptext141:
 29553                           	opt stack 0
 29554  008FD0                     _bootloader_get_rec_address:
 29555                           	opt stack 25
 29556                           
 29557                           ;bootloader.c: 488: return hex_file_entry.address;
 29558                           
 29559                           ;incstack = 0
 29560  008FD0  C195  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 29561  008FD4  C196  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 29562  008FD8  0012               	return		;funcret
 29563  008FDA                     __end_of_bootloader_get_rec_address:
 29564                           	opt stack 0
 29565                           tosu	equ	0xFFF
 29566                           tosh	equ	0xFFE
 29567                           tosl	equ	0xFFD
 29568                           pclath	equ	0xFFA
 29569                           tblptru	equ	0xFF8
 29570                           tblptrh	equ	0xFF7
 29571                           tblptrl	equ	0xFF6
 29572                           tablat	equ	0xFF5
 29573                           prodh	equ	0xFF4
 29574                           prodl	equ	0xFF3
 29575                           intcon	equ	0xFF2
 29576                           intcon2	equ	0xFF1
 29577                           intcon3	equ	0xFF0
 29578                           indf0	equ	0xFEF
 29579                           postinc0	equ	0xFEE
 29580                           fsr0h	equ	0xFEA
 29581                           fsr0l	equ	0xFE9
 29582                           wreg	equ	0xFE8
 29583                           indf1	equ	0xFE7
 29584                           postdec1	equ	0xFE5
 29585                           plusw1	equ	0xFE3
 29586                           fsr1h	equ	0xFE2
 29587                           fsr1l	equ	0xFE1
 29588                           indf2	equ	0xFDF
 29589                           postinc2	equ	0xFDE
 29590                           postdec2	equ	0xFDD
 29591                           plusw2	equ	0xFDB
 29592                           fsr2h	equ	0xFDA
 29593                           fsr2l	equ	0xFD9
 29594                           status	equ	0xFD8
 29595                           
 29596 ;; *************** function _bootloader_get_error *****************
 29597 ;; Defined at:
 29598 ;;		line 475 in file "bootloader.c"
 29599 ;; Parameters:    Size  Location     Type
 29600 ;;		None
 29601 ;; Auto vars:     Size  Location     Type
 29602 ;;		None
 29603 ;; Return value:  Size  Location     Type
 29604 ;;                  1    wreg      enum E7014
 29605 ;; Registers used:
 29606 ;;		wreg, status,2
 29607 ;; Tracked objects:
 29608 ;;		On entry : 0/0
 29609 ;;		On exit  : 0/0
 29610 ;;		Unchanged: 0/0
 29611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29613 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29615 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29616 ;;Total ram usage:        0 bytes
 29617 ;; Hardware stack levels used:    1
 29618 ;; This function calls:
 29619 ;;		Nothing
 29620 ;; This function is called by:
 29621 ;;		__display_failed
 29622 ;;		__fill_buffer_get_bootloader_details
 29623 ;; This function uses a non-reentrant model
 29624 ;;
 29625                           
 29626                           	psect	text142
 29627  009042                     __ptext142:
 29628                           	opt stack 0
 29629  009042                     _bootloader_get_error:
 29630                           	opt stack 25
 29631                           
 29632                           ;bootloader.c: 477: return last_error;
 29633                           
 29634                           ;incstack = 0
 29635  009042  0101               	movlb	1	; () banked
 29636  009044  518C               	movf	_last_error& (0+255),w,b
 29637  009046  0012               	return	
 29638  009048                     __end_of_bootloader_get_error:
 29639                           	opt stack 0
 29640                           tosu	equ	0xFFF
 29641                           tosh	equ	0xFFE
 29642                           tosl	equ	0xFFD
 29643                           pclath	equ	0xFFA
 29644                           tblptru	equ	0xFF8
 29645                           tblptrh	equ	0xFF7
 29646                           tblptrl	equ	0xFF6
 29647                           tablat	equ	0xFF5
 29648                           prodh	equ	0xFF4
 29649                           prodl	equ	0xFF3
 29650                           intcon	equ	0xFF2
 29651                           intcon2	equ	0xFF1
 29652                           intcon3	equ	0xFF0
 29653                           indf0	equ	0xFEF
 29654                           postinc0	equ	0xFEE
 29655                           fsr0h	equ	0xFEA
 29656                           fsr0l	equ	0xFE9
 29657                           wreg	equ	0xFE8
 29658                           indf1	equ	0xFE7
 29659                           postdec1	equ	0xFE5
 29660                           plusw1	equ	0xFE3
 29661                           fsr1h	equ	0xFE2
 29662                           fsr1l	equ	0xFE1
 29663                           indf2	equ	0xFDF
 29664                           postinc2	equ	0xFDE
 29665                           postdec2	equ	0xFDD
 29666                           plusw2	equ	0xFDB
 29667                           fsr2h	equ	0xFDA
 29668                           fsr2l	equ	0xFD9
 29669                           status	equ	0xFD8
 29670                           
 29671 ;; *************** function _bootloader_get_entries *****************
 29672 ;; Defined at:
 29673 ;;		line 465 in file "bootloader.c"
 29674 ;; Parameters:    Size  Location     Type
 29675 ;;		None
 29676 ;; Auto vars:     Size  Location     Type
 29677 ;;		None
 29678 ;; Return value:  Size  Location     Type
 29679 ;;                  2    0[COMRAM] unsigned int 
 29680 ;; Registers used:
 29681 ;;		None
 29682 ;; Tracked objects:
 29683 ;;		On entry : 0/0
 29684 ;;		On exit  : 0/0
 29685 ;;		Unchanged: 0/0
 29686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29687 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29688 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29690 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29691 ;;Total ram usage:        2 bytes
 29692 ;; Hardware stack levels used:    1
 29693 ;; This function calls:
 29694 ;;		Nothing
 29695 ;; This function is called by:
 29696 ;;		__display_verify
 29697 ;;		__display_failed
 29698 ;;		__display_programming
 29699 ;;		__fill_buffer_get_bootloader_details
 29700 ;; This function uses a non-reentrant model
 29701 ;;
 29702                           
 29703                           	psect	text143
 29704  008FDA                     __ptext143:
 29705                           	opt stack 0
 29706  008FDA                     _bootloader_get_entries:
 29707                           	opt stack 25
 29708                           
 29709                           ;bootloader.c: 467: return hex_file_entries;
 29710                           
 29711                           ; BSR set to: 1
 29712                           ;incstack = 0
 29713  008FDA  C178  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 29714  008FDE  C179  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 29715  008FE2  0012               	return		;funcret
 29716  008FE4                     __end_of_bootloader_get_entries:
 29717                           	opt stack 0
 29718                           tosu	equ	0xFFF
 29719                           tosh	equ	0xFFE
 29720                           tosl	equ	0xFFD
 29721                           pclath	equ	0xFFA
 29722                           tblptru	equ	0xFF8
 29723                           tblptrh	equ	0xFF7
 29724                           tblptrl	equ	0xFF6
 29725                           tablat	equ	0xFF5
 29726                           prodh	equ	0xFF4
 29727                           prodl	equ	0xFF3
 29728                           intcon	equ	0xFF2
 29729                           intcon2	equ	0xFF1
 29730                           intcon3	equ	0xFF0
 29731                           indf0	equ	0xFEF
 29732                           postinc0	equ	0xFEE
 29733                           fsr0h	equ	0xFEA
 29734                           fsr0l	equ	0xFE9
 29735                           wreg	equ	0xFE8
 29736                           indf1	equ	0xFE7
 29737                           postdec1	equ	0xFE5
 29738                           plusw1	equ	0xFE3
 29739                           fsr1h	equ	0xFE2
 29740                           fsr1l	equ	0xFE1
 29741                           indf2	equ	0xFDF
 29742                           postinc2	equ	0xFDE
 29743                           postdec2	equ	0xFDD
 29744                           plusw2	equ	0xFDB
 29745                           fsr2h	equ	0xFDA
 29746                           fsr2l	equ	0xFD9
 29747                           status	equ	0xFD8
 29748                           
 29749 ;; *************** function __display_itoa_u32 *****************
 29750 ;; Defined at:
 29751 ;;		line 172 in file "display.c"
 29752 ;; Parameters:    Size  Location     Type
 29753 ;;  value           4   30[COMRAM] unsigned long 
 29754 ;;  text            2   34[COMRAM] PTR unsigned char 
 29755 ;;		 -> display_content(80), 
 29756 ;; Auto vars:     Size  Location     Type
 29757 ;;		None
 29758 ;; Return value:  Size  Location     Type
 29759 ;;                  1    wreg      unsigned char 
 29760 ;; Registers used:
 29761 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29762 ;; Tracked objects:
 29763 ;;		On entry : 0/0
 29764 ;;		On exit  : 0/0
 29765 ;;		Unchanged: 0/0
 29766 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29767 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29768 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29769 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29770 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29771 ;;Total ram usage:        6 bytes
 29772 ;; Hardware stack levels used:    1
 29773 ;; Hardware stack levels required when called:    4
 29774 ;; This function calls:
 29775 ;;		___lldiv
 29776 ;;		___llmod
 29777 ;;		__display_itoa_u16
 29778 ;;		_itoa
 29779 ;; This function is called by:
 29780 ;;		__display_start
 29781 ;;		__display_found
 29782 ;;		__display_failed
 29783 ;; This function uses a non-reentrant model
 29784 ;;
 29785                           
 29786                           	psect	text144
 29787  000C2A                     __ptext144:
 29788                           	opt stack 0
 29789  000C2A                     __display_itoa_u32:
 29790                           	opt stack 21
 29791                           
 29792                           ;display.c: 175: if(value<=0x7FFF)
 29793                           
 29794                           ;incstack = 0
 29795  000C2A  5022               	movf	__display_itoa_u32@value+3,w,c
 29796  000C2C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 29797  000C2E  E111               	bnz	l11209
 29798  000C30  0E80               	movlw	128
 29799  000C32  5C20               	subwf	__display_itoa_u32@value+1,w,c
 29800  000C34  B0D8               	btfsc	status,0,c
 29801  000C36  D00D               	goto	l1508
 29802                           
 29803                           ;display.c: 176: {;display.c: 177: return _display_itoa_u16((uint16_t) value, text);
 29804  000C38  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 29805  000C3C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 29806  000C40  6A1B               	clrf	__display_itoa_u16@value+2,c
 29807  000C42  6A1C               	clrf	__display_itoa_u16@value+3,c
 29808  000C44  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 29809  000C48  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 29810  000C4C  EC0C  F030         	call	__display_itoa_u16	;wreg free
 29811  000C50  0012               	return	
 29812  000C52                     l1508:
 29813  000C52                     l11209:
 29814                           
 29815                           ;display.c: 178: };display.c: 181: if(value>100000000)
 29816  000C52  041F               	decf	__display_itoa_u32@value,w,c
 29817  000C54  0EE1               	movlw	225
 29818  000C56  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29819  000C58  0EF5               	movlw	245
 29820  000C5A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29821  000C5C  0E05               	movlw	5
 29822  000C5E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 29823  000C60  A0D8               	btfss	status,0,c
 29824  000C62  D04C               	goto	l1510
 29825                           
 29826                           ;display.c: 182: {;display.c: 183: itoa(text, (uint16_t)(value/10000), 10);
 29827  000C64  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29828  000C68  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29829  000C6C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29830  000C70  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29831  000C74  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29832  000C78  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29833  000C7C  0E10               	movlw	16
 29834  000C7E  6E05               	movwf	___lldiv@divisor,c
 29835  000C80  0E27               	movlw	39
 29836  000C82  6E06               	movwf	___lldiv@divisor+1,c
 29837  000C84  0E00               	movlw	0
 29838  000C86  6E07               	movwf	___lldiv@divisor+2,c
 29839  000C88  0E00               	movlw	0
 29840  000C8A  6E08               	movwf	___lldiv@divisor+3,c
 29841  000C8C  EC7C  F039         	call	___lldiv	;wreg free
 29842  000C90  C001  F013         	movff	?___lldiv,itoa@val
 29843  000C94  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29844  000C98  0E00               	movlw	0
 29845  000C9A  6E16               	movwf	itoa@base+1,c
 29846  000C9C  0E0A               	movlw	10
 29847  000C9E  6E15               	movwf	itoa@base,c
 29848  000CA0  EC9F  F042         	call	_itoa	;wreg free
 29849                           
 29850                           ;display.c: 184: itoa(text+5, (uint16_t)(value%10000), 10);
 29851  000CA4  0E05               	movlw	5
 29852  000CA6  2423               	addwf	__display_itoa_u32@text,w,c
 29853  000CA8  6E11               	movwf	itoa@buf,c
 29854  000CAA  0E00               	movlw	0
 29855  000CAC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29856  000CAE  6E12               	movwf	itoa@buf+1,c
 29857  000CB0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29858  000CB4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29859  000CB8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29860  000CBC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29861  000CC0  0E10               	movlw	16
 29862  000CC2  6E05               	movwf	___llmod@divisor,c
 29863  000CC4  0E27               	movlw	39
 29864  000CC6  6E06               	movwf	___llmod@divisor+1,c
 29865  000CC8  0E00               	movlw	0
 29866  000CCA  6E07               	movwf	___llmod@divisor+2,c
 29867  000CCC  0E00               	movlw	0
 29868  000CCE  6E08               	movwf	___llmod@divisor+3,c
 29869  000CD0  ECAA  F03C         	call	___llmod	;wreg free
 29870  000CD4  C001  F013         	movff	?___llmod,itoa@val
 29871  000CD8  C002  F014         	movff	?___llmod+1,itoa@val+1
 29872  000CDC  0E00               	movlw	0
 29873  000CDE  6E16               	movwf	itoa@base+1,c
 29874  000CE0  0E0A               	movlw	10
 29875  000CE2  6E15               	movwf	itoa@base,c
 29876  000CE4  EC9F  F042         	call	_itoa	;wreg free
 29877                           
 29878                           ;display.c: 185: *(text+9) = ' ';
 29879  000CE8  EE20 F009          	lfsr	2,9
 29880  000CEC  5023               	movf	__display_itoa_u32@text,w,c
 29881  000CEE  26D9               	addwf	fsr2l,f,c
 29882  000CF0  5024               	movf	__display_itoa_u32@text+1,w,c
 29883  000CF2  22DA               	addwfc	fsr2h,f,c
 29884  000CF4  0E20               	movlw	32
 29885  000CF6  6EDF               	movwf	indf2,c
 29886                           
 29887                           ;display.c: 186: return 9;
 29888  000CF8  0E09               	movlw	9
 29889                           
 29890                           ;display.c: 187: }
 29891  000CFA  0012               	return	
 29892  000CFC                     l1510:
 29893                           
 29894                           ;display.c: 188: else if(value>10000000)
 29895  000CFC  5022               	movf	__display_itoa_u32@value+3,w,c
 29896  000CFE  E108               	bnz	u7930
 29897  000D00  0E81               	movlw	129
 29898  000D02  5C1F               	subwf	__display_itoa_u32@value,w,c
 29899  000D04  0E96               	movlw	150
 29900  000D06  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29901  000D08  0E98               	movlw	152
 29902  000D0A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29903  000D0C  A0D8               	btfss	status,0,c
 29904  000D0E  D04C               	goto	l1512
 29905  000D10                     u7930:
 29906                           
 29907                           ;display.c: 189: {;display.c: 190: itoa(text, (uint16_t)(value/10000), 10);
 29908  000D10  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29909  000D14  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29910  000D18  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29911  000D1C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29912  000D20  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29913  000D24  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29914  000D28  0E10               	movlw	16
 29915  000D2A  6E05               	movwf	___lldiv@divisor,c
 29916  000D2C  0E27               	movlw	39
 29917  000D2E  6E06               	movwf	___lldiv@divisor+1,c
 29918  000D30  0E00               	movlw	0
 29919  000D32  6E07               	movwf	___lldiv@divisor+2,c
 29920  000D34  0E00               	movlw	0
 29921  000D36  6E08               	movwf	___lldiv@divisor+3,c
 29922  000D38  EC7C  F039         	call	___lldiv	;wreg free
 29923  000D3C  C001  F013         	movff	?___lldiv,itoa@val
 29924  000D40  C002  F014         	movff	?___lldiv+1,itoa@val+1
 29925  000D44  0E00               	movlw	0
 29926  000D46  6E16               	movwf	itoa@base+1,c
 29927  000D48  0E0A               	movlw	10
 29928  000D4A  6E15               	movwf	itoa@base,c
 29929  000D4C  EC9F  F042         	call	_itoa	;wreg free
 29930                           
 29931                           ;display.c: 191: itoa(text+4, (uint16_t)(value%10000), 10);
 29932  000D50  0E04               	movlw	4
 29933  000D52  2423               	addwf	__display_itoa_u32@text,w,c
 29934  000D54  6E11               	movwf	itoa@buf,c
 29935  000D56  0E00               	movlw	0
 29936  000D58  2024               	addwfc	__display_itoa_u32@text+1,w,c
 29937  000D5A  6E12               	movwf	itoa@buf+1,c
 29938  000D5C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 29939  000D60  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 29940  000D64  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 29941  000D68  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 29942  000D6C  0E10               	movlw	16
 29943  000D6E  6E05               	movwf	___llmod@divisor,c
 29944  000D70  0E27               	movlw	39
 29945  000D72  6E06               	movwf	___llmod@divisor+1,c
 29946  000D74  0E00               	movlw	0
 29947  000D76  6E07               	movwf	___llmod@divisor+2,c
 29948  000D78  0E00               	movlw	0
 29949  000D7A  6E08               	movwf	___llmod@divisor+3,c
 29950  000D7C  ECAA  F03C         	call	___llmod	;wreg free
 29951  000D80  C001  F013         	movff	?___llmod,itoa@val
 29952  000D84  C002  F014         	movff	?___llmod+1,itoa@val+1
 29953  000D88  0E00               	movlw	0
 29954  000D8A  6E16               	movwf	itoa@base+1,c
 29955  000D8C  0E0A               	movlw	10
 29956  000D8E  6E15               	movwf	itoa@base,c
 29957  000D90  EC9F  F042         	call	_itoa	;wreg free
 29958                           
 29959                           ;display.c: 192: *(text+8) = ' ';
 29960  000D94  EE20 F008          	lfsr	2,8
 29961  000D98  5023               	movf	__display_itoa_u32@text,w,c
 29962  000D9A  26D9               	addwf	fsr2l,f,c
 29963  000D9C  5024               	movf	__display_itoa_u32@text+1,w,c
 29964  000D9E  22DA               	addwfc	fsr2h,f,c
 29965  000DA0  0E20               	movlw	32
 29966  000DA2  6EDF               	movwf	indf2,c
 29967                           
 29968                           ;display.c: 193: return 8;
 29969  000DA4  0E08               	movlw	8
 29970                           
 29971                           ;display.c: 194: }
 29972  000DA6  0012               	return	
 29973  000DA8                     l1512:
 29974                           
 29975                           ;display.c: 195: else if(value>1000000)
 29976  000DA8  5022               	movf	__display_itoa_u32@value+3,w,c
 29977  000DAA  E108               	bnz	u7940
 29978  000DAC  0E41               	movlw	65
 29979  000DAE  5C1F               	subwf	__display_itoa_u32@value,w,c
 29980  000DB0  0E42               	movlw	66
 29981  000DB2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 29982  000DB4  0E0F               	movlw	15
 29983  000DB6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 29984  000DB8  A0D8               	btfss	status,0,c
 29985  000DBA  D04C               	goto	l1514
 29986  000DBC                     u7940:
 29987                           
 29988                           ;display.c: 196: {;display.c: 197: itoa(text, (uint16_t)(value/10000), 10);
 29989  000DBC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 29990  000DC0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 29991  000DC4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 29992  000DC8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 29993  000DCC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 29994  000DD0  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 29995  000DD4  0E10               	movlw	16
 29996  000DD6  6E05               	movwf	___lldiv@divisor,c
 29997  000DD8  0E27               	movlw	39
 29998  000DDA  6E06               	movwf	___lldiv@divisor+1,c
 29999  000DDC  0E00               	movlw	0
 30000  000DDE  6E07               	movwf	___lldiv@divisor+2,c
 30001  000DE0  0E00               	movlw	0
 30002  000DE2  6E08               	movwf	___lldiv@divisor+3,c
 30003  000DE4  EC7C  F039         	call	___lldiv	;wreg free
 30004  000DE8  C001  F013         	movff	?___lldiv,itoa@val
 30005  000DEC  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30006  000DF0  0E00               	movlw	0
 30007  000DF2  6E16               	movwf	itoa@base+1,c
 30008  000DF4  0E0A               	movlw	10
 30009  000DF6  6E15               	movwf	itoa@base,c
 30010  000DF8  EC9F  F042         	call	_itoa	;wreg free
 30011                           
 30012                           ;display.c: 198: itoa(text+3, (uint16_t)(value%10000), 10);
 30013  000DFC  0E03               	movlw	3
 30014  000DFE  2423               	addwf	__display_itoa_u32@text,w,c
 30015  000E00  6E11               	movwf	itoa@buf,c
 30016  000E02  0E00               	movlw	0
 30017  000E04  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30018  000E06  6E12               	movwf	itoa@buf+1,c
 30019  000E08  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30020  000E0C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30021  000E10  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30022  000E14  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30023  000E18  0E10               	movlw	16
 30024  000E1A  6E05               	movwf	___llmod@divisor,c
 30025  000E1C  0E27               	movlw	39
 30026  000E1E  6E06               	movwf	___llmod@divisor+1,c
 30027  000E20  0E00               	movlw	0
 30028  000E22  6E07               	movwf	___llmod@divisor+2,c
 30029  000E24  0E00               	movlw	0
 30030  000E26  6E08               	movwf	___llmod@divisor+3,c
 30031  000E28  ECAA  F03C         	call	___llmod	;wreg free
 30032  000E2C  C001  F013         	movff	?___llmod,itoa@val
 30033  000E30  C002  F014         	movff	?___llmod+1,itoa@val+1
 30034  000E34  0E00               	movlw	0
 30035  000E36  6E16               	movwf	itoa@base+1,c
 30036  000E38  0E0A               	movlw	10
 30037  000E3A  6E15               	movwf	itoa@base,c
 30038  000E3C  EC9F  F042         	call	_itoa	;wreg free
 30039                           
 30040                           ;display.c: 199: *(text+7) = ' ';
 30041  000E40  EE20 F007          	lfsr	2,7
 30042  000E44  5023               	movf	__display_itoa_u32@text,w,c
 30043  000E46  26D9               	addwf	fsr2l,f,c
 30044  000E48  5024               	movf	__display_itoa_u32@text+1,w,c
 30045  000E4A  22DA               	addwfc	fsr2h,f,c
 30046  000E4C  0E20               	movlw	32
 30047  000E4E  6EDF               	movwf	indf2,c
 30048                           
 30049                           ;display.c: 200: return 7;
 30050  000E50  0E07               	movlw	7
 30051                           
 30052                           ;display.c: 201: }
 30053  000E52  0012               	return	
 30054  000E54                     l1514:
 30055                           
 30056                           ;display.c: 202: else if(value>100000)
 30057  000E54  5022               	movf	__display_itoa_u32@value+3,w,c
 30058  000E56  E108               	bnz	u7950
 30059  000E58  0EA1               	movlw	161
 30060  000E5A  5C1F               	subwf	__display_itoa_u32@value,w,c
 30061  000E5C  0E86               	movlw	134
 30062  000E5E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 30063  000E60  0E01               	movlw	1
 30064  000E62  5821               	subwfb	__display_itoa_u32@value+2,w,c
 30065  000E64  A0D8               	btfss	status,0,c
 30066  000E66  D04C               	goto	l1516
 30067  000E68                     u7950:
 30068                           
 30069                           ;display.c: 203: {;display.c: 204: itoa(text, (uint16_t)(value/10000), 10);
 30070  000E68  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30071  000E6C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30072  000E70  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30073  000E74  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30074  000E78  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30075  000E7C  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30076  000E80  0E10               	movlw	16
 30077  000E82  6E05               	movwf	___lldiv@divisor,c
 30078  000E84  0E27               	movlw	39
 30079  000E86  6E06               	movwf	___lldiv@divisor+1,c
 30080  000E88  0E00               	movlw	0
 30081  000E8A  6E07               	movwf	___lldiv@divisor+2,c
 30082  000E8C  0E00               	movlw	0
 30083  000E8E  6E08               	movwf	___lldiv@divisor+3,c
 30084  000E90  EC7C  F039         	call	___lldiv	;wreg free
 30085  000E94  C001  F013         	movff	?___lldiv,itoa@val
 30086  000E98  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30087  000E9C  0E00               	movlw	0
 30088  000E9E  6E16               	movwf	itoa@base+1,c
 30089  000EA0  0E0A               	movlw	10
 30090  000EA2  6E15               	movwf	itoa@base,c
 30091  000EA4  EC9F  F042         	call	_itoa	;wreg free
 30092                           
 30093                           ;display.c: 205: itoa(text+2, (uint16_t)(value%10000), 10);
 30094  000EA8  0E02               	movlw	2
 30095  000EAA  2423               	addwf	__display_itoa_u32@text,w,c
 30096  000EAC  6E11               	movwf	itoa@buf,c
 30097  000EAE  0E00               	movlw	0
 30098  000EB0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30099  000EB2  6E12               	movwf	itoa@buf+1,c
 30100  000EB4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30101  000EB8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30102  000EBC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30103  000EC0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30104  000EC4  0E10               	movlw	16
 30105  000EC6  6E05               	movwf	___llmod@divisor,c
 30106  000EC8  0E27               	movlw	39
 30107  000ECA  6E06               	movwf	___llmod@divisor+1,c
 30108  000ECC  0E00               	movlw	0
 30109  000ECE  6E07               	movwf	___llmod@divisor+2,c
 30110  000ED0  0E00               	movlw	0
 30111  000ED2  6E08               	movwf	___llmod@divisor+3,c
 30112  000ED4  ECAA  F03C         	call	___llmod	;wreg free
 30113  000ED8  C001  F013         	movff	?___llmod,itoa@val
 30114  000EDC  C002  F014         	movff	?___llmod+1,itoa@val+1
 30115  000EE0  0E00               	movlw	0
 30116  000EE2  6E16               	movwf	itoa@base+1,c
 30117  000EE4  0E0A               	movlw	10
 30118  000EE6  6E15               	movwf	itoa@base,c
 30119  000EE8  EC9F  F042         	call	_itoa	;wreg free
 30120                           
 30121                           ;display.c: 206: *(text+6) = ' ';
 30122  000EEC  EE20 F006          	lfsr	2,6
 30123  000EF0  5023               	movf	__display_itoa_u32@text,w,c
 30124  000EF2  26D9               	addwf	fsr2l,f,c
 30125  000EF4  5024               	movf	__display_itoa_u32@text+1,w,c
 30126  000EF6  22DA               	addwfc	fsr2h,f,c
 30127  000EF8  0E20               	movlw	32
 30128  000EFA  6EDF               	movwf	indf2,c
 30129                           
 30130                           ;display.c: 207: return 6;
 30131  000EFC  0E06               	movlw	6
 30132                           
 30133                           ;display.c: 208: }
 30134  000EFE  0012               	return	
 30135  000F00                     l1516:
 30136                           
 30137                           ;display.c: 209: else;display.c: 210: {;display.c: 211: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 30138  000F00  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 30139  000F04  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 30140  000F08  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 30141  000F0C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 30142  000F10  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 30143  000F14  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 30144  000F18  0E10               	movlw	16
 30145  000F1A  6E05               	movwf	___lldiv@divisor,c
 30146  000F1C  0E27               	movlw	39
 30147  000F1E  6E06               	movwf	___lldiv@divisor+1,c
 30148  000F20  0E00               	movlw	0
 30149  000F22  6E07               	movwf	___lldiv@divisor+2,c
 30150  000F24  0E00               	movlw	0
 30151  000F26  6E08               	movwf	___lldiv@divisor+3,c
 30152  000F28  EC7C  F039         	call	___lldiv	;wreg free
 30153  000F2C  C001  F013         	movff	?___lldiv,itoa@val
 30154  000F30  C002  F014         	movff	?___lldiv+1,itoa@val+1
 30155  000F34  0E00               	movlw	0
 30156  000F36  6E16               	movwf	itoa@base+1,c
 30157  000F38  0E0A               	movlw	10
 30158  000F3A  6E15               	movwf	itoa@base,c
 30159  000F3C  EC9F  F042         	call	_itoa	;wreg free
 30160                           
 30161                           ;display.c: 212: itoa(text+1, (uint16_t)(value%10000), 10);
 30162  000F40  0E01               	movlw	1
 30163  000F42  2423               	addwf	__display_itoa_u32@text,w,c
 30164  000F44  6E11               	movwf	itoa@buf,c
 30165  000F46  0E00               	movlw	0
 30166  000F48  2024               	addwfc	__display_itoa_u32@text+1,w,c
 30167  000F4A  6E12               	movwf	itoa@buf+1,c
 30168  000F4C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 30169  000F50  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 30170  000F54  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 30171  000F58  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 30172  000F5C  0E10               	movlw	16
 30173  000F5E  6E05               	movwf	___llmod@divisor,c
 30174  000F60  0E27               	movlw	39
 30175  000F62  6E06               	movwf	___llmod@divisor+1,c
 30176  000F64  0E00               	movlw	0
 30177  000F66  6E07               	movwf	___llmod@divisor+2,c
 30178  000F68  0E00               	movlw	0
 30179  000F6A  6E08               	movwf	___llmod@divisor+3,c
 30180  000F6C  ECAA  F03C         	call	___llmod	;wreg free
 30181  000F70  C001  F013         	movff	?___llmod,itoa@val
 30182  000F74  C002  F014         	movff	?___llmod+1,itoa@val+1
 30183  000F78  0E00               	movlw	0
 30184  000F7A  6E16               	movwf	itoa@base+1,c
 30185  000F7C  0E0A               	movlw	10
 30186  000F7E  6E15               	movwf	itoa@base,c
 30187  000F80  EC9F  F042         	call	_itoa	;wreg free
 30188                           
 30189                           ;display.c: 213: *(text+5) = ' ';
 30190  000F84  EE20 F005          	lfsr	2,5
 30191  000F88  5023               	movf	__display_itoa_u32@text,w,c
 30192  000F8A  26D9               	addwf	fsr2l,f,c
 30193  000F8C  5024               	movf	__display_itoa_u32@text+1,w,c
 30194  000F8E  22DA               	addwfc	fsr2h,f,c
 30195  000F90  0E20               	movlw	32
 30196  000F92  6EDF               	movwf	indf2,c
 30197                           
 30198                           ;display.c: 214: return 5;
 30199  000F94  0E05               	movlw	5
 30200  000F96  0012               	return	
 30201  000F98                     __end_of__display_itoa_u32:
 30202                           	opt stack 0
 30203                           tosu	equ	0xFFF
 30204                           tosh	equ	0xFFE
 30205                           tosl	equ	0xFFD
 30206                           pclath	equ	0xFFA
 30207                           tblptru	equ	0xFF8
 30208                           tblptrh	equ	0xFF7
 30209                           tblptrl	equ	0xFF6
 30210                           tablat	equ	0xFF5
 30211                           prodh	equ	0xFF4
 30212                           prodl	equ	0xFF3
 30213                           intcon	equ	0xFF2
 30214                           intcon2	equ	0xFF1
 30215                           intcon3	equ	0xFF0
 30216                           indf0	equ	0xFEF
 30217                           postinc0	equ	0xFEE
 30218                           fsr0h	equ	0xFEA
 30219                           fsr0l	equ	0xFE9
 30220                           wreg	equ	0xFE8
 30221                           indf1	equ	0xFE7
 30222                           postdec1	equ	0xFE5
 30223                           plusw1	equ	0xFE3
 30224                           fsr1h	equ	0xFE2
 30225                           fsr1l	equ	0xFE1
 30226                           indf2	equ	0xFDF
 30227                           postinc2	equ	0xFDE
 30228                           postdec2	equ	0xFDD
 30229                           plusw2	equ	0xFDB
 30230                           fsr2h	equ	0xFDA
 30231                           fsr2l	equ	0xFD9
 30232                           status	equ	0xFD8
 30233                           
 30234 ;; *************** function ___llmod *****************
 30235 ;; Defined at:
 30236 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 30237 ;; Parameters:    Size  Location     Type
 30238 ;;  dividend        4    0[COMRAM] unsigned long 
 30239 ;;  divisor         4    4[COMRAM] unsigned long 
 30240 ;; Auto vars:     Size  Location     Type
 30241 ;;  counter         1    8[COMRAM] unsigned char 
 30242 ;; Return value:  Size  Location     Type
 30243 ;;                  4    0[COMRAM] unsigned long 
 30244 ;; Registers used:
 30245 ;;		wreg, status,2, status,0
 30246 ;; Tracked objects:
 30247 ;;		On entry : 0/0
 30248 ;;		On exit  : 0/0
 30249 ;;		Unchanged: 0/0
 30250 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30251 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30252 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30253 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30254 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30255 ;;Total ram usage:        9 bytes
 30256 ;; Hardware stack levels used:    1
 30257 ;; This function calls:
 30258 ;;		Nothing
 30259 ;; This function is called by:
 30260 ;;		__display_itoa_u32
 30261 ;; This function uses a non-reentrant model
 30262 ;;
 30263                           
 30264                           	psect	text145
 30265  007954                     __ptext145:
 30266                           	opt stack 0
 30267  007954                     ___llmod:
 30268                           	opt stack 24
 30269                           
 30270                           ;incstack = 0
 30271  007954  5005               	movf	___llmod@divisor,w,c
 30272  007956  1006               	iorwf	___llmod@divisor+1,w,c
 30273  007958  1007               	iorwf	___llmod@divisor+2,w,c
 30274  00795A  1008               	iorwf	___llmod@divisor+3,w,c
 30275  00795C  B4D8               	btfsc	status,2,c
 30276  00795E  D024               	goto	l3433
 30277  007960  0E01               	movlw	1
 30278  007962  6E09               	movwf	___llmod@counter,c
 30279  007964  D006               	goto	l3428
 30280  007966  90D8               	bcf	status,0,c
 30281  007968  3605               	rlcf	___llmod@divisor,f,c
 30282  00796A  3606               	rlcf	___llmod@divisor+1,f,c
 30283  00796C  3607               	rlcf	___llmod@divisor+2,f,c
 30284  00796E  3608               	rlcf	___llmod@divisor+3,f,c
 30285  007970  2A09               	incf	___llmod@counter,f,c
 30286  007972                     l3428:
 30287  007972  AE08               	btfss	___llmod@divisor+3,7,c
 30288  007974  D7F8               	goto	l3429
 30289  007976                     u7540:
 30290  007976  5005               	movf	___llmod@divisor,w,c
 30291  007978  5C01               	subwf	___llmod@dividend,w,c
 30292  00797A  5006               	movf	___llmod@divisor+1,w,c
 30293  00797C  5802               	subwfb	___llmod@dividend+1,w,c
 30294  00797E  5007               	movf	___llmod@divisor+2,w,c
 30295  007980  5803               	subwfb	___llmod@dividend+2,w,c
 30296  007982  5008               	movf	___llmod@divisor+3,w,c
 30297  007984  5804               	subwfb	___llmod@dividend+3,w,c
 30298  007986  A0D8               	btfss	status,0,c
 30299  007988  D008               	goto	l3432
 30300  00798A  5005               	movf	___llmod@divisor,w,c
 30301  00798C  5E01               	subwf	___llmod@dividend,f,c
 30302  00798E  5006               	movf	___llmod@divisor+1,w,c
 30303  007990  5A02               	subwfb	___llmod@dividend+1,f,c
 30304  007992  5007               	movf	___llmod@divisor+2,w,c
 30305  007994  5A03               	subwfb	___llmod@dividend+2,f,c
 30306  007996  5008               	movf	___llmod@divisor+3,w,c
 30307  007998  5A04               	subwfb	___llmod@dividend+3,f,c
 30308  00799A                     l3432:
 30309  00799A  90D8               	bcf	status,0,c
 30310  00799C  3208               	rrcf	___llmod@divisor+3,f,c
 30311  00799E  3207               	rrcf	___llmod@divisor+2,f,c
 30312  0079A0  3206               	rrcf	___llmod@divisor+1,f,c
 30313  0079A2  3205               	rrcf	___llmod@divisor,f,c
 30314  0079A4  2E09               	decfsz	___llmod@counter,f,c
 30315  0079A6  D7E7               	goto	u7540
 30316  0079A8                     l3433:
 30317  0079A8  C001  F001         	movff	___llmod@dividend,?___llmod
 30318  0079AC  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 30319  0079B0  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 30320  0079B4  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 30321  0079B8  0012               	return		;funcret
 30322  0079BA                     __end_of___llmod:
 30323                           	opt stack 0
 30324                           tosu	equ	0xFFF
 30325                           tosh	equ	0xFFE
 30326                           tosl	equ	0xFFD
 30327                           pclath	equ	0xFFA
 30328                           tblptru	equ	0xFF8
 30329                           tblptrh	equ	0xFF7
 30330                           tblptrl	equ	0xFF6
 30331                           tablat	equ	0xFF5
 30332                           prodh	equ	0xFF4
 30333                           prodl	equ	0xFF3
 30334                           intcon	equ	0xFF2
 30335                           intcon2	equ	0xFF1
 30336                           intcon3	equ	0xFF0
 30337                           indf0	equ	0xFEF
 30338                           postinc0	equ	0xFEE
 30339                           fsr0h	equ	0xFEA
 30340                           fsr0l	equ	0xFE9
 30341                           wreg	equ	0xFE8
 30342                           indf1	equ	0xFE7
 30343                           postdec1	equ	0xFE5
 30344                           plusw1	equ	0xFE3
 30345                           fsr1h	equ	0xFE2
 30346                           fsr1l	equ	0xFE1
 30347                           indf2	equ	0xFDF
 30348                           postinc2	equ	0xFDE
 30349                           postdec2	equ	0xFDD
 30350                           plusw2	equ	0xFDB
 30351                           fsr2h	equ	0xFDA
 30352                           fsr2l	equ	0xFD9
 30353                           status	equ	0xFD8
 30354                           
 30355 ;; *************** function ___lldiv *****************
 30356 ;; Defined at:
 30357 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 30358 ;; Parameters:    Size  Location     Type
 30359 ;;  dividend        4    0[COMRAM] unsigned long 
 30360 ;;  divisor         4    4[COMRAM] unsigned long 
 30361 ;; Auto vars:     Size  Location     Type
 30362 ;;  quotient        4    8[COMRAM] unsigned long 
 30363 ;;  counter         1   12[COMRAM] unsigned char 
 30364 ;; Return value:  Size  Location     Type
 30365 ;;                  4    0[COMRAM] unsigned long 
 30366 ;; Registers used:
 30367 ;;		wreg, status,2, status,0
 30368 ;; Tracked objects:
 30369 ;;		On entry : 0/0
 30370 ;;		On exit  : 0/0
 30371 ;;		Unchanged: 0/0
 30372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30373 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30374 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30375 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30376 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30377 ;;Total ram usage:       13 bytes
 30378 ;; Hardware stack levels used:    1
 30379 ;; This function calls:
 30380 ;;		Nothing
 30381 ;; This function is called by:
 30382 ;;		__display_itoa_u32
 30383 ;; This function uses a non-reentrant model
 30384 ;;
 30385                           
 30386                           	psect	text146
 30387  0072F8                     __ptext146:
 30388                           	opt stack 0
 30389  0072F8                     ___lldiv:
 30390                           	opt stack 24
 30391                           
 30392                           ;incstack = 0
 30393  0072F8  0E00               	movlw	0
 30394  0072FA  6E09               	movwf	___lldiv@quotient,c
 30395  0072FC  0E00               	movlw	0
 30396  0072FE  6E0A               	movwf	___lldiv@quotient+1,c
 30397  007300  0E00               	movlw	0
 30398  007302  6E0B               	movwf	___lldiv@quotient+2,c
 30399  007304  0E00               	movlw	0
 30400  007306  6E0C               	movwf	___lldiv@quotient+3,c
 30401  007308  5005               	movf	___lldiv@divisor,w,c
 30402  00730A  1006               	iorwf	___lldiv@divisor+1,w,c
 30403  00730C  1007               	iorwf	___lldiv@divisor+2,w,c
 30404  00730E  1008               	iorwf	___lldiv@divisor+3,w,c
 30405  007310  B4D8               	btfsc	status,2,c
 30406  007312  D02A               	goto	l3052
 30407  007314  0E01               	movlw	1
 30408  007316  6E0D               	movwf	___lldiv@counter,c
 30409  007318  D006               	goto	l3047
 30410  00731A  90D8               	bcf	status,0,c
 30411  00731C  3605               	rlcf	___lldiv@divisor,f,c
 30412  00731E  3606               	rlcf	___lldiv@divisor+1,f,c
 30413  007320  3607               	rlcf	___lldiv@divisor+2,f,c
 30414  007322  3608               	rlcf	___lldiv@divisor+3,f,c
 30415  007324  2A0D               	incf	___lldiv@counter,f,c
 30416  007326                     l3047:
 30417  007326  AE08               	btfss	___lldiv@divisor+3,7,c
 30418  007328  D7F8               	goto	l3048
 30419  00732A                     u7510:
 30420  00732A  90D8               	bcf	status,0,c
 30421  00732C  3609               	rlcf	___lldiv@quotient,f,c
 30422  00732E  360A               	rlcf	___lldiv@quotient+1,f,c
 30423  007330  360B               	rlcf	___lldiv@quotient+2,f,c
 30424  007332  360C               	rlcf	___lldiv@quotient+3,f,c
 30425  007334  5005               	movf	___lldiv@divisor,w,c
 30426  007336  5C01               	subwf	___lldiv@dividend,w,c
 30427  007338  5006               	movf	___lldiv@divisor+1,w,c
 30428  00733A  5802               	subwfb	___lldiv@dividend+1,w,c
 30429  00733C  5007               	movf	___lldiv@divisor+2,w,c
 30430  00733E  5803               	subwfb	___lldiv@dividend+2,w,c
 30431  007340  5008               	movf	___lldiv@divisor+3,w,c
 30432  007342  5804               	subwfb	___lldiv@dividend+3,w,c
 30433  007344  A0D8               	btfss	status,0,c
 30434  007346  D009               	goto	l3051
 30435  007348  5005               	movf	___lldiv@divisor,w,c
 30436  00734A  5E01               	subwf	___lldiv@dividend,f,c
 30437  00734C  5006               	movf	___lldiv@divisor+1,w,c
 30438  00734E  5A02               	subwfb	___lldiv@dividend+1,f,c
 30439  007350  5007               	movf	___lldiv@divisor+2,w,c
 30440  007352  5A03               	subwfb	___lldiv@dividend+2,f,c
 30441  007354  5008               	movf	___lldiv@divisor+3,w,c
 30442  007356  5A04               	subwfb	___lldiv@dividend+3,f,c
 30443  007358  8009               	bsf	___lldiv@quotient,0,c
 30444  00735A                     l3051:
 30445  00735A  90D8               	bcf	status,0,c
 30446  00735C  3208               	rrcf	___lldiv@divisor+3,f,c
 30447  00735E  3207               	rrcf	___lldiv@divisor+2,f,c
 30448  007360  3206               	rrcf	___lldiv@divisor+1,f,c
 30449  007362  3205               	rrcf	___lldiv@divisor,f,c
 30450  007364  2E0D               	decfsz	___lldiv@counter,f,c
 30451  007366  D7E1               	goto	u7510
 30452  007368                     l3052:
 30453  007368  C009  F001         	movff	___lldiv@quotient,?___lldiv
 30454  00736C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 30455  007370  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 30456  007374  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 30457  007378  0012               	return		;funcret
 30458  00737A                     __end_of___lldiv:
 30459                           	opt stack 0
 30460                           tosu	equ	0xFFF
 30461                           tosh	equ	0xFFE
 30462                           tosl	equ	0xFFD
 30463                           pclath	equ	0xFFA
 30464                           tblptru	equ	0xFF8
 30465                           tblptrh	equ	0xFF7
 30466                           tblptrl	equ	0xFF6
 30467                           tablat	equ	0xFF5
 30468                           prodh	equ	0xFF4
 30469                           prodl	equ	0xFF3
 30470                           intcon	equ	0xFF2
 30471                           intcon2	equ	0xFF1
 30472                           intcon3	equ	0xFF0
 30473                           indf0	equ	0xFEF
 30474                           postinc0	equ	0xFEE
 30475                           fsr0h	equ	0xFEA
 30476                           fsr0l	equ	0xFE9
 30477                           wreg	equ	0xFE8
 30478                           indf1	equ	0xFE7
 30479                           postdec1	equ	0xFE5
 30480                           plusw1	equ	0xFE3
 30481                           fsr1h	equ	0xFE2
 30482                           fsr1l	equ	0xFE1
 30483                           indf2	equ	0xFDF
 30484                           postinc2	equ	0xFDE
 30485                           postdec2	equ	0xFDD
 30486                           plusw2	equ	0xFDB
 30487                           fsr2h	equ	0xFDA
 30488                           fsr2l	equ	0xFD9
 30489                           status	equ	0xFD8
 30490                           
 30491 ;; *************** function __display_done *****************
 30492 ;; Defined at:
 30493 ;;		line 529 in file "display.c"
 30494 ;; Parameters:    Size  Location     Type
 30495 ;;		None
 30496 ;; Auto vars:     Size  Location     Type
 30497 ;;  cntr            1   30[COMRAM] unsigned char 
 30498 ;; Return value:  Size  Location     Type
 30499 ;;                  1    wreg      void 
 30500 ;; Registers used:
 30501 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30502 ;; Tracked objects:
 30503 ;;		On entry : 0/0
 30504 ;;		On exit  : 0/0
 30505 ;;		Unchanged: 0/0
 30506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30507 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30508 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30509 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30510 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30511 ;;Total ram usage:        1 bytes
 30512 ;; Hardware stack levels used:    1
 30513 ;; Hardware stack levels required when called:    4
 30514 ;; This function calls:
 30515 ;;		__display_itoa_u16
 30516 ;;		_bootloader_get_flashPagesWritten
 30517 ;; This function is called by:
 30518 ;;		_display_prepare
 30519 ;; This function uses a non-reentrant model
 30520 ;;
 30521                           
 30522                           	psect	text147
 30523  0038F6                     __ptext147:
 30524                           	opt stack 0
 30525  0038F6                     __display_done:
 30526                           	opt stack 22
 30527                           
 30528                           ;display.c: 531: uint8_t cntr;;display.c: 532: cntr = 0;
 30529                           
 30530                           ;incstack = 0
 30531  0038F6  0E00               	movlw	0
 30532  0038F8  6E1F               	movwf	__display_done@cntr,c
 30533                           
 30534                           ;display.c: 533: while(done_line1[cntr])
 30535  0038FA  D017               	goto	l1686
 30536  0038FC                     
 30537                           ;display.c: 534: display_content[0][cntr] = done_line1[cntr++];
 30538  0038FC  501F               	movf	__display_done@cntr,w,c
 30539  0038FE  0D01               	mullw	1
 30540  003900  0E74               	movlw	low _done_line1
 30541  003902  24F3               	addwf	prodl,w,c
 30542  003904  6EF6               	movwf	tblptrl,c
 30543  003906  0E9D               	movlw	high _done_line1
 30544  003908  20F4               	addwfc	prodh,w,c
 30545  00390A  6EF7               	movwf	tblptrh,c
 30546  00390C                     	if	1	;There are 3 active tblptr bytes
 30547  00390C  6AF8               	clrf	tblptru,c
 30548  00390E  0E00               	movlw	low (__mediumconst shr (0+16))
 30549  003910  22F8               	addwfc	tblptru,f,c
 30550  003912                     	endif
 30551  003912  501F               	movf	__display_done@cntr,w,c
 30552  003914  0D01               	mullw	1
 30553  003916  0E00               	movlw	low _display_content
 30554  003918  24F3               	addwf	prodl,w,c
 30555  00391A  6ED9               	movwf	fsr2l,c
 30556  00391C  0E02               	movlw	high _display_content
 30557  00391E  20F4               	addwfc	prodh,w,c
 30558  003920  6EDA               	movwf	fsr2h,c
 30559  003922  0008               	tblrd		*
 30560  003924  CFF5 FFDF          	movff	tablat,indf2
 30561  003928  2A1F               	incf	__display_done@cntr,f,c
 30562  00392A                     l1686:
 30563  00392A  501F               	movf	__display_done@cntr,w,c
 30564  00392C  0D01               	mullw	1
 30565  00392E  0E74               	movlw	low _done_line1
 30566  003930  24F3               	addwf	prodl,w,c
 30567  003932  6EF6               	movwf	tblptrl,c
 30568  003934  0E9D               	movlw	high _done_line1
 30569  003936  20F4               	addwfc	prodh,w,c
 30570  003938  6EF7               	movwf	tblptrh,c
 30571  00393A                     	if	1	;There are 3 active tblptr bytes
 30572  00393A  6AF8               	clrf	tblptru,c
 30573  00393C  0E00               	movlw	low (__mediumconst shr (0+16))
 30574  00393E  22F8               	addwfc	tblptru,f,c
 30575  003940                     	endif
 30576  003940  0008               	tblrd		*
 30577  003942  50F5               	movf	tablat,w,c
 30578  003944  0900               	iorlw	0
 30579  003946  A4D8               	btfss	status,2,c
 30580  003948  D7D9               	goto	l1687
 30581                           
 30582                           ;display.c: 535: cntr = 0;
 30583  00394A  0E00               	movlw	0
 30584  00394C  6E1F               	movwf	__display_done@cntr,c
 30585                           
 30586                           ;display.c: 536: while(done_line2[cntr])
 30587  00394E  D017               	goto	l1689
 30588  003950                     
 30589                           ;display.c: 537: display_content[1][cntr] = done_line2[cntr++];
 30590  003950  501F               	movf	__display_done@cntr,w,c
 30591  003952  0D01               	mullw	1
 30592  003954  0E9F               	movlw	low _done_line2
 30593  003956  24F3               	addwf	prodl,w,c
 30594  003958  6EF6               	movwf	tblptrl,c
 30595  00395A  0E9E               	movlw	high _done_line2
 30596  00395C  20F4               	addwfc	prodh,w,c
 30597  00395E  6EF7               	movwf	tblptrh,c
 30598  003960                     	if	1	;There are 3 active tblptr bytes
 30599  003960  6AF8               	clrf	tblptru,c
 30600  003962  0E00               	movlw	low (__mediumconst shr (0+16))
 30601  003964  22F8               	addwfc	tblptru,f,c
 30602  003966                     	endif
 30603  003966  501F               	movf	__display_done@cntr,w,c
 30604  003968  0D01               	mullw	1
 30605  00396A  0E14               	movlw	low (_display_content+20)
 30606  00396C  24F3               	addwf	prodl,w,c
 30607  00396E  6ED9               	movwf	fsr2l,c
 30608  003970  0E02               	movlw	high (_display_content+20)
 30609  003972  20F4               	addwfc	prodh,w,c
 30610  003974  6EDA               	movwf	fsr2h,c
 30611  003976  0008               	tblrd		*
 30612  003978  CFF5 FFDF          	movff	tablat,indf2
 30613  00397C  2A1F               	incf	__display_done@cntr,f,c
 30614  00397E                     l1689:
 30615  00397E  501F               	movf	__display_done@cntr,w,c
 30616  003980  0D01               	mullw	1
 30617  003982  0E9F               	movlw	low _done_line2
 30618  003984  24F3               	addwf	prodl,w,c
 30619  003986  6EF6               	movwf	tblptrl,c
 30620  003988  0E9E               	movlw	high _done_line2
 30621  00398A  20F4               	addwfc	prodh,w,c
 30622  00398C  6EF7               	movwf	tblptrh,c
 30623  00398E                     	if	1	;There are 3 active tblptr bytes
 30624  00398E  6AF8               	clrf	tblptru,c
 30625  003990  0E00               	movlw	low (__mediumconst shr (0+16))
 30626  003992  22F8               	addwfc	tblptru,f,c
 30627  003994                     	endif
 30628  003994  0008               	tblrd		*
 30629  003996  50F5               	movf	tablat,w,c
 30630  003998  0900               	iorlw	0
 30631  00399A  A4D8               	btfss	status,2,c
 30632  00399C  D7D9               	goto	l1690
 30633                           
 30634                           ;display.c: 538: cntr = 0;
 30635  00399E  0E00               	movlw	0
 30636  0039A0  6E1F               	movwf	__display_done@cntr,c
 30637                           
 30638                           ;display.c: 539: while(done_line3[cntr])
 30639  0039A2  D017               	goto	l1692
 30640  0039A4                     
 30641                           ;display.c: 540: display_content[2][cntr] = done_line3[cntr++];
 30642  0039A4  501F               	movf	__display_done@cntr,w,c
 30643  0039A6  0D01               	mullw	1
 30644  0039A8  0E64               	movlw	low _done_line3
 30645  0039AA  24F3               	addwf	prodl,w,c
 30646  0039AC  6EF6               	movwf	tblptrl,c
 30647  0039AE  0E9D               	movlw	high _done_line3
 30648  0039B0  20F4               	addwfc	prodh,w,c
 30649  0039B2  6EF7               	movwf	tblptrh,c
 30650  0039B4                     	if	1	;There are 3 active tblptr bytes
 30651  0039B4  6AF8               	clrf	tblptru,c
 30652  0039B6  0E00               	movlw	low (__mediumconst shr (0+16))
 30653  0039B8  22F8               	addwfc	tblptru,f,c
 30654  0039BA                     	endif
 30655  0039BA  501F               	movf	__display_done@cntr,w,c
 30656  0039BC  0D01               	mullw	1
 30657  0039BE  0E28               	movlw	low (_display_content+40)
 30658  0039C0  24F3               	addwf	prodl,w,c
 30659  0039C2  6ED9               	movwf	fsr2l,c
 30660  0039C4  0E02               	movlw	high (_display_content+40)
 30661  0039C6  20F4               	addwfc	prodh,w,c
 30662  0039C8  6EDA               	movwf	fsr2h,c
 30663  0039CA  0008               	tblrd		*
 30664  0039CC  CFF5 FFDF          	movff	tablat,indf2
 30665  0039D0  2A1F               	incf	__display_done@cntr,f,c
 30666  0039D2                     l1692:
 30667  0039D2  501F               	movf	__display_done@cntr,w,c
 30668  0039D4  0D01               	mullw	1
 30669  0039D6  0E64               	movlw	low _done_line3
 30670  0039D8  24F3               	addwf	prodl,w,c
 30671  0039DA  6EF6               	movwf	tblptrl,c
 30672  0039DC  0E9D               	movlw	high _done_line3
 30673  0039DE  20F4               	addwfc	prodh,w,c
 30674  0039E0  6EF7               	movwf	tblptrh,c
 30675  0039E2                     	if	1	;There are 3 active tblptr bytes
 30676  0039E2  6AF8               	clrf	tblptru,c
 30677  0039E4  0E00               	movlw	low (__mediumconst shr (0+16))
 30678  0039E6  22F8               	addwfc	tblptru,f,c
 30679  0039E8                     	endif
 30680  0039E8  0008               	tblrd		*
 30681  0039EA  50F5               	movf	tablat,w,c
 30682  0039EC  0900               	iorlw	0
 30683  0039EE  A4D8               	btfss	status,2,c
 30684  0039F0  D7D9               	goto	l1693
 30685                           
 30686                           ;display.c: 541: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 30687  0039F2  ECF2  F047         	call	_bootloader_get_flashPagesWritten	;wreg free
 30688  0039F6  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 30689  0039FA  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 30690  0039FE  6A1B               	clrf	__display_itoa_u16@value+2,c
 30691  003A00  6A1C               	clrf	__display_itoa_u16@value+3,c
 30692  003A02  501F               	movf	__display_done@cntr,w,c
 30693  003A04  0D01               	mullw	1
 30694  003A06  0E28               	movlw	low (_display_content+40)
 30695  003A08  24F3               	addwf	prodl,w,c
 30696  003A0A  6E1D               	movwf	__display_itoa_u16@text,c
 30697  003A0C  0E02               	movlw	high (_display_content+40)
 30698  003A0E  20F4               	addwfc	prodh,w,c
 30699  003A10  6E1E               	movwf	__display_itoa_u16@text+1,c
 30700  003A12  EC0C  F030         	call	__display_itoa_u16	;wreg free
 30701                           
 30702                           ;display.c: 542: cntr = 0;
 30703  003A16  0E00               	movlw	0
 30704  003A18  6E1F               	movwf	__display_done@cntr,c
 30705                           
 30706                           ;display.c: 543: while(done_line4[cntr])
 30707  003A1A  D017               	goto	l1695
 30708  003A1C                     
 30709                           ;display.c: 544: display_content[3][cntr] = done_line4[cntr++];
 30710  003A1C  501F               	movf	__display_done@cntr,w,c
 30711  003A1E  0D01               	mullw	1
 30712  003A20  0E54               	movlw	low _done_line4
 30713  003A22  24F3               	addwf	prodl,w,c
 30714  003A24  6EF6               	movwf	tblptrl,c
 30715  003A26  0E9D               	movlw	high _done_line4
 30716  003A28  20F4               	addwfc	prodh,w,c
 30717  003A2A  6EF7               	movwf	tblptrh,c
 30718  003A2C                     	if	1	;There are 3 active tblptr bytes
 30719  003A2C  6AF8               	clrf	tblptru,c
 30720  003A2E  0E00               	movlw	low (__mediumconst shr (0+16))
 30721  003A30  22F8               	addwfc	tblptru,f,c
 30722  003A32                     	endif
 30723  003A32  501F               	movf	__display_done@cntr,w,c
 30724  003A34  0D01               	mullw	1
 30725  003A36  0E3C               	movlw	low (_display_content+60)
 30726  003A38  24F3               	addwf	prodl,w,c
 30727  003A3A  6ED9               	movwf	fsr2l,c
 30728  003A3C  0E02               	movlw	high (_display_content+60)
 30729  003A3E  20F4               	addwfc	prodh,w,c
 30730  003A40  6EDA               	movwf	fsr2h,c
 30731  003A42  0008               	tblrd		*
 30732  003A44  CFF5 FFDF          	movff	tablat,indf2
 30733  003A48  2A1F               	incf	__display_done@cntr,f,c
 30734  003A4A                     l1695:
 30735  003A4A  501F               	movf	__display_done@cntr,w,c
 30736  003A4C  0D01               	mullw	1
 30737  003A4E  0E54               	movlw	low _done_line4
 30738  003A50  24F3               	addwf	prodl,w,c
 30739  003A52  6EF6               	movwf	tblptrl,c
 30740  003A54  0E9D               	movlw	high _done_line4
 30741  003A56  20F4               	addwfc	prodh,w,c
 30742  003A58  6EF7               	movwf	tblptrh,c
 30743  003A5A                     	if	1	;There are 3 active tblptr bytes
 30744  003A5A  6AF8               	clrf	tblptru,c
 30745  003A5C  0E00               	movlw	low (__mediumconst shr (0+16))
 30746  003A5E  22F8               	addwfc	tblptru,f,c
 30747  003A60                     	endif
 30748  003A60  0008               	tblrd		*
 30749  003A62  50F5               	movf	tablat,w,c
 30750  003A64  0900               	iorlw	0
 30751  003A66  B4D8               	btfsc	status,2,c
 30752  003A68  0012               	return	
 30753  003A6A  D7D8               	goto	l1696
 30754  003A6C                     __end_of__display_done:
 30755                           	opt stack 0
 30756                           tosu	equ	0xFFF
 30757                           tosh	equ	0xFFE
 30758                           tosl	equ	0xFFD
 30759                           pclath	equ	0xFFA
 30760                           tblptru	equ	0xFF8
 30761                           tblptrh	equ	0xFF7
 30762                           tblptrl	equ	0xFF6
 30763                           tablat	equ	0xFF5
 30764                           prodh	equ	0xFF4
 30765                           prodl	equ	0xFF3
 30766                           intcon	equ	0xFF2
 30767                           intcon2	equ	0xFF1
 30768                           intcon3	equ	0xFF0
 30769                           indf0	equ	0xFEF
 30770                           postinc0	equ	0xFEE
 30771                           fsr0h	equ	0xFEA
 30772                           fsr0l	equ	0xFE9
 30773                           wreg	equ	0xFE8
 30774                           indf1	equ	0xFE7
 30775                           postdec1	equ	0xFE5
 30776                           plusw1	equ	0xFE3
 30777                           fsr1h	equ	0xFE2
 30778                           fsr1l	equ	0xFE1
 30779                           indf2	equ	0xFDF
 30780                           postinc2	equ	0xFDE
 30781                           postdec2	equ	0xFDD
 30782                           plusw2	equ	0xFDB
 30783                           fsr2h	equ	0xFDA
 30784                           fsr2l	equ	0xFD9
 30785                           status	equ	0xFD8
 30786                           
 30787 ;; *************** function _bootloader_get_flashPagesWritten *****************
 30788 ;; Defined at:
 30789 ;;		line 511 in file "bootloader.c"
 30790 ;; Parameters:    Size  Location     Type
 30791 ;;		None
 30792 ;; Auto vars:     Size  Location     Type
 30793 ;;		None
 30794 ;; Return value:  Size  Location     Type
 30795 ;;                  2    0[COMRAM] unsigned int 
 30796 ;; Registers used:
 30797 ;;		None
 30798 ;; Tracked objects:
 30799 ;;		On entry : 0/0
 30800 ;;		On exit  : 0/0
 30801 ;;		Unchanged: 0/0
 30802 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30803 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30804 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30805 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30806 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30807 ;;Total ram usage:        2 bytes
 30808 ;; Hardware stack levels used:    1
 30809 ;; This function calls:
 30810 ;;		Nothing
 30811 ;; This function is called by:
 30812 ;;		__display_programming
 30813 ;;		__display_done
 30814 ;;		__fill_buffer_get_bootloader_details
 30815 ;; This function uses a non-reentrant model
 30816 ;;
 30817                           
 30818                           	psect	text148
 30819  008FE4                     __ptext148:
 30820                           	opt stack 0
 30821  008FE4                     _bootloader_get_flashPagesWritten:
 30822                           	opt stack 25
 30823                           
 30824                           ;bootloader.c: 513: return flash_pages_written;
 30825                           
 30826                           ;incstack = 0
 30827  008FE4  C174  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 30828  008FE8  C175  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 30829  008FEC  0012               	return		;funcret
 30830  008FEE                     __end_of_bootloader_get_flashPagesWritten:
 30831                           	opt stack 0
 30832                           tosu	equ	0xFFF
 30833                           tosh	equ	0xFFE
 30834                           tosl	equ	0xFFD
 30835                           pclath	equ	0xFFA
 30836                           tblptru	equ	0xFF8
 30837                           tblptrh	equ	0xFF7
 30838                           tblptrl	equ	0xFF6
 30839                           tablat	equ	0xFF5
 30840                           prodh	equ	0xFF4
 30841                           prodl	equ	0xFF3
 30842                           intcon	equ	0xFF2
 30843                           intcon2	equ	0xFF1
 30844                           intcon3	equ	0xFF0
 30845                           indf0	equ	0xFEF
 30846                           postinc0	equ	0xFEE
 30847                           fsr0h	equ	0xFEA
 30848                           fsr0l	equ	0xFE9
 30849                           wreg	equ	0xFE8
 30850                           indf1	equ	0xFE7
 30851                           postdec1	equ	0xFE5
 30852                           plusw1	equ	0xFE3
 30853                           fsr1h	equ	0xFE2
 30854                           fsr1l	equ	0xFE1
 30855                           indf2	equ	0xFDF
 30856                           postinc2	equ	0xFDE
 30857                           postdec2	equ	0xFDD
 30858                           plusw2	equ	0xFDB
 30859                           fsr2h	equ	0xFDA
 30860                           fsr2l	equ	0xFD9
 30861                           status	equ	0xFD8
 30862                           
 30863 ;; *************** function __display_clear *****************
 30864 ;; Defined at:
 30865 ;;		line 75 in file "display.c"
 30866 ;; Parameters:    Size  Location     Type
 30867 ;;		None
 30868 ;; Auto vars:     Size  Location     Type
 30869 ;;  col             1    3[COMRAM] unsigned char 
 30870 ;;  row             1    2[COMRAM] unsigned char 
 30871 ;; Return value:  Size  Location     Type
 30872 ;;                  1    wreg      void 
 30873 ;; Registers used:
 30874 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30875 ;; Tracked objects:
 30876 ;;		On entry : 0/0
 30877 ;;		On exit  : 0/0
 30878 ;;		Unchanged: 0/0
 30879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30880 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30881 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30882 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30883 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30884 ;;Total ram usage:        4 bytes
 30885 ;; Hardware stack levels used:    1
 30886 ;; This function calls:
 30887 ;;		Nothing
 30888 ;; This function is called by:
 30889 ;;		_display_prepare
 30890 ;; This function uses a non-reentrant model
 30891 ;;
 30892                           
 30893                           	psect	text149
 30894  008312                     __ptext149:
 30895                           	opt stack 0
 30896  008312                     __display_clear:
 30897                           	opt stack 26
 30898                           
 30899                           ;display.c: 77: uint8_t row;;display.c: 78: uint8_t col;;display.c: 79: for(row=0;row<4;
      +                          ++row)
 30900                           
 30901                           ;incstack = 0
 30902  008312  0E00               	movlw	0
 30903  008314  6E03               	movwf	__display_clear@row,c
 30904  008316                     l11795:
 30905  008316  0E03               	movlw	3
 30906  008318  6403               	cpfsgt	__display_clear@row,c
 30907  00831A  D001               	goto	l1464
 30908  00831C  0012               	return	
 30909  00831E                     l1464:
 30910                           
 30911                           ;display.c: 80: {;display.c: 81: for(col=0;col<20;++col)
 30912  00831E  0E00               	movlw	0
 30913  008320  6E04               	movwf	__display_clear@col,c
 30914  008322                     l11801:
 30915  008322  0E13               	movlw	19
 30916  008324  6404               	cpfsgt	__display_clear@col,c
 30917  008326  D001               	goto	l1466
 30918  008328  D016               	goto	u8740
 30919  00832A                     l1466:
 30920                           
 30921                           ;display.c: 82: {;display.c: 83: display_content[row][col] = ' ';
 30922  00832A  5003               	movf	__display_clear@row,w,c
 30923  00832C  0D14               	mullw	20
 30924  00832E  0E00               	movlw	low _display_content
 30925  008330  6E01               	movwf	??__display_clear& (0+255),c
 30926  008332  0E02               	movlw	high _display_content
 30927  008334  6E02               	movwf	(??__display_clear+1)& (0+255),c
 30928  008336  50F3               	movf	prodl,w,c
 30929  008338  2601               	addwf	??__display_clear,f,c
 30930  00833A  50F4               	movf	prodh,w,c
 30931  00833C  2202               	addwfc	??__display_clear+1,f,c
 30932  00833E  5004               	movf	__display_clear@col,w,c
 30933  008340  0D01               	mullw	1
 30934  008342  50F3               	movf	prodl,w,c
 30935  008344  2401               	addwf	??__display_clear,w,c
 30936  008346  6ED9               	movwf	fsr2l,c
 30937  008348  50F4               	movf	prodh,w,c
 30938  00834A  2002               	addwfc	??__display_clear+1,w,c
 30939  00834C  6EDA               	movwf	fsr2h,c
 30940  00834E  0E20               	movlw	32
 30941  008350  6EDF               	movwf	indf2,c
 30942  008352  2A04               	incf	__display_clear@col,f,c
 30943  008354  D7E6               	goto	l11801
 30944  008356                     u8740:
 30945  008356  2A03               	incf	__display_clear@row,f,c
 30946  008358  D7DE               	goto	l11795
 30947  00835A                     __end_of__display_clear:
 30948                           	opt stack 0
 30949                           tosu	equ	0xFFF
 30950                           tosh	equ	0xFFE
 30951                           tosl	equ	0xFFD
 30952                           pclath	equ	0xFFA
 30953                           tblptru	equ	0xFF8
 30954                           tblptrh	equ	0xFF7
 30955                           tblptrl	equ	0xFF6
 30956                           tablat	equ	0xFF5
 30957                           prodh	equ	0xFF4
 30958                           prodl	equ	0xFF3
 30959                           intcon	equ	0xFF2
 30960                           intcon2	equ	0xFF1
 30961                           intcon3	equ	0xFF0
 30962                           indf0	equ	0xFEF
 30963                           postinc0	equ	0xFEE
 30964                           fsr0h	equ	0xFEA
 30965                           fsr0l	equ	0xFE9
 30966                           wreg	equ	0xFE8
 30967                           indf1	equ	0xFE7
 30968                           postdec1	equ	0xFE5
 30969                           plusw1	equ	0xFE3
 30970                           fsr1h	equ	0xFE2
 30971                           fsr1l	equ	0xFE1
 30972                           indf2	equ	0xFDF
 30973                           postinc2	equ	0xFDE
 30974                           postdec2	equ	0xFDD
 30975                           plusw2	equ	0xFDB
 30976                           fsr2h	equ	0xFDA
 30977                           fsr2l	equ	0xFD9
 30978                           status	equ	0xFD8
 30979                           
 30980 ;; *************** function __display_checked *****************
 30981 ;; Defined at:
 30982 ;;		line 433 in file "display.c"
 30983 ;; Parameters:    Size  Location     Type
 30984 ;;		None
 30985 ;; Auto vars:     Size  Location     Type
 30986 ;;  cntr            1   33[COMRAM] unsigned char 
 30987 ;;  start           1   32[COMRAM] unsigned char 
 30988 ;; Return value:  Size  Location     Type
 30989 ;;                  1    wreg      void 
 30990 ;; Registers used:
 30991 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 30992 ;; Tracked objects:
 30993 ;;		On entry : 0/0
 30994 ;;		On exit  : 0/0
 30995 ;;		Unchanged: 0/0
 30996 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30997 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30998 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30999 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31000 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31001 ;;Total ram usage:        4 bytes
 31002 ;; Hardware stack levels used:    1
 31003 ;; Hardware stack levels required when called:    4
 31004 ;; This function calls:
 31005 ;;		__display_itoa_u16
 31006 ;;		_bootloader_get_total_entries
 31007 ;; This function is called by:
 31008 ;;		_display_prepare
 31009 ;; This function uses a non-reentrant model
 31010 ;;
 31011                           
 31012                           	psect	text150
 31013  00377A                     __ptext150:
 31014                           	opt stack 0
 31015  00377A                     __display_checked:
 31016                           	opt stack 22
 31017                           
 31018                           ;display.c: 435: uint8_t cntr;;display.c: 436: uint8_t start;;display.c: 437: cntr = 0;
 31019                           
 31020                           ;incstack = 0
 31021  00377A  0E00               	movlw	0
 31022  00377C  6E22               	movwf	__display_checked@cntr,c
 31023                           
 31024                           ;display.c: 438: while(checked_line1[cntr])
 31025  00377E  D017               	goto	l1622
 31026  003780                     
 31027                           ;display.c: 439: display_content[0][cntr] = checked_line1[cntr++];
 31028  003780  5022               	movf	__display_checked@cntr,w,c
 31029  003782  0D01               	mullw	1
 31030  003784  0EB4               	movlw	low _checked_line1
 31031  003786  24F3               	addwf	prodl,w,c
 31032  003788  6EF6               	movwf	tblptrl,c
 31033  00378A  0E9D               	movlw	high _checked_line1
 31034  00378C  20F4               	addwfc	prodh,w,c
 31035  00378E  6EF7               	movwf	tblptrh,c
 31036  003790                     	if	1	;There are 3 active tblptr bytes
 31037  003790  6AF8               	clrf	tblptru,c
 31038  003792  0E00               	movlw	low (__mediumconst shr (0+16))
 31039  003794  22F8               	addwfc	tblptru,f,c
 31040  003796                     	endif
 31041  003796  5022               	movf	__display_checked@cntr,w,c
 31042  003798  0D01               	mullw	1
 31043  00379A  0E00               	movlw	low _display_content
 31044  00379C  24F3               	addwf	prodl,w,c
 31045  00379E  6ED9               	movwf	fsr2l,c
 31046  0037A0  0E02               	movlw	high _display_content
 31047  0037A2  20F4               	addwfc	prodh,w,c
 31048  0037A4  6EDA               	movwf	fsr2h,c
 31049  0037A6  0008               	tblrd		*
 31050  0037A8  CFF5 FFDF          	movff	tablat,indf2
 31051  0037AC  2A22               	incf	__display_checked@cntr,f,c
 31052  0037AE                     l1622:
 31053  0037AE  5022               	movf	__display_checked@cntr,w,c
 31054  0037B0  0D01               	mullw	1
 31055  0037B2  0EB4               	movlw	low _checked_line1
 31056  0037B4  24F3               	addwf	prodl,w,c
 31057  0037B6  6EF6               	movwf	tblptrl,c
 31058  0037B8  0E9D               	movlw	high _checked_line1
 31059  0037BA  20F4               	addwfc	prodh,w,c
 31060  0037BC  6EF7               	movwf	tblptrh,c
 31061  0037BE                     	if	1	;There are 3 active tblptr bytes
 31062  0037BE  6AF8               	clrf	tblptru,c
 31063  0037C0  0E00               	movlw	low (__mediumconst shr (0+16))
 31064  0037C2  22F8               	addwfc	tblptru,f,c
 31065  0037C4                     	endif
 31066  0037C4  0008               	tblrd		*
 31067  0037C6  50F5               	movf	tablat,w,c
 31068  0037C8  0900               	iorlw	0
 31069  0037CA  A4D8               	btfss	status,2,c
 31070  0037CC  D7D9               	goto	l1623
 31071                           
 31072                           ;display.c: 440: cntr = 0;
 31073  0037CE  0E00               	movlw	0
 31074  0037D0  6E22               	movwf	__display_checked@cntr,c
 31075                           
 31076                           ;display.c: 441: while(checked_line2[cntr])
 31077  0037D2  D017               	goto	l1625
 31078  0037D4                     
 31079                           ;display.c: 442: display_content[1][cntr] = checked_line2[cntr++];
 31080  0037D4  5022               	movf	__display_checked@cntr,w,c
 31081  0037D6  0D01               	mullw	1
 31082  0037D8  0E99               	movlw	low _checked_line2
 31083  0037DA  24F3               	addwf	prodl,w,c
 31084  0037DC  6EF6               	movwf	tblptrl,c
 31085  0037DE  0E9C               	movlw	high _checked_line2
 31086  0037E0  20F4               	addwfc	prodh,w,c
 31087  0037E2  6EF7               	movwf	tblptrh,c
 31088  0037E4                     	if	1	;There are 3 active tblptr bytes
 31089  0037E4  6AF8               	clrf	tblptru,c
 31090  0037E6  0E00               	movlw	low (__mediumconst shr (0+16))
 31091  0037E8  22F8               	addwfc	tblptru,f,c
 31092  0037EA                     	endif
 31093  0037EA  5022               	movf	__display_checked@cntr,w,c
 31094  0037EC  0D01               	mullw	1
 31095  0037EE  0E14               	movlw	low (_display_content+20)
 31096  0037F0  24F3               	addwf	prodl,w,c
 31097  0037F2  6ED9               	movwf	fsr2l,c
 31098  0037F4  0E02               	movlw	high (_display_content+20)
 31099  0037F6  20F4               	addwfc	prodh,w,c
 31100  0037F8  6EDA               	movwf	fsr2h,c
 31101  0037FA  0008               	tblrd		*
 31102  0037FC  CFF5 FFDF          	movff	tablat,indf2
 31103  003800  2A22               	incf	__display_checked@cntr,f,c
 31104  003802                     l1625:
 31105  003802  5022               	movf	__display_checked@cntr,w,c
 31106  003804  0D01               	mullw	1
 31107  003806  0E99               	movlw	low _checked_line2
 31108  003808  24F3               	addwf	prodl,w,c
 31109  00380A  6EF6               	movwf	tblptrl,c
 31110  00380C  0E9C               	movlw	high _checked_line2
 31111  00380E  20F4               	addwfc	prodh,w,c
 31112  003810  6EF7               	movwf	tblptrh,c
 31113  003812                     	if	1	;There are 3 active tblptr bytes
 31114  003812  6AF8               	clrf	tblptru,c
 31115  003814  0E00               	movlw	low (__mediumconst shr (0+16))
 31116  003816  22F8               	addwfc	tblptru,f,c
 31117  003818                     	endif
 31118  003818  0008               	tblrd		*
 31119  00381A  50F5               	movf	tablat,w,c
 31120  00381C  0900               	iorlw	0
 31121  00381E  A4D8               	btfss	status,2,c
 31122  003820  D7D9               	goto	l1626
 31123                           
 31124                           ;display.c: 444: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 31125  003822  ECF7  F047         	call	_bootloader_get_total_entries	;wreg free
 31126  003826  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 31127  00382A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 31128  00382E  6A1B               	clrf	__display_itoa_u16@value+2,c
 31129  003830  6A1C               	clrf	__display_itoa_u16@value+3,c
 31130  003832  0E28               	movlw	low (_display_content+40)
 31131  003834  6E1D               	movwf	__display_itoa_u16@text,c
 31132  003836  0E02               	movlw	high (_display_content+40)
 31133  003838  6E1E               	movwf	__display_itoa_u16@text+1,c
 31134  00383A  EC0C  F030         	call	__display_itoa_u16	;wreg free
 31135  00383E  6E21               	movwf	__display_checked@start,c
 31136                           
 31137                           ;display.c: 445: start++;
 31138  003840  2A21               	incf	__display_checked@start,f,c
 31139                           
 31140                           ;display.c: 446: cntr = 0;
 31141  003842  0E00               	movlw	0
 31142  003844  6E22               	movwf	__display_checked@cntr,c
 31143                           
 31144                           ;display.c: 447: while(checked_line3[cntr])
 31145  003846  D01C               	goto	l1628
 31146  003848                     
 31147                           ;display.c: 448: display_content[2][start+cntr] = checked_line3[cntr++];
 31148  003848  5022               	movf	__display_checked@cntr,w,c
 31149  00384A  0D01               	mullw	1
 31150  00384C  0E73               	movlw	low _checked_line3
 31151  00384E  24F3               	addwf	prodl,w,c
 31152  003850  6EF6               	movwf	tblptrl,c
 31153  003852  0E9E               	movlw	high _checked_line3
 31154  003854  20F4               	addwfc	prodh,w,c
 31155  003856  6EF7               	movwf	tblptrh,c
 31156  003858                     	if	1	;There are 3 active tblptr bytes
 31157  003858  6AF8               	clrf	tblptru,c
 31158  00385A  0E00               	movlw	low (__mediumconst shr (0+16))
 31159  00385C  22F8               	addwfc	tblptru,f,c
 31160  00385E                     	endif
 31161  00385E  5022               	movf	__display_checked@cntr,w,c
 31162  003860  C021  F01F         	movff	__display_checked@start,??__display_checked
 31163  003864  6A20               	clrf	(??__display_checked+1)& (0+255),c
 31164  003866  261F               	addwf	??__display_checked,f,c
 31165  003868  0E00               	movlw	0
 31166  00386A  2220               	addwfc	??__display_checked+1,f,c
 31167  00386C  0E28               	movlw	low (_display_content+40)
 31168  00386E  241F               	addwf	??__display_checked,w,c
 31169  003870  6ED9               	movwf	fsr2l,c
 31170  003872  0E02               	movlw	high (_display_content+40)
 31171  003874  2020               	addwfc	??__display_checked+1,w,c
 31172  003876  6EDA               	movwf	fsr2h,c
 31173  003878  0008               	tblrd		*
 31174  00387A  CFF5 FFDF          	movff	tablat,indf2
 31175  00387E  2A22               	incf	__display_checked@cntr,f,c
 31176  003880                     l1628:
 31177  003880  5022               	movf	__display_checked@cntr,w,c
 31178  003882  0D01               	mullw	1
 31179  003884  0E73               	movlw	low _checked_line3
 31180  003886  24F3               	addwf	prodl,w,c
 31181  003888  6EF6               	movwf	tblptrl,c
 31182  00388A  0E9E               	movlw	high _checked_line3
 31183  00388C  20F4               	addwfc	prodh,w,c
 31184  00388E  6EF7               	movwf	tblptrh,c
 31185  003890                     	if	1	;There are 3 active tblptr bytes
 31186  003890  6AF8               	clrf	tblptru,c
 31187  003892  0E00               	movlw	low (__mediumconst shr (0+16))
 31188  003894  22F8               	addwfc	tblptru,f,c
 31189  003896                     	endif
 31190  003896  0008               	tblrd		*
 31191  003898  50F5               	movf	tablat,w,c
 31192  00389A  0900               	iorlw	0
 31193  00389C  A4D8               	btfss	status,2,c
 31194  00389E  D7D4               	goto	l1629
 31195                           
 31196                           ;display.c: 450: cntr = 0;
 31197  0038A0  0E00               	movlw	0
 31198  0038A2  6E22               	movwf	__display_checked@cntr,c
 31199                           
 31200                           ;display.c: 451: while(checked_line4[cntr])
 31201  0038A4  D017               	goto	l1631
 31202  0038A6                     
 31203                           ;display.c: 452: display_content[3][cntr] = checked_line4[cntr++];
 31204  0038A6  5022               	movf	__display_checked@cntr,w,c
 31205  0038A8  0D01               	mullw	1
 31206  0038AA  0E32               	movlw	low _checked_line4
 31207  0038AC  24F3               	addwf	prodl,w,c
 31208  0038AE  6EF6               	movwf	tblptrl,c
 31209  0038B0  0E9D               	movlw	high _checked_line4
 31210  0038B2  20F4               	addwfc	prodh,w,c
 31211  0038B4  6EF7               	movwf	tblptrh,c
 31212  0038B6                     	if	1	;There are 3 active tblptr bytes
 31213  0038B6  6AF8               	clrf	tblptru,c
 31214  0038B8  0E00               	movlw	low (__mediumconst shr (0+16))
 31215  0038BA  22F8               	addwfc	tblptru,f,c
 31216  0038BC                     	endif
 31217  0038BC  5022               	movf	__display_checked@cntr,w,c
 31218  0038BE  0D01               	mullw	1
 31219  0038C0  0E3C               	movlw	low (_display_content+60)
 31220  0038C2  24F3               	addwf	prodl,w,c
 31221  0038C4  6ED9               	movwf	fsr2l,c
 31222  0038C6  0E02               	movlw	high (_display_content+60)
 31223  0038C8  20F4               	addwfc	prodh,w,c
 31224  0038CA  6EDA               	movwf	fsr2h,c
 31225  0038CC  0008               	tblrd		*
 31226  0038CE  CFF5 FFDF          	movff	tablat,indf2
 31227  0038D2  2A22               	incf	__display_checked@cntr,f,c
 31228  0038D4                     l1631:
 31229  0038D4  5022               	movf	__display_checked@cntr,w,c
 31230  0038D6  0D01               	mullw	1
 31231  0038D8  0E32               	movlw	low _checked_line4
 31232  0038DA  24F3               	addwf	prodl,w,c
 31233  0038DC  6EF6               	movwf	tblptrl,c
 31234  0038DE  0E9D               	movlw	high _checked_line4
 31235  0038E0  20F4               	addwfc	prodh,w,c
 31236  0038E2  6EF7               	movwf	tblptrh,c
 31237  0038E4                     	if	1	;There are 3 active tblptr bytes
 31238  0038E4  6AF8               	clrf	tblptru,c
 31239  0038E6  0E00               	movlw	low (__mediumconst shr (0+16))
 31240  0038E8  22F8               	addwfc	tblptru,f,c
 31241  0038EA                     	endif
 31242  0038EA  0008               	tblrd		*
 31243  0038EC  50F5               	movf	tablat,w,c
 31244  0038EE  0900               	iorlw	0
 31245  0038F0  B4D8               	btfsc	status,2,c
 31246  0038F2  0012               	return	
 31247  0038F4  D7D8               	goto	l1632
 31248  0038F6                     __end_of__display_checked:
 31249                           	opt stack 0
 31250                           tosu	equ	0xFFF
 31251                           tosh	equ	0xFFE
 31252                           tosl	equ	0xFFD
 31253                           pclath	equ	0xFFA
 31254                           tblptru	equ	0xFF8
 31255                           tblptrh	equ	0xFF7
 31256                           tblptrl	equ	0xFF6
 31257                           tablat	equ	0xFF5
 31258                           prodh	equ	0xFF4
 31259                           prodl	equ	0xFF3
 31260                           intcon	equ	0xFF2
 31261                           intcon2	equ	0xFF1
 31262                           intcon3	equ	0xFF0
 31263                           indf0	equ	0xFEF
 31264                           postinc0	equ	0xFEE
 31265                           fsr0h	equ	0xFEA
 31266                           fsr0l	equ	0xFE9
 31267                           wreg	equ	0xFE8
 31268                           indf1	equ	0xFE7
 31269                           postdec1	equ	0xFE5
 31270                           plusw1	equ	0xFE3
 31271                           fsr1h	equ	0xFE2
 31272                           fsr1l	equ	0xFE1
 31273                           indf2	equ	0xFDF
 31274                           postinc2	equ	0xFDE
 31275                           postdec2	equ	0xFDD
 31276                           plusw2	equ	0xFDB
 31277                           fsr2h	equ	0xFDA
 31278                           fsr2l	equ	0xFD9
 31279                           status	equ	0xFD8
 31280                           
 31281 ;; *************** function _bootloader_get_total_entries *****************
 31282 ;; Defined at:
 31283 ;;		line 470 in file "bootloader.c"
 31284 ;; Parameters:    Size  Location     Type
 31285 ;;		None
 31286 ;; Auto vars:     Size  Location     Type
 31287 ;;		None
 31288 ;; Return value:  Size  Location     Type
 31289 ;;                  2    0[COMRAM] unsigned int 
 31290 ;; Registers used:
 31291 ;;		None
 31292 ;; Tracked objects:
 31293 ;;		On entry : 0/0
 31294 ;;		On exit  : 0/0
 31295 ;;		Unchanged: 0/0
 31296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31297 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31299 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31300 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31301 ;;Total ram usage:        2 bytes
 31302 ;; Hardware stack levels used:    1
 31303 ;; This function calls:
 31304 ;;		Nothing
 31305 ;; This function is called by:
 31306 ;;		__display_checked
 31307 ;;		__display_programming
 31308 ;;		__fill_buffer_get_bootloader_details
 31309 ;; This function uses a non-reentrant model
 31310 ;;
 31311                           
 31312                           	psect	text151
 31313  008FEE                     __ptext151:
 31314                           	opt stack 0
 31315  008FEE                     _bootloader_get_total_entries:
 31316                           	opt stack 25
 31317                           
 31318                           ;bootloader.c: 472: return total_hex_file_entries;
 31319                           
 31320                           ;incstack = 0
 31321  008FEE  C176  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 31322  008FF2  C177  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 31323  008FF6  0012               	return		;funcret
 31324  008FF8                     __end_of_bootloader_get_total_entries:
 31325                           	opt stack 0
 31326                           tosu	equ	0xFFF
 31327                           tosh	equ	0xFFE
 31328                           tosl	equ	0xFFD
 31329                           pclath	equ	0xFFA
 31330                           tblptru	equ	0xFF8
 31331                           tblptrh	equ	0xFF7
 31332                           tblptrl	equ	0xFF6
 31333                           tablat	equ	0xFF5
 31334                           prodh	equ	0xFF4
 31335                           prodl	equ	0xFF3
 31336                           intcon	equ	0xFF2
 31337                           intcon2	equ	0xFF1
 31338                           intcon3	equ	0xFF0
 31339                           indf0	equ	0xFEF
 31340                           postinc0	equ	0xFEE
 31341                           fsr0h	equ	0xFEA
 31342                           fsr0l	equ	0xFE9
 31343                           wreg	equ	0xFE8
 31344                           indf1	equ	0xFE7
 31345                           postdec1	equ	0xFE5
 31346                           plusw1	equ	0xFE3
 31347                           fsr1h	equ	0xFE2
 31348                           fsr1l	equ	0xFE1
 31349                           indf2	equ	0xFDF
 31350                           postinc2	equ	0xFDE
 31351                           postdec2	equ	0xFDD
 31352                           plusw2	equ	0xFDB
 31353                           fsr2h	equ	0xFDA
 31354                           fsr2l	equ	0xFD9
 31355                           status	equ	0xFD8
 31356                           
 31357 ;; *************** function __display_itoa_u16 *****************
 31358 ;; Defined at:
 31359 ;;		line 88 in file "display.c"
 31360 ;; Parameters:    Size  Location     Type
 31361 ;;  value           4   24[COMRAM] unsigned long 
 31362 ;;  text            2   28[COMRAM] PTR unsigned char 
 31363 ;;		 -> display_content(80), 
 31364 ;; Auto vars:     Size  Location     Type
 31365 ;;		None
 31366 ;; Return value:  Size  Location     Type
 31367 ;;                  1    wreg      unsigned char 
 31368 ;; Registers used:
 31369 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31370 ;; Tracked objects:
 31371 ;;		On entry : 0/0
 31372 ;;		On exit  : 0/0
 31373 ;;		Unchanged: 0/0
 31374 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31375 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31376 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31377 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31378 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31379 ;;Total ram usage:        6 bytes
 31380 ;; Hardware stack levels used:    1
 31381 ;; Hardware stack levels required when called:    3
 31382 ;; This function calls:
 31383 ;;		_itoa
 31384 ;; This function is called by:
 31385 ;;		__display_itoa_u32
 31386 ;;		__display_verify
 31387 ;;		__display_checked
 31388 ;;		__display_failed
 31389 ;;		__display_programming
 31390 ;;		__display_done
 31391 ;; This function uses a non-reentrant model
 31392 ;;
 31393                           
 31394                           	psect	text152
 31395  006018                     __ptext152:
 31396                           	opt stack 0
 31397  006018                     __display_itoa_u16:
 31398                           	opt stack 22
 31399                           
 31400                           ;display.c: 90: itoa(text, value, 10);
 31401                           
 31402                           ;incstack = 0
 31403  006018  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 31404  00601C  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 31405  006020  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 31406  006024  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 31407  006028  0E00               	movlw	0
 31408  00602A  6E16               	movwf	itoa@base+1,c
 31409  00602C  0E0A               	movlw	10
 31410  00602E  6E15               	movwf	itoa@base,c
 31411  006030  EC9F  F042         	call	_itoa	;wreg free
 31412                           
 31413                           ;display.c: 91: if(value>9999)
 31414  006034  501C               	movf	__display_itoa_u16@value+3,w,c
 31415  006036  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31416  006038  E106               	bnz	u7360
 31417  00603A  0E10               	movlw	16
 31418  00603C  5C19               	subwf	__display_itoa_u16@value,w,c
 31419  00603E  0E27               	movlw	39
 31420  006040  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31421  006042  A0D8               	btfss	status,0,c
 31422  006044  D00A               	goto	l1471
 31423  006046                     u7360:
 31424                           
 31425                           ;display.c: 92: {;display.c: 93: *(text+5) = ' ';
 31426  006046  EE20 F005          	lfsr	2,5
 31427  00604A  501D               	movf	__display_itoa_u16@text,w,c
 31428  00604C  26D9               	addwf	fsr2l,f,c
 31429  00604E  501E               	movf	__display_itoa_u16@text+1,w,c
 31430  006050  22DA               	addwfc	fsr2h,f,c
 31431  006052  0E20               	movlw	32
 31432  006054  6EDF               	movwf	indf2,c
 31433                           
 31434                           ;display.c: 94: return 5;
 31435  006056  0E05               	movlw	5
 31436                           
 31437                           ;display.c: 95: }
 31438  006058  0012               	return	
 31439  00605A                     l1471:
 31440                           
 31441                           ;display.c: 96: else if (value>999)
 31442  00605A  501C               	movf	__display_itoa_u16@value+3,w,c
 31443  00605C  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31444  00605E  E106               	bnz	u7370
 31445  006060  0EE8               	movlw	232
 31446  006062  5C19               	subwf	__display_itoa_u16@value,w,c
 31447  006064  0E03               	movlw	3
 31448  006066  581A               	subwfb	__display_itoa_u16@value+1,w,c
 31449  006068  A0D8               	btfss	status,0,c
 31450  00606A  D00A               	goto	l1474
 31451  00606C                     u7370:
 31452                           
 31453                           ;display.c: 97: {;display.c: 98: *(text+4) = ' ';
 31454  00606C  EE20 F004          	lfsr	2,4
 31455  006070  501D               	movf	__display_itoa_u16@text,w,c
 31456  006072  26D9               	addwf	fsr2l,f,c
 31457  006074  501E               	movf	__display_itoa_u16@text+1,w,c
 31458  006076  22DA               	addwfc	fsr2h,f,c
 31459  006078  0E20               	movlw	32
 31460  00607A  6EDF               	movwf	indf2,c
 31461                           
 31462                           ;display.c: 99: return 4;
 31463  00607C  0E04               	movlw	4
 31464                           
 31465                           ;display.c: 100: }
 31466  00607E  0012               	return	
 31467  006080                     l1474:
 31468                           
 31469                           ;display.c: 101: else if (value>99)
 31470  006080  501C               	movf	__display_itoa_u16@value+3,w,c
 31471  006082  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31472  006084  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31473  006086  E104               	bnz	u7380
 31474  006088  0E64               	movlw	100
 31475  00608A  5C19               	subwf	__display_itoa_u16@value,w,c
 31476  00608C  A0D8               	btfss	status,0,c
 31477  00608E  D00A               	goto	l1476
 31478  006090                     u7380:
 31479                           
 31480                           ;display.c: 102: {;display.c: 103: *(text+3) = ' ';
 31481  006090  EE20 F003          	lfsr	2,3
 31482  006094  501D               	movf	__display_itoa_u16@text,w,c
 31483  006096  26D9               	addwf	fsr2l,f,c
 31484  006098  501E               	movf	__display_itoa_u16@text+1,w,c
 31485  00609A  22DA               	addwfc	fsr2h,f,c
 31486  00609C  0E20               	movlw	32
 31487  00609E  6EDF               	movwf	indf2,c
 31488                           
 31489                           ;display.c: 104: return 3;
 31490  0060A0  0E03               	movlw	3
 31491                           
 31492                           ;display.c: 105: }
 31493  0060A2  0012               	return	
 31494  0060A4                     l1476:
 31495                           
 31496                           ;display.c: 106: else if (value>9)
 31497  0060A4  501C               	movf	__display_itoa_u16@value+3,w,c
 31498  0060A6  101B               	iorwf	__display_itoa_u16@value+2,w,c
 31499  0060A8  101A               	iorwf	__display_itoa_u16@value+1,w,c
 31500  0060AA  E104               	bnz	u7390
 31501  0060AC  0E0A               	movlw	10
 31502  0060AE  5C19               	subwf	__display_itoa_u16@value,w,c
 31503  0060B0  A0D8               	btfss	status,0,c
 31504  0060B2  D00A               	goto	l1478
 31505  0060B4                     u7390:
 31506                           
 31507                           ;display.c: 107: {;display.c: 108: *(text+2) = ' ';
 31508  0060B4  EE20 F002          	lfsr	2,2
 31509  0060B8  501D               	movf	__display_itoa_u16@text,w,c
 31510  0060BA  26D9               	addwf	fsr2l,f,c
 31511  0060BC  501E               	movf	__display_itoa_u16@text+1,w,c
 31512  0060BE  22DA               	addwfc	fsr2h,f,c
 31513  0060C0  0E20               	movlw	32
 31514  0060C2  6EDF               	movwf	indf2,c
 31515                           
 31516                           ;display.c: 109: return 2;
 31517  0060C4  0E02               	movlw	2
 31518                           
 31519                           ;display.c: 110: }
 31520  0060C6  0012               	return	
 31521  0060C8                     l1478:
 31522                           
 31523                           ;display.c: 111: else;display.c: 112: {;display.c: 113: *(text+1) = ' ';
 31524  0060C8  EE20 F001          	lfsr	2,1
 31525  0060CC  501D               	movf	__display_itoa_u16@text,w,c
 31526  0060CE  26D9               	addwf	fsr2l,f,c
 31527  0060D0  501E               	movf	__display_itoa_u16@text+1,w,c
 31528  0060D2  22DA               	addwfc	fsr2h,f,c
 31529  0060D4  0E20               	movlw	32
 31530  0060D6  6EDF               	movwf	indf2,c
 31531                           
 31532                           ;display.c: 114: return 1;
 31533  0060D8  0E01               	movlw	1
 31534  0060DA  0012               	return	
 31535  0060DC                     __end_of__display_itoa_u16:
 31536                           	opt stack 0
 31537                           tosu	equ	0xFFF
 31538                           tosh	equ	0xFFE
 31539                           tosl	equ	0xFFD
 31540                           pclath	equ	0xFFA
 31541                           tblptru	equ	0xFF8
 31542                           tblptrh	equ	0xFF7
 31543                           tblptrl	equ	0xFF6
 31544                           tablat	equ	0xFF5
 31545                           prodh	equ	0xFF4
 31546                           prodl	equ	0xFF3
 31547                           intcon	equ	0xFF2
 31548                           intcon2	equ	0xFF1
 31549                           intcon3	equ	0xFF0
 31550                           indf0	equ	0xFEF
 31551                           postinc0	equ	0xFEE
 31552                           fsr0h	equ	0xFEA
 31553                           fsr0l	equ	0xFE9
 31554                           wreg	equ	0xFE8
 31555                           indf1	equ	0xFE7
 31556                           postdec1	equ	0xFE5
 31557                           plusw1	equ	0xFE3
 31558                           fsr1h	equ	0xFE2
 31559                           fsr1l	equ	0xFE1
 31560                           indf2	equ	0xFDF
 31561                           postinc2	equ	0xFDE
 31562                           postdec2	equ	0xFDD
 31563                           plusw2	equ	0xFDB
 31564                           fsr2h	equ	0xFDA
 31565                           fsr2l	equ	0xFD9
 31566                           status	equ	0xFD8
 31567                           
 31568 ;; *************** function _itoa *****************
 31569 ;; Defined at:
 31570 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31571 ;; Parameters:    Size  Location     Type
 31572 ;;  buf             2   16[COMRAM] PTR unsigned char 
 31573 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31574 ;;  val             2   18[COMRAM] int 
 31575 ;;  base            2   20[COMRAM] int 
 31576 ;; Auto vars:     Size  Location     Type
 31577 ;;  cp              2   22[COMRAM] PTR unsigned char 
 31578 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31579 ;; Return value:  Size  Location     Type
 31580 ;;                  2   16[COMRAM] PTR unsigned char 
 31581 ;; Registers used:
 31582 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31583 ;; Tracked objects:
 31584 ;;		On entry : 0/0
 31585 ;;		On exit  : 0/0
 31586 ;;		Unchanged: 0/0
 31587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31588 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31589 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31590 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31591 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31592 ;;Total ram usage:        8 bytes
 31593 ;; Hardware stack levels used:    1
 31594 ;; Hardware stack levels required when called:    2
 31595 ;; This function calls:
 31596 ;;		_utoa
 31597 ;; This function is called by:
 31598 ;;		__display_itoa_u16
 31599 ;;		__display_itoa_u32
 31600 ;;		__display_itoa
 31601 ;; This function uses a non-reentrant model
 31602 ;;
 31603                           
 31604                           	psect	text153
 31605  00853E                     __ptext153:
 31606                           	opt stack 0
 31607  00853E                     _itoa:
 31608                           	opt stack 22
 31609                           
 31610                           ;incstack = 0
 31611  00853E  C011  F017         	movff	itoa@buf,itoa@cp
 31612  008542  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 31613  008546  AE14               	btfss	itoa@val+1,7,c
 31614  008548  D00C               	goto	l3683
 31615  00854A  C011  FFD9         	movff	itoa@buf,fsr2l
 31616  00854E  C012  FFDA         	movff	itoa@buf+1,fsr2h
 31617  008552  0E2D               	movlw	45
 31618  008554  6EDF               	movwf	indf2,c
 31619  008556  4A11               	infsnz	itoa@buf,f,c
 31620  008558  2A12               	incf	itoa@buf+1,f,c
 31621  00855A  6C13               	negf	itoa@val,c
 31622  00855C  1E14               	comf	itoa@val+1,f,c
 31623  00855E  B0D8               	btfsc	status,0,c
 31624  008560  2A14               	incf	itoa@val+1,f,c
 31625  008562                     l3683:
 31626  008562  C011  F008         	movff	itoa@buf,utoa@buf
 31627  008566  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 31628  00856A  C013  F00A         	movff	itoa@val,utoa@val
 31629  00856E  C014  F00B         	movff	itoa@val+1,utoa@val+1
 31630  008572  C015  F00C         	movff	itoa@base,utoa@base
 31631  008576  C016  F00D         	movff	itoa@base+1,utoa@base+1
 31632  00857A  EC8A  F034         	call	_utoa	;wreg free
 31633  00857E  0012               	return	
 31634  008580                     __end_of_itoa:
 31635                           	opt stack 0
 31636                           tosu	equ	0xFFF
 31637                           tosh	equ	0xFFE
 31638                           tosl	equ	0xFFD
 31639                           pclath	equ	0xFFA
 31640                           tblptru	equ	0xFF8
 31641                           tblptrh	equ	0xFF7
 31642                           tblptrl	equ	0xFF6
 31643                           tablat	equ	0xFF5
 31644                           prodh	equ	0xFF4
 31645                           prodl	equ	0xFF3
 31646                           intcon	equ	0xFF2
 31647                           intcon2	equ	0xFF1
 31648                           intcon3	equ	0xFF0
 31649                           indf0	equ	0xFEF
 31650                           postinc0	equ	0xFEE
 31651                           fsr0h	equ	0xFEA
 31652                           fsr0l	equ	0xFE9
 31653                           wreg	equ	0xFE8
 31654                           indf1	equ	0xFE7
 31655                           postdec1	equ	0xFE5
 31656                           plusw1	equ	0xFE3
 31657                           fsr1h	equ	0xFE2
 31658                           fsr1l	equ	0xFE1
 31659                           indf2	equ	0xFDF
 31660                           postinc2	equ	0xFDE
 31661                           postdec2	equ	0xFDD
 31662                           plusw2	equ	0xFDB
 31663                           fsr2h	equ	0xFDA
 31664                           fsr2l	equ	0xFD9
 31665                           status	equ	0xFD8
 31666                           
 31667 ;; *************** function _utoa *****************
 31668 ;; Defined at:
 31669 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 31670 ;; Parameters:    Size  Location     Type
 31671 ;;  buf             2    7[COMRAM] PTR unsigned char 
 31672 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 31673 ;;  val             2    9[COMRAM] unsigned int 
 31674 ;;  base            2   11[COMRAM] int 
 31675 ;; Auto vars:     Size  Location     Type
 31676 ;;  v               2   13[COMRAM] unsigned int 
 31677 ;;  c               1   15[COMRAM] unsigned char 
 31678 ;; Return value:  Size  Location     Type
 31679 ;;                  2    7[COMRAM] PTR unsigned char 
 31680 ;; Registers used:
 31681 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 31682 ;; Tracked objects:
 31683 ;;		On entry : 0/0
 31684 ;;		On exit  : 0/0
 31685 ;;		Unchanged: 0/0
 31686 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31687 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31688 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31689 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31690 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31691 ;;Total ram usage:        9 bytes
 31692 ;; Hardware stack levels used:    1
 31693 ;; Hardware stack levels required when called:    1
 31694 ;; This function calls:
 31695 ;;		___lwdiv
 31696 ;;		___lwmod
 31697 ;; This function is called by:
 31698 ;;		_itoa
 31699 ;; This function uses a non-reentrant model
 31700 ;;
 31701                           
 31702                           	psect	text154
 31703  006914                     __ptext154:
 31704                           	opt stack 0
 31705  006914                     _utoa:
 31706                           	opt stack 22
 31707                           
 31708                           ;incstack = 0
 31709  006914  C00A  F00E         	movff	utoa@val,utoa@v
 31710  006918  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 31711  00691C  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 31712  006920  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 31713  006924  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31714  006928  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31715  00692C  ECBF  F040         	call	___lwdiv	;wreg free
 31716  006930  C001  F00E         	movff	?___lwdiv,utoa@v
 31717  006934  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 31718  006938  4A08               	infsnz	utoa@buf,f,c
 31719  00693A  2A09               	incf	utoa@buf+1,f,c
 31720  00693C  500E               	movf	utoa@v,w,c
 31721  00693E  100F               	iorwf	utoa@v+1,w,c
 31722  006940  A4D8               	btfss	status,2,c
 31723  006942  D7EC               	goto	l3687
 31724  006944  C008  FFD9         	movff	utoa@buf,fsr2l
 31725  006948  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31726  00694C  0E00               	movlw	0
 31727  00694E  6EDF               	movwf	indf2,c
 31728  006950  0608               	decf	utoa@buf,f,c
 31729  006952  A0D8               	btfss	status,0,c
 31730  006954  0609               	decf	utoa@buf+1,f,c
 31731  006956  C00A  F001         	movff	utoa@val,___lwmod@dividend
 31732  00695A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 31733  00695E  C00C  F003         	movff	utoa@base,___lwmod@divisor
 31734  006962  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 31735  006966  ECC0  F042         	call	___lwmod	;wreg free
 31736  00696A  5001               	movf	?___lwmod,w,c
 31737  00696C  6E10               	movwf	utoa@c,c
 31738  00696E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 31739  006972  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 31740  006976  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 31741  00697A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 31742  00697E  ECBF  F040         	call	___lwdiv	;wreg free
 31743  006982  C001  F00A         	movff	?___lwdiv,utoa@val
 31744  006986  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 31745  00698A  0E09               	movlw	9
 31746  00698C  6410               	cpfsgt	utoa@c,c
 31747  00698E  D002               	goto	l3690
 31748  006990  0E07               	movlw	7
 31749  006992  2610               	addwf	utoa@c,f,c
 31750  006994                     l3690:
 31751  006994  0E30               	movlw	48
 31752  006996  2610               	addwf	utoa@c,f,c
 31753  006998  C008  FFD9         	movff	utoa@buf,fsr2l
 31754  00699C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 31755  0069A0  C010  FFDF         	movff	utoa@c,indf2
 31756  0069A4  0608               	decf	utoa@buf,f,c
 31757  0069A6  A0D8               	btfss	status,0,c
 31758  0069A8  0609               	decf	utoa@buf+1,f,c
 31759  0069AA  500A               	movf	utoa@val,w,c
 31760  0069AC  100B               	iorwf	utoa@val+1,w,c
 31761  0069AE  A4D8               	btfss	status,2,c
 31762  0069B0  D7D2               	goto	l3689
 31763                           
 31764                           ;	Return value of _utoa is never used
 31765  0069B2  4A08               	infsnz	utoa@buf,f,c
 31766  0069B4  2A09               	incf	utoa@buf+1,f,c
 31767  0069B6  0012               	return	
 31768  0069B8                     __end_of_utoa:
 31769                           	opt stack 0
 31770                           tosu	equ	0xFFF
 31771                           tosh	equ	0xFFE
 31772                           tosl	equ	0xFFD
 31773                           pclath	equ	0xFFA
 31774                           tblptru	equ	0xFF8
 31775                           tblptrh	equ	0xFF7
 31776                           tblptrl	equ	0xFF6
 31777                           tablat	equ	0xFF5
 31778                           prodh	equ	0xFF4
 31779                           prodl	equ	0xFF3
 31780                           intcon	equ	0xFF2
 31781                           intcon2	equ	0xFF1
 31782                           intcon3	equ	0xFF0
 31783                           indf0	equ	0xFEF
 31784                           postinc0	equ	0xFEE
 31785                           fsr0h	equ	0xFEA
 31786                           fsr0l	equ	0xFE9
 31787                           wreg	equ	0xFE8
 31788                           indf1	equ	0xFE7
 31789                           postdec1	equ	0xFE5
 31790                           plusw1	equ	0xFE3
 31791                           fsr1h	equ	0xFE2
 31792                           fsr1l	equ	0xFE1
 31793                           indf2	equ	0xFDF
 31794                           postinc2	equ	0xFDE
 31795                           postdec2	equ	0xFDD
 31796                           plusw2	equ	0xFDB
 31797                           fsr2h	equ	0xFDA
 31798                           fsr2l	equ	0xFD9
 31799                           status	equ	0xFD8
 31800                           
 31801 ;; *************** function ___lwmod *****************
 31802 ;; Defined at:
 31803 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 31804 ;; Parameters:    Size  Location     Type
 31805 ;;  dividend        2    0[COMRAM] unsigned int 
 31806 ;;  divisor         2    2[COMRAM] unsigned int 
 31807 ;; Auto vars:     Size  Location     Type
 31808 ;;  counter         1    4[COMRAM] unsigned char 
 31809 ;; Return value:  Size  Location     Type
 31810 ;;                  2    0[COMRAM] unsigned int 
 31811 ;; Registers used:
 31812 ;;		wreg, status,2, status,0
 31813 ;; Tracked objects:
 31814 ;;		On entry : 0/0
 31815 ;;		On exit  : 0/0
 31816 ;;		Unchanged: 0/0
 31817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31818 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31819 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31820 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31821 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31822 ;;Total ram usage:        5 bytes
 31823 ;; Hardware stack levels used:    1
 31824 ;; This function calls:
 31825 ;;		Nothing
 31826 ;; This function is called by:
 31827 ;;		_utoa
 31828 ;; This function uses a non-reentrant model
 31829 ;;
 31830                           
 31831                           	psect	text155
 31832  008580                     __ptext155:
 31833                           	opt stack 0
 31834  008580                     ___lwmod:
 31835                           	opt stack 22
 31836                           
 31837                           ;incstack = 0
 31838  008580  5003               	movf	___lwmod@divisor,w,c
 31839  008582  1004               	iorwf	___lwmod@divisor+1,w,c
 31840  008584  B4D8               	btfsc	status,2,c
 31841  008586  D018               	goto	l3514
 31842  008588  0E01               	movlw	1
 31843  00858A  6E05               	movwf	___lwmod@counter,c
 31844  00858C  D004               	goto	l3509
 31845  00858E  90D8               	bcf	status,0,c
 31846  008590  3603               	rlcf	___lwmod@divisor,f,c
 31847  008592  3604               	rlcf	___lwmod@divisor+1,f,c
 31848  008594  2A05               	incf	___lwmod@counter,f,c
 31849  008596                     l3509:
 31850  008596  AE04               	btfss	___lwmod@divisor+1,7,c
 31851  008598  D7FA               	goto	l3510
 31852  00859A                     u6750:
 31853  00859A  5003               	movf	___lwmod@divisor,w,c
 31854  00859C  5C01               	subwf	___lwmod@dividend,w,c
 31855  00859E  5004               	movf	___lwmod@divisor+1,w,c
 31856  0085A0  5802               	subwfb	___lwmod@dividend+1,w,c
 31857  0085A2  A0D8               	btfss	status,0,c
 31858  0085A4  D004               	goto	l3513
 31859  0085A6  5003               	movf	___lwmod@divisor,w,c
 31860  0085A8  5E01               	subwf	___lwmod@dividend,f,c
 31861  0085AA  5004               	movf	___lwmod@divisor+1,w,c
 31862  0085AC  5A02               	subwfb	___lwmod@dividend+1,f,c
 31863  0085AE                     l3513:
 31864  0085AE  90D8               	bcf	status,0,c
 31865  0085B0  3204               	rrcf	___lwmod@divisor+1,f,c
 31866  0085B2  3203               	rrcf	___lwmod@divisor,f,c
 31867  0085B4  2E05               	decfsz	___lwmod@counter,f,c
 31868  0085B6  D7F1               	goto	u6750
 31869  0085B8                     l3514:
 31870  0085B8  C001  F001         	movff	___lwmod@dividend,?___lwmod
 31871  0085BC  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 31872  0085C0  0012               	return		;funcret
 31873  0085C2                     __end_of___lwmod:
 31874                           	opt stack 0
 31875                           tosu	equ	0xFFF
 31876                           tosh	equ	0xFFE
 31877                           tosl	equ	0xFFD
 31878                           pclath	equ	0xFFA
 31879                           tblptru	equ	0xFF8
 31880                           tblptrh	equ	0xFF7
 31881                           tblptrl	equ	0xFF6
 31882                           tablat	equ	0xFF5
 31883                           prodh	equ	0xFF4
 31884                           prodl	equ	0xFF3
 31885                           intcon	equ	0xFF2
 31886                           intcon2	equ	0xFF1
 31887                           intcon3	equ	0xFF0
 31888                           indf0	equ	0xFEF
 31889                           postinc0	equ	0xFEE
 31890                           fsr0h	equ	0xFEA
 31891                           fsr0l	equ	0xFE9
 31892                           wreg	equ	0xFE8
 31893                           indf1	equ	0xFE7
 31894                           postdec1	equ	0xFE5
 31895                           plusw1	equ	0xFE3
 31896                           fsr1h	equ	0xFE2
 31897                           fsr1l	equ	0xFE1
 31898                           indf2	equ	0xFDF
 31899                           postinc2	equ	0xFDE
 31900                           postdec2	equ	0xFDD
 31901                           plusw2	equ	0xFDB
 31902                           fsr2h	equ	0xFDA
 31903                           fsr2l	equ	0xFD9
 31904                           status	equ	0xFD8
 31905                           
 31906 ;; *************** function ___lwdiv *****************
 31907 ;; Defined at:
 31908 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 31909 ;; Parameters:    Size  Location     Type
 31910 ;;  dividend        2    0[COMRAM] unsigned int 
 31911 ;;  divisor         2    2[COMRAM] unsigned int 
 31912 ;; Auto vars:     Size  Location     Type
 31913 ;;  quotient        2    4[COMRAM] unsigned int 
 31914 ;;  counter         1    6[COMRAM] unsigned char 
 31915 ;; Return value:  Size  Location     Type
 31916 ;;                  2    0[COMRAM] unsigned int 
 31917 ;; Registers used:
 31918 ;;		wreg, status,2, status,0
 31919 ;; Tracked objects:
 31920 ;;		On entry : 0/0
 31921 ;;		On exit  : 0/0
 31922 ;;		Unchanged: 0/0
 31923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31924 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31925 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31926 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31927 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31928 ;;Total ram usage:        7 bytes
 31929 ;; Hardware stack levels used:    1
 31930 ;; This function calls:
 31931 ;;		Nothing
 31932 ;; This function is called by:
 31933 ;;		_utoa
 31934 ;; This function uses a non-reentrant model
 31935 ;;
 31936                           
 31937                           	psect	text156
 31938  00817E                     __ptext156:
 31939                           	opt stack 0
 31940  00817E                     ___lwdiv:
 31941                           	opt stack 22
 31942                           
 31943                           ;incstack = 0
 31944  00817E  0E00               	movlw	0
 31945  008180  6E06               	movwf	___lwdiv@quotient+1,c
 31946  008182  0E00               	movlw	0
 31947  008184  6E05               	movwf	___lwdiv@quotient,c
 31948  008186  5003               	movf	___lwdiv@divisor,w,c
 31949  008188  1004               	iorwf	___lwdiv@divisor+1,w,c
 31950  00818A  B4D8               	btfsc	status,2,c
 31951  00818C  D01C               	goto	l3504
 31952  00818E  0E01               	movlw	1
 31953  008190  6E07               	movwf	___lwdiv@counter,c
 31954  008192  D004               	goto	l3499
 31955  008194  90D8               	bcf	status,0,c
 31956  008196  3603               	rlcf	___lwdiv@divisor,f,c
 31957  008198  3604               	rlcf	___lwdiv@divisor+1,f,c
 31958  00819A  2A07               	incf	___lwdiv@counter,f,c
 31959  00819C                     l3499:
 31960  00819C  AE04               	btfss	___lwdiv@divisor+1,7,c
 31961  00819E  D7FA               	goto	l3500
 31962  0081A0                     u6720:
 31963  0081A0  90D8               	bcf	status,0,c
 31964  0081A2  3605               	rlcf	___lwdiv@quotient,f,c
 31965  0081A4  3606               	rlcf	___lwdiv@quotient+1,f,c
 31966  0081A6  5003               	movf	___lwdiv@divisor,w,c
 31967  0081A8  5C01               	subwf	___lwdiv@dividend,w,c
 31968  0081AA  5004               	movf	___lwdiv@divisor+1,w,c
 31969  0081AC  5802               	subwfb	___lwdiv@dividend+1,w,c
 31970  0081AE  A0D8               	btfss	status,0,c
 31971  0081B0  D005               	goto	l3503
 31972  0081B2  5003               	movf	___lwdiv@divisor,w,c
 31973  0081B4  5E01               	subwf	___lwdiv@dividend,f,c
 31974  0081B6  5004               	movf	___lwdiv@divisor+1,w,c
 31975  0081B8  5A02               	subwfb	___lwdiv@dividend+1,f,c
 31976  0081BA  8005               	bsf	___lwdiv@quotient,0,c
 31977  0081BC                     l3503:
 31978  0081BC  90D8               	bcf	status,0,c
 31979  0081BE  3204               	rrcf	___lwdiv@divisor+1,f,c
 31980  0081C0  3203               	rrcf	___lwdiv@divisor,f,c
 31981  0081C2  2E07               	decfsz	___lwdiv@counter,f,c
 31982  0081C4  D7ED               	goto	u6720
 31983  0081C6                     l3504:
 31984  0081C6  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 31985  0081CA  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 31986  0081CE  0012               	return		;funcret
 31987  0081D0                     __end_of___lwdiv:
 31988                           	opt stack 0
 31989                           tosu	equ	0xFFF
 31990                           tosh	equ	0xFFE
 31991                           tosl	equ	0xFFD
 31992                           pclath	equ	0xFFA
 31993                           tblptru	equ	0xFF8
 31994                           tblptrh	equ	0xFF7
 31995                           tblptrl	equ	0xFF6
 31996                           tablat	equ	0xFF5
 31997                           prodh	equ	0xFF4
 31998                           prodl	equ	0xFF3
 31999                           intcon	equ	0xFF2
 32000                           intcon2	equ	0xFF1
 32001                           intcon3	equ	0xFF0
 32002                           indf0	equ	0xFEF
 32003                           postinc0	equ	0xFEE
 32004                           fsr0h	equ	0xFEA
 32005                           fsr0l	equ	0xFE9
 32006                           wreg	equ	0xFE8
 32007                           indf1	equ	0xFE7
 32008                           postdec1	equ	0xFE5
 32009                           plusw1	equ	0xFE3
 32010                           fsr1h	equ	0xFE2
 32011                           fsr1l	equ	0xFE1
 32012                           indf2	equ	0xFDF
 32013                           postinc2	equ	0xFDE
 32014                           postdec2	equ	0xFDD
 32015                           plusw2	equ	0xFDB
 32016                           fsr2h	equ	0xFDA
 32017                           fsr2l	equ	0xFD9
 32018                           status	equ	0xFD8
 32019                           
 32020 ;; *************** function _i2c_eeprom_writeByte *****************
 32021 ;; Defined at:
 32022 ;;		line 352 in file "i2c.c"
 32023 ;; Parameters:    Size  Location     Type
 32024 ;;  address         2   10[COMRAM] unsigned int 
 32025 ;;  data            1   12[COMRAM] unsigned char 
 32026 ;; Auto vars:     Size  Location     Type
 32027 ;;  dat             2   16[COMRAM] unsigned char [2]
 32028 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32029 ;; Return value:  Size  Location     Type
 32030 ;;                  1    wreg      void 
 32031 ;; Registers used:
 32032 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32033 ;; Tracked objects:
 32034 ;;		On entry : 0/0
 32035 ;;		On exit  : 0/0
 32036 ;;		Unchanged: 0/0
 32037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32038 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32039 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32040 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32041 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32042 ;;Total ram usage:        9 bytes
 32043 ;; Hardware stack levels used:    1
 32044 ;; Hardware stack levels required when called:    2
 32045 ;; This function calls:
 32046 ;;		__i2c_write
 32047 ;;		_i2c_set_frequency
 32048 ;; This function is called by:
 32049 ;;		__normal_mode
 32050 ;;		__ui_encoder
 32051 ;;		__parse_command_short
 32052 ;; This function uses a non-reentrant model
 32053 ;;
 32054                           
 32055                           	psect	text157
 32056  0085C2                     __ptext157:
 32057                           	opt stack 0
 32058  0085C2                     _i2c_eeprom_writeByte:
 32059                           	opt stack 26
 32060                           
 32061                           ;i2c.c: 354: uint8_t slave_address;;i2c.c: 355: uint8_t dat[2];;i2c.c: 357: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32062                           
 32063                           ;incstack = 0
 32064  0085C2  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32065  0085C6  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32066  0085CA  0E07               	movlw	7
 32067  0085CC  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32068  0085CE                     u10685:
 32069  0085CE  90D8               	bcf	status,0,c
 32070  0085D0  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32071  0085D2  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32072  0085D4  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32073  0085D6  D7FB               	goto	u10685
 32074  0085D8  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32075  0085DA  0B0E               	andlw	14
 32076  0085DC  09A0               	iorlw	160
 32077  0085DE  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32078                           
 32079                           ;i2c.c: 358: dat[0] = address & 0xFF;
 32080  0085E0  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32081                           
 32082                           ;i2c.c: 359: dat[1] = data;
 32083  0085E4  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32084                           
 32085                           ;i2c.c: 362: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32086  0085E8  0E02               	movlw	2
 32087  0085EA  EC51  F045         	call	_i2c_set_frequency
 32088                           
 32089                           ;i2c.c: 364: _i2c_write(slave_address, &dat[0], 2);
 32090  0085EE  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32091  0085F0  6E06               	movwf	__i2c_write@data,c
 32092  0085F2  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32093  0085F4  6E07               	movwf	__i2c_write@data+1,c
 32094  0085F6  0E02               	movlw	2
 32095  0085F8  6E08               	movwf	__i2c_write@length,c
 32096  0085FA  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32097  0085FC  ECAD  F041         	call	__i2c_write
 32098  008600  0012               	return		;funcret
 32099  008602                     __end_of_i2c_eeprom_writeByte:
 32100                           	opt stack 0
 32101                           tosu	equ	0xFFF
 32102                           tosh	equ	0xFFE
 32103                           tosl	equ	0xFFD
 32104                           pclath	equ	0xFFA
 32105                           tblptru	equ	0xFF8
 32106                           tblptrh	equ	0xFF7
 32107                           tblptrl	equ	0xFF6
 32108                           tablat	equ	0xFF5
 32109                           prodh	equ	0xFF4
 32110                           prodl	equ	0xFF3
 32111                           intcon	equ	0xFF2
 32112                           intcon2	equ	0xFF1
 32113                           intcon3	equ	0xFF0
 32114                           indf0	equ	0xFEF
 32115                           postinc0	equ	0xFEE
 32116                           fsr0h	equ	0xFEA
 32117                           fsr0l	equ	0xFE9
 32118                           wreg	equ	0xFE8
 32119                           indf1	equ	0xFE7
 32120                           postdec1	equ	0xFE5
 32121                           plusw1	equ	0xFE3
 32122                           fsr1h	equ	0xFE2
 32123                           fsr1l	equ	0xFE1
 32124                           indf2	equ	0xFDF
 32125                           postinc2	equ	0xFDE
 32126                           postdec2	equ	0xFDD
 32127                           plusw2	equ	0xFDB
 32128                           fsr2h	equ	0xFDA
 32129                           fsr2l	equ	0xFD9
 32130                           status	equ	0xFD8
 32131                           
 32132 ;; *************** function _i2c_set_frequency *****************
 32133 ;; Defined at:
 32134 ;;		line 123 in file "i2c.c"
 32135 ;; Parameters:    Size  Location     Type
 32136 ;;  frequency       1    wreg     enum E6622
 32137 ;; Auto vars:     Size  Location     Type
 32138 ;;  frequency       1    0[COMRAM] enum E6622
 32139 ;; Return value:  Size  Location     Type
 32140 ;;                  1    wreg      void 
 32141 ;; Registers used:
 32142 ;;		wreg, status,2, status,0
 32143 ;; Tracked objects:
 32144 ;;		On entry : 0/0
 32145 ;;		On exit  : 0/0
 32146 ;;		Unchanged: 0/0
 32147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32148 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32149 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32150 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32151 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32152 ;;Total ram usage:        1 bytes
 32153 ;; Hardware stack levels used:    1
 32154 ;; This function calls:
 32155 ;;		Nothing
 32156 ;; This function is called by:
 32157 ;;		_i2c_init
 32158 ;;		__ic2_display_set_address
 32159 ;;		_i2c_display_send_init_sequence
 32160 ;;		_i2c_display_cursor
 32161 ;;		_i2c_display_write_fixed
 32162 ;;		_i2c_digipot_reset_on
 32163 ;;		_i2c_digipot_reset_off
 32164 ;;		_i2c_digipot_backlight
 32165 ;;		_i2c_eeprom_writeByte
 32166 ;;		_i2c_eeprom_readByte
 32167 ;;		_i2c_display_write
 32168 ;;		_i2c_eeprom_write
 32169 ;;		_i2c_eeprom_read
 32170 ;; This function uses a non-reentrant model
 32171 ;;
 32172                           
 32173                           	psect	text158
 32174  008AA2                     __ptext158:
 32175                           	opt stack 0
 32176  008AA2                     _i2c_set_frequency:
 32177                           	opt stack 28
 32178                           
 32179                           ;incstack = 0
 32180                           ;i2c_set_frequency@frequency stored from wreg
 32181  008AA2  6E01               	movwf	i2c_set_frequency@frequency,c
 32182                           
 32183                           ;i2c.c: 125: switch(frequency)
 32184  008AA4  D007               	goto	l1195
 32185  008AA6                     
 32186                           ;i2c.c: 128: SSP1ADD = 119;
 32187  008AA6  0E77               	movlw	119
 32188  008AA8  D003               	goto	L34
 32189  008AAA                     
 32190                           ;i2c.c: 131: SSP1ADD = 59;
 32191  008AAA  0E3B               	movlw	59
 32192  008AAC  D001               	goto	L34
 32193  008AAE                     
 32194                           ;i2c.c: 134: SSP1ADD = 29;
 32195  008AAE  0E1D               	movlw	29
 32196  008AB0                     L34:
 32197  008AB0  6EC8               	movwf	4040,c	;volatile
 32198                           
 32199                           ;i2c.c: 136: }
 32200                           
 32201                           ;i2c.c: 135: break;
 32202  008AB2  D00A               	goto	l1197
 32203  008AB4                     l1195:
 32204  008AB4  5001               	movf	i2c_set_frequency@frequency,w,c
 32205                           
 32206                           ; Switch size 1, requested type "space"
 32207                           ; Number of cases is 3, Range of values is 0 to 2
 32208                           ; switch strategies available:
 32209                           ; Name         Instructions Cycles
 32210                           ; simple_byte           10     6 (average)
 32211                           ;	Chosen strategy is simple_byte
 32212  008AB6  0A00               	xorlw	0	; case 0
 32213  008AB8  B4D8               	btfsc	status,2,c
 32214  008ABA  D7F5               	goto	l1196
 32215  008ABC  0A01               	xorlw	1	; case 1
 32216  008ABE  B4D8               	btfsc	status,2,c
 32217  008AC0  D7F4               	goto	l1198
 32218  008AC2  0A03               	xorlw	3	; case 2
 32219  008AC4  B4D8               	btfsc	status,2,c
 32220  008AC6  D7F3               	goto	l1199
 32221  008AC8                     l1197:
 32222                           
 32223                           ;i2c.c: 138: i2c_frequency = frequency;
 32224  008AC8  C001  F18D         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32225  008ACC  0012               	return		;funcret
 32226  008ACE                     __end_of_i2c_set_frequency:
 32227                           	opt stack 0
 32228                           tosu	equ	0xFFF
 32229                           tosh	equ	0xFFE
 32230                           tosl	equ	0xFFD
 32231                           pclath	equ	0xFFA
 32232                           tblptru	equ	0xFF8
 32233                           tblptrh	equ	0xFF7
 32234                           tblptrl	equ	0xFF6
 32235                           tablat	equ	0xFF5
 32236                           prodh	equ	0xFF4
 32237                           prodl	equ	0xFF3
 32238                           intcon	equ	0xFF2
 32239                           intcon2	equ	0xFF1
 32240                           intcon3	equ	0xFF0
 32241                           indf0	equ	0xFEF
 32242                           postinc0	equ	0xFEE
 32243                           fsr0h	equ	0xFEA
 32244                           fsr0l	equ	0xFE9
 32245                           wreg	equ	0xFE8
 32246                           indf1	equ	0xFE7
 32247                           postdec1	equ	0xFE5
 32248                           plusw1	equ	0xFE3
 32249                           fsr1h	equ	0xFE2
 32250                           fsr1l	equ	0xFE1
 32251                           indf2	equ	0xFDF
 32252                           postinc2	equ	0xFDE
 32253                           postdec2	equ	0xFDD
 32254                           plusw2	equ	0xFDB
 32255                           fsr2h	equ	0xFDA
 32256                           fsr2l	equ	0xFD9
 32257                           status	equ	0xFD8
 32258                           
 32259 ;; *************** function __i2c_write *****************
 32260 ;; Defined at:
 32261 ;;		line 142 in file "i2c.c"
 32262 ;; Parameters:    Size  Location     Type
 32263 ;;  slave_addres    1    wreg     unsigned char 
 32264 ;;  data            2    5[COMRAM] PTR unsigned char 
 32265 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32266 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32267 ;;		 -> _ic2_display_set_address@data_array(2), 
 32268 ;;  length          1    7[COMRAM] unsigned char 
 32269 ;; Auto vars:     Size  Location     Type
 32270 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32271 ;;  cntr            1    9[COMRAM] unsigned char 
 32272 ;; Return value:  Size  Location     Type
 32273 ;;                  1    wreg      void 
 32274 ;; Registers used:
 32275 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32276 ;; Tracked objects:
 32277 ;;		On entry : 0/0
 32278 ;;		On exit  : 0/0
 32279 ;;		Unchanged: 0/0
 32280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32281 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32282 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32283 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32284 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32285 ;;Total ram usage:        5 bytes
 32286 ;; Hardware stack levels used:    1
 32287 ;; Hardware stack levels required when called:    1
 32288 ;; This function calls:
 32289 ;;		__i2c_send
 32290 ;;		__i2c_start
 32291 ;;		__i2c_stop
 32292 ;;		__i2c_wait_idle
 32293 ;; This function is called by:
 32294 ;;		__ic2_display_set_address
 32295 ;;		_i2c_display_send_init_sequence
 32296 ;;		_i2c_digipot_reset_on
 32297 ;;		_i2c_digipot_reset_off
 32298 ;;		_i2c_digipot_backlight
 32299 ;;		_i2c_eeprom_writeByte
 32300 ;;		_i2c_eeprom_readByte
 32301 ;;		_i2c_eeprom_write
 32302 ;;		_i2c_eeprom_read
 32303 ;; This function uses a non-reentrant model
 32304 ;;
 32305                           
 32306                           	psect	text159
 32307  00835A                     __ptext159:
 32308                           	opt stack 0
 32309  00835A                     __i2c_write:
 32310                           	opt stack 27
 32311                           
 32312                           ;incstack = 0
 32313                           ;__i2c_write@slave_address stored from wreg
 32314  00835A  6E09               	movwf	__i2c_write@slave_address,c
 32315                           
 32316                           ;i2c.c: 144: uint8_t cntr;;i2c.c: 146: _i2c_wait_idle();
 32317  00835C  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32318                           
 32319                           ;i2c.c: 147: _i2c_start();
 32320  008360  EC0A  F048         	call	__i2c_start	;wreg free
 32321                           
 32322                           ;i2c.c: 148: _i2c_wait_idle();
 32323  008364  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32324                           
 32325                           ;i2c.c: 149: _i2c_send(slave_address);
 32326  008368  5009               	movf	__i2c_write@slave_address,w,c
 32327  00836A  EC0E  F048         	call	__i2c_send
 32328                           
 32329                           ;i2c.c: 150: _i2c_wait_idle();
 32330  00836E  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32331                           
 32332                           ;i2c.c: 152: for(cntr=0; cntr<length; ++cntr)
 32333  008372  0E00               	movlw	0
 32334  008374  6E0A               	movwf	__i2c_write@cntr,c
 32335  008376  D00E               	goto	l1203
 32336  008378                     
 32337                           ;i2c.c: 153: {;i2c.c: 154: _i2c_send(data[cntr]);
 32338  008378  500A               	movf	__i2c_write@cntr,w,c
 32339  00837A  0D01               	mullw	1
 32340  00837C  50F3               	movf	prodl,w,c
 32341  00837E  2406               	addwf	__i2c_write@data,w,c
 32342  008380  6ED9               	movwf	fsr2l,c
 32343  008382  50F4               	movf	prodh,w,c
 32344  008384  2007               	addwfc	__i2c_write@data+1,w,c
 32345  008386  6EDA               	movwf	fsr2h,c
 32346  008388  50DF               	movf	indf2,w,c
 32347  00838A  EC0E  F048         	call	__i2c_send
 32348                           
 32349                           ;i2c.c: 155: _i2c_wait_idle();
 32350  00838E  EC8E  F03E         	call	__i2c_wait_idle	;wreg free
 32351  008392  2A0A               	incf	__i2c_write@cntr,f,c
 32352  008394                     l1203:
 32353  008394  5008               	movf	__i2c_write@length,w,c
 32354  008396  5C0A               	subwf	__i2c_write@cntr,w,c
 32355  008398  A0D8               	btfss	status,0,c
 32356  00839A  D7EE               	goto	l1204
 32357                           
 32358                           ;i2c.c: 156: };i2c.c: 158: _i2c_stop();
 32359  00839C  EC06  F048         	call	__i2c_stop	;wreg free
 32360  0083A0  0012               	return		;funcret
 32361  0083A2                     __end_of__i2c_write:
 32362                           	opt stack 0
 32363                           tosu	equ	0xFFF
 32364                           tosh	equ	0xFFE
 32365                           tosl	equ	0xFFD
 32366                           pclath	equ	0xFFA
 32367                           tblptru	equ	0xFF8
 32368                           tblptrh	equ	0xFF7
 32369                           tblptrl	equ	0xFF6
 32370                           tablat	equ	0xFF5
 32371                           prodh	equ	0xFF4
 32372                           prodl	equ	0xFF3
 32373                           intcon	equ	0xFF2
 32374                           intcon2	equ	0xFF1
 32375                           intcon3	equ	0xFF0
 32376                           indf0	equ	0xFEF
 32377                           postinc0	equ	0xFEE
 32378                           fsr0h	equ	0xFEA
 32379                           fsr0l	equ	0xFE9
 32380                           wreg	equ	0xFE8
 32381                           indf1	equ	0xFE7
 32382                           postdec1	equ	0xFE5
 32383                           plusw1	equ	0xFE3
 32384                           fsr1h	equ	0xFE2
 32385                           fsr1l	equ	0xFE1
 32386                           indf2	equ	0xFDF
 32387                           postinc2	equ	0xFDE
 32388                           postdec2	equ	0xFDD
 32389                           plusw2	equ	0xFDB
 32390                           fsr2h	equ	0xFDA
 32391                           fsr2l	equ	0xFD9
 32392                           status	equ	0xFD8
 32393                           
 32394 ;; *************** function __i2c_wait_idle *****************
 32395 ;; Defined at:
 32396 ;;		line 48 in file "i2c.c"
 32397 ;; Parameters:    Size  Location     Type
 32398 ;;		None
 32399 ;; Auto vars:     Size  Location     Type
 32400 ;;		None
 32401 ;; Return value:  Size  Location     Type
 32402 ;;                  1    wreg      void 
 32403 ;; Registers used:
 32404 ;;		wreg, status,2, status,0
 32405 ;; Tracked objects:
 32406 ;;		On entry : 0/0
 32407 ;;		On exit  : 0/0
 32408 ;;		Unchanged: 0/0
 32409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32410 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32411 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32412 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32413 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32414 ;;Total ram usage:        5 bytes
 32415 ;; Hardware stack levels used:    1
 32416 ;; This function calls:
 32417 ;;		Nothing
 32418 ;; This function is called by:
 32419 ;;		__i2c_write
 32420 ;;		__i2c_read
 32421 ;;		_i2c_display_write_fixed
 32422 ;;		_i2c_display_write
 32423 ;; This function uses a non-reentrant model
 32424 ;;
 32425                           
 32426                           	psect	text160
 32427  007D1C                     __ptext160:
 32428                           	opt stack 0
 32429  007D1C                     __i2c_wait_idle:
 32430                           	opt stack 27
 32431                           
 32432                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32433                           
 32434                           ;incstack = 0
 32435  007D1C  A4C7               	btfss	4039,2,c	;volatile
 32436  007D1E  D003               	goto	u6900
 32437  007D20  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32438  007D22  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32439  007D24  D001               	goto	u6908
 32440  007D26                     u6900:
 32441  007D26  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32442  007D28                     u6908:
 32443  007D28  A0C5               	btfss	4037,0,c	;volatile
 32444  007D2A  D003               	goto	u6910
 32445  007D2C  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32446  007D2E  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32447  007D30  D001               	goto	u6918
 32448  007D32                     u6910:
 32449  007D32  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32450  007D34                     u6918:
 32451  007D34  A2C5               	btfss	4037,1,c	;volatile
 32452  007D36  D003               	goto	u6920
 32453  007D38  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32454  007D3A  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32455  007D3C  D001               	goto	u6928
 32456  007D3E                     u6920:
 32457  007D3E  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32458  007D40                     u6928:
 32459  007D40  A4C5               	btfss	4037,2,c	;volatile
 32460  007D42  D003               	goto	u6930
 32461  007D44  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32462  007D46  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32463  007D48  D001               	goto	u6938
 32464  007D4A                     u6930:
 32465  007D4A  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32466  007D4C                     u6938:
 32467  007D4C  A6C5               	btfss	4037,3,c	;volatile
 32468  007D4E  D003               	goto	u6940
 32469  007D50  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32470  007D52  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32471  007D54  D001               	goto	u6948
 32472  007D56                     u6940:
 32473  007D56  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32474  007D58                     u6948:
 32475  007D58  A8C5               	btfss	4037,4,c	;volatile
 32476  007D5A  D002               	goto	u6950
 32477  007D5C  0E01               	movlw	1
 32478  007D5E  D001               	goto	u6956
 32479  007D60                     u6950:
 32480  007D60  0E00               	movlw	0
 32481  007D62                     u6956:
 32482  007D62  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32483  007D64  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32484  007D66  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32485  007D68  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32486  007D6A  1001               	iorwf	??__i2c_wait_idle,w,c
 32487  007D6C  0900               	iorlw	0
 32488  007D6E  B4D8               	btfsc	status,2,c
 32489  007D70  0012               	return	
 32490  007D72  D7D4               	goto	__i2c_wait_idle
 32491  007D74                     __end_of__i2c_wait_idle:
 32492                           	opt stack 0
 32493                           tosu	equ	0xFFF
 32494                           tosh	equ	0xFFE
 32495                           tosl	equ	0xFFD
 32496                           pclath	equ	0xFFA
 32497                           tblptru	equ	0xFF8
 32498                           tblptrh	equ	0xFF7
 32499                           tblptrl	equ	0xFF6
 32500                           tablat	equ	0xFF5
 32501                           prodh	equ	0xFF4
 32502                           prodl	equ	0xFF3
 32503                           intcon	equ	0xFF2
 32504                           intcon2	equ	0xFF1
 32505                           intcon3	equ	0xFF0
 32506                           indf0	equ	0xFEF
 32507                           postinc0	equ	0xFEE
 32508                           fsr0h	equ	0xFEA
 32509                           fsr0l	equ	0xFE9
 32510                           wreg	equ	0xFE8
 32511                           indf1	equ	0xFE7
 32512                           postdec1	equ	0xFE5
 32513                           plusw1	equ	0xFE3
 32514                           fsr1h	equ	0xFE2
 32515                           fsr1l	equ	0xFE1
 32516                           indf2	equ	0xFDF
 32517                           postinc2	equ	0xFDE
 32518                           postdec2	equ	0xFDD
 32519                           plusw2	equ	0xFDB
 32520                           fsr2h	equ	0xFDA
 32521                           fsr2l	equ	0xFD9
 32522                           status	equ	0xFD8
 32523                           
 32524 ;; *************** function __i2c_stop *****************
 32525 ;; Defined at:
 32526 ;;		line 75 in file "i2c.c"
 32527 ;; Parameters:    Size  Location     Type
 32528 ;;		None
 32529 ;; Auto vars:     Size  Location     Type
 32530 ;;		None
 32531 ;; Return value:  Size  Location     Type
 32532 ;;                  1    wreg      void 
 32533 ;; Registers used:
 32534 ;;		None
 32535 ;; Tracked objects:
 32536 ;;		On entry : 0/0
 32537 ;;		On exit  : 0/0
 32538 ;;		Unchanged: 0/0
 32539 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32540 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32541 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32542 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32543 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32544 ;;Total ram usage:        0 bytes
 32545 ;; Hardware stack levels used:    1
 32546 ;; This function calls:
 32547 ;;		Nothing
 32548 ;; This function is called by:
 32549 ;;		__i2c_write
 32550 ;;		__i2c_read
 32551 ;;		_i2c_display_write_fixed
 32552 ;;		_i2c_display_write
 32553 ;; This function uses a non-reentrant model
 32554 ;;
 32555                           
 32556                           	psect	text161
 32557  00900C                     __ptext161:
 32558                           	opt stack 0
 32559  00900C                     __i2c_stop:
 32560                           	opt stack 27
 32561                           
 32562                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32563                           
 32564                           ;incstack = 0
 32565  00900C  84C5               	bsf	4037,2,c	;volatile
 32566  00900E  A4C5               	btfss	4037,2,c	;volatile
 32567  009010  0012               	return	
 32568  009012  D7FD               	goto	l1169
 32569  009014                     __end_of__i2c_stop:
 32570                           	opt stack 0
 32571                           tosu	equ	0xFFF
 32572                           tosh	equ	0xFFE
 32573                           tosl	equ	0xFFD
 32574                           pclath	equ	0xFFA
 32575                           tblptru	equ	0xFF8
 32576                           tblptrh	equ	0xFF7
 32577                           tblptrl	equ	0xFF6
 32578                           tablat	equ	0xFF5
 32579                           prodh	equ	0xFF4
 32580                           prodl	equ	0xFF3
 32581                           intcon	equ	0xFF2
 32582                           intcon2	equ	0xFF1
 32583                           intcon3	equ	0xFF0
 32584                           indf0	equ	0xFEF
 32585                           postinc0	equ	0xFEE
 32586                           fsr0h	equ	0xFEA
 32587                           fsr0l	equ	0xFE9
 32588                           wreg	equ	0xFE8
 32589                           indf1	equ	0xFE7
 32590                           postdec1	equ	0xFE5
 32591                           plusw1	equ	0xFE3
 32592                           fsr1h	equ	0xFE2
 32593                           fsr1l	equ	0xFE1
 32594                           indf2	equ	0xFDF
 32595                           postinc2	equ	0xFDE
 32596                           postdec2	equ	0xFDD
 32597                           plusw2	equ	0xFDB
 32598                           fsr2h	equ	0xFDA
 32599                           fsr2l	equ	0xFD9
 32600                           status	equ	0xFD8
 32601                           
 32602 ;; *************** function __i2c_start *****************
 32603 ;; Defined at:
 32604 ;;		line 54 in file "i2c.c"
 32605 ;; Parameters:    Size  Location     Type
 32606 ;;		None
 32607 ;; Auto vars:     Size  Location     Type
 32608 ;;		None
 32609 ;; Return value:  Size  Location     Type
 32610 ;;                  1    wreg      void 
 32611 ;; Registers used:
 32612 ;;		None
 32613 ;; Tracked objects:
 32614 ;;		On entry : 0/0
 32615 ;;		On exit  : 0/0
 32616 ;;		Unchanged: 0/0
 32617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32618 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32619 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32621 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32622 ;;Total ram usage:        0 bytes
 32623 ;; Hardware stack levels used:    1
 32624 ;; This function calls:
 32625 ;;		Nothing
 32626 ;; This function is called by:
 32627 ;;		__i2c_write
 32628 ;;		__i2c_read
 32629 ;;		_i2c_display_write_fixed
 32630 ;;		_i2c_display_write
 32631 ;; This function uses a non-reentrant model
 32632 ;;
 32633                           
 32634                           	psect	text162
 32635  009014                     __ptext162:
 32636                           	opt stack 0
 32637  009014                     __i2c_start:
 32638                           	opt stack 27
 32639                           
 32640                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32641                           
 32642                           ;incstack = 0
 32643  009014  80C5               	bsf	4037,0,c	;volatile
 32644  009016  A0C5               	btfss	4037,0,c	;volatile
 32645  009018  0012               	return	
 32646  00901A  D7FD               	goto	l1154
 32647  00901C                     __end_of__i2c_start:
 32648                           	opt stack 0
 32649                           tosu	equ	0xFFF
 32650                           tosh	equ	0xFFE
 32651                           tosl	equ	0xFFD
 32652                           pclath	equ	0xFFA
 32653                           tblptru	equ	0xFF8
 32654                           tblptrh	equ	0xFF7
 32655                           tblptrl	equ	0xFF6
 32656                           tablat	equ	0xFF5
 32657                           prodh	equ	0xFF4
 32658                           prodl	equ	0xFF3
 32659                           intcon	equ	0xFF2
 32660                           intcon2	equ	0xFF1
 32661                           intcon3	equ	0xFF0
 32662                           indf0	equ	0xFEF
 32663                           postinc0	equ	0xFEE
 32664                           fsr0h	equ	0xFEA
 32665                           fsr0l	equ	0xFE9
 32666                           wreg	equ	0xFE8
 32667                           indf1	equ	0xFE7
 32668                           postdec1	equ	0xFE5
 32669                           plusw1	equ	0xFE3
 32670                           fsr1h	equ	0xFE2
 32671                           fsr1l	equ	0xFE1
 32672                           indf2	equ	0xFDF
 32673                           postinc2	equ	0xFDE
 32674                           postdec2	equ	0xFDD
 32675                           plusw2	equ	0xFDB
 32676                           fsr2h	equ	0xFDA
 32677                           fsr2l	equ	0xFD9
 32678                           status	equ	0xFD8
 32679                           
 32680 ;; *************** function __i2c_send *****************
 32681 ;; Defined at:
 32682 ;;		line 61 in file "i2c.c"
 32683 ;; Parameters:    Size  Location     Type
 32684 ;;  dat             1    wreg     unsigned char 
 32685 ;; Auto vars:     Size  Location     Type
 32686 ;;  dat             1    0[COMRAM] unsigned char 
 32687 ;; Return value:  Size  Location     Type
 32688 ;;                  1    wreg      void 
 32689 ;; Registers used:
 32690 ;;		wreg
 32691 ;; Tracked objects:
 32692 ;;		On entry : 0/0
 32693 ;;		On exit  : 0/0
 32694 ;;		Unchanged: 0/0
 32695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32696 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32697 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32698 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32699 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32700 ;;Total ram usage:        1 bytes
 32701 ;; Hardware stack levels used:    1
 32702 ;; This function calls:
 32703 ;;		Nothing
 32704 ;; This function is called by:
 32705 ;;		__i2c_write
 32706 ;;		__i2c_read
 32707 ;;		_i2c_display_write_fixed
 32708 ;;		_i2c_display_write
 32709 ;; This function uses a non-reentrant model
 32710 ;;
 32711                           
 32712                           	psect	text163
 32713  00901C                     __ptext163:
 32714                           	opt stack 0
 32715  00901C                     __i2c_send:
 32716                           	opt stack 27
 32717                           
 32718                           ;incstack = 0
 32719                           ;__i2c_send@dat stored from wreg
 32720  00901C  6E01               	movwf	__i2c_send@dat,c
 32721                           
 32722                           ;i2c.c: 63: SSP1BUF = dat;
 32723  00901E  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32724  009022  0012               	return		;funcret
 32725  009024                     __end_of__i2c_send:
 32726                           	opt stack 0
 32727                           tosu	equ	0xFFF
 32728                           tosh	equ	0xFFE
 32729                           tosl	equ	0xFFD
 32730                           pclath	equ	0xFFA
 32731                           tblptru	equ	0xFF8
 32732                           tblptrh	equ	0xFF7
 32733                           tblptrl	equ	0xFF6
 32734                           tablat	equ	0xFF5
 32735                           prodh	equ	0xFF4
 32736                           prodl	equ	0xFF3
 32737                           intcon	equ	0xFF2
 32738                           intcon2	equ	0xFF1
 32739                           intcon3	equ	0xFF0
 32740                           indf0	equ	0xFEF
 32741                           postinc0	equ	0xFEE
 32742                           fsr0h	equ	0xFEA
 32743                           fsr0l	equ	0xFE9
 32744                           wreg	equ	0xFE8
 32745                           indf1	equ	0xFE7
 32746                           postdec1	equ	0xFE5
 32747                           plusw1	equ	0xFE3
 32748                           fsr1h	equ	0xFE2
 32749                           fsr1l	equ	0xFE1
 32750                           indf2	equ	0xFDF
 32751                           postinc2	equ	0xFDE
 32752                           postdec2	equ	0xFDD
 32753                           plusw2	equ	0xFDB
 32754                           fsr2h	equ	0xFDA
 32755                           fsr2l	equ	0xFD9
 32756                           status	equ	0xFD8
 32757                           
 32758 ;; *************** function __parse_command_long *****************
 32759 ;; Defined at:
 32760 ;;		line 520 in file "api.c"
 32761 ;; Parameters:    Size  Location     Type
 32762 ;;  data            2   56[BANK0 ] PTR unsigned char 
 32763 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 32764 ;; Auto vars:     Size  Location     Type
 32765 ;;  length          1   58[BANK0 ] unsigned char 
 32766 ;; Return value:  Size  Location     Type
 32767 ;;                  1    wreg      unsigned char 
 32768 ;; Registers used:
 32769 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32770 ;; Tracked objects:
 32771 ;;		On entry : 0/0
 32772 ;;		On exit  : 0/0
 32773 ;;		Unchanged: 0/0
 32774 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32775 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32776 ;;      Locals:         0       1       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32777 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32778 ;;      Totals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32779 ;;Total ram usage:        3 bytes
 32780 ;; Hardware stack levels used:    1
 32781 ;; Hardware stack levels required when called:   10
 32782 ;; This function calls:
 32783 ;;		__parse_buffer_to_sector
 32784 ;;		__parse_file_append
 32785 ;;		__parse_file_create
 32786 ;;		__parse_file_delete
 32787 ;;		__parse_file_modify
 32788 ;;		__parse_file_rename
 32789 ;;		__parse_file_resize
 32790 ;;		__parse_format_drive
 32791 ;;		__parse_sector_to_buffer
 32792 ;;		__parse_write_buffer
 32793 ;; This function is called by:
 32794 ;;		_api_parse
 32795 ;; This function uses a non-reentrant model
 32796 ;;
 32797                           
 32798                           	psect	text164
 32799  00561E                     __ptext164:
 32800                           	opt stack 0
 32801  00561E                     __parse_command_long:
 32802                           	opt stack 19
 32803                           
 32804                           ;api.c: 522: uint8_t length = 65;
 32805                           
 32806                           ;incstack = 0
 32807  00561E  0E41               	movlw	65
 32808  005620  0100               	movlb	0	; () banked
 32809  005622  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32810                           
 32811                           ;api.c: 524: switch(data[0])
 32812  005624  D048               	goto	l2794
 32813  005626                     
 32814                           ; BSR set to: 0
 32815                           ;api.c: 527: length = _parse_file_resize(data);
 32816                           
 32817                           ; BSR set to: 0
 32818  005626  C098  F055         	movff	__parse_command_long@data,__parse_file_resize@data
 32819  00562A  C099  F056         	movff	__parse_command_long@data+1,__parse_file_resize@data+1
 32820  00562E  EC80  F02B         	call	__parse_file_resize	;wreg free
 32821  005632  D03E               	goto	L43
 32822  005634                     
 32823                           ; BSR set to: 0
 32824                           ;api.c: 531: length = _parse_file_delete(data);
 32825                           
 32826                           ; BSR set to: 0
 32827  005634  C098  F050         	movff	__parse_command_long@data,__parse_file_delete@data
 32828  005638  C099  F051         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 32829  00563C  ECE8  F040         	call	__parse_file_delete	;wreg free
 32830  005640  D037               	goto	L43
 32831  005642                     
 32832                           ; BSR set to: 0
 32833                           ;api.c: 535: length = _parse_file_create(data);
 32834                           
 32835                           ; BSR set to: 0
 32836  005642  C098  F059         	movff	__parse_command_long@data,__parse_file_create@data
 32837  005646  C099  F05A         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 32838  00564A  EC64  F028         	call	__parse_file_create	;wreg free
 32839  00564E  D030               	goto	L43
 32840  005650                     
 32841                           ; BSR set to: 0
 32842                           ;api.c: 539: length = _parse_file_rename(data);
 32843                           
 32844                           ; BSR set to: 0
 32845  005650  C098  F060         	movff	__parse_command_long@data,__parse_file_rename@data
 32846  005654  C099  F061         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 32847  005658  ECD4  F03B         	call	__parse_file_rename	;wreg free
 32848  00565C  D029               	goto	L43
 32849  00565E                     
 32850                           ; BSR set to: 0
 32851                           ;api.c: 543: length = _parse_file_append(data);
 32852                           
 32853                           ; BSR set to: 0
 32854  00565E  C098  F05A         	movff	__parse_command_long@data,__parse_file_append@data
 32855  005662  C099  F05B         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 32856  005666  ECBD  F039         	call	__parse_file_append	;wreg free
 32857  00566A  D022               	goto	L43
 32858  00566C                     
 32859                           ; BSR set to: 0
 32860                           ;api.c: 547: length = _parse_file_modify(data);
 32861                           
 32862                           ; BSR set to: 0
 32863  00566C  C098  F056         	movff	__parse_command_long@data,__parse_file_modify@data
 32864  005670  C099  F057         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 32865  005674  ECDB  F022         	call	__parse_file_modify	;wreg free
 32866  005678  D01B               	goto	L43
 32867  00567A                     
 32868                           ; BSR set to: 0
 32869                           ;api.c: 551: length = _parse_format_drive(data);
 32870                           
 32871                           ; BSR set to: 0
 32872  00567A  C098  F027         	movff	__parse_command_long@data,__parse_format_drive@data
 32873  00567E  C099  F028         	movff	__parse_command_long@data+1,__parse_format_drive@data+1
 32874  005682  EC3A  F042         	call	__parse_format_drive	;wreg free
 32875  005686  D014               	goto	L43
 32876  005688                     
 32877                           ; BSR set to: 0
 32878                           ;api.c: 555: length = _parse_sector_to_buffer(data);
 32879                           
 32880                           ; BSR set to: 0
 32881  005688  C098  F054         	movff	__parse_command_long@data,__parse_sector_to_buffer@data
 32882  00568C  C099  F055         	movff	__parse_command_long@data+1,__parse_sector_to_buffer@data+1
 32883  005690  ECB1  F038         	call	__parse_sector_to_buffer	;wreg free
 32884  005694  D00D               	goto	L43
 32885  005696                     
 32886                           ; BSR set to: 0
 32887                           ;api.c: 559: length = _parse_buffer_to_sector(data);
 32888                           
 32889                           ; BSR set to: 0
 32890  005696  C098  F054         	movff	__parse_command_long@data,__parse_buffer_to_sector@data
 32891  00569A  C099  F055         	movff	__parse_command_long@data+1,__parse_buffer_to_sector@data+1
 32892  00569E  ECF5  F038         	call	__parse_buffer_to_sector	;wreg free
 32893  0056A2  D006               	goto	L43
 32894  0056A4                     
 32895                           ; BSR set to: 0
 32896                           ;api.c: 563: length = _parse_write_buffer(data);
 32897                           
 32898                           ; BSR set to: 0
 32899  0056A4  C098  F02B         	movff	__parse_command_long@data,__parse_write_buffer@data
 32900  0056A8  C099  F02C         	movff	__parse_command_long@data+1,__parse_write_buffer@data+1
 32901  0056AC  EC93  F033         	call	__parse_write_buffer	;wreg free
 32902  0056B0                     L43:
 32903  0056B0  0100               	movlb	0	; () banked
 32904  0056B2  6F9A               	movwf	__parse_command_long@length& (0+255),b
 32905                           
 32906                           ; BSR set to: 0
 32907                           ;api.c: 565: }
 32908                           
 32909                           ;api.c: 564: break;
 32910  0056B4  D023               	goto	l2796
 32911  0056B6                     l2794:
 32912                           
 32913                           ; BSR set to: 0
 32914                           
 32915                           ; BSR set to: 0
 32916  0056B6  C098  FFD9         	movff	__parse_command_long@data,fsr2l
 32917  0056BA  C099  FFDA         	movff	__parse_command_long@data+1,fsr2h
 32918  0056BE  50DF               	movf	indf2,w,c
 32919                           
 32920                           ; Switch size 1, requested type "space"
 32921                           ; Number of cases is 10, Range of values is 80 to 89
 32922                           ; switch strategies available:
 32923                           ; Name         Instructions Cycles
 32924                           ; simple_byte           31    16 (average)
 32925                           ;	Chosen strategy is simple_byte
 32926  0056C0  0A50               	xorlw	80	; case 80
 32927  0056C2  B4D8               	btfsc	status,2,c
 32928  0056C4  D7B0               	goto	l2795
 32929  0056C6  0A01               	xorlw	1	; case 81
 32930  0056C8  B4D8               	btfsc	status,2,c
 32931  0056CA  D7B4               	goto	l2797
 32932  0056CC  0A03               	xorlw	3	; case 82
 32933  0056CE  B4D8               	btfsc	status,2,c
 32934  0056D0  D7B8               	goto	l2798
 32935  0056D2  0A01               	xorlw	1	; case 83
 32936  0056D4  B4D8               	btfsc	status,2,c
 32937  0056D6  D7BC               	goto	l2799
 32938  0056D8  0A07               	xorlw	7	; case 84
 32939  0056DA  B4D8               	btfsc	status,2,c
 32940  0056DC  D7C0               	goto	l2800
 32941  0056DE  0A01               	xorlw	1	; case 85
 32942  0056E0  B4D8               	btfsc	status,2,c
 32943  0056E2  D7C4               	goto	l2801
 32944  0056E4  0A03               	xorlw	3	; case 86
 32945  0056E6  B4D8               	btfsc	status,2,c
 32946  0056E8  D7C8               	goto	l2802
 32947  0056EA  0A01               	xorlw	1	; case 87
 32948  0056EC  B4D8               	btfsc	status,2,c
 32949  0056EE  D7CC               	goto	l2803
 32950  0056F0  0A0F               	xorlw	15	; case 88
 32951  0056F2  B4D8               	btfsc	status,2,c
 32952  0056F4  D7D0               	goto	l2804
 32953  0056F6  0A01               	xorlw	1	; case 89
 32954  0056F8  B4D8               	btfsc	status,2,c
 32955  0056FA  D7D4               	goto	l2805
 32956  0056FC                     l2796:
 32957                           
 32958                           ; BSR set to: 0
 32959                           ;api.c: 567: return length;
 32960                           
 32961                           ; BSR set to: 0
 32962  0056FC  519A               	movf	__parse_command_long@length& (0+255),w,b
 32963  0056FE  0012               	return	
 32964  005700                     __end_of__parse_command_long:
 32965                           	opt stack 0
 32966                           tosu	equ	0xFFF
 32967                           tosh	equ	0xFFE
 32968                           tosl	equ	0xFFD
 32969                           pclath	equ	0xFFA
 32970                           tblptru	equ	0xFF8
 32971                           tblptrh	equ	0xFF7
 32972                           tblptrl	equ	0xFF6
 32973                           tablat	equ	0xFF5
 32974                           prodh	equ	0xFF4
 32975                           prodl	equ	0xFF3
 32976                           intcon	equ	0xFF2
 32977                           intcon2	equ	0xFF1
 32978                           intcon3	equ	0xFF0
 32979                           indf0	equ	0xFEF
 32980                           postinc0	equ	0xFEE
 32981                           fsr0h	equ	0xFEA
 32982                           fsr0l	equ	0xFE9
 32983                           wreg	equ	0xFE8
 32984                           indf1	equ	0xFE7
 32985                           postdec1	equ	0xFE5
 32986                           plusw1	equ	0xFE3
 32987                           fsr1h	equ	0xFE2
 32988                           fsr1l	equ	0xFE1
 32989                           indf2	equ	0xFDF
 32990                           postinc2	equ	0xFDE
 32991                           postdec2	equ	0xFDD
 32992                           plusw2	equ	0xFDB
 32993                           fsr2h	equ	0xFDA
 32994                           fsr2l	equ	0xFD9
 32995                           status	equ	0xFD8
 32996                           
 32997 ;; *************** function __parse_write_buffer *****************
 32998 ;; Defined at:
 32999 ;;		line 739 in file "api.c"
 33000 ;; Parameters:    Size  Location     Type
 33001 ;;  data            2   42[COMRAM] PTR unsigned char 
 33002 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33003 ;; Auto vars:     Size  Location     Type
 33004 ;;  number_of_by    2   47[COMRAM] unsigned int 
 33005 ;;  start_byte      2   45[COMRAM] unsigned int 
 33006 ;; Return value:  Size  Location     Type
 33007 ;;                  1    wreg      unsigned char 
 33008 ;; Registers used:
 33009 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33010 ;; Tracked objects:
 33011 ;;		On entry : 0/0
 33012 ;;		On exit  : 0/0
 33013 ;;		Unchanged: 0/0
 33014 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33015 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33016 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33017 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33018 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33019 ;;Total ram usage:        7 bytes
 33020 ;; Hardware stack levels used:    1
 33021 ;; Hardware stack levels required when called:    6
 33022 ;; This function calls:
 33023 ;;		_fat_write_to_buffer
 33024 ;; This function is called by:
 33025 ;;		__parse_command_long
 33026 ;; This function uses a non-reentrant model
 33027 ;;
 33028                           
 33029                           	psect	text165
 33030  006726                     __ptext165:
 33031                           	opt stack 0
 33032  006726                     __parse_write_buffer:
 33033                           	opt stack 22
 33034                           
 33035                           ;api.c: 741: uint16_t start_byte;;api.c: 742: uint16_t number_of_bytes;;api.c: 745: if((
      +                          data[0]!=COMMAND_WRITE_BUFFER) || (data[4]!=0xE2) || (data[5]!=0x30))
 33036                           
 33037                           ; BSR set to: 0
 33038                           ;incstack = 0
 33039  006726  C02B  FFD9         	movff	__parse_write_buffer@data,fsr2l
 33040  00672A  C02C  FFDA         	movff	__parse_write_buffer@data+1,fsr2h
 33041  00672E  0E59               	movlw	89
 33042  006730  18DE               	xorwf	postinc2,w,c
 33043  006732  A4D8               	btfss	status,2,c
 33044  006734  D014               	goto	u11110
 33045  006736  EE20 F004          	lfsr	2,4
 33046  00673A  502B               	movf	__parse_write_buffer@data,w,c
 33047  00673C  26D9               	addwf	fsr2l,f,c
 33048  00673E  502C               	movf	__parse_write_buffer@data+1,w,c
 33049  006740  22DA               	addwfc	fsr2h,f,c
 33050  006742  0EE2               	movlw	226
 33051  006744  18DE               	xorwf	postinc2,w,c
 33052  006746  A4D8               	btfss	status,2,c
 33053  006748  D00A               	goto	u11110
 33054  00674A  EE20 F005          	lfsr	2,5
 33055  00674E  502B               	movf	__parse_write_buffer@data,w,c
 33056  006750  26D9               	addwf	fsr2l,f,c
 33057  006752  502C               	movf	__parse_write_buffer@data+1,w,c
 33058  006754  22DA               	addwfc	fsr2h,f,c
 33059  006756  0E30               	movlw	48
 33060  006758  18DE               	xorwf	postinc2,w,c
 33061  00675A  B4D8               	btfsc	status,2,c
 33062  00675C  D002               	goto	l2863
 33063  00675E                     u11110:
 33064                           
 33065                           ;api.c: 746: {;api.c: 748: return 65;
 33066  00675E  0E41               	movlw	65
 33067  006760  0012               	return	
 33068  006762                     l2863:
 33069                           
 33070                           ;api.c: 749: };api.c: 752: start_byte |= data[1];
 33071  006762  EE20 F001          	lfsr	2,1
 33072  006766  502B               	movf	__parse_write_buffer@data,w,c
 33073  006768  26D9               	addwf	fsr2l,f,c
 33074  00676A  502C               	movf	__parse_write_buffer@data+1,w,c
 33075  00676C  22DA               	addwfc	fsr2h,f,c
 33076  00676E  50DF               	movf	indf2,w,c
 33077  006770  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 33078  006772  502D               	movf	??__parse_write_buffer,w,c
 33079  006774  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 33080                           
 33081                           ;api.c: 753: start_byte <<= 8;
 33082  006776  502E               	movf	__parse_write_buffer@start_byte,w,c
 33083  006778  6E2F               	movwf	__parse_write_buffer@start_byte+1,c
 33084  00677A  6A2E               	clrf	__parse_write_buffer@start_byte,c
 33085                           
 33086                           ;api.c: 754: start_byte |= data[2];
 33087  00677C  EE20 F002          	lfsr	2,2
 33088  006780  502B               	movf	__parse_write_buffer@data,w,c
 33089  006782  26D9               	addwf	fsr2l,f,c
 33090  006784  502C               	movf	__parse_write_buffer@data+1,w,c
 33091  006786  22DA               	addwfc	fsr2h,f,c
 33092  006788  50DF               	movf	indf2,w,c
 33093  00678A  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 33094  00678C  502D               	movf	??__parse_write_buffer,w,c
 33095  00678E  122E               	iorwf	__parse_write_buffer@start_byte,f,c
 33096                           
 33097                           ;api.c: 757: number_of_bytes = data[3];
 33098  006790  EE20 F003          	lfsr	2,3
 33099  006794  502B               	movf	__parse_write_buffer@data,w,c
 33100  006796  26D9               	addwf	fsr2l,f,c
 33101  006798  502C               	movf	__parse_write_buffer@data+1,w,c
 33102  00679A  22DA               	addwfc	fsr2h,f,c
 33103  00679C  50DF               	movf	indf2,w,c
 33104  00679E  6E2D               	movwf	??__parse_write_buffer& (0+255),c
 33105  0067A0  502D               	movf	??__parse_write_buffer,w,c
 33106  0067A2  6E30               	movwf	__parse_write_buffer@number_of_bytes,c
 33107  0067A4  6A31               	clrf	__parse_write_buffer@number_of_bytes+1,c
 33108                           
 33109                           ;api.c: 760: fat_write_to_buffer(start_byte, number_of_bytes, &data[6]);
 33110  0067A6  C02E  F025         	movff	__parse_write_buffer@start_byte,fat_write_to_buffer@start
 33111  0067AA  C02F  F026         	movff	__parse_write_buffer@start_byte+1,fat_write_to_buffer@start+1
 33112  0067AE  C030  F027         	movff	__parse_write_buffer@number_of_bytes,fat_write_to_buffer@length
 33113  0067B2  C031  F028         	movff	__parse_write_buffer@number_of_bytes+1,fat_write_to_buffer@length+1
 33114  0067B6  0E06               	movlw	6
 33115  0067B8  242B               	addwf	__parse_write_buffer@data,w,c
 33116  0067BA  6E29               	movwf	fat_write_to_buffer@data,c
 33117  0067BC  0E00               	movlw	0
 33118  0067BE  202C               	addwfc	__parse_write_buffer@data+1,w,c
 33119  0067C0  6E2A               	movwf	fat_write_to_buffer@data+1,c
 33120  0067C2  ECB1  F046         	call	_fat_write_to_buffer	;wreg free
 33121                           
 33122                           ;api.c: 763: return 6 + number_of_bytes;
 33123  0067C6  5030               	movf	__parse_write_buffer@number_of_bytes,w,c
 33124  0067C8  0F06               	addlw	6
 33125  0067CA  0012               	return	
 33126  0067CC                     __end_of__parse_write_buffer:
 33127                           	opt stack 0
 33128                           tosu	equ	0xFFF
 33129                           tosh	equ	0xFFE
 33130                           tosl	equ	0xFFD
 33131                           pclath	equ	0xFFA
 33132                           tblptru	equ	0xFF8
 33133                           tblptrh	equ	0xFF7
 33134                           tblptrl	equ	0xFF6
 33135                           tablat	equ	0xFF5
 33136                           prodh	equ	0xFF4
 33137                           prodl	equ	0xFF3
 33138                           intcon	equ	0xFF2
 33139                           intcon2	equ	0xFF1
 33140                           intcon3	equ	0xFF0
 33141                           indf0	equ	0xFEF
 33142                           postinc0	equ	0xFEE
 33143                           fsr0h	equ	0xFEA
 33144                           fsr0l	equ	0xFE9
 33145                           wreg	equ	0xFE8
 33146                           indf1	equ	0xFE7
 33147                           postdec1	equ	0xFE5
 33148                           plusw1	equ	0xFE3
 33149                           fsr1h	equ	0xFE2
 33150                           fsr1l	equ	0xFE1
 33151                           indf2	equ	0xFDF
 33152                           postinc2	equ	0xFDE
 33153                           postdec2	equ	0xFDD
 33154                           plusw2	equ	0xFDB
 33155                           fsr2h	equ	0xFDA
 33156                           fsr2l	equ	0xFD9
 33157                           status	equ	0xFD8
 33158                           
 33159 ;; *************** function _fat_write_to_buffer *****************
 33160 ;; Defined at:
 33161 ;;		line 1439 in file "fat16.c"
 33162 ;; Parameters:    Size  Location     Type
 33163 ;;  start           2   36[COMRAM] unsigned int 
 33164 ;;  length          2   38[COMRAM] unsigned int 
 33165 ;;  data            2   40[COMRAM] PTR unsigned char 
 33166 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33167 ;; Auto vars:     Size  Location     Type
 33168 ;;		None
 33169 ;; Return value:  Size  Location     Type
 33170 ;;                  1    wreg      void 
 33171 ;; Registers used:
 33172 ;;		wreg, status,2, status,0, cstack
 33173 ;; Tracked objects:
 33174 ;;		On entry : 0/0
 33175 ;;		On exit  : 0/0
 33176 ;;		Unchanged: 0/0
 33177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33178 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33179 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33180 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33181 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33182 ;;Total ram usage:        6 bytes
 33183 ;; Hardware stack levels used:    1
 33184 ;; Hardware stack levels required when called:    5
 33185 ;; This function calls:
 33186 ;;		_flash_write_to_buffer
 33187 ;; This function is called by:
 33188 ;;		__parse_write_buffer
 33189 ;; This function uses a non-reentrant model
 33190 ;;
 33191                           
 33192                           	psect	text166
 33193  008D62                     __ptext166:
 33194                           	opt stack 0
 33195  008D62                     _fat_write_to_buffer:
 33196                           	opt stack 22
 33197                           
 33198                           ;fat16.c: 1441: flash_write_to_buffer(start, length, data);
 33199                           
 33200                           ;incstack = 0
 33201  008D62  C025  F01F         	movff	fat_write_to_buffer@start,flash_write_to_buffer@start
 33202  008D66  C026  F020         	movff	fat_write_to_buffer@start+1,flash_write_to_buffer@start+1
 33203  008D6A  C027  F021         	movff	fat_write_to_buffer@length,flash_write_to_buffer@length
 33204  008D6E  C028  F022         	movff	fat_write_to_buffer@length+1,flash_write_to_buffer@length+1
 33205  008D72  C029  F023         	movff	fat_write_to_buffer@data,flash_write_to_buffer@data
 33206  008D76  C02A  F024         	movff	fat_write_to_buffer@data+1,flash_write_to_buffer@data+1
 33207  008D7A  ECF8  F044         	call	_flash_write_to_buffer	;wreg free
 33208  008D7E  0012               	return		;funcret
 33209  008D80                     __end_of_fat_write_to_buffer:
 33210                           	opt stack 0
 33211                           tosu	equ	0xFFF
 33212                           tosh	equ	0xFFE
 33213                           tosl	equ	0xFFD
 33214                           pclath	equ	0xFFA
 33215                           tblptru	equ	0xFF8
 33216                           tblptrh	equ	0xFF7
 33217                           tblptrl	equ	0xFF6
 33218                           tablat	equ	0xFF5
 33219                           prodh	equ	0xFF4
 33220                           prodl	equ	0xFF3
 33221                           intcon	equ	0xFF2
 33222                           intcon2	equ	0xFF1
 33223                           intcon3	equ	0xFF0
 33224                           indf0	equ	0xFEF
 33225                           postinc0	equ	0xFEE
 33226                           fsr0h	equ	0xFEA
 33227                           fsr0l	equ	0xFE9
 33228                           wreg	equ	0xFE8
 33229                           indf1	equ	0xFE7
 33230                           postdec1	equ	0xFE5
 33231                           plusw1	equ	0xFE3
 33232                           fsr1h	equ	0xFE2
 33233                           fsr1l	equ	0xFE1
 33234                           indf2	equ	0xFDF
 33235                           postinc2	equ	0xFDE
 33236                           postdec2	equ	0xFDD
 33237                           plusw2	equ	0xFDB
 33238                           fsr2h	equ	0xFDA
 33239                           fsr2l	equ	0xFD9
 33240                           status	equ	0xFD8
 33241                           
 33242 ;; *************** function _flash_write_to_buffer *****************
 33243 ;; Defined at:
 33244 ;;		line 556 in file "flash.c"
 33245 ;; Parameters:    Size  Location     Type
 33246 ;;  start           2   30[COMRAM] unsigned int 
 33247 ;;  length          2   32[COMRAM] unsigned int 
 33248 ;;  data            2   34[COMRAM] PTR unsigned char 
 33249 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33250 ;; Auto vars:     Size  Location     Type
 33251 ;;		None
 33252 ;; Return value:  Size  Location     Type
 33253 ;;                  1    wreg      void 
 33254 ;; Registers used:
 33255 ;;		wreg, status,2, status,0, cstack
 33256 ;; Tracked objects:
 33257 ;;		On entry : 0/0
 33258 ;;		On exit  : 0/0
 33259 ;;		Unchanged: 0/0
 33260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33261 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33262 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33263 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33264 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33265 ;;Total ram usage:        6 bytes
 33266 ;; Hardware stack levels used:    1
 33267 ;; Hardware stack levels required when called:    4
 33268 ;; This function calls:
 33269 ;;		__flash_write_to_buffer
 33270 ;;		_spi_set_configuration
 33271 ;; This function is called by:
 33272 ;;		_fat_write_to_buffer
 33273 ;; This function uses a non-reentrant model
 33274 ;;
 33275                           
 33276                           	psect	text167
 33277  0089F0                     __ptext167:
 33278                           	opt stack 0
 33279  0089F0                     _flash_write_to_buffer:
 33280                           	opt stack 22
 33281                           
 33282                           ;flash.c: 559: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 33283                           
 33284                           ;incstack = 0
 33285  0089F0  0E00               	movlw	0
 33286  0089F2  EC62  F023         	call	_spi_set_configuration
 33287                           
 33288                           ;flash.c: 561: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_2);
 33289  0089F6  C01F  F014         	movff	flash_write_to_buffer@start,__flash_write_to_buffer@start
 33290  0089FA  C020  F015         	movff	flash_write_to_buffer@start+1,__flash_write_to_buffer@start+1
 33291  0089FE  C023  F016         	movff	flash_write_to_buffer@data,__flash_write_to_buffer@data
 33292  008A02  C024  F017         	movff	flash_write_to_buffer@data+1,__flash_write_to_buffer@data+1
 33293  008A06  C021  F018         	movff	flash_write_to_buffer@length,__flash_write_to_buffer@data_length
 33294  008A0A  C022  F019         	movff	flash_write_to_buffer@length+1,__flash_write_to_buffer@data_length+1
 33295  008A0E  0E01               	movlw	1
 33296  008A10  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 33297  008A12  EC61  F041         	call	__flash_write_to_buffer	;wreg free
 33298                           
 33299                           ;flash.c: 564: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 33300  008A16  0E01               	movlw	1
 33301  008A18  EC62  F023         	call	_spi_set_configuration
 33302  008A1C  0012               	return		;funcret
 33303  008A1E                     __end_of_flash_write_to_buffer:
 33304                           	opt stack 0
 33305                           tosu	equ	0xFFF
 33306                           tosh	equ	0xFFE
 33307                           tosl	equ	0xFFD
 33308                           pclath	equ	0xFFA
 33309                           tblptru	equ	0xFF8
 33310                           tblptrh	equ	0xFF7
 33311                           tblptrl	equ	0xFF6
 33312                           tablat	equ	0xFF5
 33313                           prodh	equ	0xFF4
 33314                           prodl	equ	0xFF3
 33315                           intcon	equ	0xFF2
 33316                           intcon2	equ	0xFF1
 33317                           intcon3	equ	0xFF0
 33318                           indf0	equ	0xFEF
 33319                           postinc0	equ	0xFEE
 33320                           fsr0h	equ	0xFEA
 33321                           fsr0l	equ	0xFE9
 33322                           wreg	equ	0xFE8
 33323                           indf1	equ	0xFE7
 33324                           postdec1	equ	0xFE5
 33325                           plusw1	equ	0xFE3
 33326                           fsr1h	equ	0xFE2
 33327                           fsr1l	equ	0xFE1
 33328                           indf2	equ	0xFDF
 33329                           postinc2	equ	0xFDE
 33330                           postdec2	equ	0xFDD
 33331                           plusw2	equ	0xFDB
 33332                           fsr2h	equ	0xFDA
 33333                           fsr2l	equ	0xFD9
 33334                           status	equ	0xFD8
 33335                           
 33336 ;; *************** function __parse_sector_to_buffer *****************
 33337 ;; Defined at:
 33338 ;;		line 697 in file "api.c"
 33339 ;; Parameters:    Size  Location     Type
 33340 ;;  data            2   83[COMRAM] PTR unsigned char 
 33341 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33342 ;; Auto vars:     Size  Location     Type
 33343 ;;  sector          2   86[COMRAM] unsigned int 
 33344 ;; Return value:  Size  Location     Type
 33345 ;;                  1    wreg      unsigned char 
 33346 ;; Registers used:
 33347 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33348 ;; Tracked objects:
 33349 ;;		On entry : 0/0
 33350 ;;		On exit  : 0/0
 33351 ;;		Unchanged: 0/0
 33352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33353 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33355 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33356 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33357 ;;Total ram usage:        5 bytes
 33358 ;; Hardware stack levels used:    1
 33359 ;; Hardware stack levels required when called:    8
 33360 ;; This function calls:
 33361 ;;		_fat_copy_sector_to_buffer
 33362 ;; This function is called by:
 33363 ;;		__parse_command_long
 33364 ;; This function uses a non-reentrant model
 33365 ;;
 33366                           
 33367                           	psect	text168
 33368  007162                     __ptext168:
 33369                           	opt stack 0
 33370  007162                     __parse_sector_to_buffer:
 33371                           	opt stack 20
 33372                           
 33373                           ;api.c: 700: uint16_t sector;;api.c: 702: if((data[0]!=COMMAND_SECTOR_TO_BUFFER) || (dat
      +                          a[4]!=0x1B) || (data[5]!=0x35))
 33374                           
 33375                           ;incstack = 0
 33376  007162  C054  FFD9         	movff	__parse_sector_to_buffer@data,fsr2l
 33377  007166  C055  FFDA         	movff	__parse_sector_to_buffer@data+1,fsr2h
 33378  00716A  0E57               	movlw	87
 33379  00716C  18DE               	xorwf	postinc2,w,c
 33380  00716E  A4D8               	btfss	status,2,c
 33381  007170  D014               	goto	u11050
 33382  007172  EE20 F004          	lfsr	2,4
 33383  007176  5054               	movf	__parse_sector_to_buffer@data,w,c
 33384  007178  26D9               	addwf	fsr2l,f,c
 33385  00717A  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33386  00717C  22DA               	addwfc	fsr2h,f,c
 33387  00717E  0E1B               	movlw	27
 33388  007180  18DE               	xorwf	postinc2,w,c
 33389  007182  A4D8               	btfss	status,2,c
 33390  007184  D00A               	goto	u11050
 33391  007186  EE20 F005          	lfsr	2,5
 33392  00718A  5054               	movf	__parse_sector_to_buffer@data,w,c
 33393  00718C  26D9               	addwf	fsr2l,f,c
 33394  00718E  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33395  007190  22DA               	addwfc	fsr2h,f,c
 33396  007192  0E35               	movlw	53
 33397  007194  18DE               	xorwf	postinc2,w,c
 33398  007196  B4D8               	btfsc	status,2,c
 33399  007198  D002               	goto	l2851
 33400  00719A                     u11050:
 33401                           
 33402                           ;api.c: 703: {;api.c: 704: return 6;
 33403  00719A  0E06               	movlw	6
 33404  00719C  0012               	return	
 33405  00719E                     l2851:
 33406                           
 33407                           ;api.c: 705: };api.c: 708: sector |= data[2];
 33408  00719E  EE20 F002          	lfsr	2,2
 33409  0071A2  5054               	movf	__parse_sector_to_buffer@data,w,c
 33410  0071A4  26D9               	addwf	fsr2l,f,c
 33411  0071A6  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33412  0071A8  22DA               	addwfc	fsr2h,f,c
 33413  0071AA  50DF               	movf	indf2,w,c
 33414  0071AC  6E56               	movwf	??__parse_sector_to_buffer& (0+255),c
 33415  0071AE  5056               	movf	??__parse_sector_to_buffer,w,c
 33416  0071B0  1257               	iorwf	__parse_sector_to_buffer@sector,f,c
 33417                           
 33418                           ;api.c: 709: sector <<= 8;
 33419  0071B2  5057               	movf	__parse_sector_to_buffer@sector,w,c
 33420  0071B4  6E58               	movwf	__parse_sector_to_buffer@sector+1,c
 33421  0071B6  6A57               	clrf	__parse_sector_to_buffer@sector,c
 33422                           
 33423                           ;api.c: 710: sector |= data[3];
 33424  0071B8  EE20 F003          	lfsr	2,3
 33425  0071BC  5054               	movf	__parse_sector_to_buffer@data,w,c
 33426  0071BE  26D9               	addwf	fsr2l,f,c
 33427  0071C0  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33428  0071C2  22DA               	addwfc	fsr2h,f,c
 33429  0071C4  50DF               	movf	indf2,w,c
 33430  0071C6  6E56               	movwf	??__parse_sector_to_buffer& (0+255),c
 33431  0071C8  5056               	movf	??__parse_sector_to_buffer,w,c
 33432  0071CA  1257               	iorwf	__parse_sector_to_buffer@sector,f,c
 33433                           
 33434                           ;api.c: 713: fat_copy_sector_to_buffer(data[1], sector);
 33435  0071CC  C057  F043         	movff	__parse_sector_to_buffer@sector,fat_copy_sector_to_buffer@sector
 33436  0071D0  C058  F044         	movff	__parse_sector_to_buffer@sector+1,fat_copy_sector_to_buffer@sector+1
 33437  0071D4  EE20 F001          	lfsr	2,1
 33438  0071D8  5054               	movf	__parse_sector_to_buffer@data,w,c
 33439  0071DA  26D9               	addwf	fsr2l,f,c
 33440  0071DC  5055               	movf	__parse_sector_to_buffer@data+1,w,c
 33441  0071DE  22DA               	addwfc	fsr2h,f,c
 33442  0071E0  50DF               	movf	indf2,w,c
 33443  0071E2  ECE5  F031         	call	_fat_copy_sector_to_buffer
 33444                           
 33445                           ;api.c: 715: return 6;
 33446  0071E6  0E06               	movlw	6
 33447  0071E8  0012               	return	
 33448  0071EA                     __end_of__parse_sector_to_buffer:
 33449                           	opt stack 0
 33450                           tosu	equ	0xFFF
 33451                           tosh	equ	0xFFE
 33452                           tosl	equ	0xFFD
 33453                           pclath	equ	0xFFA
 33454                           tblptru	equ	0xFF8
 33455                           tblptrh	equ	0xFF7
 33456                           tblptrl	equ	0xFF6
 33457                           tablat	equ	0xFF5
 33458                           prodh	equ	0xFF4
 33459                           prodl	equ	0xFF3
 33460                           intcon	equ	0xFF2
 33461                           intcon2	equ	0xFF1
 33462                           intcon3	equ	0xFF0
 33463                           indf0	equ	0xFEF
 33464                           postinc0	equ	0xFEE
 33465                           fsr0h	equ	0xFEA
 33466                           fsr0l	equ	0xFE9
 33467                           wreg	equ	0xFE8
 33468                           indf1	equ	0xFE7
 33469                           postdec1	equ	0xFE5
 33470                           plusw1	equ	0xFE3
 33471                           fsr1h	equ	0xFE2
 33472                           fsr1l	equ	0xFE1
 33473                           indf2	equ	0xFDF
 33474                           postinc2	equ	0xFDE
 33475                           postdec2	equ	0xFDD
 33476                           plusw2	equ	0xFDB
 33477                           fsr2h	equ	0xFDA
 33478                           fsr2l	equ	0xFD9
 33479                           status	equ	0xFD8
 33480                           
 33481 ;; *************** function _fat_copy_sector_to_buffer *****************
 33482 ;; Defined at:
 33483 ;;		line 1356 in file "fat16.c"
 33484 ;; Parameters:    Size  Location     Type
 33485 ;;  file_number     1    wreg     unsigned char 
 33486 ;;  sector          2   66[COMRAM] unsigned int 
 33487 ;; Auto vars:     Size  Location     Type
 33488 ;;  file_number     1   82[COMRAM] unsigned char 
 33489 ;;  file_size       4   72[COMRAM] unsigned long 
 33490 ;;  cluster         2   80[COMRAM] unsigned int 
 33491 ;;  physical_sec    2   78[COMRAM] unsigned int 
 33492 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 33493 ;; Return value:  Size  Location     Type
 33494 ;;                  1    wreg      unsigned char 
 33495 ;; Registers used:
 33496 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33497 ;; Tracked objects:
 33498 ;;		On entry : 0/0
 33499 ;;		On exit  : 0/0
 33500 ;;		Unchanged: 0/0
 33501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33502 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33503 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33504 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33505 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33506 ;;Total ram usage:       17 bytes
 33507 ;; Hardware stack levels used:    1
 33508 ;; Hardware stack levels required when called:    7
 33509 ;; This function calls:
 33510 ;;		__data_sector_from_cluster
 33511 ;;		__find_nth_cluster
 33512 ;;		__get_first_cluster
 33513 ;;		__root_is_available
 33514 ;;		_fat_get_file_size
 33515 ;;		_flash_copy_page_to_buffer
 33516 ;; This function is called by:
 33517 ;;		__parse_sector_to_buffer
 33518 ;; This function uses a non-reentrant model
 33519 ;;
 33520                           
 33521                           	psect	text169
 33522  0063CA                     __ptext169:
 33523                           	opt stack 0
 33524  0063CA                     _fat_copy_sector_to_buffer:
 33525                           	opt stack 20
 33526                           
 33527                           ;incstack = 0
 33528                           ;fat_copy_sector_to_buffer@file_number stored from wreg
 33529  0063CA  6E53               	movwf	fat_copy_sector_to_buffer@file_number,c
 33530                           
 33531                           ;fat16.c: 1358: uint32_t file_size;;fat16.c: 1359: uint16_t number_of_clusters;;fat16.c:
      +                           1360: uint16_t cluster;;fat16.c: 1361: uint16_t physical_sector;;fat16.c: 1364: if(_roo
      +                          t_is_available(file_number))
 33532  0063CC  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33533  0063CE  ECA3  F03D         	call	__root_is_available
 33534  0063D2  0900               	iorlw	0
 33535  0063D4  A4D8               	btfss	status,2,c
 33536  0063D6  0012               	return	
 33537                           
 33538                           ;fat16.c: 1368: };fat16.c: 1371: file_size = fat_get_file_size(file_number);
 33539                           
 33540                           ;fat16.c: 1365: {;fat16.c: 1367: return 0xFF;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33541  0063D8  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33542  0063DA  EC0B  F03C         	call	_fat_get_file_size
 33543  0063DE  C036  F049         	movff	?_fat_get_file_size,fat_copy_sector_to_buffer@file_size
 33544  0063E2  C037  F04A         	movff	?_fat_get_file_size+1,fat_copy_sector_to_buffer@file_size+1
 33545  0063E6  C038  F04B         	movff	?_fat_get_file_size+2,fat_copy_sector_to_buffer@file_size+2
 33546  0063EA  C039  F04C         	movff	?_fat_get_file_size+3,fat_copy_sector_to_buffer@file_size+3
 33547                           
 33548                           ;fat16.c: 1374: number_of_clusters = (uint16_t) ((file_size + 512 - 1) >> 9);
 33549  0063EE  0EFF               	movlw	255
 33550  0063F0  2449               	addwf	fat_copy_sector_to_buffer@file_size,w,c
 33551  0063F2  6E45               	movwf	??_fat_copy_sector_to_buffer& (0+255),c
 33552  0063F4  0E01               	movlw	1
 33553  0063F6  204A               	addwfc	fat_copy_sector_to_buffer@file_size+1,w,c
 33554  0063F8  6E46               	movwf	(??_fat_copy_sector_to_buffer+1)& (0+255),c
 33555  0063FA  0E00               	movlw	0
 33556  0063FC  204B               	addwfc	fat_copy_sector_to_buffer@file_size+2,w,c
 33557  0063FE  6E47               	movwf	(??_fat_copy_sector_to_buffer+2)& (0+255),c
 33558  006400  0E00               	movlw	0
 33559  006402  204C               	addwfc	fat_copy_sector_to_buffer@file_size+3,w,c
 33560  006404  6E48               	movwf	(??_fat_copy_sector_to_buffer+3)& (0+255),c
 33561  006406  0E0A               	movlw	10
 33562  006408  D005               	goto	u10470
 33563  00640A                     u10475:
 33564  00640A  90D8               	bcf	status,0,c
 33565  00640C  3248               	rrcf	??_fat_copy_sector_to_buffer+3,f,c
 33566  00640E  3247               	rrcf	??_fat_copy_sector_to_buffer+2,f,c
 33567  006410  3246               	rrcf	??_fat_copy_sector_to_buffer+1,f,c
 33568  006412  3245               	rrcf	??_fat_copy_sector_to_buffer,f,c
 33569  006414                     u10470:
 33570  006414  2EE8               	decfsz	wreg,f,c
 33571  006416  D7F9               	goto	u10475
 33572  006418  C045  F04D         	movff	??_fat_copy_sector_to_buffer,fat_copy_sector_to_buffer@number_of_clusters
 33573  00641C  C046  F04E         	movff	??_fat_copy_sector_to_buffer+1,fat_copy_sector_to_buffer@number_of_clusters+1
 33574                           
 33575                           ;fat16.c: 1375: if(sector > number_of_clusters)
 33576  006420  5043               	movf	fat_copy_sector_to_buffer@sector,w,c
 33577  006422  5C4D               	subwf	fat_copy_sector_to_buffer@number_of_clusters,w,c
 33578  006424  5044               	movf	fat_copy_sector_to_buffer@sector+1,w,c
 33579  006426  584E               	subwfb	fat_copy_sector_to_buffer@number_of_clusters+1,w,c
 33580  006428  A0D8               	btfss	status,0,c
 33581  00642A  0012               	return	
 33582                           
 33583                           ;fat16.c: 1379: };fat16.c: 1382: cluster = _get_first_cluster(file_number);
 33584                           
 33585                           ;fat16.c: 1376: {;fat16.c: 1378: return 0xFE;;	Return value of _fat_copy_sector_to_buffe
      +                          r is never used
 33586  00642C  5053               	movf	fat_copy_sector_to_buffer@file_number,w,c
 33587  00642E  EC95  F040         	call	__get_first_cluster
 33588  006432  C030  F051         	movff	?__get_first_cluster,fat_copy_sector_to_buffer@cluster
 33589  006436  C031  F052         	movff	?__get_first_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33590                           
 33591                           ;fat16.c: 1383: cluster = _find_nth_cluster(cluster, sector);
 33592  00643A  C051  F038         	movff	fat_copy_sector_to_buffer@cluster,__find_nth_cluster@cluster
 33593  00643E  C052  F039         	movff	fat_copy_sector_to_buffer@cluster+1,__find_nth_cluster@cluster+1
 33594  006442  C043  F03A         	movff	fat_copy_sector_to_buffer@sector,__find_nth_cluster@n
 33595  006446  C044  F03B         	movff	fat_copy_sector_to_buffer@sector+1,__find_nth_cluster@n+1
 33596  00644A  ECCB  F035         	call	__find_nth_cluster	;wreg free
 33597  00644E  C038  F051         	movff	?__find_nth_cluster,fat_copy_sector_to_buffer@cluster
 33598  006452  C039  F052         	movff	?__find_nth_cluster+1,fat_copy_sector_to_buffer@cluster+1
 33599                           
 33600                           ;fat16.c: 1386: physical_sector = _data_sector_from_cluster(cluster);
 33601  006456  C051  F001         	movff	fat_copy_sector_to_buffer@cluster,__data_sector_from_cluster@fat_cluster
 33602  00645A  C052  F002         	movff	fat_copy_sector_to_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 33603  00645E  ECB3  F047         	call	__data_sector_from_cluster	;wreg free
 33604  006462  C001  F04F         	movff	?__data_sector_from_cluster,fat_copy_sector_to_buffer@physical_sector
 33605  006466  C002  F050         	movff	?__data_sector_from_cluster+1,fat_copy_sector_to_buffer@physical_sector+1
 33606                           
 33607                           ;fat16.c: 1389: flash_copy_page_to_buffer(physical_sector);
 33608  00646A  C04F  F01E         	movff	fat_copy_sector_to_buffer@physical_sector,flash_copy_page_to_buffer@page
 33609  00646E  C050  F01F         	movff	fat_copy_sector_to_buffer@physical_sector+1,flash_copy_page_to_buffer@page+1
 33610  006472  ECC0  F046         	call	_flash_copy_page_to_buffer	;wreg free
 33611  006476  0012               	return	
 33612  006478                     __end_of_fat_copy_sector_to_buffer:
 33613                           	opt stack 0
 33614                           tosu	equ	0xFFF
 33615                           tosh	equ	0xFFE
 33616                           tosl	equ	0xFFD
 33617                           pclath	equ	0xFFA
 33618                           tblptru	equ	0xFF8
 33619                           tblptrh	equ	0xFF7
 33620                           tblptrl	equ	0xFF6
 33621                           tablat	equ	0xFF5
 33622                           prodh	equ	0xFF4
 33623                           prodl	equ	0xFF3
 33624                           intcon	equ	0xFF2
 33625                           intcon2	equ	0xFF1
 33626                           intcon3	equ	0xFF0
 33627                           indf0	equ	0xFEF
 33628                           postinc0	equ	0xFEE
 33629                           fsr0h	equ	0xFEA
 33630                           fsr0l	equ	0xFE9
 33631                           wreg	equ	0xFE8
 33632                           indf1	equ	0xFE7
 33633                           postdec1	equ	0xFE5
 33634                           plusw1	equ	0xFE3
 33635                           fsr1h	equ	0xFE2
 33636                           fsr1l	equ	0xFE1
 33637                           indf2	equ	0xFDF
 33638                           postinc2	equ	0xFDE
 33639                           postdec2	equ	0xFDD
 33640                           plusw2	equ	0xFDB
 33641                           fsr2h	equ	0xFDA
 33642                           fsr2l	equ	0xFD9
 33643                           status	equ	0xFD8
 33644                           
 33645 ;; *************** function _flash_copy_page_to_buffer *****************
 33646 ;; Defined at:
 33647 ;;		line 523 in file "flash.c"
 33648 ;; Parameters:    Size  Location     Type
 33649 ;;  page            2   29[COMRAM] unsigned int 
 33650 ;; Auto vars:     Size  Location     Type
 33651 ;;		None
 33652 ;; Return value:  Size  Location     Type
 33653 ;;                  1    wreg      void 
 33654 ;; Registers used:
 33655 ;;		wreg, status,2, status,0, cstack
 33656 ;; Tracked objects:
 33657 ;;		On entry : 0/0
 33658 ;;		On exit  : 0/0
 33659 ;;		Unchanged: 0/0
 33660 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33661 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33662 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33663 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33664 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33665 ;;Total ram usage:        2 bytes
 33666 ;; Hardware stack levels used:    1
 33667 ;; Hardware stack levels required when called:    4
 33668 ;; This function calls:
 33669 ;;		__flash_copy_page_to_buffer
 33670 ;;		_spi_set_configuration
 33671 ;; This function is called by:
 33672 ;;		_fat_copy_sector_to_buffer
 33673 ;; This function uses a non-reentrant model
 33674 ;;
 33675                           
 33676                           	psect	text170
 33677  008D80                     __ptext170:
 33678                           	opt stack 0
 33679  008D80                     _flash_copy_page_to_buffer:
 33680                           	opt stack 22
 33681                           
 33682                           ;flash.c: 526: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 33683                           
 33684                           ;incstack = 0
 33685  008D80  0E00               	movlw	0
 33686  008D82  EC62  F023         	call	_spi_set_configuration
 33687                           
 33688                           ;flash.c: 528: _flash_copy_page_to_buffer(page, FLASH_BUFFER_2);
 33689  008D86  C01E  F014         	movff	flash_copy_page_to_buffer@page,__flash_copy_page_to_buffer@page
 33690  008D8A  C01F  F015         	movff	flash_copy_page_to_buffer@page+1,__flash_copy_page_to_buffer@page+1
 33691  008D8E  0E01               	movlw	1
 33692  008D90  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 33693  008D92  ECBA  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 33694                           
 33695                           ;flash.c: 531: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 33696  008D96  0E01               	movlw	1
 33697  008D98  EC62  F023         	call	_spi_set_configuration
 33698  008D9C  0012               	return		;funcret
 33699  008D9E                     __end_of_flash_copy_page_to_buffer:
 33700                           	opt stack 0
 33701                           tosu	equ	0xFFF
 33702                           tosh	equ	0xFFE
 33703                           tosl	equ	0xFFD
 33704                           pclath	equ	0xFFA
 33705                           tblptru	equ	0xFF8
 33706                           tblptrh	equ	0xFF7
 33707                           tblptrl	equ	0xFF6
 33708                           tablat	equ	0xFF5
 33709                           prodh	equ	0xFF4
 33710                           prodl	equ	0xFF3
 33711                           intcon	equ	0xFF2
 33712                           intcon2	equ	0xFF1
 33713                           intcon3	equ	0xFF0
 33714                           indf0	equ	0xFEF
 33715                           postinc0	equ	0xFEE
 33716                           fsr0h	equ	0xFEA
 33717                           fsr0l	equ	0xFE9
 33718                           wreg	equ	0xFE8
 33719                           indf1	equ	0xFE7
 33720                           postdec1	equ	0xFE5
 33721                           plusw1	equ	0xFE3
 33722                           fsr1h	equ	0xFE2
 33723                           fsr1l	equ	0xFE1
 33724                           indf2	equ	0xFDF
 33725                           postinc2	equ	0xFDE
 33726                           postdec2	equ	0xFDD
 33727                           plusw2	equ	0xFDB
 33728                           fsr2h	equ	0xFDA
 33729                           fsr2l	equ	0xFD9
 33730                           status	equ	0xFD8
 33731                           
 33732 ;; *************** function __parse_format_drive *****************
 33733 ;; Defined at:
 33734 ;;		line 686 in file "api.c"
 33735 ;; Parameters:    Size  Location     Type
 33736 ;;  data            2   38[COMRAM] PTR unsigned char 
 33737 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 33738 ;; Auto vars:     Size  Location     Type
 33739 ;;		None
 33740 ;; Return value:  Size  Location     Type
 33741 ;;                  1    wreg      unsigned char 
 33742 ;; Registers used:
 33743 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33744 ;; Tracked objects:
 33745 ;;		On entry : 0/0
 33746 ;;		On exit  : 0/0
 33747 ;;		Unchanged: 0/0
 33748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33749 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33750 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33751 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33752 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33753 ;;Total ram usage:        3 bytes
 33754 ;; Hardware stack levels used:    1
 33755 ;; Hardware stack levels required when called:    6
 33756 ;; This function calls:
 33757 ;;		_fat_format
 33758 ;; This function is called by:
 33759 ;;		__parse_command_long
 33760 ;; This function uses a non-reentrant model
 33761 ;;
 33762                           
 33763                           	psect	text171
 33764  008474                     __ptext171:
 33765                           	opt stack 0
 33766  008474                     __parse_format_drive:
 33767                           	opt stack 22
 33768                           
 33769                           ;api.c: 689: if((data[0]!=COMMAND_FORMAT_DRIVE) || (data[1]!=0xDA) || (data[2]!=0x22))
 33770                           
 33771                           ;incstack = 0
 33772  008474  C027  FFD9         	movff	__parse_format_drive@data,fsr2l
 33773  008478  C028  FFDA         	movff	__parse_format_drive@data+1,fsr2h
 33774  00847C  0E56               	movlw	86
 33775  00847E  18DE               	xorwf	postinc2,w,c
 33776  008480  A4D8               	btfss	status,2,c
 33777  008482  D014               	goto	u11020
 33778  008484  EE20 F001          	lfsr	2,1
 33779  008488  5027               	movf	__parse_format_drive@data,w,c
 33780  00848A  26D9               	addwf	fsr2l,f,c
 33781  00848C  5028               	movf	__parse_format_drive@data+1,w,c
 33782  00848E  22DA               	addwfc	fsr2h,f,c
 33783  008490  0EDA               	movlw	218
 33784  008492  18DE               	xorwf	postinc2,w,c
 33785  008494  A4D8               	btfss	status,2,c
 33786  008496  D00A               	goto	u11020
 33787  008498  EE20 F002          	lfsr	2,2
 33788  00849C  5027               	movf	__parse_format_drive@data,w,c
 33789  00849E  26D9               	addwf	fsr2l,f,c
 33790  0084A0  5028               	movf	__parse_format_drive@data+1,w,c
 33791  0084A2  22DA               	addwfc	fsr2h,f,c
 33792  0084A4  0E22               	movlw	34
 33793  0084A6  18DE               	xorwf	postinc2,w,c
 33794  0084A8  B4D8               	btfsc	status,2,c
 33795  0084AA  D002               	goto	l2845
 33796  0084AC                     u11020:
 33797                           
 33798                           ;api.c: 690: {;api.c: 691: return 3;
 33799  0084AC  0E03               	movlw	3
 33800  0084AE  0012               	return	
 33801  0084B0                     l2845:
 33802                           
 33803                           ;api.c: 692: };api.c: 693: fat_format();
 33804  0084B0  EC7D  F014         	call	_fat_format	;wreg free
 33805                           
 33806                           ;api.c: 694: return 3;
 33807  0084B4  0E03               	movlw	3
 33808  0084B6  0012               	return	
 33809  0084B8                     __end_of__parse_format_drive:
 33810                           	opt stack 0
 33811                           tosu	equ	0xFFF
 33812                           tosh	equ	0xFFE
 33813                           tosl	equ	0xFFD
 33814                           pclath	equ	0xFFA
 33815                           tblptru	equ	0xFF8
 33816                           tblptrh	equ	0xFF7
 33817                           tblptrl	equ	0xFF6
 33818                           tablat	equ	0xFF5
 33819                           prodh	equ	0xFF4
 33820                           prodl	equ	0xFF3
 33821                           intcon	equ	0xFF2
 33822                           intcon2	equ	0xFF1
 33823                           intcon3	equ	0xFF0
 33824                           indf0	equ	0xFEF
 33825                           postinc0	equ	0xFEE
 33826                           fsr0h	equ	0xFEA
 33827                           fsr0l	equ	0xFE9
 33828                           wreg	equ	0xFE8
 33829                           indf1	equ	0xFE7
 33830                           postdec1	equ	0xFE5
 33831                           plusw1	equ	0xFE3
 33832                           fsr1h	equ	0xFE2
 33833                           fsr1l	equ	0xFE1
 33834                           indf2	equ	0xFDF
 33835                           postinc2	equ	0xFDE
 33836                           postdec2	equ	0xFDD
 33837                           plusw2	equ	0xFDB
 33838                           fsr2h	equ	0xFDA
 33839                           fsr2l	equ	0xFD9
 33840                           status	equ	0xFD8
 33841                           
 33842 ;; *************** function _fat_format *****************
 33843 ;; Defined at:
 33844 ;;		line 1258 in file "fat16.c"
 33845 ;; Parameters:    Size  Location     Type
 33846 ;;		None
 33847 ;; Auto vars:     Size  Location     Type
 33848 ;;  cntr            2   36[COMRAM] unsigned int 
 33849 ;; Return value:  Size  Location     Type
 33850 ;;                  1    wreg      void 
 33851 ;; Registers used:
 33852 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 33853 ;; Tracked objects:
 33854 ;;		On entry : 0/0
 33855 ;;		On exit  : 0/0
 33856 ;;		Unchanged: 0/0
 33857 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33858 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33859 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33860 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33861 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33862 ;;Total ram usage:        2 bytes
 33863 ;; Hardware stack levels used:    1
 33864 ;; Hardware stack levels required when called:    5
 33865 ;; This function calls:
 33866 ;;		__get_data
 33867 ;;		__get_fat
 33868 ;;		__get_fbr
 33869 ;;		__get_mbr
 33870 ;;		__get_root
 33871 ;;		_flash_sector_write
 33872 ;; This function is called by:
 33873 ;;		_fat_init
 33874 ;;		__parse_format_drive
 33875 ;; This function uses a non-reentrant model
 33876 ;;
 33877                           
 33878                           	psect	text172
 33879  0028FA                     __ptext172:
 33880                           	opt stack 0
 33881  0028FA                     _fat_format:
 33882                           	opt stack 23
 33883                           
 33884                           ;fat16.c: 1260: uint16_t cntr;;fat16.c: 1263: for(cntr=0; cntr<512; ++cntr)
 33885                           
 33886                           ;incstack = 0
 33887  0028FA  0E00               	movlw	0
 33888  0028FC  6E26               	movwf	fat_format@cntr+1,c
 33889  0028FE  0E00               	movlw	0
 33890  002900  6E25               	movwf	fat_format@cntr,c
 33891  002902                     l13413:
 33892  002902  0E02               	movlw	2
 33893  002904  5C26               	subwf	fat_format@cntr+1,w,c
 33894  002906  B0D8               	btfsc	status,0,c
 33895  002908  D010               	goto	u10290
 33896                           
 33897                           ;fat16.c: 1264: {;fat16.c: 1265: buffer[cntr] = _get_mbr(cntr);
 33898  00290A  0EC0               	movlw	low _buffer
 33899  00290C  2425               	addwf	fat_format@cntr,w,c
 33900  00290E  6ED9               	movwf	fsr2l,c
 33901  002910  0E03               	movlw	high _buffer
 33902  002912  2026               	addwfc	fat_format@cntr+1,w,c
 33903  002914  6EDA               	movwf	fsr2h,c
 33904  002916  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
 33905  00291A  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
 33906  00291E  EC79  F02E         	call	__get_mbr	;wreg free
 33907  002922  6EDF               	movwf	indf2,c
 33908  002924  4A25               	infsnz	fat_format@cntr,f,c
 33909  002926  2A26               	incf	fat_format@cntr+1,f,c
 33910  002928  D7EC               	goto	l13413
 33911  00292A                     u10290:
 33912                           
 33913                           ;fat16.c: 1266: };fat16.c: 1267: flash_sector_write(0, buffer);
 33914  00292A  0E00               	movlw	0
 33915  00292C  6E21               	movwf	flash_sector_write@page+1,c
 33916  00292E  0E00               	movlw	0
 33917  002930  6E20               	movwf	flash_sector_write@page,c
 33918  002932  0EC0               	movlw	low _buffer
 33919  002934  6E22               	movwf	flash_sector_write@data,c
 33920  002936  0E03               	movlw	high _buffer
 33921  002938  6E23               	movwf	flash_sector_write@data+1,c
 33922  00293A  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33923                           
 33924                           ;fat16.c: 1270: for(cntr=0; cntr<512; ++cntr)
 33925  00293E  0E00               	movlw	0
 33926  002940  6E26               	movwf	fat_format@cntr+1,c
 33927  002942  0E00               	movlw	0
 33928  002944  6E25               	movwf	fat_format@cntr,c
 33929  002946                     l13427:
 33930  002946  0E02               	movlw	2
 33931  002948  5C26               	subwf	fat_format@cntr+1,w,c
 33932  00294A  B0D8               	btfsc	status,0,c
 33933  00294C  D010               	goto	u10310
 33934                           
 33935                           ;fat16.c: 1271: {;fat16.c: 1272: buffer[cntr] = _get_fbr(cntr);
 33936  00294E  0EC0               	movlw	low _buffer
 33937  002950  2425               	addwf	fat_format@cntr,w,c
 33938  002952  6ED9               	movwf	fsr2l,c
 33939  002954  0E03               	movlw	high _buffer
 33940  002956  2026               	addwfc	fat_format@cntr+1,w,c
 33941  002958  6EDA               	movwf	fsr2h,c
 33942  00295A  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
 33943  00295E  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
 33944  002962  ECE6  F00E         	call	__get_fbr	;wreg free
 33945  002966  6EDF               	movwf	indf2,c
 33946  002968  4A25               	infsnz	fat_format@cntr,f,c
 33947  00296A  2A26               	incf	fat_format@cntr+1,f,c
 33948  00296C  D7EC               	goto	l13427
 33949  00296E                     u10310:
 33950                           
 33951                           ;fat16.c: 1273: };fat16.c: 1274: flash_sector_write(1, buffer);
 33952  00296E  0E00               	movlw	0
 33953  002970  6E21               	movwf	flash_sector_write@page+1,c
 33954  002972  0E01               	movlw	1
 33955  002974  6E20               	movwf	flash_sector_write@page,c
 33956  002976  0EC0               	movlw	low _buffer
 33957  002978  6E22               	movwf	flash_sector_write@data,c
 33958  00297A  0E03               	movlw	high _buffer
 33959  00297C  6E23               	movwf	flash_sector_write@data+1,c
 33960  00297E  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33961                           
 33962                           ;fat16.c: 1277: for(cntr=0; cntr<512; ++cntr)
 33963  002982  0E00               	movlw	0
 33964  002984  6E26               	movwf	fat_format@cntr+1,c
 33965  002986  0E00               	movlw	0
 33966  002988  6E25               	movwf	fat_format@cntr,c
 33967  00298A                     l13441:
 33968  00298A  0E02               	movlw	2
 33969  00298C  5C26               	subwf	fat_format@cntr+1,w,c
 33970  00298E  B0D8               	btfsc	status,0,c
 33971  002990  D010               	goto	u10330
 33972                           
 33973                           ;fat16.c: 1278: {;fat16.c: 1279: buffer[cntr] = _get_fat(cntr);
 33974  002992  0EC0               	movlw	low _buffer
 33975  002994  2425               	addwf	fat_format@cntr,w,c
 33976  002996  6ED9               	movwf	fsr2l,c
 33977  002998  0E03               	movlw	high _buffer
 33978  00299A  2026               	addwfc	fat_format@cntr+1,w,c
 33979  00299C  6EDA               	movwf	fsr2h,c
 33980  00299E  C025  F001         	movff	fat_format@cntr,__get_fat@idx
 33981  0029A2  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
 33982  0029A6  ECBF  F03F         	call	__get_fat	;wreg free
 33983  0029AA  6EDF               	movwf	indf2,c
 33984  0029AC  4A25               	infsnz	fat_format@cntr,f,c
 33985  0029AE  2A26               	incf	fat_format@cntr+1,f,c
 33986  0029B0  D7EC               	goto	l13441
 33987  0029B2                     u10330:
 33988                           
 33989                           ;fat16.c: 1280: };fat16.c: 1281: flash_sector_write(2, buffer);
 33990  0029B2  0E00               	movlw	0
 33991  0029B4  6E21               	movwf	flash_sector_write@page+1,c
 33992  0029B6  0E02               	movlw	2
 33993  0029B8  6E20               	movwf	flash_sector_write@page,c
 33994  0029BA  0EC0               	movlw	low _buffer
 33995  0029BC  6E22               	movwf	flash_sector_write@data,c
 33996  0029BE  0E03               	movlw	high _buffer
 33997  0029C0  6E23               	movwf	flash_sector_write@data+1,c
 33998  0029C2  ECEA  F03F         	call	_flash_sector_write	;wreg free
 33999                           
 34000                           ;fat16.c: 1284: for(cntr=0; cntr<512; ++cntr)
 34001  0029C6  0E00               	movlw	0
 34002  0029C8  6E26               	movwf	fat_format@cntr+1,c
 34003  0029CA  0E00               	movlw	0
 34004  0029CC  6E25               	movwf	fat_format@cntr,c
 34005  0029CE                     l13455:
 34006  0029CE  0E02               	movlw	2
 34007  0029D0  5C26               	subwf	fat_format@cntr+1,w,c
 34008  0029D2  B0D8               	btfsc	status,0,c
 34009  0029D4  D00B               	goto	u10350
 34010                           
 34011                           ;fat16.c: 1285: {;fat16.c: 1286: buffer[cntr] = 0x00;
 34012  0029D6  0EC0               	movlw	low _buffer
 34013  0029D8  2425               	addwf	fat_format@cntr,w,c
 34014  0029DA  6ED9               	movwf	fsr2l,c
 34015  0029DC  0E03               	movlw	high _buffer
 34016  0029DE  2026               	addwfc	fat_format@cntr+1,w,c
 34017  0029E0  6EDA               	movwf	fsr2h,c
 34018  0029E2  0E00               	movlw	0
 34019  0029E4  6EDF               	movwf	indf2,c
 34020  0029E6  4A25               	infsnz	fat_format@cntr,f,c
 34021  0029E8  2A26               	incf	fat_format@cntr+1,f,c
 34022  0029EA  D7F1               	goto	l13455
 34023  0029EC                     u10350:
 34024                           
 34025                           ;fat16.c: 1287: };fat16.c: 1288: for(cntr=2+1; cntr<=33; ++cntr)
 34026  0029EC  0E00               	movlw	0
 34027  0029EE  6E26               	movwf	fat_format@cntr+1,c
 34028  0029F0  0E03               	movlw	3
 34029  0029F2  6E25               	movwf	fat_format@cntr,c
 34030  0029F4                     l13467:
 34031  0029F4  5026               	movf	fat_format@cntr+1,w,c
 34032  0029F6  E111               	bnz	l13477
 34033  0029F8  0E22               	movlw	34
 34034  0029FA  5C25               	subwf	fat_format@cntr,w,c
 34035  0029FC  B0D8               	btfsc	status,0,c
 34036  0029FE  D00D               	goto	u10370
 34037                           
 34038                           ;fat16.c: 1289: {;fat16.c: 1290: flash_sector_write(cntr, buffer);
 34039  002A00  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 34040  002A04  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 34041  002A08  0EC0               	movlw	low _buffer
 34042  002A0A  6E22               	movwf	flash_sector_write@data,c
 34043  002A0C  0E03               	movlw	high _buffer
 34044  002A0E  6E23               	movwf	flash_sector_write@data+1,c
 34045  002A10  ECEA  F03F         	call	_flash_sector_write	;wreg free
 34046  002A14  4A25               	infsnz	fat_format@cntr,f,c
 34047  002A16  2A26               	incf	fat_format@cntr+1,f,c
 34048  002A18  D7ED               	goto	l13467
 34049  002A1A                     u10370:
 34050  002A1A                     l13477:
 34051                           
 34052                           ;fat16.c: 1291: };fat16.c: 1294: for(cntr=0; cntr<512; ++cntr)
 34053  002A1A  0E00               	movlw	0
 34054  002A1C  6E26               	movwf	fat_format@cntr+1,c
 34055  002A1E  0E00               	movlw	0
 34056  002A20  6E25               	movwf	fat_format@cntr,c
 34057  002A22                     l13479:
 34058  002A22  0E02               	movlw	2
 34059  002A24  5C26               	subwf	fat_format@cntr+1,w,c
 34060  002A26  B0D8               	btfsc	status,0,c
 34061  002A28  D010               	goto	u10390
 34062                           
 34063                           ;fat16.c: 1295: {;fat16.c: 1296: buffer[cntr] = _get_root(cntr);
 34064  002A2A  0EC0               	movlw	low _buffer
 34065  002A2C  2425               	addwf	fat_format@cntr,w,c
 34066  002A2E  6ED9               	movwf	fsr2l,c
 34067  002A30  0E03               	movlw	high _buffer
 34068  002A32  2026               	addwfc	fat_format@cntr+1,w,c
 34069  002A34  6EDA               	movwf	fsr2h,c
 34070  002A36  C025  F001         	movff	fat_format@cntr,__get_root@idx
 34071  002A3A  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
 34072  002A3E  EC32  F01A         	call	__get_root	;wreg free
 34073  002A42  6EDF               	movwf	indf2,c
 34074  002A44  4A25               	infsnz	fat_format@cntr,f,c
 34075  002A46  2A26               	incf	fat_format@cntr+1,f,c
 34076  002A48  D7EC               	goto	l13479
 34077  002A4A                     u10390:
 34078                           
 34079                           ;fat16.c: 1297: };fat16.c: 1298: flash_sector_write(34, buffer);
 34080  002A4A  0E00               	movlw	0
 34081  002A4C  6E21               	movwf	flash_sector_write@page+1,c
 34082  002A4E  0E22               	movlw	34
 34083  002A50  6E20               	movwf	flash_sector_write@page,c
 34084  002A52  0EC0               	movlw	low _buffer
 34085  002A54  6E22               	movwf	flash_sector_write@data,c
 34086  002A56  0E03               	movlw	high _buffer
 34087  002A58  6E23               	movwf	flash_sector_write@data+1,c
 34088  002A5A  ECEA  F03F         	call	_flash_sector_write	;wreg free
 34089                           
 34090                           ;fat16.c: 1301: for(cntr=0; cntr<512; ++cntr)
 34091  002A5E  0E00               	movlw	0
 34092  002A60  6E26               	movwf	fat_format@cntr+1,c
 34093  002A62  0E00               	movlw	0
 34094  002A64  6E25               	movwf	fat_format@cntr,c
 34095  002A66                     l13493:
 34096  002A66  0E02               	movlw	2
 34097  002A68  5C26               	subwf	fat_format@cntr+1,w,c
 34098  002A6A  B0D8               	btfsc	status,0,c
 34099  002A6C  D00B               	goto	u10410
 34100                           
 34101                           ;fat16.c: 1302: {;fat16.c: 1303: buffer[cntr] = 0x00;
 34102  002A6E  0EC0               	movlw	low _buffer
 34103  002A70  2425               	addwf	fat_format@cntr,w,c
 34104  002A72  6ED9               	movwf	fsr2l,c
 34105  002A74  0E03               	movlw	high _buffer
 34106  002A76  2026               	addwfc	fat_format@cntr+1,w,c
 34107  002A78  6EDA               	movwf	fsr2h,c
 34108  002A7A  0E00               	movlw	0
 34109  002A7C  6EDF               	movwf	indf2,c
 34110  002A7E  4A25               	infsnz	fat_format@cntr,f,c
 34111  002A80  2A26               	incf	fat_format@cntr+1,f,c
 34112  002A82  D7F1               	goto	l13493
 34113  002A84                     u10410:
 34114                           
 34115                           ;fat16.c: 1304: };fat16.c: 1305: for(cntr=34+1; cntr<=37; ++cntr)
 34116  002A84  0E00               	movlw	0
 34117  002A86  6E26               	movwf	fat_format@cntr+1,c
 34118  002A88  0E23               	movlw	35
 34119  002A8A  6E25               	movwf	fat_format@cntr,c
 34120  002A8C                     l13505:
 34121  002A8C  5026               	movf	fat_format@cntr+1,w,c
 34122  002A8E  E111               	bnz	l13515
 34123  002A90  0E26               	movlw	38
 34124  002A92  5C25               	subwf	fat_format@cntr,w,c
 34125  002A94  B0D8               	btfsc	status,0,c
 34126  002A96  D00D               	goto	u10430
 34127                           
 34128                           ;fat16.c: 1306: {;fat16.c: 1307: flash_sector_write(cntr, buffer);
 34129  002A98  C025  F020         	movff	fat_format@cntr,flash_sector_write@page
 34130  002A9C  C026  F021         	movff	fat_format@cntr+1,flash_sector_write@page+1
 34131  002AA0  0EC0               	movlw	low _buffer
 34132  002AA2  6E22               	movwf	flash_sector_write@data,c
 34133  002AA4  0E03               	movlw	high _buffer
 34134  002AA6  6E23               	movwf	flash_sector_write@data+1,c
 34135  002AA8  ECEA  F03F         	call	_flash_sector_write	;wreg free
 34136  002AAC  4A25               	infsnz	fat_format@cntr,f,c
 34137  002AAE  2A26               	incf	fat_format@cntr+1,f,c
 34138  002AB0  D7ED               	goto	l13505
 34139  002AB2                     u10430:
 34140  002AB2                     l13515:
 34141                           
 34142                           ;fat16.c: 1308: };fat16.c: 1311: for(cntr=0; cntr<512; ++cntr)
 34143  002AB2  0E00               	movlw	0
 34144  002AB4  6E26               	movwf	fat_format@cntr+1,c
 34145  002AB6  0E00               	movlw	0
 34146  002AB8  6E25               	movwf	fat_format@cntr,c
 34147  002ABA                     l13517:
 34148  002ABA  0E02               	movlw	2
 34149  002ABC  5C26               	subwf	fat_format@cntr+1,w,c
 34150  002ABE  B0D8               	btfsc	status,0,c
 34151  002AC0  D010               	goto	u10450
 34152                           
 34153                           ;fat16.c: 1312: {;fat16.c: 1313: buffer[cntr] = _get_data(cntr);
 34154  002AC2  0EC0               	movlw	low _buffer
 34155  002AC4  2425               	addwf	fat_format@cntr,w,c
 34156  002AC6  6ED9               	movwf	fsr2l,c
 34157  002AC8  0E03               	movlw	high _buffer
 34158  002ACA  2026               	addwfc	fat_format@cntr+1,w,c
 34159  002ACC  6EDA               	movwf	fsr2h,c
 34160  002ACE  C025  F001         	movff	fat_format@cntr,__get_data@idx
 34161  002AD2  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
 34162  002AD6  ECA6  F045         	call	__get_data	;wreg free
 34163  002ADA  6EDF               	movwf	indf2,c
 34164  002ADC  4A25               	infsnz	fat_format@cntr,f,c
 34165  002ADE  2A26               	incf	fat_format@cntr+1,f,c
 34166  002AE0  D7EC               	goto	l13517
 34167  002AE2                     u10450:
 34168                           
 34169                           ;fat16.c: 1314: };fat16.c: 1315: flash_sector_write(38, buffer);
 34170  002AE2  0E00               	movlw	0
 34171  002AE4  6E21               	movwf	flash_sector_write@page+1,c
 34172  002AE6  0E26               	movlw	38
 34173  002AE8  6E20               	movwf	flash_sector_write@page,c
 34174  002AEA  0EC0               	movlw	low _buffer
 34175  002AEC  6E22               	movwf	flash_sector_write@data,c
 34176  002AEE  0E03               	movlw	high _buffer
 34177  002AF0  6E23               	movwf	flash_sector_write@data+1,c
 34178  002AF2  ECEA  F03F         	call	_flash_sector_write	;wreg free
 34179  002AF6  0012               	return		;funcret
 34180  002AF8                     __end_of_fat_format:
 34181                           	opt stack 0
 34182                           tosu	equ	0xFFF
 34183                           tosh	equ	0xFFE
 34184                           tosl	equ	0xFFD
 34185                           pclath	equ	0xFFA
 34186                           tblptru	equ	0xFF8
 34187                           tblptrh	equ	0xFF7
 34188                           tblptrl	equ	0xFF6
 34189                           tablat	equ	0xFF5
 34190                           prodh	equ	0xFF4
 34191                           prodl	equ	0xFF3
 34192                           intcon	equ	0xFF2
 34193                           intcon2	equ	0xFF1
 34194                           intcon3	equ	0xFF0
 34195                           indf0	equ	0xFEF
 34196                           postinc0	equ	0xFEE
 34197                           fsr0h	equ	0xFEA
 34198                           fsr0l	equ	0xFE9
 34199                           wreg	equ	0xFE8
 34200                           indf1	equ	0xFE7
 34201                           postdec1	equ	0xFE5
 34202                           plusw1	equ	0xFE3
 34203                           fsr1h	equ	0xFE2
 34204                           fsr1l	equ	0xFE1
 34205                           indf2	equ	0xFDF
 34206                           postinc2	equ	0xFDE
 34207                           postdec2	equ	0xFDD
 34208                           plusw2	equ	0xFDB
 34209                           fsr2h	equ	0xFDA
 34210                           fsr2l	equ	0xFD9
 34211                           status	equ	0xFD8
 34212                           
 34213 ;; *************** function __get_root *****************
 34214 ;; Defined at:
 34215 ;;		line 1148 in file "fat16.c"
 34216 ;; Parameters:    Size  Location     Type
 34217 ;;  idx             2    0[COMRAM] unsigned int 
 34218 ;; Auto vars:     Size  Location     Type
 34219 ;;		None
 34220 ;; Return value:  Size  Location     Type
 34221 ;;                  1    wreg      unsigned char 
 34222 ;; Registers used:
 34223 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34224 ;; Tracked objects:
 34225 ;;		On entry : 0/0
 34226 ;;		On exit  : 0/0
 34227 ;;		Unchanged: 0/0
 34228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34229 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34231 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34232 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34233 ;;Total ram usage:        6 bytes
 34234 ;; Hardware stack levels used:    1
 34235 ;; This function calls:
 34236 ;;		Nothing
 34237 ;; This function is called by:
 34238 ;;		_fat_format
 34239 ;; This function uses a non-reentrant model
 34240 ;;
 34241                           
 34242                           	psect	text173
 34243  003464                     __ptext173:
 34244                           	opt stack 0
 34245  003464                     __get_root:
 34246                           	opt stack 27
 34247                           
 34248                           ;fat16.c: 1150: if(idx < 0x20)
 34249                           
 34250                           ;incstack = 0
 34251  003464  5002               	movf	__get_root@idx+1,w,c
 34252  003466  E11D               	bnz	l12697
 34253  003468  0E20               	movlw	32
 34254  00346A  5C01               	subwf	__get_root@idx,w,c
 34255  00346C  B0D8               	btfsc	status,0,c
 34256  00346E  D019               	goto	l2217
 34257                           
 34258                           ;fat16.c: 1151: {;fat16.c: 1152: if(idx < 11)
 34259  003470  5002               	movf	__get_root@idx+1,w,c
 34260  003472  E110               	bnz	l12691
 34261  003474  0E0B               	movlw	11
 34262  003476  5C01               	subwf	__get_root@idx,w,c
 34263  003478  B0D8               	btfsc	status,0,c
 34264  00347A  D00C               	goto	l2215
 34265                           
 34266                           ;fat16.c: 1153: {;fat16.c: 1154: return "SolarChargr"[idx];
 34267  00347C  0EDD               	movlw	low STR_9
 34268  00347E  2401               	addwf	__get_root@idx,w,c
 34269  003480  6EF6               	movwf	tblptrl,c
 34270  003482  0E9F               	movlw	high STR_9
 34271  003484  2002               	addwfc	__get_root@idx+1,w,c
 34272  003486  6EF7               	movwf	tblptrh,c
 34273  003488                     	if	1	;There are 3 active tblptr bytes
 34274  003488  6AF8               	clrf	tblptru,c
 34275  00348A  0E00               	movlw	low (__mediumconst shr (0+16))
 34276  00348C  22F8               	addwfc	tblptru,f,c
 34277  00348E                     	endif
 34278  00348E  0008               	tblrd		*
 34279  003490  50F5               	movf	tablat,w,c
 34280  003492  0012               	return	
 34281  003494                     l2215:
 34282  003494                     l12691:
 34283                           
 34284                           ;fat16.c: 1155: };fat16.c: 1156: if(idx==11)
 34285  003494  0E0B               	movlw	11
 34286  003496  1801               	xorwf	__get_root@idx,w,c
 34287  003498  1002               	iorwf	__get_root@idx+1,w,c
 34288  00349A  A4D8               	btfss	status,2,c
 34289  00349C  D002               	goto	l2217
 34290                           
 34291                           ;fat16.c: 1157: {;fat16.c: 1158: return 0x08;
 34292  00349E  0E08               	movlw	8
 34293  0034A0  0012               	return	
 34294  0034A2                     l2217:
 34295  0034A2                     l12697:
 34296                           
 34297                           ;fat16.c: 1159: };fat16.c: 1160: };fat16.c: 1161: if(idx < 0x40)
 34298  0034A2  5002               	movf	__get_root@idx+1,w,c
 34299  0034A4  E103               	bnz	u9441
 34300  0034A6  0E40               	movlw	64
 34301  0034A8  5C01               	subwf	__get_root@idx,w,c
 34302  0034AA  B0D8               	btfsc	status,0,c
 34303  0034AC                     u9441:
 34304  0034AC  D0A4               	goto	l2243
 34305                           
 34306                           ;fat16.c: 1162: {;fat16.c: 1163: idx -= 0x20;
 34307  0034AE  0E20               	movlw	32
 34308  0034B0  5E01               	subwf	__get_root@idx,f,c
 34309  0034B2  0E00               	movlw	0
 34310  0034B4  5A02               	subwfb	__get_root@idx+1,f,c
 34311                           
 34312                           ;fat16.c: 1164: if(idx < 0+8)
 34313  0034B6  5002               	movf	__get_root@idx+1,w,c
 34314  0034B8  E110               	bnz	l12705
 34315  0034BA  0E08               	movlw	8
 34316  0034BC  5C01               	subwf	__get_root@idx,w,c
 34317  0034BE  B0D8               	btfsc	status,0,c
 34318  0034C0  D00C               	goto	l2219
 34319                           
 34320                           ;fat16.c: 1165: {;fat16.c: 1166: return "FILE    "[idx];
 34321  0034C2  0EE9               	movlw	low STR_10
 34322  0034C4  2401               	addwf	__get_root@idx,w,c
 34323  0034C6  6EF6               	movwf	tblptrl,c
 34324  0034C8  0E9F               	movlw	high STR_10
 34325  0034CA  2002               	addwfc	__get_root@idx+1,w,c
 34326  0034CC  6EF7               	movwf	tblptrh,c
 34327  0034CE                     	if	1	;There are 3 active tblptr bytes
 34328  0034CE  6AF8               	clrf	tblptru,c
 34329  0034D0  0E00               	movlw	low (__mediumconst shr (0+16))
 34330  0034D2  22F8               	addwfc	tblptru,f,c
 34331  0034D4                     	endif
 34332  0034D4  0008               	tblrd		*
 34333  0034D6  50F5               	movf	tablat,w,c
 34334  0034D8  0012               	return	
 34335  0034DA                     l2219:
 34336  0034DA                     l12705:
 34337                           
 34338                           ;fat16.c: 1167: };fat16.c: 1168: if(idx < 11)
 34339  0034DA  5002               	movf	__get_root@idx+1,w,c
 34340  0034DC  E146               	bnz	l12797
 34341  0034DE  0E0B               	movlw	11
 34342  0034E0  5C01               	subwf	__get_root@idx,w,c
 34343  0034E2  B0D8               	btfsc	status,0,c
 34344  0034E4  D042               	goto	l2221
 34345                           
 34346                           ;fat16.c: 1169: {;fat16.c: 1170: return "TXT"[idx-8];
 34347  0034E6  0EF8               	movlw	248
 34348  0034E8  6E03               	movwf	??__get_root& (0+255),c
 34349  0034EA  0EFF               	movlw	255
 34350  0034EC  6E04               	movwf	(??__get_root+1)& (0+255),c
 34351  0034EE  C001  F005         	movff	__get_root@idx,??__get_root+2
 34352  0034F2  C002  F006         	movff	__get_root@idx+1,??__get_root+3
 34353  0034F6  5003               	movf	??__get_root,w,c
 34354  0034F8  2605               	addwf	??__get_root+2,f,c
 34355  0034FA  5004               	movf	??__get_root+1,w,c
 34356  0034FC  2206               	addwfc	??__get_root+3,f,c
 34357  0034FE  0EFB               	movlw	low STR_11
 34358  003500  2405               	addwf	??__get_root+2,w,c
 34359  003502  6EF6               	movwf	tblptrl,c
 34360  003504  0E9F               	movlw	high STR_11
 34361  003506  2006               	addwfc	??__get_root+3,w,c
 34362  003508  6EF7               	movwf	tblptrh,c
 34363  00350A                     	if	1	;There are 3 active tblptr bytes
 34364  00350A  6AF8               	clrf	tblptru,c
 34365  00350C  0E00               	movlw	low (__mediumconst shr (0+16))
 34366  00350E  22F8               	addwfc	tblptru,f,c
 34367  003510                     	endif
 34368  003510  0008               	tblrd		*
 34369  003512  50F5               	movf	tablat,w,c
 34370  003514  0012               	return	
 34371  003516                     
 34372                           ;fat16.c: 1175: return 0x20;
 34373  003516  0E20               	movlw	32
 34374  003518  0012               	return	
 34375  00351A                     
 34376                           ;fat16.c: 1177: return 0x06;
 34377  00351A  0E06               	movlw	6
 34378  00351C  0012               	return	
 34379  00351E                     
 34380                           ;fat16.c: 1179: return 0x28;
 34381  00351E  0E28               	movlw	40
 34382  003520  0012               	return	
 34383  003522                     
 34384                           ;fat16.c: 1181: return 0x78;
 34385  003522  0E78               	movlw	120
 34386  003524  0012               	return	
 34387  003526                     
 34388                           ;fat16.c: 1183: return 0xDE;
 34389  003526  0EDE               	movlw	222
 34390  003528  0012               	return	
 34391  00352A                     
 34392                           ;fat16.c: 1185: return 0x38;
 34393  00352A  0E38               	movlw	56
 34394  00352C  0012               	return	
 34395  00352E                     
 34396                           ;fat16.c: 1187: return 0x5F;
 34397  00352E  0E5F               	movlw	95
 34398  003530  0012               	return	
 34399  003532                     
 34400                           ;fat16.c: 1189: return 0x4B;
 34401  003532  0E4B               	movlw	75
 34402  003534  0012               	return	
 34403  003536                     
 34404                           ;fat16.c: 1191: return 0x00;
 34405  003536  0E00               	movlw	0
 34406  003538  0012               	return	
 34407  00353A                     
 34408                           ;fat16.c: 1193: return 0x00;
 34409  00353A  0E00               	movlw	0
 34410  00353C  0012               	return	
 34411  00353E                     
 34412                           ;fat16.c: 1195: return 0x04;
 34413  00353E  0E04               	movlw	4
 34414  003540  0012               	return	
 34415  003542                     
 34416                           ;fat16.c: 1197: return 0x77;
 34417  003542  0E77               	movlw	119
 34418  003544  0012               	return	
 34419  003546                     
 34420                           ;fat16.c: 1199: return 0xDE;
 34421  003546  0EDE               	movlw	222
 34422  003548  0012               	return	
 34423  00354A                     
 34424                           ;fat16.c: 1201: return 0x38;
 34425  00354A  0E38               	movlw	56
 34426  00354C  0012               	return	
 34427  00354E                     
 34428                           ;fat16.c: 1203: return ((unsigned char)((((uint16_t)2))&0xFF));
 34429  00354E  0E02               	movlw	2
 34430  003550  0012               	return	
 34431  003552                     
 34432                           ;fat16.c: 1205: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
 34433  003552  0E00               	movlw	0
 34434  003554  0012               	return	
 34435  003556                     
 34436                           ;fat16.c: 1207: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0x
      +                          FF));
 34437  003556  0E0C               	movlw	12
 34438  003558  0012               	return	
 34439  00355A                     
 34440                           ;fat16.c: 1209: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>
      +                          8)&0xFF));
 34441  00355A  0E00               	movlw	0
 34442  00355C  0012               	return	
 34443  00355E                     
 34444                           ;fat16.c: 1211: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))&0xFF));
 34445  00355E  0E00               	movlw	0
 34446  003560  0012               	return	
 34447  003562                     
 34448                           ;fat16.c: 1213: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 34449  003562  0E00               	movlw	0
 34450  003564  0012               	return	
 34451  003566                     
 34452                           ;fat16.c: 1215: return 0x00;
 34453  003566  0E00               	movlw	0
 34454  003568  0012               	return	
 34455  00356A                     l2221:
 34456  00356A                     l12797:
 34457  00356A  C001  F003         	movff	__get_root@idx,??__get_root
 34458  00356E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
 34459                           
 34460                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34461                           ; Switch size 1, requested type "space"
 34462                           ; Number of cases is 1, Range of values is 0 to 0
 34463                           ; switch strategies available:
 34464                           ; Name         Instructions Cycles
 34465                           ; simple_byte            4     3 (average)
 34466                           ;	Chosen strategy is simple_byte
 34467  003572  5004               	movf	??__get_root+1,w,c
 34468  003574  0A00               	xorlw	0	; case 0
 34469  003576  A4D8               	btfss	status,2,c
 34470  003578  D7F6               	goto	l2242
 34471                           
 34472                           ; Switch size 1, requested type "space"
 34473                           ; Number of cases is 20, Range of values is 11 to 31
 34474                           ; switch strategies available:
 34475                           ; Name         Instructions Cycles
 34476                           ; simple_byte           61    31 (average)
 34477                           ;	Chosen strategy is simple_byte
 34478  00357A  5003               	movf	??__get_root,w,c
 34479  00357C  0A0B               	xorlw	11	; case 11
 34480  00357E  B4D8               	btfsc	status,2,c
 34481  003580  D7CA               	goto	l2222
 34482  003582  0A06               	xorlw	6	; case 13
 34483  003584  B4D8               	btfsc	status,2,c
 34484  003586  D7C9               	goto	l2223
 34485  003588  0A03               	xorlw	3	; case 14
 34486  00358A  B4D8               	btfsc	status,2,c
 34487  00358C  D7C8               	goto	l2224
 34488  00358E  0A01               	xorlw	1	; case 15
 34489  003590  B4D8               	btfsc	status,2,c
 34490  003592  D7C7               	goto	l2225
 34491  003594  0A1F               	xorlw	31	; case 16
 34492  003596  B4D8               	btfsc	status,2,c
 34493  003598  D7C6               	goto	l2226
 34494  00359A  0A01               	xorlw	1	; case 17
 34495  00359C  B4D8               	btfsc	status,2,c
 34496  00359E  D7C5               	goto	l2227
 34497  0035A0  0A03               	xorlw	3	; case 18
 34498  0035A2  B4D8               	btfsc	status,2,c
 34499  0035A4  D7C4               	goto	l2228
 34500  0035A6  0A01               	xorlw	1	; case 19
 34501  0035A8  B4D8               	btfsc	status,2,c
 34502  0035AA  D7C3               	goto	l2229
 34503  0035AC  0A07               	xorlw	7	; case 20
 34504  0035AE  B4D8               	btfsc	status,2,c
 34505  0035B0  D7C2               	goto	l2230
 34506  0035B2  0A01               	xorlw	1	; case 21
 34507  0035B4  B4D8               	btfsc	status,2,c
 34508  0035B6  D7C1               	goto	l2231
 34509  0035B8  0A03               	xorlw	3	; case 22
 34510  0035BA  B4D8               	btfsc	status,2,c
 34511  0035BC  D7C0               	goto	l2232
 34512  0035BE  0A01               	xorlw	1	; case 23
 34513  0035C0  B4D8               	btfsc	status,2,c
 34514  0035C2  D7BF               	goto	l2233
 34515  0035C4  0A0F               	xorlw	15	; case 24
 34516  0035C6  B4D8               	btfsc	status,2,c
 34517  0035C8  D7BE               	goto	l2234
 34518  0035CA  0A01               	xorlw	1	; case 25
 34519  0035CC  B4D8               	btfsc	status,2,c
 34520  0035CE  D7BD               	goto	l2235
 34521  0035D0  0A03               	xorlw	3	; case 26
 34522  0035D2  B4D8               	btfsc	status,2,c
 34523  0035D4  D7BC               	goto	l2236
 34524  0035D6  0A01               	xorlw	1	; case 27
 34525  0035D8  B4D8               	btfsc	status,2,c
 34526  0035DA  D7BB               	goto	l2237
 34527  0035DC  0A07               	xorlw	7	; case 28
 34528  0035DE  B4D8               	btfsc	status,2,c
 34529  0035E0  D7BA               	goto	l2238
 34530  0035E2  0A01               	xorlw	1	; case 29
 34531  0035E4  B4D8               	btfsc	status,2,c
 34532  0035E6  D7B9               	goto	l2239
 34533  0035E8  0A03               	xorlw	3	; case 30
 34534  0035EA  B4D8               	btfsc	status,2,c
 34535  0035EC  D7B8               	goto	l2240
 34536  0035EE  0A01               	xorlw	1	; case 31
 34537  0035F0  B4D8               	btfsc	status,2,c
 34538  0035F2  D7B7               	goto	l2241
 34539  0035F4  D7B8               	goto	l2242
 34540  0035F6                     l2243:
 34541                           
 34542                           ;fat16.c: 1217: };fat16.c: 1218: return 0X00;
 34543  0035F6  0E00               	movlw	0
 34544  0035F8  0012               	return	
 34545  0035FA                     __end_of__get_root:
 34546                           	opt stack 0
 34547                           tosu	equ	0xFFF
 34548                           tosh	equ	0xFFE
 34549                           tosl	equ	0xFFD
 34550                           pclath	equ	0xFFA
 34551                           tblptru	equ	0xFF8
 34552                           tblptrh	equ	0xFF7
 34553                           tblptrl	equ	0xFF6
 34554                           tablat	equ	0xFF5
 34555                           prodh	equ	0xFF4
 34556                           prodl	equ	0xFF3
 34557                           intcon	equ	0xFF2
 34558                           intcon2	equ	0xFF1
 34559                           intcon3	equ	0xFF0
 34560                           indf0	equ	0xFEF
 34561                           postinc0	equ	0xFEE
 34562                           fsr0h	equ	0xFEA
 34563                           fsr0l	equ	0xFE9
 34564                           wreg	equ	0xFE8
 34565                           indf1	equ	0xFE7
 34566                           postdec1	equ	0xFE5
 34567                           plusw1	equ	0xFE3
 34568                           fsr1h	equ	0xFE2
 34569                           fsr1l	equ	0xFE1
 34570                           indf2	equ	0xFDF
 34571                           postinc2	equ	0xFDE
 34572                           postdec2	equ	0xFDD
 34573                           plusw2	equ	0xFDB
 34574                           fsr2h	equ	0xFDA
 34575                           fsr2l	equ	0xFD9
 34576                           status	equ	0xFD8
 34577                           
 34578 ;; *************** function __get_mbr *****************
 34579 ;; Defined at:
 34580 ;;		line 975 in file "fat16.c"
 34581 ;; Parameters:    Size  Location     Type
 34582 ;;  idx             2    0[COMRAM] unsigned int 
 34583 ;; Auto vars:     Size  Location     Type
 34584 ;;		None
 34585 ;; Return value:  Size  Location     Type
 34586 ;;                  1    wreg      unsigned char 
 34587 ;; Registers used:
 34588 ;;		wreg, status,2, status,0
 34589 ;; Tracked objects:
 34590 ;;		On entry : 0/0
 34591 ;;		On exit  : 0/0
 34592 ;;		Unchanged: 0/0
 34593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34594 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34595 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34596 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34597 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34598 ;;Total ram usage:        4 bytes
 34599 ;; Hardware stack levels used:    1
 34600 ;; This function calls:
 34601 ;;		Nothing
 34602 ;; This function is called by:
 34603 ;;		_fat_get_format_status
 34604 ;;		_fat_format
 34605 ;; This function uses a non-reentrant model
 34606 ;;
 34607                           
 34608                           	psect	text174
 34609  005CF2                     __ptext174:
 34610                           	opt stack 0
 34611  005CF2                     __get_mbr:
 34612                           	opt stack 27
 34613                           
 34614                           ;fat16.c: 977: switch (idx)
 34615                           
 34616                           ;incstack = 0
 34617  005CF2  D026               	goto	l2124
 34618  005CF4                     
 34619                           ;fat16.c: 980: return 0x80;
 34620  005CF4  0E80               	movlw	128
 34621  005CF6  0012               	return	
 34622  005CF8                     
 34623                           ;fat16.c: 982: return 0;
 34624  005CF8  0E00               	movlw	0
 34625  005CFA  0012               	return	
 34626  005CFC                     
 34627                           ;fat16.c: 984: return 2;
 34628  005CFC  0E02               	movlw	2
 34629  005CFE  0012               	return	
 34630  005D00                     
 34631                           ;fat16.c: 986: return 0;
 34632  005D00  0E00               	movlw	0
 34633  005D02  0012               	return	
 34634  005D04                     
 34635                           ;fat16.c: 988: return 0x04;
 34636  005D04  0E04               	movlw	4
 34637  005D06  0012               	return	
 34638  005D08                     
 34639                           ;fat16.c: 990: return 2;
 34640  005D08  0E02               	movlw	2
 34641  005D0A  0012               	return	
 34642  005D0C                     
 34643                           ;fat16.c: 992: return 3;
 34644  005D0C  0E03               	movlw	3
 34645  005D0E  0012               	return	
 34646  005D10                     
 34647                           ;fat16.c: 994: return 8;
 34648  005D10  0E08               	movlw	8
 34649  005D12  0012               	return	
 34650  005D14                     
 34651                           ;fat16.c: 996: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
 34652  005D14  0E01               	movlw	1
 34653  005D16  0012               	return	
 34654  005D18                     
 34655                           ;fat16.c: 998: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
 34656  005D18  0E00               	movlw	0
 34657  005D1A  0012               	return	
 34658  005D1C                     
 34659                           ;fat16.c: 1000: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))&0xFF));
 34660  005D1C  0E00               	movlw	0
 34661  005D1E  0012               	return	
 34662  005D20                     
 34663                           ;fat16.c: 1002: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 34664  005D20  0E00               	movlw	0
 34665  005D22  0012               	return	
 34666  005D24                     
 34667                           ;fat16.c: 1004: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&
      +                          0xFF));
 34668  005D24  0EFF               	movlw	255
 34669  005D26  0012               	return	
 34670  005D28                     
 34671                           ;fat16.c: 1006: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))
      +                          >>8)&0xFF));
 34672  005D28  0E1F               	movlw	31
 34673  005D2A  0012               	return	
 34674  005D2C                     
 34675                           ;fat16.c: 1008: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))&0xFF));
 34676  005D2C  0E00               	movlw	0
 34677  005D2E  0012               	return	
 34678  005D30                     
 34679                           ;fat16.c: 1010: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xF
      +                          FFF)))>>8)&0xFF));
 34680  005D30  0E00               	movlw	0
 34681  005D32  0012               	return	
 34682  005D34                     
 34683                           ;fat16.c: 1012: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
 34684  005D34  0E55               	movlw	85
 34685  005D36  0012               	return	
 34686  005D38                     
 34687                           ;fat16.c: 1014: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
 34688  005D38  0EAA               	movlw	170
 34689  005D3A  0012               	return	
 34690  005D3C                     
 34691                           ;fat16.c: 1016: return 0X00;
 34692  005D3C  0E00               	movlw	0
 34693                           
 34694                           ;fat16.c: 1017: }
 34695  005D3E  0012               	return	
 34696  005D40                     l2124:
 34697  005D40  C001  F003         	movff	__get_mbr@idx,??__get_mbr
 34698  005D44  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
 34699                           
 34700                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 34701                           ; Switch size 1, requested type "space"
 34702                           ; Number of cases is 1, Range of values is 1 to 1
 34703                           ; switch strategies available:
 34704                           ; Name         Instructions Cycles
 34705                           ; simple_byte            4     3 (average)
 34706                           ;	Chosen strategy is simple_byte
 34707  005D48  5004               	movf	??__get_mbr+1,w,c
 34708  005D4A  0A01               	xorlw	1	; case 1
 34709  005D4C  A4D8               	btfss	status,2,c
 34710  005D4E  D7F6               	goto	l2144
 34711                           
 34712                           ; Switch size 1, requested type "space"
 34713                           ; Number of cases is 18, Range of values is 190 to 255
 34714                           ; switch strategies available:
 34715                           ; Name         Instructions Cycles
 34716                           ; simple_byte           55    28 (average)
 34717                           ;	Chosen strategy is simple_byte
 34718  005D50  5003               	movf	??__get_mbr,w,c
 34719  005D52  0ABE               	xorlw	190	; case 190
 34720  005D54  B4D8               	btfsc	status,2,c
 34721  005D56  D7CE               	goto	l2125
 34722  005D58  0A01               	xorlw	1	; case 191
 34723  005D5A  B4D8               	btfsc	status,2,c
 34724  005D5C  D7CD               	goto	l2127
 34725  005D5E  0A7F               	xorlw	127	; case 192
 34726  005D60  B4D8               	btfsc	status,2,c
 34727  005D62  D7CC               	goto	l2128
 34728  005D64  0A01               	xorlw	1	; case 193
 34729  005D66  B4D8               	btfsc	status,2,c
 34730  005D68  D7CB               	goto	l2129
 34731  005D6A  0A03               	xorlw	3	; case 194
 34732  005D6C  B4D8               	btfsc	status,2,c
 34733  005D6E  D7CA               	goto	l2130
 34734  005D70  0A01               	xorlw	1	; case 195
 34735  005D72  B4D8               	btfsc	status,2,c
 34736  005D74  D7C9               	goto	l2131
 34737  005D76  0A07               	xorlw	7	; case 196
 34738  005D78  B4D8               	btfsc	status,2,c
 34739  005D7A  D7C8               	goto	l2132
 34740  005D7C  0A01               	xorlw	1	; case 197
 34741  005D7E  B4D8               	btfsc	status,2,c
 34742  005D80  D7C7               	goto	l2133
 34743  005D82  0A03               	xorlw	3	; case 198
 34744  005D84  B4D8               	btfsc	status,2,c
 34745  005D86  D7C6               	goto	l2134
 34746  005D88  0A01               	xorlw	1	; case 199
 34747  005D8A  B4D8               	btfsc	status,2,c
 34748  005D8C  D7C5               	goto	l2135
 34749  005D8E  0A0F               	xorlw	15	; case 200
 34750  005D90  B4D8               	btfsc	status,2,c
 34751  005D92  D7C4               	goto	l2136
 34752  005D94  0A01               	xorlw	1	; case 201
 34753  005D96  B4D8               	btfsc	status,2,c
 34754  005D98  D7C3               	goto	l2137
 34755  005D9A  0A03               	xorlw	3	; case 202
 34756  005D9C  B4D8               	btfsc	status,2,c
 34757  005D9E  D7C2               	goto	l2138
 34758  005DA0  0A01               	xorlw	1	; case 203
 34759  005DA2  B4D8               	btfsc	status,2,c
 34760  005DA4  D7C1               	goto	l2139
 34761  005DA6  0A07               	xorlw	7	; case 204
 34762  005DA8  B4D8               	btfsc	status,2,c
 34763  005DAA  D7C0               	goto	l2140
 34764  005DAC  0A01               	xorlw	1	; case 205
 34765  005DAE  B4D8               	btfsc	status,2,c
 34766  005DB0  D7BF               	goto	l2141
 34767  005DB2  0A33               	xorlw	51	; case 254
 34768  005DB4  B4D8               	btfsc	status,2,c
 34769  005DB6  D7BE               	goto	l2142
 34770  005DB8  0A01               	xorlw	1	; case 255
 34771  005DBA  B4D8               	btfsc	status,2,c
 34772  005DBC  D7BD               	goto	l2143
 34773  005DBE  D7BE               	goto	l2144
 34774  005DC0                     __end_of__get_mbr:
 34775                           	opt stack 0
 34776                           tosu	equ	0xFFF
 34777                           tosh	equ	0xFFE
 34778                           tosl	equ	0xFFD
 34779                           pclath	equ	0xFFA
 34780                           tblptru	equ	0xFF8
 34781                           tblptrh	equ	0xFF7
 34782                           tblptrl	equ	0xFF6
 34783                           tablat	equ	0xFF5
 34784                           prodh	equ	0xFF4
 34785                           prodl	equ	0xFF3
 34786                           intcon	equ	0xFF2
 34787                           intcon2	equ	0xFF1
 34788                           intcon3	equ	0xFF0
 34789                           indf0	equ	0xFEF
 34790                           postinc0	equ	0xFEE
 34791                           fsr0h	equ	0xFEA
 34792                           fsr0l	equ	0xFE9
 34793                           wreg	equ	0xFE8
 34794                           indf1	equ	0xFE7
 34795                           postdec1	equ	0xFE5
 34796                           plusw1	equ	0xFE3
 34797                           fsr1h	equ	0xFE2
 34798                           fsr1l	equ	0xFE1
 34799                           indf2	equ	0xFDF
 34800                           postinc2	equ	0xFDE
 34801                           postdec2	equ	0xFDD
 34802                           plusw2	equ	0xFDB
 34803                           fsr2h	equ	0xFDA
 34804                           fsr2l	equ	0xFD9
 34805                           status	equ	0xFD8
 34806                           
 34807 ;; *************** function __get_fbr *****************
 34808 ;; Defined at:
 34809 ;;		line 1020 in file "fat16.c"
 34810 ;; Parameters:    Size  Location     Type
 34811 ;;  idx             2    0[COMRAM] unsigned int 
 34812 ;; Auto vars:     Size  Location     Type
 34813 ;;		None
 34814 ;; Return value:  Size  Location     Type
 34815 ;;                  1    wreg      unsigned char 
 34816 ;; Registers used:
 34817 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 34818 ;; Tracked objects:
 34819 ;;		On entry : 0/0
 34820 ;;		On exit  : 0/0
 34821 ;;		Unchanged: 0/0
 34822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34823 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34824 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34825 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34826 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34827 ;;Total ram usage:        4 bytes
 34828 ;; Hardware stack levels used:    1
 34829 ;; This function calls:
 34830 ;;		Nothing
 34831 ;; This function is called by:
 34832 ;;		_fat_get_format_status
 34833 ;;		_fat_format
 34834 ;; This function uses a non-reentrant model
 34835 ;;
 34836                           
 34837                           	psect	text175
 34838  001DCC                     __ptext175:
 34839                           	opt stack 0
 34840  001DCC                     __get_fbr:
 34841                           	opt stack 27
 34842                           
 34843                           ;fat16.c: 1022: switch (idx)
 34844                           
 34845                           ;incstack = 0
 34846  001DCC  D091               	goto	l2148
 34847  001DCE                     
 34848                           ;fat16.c: 1025: return 0xEB;
 34849  001DCE  0EEB               	movlw	235
 34850  001DD0  0012               	return	
 34851  001DD2                     
 34852                           ;fat16.c: 1027: return 0x3C;
 34853  001DD2  0E3C               	movlw	60
 34854  001DD4  0012               	return	
 34855  001DD6                     
 34856                           ;fat16.c: 1029: return 0x90;
 34857  001DD6  0E90               	movlw	144
 34858  001DD8  0012               	return	
 34859  001DDA                     
 34860                           ;fat16.c: 1031: return "MSDOS5.0"[0];
 34861  001DDA  0EF2               	movlw	low STR_1
 34862  001DDC  6EF6               	movwf	tblptrl,c
 34863  001DDE                     	if	1	;There is more than 1 active tblptr byte
 34864  001DDE  0E9F               	movlw	high STR_1
 34865  001DE0  6EF7               	movwf	tblptrh,c
 34866  001DE2                     	endif
 34867  001DE2                     	if	1	;There are 3 active tblptr bytes
 34868  001DE2  0E00               	movlw	low (STR_1 shr (0+16))
 34869  001DE4  6EF8               	movwf	tblptru,c
 34870  001DE6                     	endif
 34871  001DE6  0008               	tblrd		*
 34872  001DE8  50F5               	movf	tablat,w,c
 34873  001DEA  0012               	return	
 34874  001DEC                     
 34875                           ;fat16.c: 1033: return "MSDOS5.0"[1];
 34876  001DEC  0EF3               	movlw	low (STR_1+1)
 34877  001DEE  6EF6               	movwf	tblptrl,c
 34878  001DF0  0E9F               	movlw	high (STR_1+1)
 34879  001DF2  6EF7               	movwf	tblptrh,c
 34880  001DF4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34881  001DF4  6AF8               	clrf	tblptru,c
 34882  001DF6                     	endif
 34883  001DF6                     	if	0	;tblptru may be non-zero
 34884  001DF6                     	endif
 34885  001DF6  0008               	tblrd		*
 34886  001DF8  50F5               	movf	tablat,w,c
 34887  001DFA  0012               	return	
 34888  001DFC                     
 34889                           ;fat16.c: 1035: return "MSDOS5.0"[2];
 34890  001DFC  0EF4               	movlw	low (STR_1+2)
 34891  001DFE  6EF6               	movwf	tblptrl,c
 34892  001E00  0E9F               	movlw	high (STR_1+2)
 34893  001E02  6EF7               	movwf	tblptrh,c
 34894  001E04                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34895  001E04  6AF8               	clrf	tblptru,c
 34896  001E06                     	endif
 34897  001E06                     	if	0	;tblptru may be non-zero
 34898  001E06                     	endif
 34899  001E06  0008               	tblrd		*
 34900  001E08  50F5               	movf	tablat,w,c
 34901  001E0A  0012               	return	
 34902  001E0C                     
 34903                           ;fat16.c: 1037: return "MSDOS5.0"[3];
 34904  001E0C  0EF5               	movlw	low (STR_1+3)
 34905  001E0E  6EF6               	movwf	tblptrl,c
 34906  001E10  0E9F               	movlw	high (STR_1+3)
 34907  001E12  6EF7               	movwf	tblptrh,c
 34908  001E14                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34909  001E14  6AF8               	clrf	tblptru,c
 34910  001E16                     	endif
 34911  001E16                     	if	0	;tblptru may be non-zero
 34912  001E16                     	endif
 34913  001E16  0008               	tblrd		*
 34914  001E18  50F5               	movf	tablat,w,c
 34915  001E1A  0012               	return	
 34916  001E1C                     
 34917                           ;fat16.c: 1039: return "MSDOS5.0"[4];
 34918  001E1C  0EF6               	movlw	low (STR_1+4)
 34919  001E1E  6EF6               	movwf	tblptrl,c
 34920  001E20  0E9F               	movlw	high (STR_1+4)
 34921  001E22  6EF7               	movwf	tblptrh,c
 34922  001E24                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34923  001E24  6AF8               	clrf	tblptru,c
 34924  001E26                     	endif
 34925  001E26                     	if	0	;tblptru may be non-zero
 34926  001E26                     	endif
 34927  001E26  0008               	tblrd		*
 34928  001E28  50F5               	movf	tablat,w,c
 34929  001E2A  0012               	return	
 34930  001E2C                     
 34931                           ;fat16.c: 1041: return "MSDOS5.0"[5];
 34932  001E2C  0EF7               	movlw	low (STR_1+5)
 34933  001E2E  6EF6               	movwf	tblptrl,c
 34934  001E30  0E9F               	movlw	high (STR_1+5)
 34935  001E32  6EF7               	movwf	tblptrh,c
 34936  001E34                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34937  001E34  6AF8               	clrf	tblptru,c
 34938  001E36                     	endif
 34939  001E36                     	if	0	;tblptru may be non-zero
 34940  001E36                     	endif
 34941  001E36  0008               	tblrd		*
 34942  001E38  50F5               	movf	tablat,w,c
 34943  001E3A  0012               	return	
 34944  001E3C                     
 34945                           ;fat16.c: 1043: return "MSDOS5.0"[6];
 34946  001E3C  0EF8               	movlw	low (STR_1+6)
 34947  001E3E  6EF6               	movwf	tblptrl,c
 34948  001E40  0E9F               	movlw	high (STR_1+6)
 34949  001E42  6EF7               	movwf	tblptrh,c
 34950  001E44                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34951  001E44  6AF8               	clrf	tblptru,c
 34952  001E46                     	endif
 34953  001E46                     	if	0	;tblptru may be non-zero
 34954  001E46                     	endif
 34955  001E46  0008               	tblrd		*
 34956  001E48  50F5               	movf	tablat,w,c
 34957  001E4A  0012               	return	
 34958  001E4C                     
 34959                           ;fat16.c: 1045: return "MSDOS5.0"[7];
 34960  001E4C  0EF9               	movlw	low (STR_1+7)
 34961  001E4E  6EF6               	movwf	tblptrl,c
 34962  001E50  0E9F               	movlw	high (STR_1+7)
 34963  001E52  6EF7               	movwf	tblptrh,c
 34964  001E54                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 34965  001E54  6AF8               	clrf	tblptru,c
 34966  001E56                     	endif
 34967  001E56                     	if	0	;tblptru may be non-zero
 34968  001E56                     	endif
 34969  001E56  0008               	tblrd		*
 34970  001E58  50F5               	movf	tablat,w,c
 34971  001E5A  0012               	return	
 34972  001E5C                     
 34973                           ;fat16.c: 1047: return ((unsigned char)((((uint16_t)512))&0xFF));
 34974  001E5C  0E00               	movlw	0
 34975  001E5E  0012               	return	
 34976  001E60                     
 34977                           ;fat16.c: 1049: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
 34978  001E60  0E02               	movlw	2
 34979  001E62  0012               	return	
 34980  001E64                     
 34981                           ;fat16.c: 1051: return 1;
 34982  001E64  0E01               	movlw	1
 34983  001E66  0012               	return	
 34984  001E68                     
 34985                           ;fat16.c: 1053: return ((unsigned char)((((uint16_t)1))&0xFF));
 34986  001E68  0E01               	movlw	1
 34987  001E6A  0012               	return	
 34988  001E6C                     
 34989                           ;fat16.c: 1055: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
 34990  001E6C  0E00               	movlw	0
 34991  001E6E  0012               	return	
 34992  001E70                     
 34993                           ;fat16.c: 1057: return 1;
 34994  001E70  0E01               	movlw	1
 34995  001E72  0012               	return	
 34996  001E74                     
 34997                           ;fat16.c: 1059: return ((unsigned char)((((uint16_t)64))&0xFF));
 34998  001E74  0E40               	movlw	64
 34999  001E76  0012               	return	
 35000  001E78                     
 35001                           ;fat16.c: 1061: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
 35002  001E78  0E00               	movlw	0
 35003  001E7A  0012               	return	
 35004  001E7C                     
 35005                           ;fat16.c: 1063: return ((unsigned char)((((uint16_t)8191))&0xFF));
 35006  001E7C  0EFF               	movlw	255
 35007  001E7E  0012               	return	
 35008  001E80                     
 35009                           ;fat16.c: 1065: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
 35010  001E80  0E1F               	movlw	31
 35011  001E82  0012               	return	
 35012  001E84                     
 35013                           ;fat16.c: 1067: return 0XF8;
 35014  001E84  0EF8               	movlw	248
 35015  001E86  0012               	return	
 35016  001E88                     
 35017                           ;fat16.c: 1069: return ((unsigned char)((((uint16_t)32))&0xFF));
 35018  001E88  0E20               	movlw	32
 35019  001E8A  0012               	return	
 35020  001E8C                     
 35021                           ;fat16.c: 1071: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
 35022  001E8C  0E00               	movlw	0
 35023  001E8E  0012               	return	
 35024  001E90                     
 35025                           ;fat16.c: 1073: return ((unsigned char)((((uint16_t)63))&0xFF));
 35026  001E90  0E3F               	movlw	63
 35027  001E92  0012               	return	
 35028  001E94                     
 35029                           ;fat16.c: 1075: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
 35030  001E94  0E00               	movlw	0
 35031  001E96  0012               	return	
 35032  001E98                     
 35033                           ;fat16.c: 1077: return ((unsigned char)((((uint16_t)16))&0xFF));
 35034  001E98  0E10               	movlw	16
 35035  001E9A  0012               	return	
 35036  001E9C                     
 35037                           ;fat16.c: 1079: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
 35038  001E9C  0E00               	movlw	0
 35039  001E9E  0012               	return	
 35040  001EA0                     
 35041                           ;fat16.c: 1081: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xF
      +                          F));
 35042  001EA0  0E00               	movlw	0
 35043  001EA2  0012               	return	
 35044  001EA4                     
 35045                           ;fat16.c: 1083: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8
      +                          )&0xFF));
 35046  001EA4  0E00               	movlw	0
 35047  001EA6  0012               	return	
 35048  001EA8                     
 35049                           ;fat16.c: 1085: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))&0xFF));
 35050  001EA8  0E00               	movlw	0
 35051  001EAA  0012               	return	
 35052  001EAC                     
 35053                           ;fat16.c: 1087: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
 35054  001EAC  0E00               	movlw	0
 35055  001EAE  0012               	return	
 35056  001EB0                     
 35057                           ;fat16.c: 1089: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
 35058  001EB0  0E01               	movlw	1
 35059  001EB2  0012               	return	
 35060  001EB4                     
 35061                           ;fat16.c: 1091: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
 35062  001EB4  0E00               	movlw	0
 35063  001EB6  0012               	return	
 35064  001EB8                     
 35065                           ;fat16.c: 1093: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0x
      +                          FF));
 35066  001EB8  0E22               	movlw	34
 35067  001EBA  0012               	return	
 35068  001EBC                     
 35069                           ;fat16.c: 1095: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>
      +                          8)&0xFF));
 35070  001EBC  0E00               	movlw	0
 35071  001EBE  0012               	return	
 35072  001EC0                     
 35073                           ;fat16.c: 1099: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFF
      +                          F)))>>8)&0xFF));
 35074                           
 35075                           ;fat16.c: 1098: case 0x2F:
 35076  001EC0  0E00               	movlw	0
 35077  001EC2  0012               	return	
 35078  001EC4                     
 35079                           ;fat16.c: 1101: return 'F';
 35080  001EC4  0E46               	movlw	70
 35081  001EC6  0012               	return	
 35082  001EC8                     
 35083                           ;fat16.c: 1103: return 'A';
 35084  001EC8  0E41               	movlw	65
 35085  001ECA  0012               	return	
 35086  001ECC                     
 35087                           ;fat16.c: 1105: return 'T';
 35088  001ECC  0E54               	movlw	84
 35089  001ECE  0012               	return	
 35090  001ED0                     
 35091                           ;fat16.c: 1107: return '1';
 35092  001ED0  0E31               	movlw	49
 35093  001ED2  0012               	return	
 35094  001ED4                     
 35095                           ;fat16.c: 1109: return '6';
 35096  001ED4  0E36               	movlw	54
 35097  001ED6  0012               	return	
 35098  001ED8                     
 35099                           ;fat16.c: 1111: return ' ';
 35100  001ED8  0E20               	movlw	32
 35101  001EDA  0012               	return	
 35102  001EDC                     
 35103                           ;fat16.c: 1113: return ' ';
 35104  001EDC  0E20               	movlw	32
 35105  001EDE  0012               	return	
 35106  001EE0                     
 35107                           ;fat16.c: 1115: return ' ';
 35108  001EE0  0E20               	movlw	32
 35109  001EE2  0012               	return	
 35110  001EE4                     
 35111                           ;fat16.c: 1117: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
 35112  001EE4  0E55               	movlw	85
 35113  001EE6  0012               	return	
 35114  001EE8                     
 35115                           ;fat16.c: 1119: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
 35116  001EE8  0EAA               	movlw	170
 35117  001EEA  0012               	return	
 35118  001EEC                     
 35119                           ;fat16.c: 1121: return 0X00;
 35120  001EEC  0E00               	movlw	0
 35121                           
 35122                           ;fat16.c: 1122: }
 35123  001EEE  0012               	return	
 35124  001EF0                     l2148:
 35125  001EF0  C001  F003         	movff	__get_fbr@idx,??__get_fbr
 35126  001EF4  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
 35127                           
 35128                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 35129                           ; Switch size 1, requested type "space"
 35130                           ; Number of cases is 2, Range of values is 0 to 1
 35131                           ; switch strategies available:
 35132                           ; Name         Instructions Cycles
 35133                           ; simple_byte            7     4 (average)
 35134                           ;	Chosen strategy is simple_byte
 35135  001EF8  5004               	movf	??__get_fbr+1,w,c
 35136  001EFA  0A00               	xorlw	0	; case 0
 35137  001EFC  B4D8               	btfsc	status,2,c
 35138  001EFE  D004               	goto	l16327
 35139  001F00  0A01               	xorlw	1	; case 1
 35140  001F02  B4D8               	btfsc	status,2,c
 35141  001F04  D08D               	goto	l16329
 35142  001F06  D7F2               	goto	l2198
 35143  001F08                     l16327:
 35144                           
 35145                           ; Switch size 1, requested type "space"
 35146                           ; Number of cases is 46, Range of values is 0 to 61
 35147                           ; switch strategies available:
 35148                           ; Name         Instructions Cycles
 35149                           ; simple_byte          139    70 (average)
 35150                           ;	Chosen strategy is simple_byte
 35151  001F08  5003               	movf	??__get_fbr,w,c
 35152  001F0A  0A00               	xorlw	0	; case 0
 35153  001F0C  B4D8               	btfsc	status,2,c
 35154  001F0E  D75F               	goto	l2149
 35155  001F10  0A01               	xorlw	1	; case 1
 35156  001F12  B4D8               	btfsc	status,2,c
 35157  001F14  D75E               	goto	l2151
 35158  001F16  0A03               	xorlw	3	; case 2
 35159  001F18  B4D8               	btfsc	status,2,c
 35160  001F1A  D75D               	goto	l2152
 35161  001F1C  0A01               	xorlw	1	; case 3
 35162  001F1E  B4D8               	btfsc	status,2,c
 35163  001F20  D75C               	goto	l2153
 35164  001F22  0A07               	xorlw	7	; case 4
 35165  001F24  B4D8               	btfsc	status,2,c
 35166  001F26  D762               	goto	l2154
 35167  001F28  0A01               	xorlw	1	; case 5
 35168  001F2A  B4D8               	btfsc	status,2,c
 35169  001F2C  D767               	goto	l2155
 35170  001F2E  0A03               	xorlw	3	; case 6
 35171  001F30  B4D8               	btfsc	status,2,c
 35172  001F32  D76C               	goto	l2156
 35173  001F34  0A01               	xorlw	1	; case 7
 35174  001F36  B4D8               	btfsc	status,2,c
 35175  001F38  D771               	goto	l2157
 35176  001F3A  0A0F               	xorlw	15	; case 8
 35177  001F3C  B4D8               	btfsc	status,2,c
 35178  001F3E  D776               	goto	l2158
 35179  001F40  0A01               	xorlw	1	; case 9
 35180  001F42  B4D8               	btfsc	status,2,c
 35181  001F44  D77B               	goto	l2159
 35182  001F46  0A03               	xorlw	3	; case 10
 35183  001F48  B4D8               	btfsc	status,2,c
 35184  001F4A  D780               	goto	l2160
 35185  001F4C  0A01               	xorlw	1	; case 11
 35186  001F4E  B4D8               	btfsc	status,2,c
 35187  001F50  D785               	goto	l2161
 35188  001F52  0A07               	xorlw	7	; case 12
 35189  001F54  B4D8               	btfsc	status,2,c
 35190  001F56  D784               	goto	l2162
 35191  001F58  0A01               	xorlw	1	; case 13
 35192  001F5A  B4D8               	btfsc	status,2,c
 35193  001F5C  D783               	goto	l2163
 35194  001F5E  0A03               	xorlw	3	; case 14
 35195  001F60  B4D8               	btfsc	status,2,c
 35196  001F62  D782               	goto	l2164
 35197  001F64  0A01               	xorlw	1	; case 15
 35198  001F66  B4D8               	btfsc	status,2,c
 35199  001F68  D781               	goto	l2165
 35200  001F6A  0A1F               	xorlw	31	; case 16
 35201  001F6C  B4D8               	btfsc	status,2,c
 35202  001F6E  D780               	goto	l2166
 35203  001F70  0A01               	xorlw	1	; case 17
 35204  001F72  B4D8               	btfsc	status,2,c
 35205  001F74  D77F               	goto	l2167
 35206  001F76  0A03               	xorlw	3	; case 18
 35207  001F78  B4D8               	btfsc	status,2,c
 35208  001F7A  D77E               	goto	l2168
 35209  001F7C  0A01               	xorlw	1	; case 19
 35210  001F7E  B4D8               	btfsc	status,2,c
 35211  001F80  D77D               	goto	l2169
 35212  001F82  0A07               	xorlw	7	; case 20
 35213  001F84  B4D8               	btfsc	status,2,c
 35214  001F86  D77C               	goto	l2170
 35215  001F88  0A01               	xorlw	1	; case 21
 35216  001F8A  B4D8               	btfsc	status,2,c
 35217  001F8C  D77B               	goto	l2171
 35218  001F8E  0A03               	xorlw	3	; case 22
 35219  001F90  B4D8               	btfsc	status,2,c
 35220  001F92  D77A               	goto	l2172
 35221  001F94  0A01               	xorlw	1	; case 23
 35222  001F96  B4D8               	btfsc	status,2,c
 35223  001F98  D779               	goto	l2173
 35224  001F9A  0A0F               	xorlw	15	; case 24
 35225  001F9C  B4D8               	btfsc	status,2,c
 35226  001F9E  D778               	goto	l2174
 35227  001FA0  0A01               	xorlw	1	; case 25
 35228  001FA2  B4D8               	btfsc	status,2,c
 35229  001FA4  D777               	goto	l2175
 35230  001FA6  0A03               	xorlw	3	; case 26
 35231  001FA8  B4D8               	btfsc	status,2,c
 35232  001FAA  D776               	goto	l2176
 35233  001FAC  0A01               	xorlw	1	; case 27
 35234  001FAE  B4D8               	btfsc	status,2,c
 35235  001FB0  D775               	goto	l2177
 35236  001FB2  0A07               	xorlw	7	; case 28
 35237  001FB4  B4D8               	btfsc	status,2,c
 35238  001FB6  D774               	goto	l2178
 35239  001FB8  0A01               	xorlw	1	; case 29
 35240  001FBA  B4D8               	btfsc	status,2,c
 35241  001FBC  D773               	goto	l2179
 35242  001FBE  0A03               	xorlw	3	; case 30
 35243  001FC0  B4D8               	btfsc	status,2,c
 35244  001FC2  D772               	goto	l2180
 35245  001FC4  0A01               	xorlw	1	; case 31
 35246  001FC6  B4D8               	btfsc	status,2,c
 35247  001FC8  D771               	goto	l2181
 35248  001FCA  0A37               	xorlw	55	; case 40
 35249  001FCC  B4D8               	btfsc	status,2,c
 35250  001FCE  D770               	goto	l2182
 35251  001FD0  0A01               	xorlw	1	; case 41
 35252  001FD2  B4D8               	btfsc	status,2,c
 35253  001FD4  D76F               	goto	l2183
 35254  001FD6  0A05               	xorlw	5	; case 44
 35255  001FD8  B4D8               	btfsc	status,2,c
 35256  001FDA  D76E               	goto	l2184
 35257  001FDC  0A01               	xorlw	1	; case 45
 35258  001FDE  B4D8               	btfsc	status,2,c
 35259  001FE0  D76D               	goto	l2185
 35260  001FE2  0A03               	xorlw	3	; case 46
 35261  001FE4  B4D8               	btfsc	status,2,c
 35262  001FE6  D76C               	goto	l2186
 35263  001FE8  0A01               	xorlw	1	; case 47
 35264  001FEA  B4D8               	btfsc	status,2,c
 35265  001FEC  D769               	goto	l2186
 35266  001FEE  0A19               	xorlw	25	; case 54
 35267  001FF0  B4D8               	btfsc	status,2,c
 35268  001FF2  D768               	goto	l2188
 35269  001FF4  0A01               	xorlw	1	; case 55
 35270  001FF6  B4D8               	btfsc	status,2,c
 35271  001FF8  D767               	goto	l2189
 35272  001FFA  0A0F               	xorlw	15	; case 56
 35273  001FFC  B4D8               	btfsc	status,2,c
 35274  001FFE  D766               	goto	l2190
 35275  002000  0A01               	xorlw	1	; case 57
 35276  002002  B4D8               	btfsc	status,2,c
 35277  002004  D765               	goto	l2191
 35278  002006  0A03               	xorlw	3	; case 58
 35279  002008  B4D8               	btfsc	status,2,c
 35280  00200A  D764               	goto	l2192
 35281  00200C  0A01               	xorlw	1	; case 59
 35282  00200E  B4D8               	btfsc	status,2,c
 35283  002010  D763               	goto	l2193
 35284  002012  0A07               	xorlw	7	; case 60
 35285  002014  B4D8               	btfsc	status,2,c
 35286  002016  D762               	goto	l2194
 35287  002018  0A01               	xorlw	1	; case 61
 35288  00201A  B4D8               	btfsc	status,2,c
 35289  00201C  D761               	goto	l2195
 35290  00201E  D766               	goto	l2198
 35291  002020                     l16329:
 35292                           
 35293                           ; Switch size 1, requested type "space"
 35294                           ; Number of cases is 2, Range of values is 254 to 255
 35295                           ; switch strategies available:
 35296                           ; Name         Instructions Cycles
 35297                           ; simple_byte            7     4 (average)
 35298                           ;	Chosen strategy is simple_byte
 35299  002020  5003               	movf	??__get_fbr,w,c
 35300  002022  0AFE               	xorlw	254	; case 254
 35301  002024  B4D8               	btfsc	status,2,c
 35302  002026  D75E               	goto	l2196
 35303  002028  0A01               	xorlw	1	; case 255
 35304  00202A  B4D8               	btfsc	status,2,c
 35305  00202C  D75D               	goto	l2197
 35306  00202E  D75E               	goto	l2198
 35307  002030                     __end_of__get_fbr:
 35308                           	opt stack 0
 35309                           tosu	equ	0xFFF
 35310                           tosh	equ	0xFFE
 35311                           tosl	equ	0xFFD
 35312                           pclath	equ	0xFFA
 35313                           tblptru	equ	0xFF8
 35314                           tblptrh	equ	0xFF7
 35315                           tblptrl	equ	0xFF6
 35316                           tablat	equ	0xFF5
 35317                           prodh	equ	0xFF4
 35318                           prodl	equ	0xFF3
 35319                           intcon	equ	0xFF2
 35320                           intcon2	equ	0xFF1
 35321                           intcon3	equ	0xFF0
 35322                           indf0	equ	0xFEF
 35323                           postinc0	equ	0xFEE
 35324                           fsr0h	equ	0xFEA
 35325                           fsr0l	equ	0xFE9
 35326                           wreg	equ	0xFE8
 35327                           indf1	equ	0xFE7
 35328                           postdec1	equ	0xFE5
 35329                           plusw1	equ	0xFE3
 35330                           fsr1h	equ	0xFE2
 35331                           fsr1l	equ	0xFE1
 35332                           indf2	equ	0xFDF
 35333                           postinc2	equ	0xFDE
 35334                           postdec2	equ	0xFDD
 35335                           plusw2	equ	0xFDB
 35336                           fsr2h	equ	0xFDA
 35337                           fsr2l	equ	0xFD9
 35338                           status	equ	0xFD8
 35339                           
 35340 ;; *************** function __get_fat *****************
 35341 ;; Defined at:
 35342 ;;		line 1125 in file "fat16.c"
 35343 ;; Parameters:    Size  Location     Type
 35344 ;;  idx             2    0[COMRAM] unsigned int 
 35345 ;; Auto vars:     Size  Location     Type
 35346 ;;		None
 35347 ;; Return value:  Size  Location     Type
 35348 ;;                  1    wreg      unsigned char 
 35349 ;; Registers used:
 35350 ;;		wreg, status,2, status,0
 35351 ;; Tracked objects:
 35352 ;;		On entry : 0/0
 35353 ;;		On exit  : 0/0
 35354 ;;		Unchanged: 0/0
 35355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35356 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35357 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35358 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35359 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35360 ;;Total ram usage:        4 bytes
 35361 ;; Hardware stack levels used:    1
 35362 ;; This function calls:
 35363 ;;		Nothing
 35364 ;; This function is called by:
 35365 ;;		_fat_format
 35366 ;; This function uses a non-reentrant model
 35367 ;;
 35368                           
 35369                           	psect	text176
 35370  007F7E                     __ptext176:
 35371                           	opt stack 0
 35372  007F7E                     __get_fat:
 35373                           	opt stack 27
 35374                           
 35375                           ;fat16.c: 1127: switch (idx)
 35376                           
 35377                           ;incstack = 0
 35378  007F7E  D00E               	goto	l2202
 35379  007F80                     
 35380                           ;fat16.c: 1131: return 0xF8;
 35381  007F80  0EF8               	movlw	248
 35382  007F82  0012               	return	
 35383  007F84                     
 35384                           ;fat16.c: 1133: return 0xFF;
 35385  007F84  0EFF               	movlw	255
 35386  007F86  0012               	return	
 35387  007F88                     
 35388                           ;fat16.c: 1135: return 0xFF;
 35389  007F88  0EFF               	movlw	255
 35390  007F8A  0012               	return	
 35391  007F8C                     
 35392                           ;fat16.c: 1137: return 0xFF;
 35393  007F8C  0EFF               	movlw	255
 35394  007F8E  0012               	return	
 35395  007F90                     
 35396                           ;fat16.c: 1140: return 0xFF;
 35397  007F90  0EFF               	movlw	255
 35398  007F92  0012               	return	
 35399  007F94                     
 35400                           ;fat16.c: 1142: return 0xFF;
 35401  007F94  0EFF               	movlw	255
 35402  007F96  0012               	return	
 35403  007F98                     
 35404                           ;fat16.c: 1144: return 0X00;
 35405  007F98  0E00               	movlw	0
 35406                           
 35407                           ;fat16.c: 1145: }
 35408  007F9A  0012               	return	
 35409  007F9C                     l2202:
 35410  007F9C  C001  F003         	movff	__get_fat@idx,??__get_fat
 35411  007FA0  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
 35412                           
 35413                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 35414                           ; Switch size 1, requested type "space"
 35415                           ; Number of cases is 1, Range of values is 0 to 0
 35416                           ; switch strategies available:
 35417                           ; Name         Instructions Cycles
 35418                           ; simple_byte            4     3 (average)
 35419                           ;	Chosen strategy is simple_byte
 35420  007FA4  5004               	movf	??__get_fat+1,w,c
 35421  007FA6  0A00               	xorlw	0	; case 0
 35422  007FA8  A4D8               	btfss	status,2,c
 35423  007FAA  D7F6               	goto	l2210
 35424                           
 35425                           ; Switch size 1, requested type "space"
 35426                           ; Number of cases is 6, Range of values is 0 to 5
 35427                           ; switch strategies available:
 35428                           ; Name         Instructions Cycles
 35429                           ; simple_byte           19    10 (average)
 35430                           ;	Chosen strategy is simple_byte
 35431  007FAC  5003               	movf	??__get_fat,w,c
 35432  007FAE  0A00               	xorlw	0	; case 0
 35433  007FB0  B4D8               	btfsc	status,2,c
 35434  007FB2  D7E6               	goto	l2203
 35435  007FB4  0A01               	xorlw	1	; case 1
 35436  007FB6  B4D8               	btfsc	status,2,c
 35437  007FB8  D7E5               	goto	l2205
 35438  007FBA  0A03               	xorlw	3	; case 2
 35439  007FBC  B4D8               	btfsc	status,2,c
 35440  007FBE  D7E4               	goto	l2206
 35441  007FC0  0A01               	xorlw	1	; case 3
 35442  007FC2  B4D8               	btfsc	status,2,c
 35443  007FC4  D7E3               	goto	l2207
 35444  007FC6  0A07               	xorlw	7	; case 4
 35445  007FC8  B4D8               	btfsc	status,2,c
 35446  007FCA  D7E2               	goto	l2208
 35447  007FCC  0A01               	xorlw	1	; case 5
 35448  007FCE  B4D8               	btfsc	status,2,c
 35449  007FD0  D7E1               	goto	l2209
 35450  007FD2  D7E2               	goto	l2210
 35451  007FD4                     __end_of__get_fat:
 35452                           	opt stack 0
 35453                           tosu	equ	0xFFF
 35454                           tosh	equ	0xFFE
 35455                           tosl	equ	0xFFD
 35456                           pclath	equ	0xFFA
 35457                           tblptru	equ	0xFF8
 35458                           tblptrh	equ	0xFF7
 35459                           tblptrl	equ	0xFF6
 35460                           tablat	equ	0xFF5
 35461                           prodh	equ	0xFF4
 35462                           prodl	equ	0xFF3
 35463                           intcon	equ	0xFF2
 35464                           intcon2	equ	0xFF1
 35465                           intcon3	equ	0xFF0
 35466                           indf0	equ	0xFEF
 35467                           postinc0	equ	0xFEE
 35468                           fsr0h	equ	0xFEA
 35469                           fsr0l	equ	0xFE9
 35470                           wreg	equ	0xFE8
 35471                           indf1	equ	0xFE7
 35472                           postdec1	equ	0xFE5
 35473                           plusw1	equ	0xFE3
 35474                           fsr1h	equ	0xFE2
 35475                           fsr1l	equ	0xFE1
 35476                           indf2	equ	0xFDF
 35477                           postinc2	equ	0xFDE
 35478                           postdec2	equ	0xFDD
 35479                           plusw2	equ	0xFDB
 35480                           fsr2h	equ	0xFDA
 35481                           fsr2l	equ	0xFD9
 35482                           status	equ	0xFD8
 35483                           
 35484 ;; *************** function __get_data *****************
 35485 ;; Defined at:
 35486 ;;		line 1221 in file "fat16.c"
 35487 ;; Parameters:    Size  Location     Type
 35488 ;;  idx             2    0[COMRAM] unsigned int 
 35489 ;; Auto vars:     Size  Location     Type
 35490 ;;		None
 35491 ;; Return value:  Size  Location     Type
 35492 ;;                  1    wreg      unsigned char 
 35493 ;; Registers used:
 35494 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
 35495 ;; Tracked objects:
 35496 ;;		On entry : 0/0
 35497 ;;		On exit  : 0/0
 35498 ;;		Unchanged: 0/0
 35499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35500 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35503 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35504 ;;Total ram usage:        2 bytes
 35505 ;; Hardware stack levels used:    1
 35506 ;; This function calls:
 35507 ;;		Nothing
 35508 ;; This function is called by:
 35509 ;;		_fat_format
 35510 ;; This function uses a non-reentrant model
 35511 ;;
 35512                           
 35513                           	psect	text177
 35514  008B4C                     __ptext177:
 35515                           	opt stack 0
 35516  008B4C                     __get_data:
 35517                           	opt stack 27
 35518                           
 35519                           ;fat16.c: 1223: if(idx < 12)
 35520                           
 35521                           ;incstack = 0
 35522  008B4C  5002               	movf	__get_data@idx+1,w,c
 35523  008B4E  E110               	bnz	l12813
 35524  008B50  0E0C               	movlw	12
 35525  008B52  5C01               	subwf	__get_data@idx,w,c
 35526  008B54  B0D8               	btfsc	status,0,c
 35527  008B56  D00C               	goto	l2246
 35528                           
 35529                           ;fat16.c: 1224: {;fat16.c: 1225: return "hello world!"[idx];
 35530  008B58  0ED0               	movlw	low STR_12
 35531  008B5A  2401               	addwf	__get_data@idx,w,c
 35532  008B5C  6EF6               	movwf	tblptrl,c
 35533  008B5E  0E9F               	movlw	high STR_12
 35534  008B60  2002               	addwfc	__get_data@idx+1,w,c
 35535  008B62  6EF7               	movwf	tblptrh,c
 35536  008B64                     	if	1	;There are 3 active tblptr bytes
 35537  008B64  6AF8               	clrf	tblptru,c
 35538  008B66  0E00               	movlw	low (__mediumconst shr (0+16))
 35539  008B68  22F8               	addwfc	tblptru,f,c
 35540  008B6A                     	endif
 35541  008B6A  0008               	tblrd		*
 35542  008B6C  50F5               	movf	tablat,w,c
 35543  008B6E  0012               	return	
 35544  008B70                     l2246:
 35545  008B70                     l12813:
 35546                           
 35547                           ;fat16.c: 1226: };fat16.c: 1227: return 0X00;
 35548  008B70  0E00               	movlw	0
 35549  008B72  0012               	return	
 35550  008B74                     __end_of__get_data:
 35551                           	opt stack 0
 35552                           tosu	equ	0xFFF
 35553                           tosh	equ	0xFFE
 35554                           tosl	equ	0xFFD
 35555                           pclath	equ	0xFFA
 35556                           tblptru	equ	0xFF8
 35557                           tblptrh	equ	0xFF7
 35558                           tblptrl	equ	0xFF6
 35559                           tablat	equ	0xFF5
 35560                           prodh	equ	0xFF4
 35561                           prodl	equ	0xFF3
 35562                           intcon	equ	0xFF2
 35563                           intcon2	equ	0xFF1
 35564                           intcon3	equ	0xFF0
 35565                           indf0	equ	0xFEF
 35566                           postinc0	equ	0xFEE
 35567                           fsr0h	equ	0xFEA
 35568                           fsr0l	equ	0xFE9
 35569                           wreg	equ	0xFE8
 35570                           indf1	equ	0xFE7
 35571                           postdec1	equ	0xFE5
 35572                           plusw1	equ	0xFE3
 35573                           fsr1h	equ	0xFE2
 35574                           fsr1l	equ	0xFE1
 35575                           indf2	equ	0xFDF
 35576                           postinc2	equ	0xFDE
 35577                           postdec2	equ	0xFDD
 35578                           plusw2	equ	0xFDB
 35579                           fsr2h	equ	0xFDA
 35580                           fsr2l	equ	0xFD9
 35581                           status	equ	0xFD8
 35582                           
 35583 ;; *************** function __parse_file_resize *****************
 35584 ;; Defined at:
 35585 ;;		line 570 in file "api.c"
 35586 ;; Parameters:    Size  Location     Type
 35587 ;;  data            2   84[COMRAM] PTR unsigned char 
 35588 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35589 ;; Auto vars:     Size  Location     Type
 35590 ;;  file_size       4   87[COMRAM] unsigned long 
 35591 ;; Return value:  Size  Location     Type
 35592 ;;                  1    wreg      unsigned char 
 35593 ;; Registers used:
 35594 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35595 ;; Tracked objects:
 35596 ;;		On entry : 0/0
 35597 ;;		On exit  : 0/0
 35598 ;;		Unchanged: 0/0
 35599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35600 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35601 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35602 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35603 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35604 ;;Total ram usage:        7 bytes
 35605 ;; Hardware stack levels used:    1
 35606 ;; Hardware stack levels required when called:    8
 35607 ;; This function calls:
 35608 ;;		_fat_resize_file
 35609 ;; This function is called by:
 35610 ;;		__parse_command_long
 35611 ;; This function uses a non-reentrant model
 35612 ;;
 35613                           
 35614                           	psect	text178
 35615  005700                     __ptext178:
 35616                           	opt stack 0
 35617  005700                     __parse_file_resize:
 35618                           	opt stack 20
 35619                           
 35620                           ;api.c: 573: uint32_t file_size;;api.c: 574: if((data[0]!=COMMAND_FILE_RESIZE) || (data[
      +                          6]!=0x4C) || (data[7]!=0xEA))
 35621                           
 35622                           ;incstack = 0
 35623  005700  C055  FFD9         	movff	__parse_file_resize@data,fsr2l
 35624  005704  C056  FFDA         	movff	__parse_file_resize@data+1,fsr2h
 35625  005708  0E50               	movlw	80
 35626  00570A  18DE               	xorwf	postinc2,w,c
 35627  00570C  A4D8               	btfss	status,2,c
 35628  00570E  D014               	goto	u10840
 35629  005710  EE20 F006          	lfsr	2,6
 35630  005714  5055               	movf	__parse_file_resize@data,w,c
 35631  005716  26D9               	addwf	fsr2l,f,c
 35632  005718  5056               	movf	__parse_file_resize@data+1,w,c
 35633  00571A  22DA               	addwfc	fsr2h,f,c
 35634  00571C  0E4C               	movlw	76
 35635  00571E  18DE               	xorwf	postinc2,w,c
 35636  005720  A4D8               	btfss	status,2,c
 35637  005722  D00A               	goto	u10840
 35638  005724  EE20 F007          	lfsr	2,7
 35639  005728  5055               	movf	__parse_file_resize@data,w,c
 35640  00572A  26D9               	addwf	fsr2l,f,c
 35641  00572C  5056               	movf	__parse_file_resize@data+1,w,c
 35642  00572E  22DA               	addwfc	fsr2h,f,c
 35643  005730  0EEA               	movlw	234
 35644  005732  18DE               	xorwf	postinc2,w,c
 35645  005734  B4D8               	btfsc	status,2,c
 35646  005736  D002               	goto	l2809
 35647  005738                     u10840:
 35648                           
 35649                           ;api.c: 575: {;api.c: 576: return 8;
 35650  005738  0E08               	movlw	8
 35651  00573A  0012               	return	
 35652  00573C                     l2809:
 35653                           
 35654                           ;api.c: 577: };api.c: 580: file_size = data[2];
 35655  00573C  EE20 F002          	lfsr	2,2
 35656  005740  5055               	movf	__parse_file_resize@data,w,c
 35657  005742  26D9               	addwf	fsr2l,f,c
 35658  005744  5056               	movf	__parse_file_resize@data+1,w,c
 35659  005746  22DA               	addwfc	fsr2h,f,c
 35660  005748  50DF               	movf	indf2,w,c
 35661  00574A  6E57               	movwf	??__parse_file_resize& (0+255),c
 35662  00574C  5057               	movf	??__parse_file_resize,w,c
 35663  00574E  6E58               	movwf	__parse_file_resize@file_size,c
 35664  005750  6A59               	clrf	__parse_file_resize@file_size+1,c
 35665  005752  6A5A               	clrf	__parse_file_resize@file_size+2,c
 35666  005754  6A5B               	clrf	__parse_file_resize@file_size+3,c
 35667                           
 35668                           ;api.c: 581: file_size <<= 8;
 35669  005756  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35670  00575A  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35671  00575E  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35672  005762  6A58               	clrf	__parse_file_resize@file_size,c
 35673                           
 35674                           ;api.c: 582: file_size |= data[3];
 35675  005764  EE20 F003          	lfsr	2,3
 35676  005768  5055               	movf	__parse_file_resize@data,w,c
 35677  00576A  26D9               	addwf	fsr2l,f,c
 35678  00576C  5056               	movf	__parse_file_resize@data+1,w,c
 35679  00576E  22DA               	addwfc	fsr2h,f,c
 35680  005770  50DF               	movf	indf2,w,c
 35681  005772  6E57               	movwf	??__parse_file_resize& (0+255),c
 35682  005774  5057               	movf	??__parse_file_resize,w,c
 35683  005776  1258               	iorwf	__parse_file_resize@file_size,f,c
 35684                           
 35685                           ;api.c: 583: file_size <<= 8;
 35686  005778  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35687  00577C  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35688  005780  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35689  005784  6A58               	clrf	__parse_file_resize@file_size,c
 35690                           
 35691                           ;api.c: 584: file_size |= data[4];
 35692  005786  EE20 F004          	lfsr	2,4
 35693  00578A  5055               	movf	__parse_file_resize@data,w,c
 35694  00578C  26D9               	addwf	fsr2l,f,c
 35695  00578E  5056               	movf	__parse_file_resize@data+1,w,c
 35696  005790  22DA               	addwfc	fsr2h,f,c
 35697  005792  50DF               	movf	indf2,w,c
 35698  005794  6E57               	movwf	??__parse_file_resize& (0+255),c
 35699  005796  5057               	movf	??__parse_file_resize,w,c
 35700  005798  1258               	iorwf	__parse_file_resize@file_size,f,c
 35701                           
 35702                           ;api.c: 585: file_size <<= 8;
 35703  00579A  C05A  F05B         	movff	__parse_file_resize@file_size+2,__parse_file_resize@file_size+3
 35704  00579E  C059  F05A         	movff	__parse_file_resize@file_size+1,__parse_file_resize@file_size+2
 35705  0057A2  C058  F059         	movff	__parse_file_resize@file_size,__parse_file_resize@file_size+1
 35706  0057A6  6A58               	clrf	__parse_file_resize@file_size,c
 35707                           
 35708                           ;api.c: 586: file_size |= data[5];
 35709  0057A8  EE20 F005          	lfsr	2,5
 35710  0057AC  5055               	movf	__parse_file_resize@data,w,c
 35711  0057AE  26D9               	addwf	fsr2l,f,c
 35712  0057B0  5056               	movf	__parse_file_resize@data+1,w,c
 35713  0057B2  22DA               	addwfc	fsr2h,f,c
 35714  0057B4  50DF               	movf	indf2,w,c
 35715  0057B6  6E57               	movwf	??__parse_file_resize& (0+255),c
 35716  0057B8  5057               	movf	??__parse_file_resize,w,c
 35717  0057BA  1258               	iorwf	__parse_file_resize@file_size,f,c
 35718                           
 35719                           ;api.c: 589: fat_resize_file(data[1], file_size);
 35720  0057BC  C058  F04D         	movff	__parse_file_resize@file_size,fat_resize_file@new_file_size
 35721  0057C0  C059  F04E         	movff	__parse_file_resize@file_size+1,fat_resize_file@new_file_size+1
 35722  0057C4  C05A  F04F         	movff	__parse_file_resize@file_size+2,fat_resize_file@new_file_size+2
 35723  0057C8  C05B  F050         	movff	__parse_file_resize@file_size+3,fat_resize_file@new_file_size+3
 35724  0057CC  EE20 F001          	lfsr	2,1
 35725  0057D0  5055               	movf	__parse_file_resize@data,w,c
 35726  0057D2  26D9               	addwf	fsr2l,f,c
 35727  0057D4  5056               	movf	__parse_file_resize@data+1,w,c
 35728  0057D6  22DA               	addwfc	fsr2h,f,c
 35729  0057D8  50DF               	movf	indf2,w,c
 35730  0057DA  ECF3  F026         	call	_fat_resize_file
 35731                           
 35732                           ;api.c: 590: return 8;
 35733  0057DE  0E08               	movlw	8
 35734  0057E0  0012               	return	
 35735  0057E2                     __end_of__parse_file_resize:
 35736                           	opt stack 0
 35737                           tosu	equ	0xFFF
 35738                           tosh	equ	0xFFE
 35739                           tosl	equ	0xFFD
 35740                           pclath	equ	0xFFA
 35741                           tblptru	equ	0xFF8
 35742                           tblptrh	equ	0xFF7
 35743                           tblptrl	equ	0xFF6
 35744                           tablat	equ	0xFF5
 35745                           prodh	equ	0xFF4
 35746                           prodl	equ	0xFF3
 35747                           intcon	equ	0xFF2
 35748                           intcon2	equ	0xFF1
 35749                           intcon3	equ	0xFF0
 35750                           indf0	equ	0xFEF
 35751                           postinc0	equ	0xFEE
 35752                           fsr0h	equ	0xFEA
 35753                           fsr0l	equ	0xFE9
 35754                           wreg	equ	0xFE8
 35755                           indf1	equ	0xFE7
 35756                           postdec1	equ	0xFE5
 35757                           plusw1	equ	0xFE3
 35758                           fsr1h	equ	0xFE2
 35759                           fsr1l	equ	0xFE1
 35760                           indf2	equ	0xFDF
 35761                           postinc2	equ	0xFDE
 35762                           postdec2	equ	0xFDD
 35763                           plusw2	equ	0xFDB
 35764                           fsr2h	equ	0xFDA
 35765                           fsr2l	equ	0xFD9
 35766                           status	equ	0xFD8
 35767                           
 35768 ;; *************** function __parse_file_rename *****************
 35769 ;; Defined at:
 35770 ;;		line 631 in file "api.c"
 35771 ;; Parameters:    Size  Location     Type
 35772 ;;  data            2    0[BANK0 ] PTR unsigned char 
 35773 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35774 ;; Auto vars:     Size  Location     Type
 35775 ;;		None
 35776 ;; Return value:  Size  Location     Type
 35777 ;;                  1    wreg      unsigned char 
 35778 ;; Registers used:
 35779 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35780 ;; Tracked objects:
 35781 ;;		On entry : 0/0
 35782 ;;		On exit  : 0/0
 35783 ;;		Unchanged: 0/0
 35784 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35785 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35786 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35787 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35788 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35789 ;;Total ram usage:        3 bytes
 35790 ;; Hardware stack levels used:    1
 35791 ;; Hardware stack levels required when called:    7
 35792 ;; This function calls:
 35793 ;;		_fat_rename_file
 35794 ;; This function is called by:
 35795 ;;		__parse_command_long
 35796 ;; This function uses a non-reentrant model
 35797 ;;
 35798                           
 35799                           	psect	text179
 35800  0077A8                     __ptext179:
 35801                           	opt stack 0
 35802  0077A8                     __parse_file_rename:
 35803                           	opt stack 21
 35804                           
 35805                           ;api.c: 634: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 35806                           
 35807                           ;incstack = 0
 35808  0077A8  C060  FFD9         	movff	__parse_file_rename@data,fsr2l
 35809  0077AC  C061  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 35810  0077B0  0E53               	movlw	83
 35811  0077B2  18DE               	xorwf	postinc2,w,c
 35812  0077B4  A4D8               	btfss	status,2,c
 35813  0077B6  D015               	goto	u10930
 35814  0077B8  0100               	movlb	0	; () banked
 35815  0077BA  EE20 F00D          	lfsr	2,13
 35816  0077BE  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35817  0077C0  26D9               	addwf	fsr2l,f,c
 35818  0077C2  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35819  0077C4  22DA               	addwfc	fsr2h,f,c
 35820  0077C6  0E7E               	movlw	126
 35821  0077C8  18DE               	xorwf	postinc2,w,c
 35822  0077CA  A4D8               	btfss	status,2,c
 35823  0077CC  D00A               	goto	u10930
 35824                           
 35825                           ; BSR set to: 0
 35826  0077CE  EE20 F00E          	lfsr	2,14
 35827  0077D2  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35828  0077D4  26D9               	addwf	fsr2l,f,c
 35829  0077D6  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35830  0077D8  22DA               	addwfc	fsr2h,f,c
 35831  0077DA  0E18               	movlw	24
 35832  0077DC  18DE               	xorwf	postinc2,w,c
 35833  0077DE  B4D8               	btfsc	status,2,c
 35834  0077E0  D002               	goto	l2827
 35835  0077E2                     u10930:
 35836                           
 35837                           ;api.c: 635: {;api.c: 636: return 15;
 35838                           
 35839                           ; BSR set to: 0
 35840  0077E2  0E0F               	movlw	15
 35841  0077E4  0012               	return	
 35842  0077E6                     l2827:
 35843                           
 35844                           ;api.c: 637: };api.c: 640: fat_rename_file(data[1], &data[2], &data[10]);
 35845  0077E6  0E02               	movlw	2
 35846  0077E8  0100               	movlb	0	; () banked
 35847  0077EA  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35848  0077EC  6E38               	movwf	fat_rename_file@name,c
 35849  0077EE  0E00               	movlw	0
 35850  0077F0  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35851  0077F2  6E39               	movwf	fat_rename_file@name+1,c
 35852  0077F4  0E0A               	movlw	10
 35853  0077F6  2560               	addwf	__parse_file_rename@data& (0+255),w,b
 35854  0077F8  6E3A               	movwf	fat_rename_file@extension,c
 35855  0077FA  0E00               	movlw	0
 35856  0077FC  2161               	addwfc	(__parse_file_rename@data+1)& (0+255),w,b
 35857  0077FE  6E3B               	movwf	fat_rename_file@extension+1,c
 35858  007800  EE20 F001          	lfsr	2,1
 35859  007804  5160               	movf	__parse_file_rename@data& (0+255),w,b
 35860  007806  26D9               	addwf	fsr2l,f,c
 35861  007808  5161               	movf	(__parse_file_rename@data+1)& (0+255),w,b
 35862  00780A  22DA               	addwfc	fsr2h,f,c
 35863  00780C  50DF               	movf	indf2,w,c
 35864  00780E  EC68  F036         	call	_fat_rename_file
 35865                           
 35866                           ;api.c: 641: return 15;
 35867  007812  0E0F               	movlw	15
 35868  007814  0012               	return	
 35869  007816                     __end_of__parse_file_rename:
 35870                           	opt stack 0
 35871                           tosu	equ	0xFFF
 35872                           tosh	equ	0xFFE
 35873                           tosl	equ	0xFFD
 35874                           pclath	equ	0xFFA
 35875                           tblptru	equ	0xFF8
 35876                           tblptrh	equ	0xFF7
 35877                           tblptrl	equ	0xFF6
 35878                           tablat	equ	0xFF5
 35879                           prodh	equ	0xFF4
 35880                           prodl	equ	0xFF3
 35881                           intcon	equ	0xFF2
 35882                           intcon2	equ	0xFF1
 35883                           intcon3	equ	0xFF0
 35884                           indf0	equ	0xFEF
 35885                           postinc0	equ	0xFEE
 35886                           fsr0h	equ	0xFEA
 35887                           fsr0l	equ	0xFE9
 35888                           wreg	equ	0xFE8
 35889                           indf1	equ	0xFE7
 35890                           postdec1	equ	0xFE5
 35891                           plusw1	equ	0xFE3
 35892                           fsr1h	equ	0xFE2
 35893                           fsr1l	equ	0xFE1
 35894                           indf2	equ	0xFDF
 35895                           postinc2	equ	0xFDE
 35896                           postdec2	equ	0xFDD
 35897                           plusw2	equ	0xFDB
 35898                           fsr2h	equ	0xFDA
 35899                           fsr2l	equ	0xFD9
 35900                           status	equ	0xFD8
 35901                           
 35902 ;; *************** function _fat_rename_file *****************
 35903 ;; Defined at:
 35904 ;;		line 717 in file "fat16.c"
 35905 ;; Parameters:    Size  Location     Type
 35906 ;;  file_number     1    wreg     unsigned char 
 35907 ;;  name            2   55[COMRAM] PTR unsigned char 
 35908 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35909 ;;  extension       2   57[COMRAM] PTR unsigned char 
 35910 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 35911 ;; Auto vars:     Size  Location     Type
 35912 ;;  file_number     1   60[COMRAM] unsigned char 
 35913 ;;  root           32   61[COMRAM] struct .
 35914 ;;  cntr            1   93[COMRAM] unsigned char 
 35915 ;;  return_code     1   59[COMRAM] unsigned char 
 35916 ;; Return value:  Size  Location     Type
 35917 ;;                  1    wreg      void 
 35918 ;; Registers used:
 35919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 35920 ;; Tracked objects:
 35921 ;;		On entry : 0/0
 35922 ;;		On exit  : 0/0
 35923 ;;		Unchanged: 0/0
 35924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35925 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35926 ;;      Locals:        35       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35928 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35929 ;;Total ram usage:       39 bytes
 35930 ;; Hardware stack levels used:    1
 35931 ;; Hardware stack levels required when called:    6
 35932 ;; This function calls:
 35933 ;;		__write_root
 35934 ;;		_fat_get_file_information
 35935 ;; This function is called by:
 35936 ;;		__parse_file_rename
 35937 ;; This function uses a non-reentrant model
 35938 ;;
 35939                           
 35940                           	psect	text180
 35941  006CD0                     __ptext180:
 35942                           	opt stack 0
 35943  006CD0                     _fat_rename_file:
 35944                           	opt stack 21
 35945                           
 35946                           ;incstack = 0
 35947                           ;fat_rename_file@file_number stored from wreg
 35948  006CD0  6E3D               	movwf	fat_rename_file@file_number,c
 35949                           
 35950                           ;fat16.c: 719: rootEntry_t root;;fat16.c: 720: uint8_t cntr;;fat16.c: 721: uint8_t retur
      +                          n_code;;fat16.c: 724: return_code = fat_get_file_information(file_number, &root);
 35951  006CD2  0E3E               	movlw	low fat_rename_file@root
 35952  006CD4  6E30               	movwf	fat_get_file_information@data,c
 35953  006CD6  0E00               	movlw	high fat_rename_file@root
 35954  006CD8  6E31               	movwf	fat_get_file_information@data+1,c
 35955  006CDA  503D               	movf	fat_rename_file@file_number,w,c
 35956  006CDC  EC2B  F03B         	call	_fat_get_file_information
 35957  006CE0  6E3C               	movwf	fat_rename_file@return_code,c
 35958                           
 35959                           ;fat16.c: 725: if(return_code!=0x00)
 35960  006CE2  503C               	movf	fat_rename_file@return_code,w,c
 35961  006CE4  A4D8               	btfss	status,2,c
 35962  006CE6  0012               	return	
 35963                           
 35964                           ;fat16.c: 729: };fat16.c: 732: for(cntr=0; cntr<8; ++cntr)
 35965                           
 35966                           ;fat16.c: 726: {;fat16.c: 728: return;
 35967  006CE8  0E00               	movlw	0
 35968  006CEA  6E5E               	movwf	fat_rename_file@cntr,c
 35969  006CEC                     l13341:
 35970  006CEC  0E07               	movlw	7
 35971  006CEE  645E               	cpfsgt	fat_rename_file@cntr,c
 35972  006CF0  D001               	goto	l2085
 35973  006CF2  D014               	goto	u10190
 35974  006CF4                     l2085:
 35975                           
 35976                           ;fat16.c: 733: {;fat16.c: 734: root.fileName[cntr] = name[cntr];
 35977  006CF4  505E               	movf	fat_rename_file@cntr,w,c
 35978  006CF6  0D01               	mullw	1
 35979  006CF8  50F3               	movf	prodl,w,c
 35980  006CFA  2438               	addwf	fat_rename_file@name,w,c
 35981  006CFC  6ED9               	movwf	fsr2l,c
 35982  006CFE  50F4               	movf	prodh,w,c
 35983  006D00  2039               	addwfc	fat_rename_file@name+1,w,c
 35984  006D02  6EDA               	movwf	fsr2h,c
 35985  006D04  505E               	movf	fat_rename_file@cntr,w,c
 35986  006D06  0D01               	mullw	1
 35987  006D08  0E3E               	movlw	low fat_rename_file@root
 35988  006D0A  24F3               	addwf	prodl,w,c
 35989  006D0C  6EE1               	movwf	fsr1l,c
 35990  006D0E  0E00               	movlw	high fat_rename_file@root
 35991  006D10  20F4               	addwfc	prodh,w,c
 35992  006D12  6EE2               	movwf	fsr1h,c
 35993  006D14  CFDF FFE7          	movff	indf2,indf1
 35994  006D18  2A5E               	incf	fat_rename_file@cntr,f,c
 35995  006D1A  D7E8               	goto	l13341
 35996  006D1C                     u10190:
 35997                           
 35998                           ;fat16.c: 735: };fat16.c: 738: for(cntr=0; cntr<3; ++cntr)
 35999  006D1C  0E00               	movlw	0
 36000  006D1E  6E5E               	movwf	fat_rename_file@cntr,c
 36001  006D20                     l13353:
 36002  006D20  0E02               	movlw	2
 36003  006D22  645E               	cpfsgt	fat_rename_file@cntr,c
 36004  006D24  D001               	goto	l2087
 36005  006D26  D018               	goto	u10210
 36006  006D28                     l2087:
 36007                           
 36008                           ;fat16.c: 739: {;fat16.c: 740: root.fileExtension[cntr] = extension[cntr];
 36009  006D28  505E               	movf	fat_rename_file@cntr,w,c
 36010  006D2A  0D01               	mullw	1
 36011  006D2C  50F3               	movf	prodl,w,c
 36012  006D2E  243A               	addwf	fat_rename_file@extension,w,c
 36013  006D30  6ED9               	movwf	fsr2l,c
 36014  006D32  50F4               	movf	prodh,w,c
 36015  006D34  203B               	addwfc	fat_rename_file@extension+1,w,c
 36016  006D36  6EDA               	movwf	fsr2h,c
 36017  006D38  505E               	movf	fat_rename_file@cntr,w,c
 36018  006D3A  0D01               	mullw	1
 36019  006D3C  0E08               	movlw	8
 36020  006D3E  26F3               	addwf	prodl,f,c
 36021  006D40  0E00               	movlw	0
 36022  006D42  22F4               	addwfc	prodh,f,c
 36023  006D44  0E3E               	movlw	low fat_rename_file@root
 36024  006D46  24F3               	addwf	prodl,w,c
 36025  006D48  6EE1               	movwf	fsr1l,c
 36026  006D4A  0E00               	movlw	high fat_rename_file@root
 36027  006D4C  20F4               	addwfc	prodh,w,c
 36028  006D4E  6EE2               	movwf	fsr1h,c
 36029  006D50  CFDF FFE7          	movff	indf2,indf1
 36030  006D54  2A5E               	incf	fat_rename_file@cntr,f,c
 36031  006D56  D7E4               	goto	l13353
 36032  006D58                     u10210:
 36033                           
 36034                           ;fat16.c: 741: };fat16.c: 744: _write_root(file_number, &root);
 36035  006D58  0E3E               	movlw	low fat_rename_file@root
 36036  006D5A  6E29               	movwf	__write_root@data,c
 36037  006D5C  0E00               	movlw	high fat_rename_file@root
 36038  006D5E  6E2A               	movwf	__write_root@data+1,c
 36039  006D60  503D               	movf	fat_rename_file@file_number,w,c
 36040  006D62  EC5C  F042         	call	__write_root
 36041  006D66  0012               	return		;funcret
 36042  006D68                     __end_of_fat_rename_file:
 36043                           	opt stack 0
 36044                           tosu	equ	0xFFF
 36045                           tosh	equ	0xFFE
 36046                           tosl	equ	0xFFD
 36047                           pclath	equ	0xFFA
 36048                           tblptru	equ	0xFF8
 36049                           tblptrh	equ	0xFF7
 36050                           tblptrl	equ	0xFF6
 36051                           tablat	equ	0xFF5
 36052                           prodh	equ	0xFF4
 36053                           prodl	equ	0xFF3
 36054                           intcon	equ	0xFF2
 36055                           intcon2	equ	0xFF1
 36056                           intcon3	equ	0xFF0
 36057                           indf0	equ	0xFEF
 36058                           postinc0	equ	0xFEE
 36059                           fsr0h	equ	0xFEA
 36060                           fsr0l	equ	0xFE9
 36061                           wreg	equ	0xFE8
 36062                           indf1	equ	0xFE7
 36063                           postdec1	equ	0xFE5
 36064                           plusw1	equ	0xFE3
 36065                           fsr1h	equ	0xFE2
 36066                           fsr1l	equ	0xFE1
 36067                           indf2	equ	0xFDF
 36068                           postinc2	equ	0xFDE
 36069                           postdec2	equ	0xFDD
 36070                           plusw2	equ	0xFDB
 36071                           fsr2h	equ	0xFDA
 36072                           fsr2l	equ	0xFD9
 36073                           status	equ	0xFD8
 36074                           
 36075 ;; *************** function __parse_file_modify *****************
 36076 ;; Defined at:
 36077 ;;		line 658 in file "api.c"
 36078 ;; Parameters:    Size  Location     Type
 36079 ;;  data            2   85[COMRAM] PTR unsigned char 
 36080 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36081 ;; Auto vars:     Size  Location     Type
 36082 ;;  start_byte      4   90[COMRAM] unsigned long 
 36083 ;;  number_of_by    2   88[COMRAM] unsigned int 
 36084 ;; Return value:  Size  Location     Type
 36085 ;;                  1    wreg      unsigned char 
 36086 ;; Registers used:
 36087 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36088 ;; Tracked objects:
 36089 ;;		On entry : 0/0
 36090 ;;		On exit  : 0/0
 36091 ;;		Unchanged: 0/0
 36092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36094 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36095 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36096 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36097 ;;Total ram usage:        9 bytes
 36098 ;; Hardware stack levels used:    1
 36099 ;; Hardware stack levels required when called:    8
 36100 ;; This function calls:
 36101 ;;		_fat_modify_file
 36102 ;; This function is called by:
 36103 ;;		__parse_command_long
 36104 ;; This function uses a non-reentrant model
 36105 ;;
 36106                           
 36107                           	psect	text181
 36108  0045B6                     __ptext181:
 36109                           	opt stack 0
 36110  0045B6                     __parse_file_modify:
 36111                           	opt stack 20
 36112                           
 36113                           ;api.c: 660: uint16_t number_of_bytes;;api.c: 661: uint32_t start_byte;;api.c: 664: if((
      +                          data[0]!=COMMAND_FILE_MODIFY) || (data[7]!=0x0F) || (data[8]!=0x9B))
 36114                           
 36115                           ;incstack = 0
 36116  0045B6  C056  FFD9         	movff	__parse_file_modify@data,fsr2l
 36117  0045BA  C057  FFDA         	movff	__parse_file_modify@data+1,fsr2h
 36118  0045BE  0E55               	movlw	85
 36119  0045C0  18DE               	xorwf	postinc2,w,c
 36120  0045C2  A4D8               	btfss	status,2,c
 36121  0045C4  D014               	goto	u10990
 36122  0045C6  EE20 F007          	lfsr	2,7
 36123  0045CA  5056               	movf	__parse_file_modify@data,w,c
 36124  0045CC  26D9               	addwf	fsr2l,f,c
 36125  0045CE  5057               	movf	__parse_file_modify@data+1,w,c
 36126  0045D0  22DA               	addwfc	fsr2h,f,c
 36127  0045D2  0E0F               	movlw	15
 36128  0045D4  18DE               	xorwf	postinc2,w,c
 36129  0045D6  A4D8               	btfss	status,2,c
 36130  0045D8  D00A               	goto	u10990
 36131  0045DA  EE20 F008          	lfsr	2,8
 36132  0045DE  5056               	movf	__parse_file_modify@data,w,c
 36133  0045E0  26D9               	addwf	fsr2l,f,c
 36134  0045E2  5057               	movf	__parse_file_modify@data+1,w,c
 36135  0045E4  22DA               	addwfc	fsr2h,f,c
 36136  0045E6  0E9B               	movlw	155
 36137  0045E8  18DE               	xorwf	postinc2,w,c
 36138  0045EA  B4D8               	btfsc	status,2,c
 36139  0045EC  D002               	goto	l2839
 36140  0045EE                     u10990:
 36141                           
 36142                           ;api.c: 665: {;api.c: 667: return 65;
 36143  0045EE  0E41               	movlw	65
 36144  0045F0  0012               	return	
 36145  0045F2                     l2839:
 36146                           
 36147                           ;api.c: 668: };api.c: 671: number_of_bytes = data[6];
 36148  0045F2  EE20 F006          	lfsr	2,6
 36149  0045F6  5056               	movf	__parse_file_modify@data,w,c
 36150  0045F8  26D9               	addwf	fsr2l,f,c
 36151  0045FA  5057               	movf	__parse_file_modify@data+1,w,c
 36152  0045FC  22DA               	addwfc	fsr2h,f,c
 36153  0045FE  50DF               	movf	indf2,w,c
 36154  004600  6E58               	movwf	??__parse_file_modify& (0+255),c
 36155  004602  5058               	movf	??__parse_file_modify,w,c
 36156  004604  6E59               	movwf	__parse_file_modify@number_of_bytes,c
 36157  004606  6A5A               	clrf	__parse_file_modify@number_of_bytes+1,c
 36158                           
 36159                           ;api.c: 674: start_byte = data[2];
 36160  004608  EE20 F002          	lfsr	2,2
 36161  00460C  5056               	movf	__parse_file_modify@data,w,c
 36162  00460E  26D9               	addwf	fsr2l,f,c
 36163  004610  5057               	movf	__parse_file_modify@data+1,w,c
 36164  004612  22DA               	addwfc	fsr2h,f,c
 36165  004614  50DF               	movf	indf2,w,c
 36166  004616  6E58               	movwf	??__parse_file_modify& (0+255),c
 36167  004618  5058               	movf	??__parse_file_modify,w,c
 36168  00461A  6E5B               	movwf	__parse_file_modify@start_byte,c
 36169  00461C  6A5C               	clrf	__parse_file_modify@start_byte+1,c
 36170  00461E  6A5D               	clrf	__parse_file_modify@start_byte+2,c
 36171  004620  6A5E               	clrf	__parse_file_modify@start_byte+3,c
 36172                           
 36173                           ;api.c: 675: start_byte <<= 8;
 36174  004622  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36175  004626  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36176  00462A  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36177  00462E  6A5B               	clrf	__parse_file_modify@start_byte,c
 36178                           
 36179                           ;api.c: 676: start_byte |= data[3];
 36180  004630  EE20 F003          	lfsr	2,3
 36181  004634  5056               	movf	__parse_file_modify@data,w,c
 36182  004636  26D9               	addwf	fsr2l,f,c
 36183  004638  5057               	movf	__parse_file_modify@data+1,w,c
 36184  00463A  22DA               	addwfc	fsr2h,f,c
 36185  00463C  50DF               	movf	indf2,w,c
 36186  00463E  6E58               	movwf	??__parse_file_modify& (0+255),c
 36187  004640  5058               	movf	??__parse_file_modify,w,c
 36188  004642  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36189                           
 36190                           ;api.c: 677: start_byte <<= 8;
 36191  004644  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36192  004648  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36193  00464C  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36194  004650  6A5B               	clrf	__parse_file_modify@start_byte,c
 36195                           
 36196                           ;api.c: 678: start_byte |= data[4];
 36197  004652  EE20 F004          	lfsr	2,4
 36198  004656  5056               	movf	__parse_file_modify@data,w,c
 36199  004658  26D9               	addwf	fsr2l,f,c
 36200  00465A  5057               	movf	__parse_file_modify@data+1,w,c
 36201  00465C  22DA               	addwfc	fsr2h,f,c
 36202  00465E  50DF               	movf	indf2,w,c
 36203  004660  6E58               	movwf	??__parse_file_modify& (0+255),c
 36204  004662  5058               	movf	??__parse_file_modify,w,c
 36205  004664  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36206                           
 36207                           ;api.c: 679: start_byte <<= 8;
 36208  004666  C05D  F05E         	movff	__parse_file_modify@start_byte+2,__parse_file_modify@start_byte+3
 36209  00466A  C05C  F05D         	movff	__parse_file_modify@start_byte+1,__parse_file_modify@start_byte+2
 36210  00466E  C05B  F05C         	movff	__parse_file_modify@start_byte,__parse_file_modify@start_byte+1
 36211  004672  6A5B               	clrf	__parse_file_modify@start_byte,c
 36212                           
 36213                           ;api.c: 680: start_byte |= data[5];
 36214  004674  EE20 F005          	lfsr	2,5
 36215  004678  5056               	movf	__parse_file_modify@data,w,c
 36216  00467A  26D9               	addwf	fsr2l,f,c
 36217  00467C  5057               	movf	__parse_file_modify@data+1,w,c
 36218  00467E  22DA               	addwfc	fsr2h,f,c
 36219  004680  50DF               	movf	indf2,w,c
 36220  004682  6E58               	movwf	??__parse_file_modify& (0+255),c
 36221  004684  5058               	movf	??__parse_file_modify,w,c
 36222  004686  125B               	iorwf	__parse_file_modify@start_byte,f,c
 36223                           
 36224                           ;api.c: 682: fat_modify_file(data[1], start_byte, number_of_bytes, &data[9]);
 36225  004688  C05B  F042         	movff	__parse_file_modify@start_byte,fat_modify_file@start_byte
 36226  00468C  C05C  F043         	movff	__parse_file_modify@start_byte+1,fat_modify_file@start_byte+1
 36227  004690  C05D  F044         	movff	__parse_file_modify@start_byte+2,fat_modify_file@start_byte+2
 36228  004694  C05E  F045         	movff	__parse_file_modify@start_byte+3,fat_modify_file@start_byte+3
 36229  004698  C059  F046         	movff	__parse_file_modify@number_of_bytes,fat_modify_file@length
 36230  00469C  C05A  F047         	movff	__parse_file_modify@number_of_bytes+1,fat_modify_file@length+1
 36231  0046A0  0E09               	movlw	9
 36232  0046A2  2456               	addwf	__parse_file_modify@data,w,c
 36233  0046A4  6E48               	movwf	fat_modify_file@data,c
 36234  0046A6  0E00               	movlw	0
 36235  0046A8  2057               	addwfc	__parse_file_modify@data+1,w,c
 36236  0046AA  6E49               	movwf	fat_modify_file@data+1,c
 36237  0046AC  EE20 F001          	lfsr	2,1
 36238  0046B0  5056               	movf	__parse_file_modify@data,w,c
 36239  0046B2  26D9               	addwf	fsr2l,f,c
 36240  0046B4  5057               	movf	__parse_file_modify@data+1,w,c
 36241  0046B6  22DA               	addwfc	fsr2h,f,c
 36242  0046B8  50DF               	movf	indf2,w,c
 36243  0046BA  EC42  F011         	call	_fat_modify_file
 36244                           
 36245                           ;api.c: 683: return number_of_bytes + 9;
 36246  0046BE  5059               	movf	__parse_file_modify@number_of_bytes,w,c
 36247  0046C0  0F09               	addlw	9
 36248  0046C2  0012               	return	
 36249  0046C4                     __end_of__parse_file_modify:
 36250                           	opt stack 0
 36251                           tosu	equ	0xFFF
 36252                           tosh	equ	0xFFE
 36253                           tosl	equ	0xFFD
 36254                           pclath	equ	0xFFA
 36255                           tblptru	equ	0xFF8
 36256                           tblptrh	equ	0xFF7
 36257                           tblptrl	equ	0xFF6
 36258                           tablat	equ	0xFF5
 36259                           prodh	equ	0xFF4
 36260                           prodl	equ	0xFF3
 36261                           intcon	equ	0xFF2
 36262                           intcon2	equ	0xFF1
 36263                           intcon3	equ	0xFF0
 36264                           indf0	equ	0xFEF
 36265                           postinc0	equ	0xFEE
 36266                           fsr0h	equ	0xFEA
 36267                           fsr0l	equ	0xFE9
 36268                           wreg	equ	0xFE8
 36269                           indf1	equ	0xFE7
 36270                           postdec1	equ	0xFE5
 36271                           plusw1	equ	0xFE3
 36272                           fsr1h	equ	0xFE2
 36273                           fsr1l	equ	0xFE1
 36274                           indf2	equ	0xFDF
 36275                           postinc2	equ	0xFDE
 36276                           postdec2	equ	0xFDD
 36277                           plusw2	equ	0xFDB
 36278                           fsr2h	equ	0xFDA
 36279                           fsr2l	equ	0xFD9
 36280                           status	equ	0xFD8
 36281                           
 36282 ;; *************** function __parse_file_delete *****************
 36283 ;; Defined at:
 36284 ;;		line 594 in file "api.c"
 36285 ;; Parameters:    Size  Location     Type
 36286 ;;  data            2   79[COMRAM] PTR unsigned char 
 36287 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36288 ;; Auto vars:     Size  Location     Type
 36289 ;;		None
 36290 ;; Return value:  Size  Location     Type
 36291 ;;                  1    wreg      unsigned char 
 36292 ;; Registers used:
 36293 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36294 ;; Tracked objects:
 36295 ;;		On entry : 0/0
 36296 ;;		On exit  : 0/0
 36297 ;;		Unchanged: 0/0
 36298 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36299 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36300 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36301 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36302 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36303 ;;Total ram usage:        3 bytes
 36304 ;; Hardware stack levels used:    1
 36305 ;; Hardware stack levels required when called:    8
 36306 ;; This function calls:
 36307 ;;		_fat_delete_file
 36308 ;; This function is called by:
 36309 ;;		__parse_command_long
 36310 ;; This function uses a non-reentrant model
 36311 ;;
 36312                           
 36313                           	psect	text182
 36314  0081D0                     __ptext182:
 36315                           	opt stack 0
 36316  0081D0                     __parse_file_delete:
 36317                           	opt stack 20
 36318                           
 36319                           ;api.c: 597: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 36320                           
 36321                           ;incstack = 0
 36322  0081D0  C050  FFD9         	movff	__parse_file_delete@data,fsr2l
 36323  0081D4  C051  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 36324  0081D8  0E51               	movlw	81
 36325  0081DA  18DE               	xorwf	postinc2,w,c
 36326  0081DC  A4D8               	btfss	status,2,c
 36327  0081DE  D014               	goto	u10870
 36328  0081E0  EE20 F002          	lfsr	2,2
 36329  0081E4  5050               	movf	__parse_file_delete@data,w,c
 36330  0081E6  26D9               	addwf	fsr2l,f,c
 36331  0081E8  5051               	movf	__parse_file_delete@data+1,w,c
 36332  0081EA  22DA               	addwfc	fsr2h,f,c
 36333  0081EC  0E66               	movlw	102
 36334  0081EE  18DE               	xorwf	postinc2,w,c
 36335  0081F0  A4D8               	btfss	status,2,c
 36336  0081F2  D00A               	goto	u10870
 36337  0081F4  EE20 F003          	lfsr	2,3
 36338  0081F8  5050               	movf	__parse_file_delete@data,w,c
 36339  0081FA  26D9               	addwf	fsr2l,f,c
 36340  0081FC  5051               	movf	__parse_file_delete@data+1,w,c
 36341  0081FE  22DA               	addwfc	fsr2h,f,c
 36342  008200  0EA0               	movlw	160
 36343  008202  18DE               	xorwf	postinc2,w,c
 36344  008204  B4D8               	btfsc	status,2,c
 36345  008206  D002               	goto	l2815
 36346  008208                     u10870:
 36347                           
 36348                           ;api.c: 598: {;api.c: 599: return 4;
 36349  008208  0E04               	movlw	4
 36350  00820A  0012               	return	
 36351  00820C                     l2815:
 36352                           
 36353                           ;api.c: 600: };api.c: 603: fat_delete_file(data[1]);
 36354  00820C  EE20 F001          	lfsr	2,1
 36355  008210  5050               	movf	__parse_file_delete@data,w,c
 36356  008212  26D9               	addwf	fsr2l,f,c
 36357  008214  5051               	movf	__parse_file_delete@data+1,w,c
 36358  008216  22DA               	addwfc	fsr2h,f,c
 36359  008218  50DF               	movf	indf2,w,c
 36360  00821A  EC01  F043         	call	_fat_delete_file
 36361                           
 36362                           ;api.c: 604: return 4;
 36363  00821E  0E04               	movlw	4
 36364  008220  0012               	return	
 36365  008222                     __end_of__parse_file_delete:
 36366                           	opt stack 0
 36367                           tosu	equ	0xFFF
 36368                           tosh	equ	0xFFE
 36369                           tosl	equ	0xFFD
 36370                           pclath	equ	0xFFA
 36371                           tblptru	equ	0xFF8
 36372                           tblptrh	equ	0xFF7
 36373                           tblptrl	equ	0xFF6
 36374                           tablat	equ	0xFF5
 36375                           prodh	equ	0xFF4
 36376                           prodl	equ	0xFF3
 36377                           intcon	equ	0xFF2
 36378                           intcon2	equ	0xFF1
 36379                           intcon3	equ	0xFF0
 36380                           indf0	equ	0xFEF
 36381                           postinc0	equ	0xFEE
 36382                           fsr0h	equ	0xFEA
 36383                           fsr0l	equ	0xFE9
 36384                           wreg	equ	0xFE8
 36385                           indf1	equ	0xFE7
 36386                           postdec1	equ	0xFE5
 36387                           plusw1	equ	0xFE3
 36388                           fsr1h	equ	0xFE2
 36389                           fsr1l	equ	0xFE1
 36390                           indf2	equ	0xFDF
 36391                           postinc2	equ	0xFDE
 36392                           postdec2	equ	0xFDD
 36393                           plusw2	equ	0xFDB
 36394                           fsr2h	equ	0xFDA
 36395                           fsr2l	equ	0xFD9
 36396                           status	equ	0xFD8
 36397                           
 36398 ;; *************** function _fat_delete_file *****************
 36399 ;; Defined at:
 36400 ;;		line 647 in file "fat16.c"
 36401 ;; Parameters:    Size  Location     Type
 36402 ;;  file_number     1    wreg     unsigned char 
 36403 ;; Auto vars:     Size  Location     Type
 36404 ;;  file_number     1   78[COMRAM] unsigned char 
 36405 ;;  first_cluste    2   76[COMRAM] unsigned int 
 36406 ;; Return value:  Size  Location     Type
 36407 ;;                  1    wreg      void 
 36408 ;; Registers used:
 36409 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 36410 ;; Tracked objects:
 36411 ;;		On entry : 0/0
 36412 ;;		On exit  : 0/0
 36413 ;;		Unchanged: 0/0
 36414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36415 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36416 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36417 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36418 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36419 ;;Total ram usage:        3 bytes
 36420 ;; Hardware stack levels used:    1
 36421 ;; Hardware stack levels required when called:    7
 36422 ;; This function calls:
 36423 ;;		__delete_root
 36424 ;;		__get_first_cluster
 36425 ;;		__make_cluster_chain
 36426 ;;		__root_is_available
 36427 ;; This function is called by:
 36428 ;;		__parse_file_delete
 36429 ;; This function uses a non-reentrant model
 36430 ;;
 36431                           
 36432                           	psect	text183
 36433  008602                     __ptext183:
 36434                           	opt stack 0
 36435  008602                     _fat_delete_file:
 36436                           	opt stack 20
 36437                           
 36438                           ;incstack = 0
 36439                           ;fat_delete_file@file_number stored from wreg
 36440  008602  6E4F               	movwf	fat_delete_file@file_number,c
 36441                           
 36442                           ;fat16.c: 649: uint16_t first_cluster;;fat16.c: 652: if(file_number>=64)
 36443  008604  0E3F               	movlw	63
 36444  008606  644F               	cpfsgt	fat_delete_file@file_number,c
 36445  008608  D001               	goto	l2072
 36446  00860A  0012               	return	
 36447  00860C                     l2072:
 36448                           
 36449                           ;fat16.c: 656: };fat16.c: 659: if(_root_is_available(file_number))
 36450  00860C  504F               	movf	fat_delete_file@file_number,w,c
 36451  00860E  ECA3  F03D         	call	__root_is_available
 36452  008612  0900               	iorlw	0
 36453  008614  A4D8               	btfss	status,2,c
 36454  008616  0012               	return	
 36455                           
 36456                           ;fat16.c: 663: };fat16.c: 666: first_cluster = _get_first_cluster(file_number);
 36457                           
 36458                           ;fat16.c: 660: {;fat16.c: 662: return;
 36459  008618  504F               	movf	fat_delete_file@file_number,w,c
 36460  00861A  EC95  F040         	call	__get_first_cluster
 36461  00861E  C030  F04D         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 36462  008622  C031  F04E         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 36463                           
 36464                           ;fat16.c: 669: _make_cluster_chain(first_cluster, 0);
 36465  008626  C04D  F036         	movff	fat_delete_file@first_cluster,__make_cluster_chain@first_cluster
 36466  00862A  C04E  F037         	movff	fat_delete_file@first_cluster+1,__make_cluster_chain@first_cluster+1
 36467  00862E  0E00               	movlw	0
 36468  008630  6E39               	movwf	__make_cluster_chain@number_of_clusters+1,c
 36469  008632  0E00               	movlw	0
 36470  008634  6E38               	movwf	__make_cluster_chain@number_of_clusters,c
 36471  008636  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36472                           
 36473                           ;fat16.c: 673: _delete_root(file_number);
 36474  00863A  504F               	movf	fat_delete_file@file_number,w,c
 36475  00863C  ECD1  F041         	call	__delete_root
 36476  008640  0012               	return		;funcret
 36477  008642                     __end_of_fat_delete_file:
 36478                           	opt stack 0
 36479                           tosu	equ	0xFFF
 36480                           tosh	equ	0xFFE
 36481                           tosl	equ	0xFFD
 36482                           pclath	equ	0xFFA
 36483                           tblptru	equ	0xFF8
 36484                           tblptrh	equ	0xFF7
 36485                           tblptrl	equ	0xFF6
 36486                           tablat	equ	0xFF5
 36487                           prodh	equ	0xFF4
 36488                           prodl	equ	0xFF3
 36489                           intcon	equ	0xFF2
 36490                           intcon2	equ	0xFF1
 36491                           intcon3	equ	0xFF0
 36492                           indf0	equ	0xFEF
 36493                           postinc0	equ	0xFEE
 36494                           fsr0h	equ	0xFEA
 36495                           fsr0l	equ	0xFE9
 36496                           wreg	equ	0xFE8
 36497                           indf1	equ	0xFE7
 36498                           postdec1	equ	0xFE5
 36499                           plusw1	equ	0xFE3
 36500                           fsr1h	equ	0xFE2
 36501                           fsr1l	equ	0xFE1
 36502                           indf2	equ	0xFDF
 36503                           postinc2	equ	0xFDE
 36504                           postdec2	equ	0xFDD
 36505                           plusw2	equ	0xFDB
 36506                           fsr2h	equ	0xFDA
 36507                           fsr2l	equ	0xFD9
 36508                           status	equ	0xFD8
 36509                           
 36510 ;; *************** function __delete_root *****************
 36511 ;; Defined at:
 36512 ;;		line 486 in file "fat16.c"
 36513 ;; Parameters:    Size  Location     Type
 36514 ;;  file_number     1    wreg     unsigned char 
 36515 ;; Auto vars:     Size  Location     Type
 36516 ;;  file_number     1   45[COMRAM] unsigned char 
 36517 ;;  offset          2   42[COMRAM] unsigned int 
 36518 ;;  sector          2   40[COMRAM] unsigned int 
 36519 ;;  deleted_valu    1   44[COMRAM] unsigned char 
 36520 ;; Return value:  Size  Location     Type
 36521 ;;                  1    wreg      void 
 36522 ;; Registers used:
 36523 ;;		wreg, status,2, status,0, cstack
 36524 ;; Tracked objects:
 36525 ;;		On entry : 0/0
 36526 ;;		On exit  : 0/0
 36527 ;;		Unchanged: 0/0
 36528 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36529 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36530 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36531 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36532 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36533 ;;Total ram usage:        6 bytes
 36534 ;; Hardware stack levels used:    1
 36535 ;; Hardware stack levels required when called:    5
 36536 ;; This function calls:
 36537 ;;		__offset_from_file_number
 36538 ;;		__sector_from_file_number
 36539 ;;		_flash_partial_write
 36540 ;; This function is called by:
 36541 ;;		_fat_delete_file
 36542 ;; This function uses a non-reentrant model
 36543 ;;
 36544                           
 36545                           	psect	text184
 36546  0083A2                     __ptext184:
 36547                           	opt stack 0
 36548  0083A2                     __delete_root:
 36549                           	opt stack 21
 36550                           
 36551                           ;incstack = 0
 36552                           ;__delete_root@file_number stored from wreg
 36553  0083A2  6E2E               	movwf	__delete_root@file_number,c
 36554                           
 36555                           ;fat16.c: 488: uint16_t sector;;fat16.c: 489: uint16_t offset;;fat16.c: 490: uint8_t del
      +                          eted_value;;fat16.c: 493: sector = _sector_from_file_number(file_number);
 36556  0083A4  502E               	movf	__delete_root@file_number,w,c
 36557  0083A6  EC67  F045         	call	__sector_from_file_number
 36558  0083AA  C001  F029         	movff	?__sector_from_file_number,__delete_root@sector
 36559  0083AE  C002  F02A         	movff	?__sector_from_file_number+1,__delete_root@sector+1
 36560                           
 36561                           ;fat16.c: 494: offset = _offset_from_file_number(file_number);
 36562  0083B2  502E               	movf	__delete_root@file_number,w,c
 36563  0083B4  ECF3  F045         	call	__offset_from_file_number
 36564  0083B8  C001  F02B         	movff	?__offset_from_file_number,__delete_root@offset
 36565  0083BC  C002  F02C         	movff	?__offset_from_file_number+1,__delete_root@offset+1
 36566                           
 36567                           ;fat16.c: 497: deleted_value = 0xE5;
 36568  0083C0  0EE5               	movlw	229
 36569  0083C2  6E2D               	movwf	__delete_root@deleted_value,c
 36570                           
 36571                           ;fat16.c: 498: flash_partial_write(sector, offset, 1, &deleted_value);
 36572  0083C4  C029  F020         	movff	__delete_root@sector,flash_partial_write@page
 36573  0083C8  C02A  F021         	movff	__delete_root@sector+1,flash_partial_write@page+1
 36574  0083CC  C02B  F022         	movff	__delete_root@offset,flash_partial_write@start
 36575  0083D0  C02C  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 36576  0083D4  0E00               	movlw	0
 36577  0083D6  6E25               	movwf	flash_partial_write@length+1,c
 36578  0083D8  0E01               	movlw	1
 36579  0083DA  6E24               	movwf	flash_partial_write@length,c
 36580  0083DC  0E2D               	movlw	low __delete_root@deleted_value
 36581  0083DE  6E26               	movwf	flash_partial_write@data,c
 36582  0083E0  0E00               	movlw	high __delete_root@deleted_value
 36583  0083E2  6E27               	movwf	flash_partial_write@data+1,c
 36584  0083E4  EC9C  F03B         	call	_flash_partial_write	;wreg free
 36585  0083E8  0012               	return		;funcret
 36586  0083EA                     __end_of__delete_root:
 36587                           	opt stack 0
 36588                           tosu	equ	0xFFF
 36589                           tosh	equ	0xFFE
 36590                           tosl	equ	0xFFD
 36591                           pclath	equ	0xFFA
 36592                           tblptru	equ	0xFF8
 36593                           tblptrh	equ	0xFF7
 36594                           tblptrl	equ	0xFF6
 36595                           tablat	equ	0xFF5
 36596                           prodh	equ	0xFF4
 36597                           prodl	equ	0xFF3
 36598                           intcon	equ	0xFF2
 36599                           intcon2	equ	0xFF1
 36600                           intcon3	equ	0xFF0
 36601                           indf0	equ	0xFEF
 36602                           postinc0	equ	0xFEE
 36603                           fsr0h	equ	0xFEA
 36604                           fsr0l	equ	0xFE9
 36605                           wreg	equ	0xFE8
 36606                           indf1	equ	0xFE7
 36607                           postdec1	equ	0xFE5
 36608                           plusw1	equ	0xFE3
 36609                           fsr1h	equ	0xFE2
 36610                           fsr1l	equ	0xFE1
 36611                           indf2	equ	0xFDF
 36612                           postinc2	equ	0xFDE
 36613                           postdec2	equ	0xFDD
 36614                           plusw2	equ	0xFDB
 36615                           fsr2h	equ	0xFDA
 36616                           fsr2l	equ	0xFD9
 36617                           status	equ	0xFD8
 36618                           
 36619 ;; *************** function __parse_file_create *****************
 36620 ;; Defined at:
 36621 ;;		line 607 in file "api.c"
 36622 ;; Parameters:    Size  Location     Type
 36623 ;;  data            2   88[COMRAM] PTR unsigned char 
 36624 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36625 ;; Auto vars:     Size  Location     Type
 36626 ;;  file_size       4   91[COMRAM] unsigned long 
 36627 ;; Return value:  Size  Location     Type
 36628 ;;                  1    wreg      unsigned char 
 36629 ;; Registers used:
 36630 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36631 ;; Tracked objects:
 36632 ;;		On entry : 0/0
 36633 ;;		On exit  : 0/0
 36634 ;;		Unchanged: 0/0
 36635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36636 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36637 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36638 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36639 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36640 ;;Total ram usage:        7 bytes
 36641 ;; Hardware stack levels used:    1
 36642 ;; Hardware stack levels required when called:    8
 36643 ;; This function calls:
 36644 ;;		_fat_create_file
 36645 ;; This function is called by:
 36646 ;;		__parse_command_long
 36647 ;; This function uses a non-reentrant model
 36648 ;;
 36649                           
 36650                           	psect	text185
 36651  0050C8                     __ptext185:
 36652                           	opt stack 0
 36653  0050C8                     __parse_file_create:
 36654                           	opt stack 20
 36655                           
 36656                           ;api.c: 610: uint32_t file_size;;api.c: 611: if((data[0]!=COMMAND_FILE_CREATE) || (data[
      +                          16]!=0xBD) || (data[17]!=0x4F))
 36657                           
 36658                           ;incstack = 0
 36659  0050C8  C059  FFD9         	movff	__parse_file_create@data,fsr2l
 36660  0050CC  C05A  FFDA         	movff	__parse_file_create@data+1,fsr2h
 36661  0050D0  0E52               	movlw	82
 36662  0050D2  18DE               	xorwf	postinc2,w,c
 36663  0050D4  A4D8               	btfss	status,2,c
 36664  0050D6  D014               	goto	u10900
 36665  0050D8  EE20 F010          	lfsr	2,16
 36666  0050DC  5059               	movf	__parse_file_create@data,w,c
 36667  0050DE  26D9               	addwf	fsr2l,f,c
 36668  0050E0  505A               	movf	__parse_file_create@data+1,w,c
 36669  0050E2  22DA               	addwfc	fsr2h,f,c
 36670  0050E4  0EBD               	movlw	189
 36671  0050E6  18DE               	xorwf	postinc2,w,c
 36672  0050E8  A4D8               	btfss	status,2,c
 36673  0050EA  D00A               	goto	u10900
 36674  0050EC  EE20 F011          	lfsr	2,17
 36675  0050F0  5059               	movf	__parse_file_create@data,w,c
 36676  0050F2  26D9               	addwf	fsr2l,f,c
 36677  0050F4  505A               	movf	__parse_file_create@data+1,w,c
 36678  0050F6  22DA               	addwfc	fsr2h,f,c
 36679  0050F8  0E4F               	movlw	79
 36680  0050FA  18DE               	xorwf	postinc2,w,c
 36681  0050FC  B4D8               	btfsc	status,2,c
 36682  0050FE  D002               	goto	l2821
 36683  005100                     u10900:
 36684                           
 36685                           ;api.c: 612: {;api.c: 613: return 18;
 36686  005100  0E12               	movlw	18
 36687  005102  0012               	return	
 36688  005104                     l2821:
 36689                           
 36690                           ;api.c: 614: };api.c: 617: file_size = data[12];
 36691  005104  EE20 F00C          	lfsr	2,12
 36692  005108  5059               	movf	__parse_file_create@data,w,c
 36693  00510A  26D9               	addwf	fsr2l,f,c
 36694  00510C  505A               	movf	__parse_file_create@data+1,w,c
 36695  00510E  22DA               	addwfc	fsr2h,f,c
 36696  005110  50DF               	movf	indf2,w,c
 36697  005112  6E5B               	movwf	??__parse_file_create& (0+255),c
 36698  005114  505B               	movf	??__parse_file_create,w,c
 36699  005116  6E5C               	movwf	__parse_file_create@file_size,c
 36700  005118  6A5D               	clrf	__parse_file_create@file_size+1,c
 36701  00511A  6A5E               	clrf	__parse_file_create@file_size+2,c
 36702  00511C  6A5F               	clrf	__parse_file_create@file_size+3,c
 36703                           
 36704                           ;api.c: 618: file_size <<= 8;
 36705  00511E  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36706  005122  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36707  005126  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36708  00512A  6A5C               	clrf	__parse_file_create@file_size,c
 36709                           
 36710                           ;api.c: 619: file_size |= data[13];
 36711  00512C  EE20 F00D          	lfsr	2,13
 36712  005130  5059               	movf	__parse_file_create@data,w,c
 36713  005132  26D9               	addwf	fsr2l,f,c
 36714  005134  505A               	movf	__parse_file_create@data+1,w,c
 36715  005136  22DA               	addwfc	fsr2h,f,c
 36716  005138  50DF               	movf	indf2,w,c
 36717  00513A  6E5B               	movwf	??__parse_file_create& (0+255),c
 36718  00513C  505B               	movf	??__parse_file_create,w,c
 36719  00513E  125C               	iorwf	__parse_file_create@file_size,f,c
 36720                           
 36721                           ;api.c: 620: file_size <<= 8;
 36722  005140  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36723  005144  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36724  005148  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36725  00514C  6A5C               	clrf	__parse_file_create@file_size,c
 36726                           
 36727                           ;api.c: 621: file_size |= data[14];
 36728  00514E  EE20 F00E          	lfsr	2,14
 36729  005152  5059               	movf	__parse_file_create@data,w,c
 36730  005154  26D9               	addwf	fsr2l,f,c
 36731  005156  505A               	movf	__parse_file_create@data+1,w,c
 36732  005158  22DA               	addwfc	fsr2h,f,c
 36733  00515A  50DF               	movf	indf2,w,c
 36734  00515C  6E5B               	movwf	??__parse_file_create& (0+255),c
 36735  00515E  505B               	movf	??__parse_file_create,w,c
 36736  005160  125C               	iorwf	__parse_file_create@file_size,f,c
 36737                           
 36738                           ;api.c: 622: file_size <<= 8;
 36739  005162  C05E  F05F         	movff	__parse_file_create@file_size+2,__parse_file_create@file_size+3
 36740  005166  C05D  F05E         	movff	__parse_file_create@file_size+1,__parse_file_create@file_size+2
 36741  00516A  C05C  F05D         	movff	__parse_file_create@file_size,__parse_file_create@file_size+1
 36742  00516E  6A5C               	clrf	__parse_file_create@file_size,c
 36743                           
 36744                           ;api.c: 623: file_size |= data[15];
 36745  005170  EE20 F00F          	lfsr	2,15
 36746  005174  5059               	movf	__parse_file_create@data,w,c
 36747  005176  26D9               	addwf	fsr2l,f,c
 36748  005178  505A               	movf	__parse_file_create@data+1,w,c
 36749  00517A  22DA               	addwfc	fsr2h,f,c
 36750  00517C  50DF               	movf	indf2,w,c
 36751  00517E  6E5B               	movwf	??__parse_file_create& (0+255),c
 36752  005180  505B               	movf	??__parse_file_create,w,c
 36753  005182  125C               	iorwf	__parse_file_create@file_size,f,c
 36754                           
 36755                           ;api.c: 626: fat_create_file(&data[1], &data[9], file_size);
 36756  005184  0E01               	movlw	1
 36757  005186  2459               	addwf	__parse_file_create@data,w,c
 36758  005188  6E4D               	movwf	fat_create_file@name,c
 36759  00518A  0E00               	movlw	0
 36760  00518C  205A               	addwfc	__parse_file_create@data+1,w,c
 36761  00518E  6E4E               	movwf	fat_create_file@name+1,c
 36762  005190  0E09               	movlw	9
 36763  005192  2459               	addwf	__parse_file_create@data,w,c
 36764  005194  6E4F               	movwf	fat_create_file@extension,c
 36765  005196  0E00               	movlw	0
 36766  005198  205A               	addwfc	__parse_file_create@data+1,w,c
 36767  00519A  6E50               	movwf	fat_create_file@extension+1,c
 36768  00519C  C05C  F051         	movff	__parse_file_create@file_size,fat_create_file@size
 36769  0051A0  C05D  F052         	movff	__parse_file_create@file_size+1,fat_create_file@size+1
 36770  0051A4  C05E  F053         	movff	__parse_file_create@file_size+2,fat_create_file@size+2
 36771  0051A8  C05F  F054         	movff	__parse_file_create@file_size+3,fat_create_file@size+3
 36772  0051AC  ECF4  F01F         	call	_fat_create_file	;wreg free
 36773                           
 36774                           ;api.c: 628: return 18;
 36775  0051B0  0E12               	movlw	18
 36776  0051B2  0012               	return	
 36777  0051B4                     __end_of__parse_file_create:
 36778                           	opt stack 0
 36779                           tosu	equ	0xFFF
 36780                           tosh	equ	0xFFE
 36781                           tosl	equ	0xFFD
 36782                           pclath	equ	0xFFA
 36783                           tblptru	equ	0xFF8
 36784                           tblptrh	equ	0xFF7
 36785                           tblptrl	equ	0xFF6
 36786                           tablat	equ	0xFF5
 36787                           prodh	equ	0xFF4
 36788                           prodl	equ	0xFF3
 36789                           intcon	equ	0xFF2
 36790                           intcon2	equ	0xFF1
 36791                           intcon3	equ	0xFF0
 36792                           indf0	equ	0xFEF
 36793                           postinc0	equ	0xFEE
 36794                           fsr0h	equ	0xFEA
 36795                           fsr0l	equ	0xFE9
 36796                           wreg	equ	0xFE8
 36797                           indf1	equ	0xFE7
 36798                           postdec1	equ	0xFE5
 36799                           plusw1	equ	0xFE3
 36800                           fsr1h	equ	0xFE2
 36801                           fsr1l	equ	0xFE1
 36802                           indf2	equ	0xFDF
 36803                           postinc2	equ	0xFDE
 36804                           postdec2	equ	0xFDD
 36805                           plusw2	equ	0xFDB
 36806                           fsr2h	equ	0xFDA
 36807                           fsr2l	equ	0xFD9
 36808                           status	equ	0xFD8
 36809                           
 36810 ;; *************** function _fat_create_file *****************
 36811 ;; Defined at:
 36812 ;;		line 586 in file "fat16.c"
 36813 ;; Parameters:    Size  Location     Type
 36814 ;;  name            2   76[COMRAM] PTR unsigned char 
 36815 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36816 ;;  extension       2   78[COMRAM] PTR unsigned char 
 36817 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 36818 ;;  size            4   80[COMRAM] unsigned long 
 36819 ;; Auto vars:     Size  Location     Type
 36820 ;;  root_entry     32    5[BANK0 ] struct .
 36821 ;;  first_cluste    2    2[BANK0 ] unsigned int 
 36822 ;;  number_of_cl    2    0[BANK0 ] unsigned int 
 36823 ;;  file_number     1    4[BANK0 ] unsigned char 
 36824 ;; Return value:  Size  Location     Type
 36825 ;;                  1    wreg      unsigned char 
 36826 ;; Registers used:
 36827 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 36828 ;; Tracked objects:
 36829 ;;		On entry : 0/0
 36830 ;;		On exit  : 0/0
 36831 ;;		Unchanged: 0/0
 36832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36833 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36834 ;;      Locals:         0      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36835 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36836 ;;      Totals:        12      37       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36837 ;;Total ram usage:       49 bytes
 36838 ;; Hardware stack levels used:    1
 36839 ;; Hardware stack levels required when called:    7
 36840 ;; This function calls:
 36841 ;;		__get_available_root_entry
 36842 ;;		__get_date
 36843 ;;		__get_time
 36844 ;;		__make_cluster_chain
 36845 ;;		__write_root
 36846 ;;		_fat_find_file
 36847 ;;		_memcpy
 36848 ;; This function is called by:
 36849 ;;		__parse_file_create
 36850 ;; This function uses a non-reentrant model
 36851 ;;
 36852                           
 36853                           	psect	text186
 36854  003FE8                     __ptext186:
 36855                           	opt stack 0
 36856  003FE8                     _fat_create_file:
 36857                           	opt stack 20
 36858                           
 36859                           ;fat16.c: 588: rootEntry_t root_entry;;fat16.c: 589: uint8_t file_number;;fat16.c: 590: 
      +                          uint16_t number_of_clusters;;fat16.c: 591: uint16_t first_cluster;;fat16.c: 595: if(fat_
      +                          find_file(name, extension) != 0xFF)
 36860                           
 36861                           ;incstack = 0
 36862  003FE8  C04D  F02C         	movff	fat_create_file@name,fat_find_file@name
 36863  003FEC  C04E  F02D         	movff	fat_create_file@name+1,fat_find_file@name+1
 36864  003FF0  C04F  F02E         	movff	fat_create_file@extension,fat_find_file@extension
 36865  003FF4  C050  F02F         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 36866  003FF8  EC61  F02C         	call	_fat_find_file	;wreg free
 36867  003FFC  0AFF               	xorlw	255
 36868  003FFE  A4D8               	btfss	status,2,c
 36869  004000  0012               	return	
 36870                           
 36871                           ;fat16.c: 600: };fat16.c: 604: file_number = _get_available_root_entry();
 36872                           
 36873                           ;fat16.c: 596: {;fat16.c: 599: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 36874  004002  EC3D  F046         	call	__get_available_root_entry	;wreg free
 36875  004006  0100               	movlb	0	; () banked
 36876  004008  6F64               	movwf	fat_create_file@file_number& (0+255),b
 36877                           
 36878                           ; BSR set to: 0
 36879                           ;fat16.c: 605: if(file_number == 0xFF)
 36880  00400A  2964               	incf	fat_create_file@file_number& (0+255),w,b
 36881  00400C  B4D8               	btfsc	status,2,c
 36882  00400E  0012               	return	
 36883                           
 36884                           ; BSR set to: 0
 36885                           ;fat16.c: 610: };fat16.c: 613: number_of_clusters = (size + 512 - 1) >> 9;
 36886                           
 36887                           ; BSR set to: 0
 36888                           
 36889                           ; BSR set to: 0
 36890                           ;fat16.c: 606: {;fat16.c: 609: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 36891  004010  0EFF               	movlw	255
 36892  004012  2451               	addwf	fat_create_file@size,w,c
 36893  004014  6E55               	movwf	??_fat_create_file& (0+255),c
 36894  004016  0E01               	movlw	1
 36895  004018  2052               	addwfc	fat_create_file@size+1,w,c
 36896  00401A  6E56               	movwf	(??_fat_create_file+1)& (0+255),c
 36897  00401C  0E00               	movlw	0
 36898  00401E  2053               	addwfc	fat_create_file@size+2,w,c
 36899  004020  6E57               	movwf	(??_fat_create_file+2)& (0+255),c
 36900  004022  0E00               	movlw	0
 36901  004024  2054               	addwfc	fat_create_file@size+3,w,c
 36902  004026  6E58               	movwf	(??_fat_create_file+3)& (0+255),c
 36903  004028  0E0A               	movlw	10
 36904  00402A  D005               	goto	u10100
 36905  00402C                     u10105:
 36906  00402C  90D8               	bcf	status,0,c
 36907  00402E  3258               	rrcf	??_fat_create_file+3,f,c
 36908  004030  3257               	rrcf	??_fat_create_file+2,f,c
 36909  004032  3256               	rrcf	??_fat_create_file+1,f,c
 36910  004034  3255               	rrcf	??_fat_create_file,f,c
 36911  004036                     u10100:
 36912  004036  2EE8               	decfsz	wreg,f,c
 36913  004038  D7F9               	goto	u10105
 36914  00403A  C055  F060         	movff	??_fat_create_file,fat_create_file@number_of_clusters
 36915  00403E  C056  F061         	movff	??_fat_create_file+1,fat_create_file@number_of_clusters+1
 36916                           
 36917                           ; BSR set to: 0
 36918                           ;fat16.c: 616: first_cluster = _make_cluster_chain(0x0000, number_of_clusters);
 36919  004042  0E00               	movlw	0
 36920  004044  6E37               	movwf	__make_cluster_chain@first_cluster+1,c
 36921  004046  0E00               	movlw	0
 36922  004048  6E36               	movwf	__make_cluster_chain@first_cluster,c
 36923  00404A  C060  F038         	movff	fat_create_file@number_of_clusters,__make_cluster_chain@number_of_clusters
 36924  00404E  C061  F039         	movff	fat_create_file@number_of_clusters+1,__make_cluster_chain@number_of_clusters+1
 36925  004052  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 36926  004056  C036  F062         	movff	?__make_cluster_chain,fat_create_file@first_cluster
 36927  00405A  C037  F063         	movff	?__make_cluster_chain+1,fat_create_file@first_cluster+1
 36928                           
 36929                           ;fat16.c: 619: if(first_cluster == 0xFFFF)
 36930  00405E  0100               	movlb	0	; () banked
 36931  004060  2962               	incf	fat_create_file@first_cluster& (0+255),w,b
 36932  004062  E103               	bnz	l13269
 36933  004064  2963               	incf	(fat_create_file@first_cluster+1)& (0+255),w,b
 36934  004066  B4D8               	btfsc	status,2,c
 36935  004068  0012               	return	
 36936  00406A                     l13269:
 36937                           
 36938                           ; BSR set to: 0
 36939                           ;fat16.c: 624: };fat16.c: 627: memcpy(root_entry.fileName, name, 8);
 36940  00406A  0E65               	movlw	low fat_create_file@root_entry
 36941  00406C  6E01               	movwf	memcpy@d1,c
 36942  00406E  0E00               	movlw	high fat_create_file@root_entry
 36943  004070  6E02               	movwf	memcpy@d1+1,c
 36944  004072  C04D  F003         	movff	fat_create_file@name,memcpy@s1
 36945  004076  C04E  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 36946  00407A  5003               	movf	memcpy@s1,w,c
 36947  00407C  1004               	iorwf	memcpy@s1+1,w,c
 36948  00407E  A4D8               	btfss	status,2,c
 36949  004080  0E20               	movlw	32
 36950  004082  6E05               	movwf	memcpy@s1+2,c
 36951  004084  0E00               	movlw	0
 36952  004086  6E07               	movwf	memcpy@n+1,c
 36953  004088  0E08               	movlw	8
 36954  00408A  6E06               	movwf	memcpy@n,c
 36955  00408C  ECDD  F03C         	call	_memcpy	;wreg free
 36956                           
 36957                           ;fat16.c: 628: memcpy(root_entry.fileExtension, extension, 3);
 36958  004090  0E6D               	movlw	low (fat_create_file@root_entry+8)
 36959  004092  6E01               	movwf	memcpy@d1,c
 36960  004094  0E00               	movlw	high (fat_create_file@root_entry+8)
 36961  004096  6E02               	movwf	memcpy@d1+1,c
 36962  004098  C04F  F003         	movff	fat_create_file@extension,memcpy@s1
 36963  00409C  C050  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 36964  0040A0  5003               	movf	memcpy@s1,w,c
 36965  0040A2  1004               	iorwf	memcpy@s1+1,w,c
 36966  0040A4  A4D8               	btfss	status,2,c
 36967  0040A6  0E20               	movlw	32
 36968  0040A8  6E05               	movwf	memcpy@s1+2,c
 36969  0040AA  0E00               	movlw	0
 36970  0040AC  6E07               	movwf	memcpy@n+1,c
 36971  0040AE  0E03               	movlw	3
 36972  0040B0  6E06               	movwf	memcpy@n,c
 36973  0040B2  ECDD  F03C         	call	_memcpy	;wreg free
 36974                           
 36975                           ;fat16.c: 629: root_entry.attributes = 0x00;
 36976  0040B6  0E00               	movlw	0
 36977  0040B8  0100               	movlb	0	; () banked
 36978  0040BA  6F70               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 36979                           
 36980                           ; BSR set to: 0
 36981                           ;fat16.c: 630: root_entry.reserved1 = 0x00;
 36982  0040BC  0E00               	movlw	0
 36983  0040BE  6F71               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 36984                           
 36985                           ; BSR set to: 0
 36986                           ;fat16.c: 631: root_entry.secondFractions = 0x00;
 36987  0040C0  0E00               	movlw	0
 36988  0040C2  6F72               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 36989                           
 36990                           ; BSR set to: 0
 36991                           ;fat16.c: 632: root_entry.createdTime = _get_time();
 36992  0040C4  ECFC  F047         	call	__get_time	;wreg free
 36993  0040C8  C001  F073         	movff	?__get_time,fat_create_file@root_entry+14
 36994  0040CC  C002  F074         	movff	?__get_time+1,fat_create_file@root_entry+15
 36995                           
 36996                           ;fat16.c: 633: root_entry.createdDate = _get_date();
 36997  0040D0  EC01  F048         	call	__get_date	;wreg free
 36998  0040D4  C001  F075         	movff	?__get_date,fat_create_file@root_entry+16
 36999  0040D8  C002  F076         	movff	?__get_date+1,fat_create_file@root_entry+17
 37000                           
 37001                           ;fat16.c: 634: root_entry.lastAccessDate = root_entry.createdDate;
 37002  0040DC  C075  F077         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 37003  0040E0  C076  F078         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 37004                           
 37005                           ;fat16.c: 635: root_entry.reserved2 = 0x00;
 37006  0040E4  0E00               	movlw	0
 37007  0040E6  0100               	movlb	0	; () banked
 37008  0040E8  6F7A               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 37009  0040EA  0E00               	movlw	0
 37010  0040EC  6F79               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 37011                           
 37012                           ; BSR set to: 0
 37013                           ;fat16.c: 636: root_entry.modifiedTime = root_entry.createdTime;
 37014  0040EE  C073  F07B         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 37015  0040F2  C074  F07C         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 37016                           
 37017                           ; BSR set to: 0
 37018                           ;fat16.c: 637: root_entry.modifiedDate = root_entry.createdDate;
 37019  0040F6  C075  F07D         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 37020  0040FA  C076  F07E         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 37021                           
 37022                           ; BSR set to: 0
 37023                           ;fat16.c: 638: root_entry.firstCluster = first_cluster;
 37024  0040FE  C062  F07F         	movff	fat_create_file@first_cluster,fat_create_file@root_entry+26
 37025  004102  C063  F080         	movff	fat_create_file@first_cluster+1,fat_create_file@root_entry+27
 37026                           
 37027                           ; BSR set to: 0
 37028                           ;fat16.c: 639: root_entry.fileSize = size;
 37029  004106  C051  F081         	movff	fat_create_file@size,fat_create_file@root_entry+28
 37030  00410A  C052  F082         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 37031  00410E  C053  F083         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 37032  004112  C054  F084         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 37033                           
 37034                           ; BSR set to: 0
 37035                           ;fat16.c: 642: _write_root(file_number, &root_entry);
 37036  004116  0E65               	movlw	low fat_create_file@root_entry
 37037  004118  6E29               	movwf	__write_root@data,c
 37038  00411A  0E00               	movlw	high fat_create_file@root_entry
 37039  00411C  6E2A               	movwf	__write_root@data+1,c
 37040  00411E  5164               	movf	fat_create_file@file_number& (0+255),w,b
 37041  004120  EC5C  F042         	call	__write_root
 37042  004124  0012               	return	
 37043  004126                     __end_of_fat_create_file:
 37044                           	opt stack 0
 37045                           tosu	equ	0xFFF
 37046                           tosh	equ	0xFFE
 37047                           tosl	equ	0xFFD
 37048                           pclath	equ	0xFFA
 37049                           tblptru	equ	0xFF8
 37050                           tblptrh	equ	0xFF7
 37051                           tblptrl	equ	0xFF6
 37052                           tablat	equ	0xFF5
 37053                           prodh	equ	0xFF4
 37054                           prodl	equ	0xFF3
 37055                           intcon	equ	0xFF2
 37056                           intcon2	equ	0xFF1
 37057                           intcon3	equ	0xFF0
 37058                           indf0	equ	0xFEF
 37059                           postinc0	equ	0xFEE
 37060                           fsr0h	equ	0xFEA
 37061                           fsr0l	equ	0xFE9
 37062                           wreg	equ	0xFE8
 37063                           indf1	equ	0xFE7
 37064                           postdec1	equ	0xFE5
 37065                           plusw1	equ	0xFE3
 37066                           fsr1h	equ	0xFE2
 37067                           fsr1l	equ	0xFE1
 37068                           indf2	equ	0xFDF
 37069                           postinc2	equ	0xFDE
 37070                           postdec2	equ	0xFDD
 37071                           plusw2	equ	0xFDB
 37072                           fsr2h	equ	0xFDA
 37073                           fsr2l	equ	0xFD9
 37074                           status	equ	0xFD8
 37075                           
 37076 ;; *************** function _memcpy *****************
 37077 ;; Defined at:
 37078 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 37079 ;; Parameters:    Size  Location     Type
 37080 ;;  d1              2    0[COMRAM] PTR void 
 37081 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 37082 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 37083 ;;  s1              3    2[COMRAM] PTR const void 
 37084 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 37085 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 37086 ;;		 -> SetupPkt(8), 
 37087 ;;  n               2    5[COMRAM] unsigned int 
 37088 ;; Auto vars:     Size  Location     Type
 37089 ;;  s               3    7[COMRAM] PTR const unsigned char 
 37090 ;;		 -> _spi_external_rx_buffer(64), ROM(40959), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 37091 ;;		 -> ReceivedDataBuffer(64), inq_resp(36), CtrlTrfData(8), RAM(3759), 
 37092 ;;		 -> SetupPkt(8), 
 37093 ;;  d               2   10[COMRAM] PTR unsigned char 
 37094 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 37095 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 37096 ;;  tmp             1   12[COMRAM] unsigned char 
 37097 ;; Return value:  Size  Location     Type
 37098 ;;                  2    0[COMRAM] PTR void 
 37099 ;; Registers used:
 37100 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37101 ;; Tracked objects:
 37102 ;;		On entry : 0/0
 37103 ;;		On exit  : 0/0
 37104 ;;		Unchanged: 0/0
 37105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37106 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37107 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37109 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37110 ;;Total ram usage:       13 bytes
 37111 ;; Hardware stack levels used:    1
 37112 ;; This function calls:
 37113 ;;		Nothing
 37114 ;; This function is called by:
 37115 ;;		_USBCtrlEPService
 37116 ;;		_MSDProcessCommandMediaPresent
 37117 ;;		__flash_set_page_size
 37118 ;;		_fat_create_file
 37119 ;;		_internalFlash_read
 37120 ;;		_api_prepare
 37121 ;; This function uses a non-reentrant model
 37122 ;;
 37123                           
 37124                           	psect	text187
 37125  0079BA                     __ptext187:
 37126                           	opt stack 0
 37127  0079BA                     _memcpy:
 37128                           	opt stack 27
 37129                           
 37130                           ;incstack = 0
 37131  0079BA  C003  F008         	movff	memcpy@s1,memcpy@s
 37132  0079BE  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 37133  0079C2  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 37134  0079C6  C001  F00B         	movff	memcpy@d1,memcpy@d
 37135  0079CA  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 37136  0079CE  D01F               	goto	l3695
 37137  0079D0                     l11573:
 37138  0079D0  C008  FFF6         	movff	memcpy@s,tblptrl
 37139  0079D4  C009  FFF7         	movff	memcpy@s+1,tblptrh
 37140  0079D8  C00A  FFF8         	movff	memcpy@s+2,tblptru
 37141  0079DC  BAF8               	btfsc	tblptru,5,c
 37142  0079DE  D003               	bra	u8387
 37143  0079E0  0008               	tblrd		*
 37144  0079E2  50F5               	movf	tablat,w,c
 37145  0079E4  D005               	bra	u8380
 37146  0079E6                     u8387:
 37147  0079E6  CFF6 FFE9          	movff	tblptrl,fsr0l
 37148  0079EA  CFF7 FFEA          	movff	tblptrh,fsr0h
 37149  0079EE  50EF               	movf	indf0,w,c
 37150  0079F0                     u8380:
 37151  0079F0  6E0D               	movwf	memcpy@tmp,c
 37152  0079F2  0E01               	movlw	1
 37153  0079F4  2608               	addwf	memcpy@s,f,c
 37154  0079F6  0E00               	movlw	0
 37155  0079F8  2209               	addwfc	memcpy@s+1,f,c
 37156  0079FA  0E00               	movlw	0
 37157  0079FC  220A               	addwfc	memcpy@s+2,f,c
 37158  0079FE  C00B  FFD9         	movff	memcpy@d,fsr2l
 37159  007A02  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 37160  007A06  C00D  FFDF         	movff	memcpy@tmp,indf2
 37161  007A0A  4A0B               	infsnz	memcpy@d,f,c
 37162  007A0C  2A0C               	incf	memcpy@d+1,f,c
 37163  007A0E                     l3695:
 37164  007A0E  0606               	decf	memcpy@n,f,c
 37165  007A10  A0D8               	btfss	status,0,c
 37166  007A12  0607               	decf	memcpy@n+1,f,c
 37167  007A14  2806               	incf	memcpy@n,w,c
 37168  007A16  E1DC               	bnz	l11573
 37169  007A18  2807               	incf	memcpy@n+1,w,c
 37170  007A1A  B4D8               	btfsc	status,2,c
 37171  007A1C  0012               	return	
 37172  007A1E  D7D8               	goto	l3696
 37173  007A20                     __end_of_memcpy:
 37174                           	opt stack 0
 37175                           tosu	equ	0xFFF
 37176                           tosh	equ	0xFFE
 37177                           tosl	equ	0xFFD
 37178                           pclath	equ	0xFFA
 37179                           tblptru	equ	0xFF8
 37180                           tblptrh	equ	0xFF7
 37181                           tblptrl	equ	0xFF6
 37182                           tablat	equ	0xFF5
 37183                           prodh	equ	0xFF4
 37184                           prodl	equ	0xFF3
 37185                           intcon	equ	0xFF2
 37186                           intcon2	equ	0xFF1
 37187                           intcon3	equ	0xFF0
 37188                           indf0	equ	0xFEF
 37189                           postinc0	equ	0xFEE
 37190                           fsr0h	equ	0xFEA
 37191                           fsr0l	equ	0xFE9
 37192                           wreg	equ	0xFE8
 37193                           indf1	equ	0xFE7
 37194                           postdec1	equ	0xFE5
 37195                           plusw1	equ	0xFE3
 37196                           fsr1h	equ	0xFE2
 37197                           fsr1l	equ	0xFE1
 37198                           indf2	equ	0xFDF
 37199                           postinc2	equ	0xFDE
 37200                           postdec2	equ	0xFDD
 37201                           plusw2	equ	0xFDB
 37202                           fsr2h	equ	0xFDA
 37203                           fsr2l	equ	0xFD9
 37204                           status	equ	0xFD8
 37205                           
 37206 ;; *************** function _fat_find_file *****************
 37207 ;; Defined at:
 37208 ;;		line 517 in file "fat16.c"
 37209 ;; Parameters:    Size  Location     Type
 37210 ;;  name            2   43[COMRAM] PTR unsigned char 
 37211 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), ReceivedDataBuffer(64), RAM(3759), 
 37212 ;;  extension       2   45[COMRAM] PTR unsigned char 
 37213 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), ReceivedDataBuffer(64), RAM(3759), 
 37214 ;; Auto vars:     Size  Location     Type
 37215 ;;  offset          2   52[COMRAM] unsigned int 
 37216 ;;  sector          2   50[COMRAM] unsigned int 
 37217 ;;  file_number     1   49[COMRAM] unsigned char 
 37218 ;; Return value:  Size  Location     Type
 37219 ;;                  1    wreg      unsigned char 
 37220 ;; Registers used:
 37221 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 37222 ;; Tracked objects:
 37223 ;;		On entry : 0/0
 37224 ;;		On exit  : 0/0
 37225 ;;		Unchanged: 0/0
 37226 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37227 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37228 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37229 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37230 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37231 ;;Total ram usage:       11 bytes
 37232 ;; Hardware stack levels used:    1
 37233 ;; Hardware stack levels required when called:    5
 37234 ;; This function calls:
 37235 ;;		_flash_sector_read
 37236 ;;		_strncmp
 37237 ;; This function is called by:
 37238 ;;		_fat_create_file
 37239 ;;		__bootloader_find_file
 37240 ;;		__fill_buffer_find_file
 37241 ;; This function uses a non-reentrant model
 37242 ;;
 37243                           
 37244                           	psect	text188
 37245  0058C2                     __ptext188:
 37246                           	opt stack 0
 37247  0058C2                     _fat_find_file:
 37248                           	opt stack 23
 37249                           
 37250                           ;fat16.c: 519: uint8_t file_number = 0;
 37251                           
 37252                           ;incstack = 0
 37253  0058C2  0E00               	movlw	0
 37254  0058C4  6E32               	movwf	fat_find_file@file_number,c
 37255                           
 37256                           ;fat16.c: 520: uint16_t sector;;fat16.c: 521: uint16_t offset;;fat16.c: 523: for(sector 
      +                          = 34; sector <= 37; ++sector)
 37257  0058C6  0E00               	movlw	0
 37258  0058C8  6E34               	movwf	fat_find_file@sector+1,c
 37259  0058CA  0E22               	movlw	34
 37260  0058CC  6E33               	movwf	fat_find_file@sector,c
 37261  0058CE  5034               	movf	fat_find_file@sector+1,w,c
 37262  0058D0  E166               	bnz	l2050
 37263  0058D2  0E26               	movlw	38
 37264  0058D4  5C33               	subwf	fat_find_file@sector,w,c
 37265  0058D6  B0D8               	btfsc	status,0,c
 37266  0058D8  D062               	goto	u9260
 37267                           
 37268                           ;fat16.c: 524: {;fat16.c: 526: flash_sector_read(sector, buffer);
 37269  0058DA  C033  F028         	movff	fat_find_file@sector,flash_sector_read@page
 37270  0058DE  C034  F029         	movff	fat_find_file@sector+1,flash_sector_read@page+1
 37271  0058E2  0EC0               	movlw	low _buffer
 37272  0058E4  6E2A               	movwf	flash_sector_read@data,c
 37273  0058E6  0E03               	movlw	high _buffer
 37274  0058E8  6E2B               	movwf	flash_sector_read@data+1,c
 37275  0058EA  EC67  F044         	call	_flash_sector_read	;wreg free
 37276                           
 37277                           ;fat16.c: 528: for(offset = 0; offset<512; offset += 32)
 37278  0058EE  0E00               	movlw	0
 37279  0058F0  6E36               	movwf	fat_find_file@offset+1,c
 37280  0058F2  0E00               	movlw	0
 37281  0058F4  6E35               	movwf	fat_find_file@offset,c
 37282  0058F6                     l12227:
 37283  0058F6  0E02               	movlw	2
 37284  0058F8  5C36               	subwf	fat_find_file@offset+1,w,c
 37285  0058FA  B0D8               	btfsc	status,0,c
 37286  0058FC  D04B               	goto	u9250
 37287                           
 37288                           ;fat16.c: 529: {;fat16.c: 530: if(buffer[offset]==0x00)
 37289  0058FE  0EC0               	movlw	low _buffer
 37290  005900  2435               	addwf	fat_find_file@offset,w,c
 37291  005902  6ED9               	movwf	fsr2l,c
 37292  005904  0E03               	movlw	high _buffer
 37293  005906  2036               	addwfc	fat_find_file@offset+1,w,c
 37294  005908  6EDA               	movwf	fsr2h,c
 37295  00590A  50DF               	movf	indf2,w,c
 37296  00590C  A4D8               	btfss	status,2,c
 37297  00590E  D002               	goto	l2053
 37298                           
 37299                           ;fat16.c: 531: {;fat16.c: 534: return 0xFF;
 37300  005910  0EFF               	movlw	255
 37301  005912  0012               	return	
 37302  005914                     l2053:
 37303                           
 37304                           ;fat16.c: 536: else if(buffer[offset]==0xE5)
 37305  005914  0EC0               	movlw	low _buffer
 37306  005916  2435               	addwf	fat_find_file@offset,w,c
 37307  005918  6ED9               	movwf	fsr2l,c
 37308  00591A  0E03               	movlw	high _buffer
 37309  00591C  2036               	addwfc	fat_find_file@offset+1,w,c
 37310  00591E  6EDA               	movwf	fsr2h,c
 37311  005920  0EE5               	movlw	229
 37312  005922  18DE               	xorwf	postinc2,w,c
 37313  005924  B4D8               	btfsc	status,2,c
 37314  005926  D030               	goto	l2059
 37315                           
 37316                           ;fat16.c: 542: else;fat16.c: 543: {;fat16.c: 545: if(strncmp(name, &buffer[offset], 8) =
      +                          = 0)
 37317                           
 37318                           ;fat16.c: 537: {;fat16.c: 541: }
 37319  005928  C02C  F001         	movff	fat_find_file@name,strncmp@s1
 37320  00592C  C02D  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 37321  005930  0EC0               	movlw	low _buffer
 37322  005932  2435               	addwf	fat_find_file@offset,w,c
 37323  005934  6E03               	movwf	strncmp@s2,c
 37324  005936  0E03               	movlw	high _buffer
 37325  005938  2036               	addwfc	fat_find_file@offset+1,w,c
 37326  00593A  6E04               	movwf	strncmp@s2+1,c
 37327  00593C  0E00               	movlw	0
 37328  00593E  6E06               	movwf	strncmp@len+1,c
 37329  005940  0E08               	movlw	8
 37330  005942  6E05               	movwf	strncmp@len,c
 37331  005944  ECD0  F030         	call	_strncmp	;wreg free
 37332  005948  5001               	movf	?_strncmp,w,c
 37333  00594A  1002               	iorwf	?_strncmp+1,w,c
 37334  00594C  A4D8               	btfss	status,2,c
 37335  00594E  D01C               	goto	l2059
 37336                           
 37337                           ;fat16.c: 546: {;fat16.c: 548: if(strncmp(extension, &buffer[offset+8], 3) == 0)
 37338  005950  C02E  F001         	movff	fat_find_file@extension,strncmp@s1
 37339  005954  C02F  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 37340  005958  0E08               	movlw	8
 37341  00595A  2435               	addwf	fat_find_file@offset,w,c
 37342  00595C  6E30               	movwf	??_fat_find_file& (0+255),c
 37343  00595E  0E00               	movlw	0
 37344  005960  2036               	addwfc	fat_find_file@offset+1,w,c
 37345  005962  6E31               	movwf	(??_fat_find_file+1)& (0+255),c
 37346  005964  0EC0               	movlw	low _buffer
 37347  005966  2430               	addwf	??_fat_find_file,w,c
 37348  005968  6E03               	movwf	strncmp@s2,c
 37349  00596A  0E03               	movlw	high _buffer
 37350  00596C  2031               	addwfc	??_fat_find_file+1,w,c
 37351  00596E  6E04               	movwf	strncmp@s2+1,c
 37352  005970  0E00               	movlw	0
 37353  005972  6E06               	movwf	strncmp@len+1,c
 37354  005974  0E03               	movlw	3
 37355  005976  6E05               	movwf	strncmp@len,c
 37356  005978  ECD0  F030         	call	_strncmp	;wreg free
 37357  00597C  5001               	movf	?_strncmp,w,c
 37358  00597E  1002               	iorwf	?_strncmp+1,w,c
 37359  005980  A4D8               	btfss	status,2,c
 37360  005982  D002               	goto	l2059
 37361                           
 37362                           ;fat16.c: 549: {;fat16.c: 552: return file_number;
 37363  005984  5032               	movf	fat_find_file@file_number,w,c
 37364  005986  0012               	return	
 37365  005988                     l2059:
 37366                           
 37367                           ;fat16.c: 553: };fat16.c: 554: };fat16.c: 555: };fat16.c: 556: ++file_number;
 37368  005988  2A32               	incf	fat_find_file@file_number,f,c
 37369  00598A  0E20               	movlw	32
 37370  00598C  2635               	addwf	fat_find_file@offset,f,c
 37371  00598E  0E00               	movlw	0
 37372  005990  2236               	addwfc	fat_find_file@offset+1,f,c
 37373  005992  D7B1               	goto	l12227
 37374  005994                     u9250:
 37375  005994  4A33               	infsnz	fat_find_file@sector,f,c
 37376  005996  2A34               	incf	fat_find_file@sector+1,f,c
 37377  005998  5034               	movf	fat_find_file@sector+1,w,c
 37378  00599A  E101               	bnz	l12261
 37379  00599C  D79A               	goto	L44
 37380  00599E                     u9260:
 37381  00599E                     l2050:
 37382  00599E                     l12261:
 37383                           
 37384                           ;fat16.c: 557: };fat16.c: 558: };fat16.c: 559: return 0xFF;
 37385  00599E  0EFF               	movlw	255
 37386  0059A0  0012               	return	
 37387  0059A2                     __end_of_fat_find_file:
 37388                           	opt stack 0
 37389                           tosu	equ	0xFFF
 37390                           tosh	equ	0xFFE
 37391                           tosl	equ	0xFFD
 37392                           pclath	equ	0xFFA
 37393                           tblptru	equ	0xFF8
 37394                           tblptrh	equ	0xFF7
 37395                           tblptrl	equ	0xFF6
 37396                           tablat	equ	0xFF5
 37397                           prodh	equ	0xFF4
 37398                           prodl	equ	0xFF3
 37399                           intcon	equ	0xFF2
 37400                           intcon2	equ	0xFF1
 37401                           intcon3	equ	0xFF0
 37402                           indf0	equ	0xFEF
 37403                           postinc0	equ	0xFEE
 37404                           fsr0h	equ	0xFEA
 37405                           fsr0l	equ	0xFE9
 37406                           wreg	equ	0xFE8
 37407                           indf1	equ	0xFE7
 37408                           postdec1	equ	0xFE5
 37409                           plusw1	equ	0xFE3
 37410                           fsr1h	equ	0xFE2
 37411                           fsr1l	equ	0xFE1
 37412                           indf2	equ	0xFDF
 37413                           postinc2	equ	0xFDE
 37414                           postdec2	equ	0xFDD
 37415                           plusw2	equ	0xFDB
 37416                           fsr2h	equ	0xFDA
 37417                           fsr2l	equ	0xFD9
 37418                           status	equ	0xFD8
 37419                           
 37420 ;; *************** function _strncmp *****************
 37421 ;; Defined at:
 37422 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 37423 ;; Parameters:    Size  Location     Type
 37424 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 37425 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), ReceivedDataBuffer(64), 
 37426 ;;		 -> RAM(3759), 
 37427 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 37428 ;;		 -> buffer(512), 
 37429 ;;  len             2    4[COMRAM] unsigned int 
 37430 ;; Auto vars:     Size  Location     Type
 37431 ;;		None
 37432 ;; Return value:  Size  Location     Type
 37433 ;;                  2    0[COMRAM] int 
 37434 ;; Registers used:
 37435 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 37436 ;; Tracked objects:
 37437 ;;		On entry : 0/0
 37438 ;;		On exit  : 0/0
 37439 ;;		Unchanged: 0/0
 37440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37441 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37443 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37444 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37445 ;;Total ram usage:        9 bytes
 37446 ;; Hardware stack levels used:    1
 37447 ;; This function calls:
 37448 ;;		Nothing
 37449 ;; This function is called by:
 37450 ;;		_fat_find_file
 37451 ;; This function uses a non-reentrant model
 37452 ;;
 37453                           
 37454                           	psect	text189
 37455  0061A0                     __ptext189:
 37456                           	opt stack 0
 37457  0061A0                     _strncmp:
 37458                           	opt stack 27
 37459                           
 37460                           ;incstack = 0
 37461  0061A0  D053               	goto	l3713
 37462  0061A2                     l11455:
 37463  0061A2  C001  FFF6         	movff	strncmp@s1,tblptrl
 37464  0061A6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37465  0061AA  6AF8               	clrf	tblptru,c
 37466  0061AC  0E0E               	movlw	(high __ramtop+-1)
 37467  0061AE  64F7               	cpfsgt	tblptrh,c
 37468  0061B0  D003               	bra	u8217
 37469  0061B2  0008               	tblrd		*
 37470  0061B4  50F5               	movf	tablat,w,c
 37471  0061B6  D005               	bra	u8210
 37472  0061B8                     u8217:
 37473  0061B8  CFF6 FFE9          	movff	tblptrl,fsr0l
 37474  0061BC  CFF7 FFEA          	movff	tblptrh,fsr0h
 37475  0061C0  50EF               	movf	indf0,w,c
 37476  0061C2                     u8210:
 37477  0061C2  0900               	iorlw	0
 37478  0061C4  B4D8               	btfsc	status,2,c
 37479  0061C6  D019               	goto	u8230
 37480  0061C8  C003  FFD9         	movff	strncmp@s2,fsr2l
 37481  0061CC  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37482  0061D0  50DF               	movf	indf2,w,c
 37483  0061D2  6E07               	movwf	??_strncmp& (0+255),c
 37484  0061D4  C001  FFF6         	movff	strncmp@s1,tblptrl
 37485  0061D8  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37486  0061DC  6AF8               	clrf	tblptru,c
 37487  0061DE  0E0E               	movlw	(high __ramtop+-1)
 37488  0061E0  64F7               	cpfsgt	tblptrh,c
 37489  0061E2  D003               	bra	u8237
 37490  0061E4  0008               	tblrd		*
 37491  0061E6  50F5               	movf	tablat,w,c
 37492  0061E8  D005               	bra	u8235
 37493  0061EA                     u8237:
 37494  0061EA  CFF6 FFE9          	movff	tblptrl,fsr0l
 37495  0061EE  CFF7 FFEA          	movff	tblptrh,fsr0h
 37496  0061F2  50EF               	movf	indf0,w,c
 37497  0061F4                     u8235:
 37498  0061F4  1807               	xorwf	??_strncmp,w,c
 37499  0061F6  B4D8               	btfsc	status,2,c
 37500  0061F8  D023               	goto	l3715
 37501  0061FA                     u8230:
 37502  0061FA  C003  FFD9         	movff	strncmp@s2,fsr2l
 37503  0061FE  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 37504  006202  50DF               	movf	indf2,w,c
 37505  006204  6E07               	movwf	??_strncmp& (0+255),c
 37506  006206  6A08               	clrf	(??_strncmp+1)& (0+255),c
 37507  006208  1E07               	comf	??_strncmp,f,c
 37508  00620A  1E08               	comf	??_strncmp+1,f,c
 37509  00620C  4A07               	infsnz	??_strncmp,f,c
 37510  00620E  2A08               	incf	??_strncmp+1,f,c
 37511  006210  C001  FFF6         	movff	strncmp@s1,tblptrl
 37512  006214  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 37513  006218  6AF8               	clrf	tblptru,c
 37514  00621A  0E0E               	movlw	(high __ramtop+-1)
 37515  00621C  64F7               	cpfsgt	tblptrh,c
 37516  00621E  D003               	bra	u8247
 37517  006220  0008               	tblrd		*
 37518  006222  50F5               	movf	tablat,w,c
 37519  006224  D005               	bra	u8240
 37520  006226                     u8247:
 37521  006226  CFF6 FFE9          	movff	tblptrl,fsr0l
 37522  00622A  CFF7 FFEA          	movff	tblptrh,fsr0h
 37523  00622E  50EF               	movf	indf0,w,c
 37524  006230                     u8240:
 37525  006230  6E09               	movwf	(??_strncmp+2)& (0+255),c
 37526  006232  5009               	movf	??_strncmp+2,w,c
 37527  006234  2407               	addwf	??_strncmp,w,c
 37528  006236  6E01               	movwf	?_strncmp,c
 37529  006238  0E00               	movlw	0
 37530  00623A  2008               	addwfc	??_strncmp+1,w,c
 37531  00623C  6E02               	movwf	?_strncmp+1,c
 37532  00623E  0012               	return	
 37533  006240                     l3715:
 37534  006240  4A01               	infsnz	strncmp@s1,f,c
 37535  006242  2A02               	incf	strncmp@s1+1,f,c
 37536  006244  4A03               	infsnz	strncmp@s2,f,c
 37537  006246  2A04               	incf	strncmp@s2+1,f,c
 37538  006248                     l3713:
 37539  006248  0605               	decf	strncmp@len,f,c
 37540  00624A  A0D8               	btfss	status,0,c
 37541  00624C  0606               	decf	strncmp@len+1,f,c
 37542  00624E  2805               	incf	strncmp@len,w,c
 37543  006250  E1A8               	bnz	l11455
 37544  006252  2806               	incf	strncmp@len+1,w,c
 37545  006254  A4D8               	btfss	status,2,c
 37546  006256  D7A5               	goto	l3714
 37547  006258  0E00               	movlw	0
 37548  00625A  6E02               	movwf	?_strncmp+1,c
 37549  00625C  0E00               	movlw	0
 37550  00625E  6E01               	movwf	?_strncmp,c
 37551  006260  0012               	return	
 37552  006262                     __end_of_strncmp:
 37553                           	opt stack 0
 37554                           tosu	equ	0xFFF
 37555                           tosh	equ	0xFFE
 37556                           tosl	equ	0xFFD
 37557                           pclath	equ	0xFFA
 37558                           tblptru	equ	0xFF8
 37559                           tblptrh	equ	0xFF7
 37560                           tblptrl	equ	0xFF6
 37561                           tablat	equ	0xFF5
 37562                           prodh	equ	0xFF4
 37563                           prodl	equ	0xFF3
 37564                           intcon	equ	0xFF2
 37565                           intcon2	equ	0xFF1
 37566                           intcon3	equ	0xFF0
 37567                           indf0	equ	0xFEF
 37568                           postinc0	equ	0xFEE
 37569                           fsr0h	equ	0xFEA
 37570                           fsr0l	equ	0xFE9
 37571                           wreg	equ	0xFE8
 37572                           indf1	equ	0xFE7
 37573                           postdec1	equ	0xFE5
 37574                           plusw1	equ	0xFE3
 37575                           fsr1h	equ	0xFE2
 37576                           fsr1l	equ	0xFE1
 37577                           indf2	equ	0xFDF
 37578                           postinc2	equ	0xFDE
 37579                           postdec2	equ	0xFDD
 37580                           plusw2	equ	0xFDB
 37581                           fsr2h	equ	0xFDA
 37582                           fsr2l	equ	0xFD9
 37583                           status	equ	0xFD8
 37584                           
 37585 ;; *************** function __get_time *****************
 37586 ;; Defined at:
 37587 ;;		line 376 in file "fat16.c"
 37588 ;; Parameters:    Size  Location     Type
 37589 ;;		None
 37590 ;; Auto vars:     Size  Location     Type
 37591 ;;		None
 37592 ;; Return value:  Size  Location     Type
 37593 ;;                  2    0[COMRAM] unsigned int 
 37594 ;; Registers used:
 37595 ;;		wreg, status,2
 37596 ;; Tracked objects:
 37597 ;;		On entry : 0/0
 37598 ;;		On exit  : 0/0
 37599 ;;		Unchanged: 0/0
 37600 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37601 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37602 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37603 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37604 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37605 ;;Total ram usage:        2 bytes
 37606 ;; Hardware stack levels used:    1
 37607 ;; This function calls:
 37608 ;;		Nothing
 37609 ;; This function is called by:
 37610 ;;		_fat_create_file
 37611 ;; This function uses a non-reentrant model
 37612 ;;
 37613                           
 37614                           	psect	text190
 37615  008FF8                     __ptext190:
 37616                           	opt stack 0
 37617  008FF8                     __get_time:
 37618                           	opt stack 26
 37619                           
 37620                           ;fat16.c: 388: return 0x0000;
 37621                           
 37622                           ;incstack = 0
 37623  008FF8  0E00               	movlw	0
 37624  008FFA  6E02               	movwf	?__get_time+1,c
 37625  008FFC  0E00               	movlw	0
 37626  008FFE  6E01               	movwf	?__get_time,c
 37627  009000  0012               	return	
 37628  009002                     __end_of__get_time:
 37629                           	opt stack 0
 37630                           tosu	equ	0xFFF
 37631                           tosh	equ	0xFFE
 37632                           tosl	equ	0xFFD
 37633                           pclath	equ	0xFFA
 37634                           tblptru	equ	0xFF8
 37635                           tblptrh	equ	0xFF7
 37636                           tblptrl	equ	0xFF6
 37637                           tablat	equ	0xFF5
 37638                           prodh	equ	0xFF4
 37639                           prodl	equ	0xFF3
 37640                           intcon	equ	0xFF2
 37641                           intcon2	equ	0xFF1
 37642                           intcon3	equ	0xFF0
 37643                           indf0	equ	0xFEF
 37644                           postinc0	equ	0xFEE
 37645                           fsr0h	equ	0xFEA
 37646                           fsr0l	equ	0xFE9
 37647                           wreg	equ	0xFE8
 37648                           indf1	equ	0xFE7
 37649                           postdec1	equ	0xFE5
 37650                           plusw1	equ	0xFE3
 37651                           fsr1h	equ	0xFE2
 37652                           fsr1l	equ	0xFE1
 37653                           indf2	equ	0xFDF
 37654                           postinc2	equ	0xFDE
 37655                           postdec2	equ	0xFDD
 37656                           plusw2	equ	0xFDB
 37657                           fsr2h	equ	0xFDA
 37658                           fsr2l	equ	0xFD9
 37659                           status	equ	0xFD8
 37660                           
 37661 ;; *************** function __get_date *****************
 37662 ;; Defined at:
 37663 ;;		line 392 in file "fat16.c"
 37664 ;; Parameters:    Size  Location     Type
 37665 ;;		None
 37666 ;; Auto vars:     Size  Location     Type
 37667 ;;		None
 37668 ;; Return value:  Size  Location     Type
 37669 ;;                  2    0[COMRAM] unsigned int 
 37670 ;; Registers used:
 37671 ;;		wreg, status,2
 37672 ;; Tracked objects:
 37673 ;;		On entry : 0/0
 37674 ;;		On exit  : 0/0
 37675 ;;		Unchanged: 0/0
 37676 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37677 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37678 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37679 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37680 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37681 ;;Total ram usage:        2 bytes
 37682 ;; Hardware stack levels used:    1
 37683 ;; This function calls:
 37684 ;;		Nothing
 37685 ;; This function is called by:
 37686 ;;		_fat_create_file
 37687 ;; This function uses a non-reentrant model
 37688 ;;
 37689                           
 37690                           	psect	text191
 37691  009002                     __ptext191:
 37692                           	opt stack 0
 37693  009002                     __get_date:
 37694                           	opt stack 26
 37695                           
 37696                           ;fat16.c: 404: return 0x0000;
 37697                           
 37698                           ;incstack = 0
 37699  009002  0E00               	movlw	0
 37700  009004  6E02               	movwf	?__get_date+1,c
 37701  009006  0E00               	movlw	0
 37702  009008  6E01               	movwf	?__get_date,c
 37703  00900A  0012               	return	
 37704  00900C                     __end_of__get_date:
 37705                           	opt stack 0
 37706                           tosu	equ	0xFFF
 37707                           tosh	equ	0xFFE
 37708                           tosl	equ	0xFFD
 37709                           pclath	equ	0xFFA
 37710                           tblptru	equ	0xFF8
 37711                           tblptrh	equ	0xFF7
 37712                           tblptrl	equ	0xFF6
 37713                           tablat	equ	0xFF5
 37714                           prodh	equ	0xFF4
 37715                           prodl	equ	0xFF3
 37716                           intcon	equ	0xFF2
 37717                           intcon2	equ	0xFF1
 37718                           intcon3	equ	0xFF0
 37719                           indf0	equ	0xFEF
 37720                           postinc0	equ	0xFEE
 37721                           fsr0h	equ	0xFEA
 37722                           fsr0l	equ	0xFE9
 37723                           wreg	equ	0xFE8
 37724                           indf1	equ	0xFE7
 37725                           postdec1	equ	0xFE5
 37726                           plusw1	equ	0xFE3
 37727                           fsr1h	equ	0xFE2
 37728                           fsr1l	equ	0xFE1
 37729                           indf2	equ	0xFDF
 37730                           postinc2	equ	0xFDE
 37731                           postdec2	equ	0xFDD
 37732                           plusw2	equ	0xFDB
 37733                           fsr2h	equ	0xFDA
 37734                           fsr2l	equ	0xFD9
 37735                           status	equ	0xFD8
 37736                           
 37737 ;; *************** function __get_available_root_entry *****************
 37738 ;; Defined at:
 37739 ;;		line 442 in file "fat16.c"
 37740 ;; Parameters:    Size  Location     Type
 37741 ;;		None
 37742 ;; Auto vars:     Size  Location     Type
 37743 ;;  file_number     1   53[COMRAM] unsigned char 
 37744 ;; Return value:  Size  Location     Type
 37745 ;;                  1    wreg      unsigned char 
 37746 ;; Registers used:
 37747 ;;		wreg, status,2, status,0, cstack
 37748 ;; Tracked objects:
 37749 ;;		On entry : 0/0
 37750 ;;		On exit  : 0/0
 37751 ;;		Unchanged: 0/0
 37752 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37753 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37754 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37755 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37756 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37757 ;;Total ram usage:        1 bytes
 37758 ;; Hardware stack levels used:    1
 37759 ;; Hardware stack levels required when called:    6
 37760 ;; This function calls:
 37761 ;;		__root_is_available
 37762 ;; This function is called by:
 37763 ;;		_fat_create_file
 37764 ;; This function uses a non-reentrant model
 37765 ;;
 37766                           
 37767                           	psect	text192
 37768  008C7A                     __ptext192:
 37769                           	opt stack 0
 37770  008C7A                     __get_available_root_entry:
 37771                           	opt stack 20
 37772                           
 37773                           ;fat16.c: 444: uint8_t file_number;;fat16.c: 446: for(file_number=0; file_number<64; ++f
      +                          ile_number)
 37774                           
 37775                           ;incstack = 0
 37776  008C7A  0E00               	movlw	0
 37777  008C7C  6E36               	movwf	__get_available_root_entry@file_number,c
 37778  008C7E                     l12183:
 37779  008C7E  0E3F               	movlw	63
 37780  008C80  6436               	cpfsgt	__get_available_root_entry@file_number,c
 37781  008C82  D001               	goto	l2031
 37782  008C84  D00A               	goto	u9180
 37783  008C86                     l2031:
 37784                           
 37785                           ;fat16.c: 447: {;fat16.c: 448: if(_root_is_available(file_number))
 37786  008C86  5036               	movf	__get_available_root_entry@file_number,w,c
 37787  008C88  ECA3  F03D         	call	__root_is_available
 37788  008C8C  0900               	iorlw	0
 37789  008C8E  B4D8               	btfsc	status,2,c
 37790  008C90  D002               	goto	l2033
 37791                           
 37792                           ;fat16.c: 449: {;fat16.c: 450: return file_number;
 37793  008C92  5036               	movf	__get_available_root_entry@file_number,w,c
 37794  008C94  0012               	return	
 37795  008C96                     l2033:
 37796  008C96  2A36               	incf	__get_available_root_entry@file_number,f,c
 37797  008C98  D7F2               	goto	l12183
 37798  008C9A                     u9180:
 37799                           
 37800                           ;fat16.c: 451: };fat16.c: 452: };fat16.c: 453: return 0xFF;
 37801  008C9A  0EFF               	movlw	255
 37802  008C9C  0012               	return	
 37803  008C9E                     __end_of__get_available_root_entry:
 37804                           	opt stack 0
 37805                           tosu	equ	0xFFF
 37806                           tosh	equ	0xFFE
 37807                           tosl	equ	0xFFD
 37808                           pclath	equ	0xFFA
 37809                           tblptru	equ	0xFF8
 37810                           tblptrh	equ	0xFF7
 37811                           tblptrl	equ	0xFF6
 37812                           tablat	equ	0xFF5
 37813                           prodh	equ	0xFF4
 37814                           prodl	equ	0xFF3
 37815                           intcon	equ	0xFF2
 37816                           intcon2	equ	0xFF1
 37817                           intcon3	equ	0xFF0
 37818                           indf0	equ	0xFEF
 37819                           postinc0	equ	0xFEE
 37820                           fsr0h	equ	0xFEA
 37821                           fsr0l	equ	0xFE9
 37822                           wreg	equ	0xFE8
 37823                           indf1	equ	0xFE7
 37824                           postdec1	equ	0xFE5
 37825                           plusw1	equ	0xFE3
 37826                           fsr1h	equ	0xFE2
 37827                           fsr1l	equ	0xFE1
 37828                           indf2	equ	0xFDF
 37829                           postinc2	equ	0xFDE
 37830                           postdec2	equ	0xFDD
 37831                           plusw2	equ	0xFDB
 37832                           fsr2h	equ	0xFDA
 37833                           fsr2l	equ	0xFD9
 37834                           status	equ	0xFD8
 37835                           
 37836 ;; *************** function __parse_file_append *****************
 37837 ;; Defined at:
 37838 ;;		line 644 in file "api.c"
 37839 ;; Parameters:    Size  Location     Type
 37840 ;;  data            2   89[COMRAM] PTR unsigned char 
 37841 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37842 ;; Auto vars:     Size  Location     Type
 37843 ;;		None
 37844 ;; Return value:  Size  Location     Type
 37845 ;;                  1    wreg      unsigned char 
 37846 ;; Registers used:
 37847 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37848 ;; Tracked objects:
 37849 ;;		On entry : 0/0
 37850 ;;		On exit  : 0/0
 37851 ;;		Unchanged: 0/0
 37852 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37853 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37854 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37855 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37856 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37857 ;;Total ram usage:        3 bytes
 37858 ;; Hardware stack levels used:    1
 37859 ;; Hardware stack levels required when called:    9
 37860 ;; This function calls:
 37861 ;;		_fat_append_to_file
 37862 ;; This function is called by:
 37863 ;;		__parse_command_long
 37864 ;; This function uses a non-reentrant model
 37865 ;;
 37866                           
 37867                           	psect	text193
 37868  00737A                     __ptext193:
 37869                           	opt stack 0
 37870  00737A                     __parse_file_append:
 37871                           	opt stack 19
 37872                           
 37873                           ;api.c: 647: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 37874                           
 37875                           ;incstack = 0
 37876  00737A  C05A  FFD9         	movff	__parse_file_append@data,fsr2l
 37877  00737E  C05B  FFDA         	movff	__parse_file_append@data+1,fsr2h
 37878  007382  0E54               	movlw	84
 37879  007384  18DE               	xorwf	postinc2,w,c
 37880  007386  A4D8               	btfss	status,2,c
 37881  007388  D014               	goto	u10960
 37882  00738A  EE20 F003          	lfsr	2,3
 37883  00738E  505A               	movf	__parse_file_append@data,w,c
 37884  007390  26D9               	addwf	fsr2l,f,c
 37885  007392  505B               	movf	__parse_file_append@data+1,w,c
 37886  007394  22DA               	addwfc	fsr2h,f,c
 37887  007396  0EFE               	movlw	254
 37888  007398  18DE               	xorwf	postinc2,w,c
 37889  00739A  A4D8               	btfss	status,2,c
 37890  00739C  D00A               	goto	u10960
 37891  00739E  EE20 F004          	lfsr	2,4
 37892  0073A2  505A               	movf	__parse_file_append@data,w,c
 37893  0073A4  26D9               	addwf	fsr2l,f,c
 37894  0073A6  505B               	movf	__parse_file_append@data+1,w,c
 37895  0073A8  22DA               	addwfc	fsr2h,f,c
 37896  0073AA  0E4B               	movlw	75
 37897  0073AC  18DE               	xorwf	postinc2,w,c
 37898  0073AE  B4D8               	btfsc	status,2,c
 37899  0073B0  D002               	goto	l2833
 37900  0073B2                     u10960:
 37901                           
 37902                           ;api.c: 648: {;api.c: 650: return 65;
 37903  0073B2  0E41               	movlw	65
 37904  0073B4  0012               	return	
 37905  0073B6                     l2833:
 37906                           
 37907                           ;api.c: 651: };api.c: 654: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 37908  0073B6  EE20 F002          	lfsr	2,2
 37909  0073BA  505A               	movf	__parse_file_append@data,w,c
 37910  0073BC  26D9               	addwf	fsr2l,f,c
 37911  0073BE  505B               	movf	__parse_file_append@data+1,w,c
 37912  0073C0  22DA               	addwfc	fsr2h,f,c
 37913  0073C2  50DF               	movf	indf2,w,c
 37914  0073C4  6E5C               	movwf	??__parse_file_append& (0+255),c
 37915  0073C6  505C               	movf	??__parse_file_append,w,c
 37916  0073C8  6E56               	movwf	fat_append_to_file@number_of_bytes,c
 37917  0073CA  6A57               	clrf	fat_append_to_file@number_of_bytes+1,c
 37918  0073CC  0E05               	movlw	5
 37919  0073CE  245A               	addwf	__parse_file_append@data,w,c
 37920  0073D0  6E58               	movwf	fat_append_to_file@data,c
 37921  0073D2  0E00               	movlw	0
 37922  0073D4  205B               	addwfc	__parse_file_append@data+1,w,c
 37923  0073D6  6E59               	movwf	fat_append_to_file@data+1,c
 37924  0073D8  EE20 F001          	lfsr	2,1
 37925  0073DC  505A               	movf	__parse_file_append@data,w,c
 37926  0073DE  26D9               	addwf	fsr2l,f,c
 37927  0073E0  505B               	movf	__parse_file_append@data+1,w,c
 37928  0073E2  22DA               	addwfc	fsr2h,f,c
 37929  0073E4  50DF               	movf	indf2,w,c
 37930  0073E6  EC49  F037         	call	_fat_append_to_file
 37931                           
 37932                           ;api.c: 655: return data[2] + 5;
 37933  0073EA  EE20 F002          	lfsr	2,2
 37934  0073EE  505A               	movf	__parse_file_append@data,w,c
 37935  0073F0  26D9               	addwf	fsr2l,f,c
 37936  0073F2  505B               	movf	__parse_file_append@data+1,w,c
 37937  0073F4  22DA               	addwfc	fsr2h,f,c
 37938  0073F6  50DF               	movf	indf2,w,c
 37939  0073F8  0F05               	addlw	5
 37940  0073FA  0012               	return	
 37941  0073FC                     __end_of__parse_file_append:
 37942                           	opt stack 0
 37943                           tosu	equ	0xFFF
 37944                           tosh	equ	0xFFE
 37945                           tosl	equ	0xFFD
 37946                           pclath	equ	0xFFA
 37947                           tblptru	equ	0xFF8
 37948                           tblptrh	equ	0xFF7
 37949                           tblptrl	equ	0xFF6
 37950                           tablat	equ	0xFF5
 37951                           prodh	equ	0xFF4
 37952                           prodl	equ	0xFF3
 37953                           intcon	equ	0xFF2
 37954                           intcon2	equ	0xFF1
 37955                           intcon3	equ	0xFF0
 37956                           indf0	equ	0xFEF
 37957                           postinc0	equ	0xFEE
 37958                           fsr0h	equ	0xFEA
 37959                           fsr0l	equ	0xFE9
 37960                           wreg	equ	0xFE8
 37961                           indf1	equ	0xFE7
 37962                           postdec1	equ	0xFE5
 37963                           plusw1	equ	0xFE3
 37964                           fsr1h	equ	0xFE2
 37965                           fsr1l	equ	0xFE1
 37966                           indf2	equ	0xFDF
 37967                           postinc2	equ	0xFDE
 37968                           postdec2	equ	0xFDD
 37969                           plusw2	equ	0xFDB
 37970                           fsr2h	equ	0xFDA
 37971                           fsr2l	equ	0xFD9
 37972                           status	equ	0xFD8
 37973                           
 37974 ;; *************** function _fat_append_to_file *****************
 37975 ;; Defined at:
 37976 ;;		line 676 in file "fat16.c"
 37977 ;; Parameters:    Size  Location     Type
 37978 ;;  file_number     1    wreg     unsigned char 
 37979 ;;  number_of_by    2   85[COMRAM] unsigned int 
 37980 ;;  data            2   87[COMRAM] PTR unsigned char 
 37981 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 37982 ;; Auto vars:     Size  Location     Type
 37983 ;;  file_number     1   55[BANK0 ] unsigned char 
 37984 ;;  old_file_siz    4   51[BANK0 ] unsigned long 
 37985 ;;  new_file_siz    4   46[BANK0 ] unsigned long 
 37986 ;;  return_code     1   50[BANK0 ] unsigned char 
 37987 ;; Return value:  Size  Location     Type
 37988 ;;                  1    wreg      unsigned char 
 37989 ;; Registers used:
 37990 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37991 ;; Tracked objects:
 37992 ;;		On entry : 0/0
 37993 ;;		On exit  : 0/0
 37994 ;;		Unchanged: 0/0
 37995 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37996 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37997 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37998 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37999 ;;      Totals:         4      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38000 ;;Total ram usage:       14 bytes
 38001 ;; Hardware stack levels used:    1
 38002 ;; Hardware stack levels required when called:    8
 38003 ;; This function calls:
 38004 ;;		__root_is_available
 38005 ;;		_fat_get_file_size
 38006 ;;		_fat_modify_file
 38007 ;;		_fat_resize_file
 38008 ;; This function is called by:
 38009 ;;		__parse_file_append
 38010 ;; This function uses a non-reentrant model
 38011 ;;
 38012                           
 38013                           	psect	text194
 38014  006E92                     __ptext194:
 38015                           	opt stack 0
 38016  006E92                     _fat_append_to_file:
 38017                           	opt stack 19
 38018                           
 38019                           ;incstack = 0
 38020                           ;fat_append_to_file@file_number stored from wreg
 38021  006E92  0100               	movlb	0	; () banked
 38022  006E94  6F97               	movwf	fat_append_to_file@file_number& (0+255),b
 38023                           
 38024                           ;fat16.c: 678: uint32_t old_file_size;;fat16.c: 679: uint32_t new_file_size;;fat16.c: 68
      +                          0: uint8_t return_code;;fat16.c: 683: if(file_number>=64)
 38025  006E96  0E3F               	movlw	63
 38026  006E98  0100               	movlb	0	; () banked
 38027  006E9A  6597               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 38028  006E9C  D001               	goto	l2077
 38029  006E9E  0012               	return	
 38030  006EA0                     l2077:
 38031                           
 38032                           ; BSR set to: 0
 38033                           ;fat16.c: 687: };fat16.c: 690: if(_root_is_available(file_number))
 38034                           
 38035                           ; BSR set to: 0
 38036  006EA0  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 38037  006EA2  ECA3  F03D         	call	__root_is_available
 38038  006EA6  0900               	iorlw	0
 38039  006EA8  A4D8               	btfss	status,2,c
 38040  006EAA  0012               	return	
 38041                           
 38042                           ;fat16.c: 694: };fat16.c: 697: old_file_size = fat_get_file_size(file_number);
 38043                           
 38044                           ;fat16.c: 691: {;fat16.c: 693: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 38045  006EAC  0100               	movlb	0	; () banked
 38046  006EAE  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 38047  006EB0  EC0B  F03C         	call	_fat_get_file_size
 38048  006EB4  C036  F093         	movff	?_fat_get_file_size,fat_append_to_file@old_file_size
 38049  006EB8  C037  F094         	movff	?_fat_get_file_size+1,fat_append_to_file@old_file_size+1
 38050  006EBC  C038  F095         	movff	?_fat_get_file_size+2,fat_append_to_file@old_file_size+2
 38051  006EC0  C039  F096         	movff	?_fat_get_file_size+3,fat_append_to_file@old_file_size+3
 38052                           
 38053                           ;fat16.c: 700: new_file_size = old_file_size + number_of_bytes;
 38054  006EC4  5056               	movf	fat_append_to_file@number_of_bytes,w,c
 38055  006EC6  0100               	movlb	0	; () banked
 38056  006EC8  2593               	addwf	fat_append_to_file@old_file_size& (0+255),w,b
 38057  006ECA  6F8E               	movwf	fat_append_to_file@new_file_size& (0+255),b
 38058  006ECC  5057               	movf	fat_append_to_file@number_of_bytes+1,w,c
 38059  006ECE  2194               	addwfc	(fat_append_to_file@old_file_size+1)& (0+255),w,b
 38060  006ED0  6F8F               	movwf	(fat_append_to_file@new_file_size+1)& (0+255),b
 38061  006ED2  0E00               	movlw	0
 38062  006ED4  2195               	addwfc	(fat_append_to_file@old_file_size+2)& (0+255),w,b
 38063  006ED6  6F90               	movwf	(fat_append_to_file@new_file_size+2)& (0+255),b
 38064  006ED8  0E00               	movlw	0
 38065  006EDA  2196               	addwfc	(fat_append_to_file@old_file_size+3)& (0+255),w,b
 38066  006EDC  6F91               	movwf	(fat_append_to_file@new_file_size+3)& (0+255),b
 38067                           
 38068                           ; BSR set to: 0
 38069                           ;fat16.c: 703: return_code = fat_resize_file(file_number, new_file_size);
 38070  006EDE  C08E  F04D         	movff	fat_append_to_file@new_file_size,fat_resize_file@new_file_size
 38071  006EE2  C08F  F04E         	movff	fat_append_to_file@new_file_size+1,fat_resize_file@new_file_size+1
 38072  006EE6  C090  F04F         	movff	fat_append_to_file@new_file_size+2,fat_resize_file@new_file_size+2
 38073  006EEA  C091  F050         	movff	fat_append_to_file@new_file_size+3,fat_resize_file@new_file_size+3
 38074  006EEE  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 38075  006EF0  ECF3  F026         	call	_fat_resize_file
 38076  006EF4  0100               	movlb	0	; () banked
 38077  006EF6  6F92               	movwf	fat_append_to_file@return_code& (0+255),b
 38078                           
 38079                           ; BSR set to: 0
 38080                           ;fat16.c: 704: if(return_code!=0x00)
 38081  006EF8  5192               	movf	fat_append_to_file@return_code& (0+255),w,b
 38082  006EFA  A4D8               	btfss	status,2,c
 38083  006EFC  0012               	return	
 38084                           
 38085                           ; BSR set to: 0
 38086                           ;fat16.c: 708: };fat16.c: 711: fat_modify_file(file_number, old_file_size, number_of_byt
      +                          es, data);
 38087                           
 38088                           ; BSR set to: 0
 38089                           
 38090                           ; BSR set to: 0
 38091                           ;fat16.c: 705: {;fat16.c: 707: return return_code - 0x0F;;	Return value of _fat_append_t
      +                          o_file is never used
 38092  006EFE  C093  F042         	movff	fat_append_to_file@old_file_size,fat_modify_file@start_byte
 38093  006F02  C094  F043         	movff	fat_append_to_file@old_file_size+1,fat_modify_file@start_byte+1
 38094  006F06  C095  F044         	movff	fat_append_to_file@old_file_size+2,fat_modify_file@start_byte+2
 38095  006F0A  C096  F045         	movff	fat_append_to_file@old_file_size+3,fat_modify_file@start_byte+3
 38096  006F0E  C056  F046         	movff	fat_append_to_file@number_of_bytes,fat_modify_file@length
 38097  006F12  C057  F047         	movff	fat_append_to_file@number_of_bytes+1,fat_modify_file@length+1
 38098  006F16  C058  F048         	movff	fat_append_to_file@data,fat_modify_file@data
 38099  006F1A  C059  F049         	movff	fat_append_to_file@data+1,fat_modify_file@data+1
 38100  006F1E  5197               	movf	fat_append_to_file@file_number& (0+255),w,b
 38101  006F20  EC42  F011         	call	_fat_modify_file
 38102  006F24  0012               	return	
 38103  006F26                     __end_of_fat_append_to_file:
 38104                           	opt stack 0
 38105                           tosu	equ	0xFFF
 38106                           tosh	equ	0xFFE
 38107                           tosl	equ	0xFFD
 38108                           pclath	equ	0xFFA
 38109                           tblptru	equ	0xFF8
 38110                           tblptrh	equ	0xFF7
 38111                           tblptrl	equ	0xFF6
 38112                           tablat	equ	0xFF5
 38113                           prodh	equ	0xFF4
 38114                           prodl	equ	0xFF3
 38115                           intcon	equ	0xFF2
 38116                           intcon2	equ	0xFF1
 38117                           intcon3	equ	0xFF0
 38118                           indf0	equ	0xFEF
 38119                           postinc0	equ	0xFEE
 38120                           fsr0h	equ	0xFEA
 38121                           fsr0l	equ	0xFE9
 38122                           wreg	equ	0xFE8
 38123                           indf1	equ	0xFE7
 38124                           postdec1	equ	0xFE5
 38125                           plusw1	equ	0xFE3
 38126                           fsr1h	equ	0xFE2
 38127                           fsr1l	equ	0xFE1
 38128                           indf2	equ	0xFDF
 38129                           postinc2	equ	0xFDE
 38130                           postdec2	equ	0xFDD
 38131                           plusw2	equ	0xFDB
 38132                           fsr2h	equ	0xFDA
 38133                           fsr2l	equ	0xFD9
 38134                           status	equ	0xFD8
 38135                           
 38136 ;; *************** function _fat_resize_file *****************
 38137 ;; Defined at:
 38138 ;;		line 850 in file "fat16.c"
 38139 ;; Parameters:    Size  Location     Type
 38140 ;;  file_number     1    wreg     unsigned char 
 38141 ;;  new_file_siz    4   76[COMRAM] unsigned long 
 38142 ;; Auto vars:     Size  Location     Type
 38143 ;;  file_number     1    6[BANK0 ] unsigned char 
 38144 ;;  root           32    7[BANK0 ] struct .
 38145 ;;  first_cluste    2    4[BANK0 ] unsigned int 
 38146 ;;  new_number_o    2    2[BANK0 ] unsigned int 
 38147 ;;  old_number_o    2    0[BANK0 ] unsigned int 
 38148 ;; Return value:  Size  Location     Type
 38149 ;;                  1    wreg      unsigned char 
 38150 ;; Registers used:
 38151 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38152 ;; Tracked objects:
 38153 ;;		On entry : 0/0
 38154 ;;		On exit  : 0/0
 38155 ;;		Unchanged: 0/0
 38156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38157 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38158 ;;      Locals:         0      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38159 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38160 ;;      Totals:         8      39       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38161 ;;Total ram usage:       47 bytes
 38162 ;; Hardware stack levels used:    1
 38163 ;; Hardware stack levels required when called:    7
 38164 ;; This function calls:
 38165 ;;		__make_cluster_chain
 38166 ;;		__root_is_available
 38167 ;;		__write_root
 38168 ;;		_fat_get_file_information
 38169 ;; This function is called by:
 38170 ;;		_fat_append_to_file
 38171 ;;		__parse_file_resize
 38172 ;; This function uses a non-reentrant model
 38173 ;;
 38174                           
 38175                           	psect	text195
 38176  004DE6                     __ptext195:
 38177                           	opt stack 0
 38178  004DE6                     _fat_resize_file:
 38179                           	opt stack 20
 38180                           
 38181                           ;incstack = 0
 38182                           ;fat_resize_file@file_number stored from wreg
 38183  004DE6  0100               	movlb	0	; () banked
 38184  004DE8  6F66               	movwf	fat_resize_file@file_number& (0+255),b
 38185                           
 38186                           ;fat16.c: 852: rootEntry_t root;;fat16.c: 853: uint16_t old_number_of_clusters;;fat16.c:
      +                           854: uint16_t new_number_of_clusters;;fat16.c: 855: uint16_t first_cluster;;fat16.c: 85
      +                          8: if(file_number>=64)
 38187  004DEA  0E3F               	movlw	63
 38188  004DEC  0100               	movlb	0	; () banked
 38189  004DEE  6566               	cpfsgt	fat_resize_file@file_number& (0+255),b
 38190  004DF0  D002               	goto	l2106
 38191                           
 38192                           ; BSR set to: 0
 38193                           ;fat16.c: 859: {;fat16.c: 861: return 0xFF;
 38194  004DF2  0EFF               	movlw	255
 38195                           
 38196                           ; BSR set to: 0
 38197  004DF4  0012               	return	
 38198  004DF6                     l2106:
 38199                           
 38200                           ; BSR set to: 0
 38201                           ;fat16.c: 862: };fat16.c: 865: if(_root_is_available(file_number))
 38202                           
 38203                           ; BSR set to: 0
 38204  004DF6  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38205  004DF8  ECA3  F03D         	call	__root_is_available
 38206  004DFC  0900               	iorlw	0
 38207  004DFE  B4D8               	btfsc	status,2,c
 38208  004E00  D002               	goto	l2108
 38209                           
 38210                           ;fat16.c: 866: {;fat16.c: 868: return 0xFE;
 38211  004E02  0EFE               	movlw	254
 38212  004E04  0012               	return	
 38213  004E06                     l2108:
 38214                           
 38215                           ;fat16.c: 869: };fat16.c: 872: fat_get_file_information(file_number, &root);
 38216  004E06  0E67               	movlw	low fat_resize_file@root
 38217  004E08  6E30               	movwf	fat_get_file_information@data,c
 38218  004E0A  0E00               	movlw	high fat_resize_file@root
 38219  004E0C  6E31               	movwf	fat_get_file_information@data+1,c
 38220  004E0E  0100               	movlb	0	; () banked
 38221  004E10  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38222  004E12  EC2B  F03B         	call	_fat_get_file_information
 38223                           
 38224                           ;fat16.c: 875: old_number_of_clusters = (root.fileSize+512-1)>>9;
 38225  004E16  EE20  F083         	lfsr	2,fat_resize_file@root+28
 38226  004E1A  0EFF               	movlw	255
 38227  004E1C  24DE               	addwf	postinc2,w,c
 38228  004E1E  6E51               	movwf	??_fat_resize_file& (0+255),c
 38229  004E20  0E01               	movlw	1
 38230  004E22  20DE               	addwfc	postinc2,w,c
 38231  004E24  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38232  004E26  0E00               	movlw	0
 38233  004E28  20DE               	addwfc	postinc2,w,c
 38234  004E2A  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38235  004E2C  0E00               	movlw	0
 38236  004E2E  20DE               	addwfc	postinc2,w,c
 38237  004E30  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38238  004E32  0E0A               	movlw	10
 38239  004E34  D005               	goto	u9300
 38240  004E36                     u9305:
 38241  004E36  90D8               	bcf	status,0,c
 38242  004E38  3254               	rrcf	??_fat_resize_file+3,f,c
 38243  004E3A  3253               	rrcf	??_fat_resize_file+2,f,c
 38244  004E3C  3252               	rrcf	??_fat_resize_file+1,f,c
 38245  004E3E  3251               	rrcf	??_fat_resize_file,f,c
 38246  004E40                     u9300:
 38247  004E40  2EE8               	decfsz	wreg,f,c
 38248  004E42  D7F9               	goto	u9305
 38249  004E44  C051  F060         	movff	??_fat_resize_file,fat_resize_file@old_number_of_clusters
 38250  004E48  C052  F061         	movff	??_fat_resize_file+1,fat_resize_file@old_number_of_clusters+1
 38251                           
 38252                           ;fat16.c: 876: new_number_of_clusters = (new_file_size+512-1)>>9;
 38253  004E4C  0EFF               	movlw	255
 38254  004E4E  244D               	addwf	fat_resize_file@new_file_size,w,c
 38255  004E50  6E51               	movwf	??_fat_resize_file& (0+255),c
 38256  004E52  0E01               	movlw	1
 38257  004E54  204E               	addwfc	fat_resize_file@new_file_size+1,w,c
 38258  004E56  6E52               	movwf	(??_fat_resize_file+1)& (0+255),c
 38259  004E58  0E00               	movlw	0
 38260  004E5A  204F               	addwfc	fat_resize_file@new_file_size+2,w,c
 38261  004E5C  6E53               	movwf	(??_fat_resize_file+2)& (0+255),c
 38262  004E5E  0E00               	movlw	0
 38263  004E60  2050               	addwfc	fat_resize_file@new_file_size+3,w,c
 38264  004E62  6E54               	movwf	(??_fat_resize_file+3)& (0+255),c
 38265  004E64  0E0A               	movlw	10
 38266  004E66  D005               	goto	u9310
 38267  004E68                     u9315:
 38268  004E68  90D8               	bcf	status,0,c
 38269  004E6A  3254               	rrcf	??_fat_resize_file+3,f,c
 38270  004E6C  3253               	rrcf	??_fat_resize_file+2,f,c
 38271  004E6E  3252               	rrcf	??_fat_resize_file+1,f,c
 38272  004E70  3251               	rrcf	??_fat_resize_file,f,c
 38273  004E72                     u9310:
 38274  004E72  2EE8               	decfsz	wreg,f,c
 38275  004E74  D7F9               	goto	u9315
 38276  004E76  C051  F062         	movff	??_fat_resize_file,fat_resize_file@new_number_of_clusters
 38277  004E7A  C052  F063         	movff	??_fat_resize_file+1,fat_resize_file@new_number_of_clusters+1
 38278                           
 38279                           ;fat16.c: 879: if(old_number_of_clusters!=new_number_of_clusters)
 38280  004E7E  0100               	movlb	0	; () banked
 38281  004E80  5162               	movf	fat_resize_file@new_number_of_clusters& (0+255),w,b
 38282  004E82  1960               	xorwf	fat_resize_file@old_number_of_clusters& (0+255),w,b
 38283  004E84  E104               	bnz	u9320
 38284  004E86  5163               	movf	(fat_resize_file@new_number_of_clusters+1)& (0+255),w,b
 38285  004E88  1961               	xorwf	(fat_resize_file@old_number_of_clusters+1)& (0+255),w,b
 38286  004E8A  B4D8               	btfsc	status,2,c
 38287  004E8C  D01A               	goto	l2109
 38288  004E8E                     u9320:
 38289                           
 38290                           ; BSR set to: 0
 38291                           ;fat16.c: 880: {;fat16.c: 881: first_cluster = _make_cluster_chain(root.firstCluster, ne
      +                          w_number_of_clusters);
 38292  004E8E  C081  F036         	movff	fat_resize_file@root+26,__make_cluster_chain@first_cluster
 38293  004E92  C082  F037         	movff	fat_resize_file@root+27,__make_cluster_chain@first_cluster+1
 38294  004E96  C062  F038         	movff	fat_resize_file@new_number_of_clusters,__make_cluster_chain@number_of_clusters
 38295  004E9A  C063  F039         	movff	fat_resize_file@new_number_of_clusters+1,__make_cluster_chain@number_of_clusters+
      +                          1
 38296  004E9E  ECE9  F00A         	call	__make_cluster_chain	;wreg free
 38297  004EA2  C036  F064         	movff	?__make_cluster_chain,fat_resize_file@first_cluster
 38298  004EA6  C037  F065         	movff	?__make_cluster_chain+1,fat_resize_file@first_cluster+1
 38299                           
 38300                           ;fat16.c: 882: if(first_cluster==0xFFFF)
 38301  004EAA  0100               	movlb	0	; () banked
 38302  004EAC  2964               	incf	fat_resize_file@first_cluster& (0+255),w,b
 38303  004EAE  E105               	bnz	l2110
 38304  004EB0  2965               	incf	(fat_resize_file@first_cluster+1)& (0+255),w,b
 38305  004EB2  A4D8               	btfss	status,2,c
 38306  004EB4  D002               	goto	l2110
 38307                           
 38308                           ; BSR set to: 0
 38309                           ;fat16.c: 883: {;fat16.c: 885: return 0xFD;
 38310  004EB6  0EFD               	movlw	253
 38311                           
 38312                           ; BSR set to: 0
 38313  004EB8  0012               	return	
 38314  004EBA                     l2110:
 38315                           
 38316                           ; BSR set to: 0
 38317                           ;fat16.c: 886: };fat16.c: 889: root.firstCluster = first_cluster;
 38318  004EBA  C064  F081         	movff	fat_resize_file@first_cluster,fat_resize_file@root+26
 38319  004EBE  C065  F082         	movff	fat_resize_file@first_cluster+1,fat_resize_file@root+27
 38320  004EC2                     l2109:
 38321                           
 38322                           ; BSR set to: 0
 38323                           ;fat16.c: 890: };fat16.c: 893: root.fileSize = new_file_size;
 38324  004EC2  C04D  F083         	movff	fat_resize_file@new_file_size,fat_resize_file@root+28
 38325  004EC6  C04E  F084         	movff	fat_resize_file@new_file_size+1,fat_resize_file@root+29
 38326  004ECA  C04F  F085         	movff	fat_resize_file@new_file_size+2,fat_resize_file@root+30
 38327  004ECE  C050  F086         	movff	fat_resize_file@new_file_size+3,fat_resize_file@root+31
 38328                           
 38329                           ; BSR set to: 0
 38330                           ;fat16.c: 896: _write_root(file_number, &root);
 38331  004ED2  0E67               	movlw	low fat_resize_file@root
 38332  004ED4  6E29               	movwf	__write_root@data,c
 38333  004ED6  0E00               	movlw	high fat_resize_file@root
 38334  004ED8  6E2A               	movwf	__write_root@data+1,c
 38335  004EDA  5166               	movf	fat_resize_file@file_number& (0+255),w,b
 38336  004EDC  EC5C  F042         	call	__write_root
 38337                           
 38338                           ;fat16.c: 899: return 0x00;
 38339  004EE0  0E00               	movlw	0
 38340  004EE2  0012               	return	
 38341  004EE4                     __end_of_fat_resize_file:
 38342                           	opt stack 0
 38343                           tosu	equ	0xFFF
 38344                           tosh	equ	0xFFE
 38345                           tosl	equ	0xFFD
 38346                           pclath	equ	0xFFA
 38347                           tblptru	equ	0xFF8
 38348                           tblptrh	equ	0xFF7
 38349                           tblptrl	equ	0xFF6
 38350                           tablat	equ	0xFF5
 38351                           prodh	equ	0xFF4
 38352                           prodl	equ	0xFF3
 38353                           intcon	equ	0xFF2
 38354                           intcon2	equ	0xFF1
 38355                           intcon3	equ	0xFF0
 38356                           indf0	equ	0xFEF
 38357                           postinc0	equ	0xFEE
 38358                           fsr0h	equ	0xFEA
 38359                           fsr0l	equ	0xFE9
 38360                           wreg	equ	0xFE8
 38361                           indf1	equ	0xFE7
 38362                           postdec1	equ	0xFE5
 38363                           plusw1	equ	0xFE3
 38364                           fsr1h	equ	0xFE2
 38365                           fsr1l	equ	0xFE1
 38366                           indf2	equ	0xFDF
 38367                           postinc2	equ	0xFDE
 38368                           postdec2	equ	0xFDD
 38369                           plusw2	equ	0xFDB
 38370                           fsr2h	equ	0xFDA
 38371                           fsr2l	equ	0xFD9
 38372                           status	equ	0xFD8
 38373                           
 38374 ;; *************** function __write_root *****************
 38375 ;; Defined at:
 38376 ;;		line 473 in file "fat16.c"
 38377 ;; Parameters:    Size  Location     Type
 38378 ;;  file_number     1    wreg     unsigned char 
 38379 ;;  data            2   40[COMRAM] PTR struct .
 38380 ;;		 -> fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32), 
 38381 ;; Auto vars:     Size  Location     Type
 38382 ;;  file_number     1   46[COMRAM] unsigned char 
 38383 ;;  offset          2   44[COMRAM] unsigned int 
 38384 ;;  sector          2   42[COMRAM] unsigned int 
 38385 ;; Return value:  Size  Location     Type
 38386 ;;                  1    wreg      void 
 38387 ;; Registers used:
 38388 ;;		wreg, status,2, status,0, cstack
 38389 ;; Tracked objects:
 38390 ;;		On entry : 0/0
 38391 ;;		On exit  : 0/0
 38392 ;;		Unchanged: 0/0
 38393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38394 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38395 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38396 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38397 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38398 ;;Total ram usage:        7 bytes
 38399 ;; Hardware stack levels used:    1
 38400 ;; Hardware stack levels required when called:    5
 38401 ;; This function calls:
 38402 ;;		__offset_from_file_number
 38403 ;;		__sector_from_file_number
 38404 ;;		_flash_partial_write
 38405 ;; This function is called by:
 38406 ;;		_fat_create_file
 38407 ;;		_fat_rename_file
 38408 ;;		_fat_resize_file
 38409 ;; This function uses a non-reentrant model
 38410 ;;
 38411                           
 38412                           	psect	text196
 38413  0084B8                     __ptext196:
 38414                           	opt stack 0
 38415  0084B8                     __write_root:
 38416                           	opt stack 21
 38417                           
 38418                           ;incstack = 0
 38419                           ;__write_root@file_number stored from wreg
 38420  0084B8  6E2F               	movwf	__write_root@file_number,c
 38421                           
 38422                           ;fat16.c: 475: uint16_t sector;;fat16.c: 476: uint16_t offset;;fat16.c: 479: sector = _s
      +                          ector_from_file_number(file_number);
 38423  0084BA  502F               	movf	__write_root@file_number,w,c
 38424  0084BC  EC67  F045         	call	__sector_from_file_number
 38425  0084C0  C001  F02B         	movff	?__sector_from_file_number,__write_root@sector
 38426  0084C4  C002  F02C         	movff	?__sector_from_file_number+1,__write_root@sector+1
 38427                           
 38428                           ;fat16.c: 480: offset = _offset_from_file_number(file_number);
 38429  0084C8  502F               	movf	__write_root@file_number,w,c
 38430  0084CA  ECF3  F045         	call	__offset_from_file_number
 38431  0084CE  C001  F02D         	movff	?__offset_from_file_number,__write_root@offset
 38432  0084D2  C002  F02E         	movff	?__offset_from_file_number+1,__write_root@offset+1
 38433                           
 38434                           ;fat16.c: 483: flash_partial_write(sector, offset, 32, data);
 38435  0084D6  C02B  F020         	movff	__write_root@sector,flash_partial_write@page
 38436  0084DA  C02C  F021         	movff	__write_root@sector+1,flash_partial_write@page+1
 38437  0084DE  C02D  F022         	movff	__write_root@offset,flash_partial_write@start
 38438  0084E2  C02E  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 38439  0084E6  0E00               	movlw	0
 38440  0084E8  6E25               	movwf	flash_partial_write@length+1,c
 38441  0084EA  0E20               	movlw	32
 38442  0084EC  6E24               	movwf	flash_partial_write@length,c
 38443  0084EE  C029  F026         	movff	__write_root@data,flash_partial_write@data
 38444  0084F2  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 38445  0084F6  EC9C  F03B         	call	_flash_partial_write	;wreg free
 38446  0084FA  0012               	return		;funcret
 38447  0084FC                     __end_of__write_root:
 38448                           	opt stack 0
 38449                           tosu	equ	0xFFF
 38450                           tosh	equ	0xFFE
 38451                           tosl	equ	0xFFD
 38452                           pclath	equ	0xFFA
 38453                           tblptru	equ	0xFF8
 38454                           tblptrh	equ	0xFF7
 38455                           tblptrl	equ	0xFF6
 38456                           tablat	equ	0xFF5
 38457                           prodh	equ	0xFF4
 38458                           prodl	equ	0xFF3
 38459                           intcon	equ	0xFF2
 38460                           intcon2	equ	0xFF1
 38461                           intcon3	equ	0xFF0
 38462                           indf0	equ	0xFEF
 38463                           postinc0	equ	0xFEE
 38464                           fsr0h	equ	0xFEA
 38465                           fsr0l	equ	0xFE9
 38466                           wreg	equ	0xFE8
 38467                           indf1	equ	0xFE7
 38468                           postdec1	equ	0xFE5
 38469                           plusw1	equ	0xFE3
 38470                           fsr1h	equ	0xFE2
 38471                           fsr1l	equ	0xFE1
 38472                           indf2	equ	0xFDF
 38473                           postinc2	equ	0xFDE
 38474                           postdec2	equ	0xFDD
 38475                           plusw2	equ	0xFDB
 38476                           fsr2h	equ	0xFDA
 38477                           fsr2l	equ	0xFD9
 38478                           status	equ	0xFD8
 38479                           
 38480 ;; *************** function __make_cluster_chain *****************
 38481 ;; Defined at:
 38482 ;;		line 213 in file "fat16.c"
 38483 ;; Parameters:    Size  Location     Type
 38484 ;;  first_cluste    2   53[COMRAM] unsigned int 
 38485 ;;  number_of_cl    2   55[COMRAM] unsigned int 
 38486 ;; Auto vars:     Size  Location     Type
 38487 ;;  next_cluster    2   74[COMRAM] unsigned int 
 38488 ;;  offset          2   72[COMRAM] unsigned int 
 38489 ;;  sector_in_bu    2   70[COMRAM] unsigned int 
 38490 ;;  sector          2   68[COMRAM] unsigned int 
 38491 ;;  remaining_cl    2   66[COMRAM] unsigned int 
 38492 ;;  different_se    2   63[COMRAM] unsigned int 
 38493 ;;  minimum_sect    2   61[COMRAM] unsigned int 
 38494 ;;  next_offset     2   59[COMRAM] unsigned int 
 38495 ;;  data_changed    1   65[COMRAM] unsigned char 
 38496 ;; Return value:  Size  Location     Type
 38497 ;;                  2   53[COMRAM] unsigned int 
 38498 ;; Registers used:
 38499 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 38500 ;; Tracked objects:
 38501 ;;		On entry : 0/0
 38502 ;;		On exit  : 0/0
 38503 ;;		Unchanged: 0/0
 38504 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38505 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38506 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38507 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38508 ;;      Totals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38509 ;;Total ram usage:       23 bytes
 38510 ;; Hardware stack levels used:    1
 38511 ;; Hardware stack levels required when called:    6
 38512 ;; This function calls:
 38513 ;;		__fat_offset_from_cluster
 38514 ;;		__fat_sector_from_cluster
 38515 ;;		__get_available_cluster
 38516 ;;		__get_available_offset_from_buffer
 38517 ;;		__read_value_from_offset
 38518 ;;		__write_value_to_offset
 38519 ;;		_flash_sector_read
 38520 ;;		_flash_sector_write
 38521 ;; This function is called by:
 38522 ;;		_fat_create_file
 38523 ;;		_fat_delete_file
 38524 ;;		_fat_resize_file
 38525 ;; This function uses a non-reentrant model
 38526 ;;
 38527                           
 38528                           	psect	text197
 38529  0015D2                     __ptext197:
 38530                           	opt stack 0
 38531  0015D2                     __make_cluster_chain:
 38532                           	opt stack 20
 38533                           
 38534                           ;fat16.c: 215: uint16_t remaining_clusters;;fat16.c: 216: uint16_t minimum_sector;;fat16
      +                          .c: 217: uint16_t sector;;fat16.c: 218: uint16_t offset;;fat16.c: 219: uint16_t next_off
      +                          set;;fat16.c: 220: uint16_t sector_in_buffer;;fat16.c: 221: uint16_t next_cluster;;fat16
      +                          .c: 222: uint16_t different_sector_cluster;;fat16.c: 223: uint8_t data_changed;;fat16.c:
      +                           226: sector_in_buffer = 0;
 38535                           
 38536                           ;incstack = 0
 38537  0015D2  0E00               	movlw	0
 38538  0015D4  6E48               	movwf	__make_cluster_chain@sector_in_buffer+1,c
 38539  0015D6  0E00               	movlw	0
 38540  0015D8  6E47               	movwf	__make_cluster_chain@sector_in_buffer,c
 38541                           
 38542                           ;fat16.c: 227: remaining_clusters = number_of_clusters;
 38543  0015DA  C038  F043         	movff	__make_cluster_chain@number_of_clusters,__make_cluster_chain@remaining_clusters
 38544  0015DE  C039  F044         	movff	__make_cluster_chain@number_of_clusters+1,__make_cluster_chain@remaining_clusters
      +                          +1
 38545                           
 38546                           ;fat16.c: 228: minimum_sector = 2;
 38547  0015E2  0E00               	movlw	0
 38548  0015E4  6E3F               	movwf	__make_cluster_chain@minimum_sector+1,c
 38549  0015E6  0E02               	movlw	2
 38550  0015E8  6E3E               	movwf	__make_cluster_chain@minimum_sector,c
 38551                           
 38552                           ;fat16.c: 229: data_changed = 0;
 38553  0015EA  0E00               	movlw	0
 38554  0015EC  6E42               	movwf	__make_cluster_chain@data_changed,c
 38555                           
 38556                           ;fat16.c: 232: if((first_cluster==0) && (number_of_clusters>0))
 38557  0015EE  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38558  0015F0  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38559  0015F2  A4D8               	btfss	status,2,c
 38560  0015F4  D023               	goto	l1991
 38561  0015F6  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38562  0015F8  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38563  0015FA  B4D8               	btfsc	status,2,c
 38564  0015FC  D01F               	goto	l1991
 38565                           
 38566                           ;fat16.c: 233: {;fat16.c: 234: first_cluster = _get_available_cluster(minimum_sector, 0)
      +                          ;
 38567  0015FE  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38568  001602  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38569  001606  0E00               	movlw	0
 38570  001608  6E2F               	movwf	__get_available_cluster@skip_sector+1,c
 38571  00160A  0E00               	movlw	0
 38572  00160C  6E2E               	movwf	__get_available_cluster@skip_sector,c
 38573  00160E  EC6E  F030         	call	__get_available_cluster	;wreg free
 38574  001612  C02C  F036         	movff	?__get_available_cluster,__make_cluster_chain@first_cluster
 38575  001616  C02D  F037         	movff	?__get_available_cluster+1,__make_cluster_chain@first_cluster+1
 38576                           
 38577                           ;fat16.c: 236: minimum_sector = _fat_sector_from_cluster(first_cluster);
 38578  00161A  C036  F001         	movff	__make_cluster_chain@first_cluster,__fat_sector_from_cluster@cluster
 38579  00161E  C037  F002         	movff	__make_cluster_chain@first_cluster+1,__fat_sector_from_cluster@cluster+1
 38580  001622  EC2D  F047         	call	__fat_sector_from_cluster	;wreg free
 38581  001626  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38582  00162A  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38583                           
 38584                           ;fat16.c: 237: if(first_cluster == 0)
 38585  00162E  5036               	movf	__make_cluster_chain@first_cluster,w,c
 38586  001630  1037               	iorwf	__make_cluster_chain@first_cluster+1,w,c
 38587  001632  A4D8               	btfss	status,2,c
 38588  001634  D003               	goto	l1991
 38589                           
 38590                           ;fat16.c: 238: {;fat16.c: 239: return 0xFFFF;
 38591  001636  6836               	setf	?__make_cluster_chain,c
 38592  001638  6837               	setf	?__make_cluster_chain+1,c
 38593  00163A  0012               	return	
 38594  00163C                     l1991:
 38595                           
 38596                           ;fat16.c: 240: };fat16.c: 241: };fat16.c: 242: next_cluster = first_cluster;
 38597  00163C  C036  F04B         	movff	__make_cluster_chain@first_cluster,__make_cluster_chain@next_cluster
 38598  001640  C037  F04C         	movff	__make_cluster_chain@first_cluster+1,__make_cluster_chain@next_cluster+1
 38599                           
 38600                           ;fat16.c: 245: while ((remaining_clusters > 0) || ((next_cluster>=2) && (next_cluster<=8
      +                          153)))
 38601  001644  D0FA               	goto	l2008
 38602  001646                     
 38603                           ;fat16.c: 246: {;fat16.c: 259: sector = _fat_sector_from_cluster(next_cluster);
 38604  001646  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_sector_from_cluster@cluster
 38605  00164A  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_sector_from_cluster@cluster+1
 38606  00164E  EC2D  F047         	call	__fat_sector_from_cluster	;wreg free
 38607  001652  C001  F045         	movff	?__fat_sector_from_cluster,__make_cluster_chain@sector
 38608  001656  C002  F046         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@sector+1
 38609                           
 38610                           ;fat16.c: 260: offset = _fat_offset_from_cluster(next_cluster);
 38611  00165A  C04B  F001         	movff	__make_cluster_chain@next_cluster,__fat_offset_from_cluster@cluster
 38612  00165E  C04C  F002         	movff	__make_cluster_chain@next_cluster+1,__fat_offset_from_cluster@cluster+1
 38613  001662  EC39  F047         	call	__fat_offset_from_cluster	;wreg free
 38614  001666  C001  F049         	movff	?__fat_offset_from_cluster,__make_cluster_chain@offset
 38615  00166A  C002  F04A         	movff	?__fat_offset_from_cluster+1,__make_cluster_chain@offset+1
 38616                           
 38617                           ;fat16.c: 263: if(sector != sector_in_buffer)
 38618  00166E  5047               	movf	__make_cluster_chain@sector_in_buffer,w,c
 38619  001670  1845               	xorwf	__make_cluster_chain@sector,w,c
 38620  001672  E104               	bnz	u8040
 38621  001674  5048               	movf	__make_cluster_chain@sector_in_buffer+1,w,c
 38622  001676  1846               	xorwf	__make_cluster_chain@sector+1,w,c
 38623  001678  B4D8               	btfsc	status,2,c
 38624  00167A  D035               	goto	l1995
 38625  00167C                     u8040:
 38626                           
 38627                           ;fat16.c: 264: {;fat16.c: 266: if(data_changed)
 38628  00167C  5042               	movf	__make_cluster_chain@data_changed,w,c
 38629  00167E  B4D8               	btfsc	status,2,c
 38630  001680  D00A               	goto	l1996
 38631                           
 38632                           ;fat16.c: 267: {;fat16.c: 268: flash_sector_write(sector_in_buffer, buffer);
 38633  001682  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38634  001686  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38635  00168A  0EC0               	movlw	low _buffer
 38636  00168C  6E22               	movwf	flash_sector_write@data,c
 38637  00168E  0E03               	movlw	high _buffer
 38638  001690  6E23               	movwf	flash_sector_write@data+1,c
 38639  001692  ECEA  F03F         	call	_flash_sector_write	;wreg free
 38640  001696                     l1996:
 38641                           
 38642                           ;fat16.c: 269: };fat16.c: 272: different_sector_cluster = _get_available_cluster(minimum
      +                          _sector, sector);
 38643  001696  C03E  F02C         	movff	__make_cluster_chain@minimum_sector,__get_available_cluster@first_sector
 38644  00169A  C03F  F02D         	movff	__make_cluster_chain@minimum_sector+1,__get_available_cluster@first_sector+1
 38645  00169E  C045  F02E         	movff	__make_cluster_chain@sector,__get_available_cluster@skip_sector
 38646  0016A2  C046  F02F         	movff	__make_cluster_chain@sector+1,__get_available_cluster@skip_sector+1
 38647  0016A6  EC6E  F030         	call	__get_available_cluster	;wreg free
 38648  0016AA  C02C  F040         	movff	?__get_available_cluster,__make_cluster_chain@different_sector_cluster
 38649  0016AE  C02D  F041         	movff	?__get_available_cluster+1,__make_cluster_chain@different_sector_cluster+1
 38650                           
 38651                           ;fat16.c: 275: minimum_sector = _fat_sector_from_cluster(different_sector_cluster);
 38652  0016B2  C040  F001         	movff	__make_cluster_chain@different_sector_cluster,__fat_sector_from_cluster@cluster
 38653  0016B6  C041  F002         	movff	__make_cluster_chain@different_sector_cluster+1,__fat_sector_from_cluster@cluster
      +                          +1
 38654  0016BA  EC2D  F047         	call	__fat_sector_from_cluster	;wreg free
 38655  0016BE  C001  F03E         	movff	?__fat_sector_from_cluster,__make_cluster_chain@minimum_sector
 38656  0016C2  C002  F03F         	movff	?__fat_sector_from_cluster+1,__make_cluster_chain@minimum_sector+1
 38657                           
 38658                           ;fat16.c: 278: flash_sector_read(sector, buffer);
 38659  0016C6  C045  F028         	movff	__make_cluster_chain@sector,flash_sector_read@page
 38660  0016CA  C046  F029         	movff	__make_cluster_chain@sector+1,flash_sector_read@page+1
 38661  0016CE  0EC0               	movlw	low _buffer
 38662  0016D0  6E2A               	movwf	flash_sector_read@data,c
 38663  0016D2  0E03               	movlw	high _buffer
 38664  0016D4  6E2B               	movwf	flash_sector_read@data+1,c
 38665  0016D6  EC67  F044         	call	_flash_sector_read	;wreg free
 38666                           
 38667                           ;fat16.c: 279: sector_in_buffer = sector;
 38668  0016DA  C045  F047         	movff	__make_cluster_chain@sector,__make_cluster_chain@sector_in_buffer
 38669  0016DE  C046  F048         	movff	__make_cluster_chain@sector+1,__make_cluster_chain@sector_in_buffer+1
 38670                           
 38671                           ;fat16.c: 280: data_changed = 0;
 38672  0016E2  0E00               	movlw	0
 38673  0016E4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38674  0016E6                     l1995:
 38675                           
 38676                           ;fat16.c: 281: };fat16.c: 284: if(remaining_clusters > 1)
 38677  0016E6  5044               	movf	__make_cluster_chain@remaining_clusters+1,w,c
 38678  0016E8  E104               	bnz	u8060
 38679  0016EA  0E02               	movlw	2
 38680  0016EC  5C43               	subwf	__make_cluster_chain@remaining_clusters,w,c
 38681  0016EE  A0D8               	btfss	status,0,c
 38682  0016F0  D05C               	goto	l1997
 38683  0016F2                     u8060:
 38684                           
 38685                           ;fat16.c: 285: {;fat16.c: 287: next_cluster = _read_value_from_offset(offset, buffer);
 38686  0016F2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38687  0016F6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38688  0016FA  0EC0               	movlw	low _buffer
 38689  0016FC  6E03               	movwf	__read_value_from_offset@buffer,c
 38690  0016FE  0E03               	movlw	high _buffer
 38691  001700  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38692  001702  ECF5  F041         	call	__read_value_from_offset	;wreg free
 38693  001706  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38694  00170A  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38695                           
 38696                           ;fat16.c: 290: if((next_cluster < 2) || (next_cluster > 8153))
 38697  00170E  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38698  001710  E104               	bnz	u8070
 38699  001712  0E02               	movlw	2
 38700  001714  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38701  001716  A0D8               	btfss	status,0,c
 38702  001718  D006               	goto	u8080
 38703  00171A                     u8070:
 38704  00171A  0EDA               	movlw	218
 38705  00171C  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38706  00171E  0E1F               	movlw	31
 38707  001720  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38708  001722  A0D8               	btfss	status,0,c
 38709  001724  D068               	goto	l2007
 38710  001726                     u8080:
 38711                           
 38712                           ;fat16.c: 291: {;fat16.c: 293: next_offset = _get_available_offset_from_buffer(offset+2,
      +                           buffer);
 38713  001726  0E02               	movlw	2
 38714  001728  2449               	addwf	__make_cluster_chain@offset,w,c
 38715  00172A  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 38716  00172C  0E00               	movlw	0
 38717  00172E  204A               	addwfc	__make_cluster_chain@offset+1,w,c
 38718  001730  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 38719  001732  0EC0               	movlw	low _buffer
 38720  001734  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 38721  001736  0E03               	movlw	high _buffer
 38722  001738  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 38723  00173A  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 38724  00173E  C001  F03C         	movff	?__get_available_offset_from_buffer,__make_cluster_chain@next_offset
 38725  001742  C002  F03D         	movff	?__get_available_offset_from_buffer+1,__make_cluster_chain@next_offset+1
 38726                           
 38727                           ;fat16.c: 295: if(next_offset != 0xFFFF)
 38728  001746  283C               	incf	__make_cluster_chain@next_offset,w,c
 38729  001748  E103               	bnz	u8090
 38730  00174A  283D               	incf	__make_cluster_chain@next_offset+1,w,c
 38731  00174C  B4D8               	btfsc	status,2,c
 38732  00174E  D013               	goto	l2001
 38733  001750                     u8090:
 38734                           
 38735                           ;fat16.c: 296: {;fat16.c: 298: next_cluster = sector_in_buffer - 2;
 38736  001750  0EFE               	movlw	254
 38737  001752  2447               	addwf	__make_cluster_chain@sector_in_buffer,w,c
 38738  001754  6E4B               	movwf	__make_cluster_chain@next_cluster,c
 38739  001756  0EFF               	movlw	255
 38740  001758  2048               	addwfc	__make_cluster_chain@sector_in_buffer+1,w,c
 38741  00175A  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38742                           
 38743                           ;fat16.c: 299: next_cluster <<= 8;
 38744  00175C  504B               	movf	__make_cluster_chain@next_cluster,w,c
 38745  00175E  6E4C               	movwf	__make_cluster_chain@next_cluster+1,c
 38746  001760  6A4B               	clrf	__make_cluster_chain@next_cluster,c
 38747                           
 38748                           ;fat16.c: 300: next_cluster |= (next_offset>>1);
 38749  001762  90D8               	bcf	status,0,c
 38750  001764  303D               	rrcf	__make_cluster_chain@next_offset+1,w,c
 38751  001766  6E3B               	movwf	(??__make_cluster_chain+1)& (0+255),c
 38752  001768  303C               	rrcf	__make_cluster_chain@next_offset,w,c
 38753  00176A  6E3A               	movwf	??__make_cluster_chain& (0+255),c
 38754  00176C  503A               	movf	??__make_cluster_chain,w,c
 38755  00176E  124B               	iorwf	__make_cluster_chain@next_cluster,f,c
 38756  001770  503B               	movf	??__make_cluster_chain+1,w,c
 38757  001772  124C               	iorwf	__make_cluster_chain@next_cluster+1,f,c
 38758                           
 38759                           ;fat16.c: 301: }
 38760  001774  D00B               	goto	l2004
 38761  001776                     l2001:
 38762                           
 38763                           ;fat16.c: 302: else;fat16.c: 303: {;fat16.c: 304: if(different_sector_cluster == 0x0000)
 38764  001776  5040               	movf	__make_cluster_chain@different_sector_cluster,w,c
 38765  001778  1041               	iorwf	__make_cluster_chain@different_sector_cluster+1,w,c
 38766  00177A  A4D8               	btfss	status,2,c
 38767  00177C  D003               	goto	l2003
 38768                           
 38769                           ;fat16.c: 305: {;fat16.c: 307: return 0xFFFF;
 38770  00177E  6836               	setf	?__make_cluster_chain,c
 38771  001780  6837               	setf	?__make_cluster_chain+1,c
 38772  001782  0012               	return	
 38773  001784                     l2003:
 38774                           
 38775                           ;fat16.c: 309: else;fat16.c: 310: {;fat16.c: 312: next_cluster = different_sector_cluste
      +                          r;
 38776  001784  C040  F04B         	movff	__make_cluster_chain@different_sector_cluster,__make_cluster_chain@next_cluster
 38777  001788  C041  F04C         	movff	__make_cluster_chain@different_sector_cluster+1,__make_cluster_chain@next_cluster
      +                          +1
 38778  00178C                     l2004:
 38779                           
 38780                           ;fat16.c: 313: };fat16.c: 314: };fat16.c: 316: _write_value_to_offset(offset, buffer, ne
      +                          xt_cluster);
 38781  00178C  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38782  001790  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38783  001794  0EC0               	movlw	low _buffer
 38784  001796  6E03               	movwf	__write_value_to_offset@buffer,c
 38785  001798  0E03               	movlw	high _buffer
 38786  00179A  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38787  00179C  C04B  F005         	movff	__make_cluster_chain@next_cluster,__write_value_to_offset@value
 38788  0017A0  C04C  F006         	movff	__make_cluster_chain@next_cluster+1,__write_value_to_offset@value+1
 38789  0017A4  EC1B  F044         	call	__write_value_to_offset	;wreg free
 38790  0017A8  D024               	goto	L49
 38791  0017AA                     l1997:
 38792                           
 38793                           ;fat16.c: 326: else if(remaining_clusters == 1)
 38794  0017AA  0443               	decf	__make_cluster_chain@remaining_clusters,w,c
 38795  0017AC  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38796  0017AE  A4D8               	btfss	status,2,c
 38797  0017B0  D026               	goto	l2006
 38798                           
 38799                           ;fat16.c: 327: {;fat16.c: 329: next_cluster = _read_value_from_offset(offset, buffer);
 38800  0017B2  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38801  0017B6  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38802  0017BA  0EC0               	movlw	low _buffer
 38803  0017BC  6E03               	movwf	__read_value_from_offset@buffer,c
 38804  0017BE  0E03               	movlw	high _buffer
 38805  0017C0  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38806  0017C2  ECF5  F041         	call	__read_value_from_offset	;wreg free
 38807  0017C6  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38808  0017CA  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38809                           
 38810                           ;fat16.c: 331: if(next_cluster != 0xFFFF)
 38811  0017CE  284B               	incf	__make_cluster_chain@next_cluster,w,c
 38812  0017D0  E103               	bnz	u8120
 38813  0017D2  284C               	incf	__make_cluster_chain@next_cluster+1,w,c
 38814  0017D4  B4D8               	btfsc	status,2,c
 38815  0017D6  D00F               	goto	l2007
 38816  0017D8                     u8120:
 38817                           
 38818                           ;fat16.c: 332: {;fat16.c: 334: _write_value_to_offset(offset, buffer, 0xFFFF);
 38819  0017D8  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38820  0017DC  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38821  0017E0  0EC0               	movlw	low _buffer
 38822  0017E2  6E03               	movwf	__write_value_to_offset@buffer,c
 38823  0017E4  0E03               	movlw	high _buffer
 38824  0017E6  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38825  0017E8  0EFF               	movlw	255
 38826  0017EA  6E06               	movwf	__write_value_to_offset@value+1,c
 38827  0017EC  6805               	setf	__write_value_to_offset@value,c
 38828  0017EE  EC1B  F044         	call	__write_value_to_offset	;wreg free
 38829  0017F2                     L49:
 38830                           
 38831                           ;fat16.c: 336: data_changed = 1;
 38832  0017F2  0E01               	movlw	1
 38833  0017F4  6E42               	movwf	__make_cluster_chain@data_changed,c
 38834  0017F6                     l2007:
 38835                           
 38836                           ;fat16.c: 337: };fat16.c: 340: --remaining_clusters;
 38837  0017F6  0643               	decf	__make_cluster_chain@remaining_clusters,f,c
 38838  0017F8  A0D8               	btfss	status,0,c
 38839  0017FA  0644               	decf	__make_cluster_chain@remaining_clusters+1,f,c
 38840                           
 38841                           ;fat16.c: 341: }
 38842  0017FC  D01E               	goto	l2008
 38843  0017FE                     l2006:
 38844                           
 38845                           ;fat16.c: 344: else;fat16.c: 345: {;fat16.c: 347: next_cluster = _read_value_from_offset
      +                          (offset, buffer);
 38846  0017FE  C049  F001         	movff	__make_cluster_chain@offset,__read_value_from_offset@offset
 38847  001802  C04A  F002         	movff	__make_cluster_chain@offset+1,__read_value_from_offset@offset+1
 38848  001806  0EC0               	movlw	low _buffer
 38849  001808  6E03               	movwf	__read_value_from_offset@buffer,c
 38850  00180A  0E03               	movlw	high _buffer
 38851  00180C  6E04               	movwf	__read_value_from_offset@buffer+1,c
 38852  00180E  ECF5  F041         	call	__read_value_from_offset	;wreg free
 38853  001812  C001  F04B         	movff	?__read_value_from_offset,__make_cluster_chain@next_cluster
 38854  001816  C002  F04C         	movff	?__read_value_from_offset+1,__make_cluster_chain@next_cluster+1
 38855                           
 38856                           ;fat16.c: 350: _write_value_to_offset(offset, buffer, 0x0000);
 38857  00181A  C049  F001         	movff	__make_cluster_chain@offset,__write_value_to_offset@offset
 38858  00181E  C04A  F002         	movff	__make_cluster_chain@offset+1,__write_value_to_offset@offset+1
 38859  001822  0EC0               	movlw	low _buffer
 38860  001824  6E03               	movwf	__write_value_to_offset@buffer,c
 38861  001826  0E03               	movlw	high _buffer
 38862  001828  6E04               	movwf	__write_value_to_offset@buffer+1,c
 38863  00182A  0E00               	movlw	0
 38864  00182C  6E06               	movwf	__write_value_to_offset@value+1,c
 38865  00182E  0E00               	movlw	0
 38866  001830  6E05               	movwf	__write_value_to_offset@value,c
 38867  001832  EC1B  F044         	call	__write_value_to_offset	;wreg free
 38868                           
 38869                           ;fat16.c: 352: data_changed = 1;
 38870  001836  0E01               	movlw	1
 38871  001838  6E42               	movwf	__make_cluster_chain@data_changed,c
 38872  00183A                     l2008:
 38873  00183A  5043               	movf	__make_cluster_chain@remaining_clusters,w,c
 38874  00183C  1044               	iorwf	__make_cluster_chain@remaining_clusters+1,w,c
 38875  00183E  A4D8               	btfss	status,2,c
 38876  001840  D702               	goto	l1994
 38877  001842  504C               	movf	__make_cluster_chain@next_cluster+1,w,c
 38878  001844  E104               	bnz	u8140
 38879  001846  0E02               	movlw	2
 38880  001848  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38881  00184A  A0D8               	btfss	status,0,c
 38882  00184C  D006               	goto	u8150
 38883  00184E                     u8140:
 38884  00184E  0EDA               	movlw	218
 38885  001850  5C4B               	subwf	__make_cluster_chain@next_cluster,w,c
 38886  001852  0E1F               	movlw	31
 38887  001854  584C               	subwfb	__make_cluster_chain@next_cluster+1,w,c
 38888  001856  A0D8               	btfss	status,0,c
 38889  001858  D6F6               	goto	l1994
 38890  00185A                     u8150:
 38891                           
 38892                           ;fat16.c: 353: };fat16.c: 355: };fat16.c: 358: if(data_changed)
 38893  00185A  5042               	movf	__make_cluster_chain@data_changed,w,c
 38894  00185C  B4D8               	btfsc	status,2,c
 38895  00185E  D00A               	goto	l2012
 38896                           
 38897                           ;fat16.c: 359: {;fat16.c: 360: flash_sector_write(sector_in_buffer, buffer);
 38898  001860  C047  F020         	movff	__make_cluster_chain@sector_in_buffer,flash_sector_write@page
 38899  001864  C048  F021         	movff	__make_cluster_chain@sector_in_buffer+1,flash_sector_write@page+1
 38900  001868  0EC0               	movlw	low _buffer
 38901  00186A  6E22               	movwf	flash_sector_write@data,c
 38902  00186C  0E03               	movlw	high _buffer
 38903  00186E  6E23               	movwf	flash_sector_write@data+1,c
 38904  001870  ECEA  F03F         	call	_flash_sector_write	;wreg free
 38905  001874                     l2012:
 38906                           
 38907                           ;fat16.c: 361: };fat16.c: 364: if(number_of_clusters>0)
 38908  001874  5038               	movf	__make_cluster_chain@number_of_clusters,w,c
 38909  001876  1039               	iorwf	__make_cluster_chain@number_of_clusters+1,w,c
 38910  001878  B4D8               	btfsc	status,2,c
 38911  00187A  D005               	goto	l2013
 38912                           
 38913                           ;fat16.c: 365: {;fat16.c: 366: return first_cluster;
 38914  00187C  C036  F036         	movff	__make_cluster_chain@first_cluster,?__make_cluster_chain
 38915  001880  C037  F037         	movff	__make_cluster_chain@first_cluster+1,?__make_cluster_chain+1
 38916                           
 38917                           ;fat16.c: 367: }
 38918  001884  0012               	return	
 38919  001886                     l2013:
 38920                           
 38921                           ;fat16.c: 368: else;fat16.c: 369: {;fat16.c: 370: return 0x0000;
 38922  001886  0E00               	movlw	0
 38923  001888  6E37               	movwf	?__make_cluster_chain+1,c
 38924  00188A  0E00               	movlw	0
 38925  00188C  6E36               	movwf	?__make_cluster_chain,c
 38926  00188E  0012               	return	
 38927  001890                     __end_of__make_cluster_chain:
 38928                           	opt stack 0
 38929                           tosu	equ	0xFFF
 38930                           tosh	equ	0xFFE
 38931                           tosl	equ	0xFFD
 38932                           pclath	equ	0xFFA
 38933                           tblptru	equ	0xFF8
 38934                           tblptrh	equ	0xFF7
 38935                           tblptrl	equ	0xFF6
 38936                           tablat	equ	0xFF5
 38937                           prodh	equ	0xFF4
 38938                           prodl	equ	0xFF3
 38939                           intcon	equ	0xFF2
 38940                           intcon2	equ	0xFF1
 38941                           intcon3	equ	0xFF0
 38942                           indf0	equ	0xFEF
 38943                           postinc0	equ	0xFEE
 38944                           fsr0h	equ	0xFEA
 38945                           fsr0l	equ	0xFE9
 38946                           wreg	equ	0xFE8
 38947                           indf1	equ	0xFE7
 38948                           postdec1	equ	0xFE5
 38949                           plusw1	equ	0xFE3
 38950                           fsr1h	equ	0xFE2
 38951                           fsr1l	equ	0xFE1
 38952                           indf2	equ	0xFDF
 38953                           postinc2	equ	0xFDE
 38954                           postdec2	equ	0xFDD
 38955                           plusw2	equ	0xFDB
 38956                           fsr2h	equ	0xFDA
 38957                           fsr2l	equ	0xFD9
 38958                           status	equ	0xFD8
 38959                           
 38960 ;; *************** function _flash_sector_write *****************
 38961 ;; Defined at:
 38962 ;;		line 456 in file "flash.c"
 38963 ;; Parameters:    Size  Location     Type
 38964 ;;  page            2   31[COMRAM] unsigned int 
 38965 ;;  data            2   33[COMRAM] PTR unsigned char 
 38966 ;;		 -> buffer(512), msd_buffer(512), 
 38967 ;; Auto vars:     Size  Location     Type
 38968 ;;  match           1   35[COMRAM] enum E6906
 38969 ;; Return value:  Size  Location     Type
 38970 ;;                  1    wreg      void 
 38971 ;; Registers used:
 38972 ;;		wreg, status,2, status,0, cstack
 38973 ;; Tracked objects:
 38974 ;;		On entry : 0/0
 38975 ;;		On exit  : 0/0
 38976 ;;		Unchanged: 0/0
 38977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38978 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38979 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38980 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38981 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38982 ;;Total ram usage:        5 bytes
 38983 ;; Hardware stack levels used:    1
 38984 ;; Hardware stack levels required when called:    4
 38985 ;; This function calls:
 38986 ;;		__flash_compare_page_to_buffer
 38987 ;;		__flash_write_page_from_buffer
 38988 ;;		__flash_write_to_buffer
 38989 ;;		_spi_set_configuration
 38990 ;; This function is called by:
 38991 ;;		_ExternalFlash_SectorWrite
 38992 ;;		__make_cluster_chain
 38993 ;;		_fat_format
 38994 ;; This function uses a non-reentrant model
 38995 ;;
 38996                           
 38997                           	psect	text198
 38998  007FD4                     __ptext198:
 38999                           	opt stack 0
 39000  007FD4                     _flash_sector_write:
 39001                           	opt stack 23
 39002                           
 39003                           ;flash.c: 458: flashMatchResult_t match;;flash.c: 461: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 39004                           
 39005                           ;incstack = 0
 39006  007FD4  0E00               	movlw	0
 39007  007FD6  EC62  F023         	call	_spi_set_configuration
 39008                           
 39009                           ;flash.c: 464: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 39010  007FDA  0E00               	movlw	0
 39011  007FDC  6E15               	movwf	__flash_write_to_buffer@start+1,c
 39012  007FDE  0E00               	movlw	0
 39013  007FE0  6E14               	movwf	__flash_write_to_buffer@start,c
 39014  007FE2  C022  F016         	movff	flash_sector_write@data,__flash_write_to_buffer@data
 39015  007FE6  C023  F017         	movff	flash_sector_write@data+1,__flash_write_to_buffer@data+1
 39016  007FEA  0E02               	movlw	2
 39017  007FEC  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 39018  007FEE  0E00               	movlw	0
 39019  007FF0  6E18               	movwf	__flash_write_to_buffer@data_length,c
 39020  007FF2  0E00               	movlw	0
 39021  007FF4  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 39022  007FF6  EC61  F041         	call	__flash_write_to_buffer	;wreg free
 39023                           
 39024                           ;flash.c: 467: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 39025  007FFA  C020  F014         	movff	flash_sector_write@page,__flash_compare_page_to_buffer@page
 39026  007FFE  C021  F015         	movff	flash_sector_write@page+1,__flash_compare_page_to_buffer@page+1
 39027  008002  0E00               	movlw	0
 39028  008004  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 39029  008006  EC7A  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 39030  00800A  6E24               	movwf	flash_sector_write@match,c
 39031                           
 39032                           ;flash.c: 470: if(match==DATA_DOES_NOT_MATCH)
 39033  00800C  0424               	decf	flash_sector_write@match,w,c
 39034  00800E  A4D8               	btfss	status,2,c
 39035  008010  D008               	goto	l1845
 39036                           
 39037                           ;flash.c: 471: {;flash.c: 472: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 39038  008012  C020  F014         	movff	flash_sector_write@page,__flash_write_page_from_buffer@page
 39039  008016  C021  F015         	movff	flash_sector_write@page+1,__flash_write_page_from_buffer@page+1
 39040  00801A  0E00               	movlw	0
 39041  00801C  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 39042  00801E  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 39043  008022                     l1845:
 39044                           
 39045                           ;flash.c: 473: };flash.c: 476: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 39046  008022  0E01               	movlw	1
 39047  008024  EC62  F023         	call	_spi_set_configuration
 39048  008028  0012               	return		;funcret
 39049  00802A                     __end_of_flash_sector_write:
 39050                           	opt stack 0
 39051                           tosu	equ	0xFFF
 39052                           tosh	equ	0xFFE
 39053                           tosl	equ	0xFFD
 39054                           pclath	equ	0xFFA
 39055                           tblptru	equ	0xFF8
 39056                           tblptrh	equ	0xFF7
 39057                           tblptrl	equ	0xFF6
 39058                           tablat	equ	0xFF5
 39059                           prodh	equ	0xFF4
 39060                           prodl	equ	0xFF3
 39061                           intcon	equ	0xFF2
 39062                           intcon2	equ	0xFF1
 39063                           intcon3	equ	0xFF0
 39064                           indf0	equ	0xFEF
 39065                           postinc0	equ	0xFEE
 39066                           fsr0h	equ	0xFEA
 39067                           fsr0l	equ	0xFE9
 39068                           wreg	equ	0xFE8
 39069                           indf1	equ	0xFE7
 39070                           postdec1	equ	0xFE5
 39071                           plusw1	equ	0xFE3
 39072                           fsr1h	equ	0xFE2
 39073                           fsr1l	equ	0xFE1
 39074                           indf2	equ	0xFDF
 39075                           postinc2	equ	0xFDE
 39076                           postdec2	equ	0xFDD
 39077                           plusw2	equ	0xFDB
 39078                           fsr2h	equ	0xFDA
 39079                           fsr2l	equ	0xFD9
 39080                           status	equ	0xFD8
 39081                           
 39082 ;; *************** function __write_value_to_offset *****************
 39083 ;; Defined at:
 39084 ;;		line 123 in file "fat16.c"
 39085 ;; Parameters:    Size  Location     Type
 39086 ;;  offset          2    0[COMRAM] unsigned int 
 39087 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 39088 ;;		 -> buffer(512), 
 39089 ;;  value           2    4[COMRAM] unsigned int 
 39090 ;; Auto vars:     Size  Location     Type
 39091 ;;		None
 39092 ;; Return value:  Size  Location     Type
 39093 ;;                  1    wreg      void 
 39094 ;; Registers used:
 39095 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39096 ;; Tracked objects:
 39097 ;;		On entry : 0/0
 39098 ;;		On exit  : 0/0
 39099 ;;		Unchanged: 0/0
 39100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39101 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39102 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39103 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39104 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39105 ;;Total ram usage:        8 bytes
 39106 ;; Hardware stack levels used:    1
 39107 ;; This function calls:
 39108 ;;		Nothing
 39109 ;; This function is called by:
 39110 ;;		__make_cluster_chain
 39111 ;; This function uses a non-reentrant model
 39112 ;;
 39113                           
 39114                           	psect	text199
 39115  008836                     __ptext199:
 39116                           	opt stack 0
 39117  008836                     __write_value_to_offset:
 39118                           	opt stack 25
 39119                           
 39120                           ;fat16.c: 125: buffer[offset] = (uint8_t) (value & 0xFF);
 39121                           
 39122                           ;incstack = 0
 39123  008836  5001               	movf	__write_value_to_offset@offset,w,c
 39124  008838  2403               	addwf	__write_value_to_offset@buffer,w,c
 39125  00883A  6ED9               	movwf	fsr2l,c
 39126  00883C  5002               	movf	__write_value_to_offset@offset+1,w,c
 39127  00883E  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 39128  008840  6EDA               	movwf	fsr2h,c
 39129  008842  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 39130                           
 39131                           ;fat16.c: 126: value >>= 8;
 39132  008846  5006               	movf	__write_value_to_offset@value+1,w,c
 39133  008848  6E05               	movwf	__write_value_to_offset@value,c
 39134  00884A  6A06               	clrf	__write_value_to_offset@value+1,c
 39135                           
 39136                           ;fat16.c: 127: buffer[offset+1] = (uint8_t) (value & 0xFF);
 39137  00884C  0E01               	movlw	1
 39138  00884E  2401               	addwf	__write_value_to_offset@offset,w,c
 39139  008850  6E07               	movwf	??__write_value_to_offset& (0+255),c
 39140  008852  0E00               	movlw	0
 39141  008854  2002               	addwfc	__write_value_to_offset@offset+1,w,c
 39142  008856  6E08               	movwf	(??__write_value_to_offset+1)& (0+255),c
 39143  008858  5007               	movf	??__write_value_to_offset,w,c
 39144  00885A  2403               	addwf	__write_value_to_offset@buffer,w,c
 39145  00885C  6ED9               	movwf	fsr2l,c
 39146  00885E  5008               	movf	??__write_value_to_offset+1,w,c
 39147  008860  2004               	addwfc	__write_value_to_offset@buffer+1,w,c
 39148  008862  6EDA               	movwf	fsr2h,c
 39149  008864  C005  FFDF         	movff	__write_value_to_offset@value,indf2
 39150  008868  0012               	return		;funcret
 39151  00886A                     __end_of__write_value_to_offset:
 39152                           	opt stack 0
 39153                           tosu	equ	0xFFF
 39154                           tosh	equ	0xFFE
 39155                           tosl	equ	0xFFD
 39156                           pclath	equ	0xFFA
 39157                           tblptru	equ	0xFF8
 39158                           tblptrh	equ	0xFF7
 39159                           tblptrl	equ	0xFF6
 39160                           tablat	equ	0xFF5
 39161                           prodh	equ	0xFF4
 39162                           prodl	equ	0xFF3
 39163                           intcon	equ	0xFF2
 39164                           intcon2	equ	0xFF1
 39165                           intcon3	equ	0xFF0
 39166                           indf0	equ	0xFEF
 39167                           postinc0	equ	0xFEE
 39168                           fsr0h	equ	0xFEA
 39169                           fsr0l	equ	0xFE9
 39170                           wreg	equ	0xFE8
 39171                           indf1	equ	0xFE7
 39172                           postdec1	equ	0xFE5
 39173                           plusw1	equ	0xFE3
 39174                           fsr1h	equ	0xFE2
 39175                           fsr1l	equ	0xFE1
 39176                           indf2	equ	0xFDF
 39177                           postinc2	equ	0xFDE
 39178                           postdec2	equ	0xFDD
 39179                           plusw2	equ	0xFDB
 39180                           fsr2h	equ	0xFDA
 39181                           fsr2l	equ	0xFD9
 39182                           status	equ	0xFD8
 39183                           
 39184 ;; *************** function __get_available_cluster *****************
 39185 ;; Defined at:
 39186 ;;		line 130 in file "fat16.c"
 39187 ;; Parameters:    Size  Location     Type
 39188 ;;  first_sector    2   43[COMRAM] unsigned int 
 39189 ;;  skip_sector     2   45[COMRAM] unsigned int 
 39190 ;; Auto vars:     Size  Location     Type
 39191 ;;  sector          2   51[COMRAM] unsigned int 
 39192 ;;  offset          2   49[COMRAM] unsigned int 
 39193 ;;  cluster         2   47[COMRAM] unsigned int 
 39194 ;; Return value:  Size  Location     Type
 39195 ;;                  2   43[COMRAM] unsigned int 
 39196 ;; Registers used:
 39197 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39198 ;; Tracked objects:
 39199 ;;		On entry : 0/0
 39200 ;;		On exit  : 0/0
 39201 ;;		Unchanged: 0/0
 39202 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39203 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39204 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39205 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39206 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39207 ;;Total ram usage:       10 bytes
 39208 ;; Hardware stack levels used:    1
 39209 ;; Hardware stack levels required when called:    5
 39210 ;; This function calls:
 39211 ;;		__cluster_from_sector_and_offset
 39212 ;;		__get_available_offset_from_buffer
 39213 ;;		_flash_sector_read
 39214 ;; This function is called by:
 39215 ;;		__make_cluster_chain
 39216 ;; This function uses a non-reentrant model
 39217 ;;
 39218                           
 39219                           	psect	text200
 39220  0060DC                     __ptext200:
 39221                           	opt stack 0
 39222  0060DC                     __get_available_cluster:
 39223                           	opt stack 20
 39224                           
 39225                           ;fat16.c: 132: uint16_t cluster;;fat16.c: 133: uint16_t sector;;fat16.c: 134: uint16_t o
      +                          ffset;;fat16.c: 137: for (sector=first_sector; sector<=33; ++sector)
 39226                           
 39227                           ;incstack = 0
 39228  0060DC  C02C  F034         	movff	__get_available_cluster@first_sector,__get_available_cluster@sector
 39229  0060E0  C02D  F035         	movff	__get_available_cluster@first_sector+1,__get_available_cluster@sector+1
 39230  0060E4                     l10891:
 39231  0060E4  5035               	movf	__get_available_cluster@sector+1,w,c
 39232  0060E6  E157               	bnz	l10923
 39233  0060E8  0E22               	movlw	34
 39234  0060EA  5C34               	subwf	__get_available_cluster@sector,w,c
 39235  0060EC  B0D8               	btfsc	status,0,c
 39236  0060EE  D053               	goto	u7490
 39237                           
 39238                           ;fat16.c: 138: {;fat16.c: 140: if(sector == skip_sector)
 39239  0060F0  502E               	movf	__get_available_cluster@skip_sector,w,c
 39240  0060F2  1834               	xorwf	__get_available_cluster@sector,w,c
 39241  0060F4  E104               	bnz	l10899
 39242  0060F6  502F               	movf	__get_available_cluster@skip_sector+1,w,c
 39243  0060F8  1835               	xorwf	__get_available_cluster@sector+1,w,c
 39244  0060FA  B4D8               	btfsc	status,2,c
 39245  0060FC  D049               	goto	l1979
 39246  0060FE                     l10899:
 39247                           
 39248                           ;fat16.c: 143: };fat16.c: 146: flash_sector_read(sector, buffer);
 39249  0060FE  C034  F028         	movff	__get_available_cluster@sector,flash_sector_read@page
 39250  006102  C035  F029         	movff	__get_available_cluster@sector+1,flash_sector_read@page+1
 39251  006106  0EC0               	movlw	low _buffer
 39252  006108  6E2A               	movwf	flash_sector_read@data,c
 39253  00610A  0E03               	movlw	high _buffer
 39254  00610C  6E2B               	movwf	flash_sector_read@data+1,c
 39255  00610E  EC67  F044         	call	_flash_sector_read	;wreg free
 39256                           
 39257                           ;fat16.c: 149: if(sector == 2)
 39258  006112  0E02               	movlw	2
 39259  006114  1834               	xorwf	__get_available_cluster@sector,w,c
 39260  006116  1035               	iorwf	__get_available_cluster@sector+1,w,c
 39261  006118  A4D8               	btfss	status,2,c
 39262  00611A  D00B               	goto	l1974
 39263                           
 39264                           ;fat16.c: 150: {;fat16.c: 152: offset = _get_available_offset_from_buffer(4, buffer);
 39265  00611C  0E00               	movlw	0
 39266  00611E  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39267  006120  0E04               	movlw	4
 39268  006122  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39269  006124  0EC0               	movlw	low _buffer
 39270  006126  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39271  006128  0E03               	movlw	high _buffer
 39272  00612A  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39273  00612C  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39274  006130  D00A               	goto	L45
 39275  006132                     l1974:
 39276                           
 39277                           ;fat16.c: 154: else;fat16.c: 155: {;fat16.c: 156: offset = _get_available_offset_from_bu
      +                          ffer(0, buffer);
 39278  006132  0E00               	movlw	0
 39279  006134  6E02               	movwf	__get_available_offset_from_buffer@minimum_offset+1,c
 39280  006136  0E00               	movlw	0
 39281  006138  6E01               	movwf	__get_available_offset_from_buffer@minimum_offset,c
 39282  00613A  0EC0               	movlw	low _buffer
 39283  00613C  6E03               	movwf	__get_available_offset_from_buffer@buffer,c
 39284  00613E  0E03               	movlw	high _buffer
 39285  006140  6E04               	movwf	__get_available_offset_from_buffer@buffer+1,c
 39286  006142  EC61  F03E         	call	__get_available_offset_from_buffer	;wreg free
 39287  006146                     L45:
 39288  006146  C001  F032         	movff	?__get_available_offset_from_buffer,__get_available_cluster@offset
 39289  00614A  C002  F033         	movff	?__get_available_offset_from_buffer+1,__get_available_cluster@offset+1
 39290                           
 39291                           ;fat16.c: 157: };fat16.c: 160: if(offset != 0xFFFF)
 39292  00614E  2832               	incf	__get_available_cluster@offset,w,c
 39293  006150  E103               	bnz	u7470
 39294  006152  2833               	incf	__get_available_cluster@offset+1,w,c
 39295  006154  B4D8               	btfsc	status,2,c
 39296  006156  D01C               	goto	l1979
 39297  006158                     u7470:
 39298                           
 39299                           ;fat16.c: 161: {;fat16.c: 163: cluster = _cluster_from_sector_and_offset(sector, offset)
      +                          ;
 39300  006158  C034  F001         	movff	__get_available_cluster@sector,__cluster_from_sector_and_offset@sector
 39301  00615C  C035  F002         	movff	__get_available_cluster@sector+1,__cluster_from_sector_and_offset@sector+1
 39302  006160  C032  F003         	movff	__get_available_cluster@offset,__cluster_from_sector_and_offset@offset
 39303  006164  C033  F004         	movff	__get_available_cluster@offset+1,__cluster_from_sector_and_offset@offset+1
 39304  006168  ECE0  F045         	call	__cluster_from_sector_and_offset	;wreg free
 39305  00616C  C001  F030         	movff	?__cluster_from_sector_and_offset,__get_available_cluster@cluster
 39306  006170  C002  F031         	movff	?__cluster_from_sector_and_offset+1,__get_available_cluster@cluster+1
 39307                           
 39308                           ;fat16.c: 165: if(cluster > 8191)
 39309  006174  0E20               	movlw	32
 39310  006176  5C31               	subwf	__get_available_cluster@cluster+1,w,c
 39311  006178  A0D8               	btfss	status,0,c
 39312  00617A  D005               	goto	l1977
 39313                           
 39314                           ;fat16.c: 166: {;fat16.c: 168: return 0x0000;
 39315  00617C  0E00               	movlw	0
 39316  00617E  6E2D               	movwf	?__get_available_cluster+1,c
 39317  006180  0E00               	movlw	0
 39318  006182  6E2C               	movwf	?__get_available_cluster,c
 39319  006184  0012               	return	
 39320  006186                     l1977:
 39321                           
 39322                           ;fat16.c: 170: else;fat16.c: 171: {;fat16.c: 173: return cluster;
 39323  006186  C030  F02C         	movff	__get_available_cluster@cluster,?__get_available_cluster
 39324  00618A  C031  F02D         	movff	__get_available_cluster@cluster+1,?__get_available_cluster+1
 39325  00618E  0012               	return	
 39326  006190                     l1979:
 39327  006190  4A34               	infsnz	__get_available_cluster@sector,f,c
 39328  006192  2A35               	incf	__get_available_cluster@sector+1,f,c
 39329  006194  D7A7               	goto	l10891
 39330  006196                     u7490:
 39331  006196                     l10923:
 39332                           
 39333                           ;fat16.c: 174: };fat16.c: 175: };fat16.c: 176: };fat16.c: 179: return 0x0000;
 39334  006196  0E00               	movlw	0
 39335  006198  6E2D               	movwf	?__get_available_cluster+1,c
 39336  00619A  0E00               	movlw	0
 39337  00619C  6E2C               	movwf	?__get_available_cluster,c
 39338  00619E  0012               	return	
 39339  0061A0                     __end_of__get_available_cluster:
 39340                           	opt stack 0
 39341                           tosu	equ	0xFFF
 39342                           tosh	equ	0xFFE
 39343                           tosl	equ	0xFFD
 39344                           pclath	equ	0xFFA
 39345                           tblptru	equ	0xFF8
 39346                           tblptrh	equ	0xFF7
 39347                           tblptrl	equ	0xFF6
 39348                           tablat	equ	0xFF5
 39349                           prodh	equ	0xFF4
 39350                           prodl	equ	0xFF3
 39351                           intcon	equ	0xFF2
 39352                           intcon2	equ	0xFF1
 39353                           intcon3	equ	0xFF0
 39354                           indf0	equ	0xFEF
 39355                           postinc0	equ	0xFEE
 39356                           fsr0h	equ	0xFEA
 39357                           fsr0l	equ	0xFE9
 39358                           wreg	equ	0xFE8
 39359                           indf1	equ	0xFE7
 39360                           postdec1	equ	0xFE5
 39361                           plusw1	equ	0xFE3
 39362                           fsr1h	equ	0xFE2
 39363                           fsr1l	equ	0xFE1
 39364                           indf2	equ	0xFDF
 39365                           postinc2	equ	0xFDE
 39366                           postdec2	equ	0xFDD
 39367                           plusw2	equ	0xFDB
 39368                           fsr2h	equ	0xFDA
 39369                           fsr2l	equ	0xFD9
 39370                           status	equ	0xFD8
 39371                           
 39372 ;; *************** function __get_available_offset_from_buffer *****************
 39373 ;; Defined at:
 39374 ;;		line 98 in file "fat16.c"
 39375 ;; Parameters:    Size  Location     Type
 39376 ;;  minimum_offs    2    0[COMRAM] unsigned int 
 39377 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 39378 ;;		 -> buffer(512), 
 39379 ;; Auto vars:     Size  Location     Type
 39380 ;;  offset          2    6[COMRAM] unsigned int 
 39381 ;; Return value:  Size  Location     Type
 39382 ;;                  2    0[COMRAM] unsigned int 
 39383 ;; Registers used:
 39384 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 39385 ;; Tracked objects:
 39386 ;;		On entry : 0/0
 39387 ;;		On exit  : 0/0
 39388 ;;		Unchanged: 0/0
 39389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39390 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39391 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39392 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39393 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39394 ;;Total ram usage:        8 bytes
 39395 ;; Hardware stack levels used:    1
 39396 ;; This function calls:
 39397 ;;		Nothing
 39398 ;; This function is called by:
 39399 ;;		__get_available_cluster
 39400 ;;		__make_cluster_chain
 39401 ;; This function uses a non-reentrant model
 39402 ;;
 39403                           
 39404                           	psect	text201
 39405  007CC2                     __ptext201:
 39406                           	opt stack 0
 39407  007CC2                     __get_available_offset_from_buffer:
 39408                           	opt stack 25
 39409                           
 39410                           ;fat16.c: 100: uint16_t offset;;fat16.c: 102: for(offset = minimum_offset; offset<512; o
      +                          ffset += 2)
 39411                           
 39412                           ;incstack = 0
 39413  007CC2  C001  F007         	movff	__get_available_offset_from_buffer@minimum_offset,__get_available_offset_from_buf
      +                          fer@offset
 39414  007CC6  C002  F008         	movff	__get_available_offset_from_buffer@minimum_offset+1,__get_available_offset_from_b
      +                          uffer@offset+1
 39415  007CCA  D021               	goto	L46
 39416  007CCC                     
 39417                           ;fat16.c: 103: {;fat16.c: 104: if((buffer[offset] == 0x00) && (buffer[offset + 1] == 0x0
      +                          0))
 39418  007CCC  5007               	movf	__get_available_offset_from_buffer@offset,w,c
 39419  007CCE  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39420  007CD0  6ED9               	movwf	fsr2l,c
 39421  007CD2  5008               	movf	__get_available_offset_from_buffer@offset+1,w,c
 39422  007CD4  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39423  007CD6  6EDA               	movwf	fsr2h,c
 39424  007CD8  50DF               	movf	indf2,w,c
 39425  007CDA  A4D8               	btfss	status,2,c
 39426  007CDC  D014               	goto	l1960
 39427  007CDE  0E01               	movlw	1
 39428  007CE0  2407               	addwf	__get_available_offset_from_buffer@offset,w,c
 39429  007CE2  6E05               	movwf	??__get_available_offset_from_buffer& (0+255),c
 39430  007CE4  0E00               	movlw	0
 39431  007CE6  2008               	addwfc	__get_available_offset_from_buffer@offset+1,w,c
 39432  007CE8  6E06               	movwf	(??__get_available_offset_from_buffer+1)& (0+255),c
 39433  007CEA  5005               	movf	??__get_available_offset_from_buffer,w,c
 39434  007CEC  2403               	addwf	__get_available_offset_from_buffer@buffer,w,c
 39435  007CEE  6ED9               	movwf	fsr2l,c
 39436  007CF0  5006               	movf	??__get_available_offset_from_buffer+1,w,c
 39437  007CF2  2004               	addwfc	__get_available_offset_from_buffer@buffer+1,w,c
 39438  007CF4  6EDA               	movwf	fsr2h,c
 39439  007CF6  50DF               	movf	indf2,w,c
 39440  007CF8  A4D8               	btfss	status,2,c
 39441  007CFA  D005               	goto	l1960
 39442                           
 39443                           ;fat16.c: 105: {;fat16.c: 106: return offset;
 39444  007CFC  C007  F001         	movff	__get_available_offset_from_buffer@offset,?__get_available_offset_from_buffer
 39445  007D00  C008  F002         	movff	__get_available_offset_from_buffer@offset+1,?__get_available_offset_from_buffer+1
 39446  007D04  0012               	return	
 39447  007D06                     l1960:
 39448  007D06  0E02               	movlw	2
 39449  007D08  2607               	addwf	__get_available_offset_from_buffer@offset,f,c
 39450  007D0A  0E00               	movlw	0
 39451  007D0C  2208               	addwfc	__get_available_offset_from_buffer@offset+1,f,c
 39452  007D0E                     L46:
 39453  007D0E  0E02               	movlw	2
 39454  007D10  5C08               	subwf	__get_available_offset_from_buffer@offset+1,w,c
 39455  007D12  A0D8               	btfss	status,0,c
 39456  007D14  D7DB               	goto	l1958
 39457                           
 39458                           ;fat16.c: 107: };fat16.c: 108: };fat16.c: 111: return 0xFFFF;
 39459  007D16  6801               	setf	?__get_available_offset_from_buffer,c
 39460  007D18  6802               	setf	?__get_available_offset_from_buffer+1,c
 39461  007D1A  0012               	return		;funcret
 39462  007D1C                     __end_of__get_available_offset_from_buffer:
 39463                           	opt stack 0
 39464                           tosu	equ	0xFFF
 39465                           tosh	equ	0xFFE
 39466                           tosl	equ	0xFFD
 39467                           pclath	equ	0xFFA
 39468                           tblptru	equ	0xFF8
 39469                           tblptrh	equ	0xFF7
 39470                           tblptrl	equ	0xFF6
 39471                           tablat	equ	0xFF5
 39472                           prodh	equ	0xFF4
 39473                           prodl	equ	0xFF3
 39474                           intcon	equ	0xFF2
 39475                           intcon2	equ	0xFF1
 39476                           intcon3	equ	0xFF0
 39477                           indf0	equ	0xFEF
 39478                           postinc0	equ	0xFEE
 39479                           fsr0h	equ	0xFEA
 39480                           fsr0l	equ	0xFE9
 39481                           wreg	equ	0xFE8
 39482                           indf1	equ	0xFE7
 39483                           postdec1	equ	0xFE5
 39484                           plusw1	equ	0xFE3
 39485                           fsr1h	equ	0xFE2
 39486                           fsr1l	equ	0xFE1
 39487                           indf2	equ	0xFDF
 39488                           postinc2	equ	0xFDE
 39489                           postdec2	equ	0xFDD
 39490                           plusw2	equ	0xFDB
 39491                           fsr2h	equ	0xFDA
 39492                           fsr2l	equ	0xFD9
 39493                           status	equ	0xFD8
 39494                           
 39495 ;; *************** function __cluster_from_sector_and_offset *****************
 39496 ;; Defined at:
 39497 ;;		line 89 in file "fat16.c"
 39498 ;; Parameters:    Size  Location     Type
 39499 ;;  sector          2    0[COMRAM] unsigned int 
 39500 ;;  offset          2    2[COMRAM] unsigned int 
 39501 ;; Auto vars:     Size  Location     Type
 39502 ;;		None
 39503 ;; Return value:  Size  Location     Type
 39504 ;;                  2    0[COMRAM] unsigned int 
 39505 ;; Registers used:
 39506 ;;		wreg, status,2, status,0
 39507 ;; Tracked objects:
 39508 ;;		On entry : 0/0
 39509 ;;		On exit  : 0/0
 39510 ;;		Unchanged: 0/0
 39511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39512 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39515 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39516 ;;Total ram usage:        4 bytes
 39517 ;; Hardware stack levels used:    1
 39518 ;; This function calls:
 39519 ;;		Nothing
 39520 ;; This function is called by:
 39521 ;;		__get_available_cluster
 39522 ;; This function uses a non-reentrant model
 39523 ;;
 39524                           
 39525                           	psect	text202
 39526  008BC0                     __ptext202:
 39527                           	opt stack 0
 39528  008BC0                     __cluster_from_sector_and_offset:
 39529                           	opt stack 24
 39530                           
 39531                           ;fat16.c: 91: offset >>= 1;
 39532                           
 39533                           ;incstack = 0
 39534  008BC0  90D8               	bcf	status,0,c
 39535  008BC2  3204               	rrcf	__cluster_from_sector_and_offset@offset+1,f,c
 39536  008BC4  3203               	rrcf	__cluster_from_sector_and_offset@offset,f,c
 39537                           
 39538                           ;fat16.c: 92: sector -= 2;
 39539  008BC6  0E02               	movlw	2
 39540  008BC8  5E01               	subwf	__cluster_from_sector_and_offset@sector,f,c
 39541  008BCA  0E00               	movlw	0
 39542  008BCC  5A02               	subwfb	__cluster_from_sector_and_offset@sector+1,f,c
 39543                           
 39544                           ;fat16.c: 93: sector <<= 8;
 39545  008BCE  5001               	movf	__cluster_from_sector_and_offset@sector,w,c
 39546  008BD0  6E02               	movwf	__cluster_from_sector_and_offset@sector+1,c
 39547  008BD2  6A01               	clrf	__cluster_from_sector_and_offset@sector,c
 39548                           
 39549                           ;fat16.c: 94: sector |= offset;
 39550  008BD4  5003               	movf	__cluster_from_sector_and_offset@offset,w,c
 39551  008BD6  1201               	iorwf	__cluster_from_sector_and_offset@sector,f,c
 39552  008BD8  5004               	movf	__cluster_from_sector_and_offset@offset+1,w,c
 39553  008BDA  1202               	iorwf	__cluster_from_sector_and_offset@sector+1,f,c
 39554                           
 39555                           ;fat16.c: 95: return sector;
 39556  008BDC  C001  F001         	movff	__cluster_from_sector_and_offset@sector,?__cluster_from_sector_and_offset
 39557  008BE0  C002  F002         	movff	__cluster_from_sector_and_offset@sector+1,?__cluster_from_sector_and_offset+1
 39558  008BE4  0012               	return	
 39559  008BE6                     __end_of__cluster_from_sector_and_offset:
 39560                           	opt stack 0
 39561                           tosu	equ	0xFFF
 39562                           tosh	equ	0xFFE
 39563                           tosl	equ	0xFFD
 39564                           pclath	equ	0xFFA
 39565                           tblptru	equ	0xFF8
 39566                           tblptrh	equ	0xFF7
 39567                           tblptrl	equ	0xFF6
 39568                           tablat	equ	0xFF5
 39569                           prodh	equ	0xFF4
 39570                           prodl	equ	0xFF3
 39571                           intcon	equ	0xFF2
 39572                           intcon2	equ	0xFF1
 39573                           intcon3	equ	0xFF0
 39574                           indf0	equ	0xFEF
 39575                           postinc0	equ	0xFEE
 39576                           fsr0h	equ	0xFEA
 39577                           fsr0l	equ	0xFE9
 39578                           wreg	equ	0xFE8
 39579                           indf1	equ	0xFE7
 39580                           postdec1	equ	0xFE5
 39581                           plusw1	equ	0xFE3
 39582                           fsr1h	equ	0xFE2
 39583                           fsr1l	equ	0xFE1
 39584                           indf2	equ	0xFDF
 39585                           postinc2	equ	0xFDE
 39586                           postdec2	equ	0xFDD
 39587                           plusw2	equ	0xFDB
 39588                           fsr2h	equ	0xFDA
 39589                           fsr2l	equ	0xFD9
 39590                           status	equ	0xFD8
 39591                           
 39592 ;; *************** function _fat_modify_file *****************
 39593 ;; Defined at:
 39594 ;;		line 902 in file "fat16.c"
 39595 ;; Parameters:    Size  Location     Type
 39596 ;;  file_number     1    wreg     unsigned char 
 39597 ;;  start_byte      4   65[COMRAM] unsigned long 
 39598 ;;  length          2   69[COMRAM] unsigned int 
 39599 ;;  data            2   71[COMRAM] PTR unsigned char 
 39600 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 39601 ;; Auto vars:     Size  Location     Type
 39602 ;;  file_number     1    2[BANK0 ] unsigned char 
 39603 ;;  root           32   14[BANK0 ] struct .
 39604 ;;  position        4   10[BANK0 ] unsigned long 
 39605 ;;  number_of_by    2    8[BANK0 ] unsigned int 
 39606 ;;  offset          2    6[BANK0 ] unsigned int 
 39607 ;;  cluster         2    4[BANK0 ] unsigned int 
 39608 ;;  sector          2    0[BANK0 ] unsigned int 
 39609 ;;  return_code     1    3[BANK0 ] unsigned char 
 39610 ;; Return value:  Size  Location     Type
 39611 ;;                  1    wreg      void 
 39612 ;; Registers used:
 39613 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 39614 ;; Tracked objects:
 39615 ;;		On entry : 0/0
 39616 ;;		On exit  : 0/0
 39617 ;;		Unchanged: 0/0
 39618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39619 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39620 ;;      Locals:         0      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39621 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39622 ;;      Totals:        20      46       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39623 ;;Total ram usage:       66 bytes
 39624 ;; Hardware stack levels used:    1
 39625 ;; Hardware stack levels required when called:    7
 39626 ;; This function calls:
 39627 ;;		__data_sector_from_cluster
 39628 ;;		__find_nth_cluster
 39629 ;;		__read_fat
 39630 ;;		_fat_get_file_information
 39631 ;;		_flash_partial_write
 39632 ;; This function is called by:
 39633 ;;		_fat_append_to_file
 39634 ;;		__parse_file_modify
 39635 ;; This function uses a non-reentrant model
 39636 ;;
 39637                           
 39638                           	psect	text203
 39639  002284                     __ptext203:
 39640                           	opt stack 0
 39641  002284                     _fat_modify_file:
 39642                           	opt stack 20
 39643                           
 39644                           ;incstack = 0
 39645                           ;fat_modify_file@file_number stored from wreg
 39646  002284  0100               	movlb	0	; () banked
 39647  002286  6F62               	movwf	fat_modify_file@file_number& (0+255),b
 39648                           
 39649                           ;fat16.c: 904: rootEntry_t root;;fat16.c: 905: uint16_t cluster;;fat16.c: 906: uint32_t 
      +                          position;;fat16.c: 907: uint16_t offset;;fat16.c: 908: uint16_t sector;;fat16.c: 909: ui
      +                          nt16_t number_of_bytes;;fat16.c: 910: uint8_t return_code;;fat16.c: 913: return_code = f
      +                          at_get_file_information(file_number, &root);
 39650  002288  0E6E               	movlw	low fat_modify_file@root
 39651  00228A  6E30               	movwf	fat_get_file_information@data,c
 39652  00228C  0E00               	movlw	high fat_modify_file@root
 39653  00228E  6E31               	movwf	fat_get_file_information@data+1,c
 39654  002290  0100               	movlb	0	; () banked
 39655  002292  5162               	movf	fat_modify_file@file_number& (0+255),w,b
 39656  002294  EC2B  F03B         	call	_fat_get_file_information
 39657  002298  0100               	movlb	0	; () banked
 39658  00229A  6F63               	movwf	fat_modify_file@return_code& (0+255),b
 39659                           
 39660                           ; BSR set to: 0
 39661                           ;fat16.c: 914: if(return_code!=0x00)
 39662  00229C  5163               	movf	fat_modify_file@return_code& (0+255),w,b
 39663  00229E  A4D8               	btfss	status,2,c
 39664  0022A0  0012               	return	
 39665                           
 39666                           ; BSR set to: 0
 39667                           ;fat16.c: 918: };fat16.c: 921: if(start_byte>root.fileSize)
 39668                           
 39669                           ; BSR set to: 0
 39670                           
 39671                           ; BSR set to: 0
 39672                           ;fat16.c: 915: {;fat16.c: 917: return;
 39673  0022A2  5042               	movf	fat_modify_file@start_byte,w,c
 39674  0022A4  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39675  0022A6  5043               	movf	fat_modify_file@start_byte+1,w,c
 39676  0022A8  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39677  0022AA  5044               	movf	fat_modify_file@start_byte+2,w,c
 39678  0022AC  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39679  0022AE  5045               	movf	fat_modify_file@start_byte+3,w,c
 39680  0022B0  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39681  0022B2  A0D8               	btfss	status,0,c
 39682  0022B4  0012               	return	
 39683                           
 39684                           ; BSR set to: 0
 39685                           ;fat16.c: 925: };fat16.c: 927: if((start_byte+length) > root.fileSize)
 39686                           
 39687                           ; BSR set to: 0
 39688                           
 39689                           ; BSR set to: 0
 39690                           ;fat16.c: 922: {;fat16.c: 924: return;
 39691  0022B6  5046               	movf	fat_modify_file@length,w,c
 39692  0022B8  2442               	addwf	fat_modify_file@start_byte,w,c
 39693  0022BA  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39694  0022BC  5047               	movf	fat_modify_file@length+1,w,c
 39695  0022BE  2043               	addwfc	fat_modify_file@start_byte+1,w,c
 39696  0022C0  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39697  0022C2  0E00               	movlw	0
 39698  0022C4  2044               	addwfc	fat_modify_file@start_byte+2,w,c
 39699  0022C6  6E4C               	movwf	(??_fat_modify_file+2)& (0+255),c
 39700  0022C8  0E00               	movlw	0
 39701  0022CA  2045               	addwfc	fat_modify_file@start_byte+3,w,c
 39702  0022CC  6E4D               	movwf	(??_fat_modify_file+3)& (0+255),c
 39703  0022CE  504A               	movf	??_fat_modify_file,w,c
 39704  0022D0  5D8A               	subwf	(fat_modify_file@root+28)& (0+255),w,b
 39705  0022D2  504B               	movf	??_fat_modify_file+1,w,c
 39706  0022D4  598B               	subwfb	(fat_modify_file@root+29)& (0+255),w,b
 39707  0022D6  504C               	movf	??_fat_modify_file+2,w,c
 39708  0022D8  598C               	subwfb	(fat_modify_file@root+30)& (0+255),w,b
 39709  0022DA  504D               	movf	??_fat_modify_file+3,w,c
 39710  0022DC  598D               	subwfb	(fat_modify_file@root+31)& (0+255),w,b
 39711  0022DE  B0D8               	btfsc	status,0,c
 39712  0022E0  D00E               	goto	l2116
 39713                           
 39714                           ; BSR set to: 0
 39715                           ;fat16.c: 928: {;fat16.c: 930: length = root.fileSize - start_byte;
 39716  0022E2  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39717  0022E6  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39718  0022EA  1E4A               	comf	??_fat_modify_file,f,c
 39719  0022EC  1E4B               	comf	??_fat_modify_file+1,f,c
 39720  0022EE  4A4A               	infsnz	??_fat_modify_file,f,c
 39721  0022F0  2A4B               	incf	??_fat_modify_file+1,f,c
 39722  0022F2  518A               	movf	(fat_modify_file@root+28)& (0+255),w,b
 39723  0022F4  244A               	addwf	??_fat_modify_file,w,c
 39724  0022F6  6E46               	movwf	fat_modify_file@length,c
 39725  0022F8  518B               	movf	(fat_modify_file@root+29)& (0+255),w,b
 39726  0022FA  204B               	addwfc	??_fat_modify_file+1,w,c
 39727  0022FC  6E47               	movwf	fat_modify_file@length+1,c
 39728  0022FE                     l2116:
 39729                           
 39730                           ; BSR set to: 0
 39731                           ;fat16.c: 931: };fat16.c: 934: cluster = _find_nth_cluster(root.firstCluster, (start_byt
      +                          e>>9));
 39732                           
 39733                           ; BSR set to: 0
 39734  0022FE  C088  F038         	movff	fat_modify_file@root+26,__find_nth_cluster@cluster
 39735  002302  C089  F039         	movff	fat_modify_file@root+27,__find_nth_cluster@cluster+1
 39736  002306  C042  F04A         	movff	fat_modify_file@start_byte,??_fat_modify_file
 39737  00230A  C043  F04B         	movff	fat_modify_file@start_byte+1,??_fat_modify_file+1
 39738  00230E  C044  F04C         	movff	fat_modify_file@start_byte+2,??_fat_modify_file+2
 39739  002312  C045  F04D         	movff	fat_modify_file@start_byte+3,??_fat_modify_file+3
 39740  002316  0E0A               	movlw	10
 39741  002318  D005               	goto	u9370
 39742  00231A                     u9375:
 39743  00231A  90D8               	bcf	status,0,c
 39744  00231C  324D               	rrcf	??_fat_modify_file+3,f,c
 39745  00231E  324C               	rrcf	??_fat_modify_file+2,f,c
 39746  002320  324B               	rrcf	??_fat_modify_file+1,f,c
 39747  002322  324A               	rrcf	??_fat_modify_file,f,c
 39748  002324                     u9370:
 39749  002324  2EE8               	decfsz	wreg,f,c
 39750  002326  D7F9               	goto	u9375
 39751  002328  C04A  F03A         	movff	??_fat_modify_file,__find_nth_cluster@n
 39752  00232C  C04B  F03B         	movff	??_fat_modify_file+1,__find_nth_cluster@n+1
 39753  002330  ECCB  F035         	call	__find_nth_cluster	;wreg free
 39754  002334  C038  F064         	movff	?__find_nth_cluster,fat_modify_file@cluster
 39755  002338  C039  F065         	movff	?__find_nth_cluster+1,fat_modify_file@cluster+1
 39756                           
 39757                           ;fat16.c: 937: position = start_byte & 0xFFFFFE00;
 39758  00233C  0E00               	movlw	0
 39759  00233E  1442               	andwf	fat_modify_file@start_byte,w,c
 39760  002340  0100               	movlb	0	; () banked
 39761  002342  6F6A               	movwf	fat_modify_file@position& (0+255),b
 39762  002344  0EFE               	movlw	254
 39763  002346  1443               	andwf	fat_modify_file@start_byte+1,w,c
 39764  002348  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 39765  00234A  0EFF               	movlw	255
 39766  00234C  1444               	andwf	fat_modify_file@start_byte+2,w,c
 39767  00234E  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 39768  002350  0EFF               	movlw	255
 39769  002352  1445               	andwf	fat_modify_file@start_byte+3,w,c
 39770  002354  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 39771                           
 39772                           ; BSR set to: 0
 39773                           ;fat16.c: 940: offset = (uint16_t) (start_byte-position);
 39774  002356  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39775  00235A  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39776  00235E  1E4A               	comf	??_fat_modify_file,f,c
 39777  002360  1E4B               	comf	??_fat_modify_file+1,f,c
 39778  002362  4A4A               	infsnz	??_fat_modify_file,f,c
 39779  002364  2A4B               	incf	??_fat_modify_file+1,f,c
 39780  002366  5042               	movf	fat_modify_file@start_byte,w,c
 39781  002368  244A               	addwf	??_fat_modify_file,w,c
 39782  00236A  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39783  00236C  5043               	movf	fat_modify_file@start_byte+1,w,c
 39784  00236E  204B               	addwfc	??_fat_modify_file+1,w,c
 39785  002370  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39786                           
 39787                           ; BSR set to: 0
 39788                           ;fat16.c: 943: position = 0;
 39789  002372  0E00               	movlw	0
 39790  002374  6F6A               	movwf	fat_modify_file@position& (0+255),b
 39791  002376  0E00               	movlw	0
 39792  002378  6F6B               	movwf	(fat_modify_file@position+1)& (0+255),b
 39793  00237A  0E00               	movlw	0
 39794  00237C  6F6C               	movwf	(fat_modify_file@position+2)& (0+255),b
 39795  00237E  0E00               	movlw	0
 39796  002380  6F6D               	movwf	(fat_modify_file@position+3)& (0+255),b
 39797                           
 39798                           ;fat16.c: 944: while(position < length)
 39799  002382  D089               	goto	l2117
 39800  002384                     
 39801                           ; BSR set to: 0
 39802                           ;fat16.c: 945: {;fat16.c: 947: if(offset==512)
 39803                           
 39804                           ; BSR set to: 0
 39805  002384  0E02               	movlw	2
 39806  002386  1967               	xorwf	(fat_modify_file@offset+1)& (0+255),w,b
 39807  002388  1166               	iorwf	fat_modify_file@offset& (0+255),w,b
 39808  00238A  A4D8               	btfss	status,2,c
 39809  00238C  D00F               	goto	l2119
 39810                           
 39811                           ; BSR set to: 0
 39812                           ;fat16.c: 948: {;fat16.c: 950: cluster = _read_fat(cluster);
 39813  00238E  C064  F030         	movff	fat_modify_file@cluster,__read_fat@cluster
 39814  002392  C065  F031         	movff	fat_modify_file@cluster+1,__read_fat@cluster+1
 39815  002396  EC15  F040         	call	__read_fat	;wreg free
 39816  00239A  C030  F064         	movff	?__read_fat,fat_modify_file@cluster
 39817  00239E  C031  F065         	movff	?__read_fat+1,fat_modify_file@cluster+1
 39818                           
 39819                           ;fat16.c: 952: offset = 0;
 39820  0023A2  0E00               	movlw	0
 39821  0023A4  0100               	movlb	0	; () banked
 39822  0023A6  6F67               	movwf	(fat_modify_file@offset+1)& (0+255),b
 39823  0023A8  0E00               	movlw	0
 39824  0023AA  6F66               	movwf	fat_modify_file@offset& (0+255),b
 39825  0023AC                     l2119:
 39826                           
 39827                           ; BSR set to: 0
 39828                           ;fat16.c: 953: };fat16.c: 956: sector = _data_sector_from_cluster(cluster);
 39829                           
 39830                           ; BSR set to: 0
 39831  0023AC  C064  F001         	movff	fat_modify_file@cluster,__data_sector_from_cluster@fat_cluster
 39832  0023B0  C065  F002         	movff	fat_modify_file@cluster+1,__data_sector_from_cluster@fat_cluster+1
 39833  0023B4  ECB3  F047         	call	__data_sector_from_cluster	;wreg free
 39834  0023B8  C001  F060         	movff	?__data_sector_from_cluster,fat_modify_file@sector
 39835  0023BC  C002  F061         	movff	?__data_sector_from_cluster+1,fat_modify_file@sector+1
 39836                           
 39837                           ;fat16.c: 959: number_of_bytes = 512 - offset;
 39838  0023C0  C066  F04A         	movff	fat_modify_file@offset,??_fat_modify_file
 39839  0023C4  C067  F04B         	movff	fat_modify_file@offset+1,??_fat_modify_file+1
 39840  0023C8  1E4A               	comf	??_fat_modify_file,f,c
 39841  0023CA  1E4B               	comf	??_fat_modify_file+1,f,c
 39842  0023CC  4A4A               	infsnz	??_fat_modify_file,f,c
 39843  0023CE  2A4B               	incf	??_fat_modify_file+1,f,c
 39844  0023D0  0E00               	movlw	0
 39845  0023D2  244A               	addwf	??_fat_modify_file,w,c
 39846  0023D4  0100               	movlb	0	; () banked
 39847  0023D6  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39848  0023D8  0E02               	movlw	2
 39849  0023DA  204B               	addwfc	??_fat_modify_file+1,w,c
 39850  0023DC  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39851                           
 39852                           ; BSR set to: 0
 39853                           ;fat16.c: 960: if(number_of_bytes > (length-position))
 39854  0023DE  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39855  0023E0  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39856  0023E2  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39857  0023E4  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39858  0023E6  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39859  0023E8  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39860  0023EA  C06A  F04E         	movff	fat_modify_file@position,??_fat_modify_file+4
 39861  0023EE  C06B  F04F         	movff	fat_modify_file@position+1,??_fat_modify_file+5
 39862  0023F2  C06C  F050         	movff	fat_modify_file@position+2,??_fat_modify_file+6
 39863  0023F6  C06D  F051         	movff	fat_modify_file@position+3,??_fat_modify_file+7
 39864  0023FA  1E4E               	comf	??_fat_modify_file+4,f,c
 39865  0023FC  1E4F               	comf	??_fat_modify_file+5,f,c
 39866  0023FE  1E50               	comf	??_fat_modify_file+6,f,c
 39867  002400  1E51               	comf	??_fat_modify_file+7,f,c
 39868  002402  2A4E               	incf	??_fat_modify_file+4,f,c
 39869  002404  0E00               	movlw	0
 39870  002406  224F               	addwfc	??_fat_modify_file+5,f,c
 39871  002408  2250               	addwfc	??_fat_modify_file+6,f,c
 39872  00240A  2251               	addwfc	??_fat_modify_file+7,f,c
 39873  00240C  5046               	movf	fat_modify_file@length,w,c
 39874  00240E  244E               	addwf	??_fat_modify_file+4,w,c
 39875  002410  6E52               	movwf	(??_fat_modify_file+8)& (0+255),c
 39876  002412  5047               	movf	fat_modify_file@length+1,w,c
 39877  002414  204F               	addwfc	??_fat_modify_file+5,w,c
 39878  002416  6E53               	movwf	(??_fat_modify_file+9)& (0+255),c
 39879  002418  0E00               	movlw	0
 39880  00241A  2050               	addwfc	??_fat_modify_file+6,w,c
 39881  00241C  6E54               	movwf	(??_fat_modify_file+10)& (0+255),c
 39882  00241E  0E00               	movlw	0
 39883  002420  2051               	addwfc	??_fat_modify_file+7,w,c
 39884  002422  6E55               	movwf	(??_fat_modify_file+11)& (0+255),c
 39885  002424  504A               	movf	??_fat_modify_file,w,c
 39886  002426  5C52               	subwf	??_fat_modify_file+8,w,c
 39887  002428  504B               	movf	??_fat_modify_file+1,w,c
 39888  00242A  5853               	subwfb	??_fat_modify_file+9,w,c
 39889  00242C  504C               	movf	??_fat_modify_file+2,w,c
 39890  00242E  5854               	subwfb	??_fat_modify_file+10,w,c
 39891  002430  504D               	movf	??_fat_modify_file+3,w,c
 39892  002432  5855               	subwfb	??_fat_modify_file+11,w,c
 39893  002434  B0D8               	btfsc	status,0,c
 39894  002436  D00E               	goto	l2120
 39895                           
 39896                           ; BSR set to: 0
 39897                           ;fat16.c: 961: {;fat16.c: 962: number_of_bytes = length - position;
 39898  002438  C06A  F04A         	movff	fat_modify_file@position,??_fat_modify_file
 39899  00243C  C06B  F04B         	movff	fat_modify_file@position+1,??_fat_modify_file+1
 39900  002440  1E4A               	comf	??_fat_modify_file,f,c
 39901  002442  1E4B               	comf	??_fat_modify_file+1,f,c
 39902  002444  4A4A               	infsnz	??_fat_modify_file,f,c
 39903  002446  2A4B               	incf	??_fat_modify_file+1,f,c
 39904  002448  5046               	movf	fat_modify_file@length,w,c
 39905  00244A  244A               	addwf	??_fat_modify_file,w,c
 39906  00244C  6F68               	movwf	fat_modify_file@number_of_bytes& (0+255),b
 39907  00244E  5047               	movf	fat_modify_file@length+1,w,c
 39908  002450  204B               	addwfc	??_fat_modify_file+1,w,c
 39909  002452  6F69               	movwf	(fat_modify_file@number_of_bytes+1)& (0+255),b
 39910  002454                     l2120:
 39911                           
 39912                           ; BSR set to: 0
 39913                           ;fat16.c: 963: };fat16.c: 966: flash_partial_write(sector, offset, number_of_bytes, &dat
      +                          a[position]);
 39914                           
 39915                           ; BSR set to: 0
 39916  002454  C060  F020         	movff	fat_modify_file@sector,flash_partial_write@page
 39917  002458  C061  F021         	movff	fat_modify_file@sector+1,flash_partial_write@page+1
 39918  00245C  C066  F022         	movff	fat_modify_file@offset,flash_partial_write@start
 39919  002460  C067  F023         	movff	fat_modify_file@offset+1,flash_partial_write@start+1
 39920  002464  C068  F024         	movff	fat_modify_file@number_of_bytes,flash_partial_write@length
 39921  002468  C069  F025         	movff	fat_modify_file@number_of_bytes+1,flash_partial_write@length+1
 39922  00246C  516A               	movf	fat_modify_file@position& (0+255),w,b
 39923  00246E  2448               	addwf	fat_modify_file@data,w,c
 39924  002470  6E26               	movwf	flash_partial_write@data,c
 39925  002472  516B               	movf	(fat_modify_file@position+1)& (0+255),w,b
 39926  002474  2049               	addwfc	fat_modify_file@data+1,w,c
 39927  002476  6E27               	movwf	flash_partial_write@data+1,c
 39928  002478  EC9C  F03B         	call	_flash_partial_write	;wreg free
 39929                           
 39930                           ;fat16.c: 969: position += number_of_bytes;
 39931  00247C  0100               	movlb	0	; () banked
 39932  00247E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39933  002480  276A               	addwf	fat_modify_file@position& (0+255),f,b
 39934  002482  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39935  002484  236B               	addwfc	(fat_modify_file@position+1)& (0+255),f,b
 39936  002486  0E00               	movlw	0
 39937  002488  236C               	addwfc	(fat_modify_file@position+2)& (0+255),f,b
 39938  00248A  0E00               	movlw	0
 39939  00248C  236D               	addwfc	(fat_modify_file@position+3)& (0+255),f,b
 39940                           
 39941                           ; BSR set to: 0
 39942                           ;fat16.c: 970: offset += number_of_bytes;
 39943  00248E  5168               	movf	fat_modify_file@number_of_bytes& (0+255),w,b
 39944  002490  2766               	addwf	fat_modify_file@offset& (0+255),f,b
 39945  002492  5169               	movf	(fat_modify_file@number_of_bytes+1)& (0+255),w,b
 39946  002494  2367               	addwfc	(fat_modify_file@offset+1)& (0+255),f,b
 39947  002496                     l2117:
 39948                           
 39949                           ; BSR set to: 0
 39950                           
 39951                           ; BSR set to: 0
 39952  002496  5046               	movf	fat_modify_file@length,w,c
 39953  002498  6E4A               	movwf	??_fat_modify_file& (0+255),c
 39954  00249A  5047               	movf	fat_modify_file@length+1,w,c
 39955  00249C  6E4B               	movwf	(??_fat_modify_file+1)& (0+255),c
 39956  00249E  6A4C               	clrf	(??_fat_modify_file+2)& (0+255),c
 39957  0024A0  6A4D               	clrf	(??_fat_modify_file+3)& (0+255),c
 39958  0024A2  504A               	movf	??_fat_modify_file,w,c
 39959  0024A4  5D6A               	subwf	fat_modify_file@position& (0+255),w,b
 39960  0024A6  504B               	movf	??_fat_modify_file+1,w,c
 39961  0024A8  596B               	subwfb	(fat_modify_file@position+1)& (0+255),w,b
 39962  0024AA  504C               	movf	??_fat_modify_file+2,w,c
 39963  0024AC  596C               	subwfb	(fat_modify_file@position+2)& (0+255),w,b
 39964  0024AE  504D               	movf	??_fat_modify_file+3,w,c
 39965  0024B0  596D               	subwfb	(fat_modify_file@position+3)& (0+255),w,b
 39966  0024B2  B0D8               	btfsc	status,0,c
 39967  0024B4  0012               	return	
 39968  0024B6  D766               	goto	l2118
 39969  0024B8                     __end_of_fat_modify_file:
 39970                           	opt stack 0
 39971                           tosu	equ	0xFFF
 39972                           tosh	equ	0xFFE
 39973                           tosl	equ	0xFFD
 39974                           pclath	equ	0xFFA
 39975                           tblptru	equ	0xFF8
 39976                           tblptrh	equ	0xFF7
 39977                           tblptrl	equ	0xFF6
 39978                           tablat	equ	0xFF5
 39979                           prodh	equ	0xFF4
 39980                           prodl	equ	0xFF3
 39981                           intcon	equ	0xFF2
 39982                           intcon2	equ	0xFF1
 39983                           intcon3	equ	0xFF0
 39984                           indf0	equ	0xFEF
 39985                           postinc0	equ	0xFEE
 39986                           fsr0h	equ	0xFEA
 39987                           fsr0l	equ	0xFE9
 39988                           wreg	equ	0xFE8
 39989                           indf1	equ	0xFE7
 39990                           postdec1	equ	0xFE5
 39991                           plusw1	equ	0xFE3
 39992                           fsr1h	equ	0xFE2
 39993                           fsr1l	equ	0xFE1
 39994                           indf2	equ	0xFDF
 39995                           postinc2	equ	0xFDE
 39996                           postdec2	equ	0xFDD
 39997                           plusw2	equ	0xFDB
 39998                           fsr2h	equ	0xFDA
 39999                           fsr2l	equ	0xFD9
 40000                           status	equ	0xFD8
 40001                           
 40002 ;; *************** function _flash_partial_write *****************
 40003 ;; Defined at:
 40004 ;;		line 494 in file "flash.c"
 40005 ;; Parameters:    Size  Location     Type
 40006 ;;  page            2   31[COMRAM] unsigned int 
 40007 ;;  start           2   33[COMRAM] unsigned int 
 40008 ;;  length          2   35[COMRAM] unsigned int 
 40009 ;;  data            2   37[COMRAM] PTR unsigned char 
 40010 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 40011 ;;		 -> _delete_root@deleted_value(1), ReceivedDataBuffer(64), 
 40012 ;; Auto vars:     Size  Location     Type
 40013 ;;  match           1   39[COMRAM] enum E6906
 40014 ;; Return value:  Size  Location     Type
 40015 ;;                  1    wreg      void 
 40016 ;; Registers used:
 40017 ;;		wreg, status,2, status,0, cstack
 40018 ;; Tracked objects:
 40019 ;;		On entry : 0/0
 40020 ;;		On exit  : 0/0
 40021 ;;		Unchanged: 0/0
 40022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40023 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40024 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40025 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40026 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40027 ;;Total ram usage:        9 bytes
 40028 ;; Hardware stack levels used:    1
 40029 ;; Hardware stack levels required when called:    4
 40030 ;; This function calls:
 40031 ;;		__flash_compare_page_to_buffer
 40032 ;;		__flash_copy_page_to_buffer
 40033 ;;		__flash_is_busy
 40034 ;;		__flash_write_page_from_buffer
 40035 ;;		__flash_write_to_buffer
 40036 ;;		_spi_set_configuration
 40037 ;; This function is called by:
 40038 ;;		__write_root
 40039 ;;		__delete_root
 40040 ;;		_fat_modify_file
 40041 ;; This function uses a non-reentrant model
 40042 ;;
 40043                           
 40044                           	psect	text204
 40045  007738                     __ptext204:
 40046                           	opt stack 0
 40047  007738                     _flash_partial_write:
 40048                           	opt stack 21
 40049                           
 40050                           ;flash.c: 496: flashMatchResult_t match;;flash.c: 499: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 40051                           
 40052                           ; BSR set to: 0
 40053                           ;incstack = 0
 40054  007738  0E00               	movlw	0
 40055  00773A  EC62  F023         	call	_spi_set_configuration
 40056  00773E  EC71  F046         	call	__flash_is_busy	;wreg free
 40057  007742  0900               	iorlw	0
 40058  007744  A4D8               	btfss	status,2,c
 40059  007746  D7FB               	goto	l1853
 40060                           
 40061                           ;flash.c: 505: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 40062  007748  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 40063  00774C  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 40064  007750  0E00               	movlw	0
 40065  007752  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 40066  007754  ECBA  F03E         	call	__flash_copy_page_to_buffer	;wreg free
 40067                           
 40068                           ;flash.c: 508: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 40069  007758  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 40070  00775C  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 40071  007760  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 40072  007764  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 40073  007768  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 40074  00776C  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 40075  007770  0E00               	movlw	0
 40076  007772  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 40077  007774  EC61  F041         	call	__flash_write_to_buffer	;wreg free
 40078                           
 40079                           ;flash.c: 511: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 40080  007778  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 40081  00777C  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 40082  007780  0E00               	movlw	0
 40083  007782  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 40084  007784  EC7A  F03A         	call	__flash_compare_page_to_buffer	;wreg free
 40085  007788  6E28               	movwf	flash_partial_write@match,c
 40086                           
 40087                           ;flash.c: 514: if(match==DATA_DOES_NOT_MATCH)
 40088  00778A  0428               	decf	flash_partial_write@match,w,c
 40089  00778C  A4D8               	btfss	status,2,c
 40090  00778E  D008               	goto	l1855
 40091                           
 40092                           ;flash.c: 515: {;flash.c: 516: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 40093  007790  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 40094  007794  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 40095  007798  0E00               	movlw	0
 40096  00779A  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 40097  00779C  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 40098  0077A0                     l1855:
 40099                           
 40100                           ;flash.c: 517: };flash.c: 520: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 40101  0077A0  0E01               	movlw	1
 40102  0077A2  EC62  F023         	call	_spi_set_configuration
 40103  0077A6  0012               	return		;funcret
 40104  0077A8                     __end_of_flash_partial_write:
 40105                           	opt stack 0
 40106                           tosu	equ	0xFFF
 40107                           tosh	equ	0xFFE
 40108                           tosl	equ	0xFFD
 40109                           pclath	equ	0xFFA
 40110                           tblptru	equ	0xFF8
 40111                           tblptrh	equ	0xFF7
 40112                           tblptrl	equ	0xFF6
 40113                           tablat	equ	0xFF5
 40114                           prodh	equ	0xFF4
 40115                           prodl	equ	0xFF3
 40116                           intcon	equ	0xFF2
 40117                           intcon2	equ	0xFF1
 40118                           intcon3	equ	0xFF0
 40119                           indf0	equ	0xFEF
 40120                           postinc0	equ	0xFEE
 40121                           fsr0h	equ	0xFEA
 40122                           fsr0l	equ	0xFE9
 40123                           wreg	equ	0xFE8
 40124                           indf1	equ	0xFE7
 40125                           postdec1	equ	0xFE5
 40126                           plusw1	equ	0xFE3
 40127                           fsr1h	equ	0xFE2
 40128                           fsr1l	equ	0xFE1
 40129                           indf2	equ	0xFDF
 40130                           postinc2	equ	0xFDE
 40131                           postdec2	equ	0xFDD
 40132                           plusw2	equ	0xFDB
 40133                           fsr2h	equ	0xFDA
 40134                           fsr2l	equ	0xFD9
 40135                           status	equ	0xFD8
 40136                           
 40137 ;; *************** function __flash_write_to_buffer *****************
 40138 ;; Defined at:
 40139 ;;		line 235 in file "flash.c"
 40140 ;; Parameters:    Size  Location     Type
 40141 ;;  start           2   19[COMRAM] unsigned int 
 40142 ;;  data            2   21[COMRAM] PTR unsigned char 
 40143 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 40144 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 40145 ;;  data_length     2   23[COMRAM] unsigned int 
 40146 ;;  buffer          1   25[COMRAM] enum E6902
 40147 ;; Auto vars:     Size  Location     Type
 40148 ;;  command         4   26[COMRAM] unsigned char [4]
 40149 ;; Return value:  Size  Location     Type
 40150 ;;                  1    wreg      void 
 40151 ;; Registers used:
 40152 ;;		wreg, status,2, status,0, cstack
 40153 ;; Tracked objects:
 40154 ;;		On entry : 0/0
 40155 ;;		On exit  : 0/0
 40156 ;;		Unchanged: 0/0
 40157 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40158 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40159 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40160 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40161 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40162 ;;Total ram usage:       11 bytes
 40163 ;; Hardware stack levels used:    1
 40164 ;; Hardware stack levels required when called:    3
 40165 ;; This function calls:
 40166 ;;		__flash_is_busy
 40167 ;;		_spi_tx_tx
 40168 ;; This function is called by:
 40169 ;;		_flash_sector_write
 40170 ;;		_flash_partial_write
 40171 ;;		_flash_write_to_buffer
 40172 ;; This function uses a non-reentrant model
 40173 ;;
 40174                           
 40175                           	psect	text205
 40176  0082C2                     __ptext205:
 40177                           	opt stack 0
 40178  0082C2                     __flash_write_to_buffer:
 40179                           	opt stack 23
 40180                           
 40181                           ;flash.c: 237: uint8_t command[4];;flash.c: 240: while(_flash_is_busy());
 40182                           
 40183                           ;incstack = 0
 40184  0082C2  EC71  F046         	call	__flash_is_busy	;wreg free
 40185  0082C6  0900               	iorlw	0
 40186  0082C8  A4D8               	btfss	status,2,c
 40187  0082CA  D7FB               	goto	__flash_write_to_buffer
 40188                           
 40189                           ;flash.c: 243: if(buffer==FLASH_BUFFER_1)
 40190  0082CC  501A               	movf	__flash_write_to_buffer@buffer,w,c
 40191  0082CE  A4D8               	btfss	status,2,c
 40192  0082D0  D002               	goto	l1786
 40193                           
 40194                           ;flash.c: 244: command[0] = 0x84;
 40195  0082D2  0E84               	movlw	132
 40196  0082D4  6E1B               	movwf	__flash_write_to_buffer@command,c
 40197  0082D6                     l1786:
 40198                           
 40199                           ;flash.c: 245: if(buffer==FLASH_BUFFER_2)
 40200  0082D6  041A               	decf	__flash_write_to_buffer@buffer,w,c
 40201  0082D8  A4D8               	btfss	status,2,c
 40202  0082DA  D002               	goto	l1787
 40203                           
 40204                           ;flash.c: 246: command[0] = 0x87;
 40205  0082DC  0E87               	movlw	135
 40206  0082DE  6E1B               	movwf	__flash_write_to_buffer@command,c
 40207  0082E0                     l1787:
 40208                           
 40209                           ;flash.c: 248: command[1] = 0x00;
 40210  0082E0  0E00               	movlw	0
 40211  0082E2  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 40212                           
 40213                           ;flash.c: 249: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 40214  0082E4  5015               	movf	__flash_write_to_buffer@start+1,w,c
 40215  0082E6  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 40216                           
 40217                           ;flash.c: 250: command[3] = ((unsigned char)((start)&0xFF));
 40218  0082E8  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 40219                           
 40220                           ;flash.c: 253: spi_tx_tx(command, 4, data, data_length);
 40221  0082EC  0E1B               	movlw	low __flash_write_to_buffer@command
 40222  0082EE  6E01               	movwf	spi_tx_tx@command,c
 40223  0082F0  0E00               	movlw	high __flash_write_to_buffer@command
 40224  0082F2  6E02               	movwf	spi_tx_tx@command+1,c
 40225  0082F4  0E00               	movlw	0
 40226  0082F6  6E04               	movwf	spi_tx_tx@command_length+1,c
 40227  0082F8  0E04               	movlw	4
 40228  0082FA  6E03               	movwf	spi_tx_tx@command_length,c
 40229  0082FC  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 40230  008300  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 40231  008304  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 40232  008308  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 40233  00830C  EC6B  F038         	call	_spi_tx_tx	;wreg free
 40234  008310  0012               	return		;funcret
 40235  008312                     __end_of__flash_write_to_buffer:
 40236                           	opt stack 0
 40237                           tosu	equ	0xFFF
 40238                           tosh	equ	0xFFE
 40239                           tosl	equ	0xFFD
 40240                           pclath	equ	0xFFA
 40241                           tblptru	equ	0xFF8
 40242                           tblptrh	equ	0xFF7
 40243                           tblptrl	equ	0xFF6
 40244                           tablat	equ	0xFF5
 40245                           prodh	equ	0xFF4
 40246                           prodl	equ	0xFF3
 40247                           intcon	equ	0xFF2
 40248                           intcon2	equ	0xFF1
 40249                           intcon3	equ	0xFF0
 40250                           indf0	equ	0xFEF
 40251                           postinc0	equ	0xFEE
 40252                           fsr0h	equ	0xFEA
 40253                           fsr0l	equ	0xFE9
 40254                           wreg	equ	0xFE8
 40255                           indf1	equ	0xFE7
 40256                           postdec1	equ	0xFE5
 40257                           plusw1	equ	0xFE3
 40258                           fsr1h	equ	0xFE2
 40259                           fsr1l	equ	0xFE1
 40260                           indf2	equ	0xFDF
 40261                           postinc2	equ	0xFDE
 40262                           postdec2	equ	0xFDD
 40263                           plusw2	equ	0xFDB
 40264                           fsr2h	equ	0xFDA
 40265                           fsr2l	equ	0xFD9
 40266                           status	equ	0xFD8
 40267                           
 40268 ;; *************** function _spi_tx_tx *****************
 40269 ;; Defined at:
 40270 ;;		line 386 in file "spi.c"
 40271 ;; Parameters:    Size  Location     Type
 40272 ;;  command         2    0[COMRAM] PTR unsigned char 
 40273 ;;		 -> _flash_write_to_buffer@command(4), 
 40274 ;;  command_leng    2    2[COMRAM] unsigned int 
 40275 ;;  data            2    4[COMRAM] PTR unsigned char 
 40276 ;;		 -> _spi_external_rx_buffer(64), fat_resize_file@root(32), fat_rename_file@root(32), fat_create_file@root_entry(32),
      + 
 40277 ;;		 -> _delete_root@deleted_value(1), buffer(512), ReceivedDataBuffer(64), msd_buffer(512), 
 40278 ;;  data_length     2    6[COMRAM] unsigned int 
 40279 ;; Auto vars:     Size  Location     Type
 40280 ;;		None
 40281 ;; Return value:  Size  Location     Type
 40282 ;;                  1    wreg      void 
 40283 ;; Registers used:
 40284 ;;		wreg, status,2, status,0
 40285 ;; Tracked objects:
 40286 ;;		On entry : 0/0
 40287 ;;		On exit  : 0/0
 40288 ;;		Unchanged: 0/0
 40289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40290 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40291 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40292 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40293 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40294 ;;Total ram usage:       12 bytes
 40295 ;; Hardware stack levels used:    1
 40296 ;; This function calls:
 40297 ;;		Nothing
 40298 ;; This function is called by:
 40299 ;;		__flash_write_to_buffer
 40300 ;; This function uses a non-reentrant model
 40301 ;;
 40302                           
 40303                           	psect	text206
 40304  0070D6                     __ptext206:
 40305                           	opt stack 0
 40306  0070D6                     _spi_tx_tx:
 40307                           	opt stack 25
 40308                           
 40309                           ;spi.c: 389: DMACON1bits.SSCON1 = 0;
 40310                           
 40311                           ;incstack = 0
 40312  0070D6  9E88               	bcf	3976,7,c	;volatile
 40313                           
 40314                           ;spi.c: 390: DMACON1bits.SSCON0 = 0;
 40315  0070D8  9C88               	bcf	3976,6,c	;volatile
 40316                           
 40317                           ;spi.c: 392: DMACON1bits.TXINC = 1;
 40318  0070DA  8A88               	bsf	3976,5,c	;volatile
 40319                           
 40320                           ;spi.c: 394: DMACON1bits.RXINC = 0;
 40321  0070DC  9888               	bcf	3976,4,c	;volatile
 40322                           
 40323                           ;spi.c: 396: DMACON1bits.DUPLEX1 = 0;
 40324  0070DE  9688               	bcf	3976,3,c	;volatile
 40325                           
 40326                           ;spi.c: 397: DMACON1bits.DUPLEX0 = 1;
 40327  0070E0  8488               	bsf	3976,2,c	;volatile
 40328                           
 40329                           ;spi.c: 399: DMACON1bits.DLYINTEN = 0;
 40330  0070E2  9288               	bcf	3976,1,c	;volatile
 40331                           
 40332                           ;spi.c: 401: DMACON2bits.DLYCYC = 0b0000;
 40333  0070E4  9886               	bcf	3974,4,c	;volatile
 40334  0070E6  9A86               	bcf	3974,5,c	;volatile
 40335  0070E8  9C86               	bcf	3974,6,c	;volatile
 40336  0070EA  9E86               	bcf	3974,7,c	;volatile
 40337                           
 40338                           ;spi.c: 403: DMACON2bits.INTLVL = 0b0000;
 40339  0070EC  9086               	bcf	3974,0,c	;volatile
 40340  0070EE  9286               	bcf	3974,1,c	;volatile
 40341  0070F0  9486               	bcf	3974,2,c	;volatile
 40342  0070F2  9686               	bcf	3974,3,c	;volatile
 40343                           
 40344                           ;spi.c: 406: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 40345  0070F4  5002               	movf	spi_tx_tx@command+1,w,c
 40346  0070F6  6E6A               	movwf	3946,c	;volatile
 40347                           
 40348                           ;spi.c: 407: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 40349  0070F8  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 40350                           
 40351                           ;spi.c: 410: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 40352  0070FC  0EFF               	movlw	255
 40353  0070FE  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40354  007100  0EFF               	movlw	255
 40355  007102  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40356  007104  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 40357  007108  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 40358  00710C  5009               	movf	??_spi_tx_tx,w,c
 40359  00710E  260B               	addwf	??_spi_tx_tx+2,f,c
 40360  007110  500A               	movf	??_spi_tx_tx+1,w,c
 40361  007112  220C               	addwfc	??_spi_tx_tx+3,f,c
 40362  007114  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40363  007118  6A0C               	clrf	??_spi_tx_tx+3,c
 40364  00711A  500B               	movf	??_spi_tx_tx+2,w,c
 40365  00711C  6E66               	movwf	3942,c	;volatile
 40366                           
 40367                           ;spi.c: 411: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 40368  00711E  0403               	decf	spi_tx_tx@command_length,w,c
 40369  007120  6E67               	movwf	3943,c	;volatile
 40370                           
 40371                           ;spi.c: 414: LATDbits.LD7 = 0;
 40372  007122  9E8C               	bcf	3980,7,c	;volatile
 40373                           
 40374                           ;spi.c: 417: DMACON1bits.DMAEN = 1;
 40375  007124  8088               	bsf	3976,0,c	;volatile
 40376  007126  B088               	btfsc	3976,0,c	;volatile
 40377  007128  D7FE               	goto	l3002
 40378                           
 40379                           ;spi.c: 421: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 40380  00712A  5006               	movf	spi_tx_tx@data+1,w,c
 40381  00712C  6E6A               	movwf	3946,c	;volatile
 40382                           
 40383                           ;spi.c: 422: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 40384  00712E  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 40385                           
 40386                           ;spi.c: 425: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 40387  007132  0EFF               	movlw	255
 40388  007134  6E09               	movwf	??_spi_tx_tx& (0+255),c
 40389  007136  0EFF               	movlw	255
 40390  007138  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 40391  00713A  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 40392  00713E  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 40393  007142  5009               	movf	??_spi_tx_tx,w,c
 40394  007144  260B               	addwf	??_spi_tx_tx+2,f,c
 40395  007146  500A               	movf	??_spi_tx_tx+1,w,c
 40396  007148  220C               	addwfc	??_spi_tx_tx+3,f,c
 40397  00714A  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 40398  00714E  6A0C               	clrf	??_spi_tx_tx+3,c
 40399  007150  500B               	movf	??_spi_tx_tx+2,w,c
 40400  007152  6E66               	movwf	3942,c	;volatile
 40401                           
 40402                           ;spi.c: 426: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 40403  007154  0407               	decf	spi_tx_tx@data_length,w,c
 40404  007156  6E67               	movwf	3943,c	;volatile
 40405                           
 40406                           ;spi.c: 429: DMACON1bits.DMAEN = 1;
 40407  007158  8088               	bsf	3976,0,c	;volatile
 40408  00715A  B088               	btfsc	3976,0,c	;volatile
 40409  00715C  D7FE               	goto	l3005
 40410                           
 40411                           ;spi.c: 433: LATDbits.LD7 = 1;
 40412  00715E  8E8C               	bsf	3980,7,c	;volatile
 40413  007160  0012               	return		;funcret
 40414  007162                     __end_of_spi_tx_tx:
 40415                           	opt stack 0
 40416                           tosu	equ	0xFFF
 40417                           tosh	equ	0xFFE
 40418                           tosl	equ	0xFFD
 40419                           pclath	equ	0xFFA
 40420                           tblptru	equ	0xFF8
 40421                           tblptrh	equ	0xFF7
 40422                           tblptrl	equ	0xFF6
 40423                           tablat	equ	0xFF5
 40424                           prodh	equ	0xFF4
 40425                           prodl	equ	0xFF3
 40426                           intcon	equ	0xFF2
 40427                           intcon2	equ	0xFF1
 40428                           intcon3	equ	0xFF0
 40429                           indf0	equ	0xFEF
 40430                           postinc0	equ	0xFEE
 40431                           fsr0h	equ	0xFEA
 40432                           fsr0l	equ	0xFE9
 40433                           wreg	equ	0xFE8
 40434                           indf1	equ	0xFE7
 40435                           postdec1	equ	0xFE5
 40436                           plusw1	equ	0xFE3
 40437                           fsr1h	equ	0xFE2
 40438                           fsr1l	equ	0xFE1
 40439                           indf2	equ	0xFDF
 40440                           postinc2	equ	0xFDE
 40441                           postdec2	equ	0xFDD
 40442                           plusw2	equ	0xFDB
 40443                           fsr2h	equ	0xFDA
 40444                           fsr2l	equ	0xFD9
 40445                           status	equ	0xFD8
 40446                           
 40447 ;; *************** function __flash_copy_page_to_buffer *****************
 40448 ;; Defined at:
 40449 ;;		line 153 in file "flash.c"
 40450 ;; Parameters:    Size  Location     Type
 40451 ;;  page            2   19[COMRAM] unsigned int 
 40452 ;;  buffer          1   21[COMRAM] enum E6902
 40453 ;; Auto vars:     Size  Location     Type
 40454 ;;  command         4   25[COMRAM] unsigned char [4]
 40455 ;; Return value:  Size  Location     Type
 40456 ;;                  1    wreg      void 
 40457 ;; Registers used:
 40458 ;;		wreg, status,2, status,0, cstack
 40459 ;; Tracked objects:
 40460 ;;		On entry : 0/0
 40461 ;;		On exit  : 0/0
 40462 ;;		Unchanged: 0/0
 40463 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40464 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40465 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40466 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40467 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40468 ;;Total ram usage:       10 bytes
 40469 ;; Hardware stack levels used:    1
 40470 ;; Hardware stack levels required when called:    3
 40471 ;; This function calls:
 40472 ;;		__flash_is_busy
 40473 ;;		_spi_tx
 40474 ;; This function is called by:
 40475 ;;		_flash_partial_write
 40476 ;;		_flash_copy_page_to_buffer
 40477 ;; This function uses a non-reentrant model
 40478 ;;
 40479                           
 40480                           	psect	text207
 40481  007D74                     __ptext207:
 40482                           	opt stack 0
 40483  007D74                     __flash_copy_page_to_buffer:
 40484                           	opt stack 22
 40485                           
 40486                           ;flash.c: 155: uint8_t command[4];;flash.c: 158: while(_flash_is_busy());
 40487                           
 40488                           ;incstack = 0
 40489  007D74  EC71  F046         	call	__flash_is_busy	;wreg free
 40490  007D78  0900               	iorlw	0
 40491  007D7A  A4D8               	btfss	status,2,c
 40492  007D7C  D7FB               	goto	__flash_copy_page_to_buffer
 40493                           
 40494                           ;flash.c: 161: if(buffer==FLASH_BUFFER_1)
 40495  007D7E  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 40496  007D80  A4D8               	btfss	status,2,c
 40497  007D82  D002               	goto	l1759
 40498                           
 40499                           ;flash.c: 162: command[0] = 0x53;
 40500  007D84  0E53               	movlw	83
 40501  007D86  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40502  007D88                     l1759:
 40503                           
 40504                           ;flash.c: 163: if(buffer==FLASH_BUFFER_2)
 40505  007D88  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 40506  007D8A  A4D8               	btfss	status,2,c
 40507  007D8C  D002               	goto	l1760
 40508                           
 40509                           ;flash.c: 164: command[0] = 0x55;
 40510  007D8E  0E55               	movlw	85
 40511  007D90  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 40512  007D92                     l1760:
 40513                           
 40514                           ;flash.c: 166: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40515  007D92  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 40516  007D96  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 40517  007D9A  0E07               	movlw	7
 40518  007D9C  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 40519  007D9E                     u7035:
 40520  007D9E  90D8               	bcf	status,0,c
 40521  007DA0  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 40522  007DA2  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 40523  007DA4  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 40524  007DA6  D7FB               	goto	u7035
 40525  007DA8  5017               	movf	??__flash_copy_page_to_buffer,w,c
 40526  007DAA  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 40527                           
 40528                           ;flash.c: 167: command[2] = ((unsigned char)((page<<1)&0xFF));
 40529  007DAC  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 40530  007DAE  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 40531  007DB0  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 40532                           
 40533                           ;flash.c: 168: command[3] = 0x00;
 40534  007DB2  0E00               	movlw	0
 40535  007DB4  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 40536                           
 40537                           ;flash.c: 171: spi_tx(command, 4);
 40538  007DB6  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 40539  007DB8  6E01               	movwf	spi_tx@data,c
 40540  007DBA  0E00               	movlw	high __flash_copy_page_to_buffer@command
 40541  007DBC  6E02               	movwf	spi_tx@data+1,c
 40542  007DBE  0E00               	movlw	0
 40543  007DC0  6E04               	movwf	spi_tx@length+1,c
 40544  007DC2  0E04               	movlw	4
 40545  007DC4  6E03               	movwf	spi_tx@length,c
 40546  007DC6  EC12  F03F         	call	_spi_tx	;wreg free
 40547  007DCA  0012               	return		;funcret
 40548  007DCC                     __end_of__flash_copy_page_to_buffer:
 40549                           	opt stack 0
 40550                           tosu	equ	0xFFF
 40551                           tosh	equ	0xFFE
 40552                           tosl	equ	0xFFD
 40553                           pclath	equ	0xFFA
 40554                           tblptru	equ	0xFF8
 40555                           tblptrh	equ	0xFF7
 40556                           tblptrl	equ	0xFF6
 40557                           tablat	equ	0xFF5
 40558                           prodh	equ	0xFF4
 40559                           prodl	equ	0xFF3
 40560                           intcon	equ	0xFF2
 40561                           intcon2	equ	0xFF1
 40562                           intcon3	equ	0xFF0
 40563                           indf0	equ	0xFEF
 40564                           postinc0	equ	0xFEE
 40565                           fsr0h	equ	0xFEA
 40566                           fsr0l	equ	0xFE9
 40567                           wreg	equ	0xFE8
 40568                           indf1	equ	0xFE7
 40569                           postdec1	equ	0xFE5
 40570                           plusw1	equ	0xFE3
 40571                           fsr1h	equ	0xFE2
 40572                           fsr1l	equ	0xFE1
 40573                           indf2	equ	0xFDF
 40574                           postinc2	equ	0xFDE
 40575                           postdec2	equ	0xFDD
 40576                           plusw2	equ	0xFDB
 40577                           fsr2h	equ	0xFDA
 40578                           fsr2l	equ	0xFD9
 40579                           status	equ	0xFD8
 40580                           
 40581 ;; *************** function __flash_compare_page_to_buffer *****************
 40582 ;; Defined at:
 40583 ;;		line 175 in file "flash.c"
 40584 ;; Parameters:    Size  Location     Type
 40585 ;;  page            2   19[COMRAM] unsigned int 
 40586 ;;  buffer          1   21[COMRAM] enum E6902
 40587 ;; Auto vars:     Size  Location     Type
 40588 ;;  command         4   27[COMRAM] unsigned char [4]
 40589 ;;  status          2   25[COMRAM] unsigned int 
 40590 ;; Return value:  Size  Location     Type
 40591 ;;                  1    wreg      enum E6906
 40592 ;; Registers used:
 40593 ;;		wreg, status,2, status,0, cstack
 40594 ;; Tracked objects:
 40595 ;;		On entry : 0/0
 40596 ;;		On exit  : 0/0
 40597 ;;		Unchanged: 0/0
 40598 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40599 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40600 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40601 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40602 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40603 ;;Total ram usage:       12 bytes
 40604 ;; Hardware stack levels used:    1
 40605 ;; Hardware stack levels required when called:    3
 40606 ;; This function calls:
 40607 ;;		__flash_get_status
 40608 ;;		__flash_is_busy
 40609 ;;		_spi_tx
 40610 ;; This function is called by:
 40611 ;;		_flash_sector_write
 40612 ;;		_flash_partial_write
 40613 ;; This function uses a non-reentrant model
 40614 ;;
 40615                           
 40616                           	psect	text208
 40617  0074F4                     __ptext208:
 40618                           	opt stack 0
 40619  0074F4                     __flash_compare_page_to_buffer:
 40620                           	opt stack 23
 40621                           
 40622                           ;flash.c: 177: uint8_t command[4];;flash.c: 178: uint16_t status;;flash.c: 181: while(_f
      +                          lash_is_busy());
 40623                           
 40624                           ;incstack = 0
 40625  0074F4  EC71  F046         	call	__flash_is_busy	;wreg free
 40626  0074F8  0900               	iorlw	0
 40627  0074FA  A4D8               	btfss	status,2,c
 40628  0074FC  D7FB               	goto	__flash_compare_page_to_buffer
 40629                           
 40630                           ;flash.c: 184: if(buffer==FLASH_BUFFER_1)
 40631  0074FE  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 40632  007500  A4D8               	btfss	status,2,c
 40633  007502  D002               	goto	l1767
 40634                           
 40635                           ;flash.c: 185: command[0] = 0x60;
 40636  007504  0E60               	movlw	96
 40637  007506  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40638  007508                     l1767:
 40639                           
 40640                           ;flash.c: 186: if(buffer==FLASH_BUFFER_2)
 40641  007508  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 40642  00750A  A4D8               	btfss	status,2,c
 40643  00750C  D002               	goto	l1768
 40644                           
 40645                           ;flash.c: 187: command[0] = 0x60;
 40646  00750E  0E60               	movlw	96
 40647  007510  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 40648  007512                     l1768:
 40649                           
 40650                           ;flash.c: 189: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 40651  007512  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 40652  007516  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 40653  00751A  0E07               	movlw	7
 40654  00751C  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 40655  00751E                     u7075:
 40656  00751E  90D8               	bcf	status,0,c
 40657  007520  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 40658  007522  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 40659  007524  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 40660  007526  D7FB               	goto	u7075
 40661  007528  5017               	movf	??__flash_compare_page_to_buffer,w,c
 40662  00752A  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 40663                           
 40664                           ;flash.c: 190: command[2] = ((unsigned char)((page<<1)&0xFF));
 40665  00752C  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 40666  00752E  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 40667  007530  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 40668                           
 40669                           ;flash.c: 191: command[3] = 0x00;
 40670  007532  0E00               	movlw	0
 40671  007534  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 40672                           
 40673                           ;flash.c: 194: spi_tx(command, 4);
 40674  007536  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 40675  007538  6E01               	movwf	spi_tx@data,c
 40676  00753A  0E00               	movlw	high __flash_compare_page_to_buffer@command
 40677  00753C  6E02               	movwf	spi_tx@data+1,c
 40678  00753E  0E00               	movlw	0
 40679  007540  6E04               	movwf	spi_tx@length+1,c
 40680  007542  0E04               	movlw	4
 40681  007544  6E03               	movwf	spi_tx@length,c
 40682  007546  EC12  F03F         	call	_spi_tx	;wreg free
 40683  00754A  EC71  F046         	call	__flash_is_busy	;wreg free
 40684  00754E  0900               	iorlw	0
 40685  007550  A4D8               	btfss	status,2,c
 40686  007552  D7FB               	goto	l1770
 40687                           
 40688                           ;flash.c: 200: status = _flash_get_status();
 40689  007554  EC99  F044         	call	__flash_get_status	;wreg free
 40690  007558  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 40691  00755C  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 40692                           
 40693                           ;flash.c: 203: if(status & 0b0000000001000000)
 40694  007560  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 40695  007562  D002               	goto	l1772
 40696                           
 40697                           ;flash.c: 204: {;flash.c: 206: return DATA_DOES_NOT_MATCH;
 40698  007564  0E01               	movlw	1
 40699                           
 40700                           ;flash.c: 207: }
 40701  007566  0012               	return	
 40702  007568                     l1772:
 40703                           
 40704                           ;flash.c: 208: else;flash.c: 209: {;flash.c: 211: return DATA_DOES_MATCH;
 40705  007568  0E00               	movlw	0
 40706  00756A  0012               	return	
 40707  00756C                     __end_of__flash_compare_page_to_buffer:
 40708                           	opt stack 0
 40709                           tosu	equ	0xFFF
 40710                           tosh	equ	0xFFE
 40711                           tosl	equ	0xFFD
 40712                           pclath	equ	0xFFA
 40713                           tblptru	equ	0xFF8
 40714                           tblptrh	equ	0xFF7
 40715                           tblptrl	equ	0xFF6
 40716                           tablat	equ	0xFF5
 40717                           prodh	equ	0xFF4
 40718                           prodl	equ	0xFF3
 40719                           intcon	equ	0xFF2
 40720                           intcon2	equ	0xFF1
 40721                           intcon3	equ	0xFF0
 40722                           indf0	equ	0xFEF
 40723                           postinc0	equ	0xFEE
 40724                           fsr0h	equ	0xFEA
 40725                           fsr0l	equ	0xFE9
 40726                           wreg	equ	0xFE8
 40727                           indf1	equ	0xFE7
 40728                           postdec1	equ	0xFE5
 40729                           plusw1	equ	0xFE3
 40730                           fsr1h	equ	0xFE2
 40731                           fsr1l	equ	0xFE1
 40732                           indf2	equ	0xFDF
 40733                           postinc2	equ	0xFDE
 40734                           postdec2	equ	0xFDD
 40735                           plusw2	equ	0xFDB
 40736                           fsr2h	equ	0xFDA
 40737                           fsr2l	equ	0xFD9
 40738                           status	equ	0xFD8
 40739                           
 40740 ;; *************** function _fat_get_file_information *****************
 40741 ;; Defined at:
 40742 ;;		line 1327 in file "fat16.c"
 40743 ;; Parameters:    Size  Location     Type
 40744 ;;  file_number     1    wreg     unsigned char 
 40745 ;;  data            2   47[COMRAM] PTR struct .
 40746 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), _bootloader_verify_file@root(32), fat_modify_file@roo
      +t(32), 
 40747 ;;		 -> fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), RAM(3759), 
 40748 ;; Auto vars:     Size  Location     Type
 40749 ;;  file_number     1   54[COMRAM] unsigned char 
 40750 ;;  offset          2   52[COMRAM] unsigned int 
 40751 ;;  root_sector     2   50[COMRAM] unsigned int 
 40752 ;; Return value:  Size  Location     Type
 40753 ;;                  1    wreg      unsigned char 
 40754 ;; Registers used:
 40755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40756 ;; Tracked objects:
 40757 ;;		On entry : 0/0
 40758 ;;		On exit  : 0/0
 40759 ;;		Unchanged: 0/0
 40760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40761 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40762 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40763 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40764 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40765 ;;Total ram usage:        8 bytes
 40766 ;; Hardware stack levels used:    1
 40767 ;; Hardware stack levels required when called:    5
 40768 ;; This function calls:
 40769 ;;		__offset_from_file_number
 40770 ;;		__sector_from_file_number
 40771 ;;		_flash_partial_read
 40772 ;; This function is called by:
 40773 ;;		_fat_rename_file
 40774 ;;		_fat_read_from_file
 40775 ;;		_fat_resize_file
 40776 ;;		_fat_modify_file
 40777 ;;		__bootloader_verify_file
 40778 ;;		__bootloader_program
 40779 ;;		__fill_buffer_get_file_details
 40780 ;; This function uses a non-reentrant model
 40781 ;;
 40782                           
 40783                           	psect	text209
 40784  007656                     __ptext209:
 40785                           	opt stack 0
 40786  007656                     _fat_get_file_information:
 40787                           	opt stack 23
 40788                           
 40789                           ;incstack = 0
 40790                           ;fat_get_file_information@file_number stored from wreg
 40791  007656  6E37               	movwf	fat_get_file_information@file_number,c
 40792                           
 40793                           ;fat16.c: 1329: uint16_t root_sector;;fat16.c: 1330: uint16_t offset;;fat16.c: 1332: if(
      +                          file_number>=64)
 40794  007658  0E3F               	movlw	63
 40795  00765A  6437               	cpfsgt	fat_get_file_information@file_number,c
 40796  00765C  D002               	goto	l2284
 40797                           
 40798                           ;fat16.c: 1333: {;fat16.c: 1335: return 0x01;
 40799  00765E  0E01               	movlw	1
 40800  007660  0012               	return	
 40801  007662                     l2284:
 40802                           
 40803                           ;fat16.c: 1336: };fat16.c: 1339: root_sector = _sector_from_file_number(file_number);
 40804  007662  5037               	movf	fat_get_file_information@file_number,w,c
 40805  007664  EC67  F045         	call	__sector_from_file_number
 40806  007668  C001  F033         	movff	?__sector_from_file_number,fat_get_file_information@root_sector
 40807  00766C  C002  F034         	movff	?__sector_from_file_number+1,fat_get_file_information@root_sector+1
 40808                           
 40809                           ;fat16.c: 1340: offset = _offset_from_file_number(file_number);
 40810  007670  5037               	movf	fat_get_file_information@file_number,w,c
 40811  007672  ECF3  F045         	call	__offset_from_file_number
 40812  007676  C001  F035         	movff	?__offset_from_file_number,fat_get_file_information@offset
 40813  00767A  C002  F036         	movff	?__offset_from_file_number+1,fat_get_file_information@offset+1
 40814                           
 40815                           ;fat16.c: 1343: flash_partial_read(root_sector, offset, 32, (uint8_t*) data);
 40816  00767E  C033  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 40817  007682  C034  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 40818  007686  C035  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 40819  00768A  C036  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 40820  00768E  0E00               	movlw	0
 40821  007690  6E2D               	movwf	flash_partial_read@length+1,c
 40822  007692  0E20               	movlw	32
 40823  007694  6E2C               	movwf	flash_partial_read@length,c
 40824  007696  C030  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 40825  00769A  C031  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 40826  00769E  EC80  F044         	call	_flash_partial_read	;wreg free
 40827                           
 40828                           ;fat16.c: 1346: if((data->fileName[0]==0x00) || (data->fileName[0]==0xE5))
 40829  0076A2  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40830  0076A6  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40831  0076AA  50DF               	movf	indf2,w,c
 40832  0076AC  B4D8               	btfsc	status,2,c
 40833  0076AE  D008               	goto	u8280
 40834  0076B0  C030  FFD9         	movff	fat_get_file_information@data,fsr2l
 40835  0076B4  C031  FFDA         	movff	fat_get_file_information@data+1,fsr2h
 40836  0076B8  0EE5               	movlw	229
 40837  0076BA  18DE               	xorwf	postinc2,w,c
 40838  0076BC  A4D8               	btfss	status,2,c
 40839  0076BE  D002               	goto	l2286
 40840  0076C0                     u8280:
 40841                           
 40842                           ;fat16.c: 1347: {;fat16.c: 1349: return 0x02;
 40843  0076C0  0E02               	movlw	2
 40844  0076C2  0012               	return	
 40845  0076C4                     l2286:
 40846                           
 40847                           ;fat16.c: 1350: };fat16.c: 1353: return 0x00;
 40848  0076C4  0E00               	movlw	0
 40849  0076C6  0012               	return	
 40850  0076C8                     __end_of_fat_get_file_information:
 40851                           	opt stack 0
 40852                           tosu	equ	0xFFF
 40853                           tosh	equ	0xFFE
 40854                           tosl	equ	0xFFD
 40855                           pclath	equ	0xFFA
 40856                           tblptru	equ	0xFF8
 40857                           tblptrh	equ	0xFF7
 40858                           tblptrl	equ	0xFF6
 40859                           tablat	equ	0xFF5
 40860                           prodh	equ	0xFF4
 40861                           prodl	equ	0xFF3
 40862                           intcon	equ	0xFF2
 40863                           intcon2	equ	0xFF1
 40864                           intcon3	equ	0xFF0
 40865                           indf0	equ	0xFEF
 40866                           postinc0	equ	0xFEE
 40867                           fsr0h	equ	0xFEA
 40868                           fsr0l	equ	0xFE9
 40869                           wreg	equ	0xFE8
 40870                           indf1	equ	0xFE7
 40871                           postdec1	equ	0xFE5
 40872                           plusw1	equ	0xFE3
 40873                           fsr1h	equ	0xFE2
 40874                           fsr1l	equ	0xFE1
 40875                           indf2	equ	0xFDF
 40876                           postinc2	equ	0xFDE
 40877                           postdec2	equ	0xFDD
 40878                           plusw2	equ	0xFDB
 40879                           fsr2h	equ	0xFDA
 40880                           fsr2l	equ	0xFD9
 40881                           status	equ	0xFD8
 40882                           
 40883 ;; *************** function __parse_buffer_to_sector *****************
 40884 ;; Defined at:
 40885 ;;		line 718 in file "api.c"
 40886 ;; Parameters:    Size  Location     Type
 40887 ;;  data            2   83[COMRAM] PTR unsigned char 
 40888 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 40889 ;; Auto vars:     Size  Location     Type
 40890 ;;  sector          2   86[COMRAM] unsigned int 
 40891 ;; Return value:  Size  Location     Type
 40892 ;;                  1    wreg      unsigned char 
 40893 ;; Registers used:
 40894 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 40895 ;; Tracked objects:
 40896 ;;		On entry : 0/0
 40897 ;;		On exit  : 0/0
 40898 ;;		Unchanged: 0/0
 40899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 40900 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40901 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40902 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40903 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 40904 ;;Total ram usage:        5 bytes
 40905 ;; Hardware stack levels used:    1
 40906 ;; Hardware stack levels required when called:    8
 40907 ;; This function calls:
 40908 ;;		_fat_write_sector_from_buffer
 40909 ;; This function is called by:
 40910 ;;		__parse_command_long
 40911 ;; This function uses a non-reentrant model
 40912 ;;
 40913                           
 40914                           	psect	text210
 40915  0071EA                     __ptext210:
 40916                           	opt stack 0
 40917  0071EA                     __parse_buffer_to_sector:
 40918                           	opt stack 20
 40919                           
 40920                           ;api.c: 721: uint16_t sector;;api.c: 723: if((data[0]!=COMMAND_BUFFER_TO_SECTOR) || (dat
      +                          a[4]!=0x6A) || (data[5]!=0x6D))
 40921                           
 40922                           ;incstack = 0
 40923  0071EA  C054  FFD9         	movff	__parse_buffer_to_sector@data,fsr2l
 40924  0071EE  C055  FFDA         	movff	__parse_buffer_to_sector@data+1,fsr2h
 40925  0071F2  0E58               	movlw	88
 40926  0071F4  18DE               	xorwf	postinc2,w,c
 40927  0071F6  A4D8               	btfss	status,2,c
 40928  0071F8  D014               	goto	u11080
 40929  0071FA  EE20 F004          	lfsr	2,4
 40930  0071FE  5054               	movf	__parse_buffer_to_sector@data,w,c
 40931  007200  26D9               	addwf	fsr2l,f,c
 40932  007202  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40933  007204  22DA               	addwfc	fsr2h,f,c
 40934  007206  0E6A               	movlw	106
 40935  007208  18DE               	xorwf	postinc2,w,c
 40936  00720A  A4D8               	btfss	status,2,c
 40937  00720C  D00A               	goto	u11080
 40938  00720E  EE20 F005          	lfsr	2,5
 40939  007212  5054               	movf	__parse_buffer_to_sector@data,w,c
 40940  007214  26D9               	addwf	fsr2l,f,c
 40941  007216  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40942  007218  22DA               	addwfc	fsr2h,f,c
 40943  00721A  0E6D               	movlw	109
 40944  00721C  18DE               	xorwf	postinc2,w,c
 40945  00721E  B4D8               	btfsc	status,2,c
 40946  007220  D002               	goto	l2857
 40947  007222                     u11080:
 40948                           
 40949                           ;api.c: 724: {;api.c: 725: return 6;
 40950  007222  0E06               	movlw	6
 40951  007224  0012               	return	
 40952  007226                     l2857:
 40953                           
 40954                           ;api.c: 726: };api.c: 729: sector |= data[2];
 40955  007226  EE20 F002          	lfsr	2,2
 40956  00722A  5054               	movf	__parse_buffer_to_sector@data,w,c
 40957  00722C  26D9               	addwf	fsr2l,f,c
 40958  00722E  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40959  007230  22DA               	addwfc	fsr2h,f,c
 40960  007232  50DF               	movf	indf2,w,c
 40961  007234  6E56               	movwf	??__parse_buffer_to_sector& (0+255),c
 40962  007236  5056               	movf	??__parse_buffer_to_sector,w,c
 40963  007238  1257               	iorwf	__parse_buffer_to_sector@sector,f,c
 40964                           
 40965                           ;api.c: 730: sector <<= 8;
 40966  00723A  5057               	movf	__parse_buffer_to_sector@sector,w,c
 40967  00723C  6E58               	movwf	__parse_buffer_to_sector@sector+1,c
 40968  00723E  6A57               	clrf	__parse_buffer_to_sector@sector,c
 40969                           
 40970                           ;api.c: 731: sector |= data[3];
 40971  007240  EE20 F003          	lfsr	2,3
 40972  007244  5054               	movf	__parse_buffer_to_sector@data,w,c
 40973  007246  26D9               	addwf	fsr2l,f,c
 40974  007248  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40975  00724A  22DA               	addwfc	fsr2h,f,c
 40976  00724C  50DF               	movf	indf2,w,c
 40977  00724E  6E56               	movwf	??__parse_buffer_to_sector& (0+255),c
 40978  007250  5056               	movf	??__parse_buffer_to_sector,w,c
 40979  007252  1257               	iorwf	__parse_buffer_to_sector@sector,f,c
 40980                           
 40981                           ;api.c: 734: fat_write_sector_from_buffer(data[1], sector);
 40982  007254  C057  F043         	movff	__parse_buffer_to_sector@sector,fat_write_sector_from_buffer@sector
 40983  007258  C058  F044         	movff	__parse_buffer_to_sector@sector+1,fat_write_sector_from_buffer@sector+1
 40984  00725C  EE20 F001          	lfsr	2,1
 40985  007260  5054               	movf	__parse_buffer_to_sector@data,w,c
 40986  007262  26D9               	addwf	fsr2l,f,c
 40987  007264  5055               	movf	__parse_buffer_to_sector@data+1,w,c
 40988  007266  22DA               	addwfc	fsr2h,f,c
 40989  007268  50DF               	movf	indf2,w,c
 40990  00726A  EC3C  F032         	call	_fat_write_sector_from_buffer
 40991                           
 40992                           ;api.c: 736: return 6;
 40993  00726E  0E06               	movlw	6
 40994  007270  0012               	return	
 40995  007272                     __end_of__parse_buffer_to_sector:
 40996                           	opt stack 0
 40997                           tosu	equ	0xFFF
 40998                           tosh	equ	0xFFE
 40999                           tosl	equ	0xFFD
 41000                           pclath	equ	0xFFA
 41001                           tblptru	equ	0xFF8
 41002                           tblptrh	equ	0xFF7
 41003                           tblptrl	equ	0xFF6
 41004                           tablat	equ	0xFF5
 41005                           prodh	equ	0xFF4
 41006                           prodl	equ	0xFF3
 41007                           intcon	equ	0xFF2
 41008                           intcon2	equ	0xFF1
 41009                           intcon3	equ	0xFF0
 41010                           indf0	equ	0xFEF
 41011                           postinc0	equ	0xFEE
 41012                           fsr0h	equ	0xFEA
 41013                           fsr0l	equ	0xFE9
 41014                           wreg	equ	0xFE8
 41015                           indf1	equ	0xFE7
 41016                           postdec1	equ	0xFE5
 41017                           plusw1	equ	0xFE3
 41018                           fsr1h	equ	0xFE2
 41019                           fsr1l	equ	0xFE1
 41020                           indf2	equ	0xFDF
 41021                           postinc2	equ	0xFDE
 41022                           postdec2	equ	0xFDD
 41023                           plusw2	equ	0xFDB
 41024                           fsr2h	equ	0xFDA
 41025                           fsr2l	equ	0xFD9
 41026                           status	equ	0xFD8
 41027                           
 41028 ;; *************** function _fat_write_sector_from_buffer *****************
 41029 ;; Defined at:
 41030 ;;		line 1395 in file "fat16.c"
 41031 ;; Parameters:    Size  Location     Type
 41032 ;;  file_number     1    wreg     unsigned char 
 41033 ;;  sector          2   66[COMRAM] unsigned int 
 41034 ;; Auto vars:     Size  Location     Type
 41035 ;;  file_number     1   82[COMRAM] unsigned char 
 41036 ;;  file_size       4   72[COMRAM] unsigned long 
 41037 ;;  cluster         2   80[COMRAM] unsigned int 
 41038 ;;  physical_sec    2   78[COMRAM] unsigned int 
 41039 ;;  number_of_cl    2   76[COMRAM] unsigned int 
 41040 ;; Return value:  Size  Location     Type
 41041 ;;                  1    wreg      unsigned char 
 41042 ;; Registers used:
 41043 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 41044 ;; Tracked objects:
 41045 ;;		On entry : 0/0
 41046 ;;		On exit  : 0/0
 41047 ;;		Unchanged: 0/0
 41048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41049 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41050 ;;      Locals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41051 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41052 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41053 ;;Total ram usage:       17 bytes
 41054 ;; Hardware stack levels used:    1
 41055 ;; Hardware stack levels required when called:    7
 41056 ;; This function calls:
 41057 ;;		__data_sector_from_cluster
 41058 ;;		__find_nth_cluster
 41059 ;;		__get_first_cluster
 41060 ;;		__root_is_available
 41061 ;;		_fat_get_file_size
 41062 ;;		_flash_write_page_from_buffer
 41063 ;; This function is called by:
 41064 ;;		__parse_buffer_to_sector
 41065 ;; This function uses a non-reentrant model
 41066 ;;
 41067                           
 41068                           	psect	text211
 41069  006478                     __ptext211:
 41070                           	opt stack 0
 41071  006478                     _fat_write_sector_from_buffer:
 41072                           	opt stack 20
 41073                           
 41074                           ;incstack = 0
 41075                           ;fat_write_sector_from_buffer@file_number stored from wreg
 41076  006478  6E53               	movwf	fat_write_sector_from_buffer@file_number,c
 41077                           
 41078                           ;fat16.c: 1397: uint32_t file_size;;fat16.c: 1398: uint16_t number_of_clusters;;fat16.c:
      +                           1399: uint16_t cluster;;fat16.c: 1400: uint16_t physical_sector;;fat16.c: 1403: if(_roo
      +                          t_is_available(file_number))
 41079  00647A  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 41080  00647C  ECA3  F03D         	call	__root_is_available
 41081  006480  0900               	iorlw	0
 41082  006482  A4D8               	btfss	status,2,c
 41083  006484  0012               	return	
 41084                           
 41085                           ;fat16.c: 1407: };fat16.c: 1410: file_size = fat_get_file_size(file_number);
 41086                           
 41087                           ;fat16.c: 1404: {;fat16.c: 1406: return 0xFF;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 41088  006486  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 41089  006488  EC0B  F03C         	call	_fat_get_file_size
 41090  00648C  C036  F049         	movff	?_fat_get_file_size,fat_write_sector_from_buffer@file_size
 41091  006490  C037  F04A         	movff	?_fat_get_file_size+1,fat_write_sector_from_buffer@file_size+1
 41092  006494  C038  F04B         	movff	?_fat_get_file_size+2,fat_write_sector_from_buffer@file_size+2
 41093  006498  C039  F04C         	movff	?_fat_get_file_size+3,fat_write_sector_from_buffer@file_size+3
 41094                           
 41095                           ;fat16.c: 1413: number_of_clusters = (file_size + 512 - 1) >> 9;
 41096  00649C  0EFF               	movlw	255
 41097  00649E  2449               	addwf	fat_write_sector_from_buffer@file_size,w,c
 41098  0064A0  6E45               	movwf	??_fat_write_sector_from_buffer& (0+255),c
 41099  0064A2  0E01               	movlw	1
 41100  0064A4  204A               	addwfc	fat_write_sector_from_buffer@file_size+1,w,c
 41101  0064A6  6E46               	movwf	(??_fat_write_sector_from_buffer+1)& (0+255),c
 41102  0064A8  0E00               	movlw	0
 41103  0064AA  204B               	addwfc	fat_write_sector_from_buffer@file_size+2,w,c
 41104  0064AC  6E47               	movwf	(??_fat_write_sector_from_buffer+2)& (0+255),c
 41105  0064AE  0E00               	movlw	0
 41106  0064B0  204C               	addwfc	fat_write_sector_from_buffer@file_size+3,w,c
 41107  0064B2  6E48               	movwf	(??_fat_write_sector_from_buffer+3)& (0+255),c
 41108  0064B4  0E0A               	movlw	10
 41109  0064B6  D005               	goto	u10500
 41110  0064B8                     u10505:
 41111  0064B8  90D8               	bcf	status,0,c
 41112  0064BA  3248               	rrcf	??_fat_write_sector_from_buffer+3,f,c
 41113  0064BC  3247               	rrcf	??_fat_write_sector_from_buffer+2,f,c
 41114  0064BE  3246               	rrcf	??_fat_write_sector_from_buffer+1,f,c
 41115  0064C0  3245               	rrcf	??_fat_write_sector_from_buffer,f,c
 41116  0064C2                     u10500:
 41117  0064C2  2EE8               	decfsz	wreg,f,c
 41118  0064C4  D7F9               	goto	u10505
 41119  0064C6  C045  F04D         	movff	??_fat_write_sector_from_buffer,fat_write_sector_from_buffer@number_of_clusters
 41120  0064CA  C046  F04E         	movff	??_fat_write_sector_from_buffer+1,fat_write_sector_from_buffer@number_of_clusters
      +                          +1
 41121                           
 41122                           ;fat16.c: 1414: if(sector > number_of_clusters)
 41123  0064CE  5043               	movf	fat_write_sector_from_buffer@sector,w,c
 41124  0064D0  5C4D               	subwf	fat_write_sector_from_buffer@number_of_clusters,w,c
 41125  0064D2  5044               	movf	fat_write_sector_from_buffer@sector+1,w,c
 41126  0064D4  584E               	subwfb	fat_write_sector_from_buffer@number_of_clusters+1,w,c
 41127  0064D6  A0D8               	btfss	status,0,c
 41128  0064D8  0012               	return	
 41129                           
 41130                           ;fat16.c: 1418: };fat16.c: 1421: cluster = _get_first_cluster(file_number);
 41131                           
 41132                           ;fat16.c: 1415: {;fat16.c: 1417: return 0xFE;;	Return value of _fat_write_sector_from_bu
      +                          ffer is never used
 41133  0064DA  5053               	movf	fat_write_sector_from_buffer@file_number,w,c
 41134  0064DC  EC95  F040         	call	__get_first_cluster
 41135  0064E0  C030  F051         	movff	?__get_first_cluster,fat_write_sector_from_buffer@cluster
 41136  0064E4  C031  F052         	movff	?__get_first_cluster+1,fat_write_sector_from_buffer@cluster+1
 41137                           
 41138                           ;fat16.c: 1422: cluster = _find_nth_cluster(cluster, sector);
 41139  0064E8  C051  F038         	movff	fat_write_sector_from_buffer@cluster,__find_nth_cluster@cluster
 41140  0064EC  C052  F039         	movff	fat_write_sector_from_buffer@cluster+1,__find_nth_cluster@cluster+1
 41141  0064F0  C043  F03A         	movff	fat_write_sector_from_buffer@sector,__find_nth_cluster@n
 41142  0064F4  C044  F03B         	movff	fat_write_sector_from_buffer@sector+1,__find_nth_cluster@n+1
 41143  0064F8  ECCB  F035         	call	__find_nth_cluster	;wreg free
 41144  0064FC  C038  F051         	movff	?__find_nth_cluster,fat_write_sector_from_buffer@cluster
 41145  006500  C039  F052         	movff	?__find_nth_cluster+1,fat_write_sector_from_buffer@cluster+1
 41146                           
 41147                           ;fat16.c: 1425: physical_sector = _data_sector_from_cluster(cluster);
 41148  006504  C051  F001         	movff	fat_write_sector_from_buffer@cluster,__data_sector_from_cluster@fat_cluster
 41149  006508  C052  F002         	movff	fat_write_sector_from_buffer@cluster+1,__data_sector_from_cluster@fat_cluster+1
 41150  00650C  ECB3  F047         	call	__data_sector_from_cluster	;wreg free
 41151  006510  C001  F04F         	movff	?__data_sector_from_cluster,fat_write_sector_from_buffer@physical_sector
 41152  006514  C002  F050         	movff	?__data_sector_from_cluster+1,fat_write_sector_from_buffer@physical_sector+1
 41153                           
 41154                           ;fat16.c: 1428: flash_write_page_from_buffer(physical_sector);
 41155  006518  C04F  F01E         	movff	fat_write_sector_from_buffer@physical_sector,flash_write_page_from_buffer@page
 41156  00651C  C050  F01F         	movff	fat_write_sector_from_buffer@physical_sector+1,flash_write_page_from_buffer@page+
      +                          1
 41157  006520  ECCF  F046         	call	_flash_write_page_from_buffer	;wreg free
 41158  006524  0012               	return	
 41159  006526                     __end_of_fat_write_sector_from_buffer:
 41160                           	opt stack 0
 41161                           tosu	equ	0xFFF
 41162                           tosh	equ	0xFFE
 41163                           tosl	equ	0xFFD
 41164                           pclath	equ	0xFFA
 41165                           tblptru	equ	0xFF8
 41166                           tblptrh	equ	0xFF7
 41167                           tblptrl	equ	0xFF6
 41168                           tablat	equ	0xFF5
 41169                           prodh	equ	0xFF4
 41170                           prodl	equ	0xFF3
 41171                           intcon	equ	0xFF2
 41172                           intcon2	equ	0xFF1
 41173                           intcon3	equ	0xFF0
 41174                           indf0	equ	0xFEF
 41175                           postinc0	equ	0xFEE
 41176                           fsr0h	equ	0xFEA
 41177                           fsr0l	equ	0xFE9
 41178                           wreg	equ	0xFE8
 41179                           indf1	equ	0xFE7
 41180                           postdec1	equ	0xFE5
 41181                           plusw1	equ	0xFE3
 41182                           fsr1h	equ	0xFE2
 41183                           fsr1l	equ	0xFE1
 41184                           indf2	equ	0xFDF
 41185                           postinc2	equ	0xFDE
 41186                           postdec2	equ	0xFDD
 41187                           plusw2	equ	0xFDB
 41188                           fsr2h	equ	0xFDA
 41189                           fsr2l	equ	0xFD9
 41190                           status	equ	0xFD8
 41191                           
 41192 ;; *************** function _flash_write_page_from_buffer *****************
 41193 ;; Defined at:
 41194 ;;		line 534 in file "flash.c"
 41195 ;; Parameters:    Size  Location     Type
 41196 ;;  page            2   29[COMRAM] unsigned int 
 41197 ;; Auto vars:     Size  Location     Type
 41198 ;;		None
 41199 ;; Return value:  Size  Location     Type
 41200 ;;                  1    wreg      void 
 41201 ;; Registers used:
 41202 ;;		wreg, status,2, status,0, cstack
 41203 ;; Tracked objects:
 41204 ;;		On entry : 0/0
 41205 ;;		On exit  : 0/0
 41206 ;;		Unchanged: 0/0
 41207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41208 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41209 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41211 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41212 ;;Total ram usage:        2 bytes
 41213 ;; Hardware stack levels used:    1
 41214 ;; Hardware stack levels required when called:    4
 41215 ;; This function calls:
 41216 ;;		__flash_write_page_from_buffer
 41217 ;;		_spi_set_configuration
 41218 ;; This function is called by:
 41219 ;;		_fat_write_sector_from_buffer
 41220 ;; This function uses a non-reentrant model
 41221 ;;
 41222                           
 41223                           	psect	text212
 41224  008D9E                     __ptext212:
 41225                           	opt stack 0
 41226  008D9E                     _flash_write_page_from_buffer:
 41227                           	opt stack 22
 41228                           
 41229                           ;flash.c: 537: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 41230                           
 41231                           ;incstack = 0
 41232  008D9E  0E00               	movlw	0
 41233  008DA0  EC62  F023         	call	_spi_set_configuration
 41234                           
 41235                           ;flash.c: 539: _flash_write_page_from_buffer(page, FLASH_BUFFER_2);
 41236  008DA4  C01E  F014         	movff	flash_write_page_from_buffer@page,__flash_write_page_from_buffer@page
 41237  008DA8  C01F  F015         	movff	flash_write_page_from_buffer@page+1,__flash_write_page_from_buffer@page+1
 41238  008DAC  0E01               	movlw	1
 41239  008DAE  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 41240  008DB0  ECE6  F03E         	call	__flash_write_page_from_buffer	;wreg free
 41241                           
 41242                           ;flash.c: 542: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 41243  008DB4  0E01               	movlw	1
 41244  008DB6  EC62  F023         	call	_spi_set_configuration
 41245  008DBA  0012               	return		;funcret
 41246  008DBC                     __end_of_flash_write_page_from_buffer:
 41247                           	opt stack 0
 41248                           tosu	equ	0xFFF
 41249                           tosh	equ	0xFFE
 41250                           tosl	equ	0xFFD
 41251                           pclath	equ	0xFFA
 41252                           tblptru	equ	0xFF8
 41253                           tblptrh	equ	0xFF7
 41254                           tblptrl	equ	0xFF6
 41255                           tablat	equ	0xFF5
 41256                           prodh	equ	0xFF4
 41257                           prodl	equ	0xFF3
 41258                           intcon	equ	0xFF2
 41259                           intcon2	equ	0xFF1
 41260                           intcon3	equ	0xFF0
 41261                           indf0	equ	0xFEF
 41262                           postinc0	equ	0xFEE
 41263                           fsr0h	equ	0xFEA
 41264                           fsr0l	equ	0xFE9
 41265                           wreg	equ	0xFE8
 41266                           indf1	equ	0xFE7
 41267                           postdec1	equ	0xFE5
 41268                           plusw1	equ	0xFE3
 41269                           fsr1h	equ	0xFE2
 41270                           fsr1l	equ	0xFE1
 41271                           indf2	equ	0xFDF
 41272                           postinc2	equ	0xFDE
 41273                           postdec2	equ	0xFDD
 41274                           plusw2	equ	0xFDB
 41275                           fsr2h	equ	0xFDA
 41276                           fsr2l	equ	0xFD9
 41277                           status	equ	0xFD8
 41278                           
 41279 ;; *************** function __flash_write_page_from_buffer *****************
 41280 ;; Defined at:
 41281 ;;		line 257 in file "flash.c"
 41282 ;; Parameters:    Size  Location     Type
 41283 ;;  page            2   19[COMRAM] unsigned int 
 41284 ;;  buffer          1   21[COMRAM] enum E6902
 41285 ;; Auto vars:     Size  Location     Type
 41286 ;;  command         4   25[COMRAM] unsigned char [4]
 41287 ;; Return value:  Size  Location     Type
 41288 ;;                  1    wreg      void 
 41289 ;; Registers used:
 41290 ;;		wreg, status,2, status,0, cstack
 41291 ;; Tracked objects:
 41292 ;;		On entry : 0/0
 41293 ;;		On exit  : 0/0
 41294 ;;		Unchanged: 0/0
 41295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41296 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41297 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41298 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41299 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41300 ;;Total ram usage:       10 bytes
 41301 ;; Hardware stack levels used:    1
 41302 ;; Hardware stack levels required when called:    3
 41303 ;; This function calls:
 41304 ;;		__flash_is_busy
 41305 ;;		_spi_tx
 41306 ;; This function is called by:
 41307 ;;		_flash_sector_write
 41308 ;;		_flash_partial_write
 41309 ;;		_flash_write_page_from_buffer
 41310 ;; This function uses a non-reentrant model
 41311 ;;
 41312                           
 41313                           	psect	text213
 41314  007DCC                     __ptext213:
 41315                           	opt stack 0
 41316  007DCC                     __flash_write_page_from_buffer:
 41317                           	opt stack 23
 41318                           
 41319                           ;flash.c: 259: uint8_t command[4];;flash.c: 262: while(_flash_is_busy());
 41320                           
 41321                           ;incstack = 0
 41322  007DCC  EC71  F046         	call	__flash_is_busy	;wreg free
 41323  007DD0  0900               	iorlw	0
 41324  007DD2  A4D8               	btfss	status,2,c
 41325  007DD4  D7FB               	goto	__flash_write_page_from_buffer
 41326                           
 41327                           ;flash.c: 265: if(buffer==FLASH_BUFFER_1)
 41328  007DD6  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 41329  007DD8  A4D8               	btfss	status,2,c
 41330  007DDA  D002               	goto	l1794
 41331                           
 41332                           ;flash.c: 266: command[0] = 0x83;
 41333  007DDC  0E83               	movlw	131
 41334  007DDE  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41335  007DE0                     l1794:
 41336                           
 41337                           ;flash.c: 267: if(buffer==FLASH_BUFFER_2)
 41338  007DE0  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 41339  007DE2  A4D8               	btfss	status,2,c
 41340  007DE4  D002               	goto	l1795
 41341                           
 41342                           ;flash.c: 268: command[0] = 0x86;
 41343  007DE6  0E86               	movlw	134
 41344  007DE8  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 41345  007DEA                     l1795:
 41346                           
 41347                           ;flash.c: 270: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 41348  007DEA  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 41349  007DEE  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 41350  007DF2  0E07               	movlw	7
 41351  007DF4  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 41352  007DF6                     u7165:
 41353  007DF6  90D8               	bcf	status,0,c
 41354  007DF8  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 41355  007DFA  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 41356  007DFC  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 41357  007DFE  D7FB               	goto	u7165
 41358  007E00  5017               	movf	??__flash_write_page_from_buffer,w,c
 41359  007E02  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 41360                           
 41361                           ;flash.c: 271: command[2] = ((unsigned char)((page<<1)&0xFF));
 41362  007E04  5014               	movf	__flash_write_page_from_buffer@page,w,c
 41363  007E06  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 41364  007E08  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 41365                           
 41366                           ;flash.c: 272: command[3] = 0x00;
 41367  007E0A  0E00               	movlw	0
 41368  007E0C  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 41369                           
 41370                           ;flash.c: 275: spi_tx(command, 4);
 41371  007E0E  0E1A               	movlw	low __flash_write_page_from_buffer@command
 41372  007E10  6E01               	movwf	spi_tx@data,c
 41373  007E12  0E00               	movlw	high __flash_write_page_from_buffer@command
 41374  007E14  6E02               	movwf	spi_tx@data+1,c
 41375  007E16  0E00               	movlw	0
 41376  007E18  6E04               	movwf	spi_tx@length+1,c
 41377  007E1A  0E04               	movlw	4
 41378  007E1C  6E03               	movwf	spi_tx@length,c
 41379  007E1E  EC12  F03F         	call	_spi_tx	;wreg free
 41380  007E22  0012               	return		;funcret
 41381  007E24                     __end_of__flash_write_page_from_buffer:
 41382                           	opt stack 0
 41383                           tosu	equ	0xFFF
 41384                           tosh	equ	0xFFE
 41385                           tosl	equ	0xFFD
 41386                           pclath	equ	0xFFA
 41387                           tblptru	equ	0xFF8
 41388                           tblptrh	equ	0xFF7
 41389                           tblptrl	equ	0xFF6
 41390                           tablat	equ	0xFF5
 41391                           prodh	equ	0xFF4
 41392                           prodl	equ	0xFF3
 41393                           intcon	equ	0xFF2
 41394                           intcon2	equ	0xFF1
 41395                           intcon3	equ	0xFF0
 41396                           indf0	equ	0xFEF
 41397                           postinc0	equ	0xFEE
 41398                           fsr0h	equ	0xFEA
 41399                           fsr0l	equ	0xFE9
 41400                           wreg	equ	0xFE8
 41401                           indf1	equ	0xFE7
 41402                           postdec1	equ	0xFE5
 41403                           plusw1	equ	0xFE3
 41404                           fsr1h	equ	0xFE2
 41405                           fsr1l	equ	0xFE1
 41406                           indf2	equ	0xFDF
 41407                           postinc2	equ	0xFDE
 41408                           postdec2	equ	0xFDD
 41409                           plusw2	equ	0xFDB
 41410                           fsr2h	equ	0xFDA
 41411                           fsr2l	equ	0xFD9
 41412                           status	equ	0xFD8
 41413                           
 41414 ;; *************** function _fat_get_file_size *****************
 41415 ;; Defined at:
 41416 ;;		line 562 in file "fat16.c"
 41417 ;; Parameters:    Size  Location     Type
 41418 ;;  file_number     1    wreg     unsigned char 
 41419 ;; Auto vars:     Size  Location     Type
 41420 ;;  file_number     1   65[COMRAM] unsigned char 
 41421 ;;  file_size       4   61[COMRAM] unsigned long 
 41422 ;;  offset          2   59[COMRAM] unsigned int 
 41423 ;;  sector          2   57[COMRAM] unsigned int 
 41424 ;; Return value:  Size  Location     Type
 41425 ;;                  4   53[COMRAM] unsigned long 
 41426 ;; Registers used:
 41427 ;;		wreg, status,2, status,0, cstack
 41428 ;; Tracked objects:
 41429 ;;		On entry : 0/0
 41430 ;;		On exit  : 0/0
 41431 ;;		Unchanged: 0/0
 41432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41433 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41434 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41435 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41436 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41437 ;;Total ram usage:       13 bytes
 41438 ;; Hardware stack levels used:    1
 41439 ;; Hardware stack levels required when called:    6
 41440 ;; This function calls:
 41441 ;;		__offset_from_file_number
 41442 ;;		__root_is_available
 41443 ;;		__sector_from_file_number
 41444 ;;		_flash_partial_read
 41445 ;; This function is called by:
 41446 ;;		_fat_append_to_file
 41447 ;;		_fat_copy_sector_to_buffer
 41448 ;;		_fat_write_sector_from_buffer
 41449 ;;		__bootloader_find_file
 41450 ;;		__bootloader_verify_file
 41451 ;;		__fill_buffer_read_file
 41452 ;; This function uses a non-reentrant model
 41453 ;;
 41454                           
 41455                           	psect	text214
 41456  007816                     __ptext214:
 41457                           	opt stack 0
 41458  007816                     _fat_get_file_size:
 41459                           	opt stack 22
 41460                           
 41461                           ;incstack = 0
 41462                           ;fat_get_file_size@file_number stored from wreg
 41463  007816  6E42               	movwf	fat_get_file_size@file_number,c
 41464                           
 41465                           ;fat16.c: 564: uint32_t file_size;;fat16.c: 565: uint16_t sector;;fat16.c: 566: uint16_t
      +                           offset;;fat16.c: 569: if(_root_is_available(file_number))
 41466  007818  5042               	movf	fat_get_file_size@file_number,w,c
 41467  00781A  ECA3  F03D         	call	__root_is_available
 41468  00781E  0900               	iorlw	0
 41469  007820  B4D8               	btfsc	status,2,c
 41470  007822  D005               	goto	l2062
 41471                           
 41472                           ;fat16.c: 570: {;fat16.c: 572: return 0xFFFFFFFF;
 41473  007824  6836               	setf	?_fat_get_file_size,c
 41474  007826  6837               	setf	?_fat_get_file_size+1,c
 41475  007828  6838               	setf	?_fat_get_file_size+2,c
 41476  00782A  6839               	setf	?_fat_get_file_size+3,c
 41477  00782C  0012               	return	
 41478  00782E                     l2062:
 41479                           
 41480                           ;fat16.c: 573: };fat16.c: 576: sector = _sector_from_file_number(file_number);
 41481  00782E  5042               	movf	fat_get_file_size@file_number,w,c
 41482  007830  EC67  F045         	call	__sector_from_file_number
 41483  007834  C001  F03A         	movff	?__sector_from_file_number,fat_get_file_size@sector
 41484  007838  C002  F03B         	movff	?__sector_from_file_number+1,fat_get_file_size@sector+1
 41485                           
 41486                           ;fat16.c: 577: offset = _offset_from_file_number(file_number);
 41487  00783C  5042               	movf	fat_get_file_size@file_number,w,c
 41488  00783E  ECF3  F045         	call	__offset_from_file_number
 41489  007842  C001  F03C         	movff	?__offset_from_file_number,fat_get_file_size@offset
 41490  007846  C002  F03D         	movff	?__offset_from_file_number+1,fat_get_file_size@offset+1
 41491                           
 41492                           ;fat16.c: 580: flash_partial_read(sector, offset+28, 4, &file_size);
 41493  00784A  C03A  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 41494  00784E  C03B  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 41495  007852  0E1C               	movlw	28
 41496  007854  243C               	addwf	fat_get_file_size@offset,w,c
 41497  007856  6E2A               	movwf	flash_partial_read@start,c
 41498  007858  0E00               	movlw	0
 41499  00785A  203D               	addwfc	fat_get_file_size@offset+1,w,c
 41500  00785C  6E2B               	movwf	flash_partial_read@start+1,c
 41501  00785E  0E00               	movlw	0
 41502  007860  6E2D               	movwf	flash_partial_read@length+1,c
 41503  007862  0E04               	movlw	4
 41504  007864  6E2C               	movwf	flash_partial_read@length,c
 41505  007866  0E3E               	movlw	low fat_get_file_size@file_size
 41506  007868  6E2E               	movwf	flash_partial_read@data,c
 41507  00786A  0E00               	movlw	high fat_get_file_size@file_size
 41508  00786C  6E2F               	movwf	flash_partial_read@data+1,c
 41509  00786E  EC80  F044         	call	_flash_partial_read	;wreg free
 41510                           
 41511                           ;fat16.c: 583: return file_size;
 41512  007872  C03E  F036         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 41513  007876  C03F  F037         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 41514  00787A  C040  F038         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 41515  00787E  C041  F039         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 41516  007882  0012               	return	
 41517  007884                     __end_of_fat_get_file_size:
 41518                           	opt stack 0
 41519                           tosu	equ	0xFFF
 41520                           tosh	equ	0xFFE
 41521                           tosl	equ	0xFFD
 41522                           pclath	equ	0xFFA
 41523                           tblptru	equ	0xFF8
 41524                           tblptrh	equ	0xFF7
 41525                           tblptrl	equ	0xFF6
 41526                           tablat	equ	0xFF5
 41527                           prodh	equ	0xFF4
 41528                           prodl	equ	0xFF3
 41529                           intcon	equ	0xFF2
 41530                           intcon2	equ	0xFF1
 41531                           intcon3	equ	0xFF0
 41532                           indf0	equ	0xFEF
 41533                           postinc0	equ	0xFEE
 41534                           fsr0h	equ	0xFEA
 41535                           fsr0l	equ	0xFE9
 41536                           wreg	equ	0xFE8
 41537                           indf1	equ	0xFE7
 41538                           postdec1	equ	0xFE5
 41539                           plusw1	equ	0xFE3
 41540                           fsr1h	equ	0xFE2
 41541                           fsr1l	equ	0xFE1
 41542                           indf2	equ	0xFDF
 41543                           postinc2	equ	0xFDE
 41544                           postdec2	equ	0xFDD
 41545                           plusw2	equ	0xFDB
 41546                           fsr2h	equ	0xFDA
 41547                           fsr2l	equ	0xFD9
 41548                           status	equ	0xFD8
 41549                           
 41550 ;; *************** function __root_is_available *****************
 41551 ;; Defined at:
 41552 ;;		line 408 in file "fat16.c"
 41553 ;; Parameters:    Size  Location     Type
 41554 ;;  file_number     1    wreg     unsigned char 
 41555 ;; Auto vars:     Size  Location     Type
 41556 ;;  file_number     1   51[COMRAM] unsigned char 
 41557 ;;  offset          2   49[COMRAM] unsigned int 
 41558 ;;  root_sector     2   47[COMRAM] unsigned int 
 41559 ;;  first_byte      1   52[COMRAM] unsigned char 
 41560 ;; Return value:  Size  Location     Type
 41561 ;;                  1    wreg      unsigned char 
 41562 ;; Registers used:
 41563 ;;		wreg, status,2, status,0, cstack
 41564 ;; Tracked objects:
 41565 ;;		On entry : 0/0
 41566 ;;		On exit  : 0/0
 41567 ;;		Unchanged: 0/0
 41568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41569 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41570 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41571 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41572 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41573 ;;Total ram usage:        6 bytes
 41574 ;; Hardware stack levels used:    1
 41575 ;; Hardware stack levels required when called:    5
 41576 ;; This function calls:
 41577 ;;		__offset_from_file_number
 41578 ;;		__sector_from_file_number
 41579 ;;		_flash_partial_read
 41580 ;; This function is called by:
 41581 ;;		__get_available_root_entry
 41582 ;;		_fat_get_file_size
 41583 ;;		_fat_delete_file
 41584 ;;		_fat_append_to_file
 41585 ;;		_fat_resize_file
 41586 ;;		_fat_copy_sector_to_buffer
 41587 ;;		_fat_write_sector_from_buffer
 41588 ;; This function uses a non-reentrant model
 41589 ;;
 41590                           
 41591                           	psect	text215
 41592  007B46                     __ptext215:
 41593                           	opt stack 0
 41594  007B46                     __root_is_available:
 41595                           	opt stack 22
 41596                           
 41597                           ;incstack = 0
 41598                           ;__root_is_available@file_number stored from wreg
 41599  007B46  6E34               	movwf	__root_is_available@file_number,c
 41600                           
 41601                           ;fat16.c: 410: uint16_t root_sector;;fat16.c: 411: uint16_t offset;;fat16.c: 412: uint8_
      +                          t first_byte;;fat16.c: 416: if(file_number>=64)
 41602  007B48  0E3F               	movlw	63
 41603  007B4A  6434               	cpfsgt	__root_is_available@file_number,c
 41604  007B4C  D002               	goto	l2023
 41605                           
 41606                           ;fat16.c: 417: {;fat16.c: 419: return 0;
 41607  007B4E  0E00               	movlw	0
 41608  007B50  0012               	return	
 41609  007B52                     l2023:
 41610                           
 41611                           ;fat16.c: 420: };fat16.c: 423: root_sector = _sector_from_file_number(file_number);
 41612  007B52  5034               	movf	__root_is_available@file_number,w,c
 41613  007B54  EC67  F045         	call	__sector_from_file_number
 41614  007B58  C001  F030         	movff	?__sector_from_file_number,__root_is_available@root_sector
 41615  007B5C  C002  F031         	movff	?__sector_from_file_number+1,__root_is_available@root_sector+1
 41616                           
 41617                           ;fat16.c: 424: offset = _offset_from_file_number(file_number);
 41618  007B60  5034               	movf	__root_is_available@file_number,w,c
 41619  007B62  ECF3  F045         	call	__offset_from_file_number
 41620  007B66  C001  F032         	movff	?__offset_from_file_number,__root_is_available@offset
 41621  007B6A  C002  F033         	movff	?__offset_from_file_number+1,__root_is_available@offset+1
 41622                           
 41623                           ;fat16.c: 427: flash_partial_read(root_sector, offset, 1, &first_byte);
 41624  007B6E  C030  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 41625  007B72  C031  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 41626  007B76  C032  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 41627  007B7A  C033  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 41628  007B7E  0E00               	movlw	0
 41629  007B80  6E2D               	movwf	flash_partial_read@length+1,c
 41630  007B82  0E01               	movlw	1
 41631  007B84  6E2C               	movwf	flash_partial_read@length,c
 41632  007B86  0E35               	movlw	low __root_is_available@first_byte
 41633  007B88  6E2E               	movwf	flash_partial_read@data,c
 41634  007B8A  0E00               	movlw	high __root_is_available@first_byte
 41635  007B8C  6E2F               	movwf	flash_partial_read@data+1,c
 41636  007B8E  EC80  F044         	call	_flash_partial_read	;wreg free
 41637                           
 41638                           ;fat16.c: 430: if((first_byte==0x00) || (first_byte==0xE5))
 41639  007B92  5035               	movf	__root_is_available@first_byte,w,c
 41640  007B94  B4D8               	btfsc	status,2,c
 41641  007B96  D004               	goto	u8200
 41642  007B98  0EE5               	movlw	229
 41643  007B9A  1835               	xorwf	__root_is_available@first_byte,w,c
 41644  007B9C  A4D8               	btfss	status,2,c
 41645  007B9E  D002               	goto	l2025
 41646  007BA0                     u8200:
 41647                           
 41648                           ;fat16.c: 431: {;fat16.c: 433: return 1;
 41649  007BA0  0E01               	movlw	1
 41650                           
 41651                           ;fat16.c: 434: }
 41652  007BA2  0012               	return	
 41653  007BA4                     l2025:
 41654                           
 41655                           ;fat16.c: 435: else;fat16.c: 436: {;fat16.c: 438: return 0;
 41656  007BA4  0E00               	movlw	0
 41657  007BA6  0012               	return	
 41658  007BA8                     __end_of__root_is_available:
 41659                           	opt stack 0
 41660                           tosu	equ	0xFFF
 41661                           tosh	equ	0xFFE
 41662                           tosl	equ	0xFFD
 41663                           pclath	equ	0xFFA
 41664                           tblptru	equ	0xFF8
 41665                           tblptrh	equ	0xFF7
 41666                           tblptrl	equ	0xFF6
 41667                           tablat	equ	0xFF5
 41668                           prodh	equ	0xFF4
 41669                           prodl	equ	0xFF3
 41670                           intcon	equ	0xFF2
 41671                           intcon2	equ	0xFF1
 41672                           intcon3	equ	0xFF0
 41673                           indf0	equ	0xFEF
 41674                           postinc0	equ	0xFEE
 41675                           fsr0h	equ	0xFEA
 41676                           fsr0l	equ	0xFE9
 41677                           wreg	equ	0xFE8
 41678                           indf1	equ	0xFE7
 41679                           postdec1	equ	0xFE5
 41680                           plusw1	equ	0xFE3
 41681                           fsr1h	equ	0xFE2
 41682                           fsr1l	equ	0xFE1
 41683                           indf2	equ	0xFDF
 41684                           postinc2	equ	0xFDE
 41685                           postdec2	equ	0xFDD
 41686                           plusw2	equ	0xFDB
 41687                           fsr2h	equ	0xFDA
 41688                           fsr2l	equ	0xFD9
 41689                           status	equ	0xFD8
 41690                           
 41691 ;; *************** function __get_first_cluster *****************
 41692 ;; Defined at:
 41693 ;;		line 501 in file "fat16.c"
 41694 ;; Parameters:    Size  Location     Type
 41695 ;;  file_number     1    wreg     unsigned char 
 41696 ;; Auto vars:     Size  Location     Type
 41697 ;;  file_number     1   55[COMRAM] unsigned char 
 41698 ;;  first_cluste    2   53[COMRAM] unsigned int 
 41699 ;;  offset          2   51[COMRAM] unsigned int 
 41700 ;;  sector          2   49[COMRAM] unsigned int 
 41701 ;; Return value:  Size  Location     Type
 41702 ;;                  2   47[COMRAM] unsigned int 
 41703 ;; Registers used:
 41704 ;;		wreg, status,2, status,0, cstack
 41705 ;; Tracked objects:
 41706 ;;		On entry : 0/0
 41707 ;;		On exit  : 0/0
 41708 ;;		Unchanged: 0/0
 41709 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41710 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41711 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41712 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41713 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41714 ;;Total ram usage:        9 bytes
 41715 ;; Hardware stack levels used:    1
 41716 ;; Hardware stack levels required when called:    5
 41717 ;; This function calls:
 41718 ;;		__offset_from_file_number
 41719 ;;		__sector_from_file_number
 41720 ;;		_flash_partial_read
 41721 ;; This function is called by:
 41722 ;;		_fat_delete_file
 41723 ;;		_fat_copy_sector_to_buffer
 41724 ;;		_fat_write_sector_from_buffer
 41725 ;; This function uses a non-reentrant model
 41726 ;;
 41727                           
 41728                           	psect	text216
 41729  00812A                     __ptext216:
 41730                           	opt stack 0
 41731  00812A                     __get_first_cluster:
 41732                           	opt stack 21
 41733                           
 41734                           ;incstack = 0
 41735                           ;__get_first_cluster@file_number stored from wreg
 41736  00812A  6E38               	movwf	__get_first_cluster@file_number,c
 41737                           
 41738                           ;fat16.c: 503: uint16_t first_cluster;;fat16.c: 504: uint16_t sector;;fat16.c: 505: uint
      +                          16_t offset;;fat16.c: 508: sector = _sector_from_file_number(file_number);
 41739  00812C  5038               	movf	__get_first_cluster@file_number,w,c
 41740  00812E  EC67  F045         	call	__sector_from_file_number
 41741  008132  C001  F032         	movff	?__sector_from_file_number,__get_first_cluster@sector
 41742  008136  C002  F033         	movff	?__sector_from_file_number+1,__get_first_cluster@sector+1
 41743                           
 41744                           ;fat16.c: 509: offset = _offset_from_file_number(file_number);
 41745  00813A  5038               	movf	__get_first_cluster@file_number,w,c
 41746  00813C  ECF3  F045         	call	__offset_from_file_number
 41747  008140  C001  F034         	movff	?__offset_from_file_number,__get_first_cluster@offset
 41748  008144  C002  F035         	movff	?__offset_from_file_number+1,__get_first_cluster@offset+1
 41749                           
 41750                           ;fat16.c: 510: offset += 26;
 41751  008148  0E1A               	movlw	26
 41752  00814A  2634               	addwf	__get_first_cluster@offset,f,c
 41753  00814C  0E00               	movlw	0
 41754  00814E  2235               	addwfc	__get_first_cluster@offset+1,f,c
 41755                           
 41756                           ;fat16.c: 513: flash_partial_read(sector, offset, 2, &first_cluster);
 41757  008150  C032  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 41758  008154  C033  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 41759  008158  C034  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 41760  00815C  C035  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 41761  008160  0E00               	movlw	0
 41762  008162  6E2D               	movwf	flash_partial_read@length+1,c
 41763  008164  0E02               	movlw	2
 41764  008166  6E2C               	movwf	flash_partial_read@length,c
 41765  008168  0E36               	movlw	low __get_first_cluster@first_cluster
 41766  00816A  6E2E               	movwf	flash_partial_read@data,c
 41767  00816C  0E00               	movlw	high __get_first_cluster@first_cluster
 41768  00816E  6E2F               	movwf	flash_partial_read@data+1,c
 41769  008170  EC80  F044         	call	_flash_partial_read	;wreg free
 41770                           
 41771                           ;fat16.c: 514: return first_cluster;
 41772  008174  C036  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 41773  008178  C037  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 41774  00817C  0012               	return	
 41775  00817E                     __end_of__get_first_cluster:
 41776                           	opt stack 0
 41777                           tosu	equ	0xFFF
 41778                           tosh	equ	0xFFE
 41779                           tosl	equ	0xFFD
 41780                           pclath	equ	0xFFA
 41781                           tblptru	equ	0xFF8
 41782                           tblptrh	equ	0xFF7
 41783                           tblptrl	equ	0xFF6
 41784                           tablat	equ	0xFF5
 41785                           prodh	equ	0xFF4
 41786                           prodl	equ	0xFF3
 41787                           intcon	equ	0xFF2
 41788                           intcon2	equ	0xFF1
 41789                           intcon3	equ	0xFF0
 41790                           indf0	equ	0xFEF
 41791                           postinc0	equ	0xFEE
 41792                           fsr0h	equ	0xFEA
 41793                           fsr0l	equ	0xFE9
 41794                           wreg	equ	0xFE8
 41795                           indf1	equ	0xFE7
 41796                           postdec1	equ	0xFE5
 41797                           plusw1	equ	0xFE3
 41798                           fsr1h	equ	0xFE2
 41799                           fsr1l	equ	0xFE1
 41800                           indf2	equ	0xFDF
 41801                           postinc2	equ	0xFDE
 41802                           postdec2	equ	0xFDD
 41803                           plusw2	equ	0xFDB
 41804                           fsr2h	equ	0xFDA
 41805                           fsr2l	equ	0xFD9
 41806                           status	equ	0xFD8
 41807                           
 41808 ;; *************** function __sector_from_file_number *****************
 41809 ;; Defined at:
 41810 ;;		line 52 in file "fat16.c"
 41811 ;; Parameters:    Size  Location     Type
 41812 ;;  file_number     1    wreg     unsigned char 
 41813 ;; Auto vars:     Size  Location     Type
 41814 ;;  file_number     1    2[COMRAM] unsigned char 
 41815 ;;  sector          2    3[COMRAM] unsigned int 
 41816 ;; Return value:  Size  Location     Type
 41817 ;;                  2    0[COMRAM] unsigned int 
 41818 ;; Registers used:
 41819 ;;		wreg, status,2, status,0
 41820 ;; Tracked objects:
 41821 ;;		On entry : 0/0
 41822 ;;		On exit  : 0/0
 41823 ;;		Unchanged: 0/0
 41824 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41825 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41826 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41827 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41828 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41829 ;;Total ram usage:        5 bytes
 41830 ;; Hardware stack levels used:    1
 41831 ;; This function calls:
 41832 ;;		Nothing
 41833 ;; This function is called by:
 41834 ;;		__root_is_available
 41835 ;;		__write_root
 41836 ;;		__delete_root
 41837 ;;		__get_first_cluster
 41838 ;;		_fat_get_file_size
 41839 ;;		_fat_get_file_information
 41840 ;; This function uses a non-reentrant model
 41841 ;;
 41842                           
 41843                           	psect	text217
 41844  008ACE                     __ptext217:
 41845                           	opt stack 0
 41846  008ACE                     __sector_from_file_number:
 41847                           	opt stack 27
 41848                           
 41849                           ;incstack = 0
 41850                           ;__sector_from_file_number@file_number stored from wreg
 41851  008ACE  6E03               	movwf	__sector_from_file_number@file_number,c
 41852                           
 41853                           ;fat16.c: 54: uint16_t sector;;fat16.c: 55: sector = (uint16_t) file_number;
 41854  008AD0  C003  F004         	movff	__sector_from_file_number@file_number,__sector_from_file_number@sector
 41855  008AD4  6A05               	clrf	__sector_from_file_number@sector+1,c
 41856                           
 41857                           ;fat16.c: 56: sector >>= 4;
 41858  008AD6  3A04               	swapf	__sector_from_file_number@sector,f,c
 41859  008AD8  3A05               	swapf	__sector_from_file_number@sector+1,f,c
 41860  008ADA  0E0F               	movlw	15
 41861  008ADC  1604               	andwf	__sector_from_file_number@sector,f,c
 41862  008ADE  5005               	movf	__sector_from_file_number@sector+1,w,c
 41863  008AE0  0BF0               	andlw	240
 41864  008AE2  1204               	iorwf	__sector_from_file_number@sector,f,c
 41865  008AE4  0E0F               	movlw	15
 41866  008AE6  1605               	andwf	__sector_from_file_number@sector+1,f,c
 41867                           
 41868                           ;fat16.c: 57: sector += 34;
 41869  008AE8  0E22               	movlw	34
 41870  008AEA  2604               	addwf	__sector_from_file_number@sector,f,c
 41871  008AEC  0E00               	movlw	0
 41872  008AEE  2205               	addwfc	__sector_from_file_number@sector+1,f,c
 41873                           
 41874                           ;fat16.c: 58: return sector;
 41875  008AF0  C004  F001         	movff	__sector_from_file_number@sector,?__sector_from_file_number
 41876  008AF4  C005  F002         	movff	__sector_from_file_number@sector+1,?__sector_from_file_number+1
 41877  008AF8  0012               	return	
 41878  008AFA                     __end_of__sector_from_file_number:
 41879                           	opt stack 0
 41880                           tosu	equ	0xFFF
 41881                           tosh	equ	0xFFE
 41882                           tosl	equ	0xFFD
 41883                           pclath	equ	0xFFA
 41884                           tblptru	equ	0xFF8
 41885                           tblptrh	equ	0xFF7
 41886                           tblptrl	equ	0xFF6
 41887                           tablat	equ	0xFF5
 41888                           prodh	equ	0xFF4
 41889                           prodl	equ	0xFF3
 41890                           intcon	equ	0xFF2
 41891                           intcon2	equ	0xFF1
 41892                           intcon3	equ	0xFF0
 41893                           indf0	equ	0xFEF
 41894                           postinc0	equ	0xFEE
 41895                           fsr0h	equ	0xFEA
 41896                           fsr0l	equ	0xFE9
 41897                           wreg	equ	0xFE8
 41898                           indf1	equ	0xFE7
 41899                           postdec1	equ	0xFE5
 41900                           plusw1	equ	0xFE3
 41901                           fsr1h	equ	0xFE2
 41902                           fsr1l	equ	0xFE1
 41903                           indf2	equ	0xFDF
 41904                           postinc2	equ	0xFDE
 41905                           postdec2	equ	0xFDD
 41906                           plusw2	equ	0xFDB
 41907                           fsr2h	equ	0xFDA
 41908                           fsr2l	equ	0xFD9
 41909                           status	equ	0xFD8
 41910                           
 41911 ;; *************** function __offset_from_file_number *****************
 41912 ;; Defined at:
 41913 ;;		line 61 in file "fat16.c"
 41914 ;; Parameters:    Size  Location     Type
 41915 ;;  file_number     1    wreg     unsigned char 
 41916 ;; Auto vars:     Size  Location     Type
 41917 ;;  file_number     1    2[COMRAM] unsigned char 
 41918 ;;  offset          2    3[COMRAM] unsigned int 
 41919 ;; Return value:  Size  Location     Type
 41920 ;;                  2    0[COMRAM] unsigned int 
 41921 ;; Registers used:
 41922 ;;		wreg, status,2, status,0
 41923 ;; Tracked objects:
 41924 ;;		On entry : 0/0
 41925 ;;		On exit  : 0/0
 41926 ;;		Unchanged: 0/0
 41927 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 41928 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41929 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41930 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41931 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 41932 ;;Total ram usage:        5 bytes
 41933 ;; Hardware stack levels used:    1
 41934 ;; This function calls:
 41935 ;;		Nothing
 41936 ;; This function is called by:
 41937 ;;		__root_is_available
 41938 ;;		__write_root
 41939 ;;		__delete_root
 41940 ;;		__get_first_cluster
 41941 ;;		_fat_get_file_size
 41942 ;;		_fat_get_file_information
 41943 ;; This function uses a non-reentrant model
 41944 ;;
 41945                           
 41946                           	psect	text218
 41947  008BE6                     __ptext218:
 41948                           	opt stack 0
 41949  008BE6                     __offset_from_file_number:
 41950                           	opt stack 26
 41951                           
 41952                           ;incstack = 0
 41953                           ;__offset_from_file_number@file_number stored from wreg
 41954  008BE6  6E03               	movwf	__offset_from_file_number@file_number,c
 41955                           
 41956                           ;fat16.c: 63: uint16_t offset;;fat16.c: 64: offset = file_number;
 41957  008BE8  C003  F004         	movff	__offset_from_file_number@file_number,__offset_from_file_number@offset
 41958  008BEC  6A05               	clrf	__offset_from_file_number@offset+1,c
 41959                           
 41960                           ;fat16.c: 65: offset &= 0b1111;
 41961  008BEE  0E0F               	movlw	15
 41962  008BF0  1604               	andwf	__offset_from_file_number@offset,f,c
 41963  008BF2  0E00               	movlw	0
 41964  008BF4  1605               	andwf	__offset_from_file_number@offset+1,f,c
 41965                           
 41966                           ;fat16.c: 66: offset <<= 5;
 41967  008BF6  0E05               	movlw	5
 41968  008BF8                     u7435:
 41969  008BF8  90D8               	bcf	status,0,c
 41970  008BFA  3604               	rlcf	__offset_from_file_number@offset,f,c
 41971  008BFC  3605               	rlcf	__offset_from_file_number@offset+1,f,c
 41972  008BFE  2EE8               	decfsz	wreg,f,c
 41973  008C00  D7FB               	goto	u7435
 41974                           
 41975                           ;fat16.c: 67: return offset;
 41976  008C02  C004  F001         	movff	__offset_from_file_number@offset,?__offset_from_file_number
 41977  008C06  C005  F002         	movff	__offset_from_file_number@offset+1,?__offset_from_file_number+1
 41978  008C0A  0012               	return	
 41979  008C0C                     __end_of__offset_from_file_number:
 41980                           	opt stack 0
 41981                           tosu	equ	0xFFF
 41982                           tosh	equ	0xFFE
 41983                           tosl	equ	0xFFD
 41984                           pclath	equ	0xFFA
 41985                           tblptru	equ	0xFF8
 41986                           tblptrh	equ	0xFF7
 41987                           tblptrl	equ	0xFF6
 41988                           tablat	equ	0xFF5
 41989                           prodh	equ	0xFF4
 41990                           prodl	equ	0xFF3
 41991                           intcon	equ	0xFF2
 41992                           intcon2	equ	0xFF1
 41993                           intcon3	equ	0xFF0
 41994                           indf0	equ	0xFEF
 41995                           postinc0	equ	0xFEE
 41996                           fsr0h	equ	0xFEA
 41997                           fsr0l	equ	0xFE9
 41998                           wreg	equ	0xFE8
 41999                           indf1	equ	0xFE7
 42000                           postdec1	equ	0xFE5
 42001                           plusw1	equ	0xFE3
 42002                           fsr1h	equ	0xFE2
 42003                           fsr1l	equ	0xFE1
 42004                           indf2	equ	0xFDF
 42005                           postinc2	equ	0xFDE
 42006                           postdec2	equ	0xFDD
 42007                           plusw2	equ	0xFDB
 42008                           fsr2h	equ	0xFDA
 42009                           fsr2l	equ	0xFD9
 42010                           status	equ	0xFD8
 42011                           
 42012 ;; *************** function __find_nth_cluster *****************
 42013 ;; Defined at:
 42014 ;;		line 182 in file "fat16.c"
 42015 ;; Parameters:    Size  Location     Type
 42016 ;;  cluster         2   55[COMRAM] unsigned int 
 42017 ;;  n               2   57[COMRAM] unsigned int 
 42018 ;; Auto vars:     Size  Location     Type
 42019 ;;  sector          2   63[COMRAM] unsigned int 
 42020 ;;  sector_in_bu    2   61[COMRAM] unsigned int 
 42021 ;;  offset          2   59[COMRAM] unsigned int 
 42022 ;; Return value:  Size  Location     Type
 42023 ;;                  2   55[COMRAM] unsigned int 
 42024 ;; Registers used:
 42025 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 42026 ;; Tracked objects:
 42027 ;;		On entry : 0/0
 42028 ;;		On exit  : 0/0
 42029 ;;		Unchanged: 0/0
 42030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42031 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42032 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42033 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42034 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42035 ;;Total ram usage:       10 bytes
 42036 ;; Hardware stack levels used:    1
 42037 ;; Hardware stack levels required when called:    6
 42038 ;; This function calls:
 42039 ;;		__data_sector_from_cluster
 42040 ;;		__fat_offset_from_cluster
 42041 ;;		__read_fat
 42042 ;;		__read_value_from_offset
 42043 ;;		_flash_sector_read
 42044 ;; This function is called by:
 42045 ;;		_fat_read_from_file_fast
 42046 ;;		_fat_modify_file
 42047 ;;		_fat_copy_sector_to_buffer
 42048 ;;		_fat_write_sector_from_buffer
 42049 ;; This function uses a non-reentrant model
 42050 ;;
 42051                           
 42052                           	psect	text219
 42053  006B96                     __ptext219:
 42054                           	opt stack 0
 42055  006B96                     __find_nth_cluster:
 42056                           	opt stack 21
 42057                           
 42058                           ;fat16.c: 184: uint16_t sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: uint16_t se
      +                          ctor_in_buffer = 0;
 42059                           
 42060                           ;incstack = 0
 42061  006B96  0E00               	movlw	0
 42062  006B98  6E3F               	movwf	__find_nth_cluster@sector_in_buffer+1,c
 42063  006B9A  0E00               	movlw	0
 42064  006B9C  6E3E               	movwf	__find_nth_cluster@sector_in_buffer,c
 42065                           
 42066                           ;fat16.c: 189: if(n==1)
 42067  006B9E  043A               	decf	__find_nth_cluster@n,w,c
 42068  006BA0  103B               	iorwf	__find_nth_cluster@n+1,w,c
 42069  006BA2  A4D8               	btfss	status,2,c
 42070  006BA4  D03E               	goto	l1984
 42071                           
 42072                           ;fat16.c: 190: {;fat16.c: 191: return _read_fat(cluster);
 42073  006BA6  C038  F030         	movff	__find_nth_cluster@cluster,__read_fat@cluster
 42074  006BAA  C039  F031         	movff	__find_nth_cluster@cluster+1,__read_fat@cluster+1
 42075  006BAE  EC15  F040         	call	__read_fat	;wreg free
 42076  006BB2  C030  F038         	movff	?__read_fat,?__find_nth_cluster
 42077  006BB6  C031  F039         	movff	?__read_fat+1,?__find_nth_cluster+1
 42078  006BBA  0012               	return	
 42079  006BBC                     
 42080                           ;fat16.c: 195: {;fat16.c: 197: sector = _data_sector_from_cluster(cluster);
 42081  006BBC  C038  F001         	movff	__find_nth_cluster@cluster,__data_sector_from_cluster@fat_cluster
 42082  006BC0  C039  F002         	movff	__find_nth_cluster@cluster+1,__data_sector_from_cluster@fat_cluster+1
 42083  006BC4  ECB3  F047         	call	__data_sector_from_cluster	;wreg free
 42084  006BC8  C001  F040         	movff	?__data_sector_from_cluster,__find_nth_cluster@sector
 42085  006BCC  C002  F041         	movff	?__data_sector_from_cluster+1,__find_nth_cluster@sector+1
 42086                           
 42087                           ;fat16.c: 198: offset = _fat_offset_from_cluster(cluster);
 42088  006BD0  C038  F001         	movff	__find_nth_cluster@cluster,__fat_offset_from_cluster@cluster
 42089  006BD4  C039  F002         	movff	__find_nth_cluster@cluster+1,__fat_offset_from_cluster@cluster+1
 42090  006BD8  EC39  F047         	call	__fat_offset_from_cluster	;wreg free
 42091  006BDC  C001  F03C         	movff	?__fat_offset_from_cluster,__find_nth_cluster@offset
 42092  006BE0  C002  F03D         	movff	?__fat_offset_from_cluster+1,__find_nth_cluster@offset+1
 42093                           
 42094                           ;fat16.c: 201: if(sector != sector_in_buffer)
 42095  006BE4  503E               	movf	__find_nth_cluster@sector_in_buffer,w,c
 42096  006BE6  1840               	xorwf	__find_nth_cluster@sector,w,c
 42097  006BE8  E104               	bnz	u7990
 42098  006BEA  503F               	movf	__find_nth_cluster@sector_in_buffer+1,w,c
 42099  006BEC  1841               	xorwf	__find_nth_cluster@sector+1,w,c
 42100  006BEE  B4D8               	btfsc	status,2,c
 42101  006BF0  D00A               	goto	l1986
 42102  006BF2                     u7990:
 42103                           
 42104                           ;fat16.c: 202: {;fat16.c: 203: flash_sector_read(sector, buffer);
 42105  006BF2  C040  F028         	movff	__find_nth_cluster@sector,flash_sector_read@page
 42106  006BF6  C041  F029         	movff	__find_nth_cluster@sector+1,flash_sector_read@page+1
 42107  006BFA  0EC0               	movlw	low _buffer
 42108  006BFC  6E2A               	movwf	flash_sector_read@data,c
 42109  006BFE  0E03               	movlw	high _buffer
 42110  006C00  6E2B               	movwf	flash_sector_read@data+1,c
 42111  006C02  EC67  F044         	call	_flash_sector_read	;wreg free
 42112  006C06                     l1986:
 42113                           
 42114                           ;fat16.c: 204: };fat16.c: 207: cluster = _read_value_from_offset(offset, buffer);
 42115  006C06  C03C  F001         	movff	__find_nth_cluster@offset,__read_value_from_offset@offset
 42116  006C0A  C03D  F002         	movff	__find_nth_cluster@offset+1,__read_value_from_offset@offset+1
 42117  006C0E  0EC0               	movlw	low _buffer
 42118  006C10  6E03               	movwf	__read_value_from_offset@buffer,c
 42119  006C12  0E03               	movlw	high _buffer
 42120  006C14  6E04               	movwf	__read_value_from_offset@buffer+1,c
 42121  006C16  ECF5  F041         	call	__read_value_from_offset	;wreg free
 42122  006C1A  C001  F038         	movff	?__read_value_from_offset,__find_nth_cluster@cluster
 42123  006C1E  C002  F039         	movff	?__read_value_from_offset+1,__find_nth_cluster@cluster+1
 42124  006C22                     l1984:
 42125  006C22  503A               	movf	__find_nth_cluster@n,w,c
 42126  006C24  103B               	iorwf	__find_nth_cluster@n+1,w,c
 42127  006C26  A4D8               	btfss	status,2,c
 42128  006C28  D7C9               	goto	l1985
 42129                           
 42130                           ;fat16.c: 208: };fat16.c: 210: return cluster;
 42131  006C2A  C038  F038         	movff	__find_nth_cluster@cluster,?__find_nth_cluster
 42132  006C2E  C039  F039         	movff	__find_nth_cluster@cluster+1,?__find_nth_cluster+1
 42133  006C32  0012               	return		;funcret
 42134  006C34                     __end_of__find_nth_cluster:
 42135                           	opt stack 0
 42136                           tosu	equ	0xFFF
 42137                           tosh	equ	0xFFE
 42138                           tosl	equ	0xFFD
 42139                           pclath	equ	0xFFA
 42140                           tblptru	equ	0xFF8
 42141                           tblptrh	equ	0xFF7
 42142                           tblptrl	equ	0xFF6
 42143                           tablat	equ	0xFF5
 42144                           prodh	equ	0xFF4
 42145                           prodl	equ	0xFF3
 42146                           intcon	equ	0xFF2
 42147                           intcon2	equ	0xFF1
 42148                           intcon3	equ	0xFF0
 42149                           indf0	equ	0xFEF
 42150                           postinc0	equ	0xFEE
 42151                           fsr0h	equ	0xFEA
 42152                           fsr0l	equ	0xFE9
 42153                           wreg	equ	0xFE8
 42154                           indf1	equ	0xFE7
 42155                           postdec1	equ	0xFE5
 42156                           plusw1	equ	0xFE3
 42157                           fsr1h	equ	0xFE2
 42158                           fsr1l	equ	0xFE1
 42159                           indf2	equ	0xFDF
 42160                           postinc2	equ	0xFDE
 42161                           postdec2	equ	0xFDD
 42162                           plusw2	equ	0xFDB
 42163                           fsr2h	equ	0xFDA
 42164                           fsr2l	equ	0xFD9
 42165                           status	equ	0xFD8
 42166                           
 42167 ;; *************** function _flash_sector_read *****************
 42168 ;; Defined at:
 42169 ;;		line 442 in file "flash.c"
 42170 ;; Parameters:    Size  Location     Type
 42171 ;;  page            2   39[COMRAM] unsigned int 
 42172 ;;  data            2   41[COMRAM] PTR unsigned char 
 42173 ;;		 -> buffer(512), msd_buffer(512), 
 42174 ;; Auto vars:     Size  Location     Type
 42175 ;;		None
 42176 ;; Return value:  Size  Location     Type
 42177 ;;                  1    wreg      void 
 42178 ;; Registers used:
 42179 ;;		wreg, status,2, status,0, cstack
 42180 ;; Tracked objects:
 42181 ;;		On entry : 0/0
 42182 ;;		On exit  : 0/0
 42183 ;;		Unchanged: 0/0
 42184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42185 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42186 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42187 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42188 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42189 ;;Total ram usage:        4 bytes
 42190 ;; Hardware stack levels used:    1
 42191 ;; Hardware stack levels required when called:    4
 42192 ;; This function calls:
 42193 ;;		__flash_partial_read
 42194 ;;		_spi_set_configuration
 42195 ;; This function is called by:
 42196 ;;		_ExternalFlash_SectorRead
 42197 ;;		__get_available_cluster
 42198 ;;		__find_nth_cluster
 42199 ;;		__make_cluster_chain
 42200 ;;		_fat_find_file
 42201 ;;		_fat_get_format_status
 42202 ;; This function uses a non-reentrant model
 42203 ;;
 42204                           
 42205                           	psect	text220
 42206  0088CE                     __ptext220:
 42207                           	opt stack 0
 42208  0088CE                     _flash_sector_read:
 42209                           	opt stack 23
 42210                           
 42211                           ;flash.c: 445: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42212                           
 42213                           ;incstack = 0
 42214  0088CE  0E00               	movlw	0
 42215  0088D0  EC62  F023         	call	_spi_set_configuration
 42216                           
 42217                           ;flash.c: 448: _flash_partial_read(page, 0, 512, data);
 42218  0088D4  C028  F014         	movff	flash_sector_read@page,__flash_partial_read@page
 42219  0088D8  C029  F015         	movff	flash_sector_read@page+1,__flash_partial_read@page+1
 42220  0088DC  0E00               	movlw	0
 42221  0088DE  6E17               	movwf	__flash_partial_read@start+1,c
 42222  0088E0  0E00               	movlw	0
 42223  0088E2  6E16               	movwf	__flash_partial_read@start,c
 42224  0088E4  0E02               	movlw	2
 42225  0088E6  6E19               	movwf	__flash_partial_read@length+1,c
 42226  0088E8  0E00               	movlw	0
 42227  0088EA  6E18               	movwf	__flash_partial_read@length,c
 42228  0088EC  C02A  F01A         	movff	flash_sector_read@data,__flash_partial_read@data
 42229  0088F0  C02B  F01B         	movff	flash_sector_read@data+1,__flash_partial_read@data+1
 42230  0088F4  ECB6  F03A         	call	__flash_partial_read	;wreg free
 42231                           
 42232                           ;flash.c: 451: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42233  0088F8  0E01               	movlw	1
 42234  0088FA  EC62  F023         	call	_spi_set_configuration
 42235  0088FE  0012               	return		;funcret
 42236  008900                     __end_of_flash_sector_read:
 42237                           	opt stack 0
 42238                           tosu	equ	0xFFF
 42239                           tosh	equ	0xFFE
 42240                           tosl	equ	0xFFD
 42241                           pclath	equ	0xFFA
 42242                           tblptru	equ	0xFF8
 42243                           tblptrh	equ	0xFF7
 42244                           tblptrl	equ	0xFF6
 42245                           tablat	equ	0xFF5
 42246                           prodh	equ	0xFF4
 42247                           prodl	equ	0xFF3
 42248                           intcon	equ	0xFF2
 42249                           intcon2	equ	0xFF1
 42250                           intcon3	equ	0xFF0
 42251                           indf0	equ	0xFEF
 42252                           postinc0	equ	0xFEE
 42253                           fsr0h	equ	0xFEA
 42254                           fsr0l	equ	0xFE9
 42255                           wreg	equ	0xFE8
 42256                           indf1	equ	0xFE7
 42257                           postdec1	equ	0xFE5
 42258                           plusw1	equ	0xFE3
 42259                           fsr1h	equ	0xFE2
 42260                           fsr1l	equ	0xFE1
 42261                           indf2	equ	0xFDF
 42262                           postinc2	equ	0xFDE
 42263                           postdec2	equ	0xFDD
 42264                           plusw2	equ	0xFDB
 42265                           fsr2h	equ	0xFDA
 42266                           fsr2l	equ	0xFD9
 42267                           status	equ	0xFD8
 42268                           
 42269 ;; *************** function __read_value_from_offset *****************
 42270 ;; Defined at:
 42271 ;;		line 114 in file "fat16.c"
 42272 ;; Parameters:    Size  Location     Type
 42273 ;;  offset          2    0[COMRAM] unsigned int 
 42274 ;;  buffer          2    2[COMRAM] PTR unsigned char 
 42275 ;;		 -> buffer(512), 
 42276 ;; Auto vars:     Size  Location     Type
 42277 ;;  value           2    7[COMRAM] unsigned int 
 42278 ;; Return value:  Size  Location     Type
 42279 ;;                  2    0[COMRAM] unsigned int 
 42280 ;; Registers used:
 42281 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 42282 ;; Tracked objects:
 42283 ;;		On entry : 0/0
 42284 ;;		On exit  : 0/0
 42285 ;;		Unchanged: 0/0
 42286 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42287 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42288 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42289 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42290 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42291 ;;Total ram usage:        9 bytes
 42292 ;; Hardware stack levels used:    1
 42293 ;; This function calls:
 42294 ;;		Nothing
 42295 ;; This function is called by:
 42296 ;;		__find_nth_cluster
 42297 ;;		__make_cluster_chain
 42298 ;; This function uses a non-reentrant model
 42299 ;;
 42300                           
 42301                           	psect	text221
 42302  0083EA                     __ptext221:
 42303                           	opt stack 0
 42304  0083EA                     __read_value_from_offset:
 42305                           	opt stack 26
 42306                           
 42307                           ;fat16.c: 116: uint16_t value;;fat16.c: 117: value = buffer[offset+1];
 42308                           
 42309                           ;incstack = 0
 42310  0083EA  0E01               	movlw	1
 42311  0083EC  2401               	addwf	__read_value_from_offset@offset,w,c
 42312  0083EE  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42313  0083F0  0E00               	movlw	0
 42314  0083F2  2002               	addwfc	__read_value_from_offset@offset+1,w,c
 42315  0083F4  6E06               	movwf	(??__read_value_from_offset+1)& (0+255),c
 42316  0083F6  5005               	movf	??__read_value_from_offset,w,c
 42317  0083F8  2403               	addwf	__read_value_from_offset@buffer,w,c
 42318  0083FA  6ED9               	movwf	fsr2l,c
 42319  0083FC  5006               	movf	??__read_value_from_offset+1,w,c
 42320  0083FE  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42321  008400  6EDA               	movwf	fsr2h,c
 42322  008402  50DF               	movf	indf2,w,c
 42323  008404  6E07               	movwf	(??__read_value_from_offset+2)& (0+255),c
 42324  008406  5007               	movf	??__read_value_from_offset+2,w,c
 42325  008408  6E08               	movwf	__read_value_from_offset@value,c
 42326  00840A  6A09               	clrf	__read_value_from_offset@value+1,c
 42327                           
 42328                           ;fat16.c: 118: value <<= 8;
 42329  00840C  5008               	movf	__read_value_from_offset@value,w,c
 42330  00840E  6E09               	movwf	__read_value_from_offset@value+1,c
 42331  008410  6A08               	clrf	__read_value_from_offset@value,c
 42332                           
 42333                           ;fat16.c: 119: value |= buffer[offset];
 42334  008412  5001               	movf	__read_value_from_offset@offset,w,c
 42335  008414  2403               	addwf	__read_value_from_offset@buffer,w,c
 42336  008416  6ED9               	movwf	fsr2l,c
 42337  008418  5002               	movf	__read_value_from_offset@offset+1,w,c
 42338  00841A  2004               	addwfc	__read_value_from_offset@buffer+1,w,c
 42339  00841C  6EDA               	movwf	fsr2h,c
 42340  00841E  50DF               	movf	indf2,w,c
 42341  008420  6E05               	movwf	??__read_value_from_offset& (0+255),c
 42342  008422  5005               	movf	??__read_value_from_offset,w,c
 42343  008424  1208               	iorwf	__read_value_from_offset@value,f,c
 42344                           
 42345                           ;fat16.c: 120: return value;
 42346  008426  C008  F001         	movff	__read_value_from_offset@value,?__read_value_from_offset
 42347  00842A  C009  F002         	movff	__read_value_from_offset@value+1,?__read_value_from_offset+1
 42348  00842E  0012               	return	
 42349  008430                     __end_of__read_value_from_offset:
 42350                           	opt stack 0
 42351                           tosu	equ	0xFFF
 42352                           tosh	equ	0xFFE
 42353                           tosl	equ	0xFFD
 42354                           pclath	equ	0xFFA
 42355                           tblptru	equ	0xFF8
 42356                           tblptrh	equ	0xFF7
 42357                           tblptrl	equ	0xFF6
 42358                           tablat	equ	0xFF5
 42359                           prodh	equ	0xFF4
 42360                           prodl	equ	0xFF3
 42361                           intcon	equ	0xFF2
 42362                           intcon2	equ	0xFF1
 42363                           intcon3	equ	0xFF0
 42364                           indf0	equ	0xFEF
 42365                           postinc0	equ	0xFEE
 42366                           fsr0h	equ	0xFEA
 42367                           fsr0l	equ	0xFE9
 42368                           wreg	equ	0xFE8
 42369                           indf1	equ	0xFE7
 42370                           postdec1	equ	0xFE5
 42371                           plusw1	equ	0xFE3
 42372                           fsr1h	equ	0xFE2
 42373                           fsr1l	equ	0xFE1
 42374                           indf2	equ	0xFDF
 42375                           postinc2	equ	0xFDE
 42376                           postdec2	equ	0xFDD
 42377                           plusw2	equ	0xFDB
 42378                           fsr2h	equ	0xFDA
 42379                           fsr2l	equ	0xFD9
 42380                           status	equ	0xFD8
 42381                           
 42382 ;; *************** function __read_fat *****************
 42383 ;; Defined at:
 42384 ;;		line 456 in file "fat16.c"
 42385 ;; Parameters:    Size  Location     Type
 42386 ;;  cluster         2   47[COMRAM] unsigned int 
 42387 ;; Auto vars:     Size  Location     Type
 42388 ;;  value           2   53[COMRAM] unsigned int 
 42389 ;;  offset          2   51[COMRAM] unsigned int 
 42390 ;;  sector          2   49[COMRAM] unsigned int 
 42391 ;; Return value:  Size  Location     Type
 42392 ;;                  2   47[COMRAM] unsigned int 
 42393 ;; Registers used:
 42394 ;;		wreg, status,2, status,0, cstack
 42395 ;; Tracked objects:
 42396 ;;		On entry : 0/0
 42397 ;;		On exit  : 0/0
 42398 ;;		Unchanged: 0/0
 42399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42400 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42401 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42402 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42403 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42404 ;;Total ram usage:        8 bytes
 42405 ;; Hardware stack levels used:    1
 42406 ;; Hardware stack levels required when called:    5
 42407 ;; This function calls:
 42408 ;;		__fat_offset_from_cluster
 42409 ;;		__fat_sector_from_cluster
 42410 ;;		_flash_partial_read
 42411 ;; This function is called by:
 42412 ;;		__find_nth_cluster
 42413 ;;		_fat_read_from_file_fast
 42414 ;;		_fat_modify_file
 42415 ;; This function uses a non-reentrant model
 42416 ;;
 42417                           
 42418                           	psect	text222
 42419  00802A                     __ptext222:
 42420                           	opt stack 0
 42421  00802A                     __read_fat:
 42422                           	opt stack 22
 42423                           
 42424                           ;fat16.c: 458: uint16_t sector;;fat16.c: 459: uint16_t offset;;fat16.c: 460: uint16_t va
      +                          lue;;fat16.c: 463: sector = _fat_sector_from_cluster(cluster);
 42425                           
 42426                           ;incstack = 0
 42427  00802A  C030  F001         	movff	__read_fat@cluster,__fat_sector_from_cluster@cluster
 42428  00802E  C031  F002         	movff	__read_fat@cluster+1,__fat_sector_from_cluster@cluster+1
 42429  008032  EC2D  F047         	call	__fat_sector_from_cluster	;wreg free
 42430  008036  C001  F032         	movff	?__fat_sector_from_cluster,__read_fat@sector
 42431  00803A  C002  F033         	movff	?__fat_sector_from_cluster+1,__read_fat@sector+1
 42432                           
 42433                           ;fat16.c: 464: offset = _fat_offset_from_cluster(cluster);
 42434  00803E  C030  F001         	movff	__read_fat@cluster,__fat_offset_from_cluster@cluster
 42435  008042  C031  F002         	movff	__read_fat@cluster+1,__fat_offset_from_cluster@cluster+1
 42436  008046  EC39  F047         	call	__fat_offset_from_cluster	;wreg free
 42437  00804A  C001  F034         	movff	?__fat_offset_from_cluster,__read_fat@offset
 42438  00804E  C002  F035         	movff	?__fat_offset_from_cluster+1,__read_fat@offset+1
 42439                           
 42440                           ;fat16.c: 467: flash_partial_read(sector, offset, 2, &value);
 42441  008052  C032  F028         	movff	__read_fat@sector,flash_partial_read@page
 42442  008056  C033  F029         	movff	__read_fat@sector+1,flash_partial_read@page+1
 42443  00805A  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 42444  00805E  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 42445  008062  0E00               	movlw	0
 42446  008064  6E2D               	movwf	flash_partial_read@length+1,c
 42447  008066  0E02               	movlw	2
 42448  008068  6E2C               	movwf	flash_partial_read@length,c
 42449  00806A  0E36               	movlw	low __read_fat@value
 42450  00806C  6E2E               	movwf	flash_partial_read@data,c
 42451  00806E  0E00               	movlw	high __read_fat@value
 42452  008070  6E2F               	movwf	flash_partial_read@data+1,c
 42453  008072  EC80  F044         	call	_flash_partial_read	;wreg free
 42454                           
 42455                           ;fat16.c: 470: return value;
 42456  008076  C036  F030         	movff	__read_fat@value,?__read_fat
 42457  00807A  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 42458  00807E  0012               	return	
 42459  008080                     __end_of__read_fat:
 42460                           	opt stack 0
 42461                           tosu	equ	0xFFF
 42462                           tosh	equ	0xFFE
 42463                           tosl	equ	0xFFD
 42464                           pclath	equ	0xFFA
 42465                           tblptru	equ	0xFF8
 42466                           tblptrh	equ	0xFF7
 42467                           tblptrl	equ	0xFF6
 42468                           tablat	equ	0xFF5
 42469                           prodh	equ	0xFF4
 42470                           prodl	equ	0xFF3
 42471                           intcon	equ	0xFF2
 42472                           intcon2	equ	0xFF1
 42473                           intcon3	equ	0xFF0
 42474                           indf0	equ	0xFEF
 42475                           postinc0	equ	0xFEE
 42476                           fsr0h	equ	0xFEA
 42477                           fsr0l	equ	0xFE9
 42478                           wreg	equ	0xFE8
 42479                           indf1	equ	0xFE7
 42480                           postdec1	equ	0xFE5
 42481                           plusw1	equ	0xFE3
 42482                           fsr1h	equ	0xFE2
 42483                           fsr1l	equ	0xFE1
 42484                           indf2	equ	0xFDF
 42485                           postinc2	equ	0xFDE
 42486                           postdec2	equ	0xFDD
 42487                           plusw2	equ	0xFDB
 42488                           fsr2h	equ	0xFDA
 42489                           fsr2l	equ	0xFD9
 42490                           status	equ	0xFD8
 42491                           
 42492 ;; *************** function _flash_partial_read *****************
 42493 ;; Defined at:
 42494 ;;		line 480 in file "flash.c"
 42495 ;; Parameters:    Size  Location     Type
 42496 ;;  page            2   39[COMRAM] unsigned int 
 42497 ;;  start           2   41[COMRAM] unsigned int 
 42498 ;;  length          2   43[COMRAM] unsigned int 
 42499 ;;  data            2   45[COMRAM] PTR unsigned char 
 42500 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 42501 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 42502 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 42503 ;;		 -> RAM(3759), 
 42504 ;; Auto vars:     Size  Location     Type
 42505 ;;		None
 42506 ;; Return value:  Size  Location     Type
 42507 ;;                  1    wreg      void 
 42508 ;; Registers used:
 42509 ;;		wreg, status,2, status,0, cstack
 42510 ;; Tracked objects:
 42511 ;;		On entry : 0/0
 42512 ;;		On exit  : 0/0
 42513 ;;		Unchanged: 0/0
 42514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42515 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42516 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42517 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42518 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42519 ;;Total ram usage:        8 bytes
 42520 ;; Hardware stack levels used:    1
 42521 ;; Hardware stack levels required when called:    4
 42522 ;; This function calls:
 42523 ;;		__flash_partial_read
 42524 ;;		_spi_set_configuration
 42525 ;; This function is called by:
 42526 ;;		__root_is_available
 42527 ;;		__read_fat
 42528 ;;		__get_first_cluster
 42529 ;;		_fat_get_file_size
 42530 ;;		_fat_read_from_file_fast
 42531 ;;		_fat_get_file_information
 42532 ;; This function uses a non-reentrant model
 42533 ;;
 42534                           
 42535                           	psect	text223
 42536  008900                     __ptext223:
 42537                           	opt stack 0
 42538  008900                     _flash_partial_read:
 42539                           	opt stack 23
 42540                           
 42541                           ;flash.c: 483: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 42542                           
 42543                           ;incstack = 0
 42544  008900  0E00               	movlw	0
 42545  008902  EC62  F023         	call	_spi_set_configuration
 42546                           
 42547                           ;flash.c: 486: _flash_partial_read(page, start, length, data);
 42548  008906  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 42549  00890A  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 42550  00890E  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 42551  008912  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 42552  008916  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 42553  00891A  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 42554  00891E  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 42555  008922  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 42556  008926  ECB6  F03A         	call	__flash_partial_read	;wreg free
 42557                           
 42558                           ;flash.c: 489: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 42559  00892A  0E01               	movlw	1
 42560  00892C  EC62  F023         	call	_spi_set_configuration
 42561  008930  0012               	return		;funcret
 42562  008932                     __end_of_flash_partial_read:
 42563                           	opt stack 0
 42564                           tosu	equ	0xFFF
 42565                           tosh	equ	0xFFE
 42566                           tosl	equ	0xFFD
 42567                           pclath	equ	0xFFA
 42568                           tblptru	equ	0xFF8
 42569                           tblptrh	equ	0xFF7
 42570                           tblptrl	equ	0xFF6
 42571                           tablat	equ	0xFF5
 42572                           prodh	equ	0xFF4
 42573                           prodl	equ	0xFF3
 42574                           intcon	equ	0xFF2
 42575                           intcon2	equ	0xFF1
 42576                           intcon3	equ	0xFF0
 42577                           indf0	equ	0xFEF
 42578                           postinc0	equ	0xFEE
 42579                           fsr0h	equ	0xFEA
 42580                           fsr0l	equ	0xFE9
 42581                           wreg	equ	0xFE8
 42582                           indf1	equ	0xFE7
 42583                           postdec1	equ	0xFE5
 42584                           plusw1	equ	0xFE3
 42585                           fsr1h	equ	0xFE2
 42586                           fsr1l	equ	0xFE1
 42587                           indf2	equ	0xFDF
 42588                           postinc2	equ	0xFDE
 42589                           postdec2	equ	0xFDD
 42590                           plusw2	equ	0xFDB
 42591                           fsr2h	equ	0xFDA
 42592                           fsr2l	equ	0xFD9
 42593                           status	equ	0xFD8
 42594                           
 42595 ;; *************** function _spi_set_configuration *****************
 42596 ;; Defined at:
 42597 ;;		line 139 in file "spi.c"
 42598 ;; Parameters:    Size  Location     Type
 42599 ;;  configuratio    1    wreg     enum E6749
 42600 ;; Auto vars:     Size  Location     Type
 42601 ;;  configuratio    1    0[COMRAM] enum E6749
 42602 ;;  cntr            1    0        unsigned char 
 42603 ;; Return value:  Size  Location     Type
 42604 ;;                  1    wreg      void 
 42605 ;; Registers used:
 42606 ;;		wreg, status,2, status,0
 42607 ;; Tracked objects:
 42608 ;;		On entry : 0/0
 42609 ;;		On exit  : 0/0
 42610 ;;		Unchanged: 0/0
 42611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 42612 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42613 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42614 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42615 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 42616 ;;Total ram usage:        1 bytes
 42617 ;; Hardware stack levels used:    1
 42618 ;; This function calls:
 42619 ;;		Nothing
 42620 ;; This function is called by:
 42621 ;;		_flash_init
 42622 ;;		_flash_is_busy
 42623 ;;		_flash_sector_read
 42624 ;;		_flash_sector_write
 42625 ;;		_flash_partial_read
 42626 ;;		_flash_partial_write
 42627 ;;		_flash_copy_page_to_buffer
 42628 ;;		_flash_write_page_from_buffer
 42629 ;;		_flash_read_from_buffer
 42630 ;;		_flash_write_to_buffer
 42631 ;;		_flash_set_power_state
 42632 ;; This function uses a non-reentrant model
 42633 ;;
 42634                           
 42635                           	psect	text224
 42636  0046C4                     __ptext224:
 42637                           	opt stack 0
 42638  0046C4                     _spi_set_configuration:
 42639                           	opt stack 28
 42640                           
 42641                           ;incstack = 0
 42642                           ;spi_set_configuration@configuration stored from wreg
 42643  0046C4  6E01               	movwf	spi_set_configuration@configuration,c
 42644                           
 42645                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 42646  0046C6  D07B               	goto	l2982
 42647  0046C8                     l2983:
 42648                           
 42649                           ;spi.c: 152: LATDbits.LD2 = 1;
 42650  0046C8  848C               	bsf	3980,2,c	;volatile
 42651                           
 42652                           ;spi.c: 153: TRISDbits.TRISD2 = 0;
 42653  0046CA  9495               	bcf	3989,2,c	;volatile
 42654                           
 42655                           ;spi.c: 154: TRISDbits.TRISD2 = 1;
 42656  0046CC  8495               	bsf	3989,2,c	;volatile
 42657  0046CE  A483               	btfss	3971,2,c	;volatile
 42658  0046D0  D7FE               	goto	l2985
 42659                           
 42660                           ;spi.c: 159: DMACON1bits.DMAEN = 0;
 42661  0046D2  9088               	bcf	3976,0,c	;volatile
 42662                           
 42663                           ;spi.c: 160: SSP2CON1bits.SSPEN = 0;
 42664  0046D4  9A72               	bcf	3954,5,c	;volatile
 42665                           
 42666                           ;spi.c: 163: TRISDbits.TRISD6 = 1;
 42667  0046D6  8C95               	bsf	3989,6,c	;volatile
 42668                           
 42669                           ;spi.c: 164: TRISDbits.TRISD4 = 0;
 42670  0046D8  9895               	bcf	3989,4,c	;volatile
 42671                           
 42672                           ;spi.c: 165: LATDbits.LD4 = 0;
 42673  0046DA  988C               	bcf	3980,4,c	;volatile
 42674                           
 42675                           ;spi.c: 166: TRISDbits.TRISD5 = 0;
 42676  0046DC  9A95               	bcf	3989,5,c	;volatile
 42677                           
 42678                           ;spi.c: 167: LATDbits.LD5 = 0;
 42679  0046DE  9A8C               	bcf	3980,5,c	;volatile
 42680                           
 42681                           ;spi.c: 168: TRISDbits.TRISD7 = 0;
 42682  0046E0  9E95               	bcf	3989,7,c	;volatile
 42683                           
 42684                           ;spi.c: 169: LATDbits.LD7 = 1;
 42685  0046E2  8E8C               	bsf	3980,7,c	;volatile
 42686                           
 42687                           ;spi.c: 172: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42688  0046E4  0E55               	movlw	85
 42689  0046E6  6EA7               	movwf	4007,c	;volsfr
 42690  0046E8  0EAA               	movlw	170
 42691  0046EA  6EA7               	movwf	4007,c	;volsfr
 42692  0046EC  010E               	movlb	14	; () banked
 42693  0046EE  91BF               	bcf	191,0,b	;volatile
 42694                           
 42695                           ;spi.c: 174: RPOR23 = 0b00000;
 42696  0046F0  0E00               	movlw	0
 42697  0046F2  6FD7               	movwf	215,b	;volatile
 42698                           
 42699                           ;spi.c: 175: RPINR21 = 0b11111;
 42700  0046F4  0E1F               	movlw	31
 42701  0046F6  6FFC               	movwf	252,b	;volatile
 42702                           
 42703                           ;spi.c: 176: RPINR23 = 0b11111;
 42704  0046F8  0E1F               	movlw	31
 42705  0046FA  6FFE               	movwf	254,b	;volatile
 42706                           
 42707                           ;spi.c: 178: RPINR21 = 23;
 42708  0046FC  0E17               	movlw	23
 42709  0046FE  6FFC               	movwf	252,b	;volatile
 42710                           
 42711                           ;spi.c: 179: RPOR21 = 10;
 42712  004700  0E0A               	movlw	10
 42713  004702  6FD5               	movwf	213,b	;volatile
 42714                           
 42715                           ;spi.c: 181: RPOR22 = 11;
 42716  004704  0E0B               	movlw	11
 42717  004706  6FD6               	movwf	214,b	;volatile
 42718                           
 42719                           ;spi.c: 182: RPINR22 = 22;
 42720  004708  0E16               	movlw	22
 42721  00470A  6FFD               	movwf	253,b	;volatile
 42722                           
 42723                           ;spi.c: 183: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42724  00470C  0E55               	movlw	85
 42725  00470E  6EA7               	movwf	4007,c	;volsfr
 42726  004710  0EAA               	movlw	170
 42727  004712  6EA7               	movwf	4007,c	;volsfr
 42728                           
 42729                           ; BSR set to: 14
 42730  004714  81BF               	bsf	191,0,b	;volatile
 42731                           
 42732                           ; BSR set to: 14
 42733                           ;spi.c: 186: SSP2STATbits.SMP = 1;
 42734  004716  8E73               	bsf	3955,7,c	;volatile
 42735                           
 42736                           ; BSR set to: 14
 42737                           ;spi.c: 187: SSP2STATbits.CKE = 1;
 42738  004718  8C73               	bsf	3955,6,c	;volatile
 42739                           
 42740                           ; BSR set to: 14
 42741                           ;spi.c: 188: SSP2CON1bits.WCOL = 0;
 42742  00471A  9E72               	bcf	3954,7,c	;volatile
 42743                           
 42744                           ; BSR set to: 14
 42745                           ;spi.c: 189: SSP2CON1bits.SSPOV = 0;
 42746  00471C  9C72               	bcf	3954,6,c	;volatile
 42747                           
 42748                           ; BSR set to: 14
 42749                           ;spi.c: 190: SSP2CON1bits.CKP = 0;
 42750  00471E  9872               	bcf	3954,4,c	;volatile
 42751                           
 42752                           ; BSR set to: 14
 42753                           ;spi.c: 191: SSP2CON1bits.SSPM =0b0000;
 42754  004720  9072               	bcf	3954,0,c	;volatile
 42755  004722  9272               	bcf	3954,1,c	;volatile
 42756  004724  9472               	bcf	3954,2,c	;volatile
 42757  004726  9672               	bcf	3954,3,c	;volatile
 42758                           
 42759                           ; BSR set to: 14
 42760                           ;spi.c: 192: SSP2CON1bits.SSPEN = 1;
 42761  004728  8A72               	bsf	3954,5,c	;volatile
 42762                           
 42763                           ;spi.c: 195: active_configuration = SPI_CONFIGURATION_INTERNAL;
 42764  00472A  0E00               	movlw	0
 42765  00472C  0101               	movlb	1	; () banked
 42766  00472E  6F8A               	movwf	_active_configuration& (0+255),b
 42767                           
 42768                           ;spi.c: 196: break;
 42769  004730  0012               	return	
 42770  004732                     l2988:
 42771                           
 42772                           ;spi.c: 200: DMACON1bits.DMAEN = 0;
 42773  004732  9088               	bcf	3976,0,c	;volatile
 42774                           
 42775                           ;spi.c: 201: SSP2CON1bits.SSPEN = 0;
 42776  004734  9A72               	bcf	3954,5,c	;volatile
 42777                           
 42778                           ;spi.c: 204: ODCON3bits.SPI2OD = 0;
 42779  004736  010F               	movlb	15	; () banked
 42780  004738  9340               	bcf	64,1,b	;volatile
 42781                           
 42782                           ; BSR set to: 15
 42783                           ;spi.c: 207: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 42784  00473A  0E55               	movlw	85
 42785  00473C  6EA7               	movwf	4007,c	;volsfr
 42786  00473E  0EAA               	movlw	170
 42787  004740  6EA7               	movwf	4007,c	;volsfr
 42788                           
 42789                           ; BSR set to: 15
 42790  004742  010E               	movlb	14	; () banked
 42791  004744  91BF               	bcf	191,0,b	;volatile
 42792                           
 42793                           ;spi.c: 208: RPOR23 = 10;
 42794  004746  0E0A               	movlw	10
 42795  004748  6FD7               	movwf	215,b	;volatile
 42796                           
 42797                           ;spi.c: 209: RPINR21 = 21;
 42798  00474A  0E15               	movlw	21
 42799  00474C  6FFC               	movwf	252,b	;volatile
 42800                           
 42801                           ;spi.c: 210: RPINR22 = 22;
 42802  00474E  0E16               	movlw	22
 42803  004750  6FFD               	movwf	253,b	;volatile
 42804                           
 42805                           ;spi.c: 211: RPINR23 = 19;
 42806  004752  0E13               	movlw	19
 42807  004754  6FFE               	movwf	254,b	;volatile
 42808                           
 42809                           ;spi.c: 212: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 42810  004756  0E55               	movlw	85
 42811  004758  6EA7               	movwf	4007,c	;volsfr
 42812  00475A  0EAA               	movlw	170
 42813  00475C  6EA7               	movwf	4007,c	;volsfr
 42814                           
 42815                           ; BSR set to: 14
 42816  00475E  81BF               	bsf	191,0,b	;volatile
 42817                           
 42818                           ; BSR set to: 14
 42819                           ;spi.c: 214: SSP2CON1bits.SSPEN = 0;
 42820  004760  9A72               	bcf	3954,5,c	;volatile
 42821                           
 42822                           ; BSR set to: 14
 42823                           ;spi.c: 222: TRISDbits.TRISD5 = 1;
 42824  004762  8A95               	bsf	3989,5,c	;volatile
 42825                           
 42826                           ; BSR set to: 14
 42827                           ;spi.c: 223: TRISDbits.TRISD4 = 1;
 42828  004764  8895               	bsf	3989,4,c	;volatile
 42829                           
 42830                           ; BSR set to: 14
 42831                           ;spi.c: 226: TRISDbits.TRISD6 = 0;
 42832  004766  9C95               	bcf	3989,6,c	;volatile
 42833                           
 42834                           ; BSR set to: 14
 42835                           ;spi.c: 227: LATDbits.LD6 = 1;
 42836  004768  8C8C               	bsf	3980,6,c	;volatile
 42837                           
 42838                           ; BSR set to: 14
 42839                           ;spi.c: 230: TRISDbits.TRISD2 = 1;
 42840  00476A  8495               	bsf	3989,2,c	;volatile
 42841                           
 42842                           ; BSR set to: 14
 42843                           ;spi.c: 236: SSP2STATbits.SMP = 0;
 42844  00476C  9E73               	bcf	3955,7,c	;volatile
 42845                           
 42846                           ; BSR set to: 14
 42847                           ;spi.c: 237: SSP2STATbits.CKE = 1;
 42848  00476E  8C73               	bsf	3955,6,c	;volatile
 42849                           
 42850                           ; BSR set to: 14
 42851                           ;spi.c: 238: SSP2CON1bits.WCOL = 0;
 42852  004770  9E72               	bcf	3954,7,c	;volatile
 42853                           
 42854                           ; BSR set to: 14
 42855                           ;spi.c: 239: SSP2CON1bits.SSPOV = 0;
 42856  004772  9C72               	bcf	3954,6,c	;volatile
 42857                           
 42858                           ; BSR set to: 14
 42859                           ;spi.c: 240: SSP2CON1bits.CKP = 0;
 42860  004774  9872               	bcf	3954,4,c	;volatile
 42861                           
 42862                           ; BSR set to: 14
 42863                           ;spi.c: 241: SSP2CON1bits.SSPM =0b0100;
 42864  004776  5072               	movf	3954,w,c	;volatile
 42865  004778  0BF0               	andlw	-16
 42866  00477A  0904               	iorlw	4
 42867  00477C  6E72               	movwf	3954,c	;volatile
 42868                           
 42869                           ; BSR set to: 14
 42870                           ;spi.c: 242: PIR3bits.SSP2IF = 0;
 42871  00477E  9EA4               	bcf	4004,7,c	;volatile
 42872                           
 42873                           ; BSR set to: 14
 42874                           ;spi.c: 243: SSP2CON1bits.SSPEN = 1;
 42875  004780  8A72               	bsf	3954,5,c	;volatile
 42876                           
 42877                           ; BSR set to: 14
 42878                           ;spi.c: 246: DMACON1bits.TXINC = 1;
 42879  004782  8A88               	bsf	3976,5,c	;volatile
 42880                           
 42881                           ; BSR set to: 14
 42882                           ;spi.c: 247: DMACON1bits.RXINC = 1;
 42883  004784  8888               	bsf	3976,4,c	;volatile
 42884                           
 42885                           ; BSR set to: 14
 42886                           ;spi.c: 248: DMACON1bits.DUPLEX1 = 1;
 42887  004786  8688               	bsf	3976,3,c	;volatile
 42888                           
 42889                           ; BSR set to: 14
 42890                           ;spi.c: 249: DMACON1bits.DUPLEX0 = 0;
 42891  004788  9488               	bcf	3976,2,c	;volatile
 42892                           
 42893                           ; BSR set to: 14
 42894                           ;spi.c: 250: DMACON1bits.DLYINTEN = 0;
 42895  00478A  9288               	bcf	3976,1,c	;volatile
 42896                           
 42897                           ; BSR set to: 14
 42898                           ;spi.c: 252: DMACON2bits.DLYCYC = 0b0000;
 42899  00478C  9886               	bcf	3974,4,c	;volatile
 42900  00478E  9A86               	bcf	3974,5,c	;volatile
 42901  004790  9C86               	bcf	3974,6,c	;volatile
 42902  004792  9E86               	bcf	3974,7,c	;volatile
 42903                           
 42904                           ; BSR set to: 14
 42905                           ;spi.c: 253: DMACON2bits.INTLVL = 0b0000;
 42906  004794  9086               	bcf	3974,0,c	;volatile
 42907  004796  9286               	bcf	3974,1,c	;volatile
 42908  004798  9486               	bcf	3974,2,c	;volatile
 42909  00479A  9686               	bcf	3974,3,c	;volatile
 42910                           
 42911                           ; BSR set to: 14
 42912                           ;spi.c: 256: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 42913  00479C  0E00               	movlw	0
 42914  00479E  6E66               	movwf	3942,c	;volatile
 42915                           
 42916                           ; BSR set to: 14
 42917                           ;spi.c: 257: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 42918  0047A0  0E3F               	movlw	63
 42919  0047A2  6E67               	movwf	3943,c	;volatile
 42920                           
 42921                           ; BSR set to: 14
 42922                           ;spi.c: 260: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 42923  0047A4  0E03               	movlw	high __spi_external_tx_buffer
 42924  0047A6  6E6A               	movwf	3946,c	;volatile
 42925                           
 42926                           ; BSR set to: 14
 42927                           ;spi.c: 261: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 42928  0047A8  0E40               	movlw	low (low __spi_external_tx_buffer)
 42929  0047AA  6E6B               	movwf	3947,c	;volatile
 42930                           
 42931                           ; BSR set to: 14
 42932                           ;spi.c: 264: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 42933  0047AC  0E03               	movlw	high __spi_external_rx_buffer
 42934  0047AE  6E68               	movwf	3944,c	;volatile
 42935                           
 42936                           ; BSR set to: 14
 42937                           ;spi.c: 265: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 42938  0047B0  0E00               	movlw	low (low __spi_external_rx_buffer)
 42939  0047B2  6E69               	movwf	3945,c	;volatile
 42940                           
 42941                           ; BSR set to: 14
 42942                           ;spi.c: 267: DMACON1bits.DMAEN = 1;
 42943  0047B4  8088               	bsf	3976,0,c	;volatile
 42944                           
 42945                           ; BSR set to: 14
 42946                           ;spi.c: 335: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 42947  0047B6  0E01               	movlw	1
 42948  0047B8  0101               	movlb	1	; () banked
 42949  0047BA  6F8A               	movwf	_active_configuration& (0+255),b
 42950                           
 42951                           ; BSR set to: 1
 42952                           ;spi.c: 337: }
 42953                           
 42954                           ;spi.c: 336: break;
 42955  0047BC  0012               	return	
 42956  0047BE                     l2982:
 42957                           
 42958                           ; BSR set to: 1
 42959  0047BE  5001               	movf	spi_set_configuration@configuration,w,c
 42960                           
 42961                           ; Switch size 1, requested type "space"
 42962                           ; Number of cases is 2, Range of values is 0 to 1
 42963                           ; switch strategies available:
 42964                           ; Name         Instructions Cycles
 42965                           ; simple_byte            7     4 (average)
 42966                           ;	Chosen strategy is simple_byte
 42967  0047C0  0A00               	xorlw	0	; case 0
 42968  0047C2  B4D8               	btfsc	status,2,c
 42969  0047C4  D781               	goto	l2983
 42970  0047C6  0A01               	xorlw	1	; case 1
 42971  0047C8  A4D8               	btfss	status,2,c
 42972  0047CA  0012               	return	
 42973  0047CC  D7B2               	goto	l2988
 42974  0047CE                     __end_of_spi_set_configuration:
 42975                           	opt stack 0
 42976                           tosu	equ	0xFFF
 42977                           tosh	equ	0xFFE
 42978                           tosl	equ	0xFFD
 42979                           pclath	equ	0xFFA
 42980                           tblptru	equ	0xFF8
 42981                           tblptrh	equ	0xFF7
 42982                           tblptrl	equ	0xFF6
 42983                           tablat	equ	0xFF5
 42984                           prodh	equ	0xFF4
 42985                           prodl	equ	0xFF3
 42986                           intcon	equ	0xFF2
 42987                           intcon2	equ	0xFF1
 42988                           intcon3	equ	0xFF0
 42989                           indf0	equ	0xFEF
 42990                           postinc0	equ	0xFEE
 42991                           fsr0h	equ	0xFEA
 42992                           fsr0l	equ	0xFE9
 42993                           wreg	equ	0xFE8
 42994                           indf1	equ	0xFE7
 42995                           postdec1	equ	0xFE5
 42996                           plusw1	equ	0xFE3
 42997                           fsr1h	equ	0xFE2
 42998                           fsr1l	equ	0xFE1
 42999                           indf2	equ	0xFDF
 43000                           postinc2	equ	0xFDE
 43001                           postdec2	equ	0xFDD
 43002                           plusw2	equ	0xFDB
 43003                           fsr2h	equ	0xFDA
 43004                           fsr2l	equ	0xFD9
 43005                           status	equ	0xFD8
 43006                           
 43007 ;; *************** function __flash_partial_read *****************
 43008 ;; Defined at:
 43009 ;;		line 308 in file "flash.c"
 43010 ;; Parameters:    Size  Location     Type
 43011 ;;  page            2   19[COMRAM] unsigned int 
 43012 ;;  start           2   21[COMRAM] unsigned int 
 43013 ;;  length          2   23[COMRAM] unsigned int 
 43014 ;;  data            2   25[COMRAM] PTR unsigned char 
 43015 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 43016 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 43017 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 43018 ;;		 -> buffer(512), msd_buffer(512), RAM(3759), 
 43019 ;; Auto vars:     Size  Location     Type
 43020 ;;  command         4   31[COMRAM] unsigned char [4]
 43021 ;;  address         4   35[COMRAM] unsigned long 
 43022 ;; Return value:  Size  Location     Type
 43023 ;;                  1    wreg      void 
 43024 ;; Registers used:
 43025 ;;		wreg, status,2, status,0, cstack
 43026 ;; Tracked objects:
 43027 ;;		On entry : 0/0
 43028 ;;		On exit  : 0/0
 43029 ;;		Unchanged: 0/0
 43030 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43031 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43032 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43033 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43034 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43035 ;;Total ram usage:       20 bytes
 43036 ;; Hardware stack levels used:    1
 43037 ;; Hardware stack levels required when called:    3
 43038 ;; This function calls:
 43039 ;;		__flash_is_busy
 43040 ;;		_spi_tx_rx
 43041 ;; This function is called by:
 43042 ;;		_flash_sector_read
 43043 ;;		_flash_partial_read
 43044 ;; This function uses a non-reentrant model
 43045 ;;
 43046                           
 43047                           	psect	text225
 43048  00756C                     __ptext225:
 43049                           	opt stack 0
 43050  00756C                     __flash_partial_read:
 43051                           	opt stack 23
 43052                           
 43053                           ;flash.c: 310: uint32_t address;;flash.c: 311: uint8_t command[4];;flash.c: 314: while(_
      +                          flash_is_busy());
 43054                           
 43055                           ;incstack = 0
 43056  00756C  EC71  F046         	call	__flash_is_busy	;wreg free
 43057  007570  0900               	iorlw	0
 43058  007572  A4D8               	btfss	status,2,c
 43059  007574  D7FB               	goto	__flash_partial_read
 43060                           
 43061                           ;flash.c: 317: address = page;
 43062  007576  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 43063  00757A  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 43064  00757E  6A26               	clrf	__flash_partial_read@address+2,c
 43065  007580  6A27               	clrf	__flash_partial_read@address+3,c
 43066                           
 43067                           ;flash.c: 318: address <<= 9;
 43068  007582  0E09               	movlw	9
 43069  007584                     u6805:
 43070  007584  90D8               	bcf	status,0,c
 43071  007586  3624               	rlcf	__flash_partial_read@address,f,c
 43072  007588  3625               	rlcf	__flash_partial_read@address+1,f,c
 43073  00758A  3626               	rlcf	__flash_partial_read@address+2,f,c
 43074  00758C  3627               	rlcf	__flash_partial_read@address+3,f,c
 43075  00758E  2EE8               	decfsz	wreg,f,c
 43076  007590  D7F9               	goto	u6805
 43077                           
 43078                           ;flash.c: 319: address |= start;
 43079  007592  5016               	movf	__flash_partial_read@start,w,c
 43080  007594  6E1C               	movwf	??__flash_partial_read& (0+255),c
 43081  007596  5017               	movf	__flash_partial_read@start+1,w,c
 43082  007598  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 43083  00759A  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 43084  00759C  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 43085  00759E  501C               	movf	??__flash_partial_read,w,c
 43086  0075A0  1224               	iorwf	__flash_partial_read@address,f,c
 43087  0075A2  501D               	movf	??__flash_partial_read+1,w,c
 43088  0075A4  1225               	iorwf	__flash_partial_read@address+1,f,c
 43089  0075A6  501E               	movf	??__flash_partial_read+2,w,c
 43090  0075A8  1226               	iorwf	__flash_partial_read@address+2,f,c
 43091  0075AA  501F               	movf	??__flash_partial_read+3,w,c
 43092  0075AC  1227               	iorwf	__flash_partial_read@address+3,f,c
 43093                           
 43094                           ;flash.c: 322: command[0] = 0x03;
 43095  0075AE  0E03               	movlw	3
 43096  0075B0  6E20               	movwf	__flash_partial_read@command,c
 43097                           
 43098                           ;flash.c: 323: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 43099  0075B2  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 43100                           
 43101                           ;flash.c: 324: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 43102  0075B6  5025               	movf	__flash_partial_read@address+1,w,c
 43103  0075B8  6E22               	movwf	__flash_partial_read@command+2,c
 43104                           
 43105                           ;flash.c: 325: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 43106  0075BA  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 43107                           
 43108                           ;flash.c: 328: spi_tx_rx(command, 4, data, length);
 43109  0075BE  0E20               	movlw	low __flash_partial_read@command
 43110  0075C0  6E01               	movwf	spi_tx_rx@command,c
 43111  0075C2  0E00               	movlw	high __flash_partial_read@command
 43112  0075C4  6E02               	movwf	spi_tx_rx@command+1,c
 43113  0075C6  0E00               	movlw	0
 43114  0075C8  6E04               	movwf	spi_tx_rx@command_length+1,c
 43115  0075CA  0E04               	movlw	4
 43116  0075CC  6E03               	movwf	spi_tx_rx@command_length,c
 43117  0075CE  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 43118  0075D2  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 43119  0075D6  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 43120  0075DA  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 43121  0075DE  EC93  F037         	call	_spi_tx_rx	;wreg free
 43122  0075E2  0012               	return		;funcret
 43123  0075E4                     __end_of__flash_partial_read:
 43124                           	opt stack 0
 43125                           tosu	equ	0xFFF
 43126                           tosh	equ	0xFFE
 43127                           tosl	equ	0xFFD
 43128                           pclath	equ	0xFFA
 43129                           tblptru	equ	0xFF8
 43130                           tblptrh	equ	0xFF7
 43131                           tblptrl	equ	0xFF6
 43132                           tablat	equ	0xFF5
 43133                           prodh	equ	0xFF4
 43134                           prodl	equ	0xFF3
 43135                           intcon	equ	0xFF2
 43136                           intcon2	equ	0xFF1
 43137                           intcon3	equ	0xFF0
 43138                           indf0	equ	0xFEF
 43139                           postinc0	equ	0xFEE
 43140                           fsr0h	equ	0xFEA
 43141                           fsr0l	equ	0xFE9
 43142                           wreg	equ	0xFE8
 43143                           indf1	equ	0xFE7
 43144                           postdec1	equ	0xFE5
 43145                           plusw1	equ	0xFE3
 43146                           fsr1h	equ	0xFE2
 43147                           fsr1l	equ	0xFE1
 43148                           indf2	equ	0xFDF
 43149                           postinc2	equ	0xFDE
 43150                           postdec2	equ	0xFDD
 43151                           plusw2	equ	0xFDB
 43152                           fsr2h	equ	0xFDA
 43153                           fsr2l	equ	0xFD9
 43154                           status	equ	0xFD8
 43155                           
 43156 ;; *************** function __flash_is_busy *****************
 43157 ;; Defined at:
 43158 ;;		line 280 in file "flash.c"
 43159 ;; Parameters:    Size  Location     Type
 43160 ;;		None
 43161 ;; Auto vars:     Size  Location     Type
 43162 ;;  status          2   17[COMRAM] unsigned int 
 43163 ;; Return value:  Size  Location     Type
 43164 ;;                  1    wreg      unsigned char 
 43165 ;; Registers used:
 43166 ;;		wreg, status,2, status,0, cstack
 43167 ;; Tracked objects:
 43168 ;;		On entry : 0/0
 43169 ;;		On exit  : 0/0
 43170 ;;		Unchanged: 0/0
 43171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43172 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43173 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43174 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43175 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43176 ;;Total ram usage:        2 bytes
 43177 ;; Hardware stack levels used:    1
 43178 ;; Hardware stack levels required when called:    2
 43179 ;; This function calls:
 43180 ;;		__flash_get_status
 43181 ;;		__flash_wakeup
 43182 ;; This function is called by:
 43183 ;;		__flash_set_page_size
 43184 ;;		__flash_copy_page_to_buffer
 43185 ;;		__flash_compare_page_to_buffer
 43186 ;;		__flash_write_to_buffer
 43187 ;;		__flash_write_page_from_buffer
 43188 ;;		__flash_partial_read
 43189 ;;		__flash_buffer_read
 43190 ;;		_flash_is_busy
 43191 ;;		_flash_partial_write
 43192 ;;		__flash_erase_page
 43193 ;;		_flash_set_power_state
 43194 ;; This function uses a non-reentrant model
 43195 ;;
 43196                           
 43197                           	psect	text226
 43198  008CE2                     __ptext226:
 43199                           	opt stack 0
 43200  008CE2                     __flash_is_busy:
 43201                           	opt stack 25
 43202                           
 43203                           ;flash.c: 282: uint16_t status;;flash.c: 285: if(power_state!=FLASH_POWER_STATE_NORMAL)
 43204                           
 43205                           ;incstack = 0
 43206  008CE2  0100               	movlb	0	; () banked
 43207  008CE4  51E5               	movf	_power_state& (0+255),w,b
 43208  008CE6  A4D8               	btfss	status,2,c
 43209                           
 43210                           ; BSR set to: 0
 43211                           ;flash.c: 286: {;flash.c: 287: _flash_wakeup();
 43212  008CE8  EC40  F040         	call	__flash_wakeup	;wreg free
 43213                           
 43214                           ;flash.c: 288: };flash.c: 291: status = _flash_get_status();
 43215  008CEC  EC99  F044         	call	__flash_get_status	;wreg free
 43216  008CF0  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 43217  008CF4  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 43218                           
 43219                           ;flash.c: 294: if(status & 0b0000000010000000)
 43220  008CF8  AE12               	btfss	__flash_is_busy@status,7,c
 43221  008CFA  D002               	goto	l1800
 43222                           
 43223                           ;flash.c: 295: {;flash.c: 297: return 0;
 43224  008CFC  0E00               	movlw	0
 43225                           
 43226                           ;flash.c: 298: }
 43227  008CFE  0012               	return	
 43228  008D00                     l1800:
 43229                           
 43230                           ;flash.c: 299: else;flash.c: 300: {;flash.c: 302: return 1;
 43231  008D00  0E01               	movlw	1
 43232  008D02  0012               	return	
 43233  008D04                     __end_of__flash_is_busy:
 43234                           	opt stack 0
 43235                           tosu	equ	0xFFF
 43236                           tosh	equ	0xFFE
 43237                           tosl	equ	0xFFD
 43238                           pclath	equ	0xFFA
 43239                           tblptru	equ	0xFF8
 43240                           tblptrh	equ	0xFF7
 43241                           tblptrl	equ	0xFF6
 43242                           tablat	equ	0xFF5
 43243                           prodh	equ	0xFF4
 43244                           prodl	equ	0xFF3
 43245                           intcon	equ	0xFF2
 43246                           intcon2	equ	0xFF1
 43247                           intcon3	equ	0xFF0
 43248                           indf0	equ	0xFEF
 43249                           postinc0	equ	0xFEE
 43250                           fsr0h	equ	0xFEA
 43251                           fsr0l	equ	0xFE9
 43252                           wreg	equ	0xFE8
 43253                           indf1	equ	0xFE7
 43254                           postdec1	equ	0xFE5
 43255                           plusw1	equ	0xFE3
 43256                           fsr1h	equ	0xFE2
 43257                           fsr1l	equ	0xFE1
 43258                           indf2	equ	0xFDF
 43259                           postinc2	equ	0xFDE
 43260                           postdec2	equ	0xFDD
 43261                           plusw2	equ	0xFDB
 43262                           fsr2h	equ	0xFDA
 43263                           fsr2l	equ	0xFD9
 43264                           status	equ	0xFD8
 43265                           
 43266 ;; *************** function __flash_wakeup *****************
 43267 ;; Defined at:
 43268 ;;		line 127 in file "flash.c"
 43269 ;; Parameters:    Size  Location     Type
 43270 ;;		None
 43271 ;; Auto vars:     Size  Location     Type
 43272 ;;  command         1    8[COMRAM] unsigned char 
 43273 ;; Return value:  Size  Location     Type
 43274 ;;                  1    wreg      void 
 43275 ;; Registers used:
 43276 ;;		wreg, status,2, status,0, cstack
 43277 ;; Tracked objects:
 43278 ;;		On entry : 0/0
 43279 ;;		On exit  : 0/0
 43280 ;;		Unchanged: 0/0
 43281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43282 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43283 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43284 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43285 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43286 ;;Total ram usage:        1 bytes
 43287 ;; Hardware stack levels used:    1
 43288 ;; Hardware stack levels required when called:    1
 43289 ;; This function calls:
 43290 ;;		_spi_tx
 43291 ;; This function is called by:
 43292 ;;		__flash_is_busy
 43293 ;;		_flash_set_power_state
 43294 ;; This function uses a non-reentrant model
 43295 ;;
 43296                           
 43297                           	psect	text227
 43298  008080                     __ptext227:
 43299                           	opt stack 0
 43300  008080                     __flash_wakeup:
 43301                           	opt stack 25
 43302                           
 43303                           ;flash.c: 129: uint8_t command;;flash.c: 131: switch(power_state)
 43304                           
 43305                           ;incstack = 0
 43306  008080  D021               	goto	l1749
 43307  008082                     
 43308                           ;flash.c: 134: command = 0xAB;
 43309  008082  0EAB               	movlw	171
 43310  008084  6E09               	movwf	__flash_wakeup@command,c
 43311                           
 43312                           ;flash.c: 135: spi_tx(&command, 1);
 43313  008086  0E09               	movlw	low __flash_wakeup@command
 43314  008088  6E01               	movwf	spi_tx@data,c
 43315  00808A  0E00               	movlw	high __flash_wakeup@command
 43316  00808C  6E02               	movwf	spi_tx@data+1,c
 43317  00808E  0E00               	movlw	0
 43318  008090  6E04               	movwf	spi_tx@length+1,c
 43319  008092  0E01               	movlw	1
 43320  008094  6E03               	movwf	spi_tx@length,c
 43321  008096  EC12  F03F         	call	_spi_tx	;wreg free
 43322                           
 43323                           ;flash.c: 136: _delay((unsigned long)((35)*(8000000/4000000.0)));
 43324  00809A  0E17               	movlw	23
 43325  00809C                     u13307:
 43326  00809C  2EE8               	decfsz	wreg,f,c
 43327  00809E  D7FE               	bra	u13307
 43328  0080A0  F000               	nop	
 43329                           
 43330                           ;flash.c: 137: power_state = FLASH_POWER_STATE_NORMAL;
 43331  0080A2  0E00               	movlw	0
 43332  0080A4  0100               	movlb	0	; () banked
 43333  0080A6  6FE5               	movwf	_power_state& (0+255),b
 43334                           
 43335                           ;flash.c: 138: break;
 43336  0080A8  0012               	return	
 43337  0080AA                     l1752:
 43338                           
 43339                           ; BSR set to: 0
 43340                           ;flash.c: 143: LATDbits.LD7 = 0;
 43341  0080AA  9E8C               	bcf	3980,7,c	;volatile
 43342                           
 43343                           ; BSR set to: 0
 43344                           ;flash.c: 144: _delay((unsigned long)((20)*(8000000/4000000.0)));
 43345  0080AC  0E0D               	movlw	13
 43346  0080AE                     u13317:
 43347  0080AE  2EE8               	decfsz	wreg,f,c
 43348  0080B0  D7FE               	bra	u13317
 43349  0080B2  F000               	nop	
 43350                           
 43351                           ;flash.c: 145: LATDbits.LD7 = 1;
 43352  0080B4  8E8C               	bsf	3980,7,c	;volatile
 43353                           
 43354                           ;flash.c: 146: _delay((unsigned long)((120)*(8000000/4000000.0)));
 43355  0080B6  0E50               	movlw	80
 43356  0080B8                     u13327:
 43357  0080B8  2EE8               	decfsz	wreg,f,c
 43358  0080BA  D7FE               	bra	u13327
 43359                           
 43360                           ;flash.c: 147: power_state = FLASH_POWER_STATE_NORMAL;
 43361  0080BC  0E00               	movlw	0
 43362  0080BE  0100               	movlb	0	; () banked
 43363  0080C0  6FE5               	movwf	_power_state& (0+255),b
 43364                           
 43365                           ; BSR set to: 0
 43366                           ;flash.c: 149: }
 43367                           
 43368                           ;flash.c: 148: break;
 43369  0080C2  0012               	return	
 43370  0080C4                     l1749:
 43371                           
 43372                           ; BSR set to: 0
 43373  0080C4  0100               	movlb	0	; () banked
 43374  0080C6  51E5               	movf	_power_state& (0+255),w,b
 43375                           
 43376                           ; Switch size 1, requested type "space"
 43377                           ; Number of cases is 2, Range of values is 1 to 2
 43378                           ; switch strategies available:
 43379                           ; Name         Instructions Cycles
 43380                           ; simple_byte            7     4 (average)
 43381                           ;	Chosen strategy is simple_byte
 43382  0080C8  0A01               	xorlw	1	; case 1
 43383  0080CA  B4D8               	btfsc	status,2,c
 43384  0080CC  D7DA               	goto	l1750
 43385  0080CE  0A03               	xorlw	3	; case 2
 43386  0080D0  A4D8               	btfss	status,2,c
 43387  0080D2  0012               	return	
 43388  0080D4  D7EA               	goto	l1752
 43389  0080D6                     __end_of__flash_wakeup:
 43390                           	opt stack 0
 43391                           tosu	equ	0xFFF
 43392                           tosh	equ	0xFFE
 43393                           tosl	equ	0xFFD
 43394                           pclath	equ	0xFFA
 43395                           tblptru	equ	0xFF8
 43396                           tblptrh	equ	0xFF7
 43397                           tblptrl	equ	0xFF6
 43398                           tablat	equ	0xFF5
 43399                           prodh	equ	0xFF4
 43400                           prodl	equ	0xFF3
 43401                           intcon	equ	0xFF2
 43402                           intcon2	equ	0xFF1
 43403                           intcon3	equ	0xFF0
 43404                           indf0	equ	0xFEF
 43405                           postinc0	equ	0xFEE
 43406                           fsr0h	equ	0xFEA
 43407                           fsr0l	equ	0xFE9
 43408                           wreg	equ	0xFE8
 43409                           indf1	equ	0xFE7
 43410                           postdec1	equ	0xFE5
 43411                           plusw1	equ	0xFE3
 43412                           fsr1h	equ	0xFE2
 43413                           fsr1l	equ	0xFE1
 43414                           indf2	equ	0xFDF
 43415                           postinc2	equ	0xFDE
 43416                           postdec2	equ	0xFDD
 43417                           plusw2	equ	0xFDB
 43418                           fsr2h	equ	0xFDA
 43419                           fsr2l	equ	0xFD9
 43420                           status	equ	0xFD8
 43421                           
 43422 ;; *************** function _spi_tx *****************
 43423 ;; Defined at:
 43424 ;;		line 348 in file "spi.c"
 43425 ;; Parameters:    Size  Location     Type
 43426 ;;  data            2    0[COMRAM] PTR unsigned char 
 43427 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 43428 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 43429 ;;  length          2    2[COMRAM] unsigned int 
 43430 ;; Auto vars:     Size  Location     Type
 43431 ;;		None
 43432 ;; Return value:  Size  Location     Type
 43433 ;;                  1    wreg      void 
 43434 ;; Registers used:
 43435 ;;		wreg, status,2, status,0
 43436 ;; Tracked objects:
 43437 ;;		On entry : 0/0
 43438 ;;		On exit  : 0/0
 43439 ;;		Unchanged: 0/0
 43440 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43441 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43442 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43443 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43444 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43445 ;;Total ram usage:        8 bytes
 43446 ;; Hardware stack levels used:    1
 43447 ;; This function calls:
 43448 ;;		Nothing
 43449 ;; This function is called by:
 43450 ;;		__flash_set_page_size
 43451 ;;		__flash_wakeup
 43452 ;;		__flash_copy_page_to_buffer
 43453 ;;		__flash_compare_page_to_buffer
 43454 ;;		__flash_write_page_from_buffer
 43455 ;;		__flash_erase_page
 43456 ;;		_flash_set_power_state
 43457 ;; This function uses a non-reentrant model
 43458 ;;
 43459                           
 43460                           	psect	text228
 43461  007E24                     __ptext228:
 43462                           	opt stack 0
 43463  007E24                     _spi_tx:
 43464                           	opt stack 27
 43465                           
 43466                           ;spi.c: 351: DMACON1bits.SSCON1 = 0;
 43467                           
 43468                           ; BSR set to: 0
 43469                           ;incstack = 0
 43470  007E24  9E88               	bcf	3976,7,c	;volatile
 43471                           
 43472                           ;spi.c: 352: DMACON1bits.SSCON0 = 0;
 43473  007E26  9C88               	bcf	3976,6,c	;volatile
 43474                           
 43475                           ;spi.c: 354: DMACON1bits.TXINC = 1;
 43476  007E28  8A88               	bsf	3976,5,c	;volatile
 43477                           
 43478                           ;spi.c: 356: DMACON1bits.RXINC = 0;
 43479  007E2A  9888               	bcf	3976,4,c	;volatile
 43480                           
 43481                           ;spi.c: 358: DMACON1bits.DUPLEX1 = 0;
 43482  007E2C  9688               	bcf	3976,3,c	;volatile
 43483                           
 43484                           ;spi.c: 359: DMACON1bits.DUPLEX0 = 1;
 43485  007E2E  8488               	bsf	3976,2,c	;volatile
 43486                           
 43487                           ;spi.c: 361: DMACON1bits.DLYINTEN = 0;
 43488  007E30  9288               	bcf	3976,1,c	;volatile
 43489                           
 43490                           ;spi.c: 363: DMACON2bits.DLYCYC = 0b0000;
 43491  007E32  9886               	bcf	3974,4,c	;volatile
 43492  007E34  9A86               	bcf	3974,5,c	;volatile
 43493  007E36  9C86               	bcf	3974,6,c	;volatile
 43494  007E38  9E86               	bcf	3974,7,c	;volatile
 43495                           
 43496                           ;spi.c: 365: DMACON2bits.INTLVL = 0b0000;
 43497  007E3A  9086               	bcf	3974,0,c	;volatile
 43498  007E3C  9286               	bcf	3974,1,c	;volatile
 43499  007E3E  9486               	bcf	3974,2,c	;volatile
 43500  007E40  9686               	bcf	3974,3,c	;volatile
 43501                           
 43502                           ;spi.c: 368: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43503  007E42  5002               	movf	spi_tx@data+1,w,c
 43504  007E44  6E6A               	movwf	3946,c	;volatile
 43505                           
 43506                           ;spi.c: 369: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43507  007E46  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 43508                           
 43509                           ;spi.c: 372: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 43510  007E4A  0EFF               	movlw	255
 43511  007E4C  6E05               	movwf	??_spi_tx& (0+255),c
 43512  007E4E  0EFF               	movlw	255
 43513  007E50  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 43514  007E52  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 43515  007E56  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 43516  007E5A  5005               	movf	??_spi_tx,w,c
 43517  007E5C  2607               	addwf	??_spi_tx+2,f,c
 43518  007E5E  5006               	movf	??_spi_tx+1,w,c
 43519  007E60  2208               	addwfc	??_spi_tx+3,f,c
 43520  007E62  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 43521  007E66  6A08               	clrf	??_spi_tx+3,c
 43522  007E68  5007               	movf	??_spi_tx+2,w,c
 43523  007E6A  6E66               	movwf	3942,c	;volatile
 43524                           
 43525                           ;spi.c: 373: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 43526  007E6C  0403               	decf	spi_tx@length,w,c
 43527  007E6E  6E67               	movwf	3943,c	;volatile
 43528                           
 43529                           ;spi.c: 376: LATDbits.LD7 = 0;
 43530  007E70  9E8C               	bcf	3980,7,c	;volatile
 43531                           
 43532                           ;spi.c: 377: DMACON1bits.DMAEN = 1;
 43533  007E72  8088               	bsf	3976,0,c	;volatile
 43534  007E74  B088               	btfsc	3976,0,c	;volatile
 43535  007E76  D7FE               	goto	l2996
 43536                           
 43537                           ;spi.c: 379: LATDbits.LD7 = 1;
 43538  007E78  8E8C               	bsf	3980,7,c	;volatile
 43539  007E7A  0012               	return		;funcret
 43540  007E7C                     __end_of_spi_tx:
 43541                           	opt stack 0
 43542                           tosu	equ	0xFFF
 43543                           tosh	equ	0xFFE
 43544                           tosl	equ	0xFFD
 43545                           pclath	equ	0xFFA
 43546                           tblptru	equ	0xFF8
 43547                           tblptrh	equ	0xFF7
 43548                           tblptrl	equ	0xFF6
 43549                           tablat	equ	0xFF5
 43550                           prodh	equ	0xFF4
 43551                           prodl	equ	0xFF3
 43552                           intcon	equ	0xFF2
 43553                           intcon2	equ	0xFF1
 43554                           intcon3	equ	0xFF0
 43555                           indf0	equ	0xFEF
 43556                           postinc0	equ	0xFEE
 43557                           fsr0h	equ	0xFEA
 43558                           fsr0l	equ	0xFE9
 43559                           wreg	equ	0xFE8
 43560                           indf1	equ	0xFE7
 43561                           postdec1	equ	0xFE5
 43562                           plusw1	equ	0xFE3
 43563                           fsr1h	equ	0xFE2
 43564                           fsr1l	equ	0xFE1
 43565                           indf2	equ	0xFDF
 43566                           postinc2	equ	0xFDE
 43567                           postdec2	equ	0xFDD
 43568                           plusw2	equ	0xFDB
 43569                           fsr2h	equ	0xFDA
 43570                           fsr2l	equ	0xFD9
 43571                           status	equ	0xFD8
 43572                           
 43573 ;; *************** function __flash_get_status *****************
 43574 ;; Defined at:
 43575 ;;		line 116 in file "flash.c"
 43576 ;; Parameters:    Size  Location     Type
 43577 ;;		None
 43578 ;; Auto vars:     Size  Location     Type
 43579 ;;  status          2   15[COMRAM] unsigned int 
 43580 ;;  command         1   14[COMRAM] unsigned char 
 43581 ;; Return value:  Size  Location     Type
 43582 ;;                  2   12[COMRAM] unsigned int 
 43583 ;; Registers used:
 43584 ;;		wreg, status,2, status,0, cstack
 43585 ;; Tracked objects:
 43586 ;;		On entry : 0/0
 43587 ;;		On exit  : 0/0
 43588 ;;		Unchanged: 0/0
 43589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43590 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43591 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43592 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43593 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43594 ;;Total ram usage:        5 bytes
 43595 ;; Hardware stack levels used:    1
 43596 ;; Hardware stack levels required when called:    1
 43597 ;; This function calls:
 43598 ;;		_spi_tx_rx
 43599 ;; This function is called by:
 43600 ;;		__flash_compare_page_to_buffer
 43601 ;;		__flash_is_busy
 43602 ;; This function uses a non-reentrant model
 43603 ;;
 43604                           
 43605                           	psect	text229
 43606  008932                     __ptext229:
 43607                           	opt stack 0
 43608  008932                     __flash_get_status:
 43609                           	opt stack 25
 43610                           
 43611                           ;flash.c: 120: uint8_t command = 0xD7;
 43612                           
 43613                           ;incstack = 0
 43614  008932  0ED7               	movlw	215
 43615  008934  6E0F               	movwf	__flash_get_status@command,c
 43616                           
 43617                           ;flash.c: 121: uint16_t status;;flash.c: 122: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 43618  008936  0E0F               	movlw	low __flash_get_status@command
 43619  008938  6E01               	movwf	spi_tx_rx@command,c
 43620  00893A  0E00               	movlw	high __flash_get_status@command
 43621  00893C  6E02               	movwf	spi_tx_rx@command+1,c
 43622  00893E  0E00               	movlw	0
 43623  008940  6E04               	movwf	spi_tx_rx@command_length+1,c
 43624  008942  0E01               	movlw	1
 43625  008944  6E03               	movwf	spi_tx_rx@command_length,c
 43626  008946  0E10               	movlw	low __flash_get_status@status
 43627  008948  6E05               	movwf	spi_tx_rx@data,c
 43628  00894A  0E00               	movlw	high __flash_get_status@status
 43629  00894C  6E06               	movwf	spi_tx_rx@data+1,c
 43630  00894E  0E00               	movlw	0
 43631  008950  6E08               	movwf	spi_tx_rx@data_length+1,c
 43632  008952  0E02               	movlw	2
 43633  008954  6E07               	movwf	spi_tx_rx@data_length,c
 43634  008956  EC93  F037         	call	_spi_tx_rx	;wreg free
 43635                           
 43636                           ;flash.c: 123: return status;
 43637  00895A  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 43638  00895E  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 43639  008962  0012               	return	
 43640  008964                     __end_of__flash_get_status:
 43641                           	opt stack 0
 43642                           tosu	equ	0xFFF
 43643                           tosh	equ	0xFFE
 43644                           tosl	equ	0xFFD
 43645                           pclath	equ	0xFFA
 43646                           tblptru	equ	0xFF8
 43647                           tblptrh	equ	0xFF7
 43648                           tblptrl	equ	0xFF6
 43649                           tablat	equ	0xFF5
 43650                           prodh	equ	0xFF4
 43651                           prodl	equ	0xFF3
 43652                           intcon	equ	0xFF2
 43653                           intcon2	equ	0xFF1
 43654                           intcon3	equ	0xFF0
 43655                           indf0	equ	0xFEF
 43656                           postinc0	equ	0xFEE
 43657                           fsr0h	equ	0xFEA
 43658                           fsr0l	equ	0xFE9
 43659                           wreg	equ	0xFE8
 43660                           indf1	equ	0xFE7
 43661                           postdec1	equ	0xFE5
 43662                           plusw1	equ	0xFE3
 43663                           fsr1h	equ	0xFE2
 43664                           fsr1l	equ	0xFE1
 43665                           indf2	equ	0xFDF
 43666                           postinc2	equ	0xFDE
 43667                           postdec2	equ	0xFDD
 43668                           plusw2	equ	0xFDB
 43669                           fsr2h	equ	0xFDA
 43670                           fsr2l	equ	0xFD9
 43671                           status	equ	0xFD8
 43672                           
 43673 ;; *************** function _spi_tx_rx *****************
 43674 ;; Defined at:
 43675 ;;		line 439 in file "spi.c"
 43676 ;; Parameters:    Size  Location     Type
 43677 ;;  command         2    0[COMRAM] PTR unsigned char 
 43678 ;;		 -> _flash_buffer_read@command(4), _flash_partial_read@command(4), _flash_get_status@command(1), 
 43679 ;;  command_leng    2    2[COMRAM] unsigned int 
 43680 ;;  data            2    4[COMRAM] PTR unsigned char 
 43681 ;;		 -> _spi_external_tx_buffer(64), _bootloader_program@root(32), file_buffer(50), _bootloader_verify_file@root(32), 
 43682 ;;		 -> fat_modify_file@root(32), fat_resize_file@root(32), fat_read_from_file@root(32), fat_rename_file@root(32), 
 43683 ;;		 -> fat_get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), _root_is_available@firs
      +t_byte(1), 
 43684 ;;		 -> buffer(512), _flash_get_status@status(2), msd_buffer(512), RAM(3759), 
 43685 ;;  data_length     2    6[COMRAM] unsigned int 
 43686 ;; Auto vars:     Size  Location     Type
 43687 ;;		None
 43688 ;; Return value:  Size  Location     Type
 43689 ;;                  1    wreg      void 
 43690 ;; Registers used:
 43691 ;;		wreg, status,2, status,0
 43692 ;; Tracked objects:
 43693 ;;		On entry : 0/0
 43694 ;;		On exit  : 0/0
 43695 ;;		Unchanged: 0/0
 43696 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43697 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43698 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43699 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43700 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43701 ;;Total ram usage:       12 bytes
 43702 ;; Hardware stack levels used:    1
 43703 ;; This function calls:
 43704 ;;		Nothing
 43705 ;; This function is called by:
 43706 ;;		__flash_get_status
 43707 ;;		__flash_partial_read
 43708 ;;		__flash_buffer_read
 43709 ;; This function uses a non-reentrant model
 43710 ;;
 43711                           
 43712                           	psect	text230
 43713  006F26                     __ptext230:
 43714                           	opt stack 0
 43715  006F26                     _spi_tx_rx:
 43716                           	opt stack 25
 43717                           
 43718                           ;spi.c: 442: DMACON1bits.SSCON1 = 0;
 43719                           
 43720                           ;incstack = 0
 43721  006F26  9E88               	bcf	3976,7,c	;volatile
 43722                           
 43723                           ;spi.c: 443: DMACON1bits.SSCON0 = 0;
 43724  006F28  9C88               	bcf	3976,6,c	;volatile
 43725                           
 43726                           ;spi.c: 445: DMACON1bits.TXINC = 1;
 43727  006F2A  8A88               	bsf	3976,5,c	;volatile
 43728                           
 43729                           ;spi.c: 447: DMACON1bits.RXINC = 0;
 43730  006F2C  9888               	bcf	3976,4,c	;volatile
 43731                           
 43732                           ;spi.c: 449: DMACON1bits.DUPLEX1 = 0;
 43733  006F2E  9688               	bcf	3976,3,c	;volatile
 43734                           
 43735                           ;spi.c: 450: DMACON1bits.DUPLEX0 = 1;
 43736  006F30  8488               	bsf	3976,2,c	;volatile
 43737                           
 43738                           ;spi.c: 452: DMACON1bits.DLYINTEN = 0;
 43739  006F32  9288               	bcf	3976,1,c	;volatile
 43740                           
 43741                           ;spi.c: 454: DMACON2bits.DLYCYC = 0b0000;
 43742  006F34  9886               	bcf	3974,4,c	;volatile
 43743  006F36  9A86               	bcf	3974,5,c	;volatile
 43744  006F38  9C86               	bcf	3974,6,c	;volatile
 43745  006F3A  9E86               	bcf	3974,7,c	;volatile
 43746                           
 43747                           ;spi.c: 456: DMACON2bits.INTLVL = 0b0000;
 43748  006F3C  9086               	bcf	3974,0,c	;volatile
 43749  006F3E  9286               	bcf	3974,1,c	;volatile
 43750  006F40  9486               	bcf	3974,2,c	;volatile
 43751  006F42  9686               	bcf	3974,3,c	;volatile
 43752                           
 43753                           ;spi.c: 459: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 43754  006F44  5002               	movf	spi_tx_rx@command+1,w,c
 43755  006F46  6E6A               	movwf	3946,c	;volatile
 43756                           
 43757                           ;spi.c: 460: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 43758  006F48  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 43759                           
 43760                           ;spi.c: 463: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 43761  006F4C  0EFF               	movlw	255
 43762  006F4E  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43763  006F50  0EFF               	movlw	255
 43764  006F52  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43765  006F54  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 43766  006F58  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 43767  006F5C  5009               	movf	??_spi_tx_rx,w,c
 43768  006F5E  260B               	addwf	??_spi_tx_rx+2,f,c
 43769  006F60  500A               	movf	??_spi_tx_rx+1,w,c
 43770  006F62  220C               	addwfc	??_spi_tx_rx+3,f,c
 43771  006F64  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43772  006F68  6A0C               	clrf	??_spi_tx_rx+3,c
 43773  006F6A  500B               	movf	??_spi_tx_rx+2,w,c
 43774  006F6C  6E66               	movwf	3942,c	;volatile
 43775                           
 43776                           ;spi.c: 464: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 43777  006F6E  0403               	decf	spi_tx_rx@command_length,w,c
 43778  006F70  6E67               	movwf	3943,c	;volatile
 43779                           
 43780                           ;spi.c: 467: LATDbits.LD7 = 0;
 43781  006F72  9E8C               	bcf	3980,7,c	;volatile
 43782                           
 43783                           ;spi.c: 470: DMACON1bits.DMAEN = 1;
 43784  006F74  8088               	bsf	3976,0,c	;volatile
 43785  006F76  B088               	btfsc	3976,0,c	;volatile
 43786  006F78  D7FE               	goto	l3011
 43787                           
 43788                           ;spi.c: 474: DMACON1bits.TXINC = 0;
 43789  006F7A  9A88               	bcf	3976,5,c	;volatile
 43790                           
 43791                           ;spi.c: 476: DMACON1bits.RXINC = 1;
 43792  006F7C  8888               	bsf	3976,4,c	;volatile
 43793                           
 43794                           ;spi.c: 478: DMACON1bits.DUPLEX1 = 0;
 43795  006F7E  9688               	bcf	3976,3,c	;volatile
 43796                           
 43797                           ;spi.c: 479: DMACON1bits.DUPLEX0 = 0;
 43798  006F80  9488               	bcf	3976,2,c	;volatile
 43799                           
 43800                           ;spi.c: 482: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 43801  006F82  5006               	movf	spi_tx_rx@data+1,w,c
 43802  006F84  6E68               	movwf	3944,c	;volatile
 43803                           
 43804                           ;spi.c: 483: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 43805  006F86  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 43806                           
 43807                           ;spi.c: 486: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 43808  006F8A  0EFF               	movlw	255
 43809  006F8C  6E09               	movwf	??_spi_tx_rx& (0+255),c
 43810  006F8E  0EFF               	movlw	255
 43811  006F90  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 43812  006F92  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 43813  006F96  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 43814  006F9A  5009               	movf	??_spi_tx_rx,w,c
 43815  006F9C  260B               	addwf	??_spi_tx_rx+2,f,c
 43816  006F9E  500A               	movf	??_spi_tx_rx+1,w,c
 43817  006FA0  220C               	addwfc	??_spi_tx_rx+3,f,c
 43818  006FA2  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 43819  006FA6  6A0C               	clrf	??_spi_tx_rx+3,c
 43820  006FA8  500B               	movf	??_spi_tx_rx+2,w,c
 43821  006FAA  6E66               	movwf	3942,c	;volatile
 43822                           
 43823                           ;spi.c: 487: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 43824  006FAC  0407               	decf	spi_tx_rx@data_length,w,c
 43825  006FAE  6E67               	movwf	3943,c	;volatile
 43826                           
 43827                           ;spi.c: 490: DMACON1bits.DMAEN = 1;
 43828  006FB0  8088               	bsf	3976,0,c	;volatile
 43829  006FB2  B088               	btfsc	3976,0,c	;volatile
 43830  006FB4  D7FE               	goto	l3014
 43831                           
 43832                           ;spi.c: 494: LATDbits.LD7 = 1;
 43833  006FB6  8E8C               	bsf	3980,7,c	;volatile
 43834  006FB8  0012               	return		;funcret
 43835  006FBA                     __end_of_spi_tx_rx:
 43836                           	opt stack 0
 43837                           tosu	equ	0xFFF
 43838                           tosh	equ	0xFFE
 43839                           tosl	equ	0xFFD
 43840                           pclath	equ	0xFFA
 43841                           tblptru	equ	0xFF8
 43842                           tblptrh	equ	0xFF7
 43843                           tblptrl	equ	0xFF6
 43844                           tablat	equ	0xFF5
 43845                           prodh	equ	0xFF4
 43846                           prodl	equ	0xFF3
 43847                           intcon	equ	0xFF2
 43848                           intcon2	equ	0xFF1
 43849                           intcon3	equ	0xFF0
 43850                           indf0	equ	0xFEF
 43851                           postinc0	equ	0xFEE
 43852                           fsr0h	equ	0xFEA
 43853                           fsr0l	equ	0xFE9
 43854                           wreg	equ	0xFE8
 43855                           indf1	equ	0xFE7
 43856                           postdec1	equ	0xFE5
 43857                           plusw1	equ	0xFE3
 43858                           fsr1h	equ	0xFE2
 43859                           fsr1l	equ	0xFE1
 43860                           indf2	equ	0xFDF
 43861                           postinc2	equ	0xFDE
 43862                           postdec2	equ	0xFDD
 43863                           plusw2	equ	0xFDB
 43864                           fsr2h	equ	0xFDA
 43865                           fsr2l	equ	0xFD9
 43866                           status	equ	0xFD8
 43867                           
 43868 ;; *************** function __fat_sector_from_cluster *****************
 43869 ;; Defined at:
 43870 ;;		line 75 in file "fat16.c"
 43871 ;; Parameters:    Size  Location     Type
 43872 ;;  cluster         2    0[COMRAM] unsigned int 
 43873 ;; Auto vars:     Size  Location     Type
 43874 ;;		None
 43875 ;; Return value:  Size  Location     Type
 43876 ;;                  2    0[COMRAM] unsigned int 
 43877 ;; Registers used:
 43878 ;;		wreg, status,2, status,0
 43879 ;; Tracked objects:
 43880 ;;		On entry : 0/0
 43881 ;;		On exit  : 0/0
 43882 ;;		Unchanged: 0/0
 43883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43884 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43885 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43886 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43887 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43888 ;;Total ram usage:        2 bytes
 43889 ;; Hardware stack levels used:    1
 43890 ;; This function calls:
 43891 ;;		Nothing
 43892 ;; This function is called by:
 43893 ;;		__make_cluster_chain
 43894 ;;		__read_fat
 43895 ;; This function uses a non-reentrant model
 43896 ;;
 43897                           
 43898                           	psect	text231
 43899  008E5A                     __ptext231:
 43900                           	opt stack 0
 43901  008E5A                     __fat_sector_from_cluster:
 43902                           	opt stack 26
 43903                           
 43904                           ;fat16.c: 77: cluster >>= 8;
 43905                           
 43906                           ;incstack = 0
 43907  008E5A  5002               	movf	__fat_sector_from_cluster@cluster+1,w,c
 43908  008E5C  6E01               	movwf	__fat_sector_from_cluster@cluster,c
 43909  008E5E  6A02               	clrf	__fat_sector_from_cluster@cluster+1,c
 43910                           
 43911                           ;fat16.c: 78: cluster += 2;
 43912  008E60  0E02               	movlw	2
 43913  008E62  2601               	addwf	__fat_sector_from_cluster@cluster,f,c
 43914  008E64  0E00               	movlw	0
 43915  008E66  2202               	addwfc	__fat_sector_from_cluster@cluster+1,f,c
 43916                           
 43917                           ;fat16.c: 79: return cluster;
 43918  008E68  C001  F001         	movff	__fat_sector_from_cluster@cluster,?__fat_sector_from_cluster
 43919  008E6C  C002  F002         	movff	__fat_sector_from_cluster@cluster+1,?__fat_sector_from_cluster+1
 43920  008E70  0012               	return	
 43921  008E72                     __end_of__fat_sector_from_cluster:
 43922                           	opt stack 0
 43923                           tosu	equ	0xFFF
 43924                           tosh	equ	0xFFE
 43925                           tosl	equ	0xFFD
 43926                           pclath	equ	0xFFA
 43927                           tblptru	equ	0xFF8
 43928                           tblptrh	equ	0xFF7
 43929                           tblptrl	equ	0xFF6
 43930                           tablat	equ	0xFF5
 43931                           prodh	equ	0xFF4
 43932                           prodl	equ	0xFF3
 43933                           intcon	equ	0xFF2
 43934                           intcon2	equ	0xFF1
 43935                           intcon3	equ	0xFF0
 43936                           indf0	equ	0xFEF
 43937                           postinc0	equ	0xFEE
 43938                           fsr0h	equ	0xFEA
 43939                           fsr0l	equ	0xFE9
 43940                           wreg	equ	0xFE8
 43941                           indf1	equ	0xFE7
 43942                           postdec1	equ	0xFE5
 43943                           plusw1	equ	0xFE3
 43944                           fsr1h	equ	0xFE2
 43945                           fsr1l	equ	0xFE1
 43946                           indf2	equ	0xFDF
 43947                           postinc2	equ	0xFDE
 43948                           postdec2	equ	0xFDD
 43949                           plusw2	equ	0xFDB
 43950                           fsr2h	equ	0xFDA
 43951                           fsr2l	equ	0xFD9
 43952                           status	equ	0xFD8
 43953                           
 43954 ;; *************** function __fat_offset_from_cluster *****************
 43955 ;; Defined at:
 43956 ;;		line 82 in file "fat16.c"
 43957 ;; Parameters:    Size  Location     Type
 43958 ;;  cluster         2    0[COMRAM] unsigned int 
 43959 ;; Auto vars:     Size  Location     Type
 43960 ;;		None
 43961 ;; Return value:  Size  Location     Type
 43962 ;;                  2    0[COMRAM] unsigned int 
 43963 ;; Registers used:
 43964 ;;		wreg, status,2, status,0
 43965 ;; Tracked objects:
 43966 ;;		On entry : 0/0
 43967 ;;		On exit  : 0/0
 43968 ;;		Unchanged: 0/0
 43969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 43970 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43971 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43973 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 43974 ;;Total ram usage:        2 bytes
 43975 ;; Hardware stack levels used:    1
 43976 ;; This function calls:
 43977 ;;		Nothing
 43978 ;; This function is called by:
 43979 ;;		__find_nth_cluster
 43980 ;;		__make_cluster_chain
 43981 ;;		__read_fat
 43982 ;; This function uses a non-reentrant model
 43983 ;;
 43984                           
 43985                           	psect	text232
 43986  008E72                     __ptext232:
 43987                           	opt stack 0
 43988  008E72                     __fat_offset_from_cluster:
 43989                           	opt stack 26
 43990                           
 43991                           ;fat16.c: 84: cluster &= 0xFF;
 43992                           
 43993                           ;incstack = 0
 43994  008E72  0EFF               	movlw	255
 43995  008E74  1601               	andwf	__fat_offset_from_cluster@cluster,f,c
 43996  008E76  0E00               	movlw	0
 43997  008E78  1602               	andwf	__fat_offset_from_cluster@cluster+1,f,c
 43998                           
 43999                           ;fat16.c: 85: cluster <<= 1;
 44000  008E7A  90D8               	bcf	status,0,c
 44001  008E7C  3601               	rlcf	__fat_offset_from_cluster@cluster,f,c
 44002  008E7E  3602               	rlcf	__fat_offset_from_cluster@cluster+1,f,c
 44003                           
 44004                           ;fat16.c: 86: return cluster;
 44005  008E80  C001  F001         	movff	__fat_offset_from_cluster@cluster,?__fat_offset_from_cluster
 44006  008E84  C002  F002         	movff	__fat_offset_from_cluster@cluster+1,?__fat_offset_from_cluster+1
 44007  008E88  0012               	return	
 44008  008E8A                     __end_of__fat_offset_from_cluster:
 44009                           	opt stack 0
 44010                           tosu	equ	0xFFF
 44011                           tosh	equ	0xFFE
 44012                           tosl	equ	0xFFD
 44013                           pclath	equ	0xFFA
 44014                           tblptru	equ	0xFF8
 44015                           tblptrh	equ	0xFF7
 44016                           tblptrl	equ	0xFF6
 44017                           tablat	equ	0xFF5
 44018                           prodh	equ	0xFF4
 44019                           prodl	equ	0xFF3
 44020                           intcon	equ	0xFF2
 44021                           intcon2	equ	0xFF1
 44022                           intcon3	equ	0xFF0
 44023                           indf0	equ	0xFEF
 44024                           postinc0	equ	0xFEE
 44025                           fsr0h	equ	0xFEA
 44026                           fsr0l	equ	0xFE9
 44027                           wreg	equ	0xFE8
 44028                           indf1	equ	0xFE7
 44029                           postdec1	equ	0xFE5
 44030                           plusw1	equ	0xFE3
 44031                           fsr1h	equ	0xFE2
 44032                           fsr1l	equ	0xFE1
 44033                           indf2	equ	0xFDF
 44034                           postinc2	equ	0xFDE
 44035                           postdec2	equ	0xFDD
 44036                           plusw2	equ	0xFDB
 44037                           fsr2h	equ	0xFDA
 44038                           fsr2l	equ	0xFD9
 44039                           status	equ	0xFD8
 44040                           
 44041 ;; *************** function __data_sector_from_cluster *****************
 44042 ;; Defined at:
 44043 ;;		line 70 in file "fat16.c"
 44044 ;; Parameters:    Size  Location     Type
 44045 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 44046 ;; Auto vars:     Size  Location     Type
 44047 ;;		None
 44048 ;; Return value:  Size  Location     Type
 44049 ;;                  2    0[COMRAM] unsigned int 
 44050 ;; Registers used:
 44051 ;;		wreg, status,2, status,0
 44052 ;; Tracked objects:
 44053 ;;		On entry : 0/0
 44054 ;;		On exit  : 0/0
 44055 ;;		Unchanged: 0/0
 44056 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44057 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44058 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44059 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44060 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44061 ;;Total ram usage:        2 bytes
 44062 ;; Hardware stack levels used:    1
 44063 ;; This function calls:
 44064 ;;		Nothing
 44065 ;; This function is called by:
 44066 ;;		__find_nth_cluster
 44067 ;;		_fat_read_from_file_fast
 44068 ;;		_fat_modify_file
 44069 ;;		_fat_copy_sector_to_buffer
 44070 ;;		_fat_write_sector_from_buffer
 44071 ;; This function uses a non-reentrant model
 44072 ;;
 44073                           
 44074                           	psect	text233
 44075  008F66                     __ptext233:
 44076                           	opt stack 0
 44077  008F66                     __data_sector_from_cluster:
 44078                           	opt stack 26
 44079                           
 44080                           ;fat16.c: 72: return fat_cluster + 38 - 2;
 44081                           
 44082                           ;incstack = 0
 44083  008F66  0E24               	movlw	36
 44084  008F68  2401               	addwf	__data_sector_from_cluster@fat_cluster,w,c
 44085  008F6A  6E01               	movwf	?__data_sector_from_cluster,c
 44086  008F6C  0E00               	movlw	0
 44087  008F6E  2002               	addwfc	__data_sector_from_cluster@fat_cluster+1,w,c
 44088  008F70  6E02               	movwf	?__data_sector_from_cluster+1,c
 44089  008F72  0012               	return	
 44090  008F74                     __end_of__data_sector_from_cluster:
 44091                           	opt stack 0
 44092                           tosu	equ	0xFFF
 44093                           tosh	equ	0xFFE
 44094                           tosl	equ	0xFFD
 44095                           pclath	equ	0xFFA
 44096                           tblptru	equ	0xFF8
 44097                           tblptrh	equ	0xFF7
 44098                           tblptrl	equ	0xFF6
 44099                           tablat	equ	0xFF5
 44100                           prodh	equ	0xFF4
 44101                           prodl	equ	0xFF3
 44102                           intcon	equ	0xFF2
 44103                           intcon2	equ	0xFF1
 44104                           intcon3	equ	0xFF0
 44105                           indf0	equ	0xFEF
 44106                           postinc0	equ	0xFEE
 44107                           fsr0h	equ	0xFEA
 44108                           fsr0l	equ	0xFE9
 44109                           wreg	equ	0xFE8
 44110                           indf1	equ	0xFE7
 44111                           postdec1	equ	0xFE5
 44112                           plusw1	equ	0xFE3
 44113                           fsr1h	equ	0xFE2
 44114                           fsr1l	equ	0xFE1
 44115                           indf2	equ	0xFDF
 44116                           postinc2	equ	0xFDE
 44117                           postdec2	equ	0xFDD
 44118                           plusw2	equ	0xFDB
 44119                           fsr2h	equ	0xFDA
 44120                           fsr2l	equ	0xFD9
 44121                           status	equ	0xFD8
 44122                           
 44123 ;; *************** function _USBTransferOnePacket *****************
 44124 ;; Defined at:
 44125 ;;		line 995 in file "usb_device.c"
 44126 ;; Parameters:    Size  Location     Type
 44127 ;;  ep              1    wreg     unsigned char 
 44128 ;;  dir             1    0[COMRAM] unsigned char 
 44129 ;;  data            2    1[COMRAM] PTR unsigned char 
 44130 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 44131 ;;		 -> msd_cbw(31), NULL(0), 
 44132 ;;  len             1    3[COMRAM] unsigned char 
 44133 ;; Auto vars:     Size  Location     Type
 44134 ;;  ep              1    8[COMRAM] unsigned char 
 44135 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 44136 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 44137 ;; Return value:  Size  Location     Type
 44138 ;;                  2    0[COMRAM] PTR void 
 44139 ;; Registers used:
 44140 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 44141 ;; Tracked objects:
 44142 ;;		On entry : 0/0
 44143 ;;		On exit  : 0/0
 44144 ;;		Unchanged: 0/0
 44145 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 44146 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44147 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44148 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44149 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 44150 ;;Total ram usage:       11 bytes
 44151 ;; Hardware stack levels used:    1
 44152 ;; This function calls:
 44153 ;;		Nothing
 44154 ;; This function is called by:
 44155 ;;		_USBMSDInit
 44156 ;;		_USBCheckMSDRequest
 44157 ;;		_MSDTasks
 44158 ;;		_MSDProcessCommandMediaPresent
 44159 ;;		_MSDReadHandler
 44160 ;;		_MSDWriteHandler
 44161 ;;		_MSDTransferTerminated
 44162 ;;		_APP_DeviceCustomHIDInitialize
 44163 ;;		_APP_DeviceCustomHIDTasks
 44164 ;; This function uses a non-reentrant model
 44165 ;;
 44166                           
 44167                           	psect	text234
 44168  004BE4                     __ptext234:
 44169                           	opt stack 0
 44170  004BE4                     _USBTransferOnePacket:
 44171                           	opt stack 27
 44172                           
 44173                           ;incstack = 0
 44174                           ;USBTransferOnePacket@ep stored from wreg
 44175  004BE4  6E09               	movwf	USBTransferOnePacket@ep,c
 44176                           
 44177                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 44178  004BE6  5001               	movf	USBTransferOnePacket@dir,w,c
 44179  004BE8  B4D8               	btfsc	status,2,c
 44180  004BEA  D007               	goto	l183
 44181                           
 44182                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 44183  004BEC  5009               	movf	USBTransferOnePacket@ep,w,c
 44184  004BEE  0D02               	mullw	2
 44185  004BF0  0ED1               	movlw	low _pBDTEntryIn
 44186  004BF2  24F3               	addwf	prodl,w,c
 44187  004BF4  6ED9               	movwf	fsr2l,c
 44188  004BF6  0E00               	movlw	high _pBDTEntryIn
 44189  004BF8  D006               	goto	L47
 44190  004BFA                     l183:
 44191                           
 44192                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 44193  004BFA  5009               	movf	USBTransferOnePacket@ep,w,c
 44194  004BFC  0D02               	mullw	2
 44195  004BFE  0E40               	movlw	low _pBDTEntryOut
 44196  004C00  24F3               	addwf	prodl,w,c
 44197  004C02  6ED9               	movwf	fsr2l,c
 44198  004C04  0E01               	movlw	high _pBDTEntryOut
 44199  004C06                     L47:
 44200  004C06  20F4               	addwfc	prodh,w,c
 44201  004C08  6EDA               	movwf	fsr2h,c
 44202  004C0A  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 44203  004C0E  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 44204                           
 44205                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 44206  004C12  500A               	movf	USBTransferOnePacket@handle,w,c
 44207  004C14  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 44208  004C16  A4D8               	btfss	status,2,c
 44209  004C18  D005               	goto	l185
 44210                           
 44211                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 44212  004C1A  0E00               	movlw	0
 44213  004C1C  6E01               	movwf	?_USBTransferOnePacket,c
 44214  004C1E  0E00               	movlw	0
 44215  004C20  6E02               	movwf	?_USBTransferOnePacket+1,c
 44216  004C22  0012               	return	
 44217  004C24                     l185:
 44218                           
 44219                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 44220  004C24  EE20 F002          	lfsr	2,2
 44221  004C28  500A               	movf	USBTransferOnePacket@handle,w,c
 44222  004C2A  26D9               	addwf	fsr2l,f,c
 44223  004C2C  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44224  004C2E  22DA               	addwfc	fsr2h,f,c
 44225  004C30  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 44226  004C34  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 44227                           
 44228                           ;usb_device.c: 1030: handle->CNT = len;
 44229  004C38  EE20 F001          	lfsr	2,1
 44230  004C3C  500A               	movf	USBTransferOnePacket@handle,w,c
 44231  004C3E  26D9               	addwf	fsr2l,f,c
 44232  004C40  500B               	movf	USBTransferOnePacket@handle+1,w,c
 44233  004C42  22DA               	addwfc	fsr2h,f,c
 44234  004C44  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 44235                           
 44236                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 44237  004C48  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44238  004C4C  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44239  004C50  0E40               	movlw	64
 44240  004C52  16DF               	andwf	indf2,f,c
 44241                           
 44242                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 44243  004C54  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44244  004C58  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44245  004C5C  0E00               	movlw	0
 44246  004C5E  86DB               	bsf	plusw2,3,c
 44247                           
 44248                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 44249  004C60  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 44250  004C64  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 44251  004C68  0E00               	movlw	0
 44252  004C6A  8EDB               	bsf	plusw2,7,c
 44253                           
 44254                           ;usb_device.c: 1036: if(dir != 0)
 44255  004C6C  5001               	movf	USBTransferOnePacket@dir,w,c
 44256  004C6E  B4D8               	btfsc	status,2,c
 44257  004C70  D018               	goto	l187
 44258                           
 44259                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 44260  004C72  5009               	movf	USBTransferOnePacket@ep,w,c
 44261  004C74  0D02               	mullw	2
 44262  004C76  0ED1               	movlw	low _pBDTEntryIn
 44263  004C78  24F3               	addwf	prodl,w,c
 44264  004C7A  6ED9               	movwf	fsr2l,c
 44265  004C7C  0E00               	movlw	high _pBDTEntryIn
 44266  004C7E  20F4               	addwfc	prodh,w,c
 44267  004C80  6EDA               	movwf	fsr2h,c
 44268  004C82  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44269  004C86  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44270  004C8A  0E04               	movlw	4
 44271  004C8C  1805               	xorwf	??_USBTransferOnePacket,w,c
 44272  004C8E  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44273  004C90  5006               	movf	??_USBTransferOnePacket+1,w,c
 44274  004C92  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44275  004C94  5009               	movf	USBTransferOnePacket@ep,w,c
 44276  004C96  0D02               	mullw	2
 44277  004C98  0ED1               	movlw	low _pBDTEntryIn
 44278  004C9A  24F3               	addwf	prodl,w,c
 44279  004C9C  6ED9               	movwf	fsr2l,c
 44280  004C9E  0E00               	movlw	high _pBDTEntryIn
 44281  004CA0  D017               	goto	L48
 44282  004CA2                     l187:
 44283                           
 44284                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 44285  004CA2  5009               	movf	USBTransferOnePacket@ep,w,c
 44286  004CA4  0D02               	mullw	2
 44287  004CA6  0E40               	movlw	low _pBDTEntryOut
 44288  004CA8  24F3               	addwf	prodl,w,c
 44289  004CAA  6ED9               	movwf	fsr2l,c
 44290  004CAC  0E01               	movlw	high _pBDTEntryOut
 44291  004CAE  20F4               	addwfc	prodh,w,c
 44292  004CB0  6EDA               	movwf	fsr2h,c
 44293  004CB2  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 44294  004CB6  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 44295  004CBA  0E04               	movlw	4
 44296  004CBC  1805               	xorwf	??_USBTransferOnePacket,w,c
 44297  004CBE  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 44298  004CC0  5006               	movf	??_USBTransferOnePacket+1,w,c
 44299  004CC2  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 44300  004CC4  5009               	movf	USBTransferOnePacket@ep,w,c
 44301  004CC6  0D02               	mullw	2
 44302  004CC8  0E40               	movlw	low _pBDTEntryOut
 44303  004CCA  24F3               	addwf	prodl,w,c
 44304  004CCC  6ED9               	movwf	fsr2l,c
 44305  004CCE  0E01               	movlw	high _pBDTEntryOut
 44306  004CD0                     L48:
 44307  004CD0  20F4               	addwfc	prodh,w,c
 44308  004CD2  6EDA               	movwf	fsr2h,c
 44309  004CD4  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 44310  004CD8  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 44311                           
 44312                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 44313  004CDC  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 44314  004CE0  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 44315  004CE4  0012               	return	
 44316  004CE6                     __end_of_USBTransferOnePacket:
 44317                           	opt stack 0
 44318                           tosu	equ	0xFFF
 44319                           tosh	equ	0xFFE
 44320                           tosl	equ	0xFFD
 44321                           pclath	equ	0xFFA
 44322                           tblptru	equ	0xFF8
 44323                           tblptrh	equ	0xFF7
 44324                           tblptrl	equ	0xFF6
 44325                           tablat	equ	0xFF5
 44326                           prodh	equ	0xFF4
 44327                           prodl	equ	0xFF3
 44328                           intcon	equ	0xFF2
 44329                           intcon2	equ	0xFF1
 44330                           intcon3	equ	0xFF0
 44331                           indf0	equ	0xFEF
 44332                           postinc0	equ	0xFEE
 44333                           fsr0h	equ	0xFEA
 44334                           fsr0l	equ	0xFE9
 44335                           wreg	equ	0xFE8
 44336                           indf1	equ	0xFE7
 44337                           postdec1	equ	0xFE5
 44338                           plusw1	equ	0xFE3
 44339                           fsr1h	equ	0xFE2
 44340                           fsr1l	equ	0xFE1
 44341                           indf2	equ	0xFDF
 44342                           postinc2	equ	0xFDE
 44343                           postdec2	equ	0xFDD
 44344                           plusw2	equ	0xFDB
 44345                           fsr2h	equ	0xFDA
 44346                           fsr2l	equ	0xFD9
 44347                           status	equ	0xFD8
 44348                           tosu	equ	0xFFF
 44349                           tosh	equ	0xFFE
 44350                           tosl	equ	0xFFD
 44351                           pclath	equ	0xFFA
 44352                           tblptru	equ	0xFF8
 44353                           tblptrh	equ	0xFF7
 44354                           tblptrl	equ	0xFF6
 44355                           tablat	equ	0xFF5
 44356                           prodh	equ	0xFF4
 44357                           prodl	equ	0xFF3
 44358                           intcon	equ	0xFF2
 44359                           intcon2	equ	0xFF1
 44360                           intcon3	equ	0xFF0
 44361                           indf0	equ	0xFEF
 44362                           postinc0	equ	0xFEE
 44363                           fsr0h	equ	0xFEA
 44364                           fsr0l	equ	0xFE9
 44365                           wreg	equ	0xFE8
 44366                           indf1	equ	0xFE7
 44367                           postdec1	equ	0xFE5
 44368                           plusw1	equ	0xFE3
 44369                           fsr1h	equ	0xFE2
 44370                           fsr1l	equ	0xFE1
 44371                           indf2	equ	0xFDF
 44372                           postinc2	equ	0xFDE
 44373                           postdec2	equ	0xFDD
 44374                           plusw2	equ	0xFDB
 44375                           fsr2h	equ	0xFDA
 44376                           fsr2l	equ	0xFD9
 44377                           status	equ	0xFD8
 44378                           
 44379                           	psect	text235
 44380  000000                     __ptext235:
 44381                           	opt stack 0
 44382                           tosu	equ	0xFFF
 44383                           tosh	equ	0xFFE
 44384                           tosl	equ	0xFFD
 44385                           pclath	equ	0xFFA
 44386                           tblptru	equ	0xFF8
 44387                           tblptrh	equ	0xFF7
 44388                           tblptrl	equ	0xFF6
 44389                           tablat	equ	0xFF5
 44390                           prodh	equ	0xFF4
 44391                           prodl	equ	0xFF3
 44392                           intcon	equ	0xFF2
 44393                           intcon2	equ	0xFF1
 44394                           intcon3	equ	0xFF0
 44395                           indf0	equ	0xFEF
 44396                           postinc0	equ	0xFEE
 44397                           fsr0h	equ	0xFEA
 44398                           fsr0l	equ	0xFE9
 44399                           wreg	equ	0xFE8
 44400                           indf1	equ	0xFE7
 44401                           postdec1	equ	0xFE5
 44402                           plusw1	equ	0xFE3
 44403                           fsr1h	equ	0xFE2
 44404                           fsr1l	equ	0xFE1
 44405                           indf2	equ	0xFDF
 44406                           postinc2	equ	0xFDE
 44407                           postdec2	equ	0xFDD
 44408                           plusw2	equ	0xFDB
 44409                           fsr2h	equ	0xFDA
 44410                           fsr2l	equ	0xFD9
 44411                           status	equ	0xFD8
 44412                           
 44413                           	psect	rparam
 44414  0000                     tosu	equ	0xFFF
 44415                           tosh	equ	0xFFE
 44416                           tosl	equ	0xFFD
 44417                           pclath	equ	0xFFA
 44418                           tblptru	equ	0xFF8
 44419                           tblptrh	equ	0xFF7
 44420                           tblptrl	equ	0xFF6
 44421                           tablat	equ	0xFF5
 44422                           prodh	equ	0xFF4
 44423                           prodl	equ	0xFF3
 44424                           intcon	equ	0xFF2
 44425                           intcon2	equ	0xFF1
 44426                           intcon3	equ	0xFF0
 44427                           indf0	equ	0xFEF
 44428                           postinc0	equ	0xFEE
 44429                           fsr0h	equ	0xFEA
 44430                           fsr0l	equ	0xFE9
 44431                           wreg	equ	0xFE8
 44432                           indf1	equ	0xFE7
 44433                           postdec1	equ	0xFE5
 44434                           plusw1	equ	0xFE3
 44435                           fsr1h	equ	0xFE2
 44436                           fsr1l	equ	0xFE1
 44437                           indf2	equ	0xFDF
 44438                           postinc2	equ	0xFDE
 44439                           postdec2	equ	0xFDD
 44440                           plusw2	equ	0xFDB
 44441                           fsr2h	equ	0xFDA
 44442                           fsr2l	equ	0xFD9
 44443                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    823
    Data        38
    BSS         2159
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160    101     160
    BANK1           256      0     216
    BANK2           256      0     194
    BANK3           256      0     192
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), 
		 -> RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 40959
		 -> _spi_external_rx_buffer(BANK3[64]), ROM(CODE[40959]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> ReceivedDataBuffer(BANK2[64]), inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), 
		 -> SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_buffer_read@command(COMRAM[4]), _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_write_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_buffer_to_sector@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_sector_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_format_drive@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_file_resize@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    _fill_buffer_read_buffer@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_buffer@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), _bootloader_verify_file@root(BANK0[32]), fat_modify_file@root(BANK0[32]), 
		 -> fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), RAM(DATA[3759]), 

    fat_modify_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_read_from_file_fast@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_read_from_file_fast@cluster	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster(BANK0[2]), fat_read_from_file@cluster(BANK0[2]), 

    fat_read_from_file_fast@cluster_number	PTR unsigned int  size(2) Largest target is 2
		 -> fast_read_cluster_number(BANK0[2]), fat_read_from_file@cluster_number(BANK0[2]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_extension(CODE[4]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK3[64]), bootloader_filename(CODE[9]), ReceivedDataBuffer(BANK2[64]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 

    _write_value_to_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _read_value_from_offset@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    _get_available_offset_from_buffer@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), 

    flash_read_from_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), ReceivedDataBuffer(BANK2[64]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> RAM(DATA[3759]), 

    flash_sector_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_sector_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_buffer_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), RAM(DATA[3759]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), _bootloader_program@root(BANK0[32]), file_buffer(BANK2[50]), _bootloader_verify_file@root(BANK0[32]), 
		 -> fat_modify_file@root(BANK0[32]), fat_resize_file@root(BANK0[32]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), 
		 -> fat_get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), 
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 512
		 -> _spi_external_rx_buffer(BANK3[64]), fat_resize_file@root(BANK0[32]), fat_rename_file@root(COMRAM[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _delete_root@deleted_value(COMRAM[1]), buffer(BIGRAMll[512]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK2[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK2[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK3[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK3[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK3[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _system_minimal_init->_system_delay_ms
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_sector_read
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_get_file_size
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_sector_write
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_sector_read
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _fat_read_from_file_fast->__find_nth_cluster
    __fill_buffer_read_buffer->_fat_read_from_buffer
    _fat_read_from_buffer->_flash_read_from_buffer
    _flash_read_from_buffer->__flash_buffer_read
    __flash_buffer_read->__flash_is_busy
    __fill_buffer_get_status->_flash_is_busy
    _flash_is_busy->__flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _reboot->_display_prepare
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_command_long->__parse_file_rename
    __parse_write_buffer->_fat_write_to_buffer
    _fat_write_to_buffer->_flash_write_to_buffer
    _flash_write_to_buffer->__flash_write_to_buffer
    __parse_sector_to_buffer->_fat_copy_sector_to_buffer
    _fat_copy_sector_to_buffer->_fat_get_file_size
    _flash_copy_page_to_buffer->__flash_copy_page_to_buffer
    __parse_format_drive->_fat_format
    _fat_format->_flash_sector_write
    __parse_file_resize->_fat_resize_file
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_modify->_fat_modify_file
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__make_cluster_chain
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->__make_cluster_chain
    _fat_find_file->_flash_sector_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file
    _fat_resize_file->__make_cluster_chain
    __write_root->_flash_partial_write
    __make_cluster_chain->__get_available_cluster
    _flash_sector_write->__flash_compare_page_to_buffer
    __get_available_cluster->_flash_sector_read
    _fat_modify_file->__find_nth_cluster
    _flash_partial_write->__flash_compare_page_to_buffer
    __flash_write_to_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    _fat_get_file_information->_flash_partial_read
    __parse_buffer_to_sector->_fat_write_sector_from_buffer
    _fat_write_sector_from_buffer->_fat_get_file_size
    _flash_write_page_from_buffer->__flash_write_page_from_buffer
    __flash_write_page_from_buffer->__flash_is_busy
    _fat_get_file_size->__root_is_available
    __root_is_available->_flash_partial_read
    __get_first_cluster->_flash_partial_read
    __find_nth_cluster->__read_fat
    _flash_sector_read->__flash_partial_read
    __read_fat->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file_fast
    __bootloader_program->_fat_read_from_file_fast
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_read_from_file_fast
    _api_parse->__parse_command_long
    __parse_file_resize->_fat_resize_file
    __parse_file_modify->_fat_modify_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_modify_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 2180541
                                             91 BANK0     10    10      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                   _system_full_init
                _system_minimal_init
           _system_minimal_init_undo
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0   93854
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0   86544
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init_undo                             0     0      0       0
                          _i2c_reset
 ---------------------------------------------------------------------------------
 (2) _i2c_reset                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_minimal_init                                  0     0      0      90
                           _i2c_init
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_full_init                                     0     0      0   32179
               __system_encoder_init
                __system_timer0_init
                           _fat_init
                         _flash_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6660
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6416
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   25519
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    6791
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  138071
                                             91 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             49    49      0   62668
                                             14 BANK0     49    49      0
          __bootloader_check_address
           _fat_get_file_information
                  _fat_get_file_size
            _fat_read_from_file_fast
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 59    59      0   52842
                                             14 BANK0     59    59      0
          __bootloader_check_address
           _fat_get_file_information
            _fat_read_from_file_fast
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   22495
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5816
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0  106716
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0  106716
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0  101552
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   51527
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   49769
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   24985
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   17397
                                             36 COMRAM    11     2      9
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   13888
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    6492
                                             43 COMRAM    10     2      8
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  789392
                                             87 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   90730
                                             82 BANK0      5     1      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
           __fill_buffer_read_buffer
             __fill_buffer_read_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   60010
                                             62 BANK0     20    16      4
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  52    42     10   44394
                                             91 COMRAM     4     4      0
                                             14 BANK0     48    38     10
           _fat_get_file_information
            _fat_read_from_file_fast
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file_fast                             40    26     14   35695
                                             65 COMRAM    26    12     14
                                              0 BANK0     14    14      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_buffer                            10     6      4    5742
                                             42 COMRAM    10     6      4
               _fat_read_from_buffer
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_buffer                                 6     0      6    5207
                                             36 COMRAM     6     0      6
             _flash_read_from_buffer
 ---------------------------------------------------------------------------------
 (4) _flash_read_from_buffer                               6     0      6    4874
                                             30 COMRAM     6     0      6
                 __flash_buffer_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_buffer_read                                  11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    3133
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (3) _flash_is_busy                                        1     1      0    2736
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        6     2      4    8417
                                             55 COMRAM     6     2      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    8127
                                             54 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  695349
                                             59 BANK0      6     3      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0   86566
                                             43 COMRAM     1     1      0
               _i2c_eeprom_writeByte
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0   83335
                    _display_prepare
                     _display_update
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (4) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (4) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (5) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (5) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (6) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (4) _display_prepare                                      3     3      0   80147
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                 __display_rebooting
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (5) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (5) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (5) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_rebooting                                   1     1      0      68
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (5) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (7) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (5) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (5) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (6) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (7) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (8) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (9) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (9) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    3163
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  608115
                                             56 BANK0      3     1      2
            __parse_buffer_to_sector
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
                 __parse_file_resize
                __parse_format_drive
            __parse_sector_to_buffer
                __parse_write_buffer
 ---------------------------------------------------------------------------------
 (3) __parse_write_buffer                                  7     5      2    5520
                                             42 COMRAM     7     5      2
                _fat_write_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_to_buffer                                  6     0      6    5207
                                             36 COMRAM     6     0      6
              _flash_write_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_to_buffer                                6     0      6    4874
                                             30 COMRAM     6     0      6
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_sector_to_buffer                              5     3      2   52275
                                             83 COMRAM     5     3      2
          _fat_copy_sector_to_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_copy_sector_to_buffer                           17    15      2   52029
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
          _flash_copy_page_to_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_copy_page_to_buffer                            2     0      2    4698
                                             29 COMRAM     2     0      2
         __flash_copy_page_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) __parse_format_drive                                  3     1      2   18883
                                             38 COMRAM     3     1      2
                         _fat_format
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   18728
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_resize                                   7     5      2   76134
                                             84 COMRAM     7     5      2
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   32959
                                             94 COMRAM     1     1      0
                                              0 BANK0      2     0      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     39    35      4   32738
                                             55 COMRAM    39    35      4
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   9     7      2   58995
                                             85 COMRAM     9     7      2
                    _fat_modify_file
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   74633
                                             79 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      3     3      0   74456
                                             76 COMRAM     3     3      0
                       __delete_root
                 __get_first_cluster
                __make_cluster_chain
                 __root_is_available
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         6     6      0   23869
                                             40 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   7     5      2   78524
                                             88 COMRAM     7     5      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     49    41      8   78208
                                             76 COMRAM    12     4      8
                                              0 BANK0     37    37      0
          __get_available_root_entry
                          __get_date
                          __get_time
                __make_cluster_chain
                        __write_root
                      _fat_find_file
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       11     7      4    7683
                                             43 COMRAM    11     7      4
                  _flash_sector_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_time                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    7507
                                             53 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  157375
                                             89 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  14    10      4  157132
                                             85 COMRAM     4     0      4
                                             46 BANK0     10    10      0
                 __root_is_available
                  _fat_get_file_size
                    _fat_modify_file
                    _fat_resize_file
 ---------------------------------------------------------------------------------
 (4) _fat_resize_file                                     47    43      4   75840
                                             76 COMRAM     8     4      4
                                              0 BANK0     39    39      0
                __make_cluster_chain
                 __root_is_available
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (5) __write_root                                          7     5      2   24135
                                             40 COMRAM     7     5      2
           __offset_from_file_number
           __sector_from_file_number
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __make_cluster_chain                                 23    19      4   35685
                                             53 COMRAM    23    19      4
           __fat_offset_from_cluster
           __fat_sector_from_cluster
             __get_available_cluster
  __get_available_offset_from_buffer
            __read_value_from_offset
             __write_value_to_offset
                  _flash_sector_read
                 _flash_sector_write
 ---------------------------------------------------------------------------------
 (4) _flash_sector_write                                   5     1      4   17052
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (6) __write_value_to_offset                               8     2      6     934
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (6) __get_available_cluster                              10     6      4    7774
                                             43 COMRAM    10     6      4
    __cluster_from_sector_and_offset
  __get_available_offset_from_buffer
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (6) __get_available_offset_from_buffer                    8     4      4     712
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) __cluster_from_sector_and_offset                      4     0      4     226
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (4) _fat_modify_file                                     66    58      8   58612
                                             65 COMRAM    20    12      8
                                              0 BANK0     46    46      0
          __data_sector_from_cluster
                  __find_nth_cluster
                          __read_fat
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   23662
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
                     __flash_is_busy
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    4519
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) __flash_copy_page_to_buffer                          10     7      3    4565
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5899
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_information                             8     6      2    8040
                                             47 COMRAM     8     6      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) __parse_buffer_to_sector                              5     3      2   52453
                                             83 COMRAM     5     3      2
       _fat_write_sector_from_buffer
 ---------------------------------------------------------------------------------
 (4) _fat_write_sector_from_buffer                        17    15      2   52207
                                             66 COMRAM    17    15      2
          __data_sector_from_cluster
                  __find_nth_cluster
                 __get_first_cluster
                 __root_is_available
                  _fat_get_file_size
       _flash_write_page_from_buffer
 ---------------------------------------------------------------------------------
 (5) _flash_write_page_from_buffer                         2     0      2    4876
                                             29 COMRAM     2     0      2
      __flash_write_page_from_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4743
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   13     9      4   14812
                                             53 COMRAM    13     9      4
           __offset_from_file_number
                 __root_is_available
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __root_is_available                                   6     6      0    7417
                                             47 COMRAM     6     6      0
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                   9     7      2    7374
                                             47 COMRAM     9     7      2
           __offset_from_file_number
           __sector_from_file_number
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) __sector_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (5) __offset_from_file_number                             5     3      2      47
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (4) __find_nth_cluster                                   10     6      4   16947
                                             55 COMRAM    10     6      4
          __data_sector_from_cluster
           __fat_offset_from_cluster
                          __read_fat
            __read_value_from_offset
                  _flash_sector_read
 ---------------------------------------------------------------------------------
 (4) _flash_sector_read                                    4     0      4    6211
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __read_value_from_offset                              9     5      4     825
                                              0 COMRAM     9     5      4
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8217
                                             47 COMRAM     8     6      2
           __fat_offset_from_cluster
           __fat_sector_from_cluster
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7145
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4899
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2691
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2    1311
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8    1244
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __fat_sector_from_cluster                             2     0      2     380
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __fat_offset_from_cluster                             2     0      2     291
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) __data_sector_from_cluster                            2     0      2     467
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_buffer_to_sector
           _fat_write_sector_from_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_write_page_from_buffer
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_file_append
           _fat_append_to_file
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_modify_file
               __data_sector_from_cluster
               __find_nth_cluster
                 __data_sector_from_cluster
                 __fat_offset_from_cluster
                 __read_fat
                   __fat_offset_from_cluster
                   __fat_sector_from_cluster
                   _flash_partial_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __read_value_from_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_resize_file
               __make_cluster_chain
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 __get_available_cluster
                   __cluster_from_sector_and_offset
                   __get_available_offset_from_buffer
                   _flash_sector_read
                     __flash_partial_read
                       __flash_is_busy
                         __flash_get_status
                           _spi_tx_rx
                         __flash_wakeup
                           _spi_tx
                       _spi_tx_rx
                     _spi_set_configuration
                 __get_available_offset_from_buffer
                 __read_value_from_offset
                 __write_value_to_offset
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __write_root
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_copy_page_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _fat_get_file_information
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_time
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_find_file
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_modify
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_file_rename
           _fat_rename_file
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_resize
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_format_drive
           _fat_format
             __get_data
             __get_fat
             __get_fbr
             __get_mbr
             __get_root
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
         __parse_sector_to_buffer
           _fat_copy_sector_to_buffer
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_first_cluster
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_size
               __offset_from_file_number
               __root_is_available
                 __offset_from_file_number
                 __sector_from_file_number
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_copy_page_to_buffer
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               _spi_set_configuration
         __parse_write_buffer
           _fat_write_to_buffer
             _flash_write_to_buffer
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _reboot
           _display_prepare
             __display_checked
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_total_entries
             __display_clear
             __display_done
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_flashPagesWritten
             __display_failed
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_error
               _bootloader_get_rec_address
             __display_found
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size
             __display_programming
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
               _bootloader_get_flashPagesWritten
               _bootloader_get_total_entries
             __display_rebooting
             __display_search
             __display_start
               __display_itoa_u32
                 ___lldiv
                 ___llmod
                 __display_itoa_u16
                   _bootloader_get_entries (ARG)
                   _bootloader_get_flashPagesWritten (ARG)
                   _bootloader_get_total_entries (ARG)
                   _itoa (ARG)
                     ___lldiv (ARG)
                     ___llmod (ARG)
                     _utoa (ARG)
                       ___lwdiv
                       ___lwmod
                 _bootloader_get_file_size (ARG)
                 _bootloader_get_rec_address (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
             __display_verify
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_entries
           _display_update
             _i2c_display_cursor
               __ic2_display_set_address
                 __i2c_write
                   __i2c_send
                   __i2c_start
                   __i2c_stop
                   __i2c_wait_idle
                 _i2c_set_frequency
               _i2c_set_frequency
             _i2c_display_write_fixed
               __i2c_send
               __i2c_start
               __i2c_stop
               __i2c_wait_idle
               _i2c_set_frequency
           _ui_get_status
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_buffer
         _fat_read_from_buffer
           _flash_read_from_buffer
             __flash_buffer_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_read_file
         _fat_get_file_size
           __offset_from_file_number
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_read_from_file_fast
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_sector_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_buffer_to_sector
         _fat_write_sector_from_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_write_page_from_buffer
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_file_append
         _fat_append_to_file
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_modify_file
             __data_sector_from_cluster
             __find_nth_cluster
               __data_sector_from_cluster
               __fat_offset_from_cluster
               __read_fat
                 __fat_offset_from_cluster
                 __fat_sector_from_cluster
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __read_value_from_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_resize_file
             __make_cluster_chain
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               __get_available_cluster
                 __cluster_from_sector_and_offset
                 __get_available_offset_from_buffer
                 _flash_sector_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               __get_available_offset_from_buffer
               __read_value_from_offset
               __write_value_to_offset
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _flash_sector_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_root
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _fat_get_file_information
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_time
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_find_file
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_modify
         _fat_modify_file
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_file_rename
         _fat_rename_file
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_resize
         _fat_resize_file
           __make_cluster_chain
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             __get_available_cluster
               __cluster_from_sector_and_offset
               __get_available_offset_from_buffer
               _flash_sector_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_available_offset_from_buffer
             __read_value_from_offset
             __write_value_to_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _flash_sector_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_root
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _spi_set_configuration
           _fat_get_file_information
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_format_drive
         _fat_format
           __get_data
           __get_fat
           __get_fbr
           __get_mbr
           __get_root
           _flash_sector_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
       __parse_sector_to_buffer
         _fat_copy_sector_to_buffer
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_first_cluster
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             __offset_from_file_number
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _fat_get_file_size
             __offset_from_file_number
             __root_is_available
               __offset_from_file_number
               __sector_from_file_number
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_file_number
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_copy_page_to_buffer
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             _spi_set_configuration
       __parse_write_buffer
         _fat_write_to_buffer
           _flash_write_to_buffer
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _spi_set_configuration
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_buffer
       _fat_read_from_buffer
         _flash_read_from_buffer
           __flash_buffer_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_read_file
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         _fat_get_file_information
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file_fast
           __data_sector_from_cluster
           __find_nth_cluster
             __data_sector_from_cluster
             __fat_offset_from_cluster
             __read_fat
               __fat_offset_from_cluster
               __fat_sector_from_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_value_from_offset
             _flash_sector_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_information
         __offset_from_file_number
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_get_file_size
         __offset_from_file_number
         __root_is_available
           __offset_from_file_number
           __sector_from_file_number
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_file_number
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file_fast
         __data_sector_from_cluster
         __find_nth_cluster
           __data_sector_from_cluster
           __fat_offset_from_cluster
           __read_fat
             __fat_offset_from_cluster
             __fat_sector_from_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_value_from_offset
           _flash_sector_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __read_fat
           __fat_offset_from_cluster
           __fat_sector_from_cluster
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_rebooting
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_full_init
     __system_encoder_init
     __system_timer0_init
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_sector_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_sector_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _ui_init
   _system_minimal_init
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _system_delay_ms
   _system_minimal_init_undo
     _i2c_reset
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _reboot
         _display_prepare
           __display_checked
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_total_entries
           __display_clear
           __display_done
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_flashPagesWritten
           __display_failed
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_error
             _bootloader_get_rec_address
           __display_found
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_file_size
           __display_programming
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
             _bootloader_get_flashPagesWritten
             _bootloader_get_total_entries
           __display_rebooting
           __display_search
           __display_start
             __display_itoa_u32
               ___lldiv
               ___llmod
               __display_itoa_u16
                 _bootloader_get_entries (ARG)
                 _bootloader_get_flashPagesWritten (ARG)
                 _bootloader_get_total_entries (ARG)
                 _itoa (ARG)
                   ___lldiv (ARG)
                   ___llmod (ARG)
                   _utoa (ARG)
                     ___lwdiv
                     ___lwmod
               _bootloader_get_file_size (ARG)
               _bootloader_get_rec_address (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
           __display_verify
             __display_itoa_u16
               _bootloader_get_entries (ARG)
               _bootloader_get_flashPagesWritten (ARG)
               _bootloader_get_total_entries (ARG)
               _itoa (ARG)
                 ___lldiv (ARG)
                 ___llmod (ARG)
                 _utoa (ARG)
                   ___lwdiv
                   ___lwmod
             _bootloader_get_entries
         _display_update
           _i2c_display_cursor
             __ic2_display_set_address
               __i2c_write
                 __i2c_send
                 __i2c_start
                 __i2c_stop
                 __i2c_wait_idle
               _i2c_set_frequency
             _i2c_set_frequency
           _i2c_display_write_fixed
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
             _i2c_set_frequency
         _ui_get_status
       _system_delay_ms
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      C0      11       75.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      C2       9       75.8%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0      D8       7       84.4%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     65      A0       5      100.0%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     359      31        0.0%
DATA                 0      0     959       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Tue Sep 25 23:48:24 2018

                          __end_of_fat_read_from_file 50C8  
                           ??_internalFlash_getBuffer 0003  
                     __size_of__write_value_to_offset 0034  
                                          _USB_SD_Ptr 9E7B  
                            fat_create_file@extension 004F  
              __end_of_i2c_display_send_init_sequence 8A4A  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 8A1E  
                        __end_of_fat_read_from_buffer 8D62  
                                 __system_timer0_init 8D04  
                          flash_read_from_buffer@data 0023  
                                                  _os 00C5  
                                       _USBDeviceInit 3E98  
                                  _USBCheckHIDRequest 5378  
                         ??__data_sector_from_cluster 0003  
                __bootloader_verify_file@return_value 0097  
                                    ??__flash_is_busy 0012  
                          ??__sector_from_file_number 0003  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0030  
                           ??_internalFlash_erasePage 0005  
                    __size_of__parse_sector_to_buffer 0088  
                            ?_i2c_display_write_fixed 0006  
                             fat_modify_file@position 006A  
                                     _fat_resize_file 4DE6  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 5E08  
                                                 l210 6AC4  
                                                 l220 4D0E  
                                                 l141 3F06  
                                                 l214 6E60  
                                                 l310 65BA  
                                                 l150 3626  
                                                 l143 3F44  
                                                 l303 8758  
                                                 l151 361C  
                                                 l320 78FE  
                                                 l208 6AAA  
                                                 l224 4D90  
                                                 l304 8756  
                                                 l152 361A  
                                                 l241 5B48  
                                                 l233 5A9C  
                                                 l161 36A2  
                                                 l242 5B10  
                                                 l330 5F46  
                                                 l322 794C  
                                                 l235 5AA6  
                                                 l331 5F0C  
                                                 l251 4454  
                                                 l411 53C6  
                                                 l219 4D66  
                                                 l139 3EDE  
                                                 l171 3732  
                                                 l163 36B8  
                                                 l155 3642  
                                                 l252 443A  
                                                 l412 5394  
                                                 l260 52E0  
                                                 l164 36C4  
                                                 l156 3652  
                                                 l237 5B08  
                                                 l333 5F2C  
                                                 l309 65C0  
                                                 l173 3756  
                                                 l165 36EC  
                                                 l157 365A  
                                                 l238 5AD0  
                                                 l422 53E8  
                                                 l414 53D8  
                         __end_of_USBStdGetDscHandler 4260  
                                                 l262 5354  
                                                 l350 51F4  
                                                 l166 36F8  
                                                 l158 3670  
                                                 l183 4BFA  
                                                 l191 482E  
                                                 l423 5400  
                                                 l415 53B2  
                                                 l271 414C  
                                                 l343 5252  
                                                 l175 3772  
                                                 l159 367C  
                                                 l328 5EC4  
                                                 l248 43DE  
                                                 l424 540C  
                                                 l360 1B6C  
                                                 l272 41DA  
                                                 l352 51FA  
                                                 l344 51C4  
                                                 l168 370A  
                                                 l185 4C24  
                                                 l329 5ECA  
                                                 l249 43BC  
                                                 l521 4BD4  
                                                 l425 5424  
                                                 l361 1B72  
                                                 l281 6650  
                                                 l353 5218  
                                                 l610 7AB8  
                                                 l178 868E  
                                                 l418 5430  
                                                 l530 5F68  
                                                 l274 41E2  
                                                 l282 65DE  
                                                 l354 5234  
                                                 l346 51CE  
                                                 l187 4CA2  
                                                 l603 7AC0  
                                                 l179 869C  
                                                 l371 1C92  
                                                 l363 1BDE  
                                                 l275 4238  
                                                 l347 51D4  
                                                 l620 088E  
                                                 l604 7A84  
                                                 l372 1CAE  
                                                 l268 4248  
                                                 l348 51DA  
                                                 l621 0898  
                                                 l381 1DA6  
                                                 l365 1C26  
                                                 l277 4240  
                                                 l269 4138  
                                                 l285 6666  
                                                 l349 51EE  
                                                 l710 546A  
                                                 l702 1AD6  
                                                 l614 0BE0  
                                                 l630 0A3E  
                                                 l606 7AA0  
                                                 l518 4BDC  
                                                 l534 5FD0  
                                                 l374 1D14  
                                                 l286 65F0  
                                                 l703 1AEE  
                                                 l623 08F0  
                                                 l615 086E  
                                                 l519 4B50  
                                                 l375 1D20  
                                                 l367 1C48  
                                                 l287 65F6  
                                                 l295 8470  
                                                 l712 5480  
                                                 l704 1B08  
                                                 l640 0B08  
                                                 l624 09AA  
                                                 l608 7AAC  
                                                 l800 72A6  
                                                 l376 1D9A  
                                                 l288 6614  
                                                 l296 846E  
                                                 l721 550C  
                                                 l633 0A72  
                                                 l625 09B4  
                                                 l609 7AB2  
                                                 l561 217A  
                                                 l529 6006  
                                                 l369 1CC8  
                                                 l722 54F6  
                                                 l650 0B88  
                                                 l634 0AA0  
                                                 l626 09D4  
                                                 l618 087E  
                                                 l554 2266  
                                                 l562 2164  
                                                 l546 5FD8  
                                                 l810 7298  
                                                 l715 54B0  
                                                 l651 0B9C  
                                                 l571 2196  
                                                 l563 2138  
                                                 l555 203C  
                                                 l379 1D54  
                                                 l644 0B40  
                                                 l636 0AD4  
                                                 l628 0A04  
                                                 l564 2140  
                                                 l804 7274  
                                                 l900 3BD6  
                                                 l661 6C88  
                                                 l741 4A08  
                                                 l733 551E  
                                                 l645 0B54  
                                                 l573 21A8  
                                                 l805 727C  
                                                 l901 3B50  
                                                 l750 4A3C  
                                                 l718 54BC  
                                                 l670 3116  
                                                 l654 0BD8  
                                                 l646 0B72  
                                                 l638 0AF0  
                                                 l566 2158  
                                                 l806 7284  
                                                 l902 3B58  
                                                 l751 4A48  
                                                 l719 54D6  
                                                 l671 3120  
                                                 l575 21CA  
                                                 l559 205C  
                                                 l903 3B60  
                                                 l752 4A5A  
                                                 l680 324E  
                                                 l672 3134  
                                                 l648 0B9E  
                                                 l592 4514  
                                                 l576 21D2  
                                                 l808 728E  
                                                 l904 3B68  
                                                 l753 4A66  
                                                 l737 552E  
                                                 l665 3264  
                                                 l649 0B78  
                                                 l577 21F6  
                                                 l905 3B70  
                                                 l754 4A78  
                                                 l674 317E  
                                                 l666 30B6  
                                                 l690 1938  
                                                 l586 2248  
                                                 l914 7C2E  
                                                 l906 3B78  
                                                 l659 6C72  
                                                 l747 4ABA  
                                                 l755 4AAE  
                                                 l675 31A6  
                                                 l691 1944  
                                                 l907 3B82  
                                                 l748 4A34  
                                                 l668 3288  
                                                 l676 31D6  
                                                 l684 1B1E  
                                                 l692 1964  
                                                 l596 45AC  
                                                 l764 7E9A  
                                                 _BDT 000D00  
                                                 l677 31E8  
                                                 l669 310A  
                                                 l693 19AE  
                                                 l685 1892  
                                                 l597 45A6  
                                                 l589 2250  
                                                 l933 80F6  
                                                 l917 7C54  
                                                 l678 31EE  
                                                 l694 1988  
                                                 l926 8114  
                                                 l918 7C62  
                                                 l679 3202  
                                                 l687 1B42  
                                                 l695 19F4  
                                                 l599 45B0  
                                                 l767 7ED0  
                                                 l935 8102  
                                                 l927 80DA  
                                                 l696 19EC  
                                                 l688 1932  
                                                 l929 80E4  
                                                 l698 1A08  
                                                 l699 1A70  
                                                 l972 66F4  
                                                 l893 3AA4  
                                                 l966 6686  
                                                 l894 3AB2  
                                                 l896 3B3A  
                                                 l898 3B92  
                                                 l899 3B48  
                                                 _LBA 015E  
                                                 _LUN 01B3  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                                _i2c_digipot_reset_on 8C9E  
                                   main@tx_start_addr 00BD  
                            __size_of__display_failed 02F6  
                                         _start_line1 9DF4  
                                         _start_line2 9E62  
                                         _start_line3 9EA7  
                                         _start_line4 9E22  
                                  api_prepare@command 00B6  
                                          _USBSuspend 8964  
                       ?_fat_write_sector_from_buffer 0043  
                         flash_read_from_buffer@start 001F  
                                  _internalFlash_read 8764  
                              __end_of_display_update 78EE  
                                USBStdSetCfgHandler@i 0018  
                                ?__parse_format_drive 0027  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 35FA  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00F8  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 46C4  
                               ??_USBCtrlTrfRxService 0001  
                                       _hex_file_size 014A  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   __find_nth_cluster 6B96  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                   __size_of__fill_buffer_read_buffer 00F6  
                        __parse_file_resize@file_size 0058  
                                 api_prepare@inBuffer 00B2  
                   __size_of__offset_from_file_number 0026  
                         __flash_write_to_buffer@data 0016  
                                                l1008 8EEA  
                                                l2001 1776  
                                                l1210 706A  
                                                l2003 1784  
                                                l1203 8394  
                                                l2012 1874  
                                                l2004 178C  
                                                l1204 8378  
                                                l2100 25B4  
                                                l1300 581E  
                                                l2013 1886  
                                                l1117 8E40  
                                                l2101 25DC  
                                                l2006 17FE  
                                                l2110 4EBA  
                                                l2102 2684  
                                                l1302 582E  
                                                l2023 7B52  
                                                l2007 17F6  
                                                l2031 8C86  
                                                l2120 2454  
                                                l2008 183A  
                                                l1232 7F1A  
                                                l1304 583E  
                                                l1320 48D8  
                                                l2025 7BA4  
                                                l2033 8C96  
                                                l1233 7EFE  
                                                l1209 7086  
                                                l3002 7126  
                                                l2106 4DF6  
                                                l2050 599E  
                                                l2202 7F9C  
                                                l2210 7F98  
                                                l2130 5D04  
                                                l1154 9016  
                                                l1090 8C4C  
                                                l1306 5856  
                                                l1330 4982  
                                                l3011 6F76  
                                                l2203 7F80  
                                                l2131 5D08  
                                                l1091 8C3A  
                                                l1163 8FAA  
                                                l1083 87B8  
                                                l1331 49A2  
                                                l1323 48EC  
                                                l2116 22FE  
                                                l2108 4E06  
                                                l2124 5D40  
                                                l2140 5D2C  
                                                l2132 5D0C  
                                                l1084 87C2  
                                                l1308 5866  
                                                l1324 4900  
                                                l3005 715A  
                                                l2117 2496  
                                                l2109 4EC2  
                                                l2053 5914  
                                                l2205 7F84  
                                                l2141 5D30  
                                                l2133 5D10  
                                                l2125 5CF4  
                                                l2221 356A  
                                                l1181 8FA2  
                                                l1325 4916  
                                                l3014 6FB2  
                                                l2062 782E  
                                                l2118 2384  
                                                l2206 7F88  
                                                l2142 5D34  
                                                l2134 5D14  
                                                l2230 3536  
                                                l2222 3516  
                                                l1510 0CFC  
                                                l2119 23AC  
                                                l2207 7F8C  
                                                l2151 1DD2  
                                                l2143 5D38  
                                                l2135 5D18  
                                                l2127 5CF8  
                                                l2231 353A  
                                                l2223 351A  
                                                l2215 3494  
                                                l1175 8FB6  
                                                l2311 8A72  
                                                l1319 49B2  
                                                l1327 493E  
                           ?__fill_buffer_read_buffer 002B  
                                                l2072 860C  
                                                l2208 7F90  
                                                l2160 1E4C  
                                                l2152 1DD6  
                                                l2144 5D3C  
                                                l2136 5D1C  
                                                l2128 5CFC  
                                                l2240 355E  
                                                l2232 353E  
                                                l2224 351E  
                                                l1512 0DA8  
                                                l1328 4966  
                                                l2209 7F94  
                                                l2161 1E5C  
                                                l2153 1DDA  
                                                l2137 5D20  
                                                l2129 5D00  
                                                l2241 3562  
                                                l2233 3542  
                                                l2225 3522  
                                                l2217 34A2  
                                                l1169 900E  
                                                l1601 303E  
                                                l2170 1E80  
                                                l2162 1E60  
                                                l2154 1DEC  
                                                l2138 5D24  
                                                l2242 3566  
                                                l2234 3546  
                                                l2226 3526  
                                                l1514 0E54  
                                                l1602 3006  
                                                l1610 4294  
                                                l2322 003E  
                                                l2059 5988  
                                                l2171 1E84  
                                                l2163 1E64  
                                                l2155 1DFC  
                                                l2139 5D28  
                                                l2243 35F6  
                                                l2235 354A  
                                                l2227 352A  
                                                l2219 34DA  
                                                l1195 8AB4  
                                                l3051 735A  
                                                l1611 4266  
                                                l2091 4FFC  
                                                l2307 8A5A  
                                                l2331 039C  
                                                l2148 1EF0  
                                                l2180 1EA8  
                                                l2172 1E88  
                                                l2164 1E68  
                                                l2156 1E0C  
                                                l2236 354E  
                                                l2228 352E  
                                                l1196 8AA6  
                                                l3052 7368  
                                                l1516 0F00  
                                                l1508 0C52  
                                                l1604 3092  
                                                l2332 03C0  
                                                l2324 00B4  
                                                l2412 7A56  
                                                l2252 6816  
                                                l1292 588C  
                                                l2077 6EA0  
                                                l2085 6CF4  
                                                l2181 1EAC  
                                                l2173 1E8C  
                                                l2165 1E6C  
                                                l2157 1E1C  
                                                l2149 1DCE  
                                                l2237 3552  
                                                l2229 3532  
                                                l1197 8AC8  
                                                l1605 3064  
                                                l1701 7F5C  
                                                l1613 42E8  
                                                l2093 5014  
                                                l2309 8A64  
                                                l2325 0202  
                                                l2421 7A4A  
                                                l2413 7A2C  
                                                l1293 57E4  
                                                l2246 8B70  
                                                l2190 1ECC  
                                                l2182 1EB0  
                                                l2174 1E90  
                                                l2166 1E70  
                                                l2158 1E2C  
                                                l2238 3556  
                                                l1198 8AAA  
                                                l1622 37AE  
                                                l1702 7F2E  
                                                l1614 42BA  
                                                l1542 5B8E  
                                                l1550 5B7C  
                                                l2094 507A  
                                                l2430 5A58  
                                                l2334 0426  
                                                l2326 0188  
                                                l2087 6D28  
                                                l2191 1ED0  
                                                l2183 1EB4  
                                                l2175 1E94  
                                                l2167 1E74  
                                                l2159 1E3C  
                                                l2239 355A  
                                                l1199 8AAE  
                                                l1471 605A  
                                                l1631 38D4  
                                                l1623 3780  
                                                l3047 7326  
                                                l1551 5B82  
                                                l1543 5B58  
                                                l2431 5A5A  
                                                l1800 8D00  
                                                l2192 1ED4  
                                                l2184 1EB8  
                                                l2176 1E98  
                                                l2168 1E78  
                                                l1632 38A6  
                                                l1464 831E  
                                                l3048 731A  
                                                l1640 1364  
                                                l1616 433C  
                                                l1552 5B88  
                                                l2432 5A64  
                                                l2336 0458  
                                                l2328 033E  
                                                l2416 7A38  
                                                l2256 6866  
                                                l1296 57F6  
                                                l2193 1ED8  
                                                l2185 1EBC  
                                                l2177 1E9C  
                                                l2169 1E7C  
                                                l1625 3802  
                                                l1641 1336  
                                                l1617 430E  
                                                l1553 5BEC  
                                                l1545 5B5E  
                                                l2097 24FC  
                                                l2329 0310  
                                                l2194 1EDC  
                                                l2186 1EC0  
                                                l2178 1EA0  
                                                l1474 6080  
                                                l1626 37D4  
                                                l1466 832A  
                                                l1650 1408  
                                                l1562 2B2C  
                                                l1554 5BD8  
                                                l1546 5B64  
                                                l2426 5A70  
                                                l2338 048A  
                                                l2450 11E4  
                                                l2418 7A44  
                                                l1298 5806  
                                                l2195 1EE0  
                                                l2179 1EA4  
                                                l1643 1536  
                                                l1651 13DA  
                                                l1571 2CC6  
                                                l1563 2AFE  
                                                l1555 5BDE  
                                                l1547 5B6A  
                                                l2099 26C6  
                                                l2427 59AC  
                                                l2451 1216  
                                                l2443 0FD6  
                                                l2284 7662  
                                                l2196 1EE4  
                                                l2188 1EC4  
                                                l3500 8194  
                                                l1476 60A4  
                                                l1628 3880  
                                                l1580 3DCE  
                                                l1572 2C98  
                                                l1556 5BE4  
                                                l1548 5B70  
                                                l1900 8884  
                                                l2428 5A02  
                                                l2460 04E2  
                                                l2452 1246  
                                                l2444 0FFA  
                          USBConfigureEndpoint@handle 0007  
                                                l2197 1EE8  
                                                l2189 1EC8  
                                                l1629 3848  
                                                l1645 13B8  
                                                l1637 1310  
                                                l1581 3DA0  
                                                l1565 2B80  
                                                l1557 5C16  
                                                l1549 5B76  
                                                l2453 12A2  
                                                l1741 74B2  
                                                l1750 8082  
                                                l2286 76C4  
                                                l2198 1EEC  
                                                l3510 858E  
                                                l1478 60C8  
                                                l1662 14F8  
                                                l1654 1458  
                                                l1646 138A  
                                                l1638 12E2  
                                                l1566 2B52  
                                                l1814 8286  
                                                l2710 3C20  
                                                l2438 68F6  
                                                l2462 057C  
                                                l2446 1092  
                                                l1742 74DE  
                                                l3503 81BC  
                                                l1663 14CA  
                                                l1655 142A  
                                                l1671 32C2  
                                                l1583 3E22  
                                                l1815 8290  
                                                l2711 3C36  
                                                l2471 069C  
                                                l2463 05F4  
                                                l2455 12C8  
                                                l2447 110A  
                                                l1752 80AA  
                                                l1760 7D92  
                                                l2800 565E  
                                                l3504 81C6  
                                                l3432 799A  
                                                l1648 1558  
                                                l1592 2F0A  
                                                l1680 341E  
                                                l1672 3294  
                                                l1584 3DF4  
                                                l1568 2C72  
                                                l2720 3CC8  
                                                l2712 3C4C  
                                                l2464 064E  
                                                l2448 1184  
                                                l2801 566C  
                                                l3513 85AE  
                                                l3433 79A8  
                                                l1665 158C  
                                                l1593 2EDC  
                                                l1681 33F0  
                                                l1577 3D7A  
                                                l1569 2C44  
                                                l2721 3CD6  
                                                l2561 7444  
                                                l2473 0746  
                                                l1770 754A  
                                                l2802 567A  
                                                l3514 85B8  
                                                l1690 3950  
                                                l1666 155E  
                                                l1658 14A8  
                                                l1674 3316  
                                                l1586 3E76  
                                                l1578 3D4C  
                                                l2730 5C4A  
                                                l2714 3D1E  
                                                l2722 3CFE  
                                                l2706 3C6C  
                                                l2474 080A  
                                                l2803 5688  
                                                l1659 147A  
                                                l1595 2F5E  
                                                l1675 32E8  
                                                l1587 3E48  
                                                l2715 3C88  
                                                l2707 3BF4  
                                                l2467 0854  
                                                l2475 0750  
                                                l1772 7568  
                                                l2804 5696  
                                                l1692 39D2  
                                                l3428 7972  
                                                l1596 2F30  
                                                l2732 5CB2  
                                                l2476 07C8  
                                                l2468 0660  
                                                l1749 80C4  
                                                l1853 773E  
                                                l1845 8022  
                                                l2821 5104  
                                                l2805 56A4  
                                                l3509 8596  
                                                l1693 39A4  
                                                l3429 7966  
                                                l1677 336A  
                                                l2733 5C64  
                                                l2717 3C96  
                                                l2709 3C0A  
                                                l3701 8A90  
                                                l2477 0804  
                                                l1686 392A  
                                                l1598 2FB2  
                                                l1678 333C  
                                                l2734 5CE8  
                                                l2726 5C32  
                                                l2750 62C4  
                                                l2718 3CA8  
                                                l3702 8A80  
                                                l2566 8B32  
                                                l1767 7508  
                                                l1759 7D88  
                                                l1855 77A0  
                                                l2815 820C  
                                                l1695 3A4A  
                                                l1687 38FC  
                                                l1599 2F84  
                                                l2735 5C7C  
                                                l2719 3CBA  
                                                l2575 8798  
                                                l2559 7438  
                                                l2479 0820  
                                                l1768 7512  
                                                l1960 7D06  
                                                l1696 3A1C  
                                                l2736 5C98  
                                                l2744 6274  
                                                l2833 73B6  
                                                l3713 6248  
                                                l2809 573C  
                                                l1689 397E  
                                                l1794 7DE0  
                                                l1786 82D6  
                                                l3714 61A2  
                                                l2746 62AE  
                                                l1795 7DEA  
                                                l1787 82E0  
                                                l3715 6240  
                                                l2827 77E6  
                                                l2851 719E  
                                                l2756 2E9E  
                                                l2748 62EC  
                                                l2845 84B0  
                                                l2757 2ECC  
                                                l2749 62B8  
                                                l1958 7CCC  
                                                l1974 6132  
                                                l2782 639C  
                                                l2790 6396  
                                                l2758 2EA4  
                                                l2774 2896  
                                                l1991 163C  
                                                l2839 45F2  
                                                l2863 6762  
                                                l2783 631A  
                                                l1984 6C22  
                                                l1896 88B6  
                                                l1985 6BBC  
                                                l2857 7226  
                                                l1977 6186  
                                                l2785 6336  
                                                l2769 6A1E  
                                                l1986 6C06  
                                                l1994 1646  
                                                l2794 56B6  
                                                l3690 6994  
                                                l2786 6352  
                                                l2778 4FA8  
                                                l1979 6190  
                                                l1995 16E6  
                                                l2795 5626  
                                                l3499 819C  
                                                l3683 8562  
                                                l2787 636E  
                                                l1996 1696  
                                                l2796 56FC  
                                                l2788 638A  
                                                l1997 17AA  
                                                l2797 5634  
                                                l2789 6390  
                           ?__offset_from_file_number 0001  
                                                l2982 47BE  
                                                l2798 5642  
                                                l2983 46C8  
                                                l3695 7A0E  
                                                l2799 5650  
                                                l3687 691C  
                                                l2975 866A  
                                                l3696 79D0  
                                                l2976 8646  
                                                l2985 46CE  
                                                l3689 6956  
                                                l2977 8678  
                                                l2978 8658  
                                                l2996 7E74  
                                                l2988 4732  
                                                STR_1 9FF2  
                                                STR_2 9FF2  
                                                STR_3 9FF2  
                                                STR_4 9FF2  
                                                STR_5 9FF2  
                                                STR_6 9FF2  
                                                STR_7 9FF2  
                               __end_of_checked_line1 9DC4  
                                                STR_8 9FF2  
                               __end_of_checked_line2 9CAE  
                                                STR_9 9FDD  
                               __end_of_checked_line3 9E7B  
                               __end_of_checked_line4 9D43  
                                      _bootloader_run 7A20  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 018D  
                                                u7035 7D9E  
                                                u7300 49F4  
                                                u8200 7BA0  
                                                u8120 17D8  
                                                u8040 167C  
                                                u8210 61C2  
                                                u7075 751E  
                                                u8140 184E  
                                                u8060 16F2  
                                                u7165 7DF6  
                                                u8150 185A  
                                                u8070 171A  
                                                u8230 61FA  
                                                u7510 732A  
                                                u7238 4B70  
                                                u7239 4B82  
                               ??_USBCtrlTrfTxService 0001  
                                                u8080 1726  
                                                u8240 6230  
                                                u6720 81A0  
                                                u7360 6046  
                                                u8217 61B8  
                                                u8090 1750  
                                                u7370 606C  
                                                u7274 4BC6  
                                                u7258 4B94  
                                                u7435 8BF8  
                                                u8235 61F4  
                                                u7275 4BC0  
                                                u7259 4BA8  
                                                u9300 4E40  
                                                u6900 7D26  
                                                u7380 6090  
                                                u7540 7976  
                                                u8340 5AF8  
                                                u6805 7584  
                                                u8237 61EA  
                                                u8405 30DC  
                                                u7470 6158  
                                                u9310 4E72  
                                                u6910 7D32  
                                                u6750 859A  
                                                u7390 60B4  
                                                u8247 6226  
                                                _UCFG 000F39  
                                                u8280 76C0  
                                                u9320 4E8E  
                                                u6920 7D3E  
                                                u8360 5B38  
                                                u9305 4E36  
                                                u7490 6196  
                                                u9250 5994  
                                                u6930 7D4A  
                                                u9315 4E68  
                                                u8515 18B8  
                                                u8347 5AEE  
                                                u9180 8C9A  
                                                u9260 599E  
                                                u8380 79F0  
                                                u6940 7D56  
                                                u6908 7D28  
                                                u7820 5508  
                                                u7660 5FB2  
                                                _UEP0 000F26  
                                                _UEP1 000F27  
                                                u6950 7D60  
                                                u6918 7D34  
                                    ?_fat_create_file 004D  
                                                u8367 5B2E  
                                                u6928 7D40  
                                                u7840 551A  
                                                u8640 1AAA  
                                                u9600 41D4  
                                                u9441 34AC  
                                                u9370 2324  
                                                u6938 7D4C  
                                                u7930 0D10  
                                                u8458 3158  
                                                u8650 1AAC  
                                                u8538 18EC  
                                                u8387 79E6  
                                                u8459 316C  
                                                u8539 1900  
                                                _UEIE 000F37  
                                                u6956 7D62  
                                                u6948 7D58  
                                                u8740 8356  
                                                u7940 0DBC  
                                                u7860 552A  
                                                u9620 422C  
                                                u7950 0E68  
                                                u7790 54F2  
                                                u9550 530C  
                                                u9375 231A  
                                                u9607 41CA  
                                                u7960 88B2  
                                                u7970 8880  
                                                u9627 4222  
                                                u8668 1AB2  
                                                u8669 1AC4  
                                                u7990 6BF2  
                                                u8598 19BA  
                                                u9590 41A4  
                                                u8599 19CE  
                                                u9840 1D3A  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u9940 09FC  
                                                u9908 08FC  
                                                u9909 0910  
                                                u9597 419A  
                                                u9918 092C  
                                                u9919 0940  
                                                u9958 0A1C  
                                                u9959 0A30  
                               _i2c_digipot_reset_off 8CC0  
                                  ?__find_nth_cluster 0038  
                             ??_fat_get_format_status 002C  
                        flash_read_from_buffer@length 0021  
                               __size_of__delete_root 0048  
                                      _ResetSenseData 7AE4  
              __end_of__fill_buffer_get_configuration 6B96  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 6AF8  
                     __size_of_flash_read_from_buffer 002E  
              USBStdFeatureReqHandler@current_ep_data 001B  
                                                _pDst 0188  
                             fat_write_to_buffer@data 0029  
                                                _main 3A6C  
                                                _itoa 853E  
                          __end_of_fat_append_to_file 6F26  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5C22  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 6914  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 003F  
                             __bootloader_verify_file 0F98  
                           _ExternalFlash_MediaDetect 904C  
                                                prodh 000FF4  
                                                prodl 000FF3  
    __get_available_offset_from_buffer@minimum_offset 0001  
                      fat_modify_file@number_of_bytes 0068  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 8F58  
                               _display_get_character 8AFA  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 9DB4  
                                __end_of_failed_line2 9D20  
                                __end_of_failed_line4 9E73  
                             __end_of_fat_modify_file 24B8  
                                 ??__find_nth_cluster 003C  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 5296  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 049C  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0039  
                      ??_flash_write_page_from_buffer 0020  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0180  
                    __end_of__fat_sector_from_cluster 8E72  
                internalFlash_addressFromPage@address 0005  
                              __get_available_cluster 60DC  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 38F6  
                       __write_value_to_offset@buffer 0003  
                                      _hex_file_entry 0193  
                              _bootloader_get_entries 8FDA  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                       __write_value_to_offset@offset 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 8932  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                __make_cluster_chain@sector_in_buffer 0047  
                    __fat_offset_from_cluster@cluster 0001  
                            _system_ui_inactive_count 017C  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 817E  
                                               l11107 54BC  
                                               l11209 0C52  
                                               l11175 80E4  
                                               l13113 09CC  
                                               l12227 58F6  
                                               l11179 8102  
                              ?_i2c_digipot_backlight 0001  
                                               l12261 599E  
                                               l11541 5AA6  
                                               l12183 8C7E  
                                               l11455 61A2  
                                               l11801 8322  
                                               l10923 6196  
                                               l11651 325E  
                                               l11573 79D0  
                                               l13341 6CEC  
                                               l13413 2902  
                                               l11493 8A80  
                             ?__fill_buffer_find_file 0037  
                                               l15031 217A  
                                               l13353 6D20  
                                               l12705 34DA  
                                               l13505 2A8C  
                                               l13441 298A  
                                               l10891 60E4  
                                               l13515 2AB2  
                                               l13427 2946  
                                               l13269 406A  
                                               l12813 8B70  
                                               l13517 2ABA  
                                               l15133 5C92  
                                               l14309 6838  
                                               l13455 29CE  
                                               l14415 5A02  
                                               l14263 747C  
                                               l15321 0FF2  
                                               l10899 60FE  
                                               l12691 3494  
                                               l13467 29F4  
                                               l11795 8316  
                                               l14291 67E8  
                                               l13493 2A66  
                                               l13477 2A1A  
                                               l14533 6A16  
                                               l10989 53AC  
                                               l13479 2A22  
                                               l12697 34A2  
                                               l16313 72BE  
                                               l12881 52D8  
                                               l16315 72F2  
                                               l14483 7430  
                                               l12797 356A  
                                               l14661 62BC  
                                               l15453 07C8  
                                               l16327 1F08  
                                               l16329 2020  
                                               l14489 743C  
                                        spi_tx@length 0003  
                                               l14843 3ED6  
                                               l14871 3F3C  
                                               l15579 3702  
                                               l14981 2054  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6D68  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 9FE9  
                                               STR_11 9FFB  
                                               STR_12 9FD0  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10010 0B1C  
                                     __end_of___lldiv 737A  
                                               u10100 4036  
                                               u10020 0B2E  
                                               ?_utoa 0008  
                                               u10105 402C  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10210 6D58  
                                               u10050 0BA6  
                                               u11020 84AC  
                                               u10220 24D6  
                                               u10310 296E  
                                               u11110 675E  
                                               u10225 24CC  
                                               u10410 2A84  
                                               u10330 29B2  
                                               u11050 719A  
                                               u10500 64C2  
                                               u11220 44E2  
                                               u10245 256E  
                                               u10190 6D1C  
                                               u10430 2AB2  
                                               u10350 29EC  
                                               u11080 7222  
                                               u11208 44B0  
                                               u11400 00A2  
                                               u10505 64B8  
                                               u11209 44C4  
                                               u10450 2AE2  
                                               u10370 2A1A  
                                               u10290 292A  
                                               u11234 44F8  
                                               u11235 44F2  
                                               u11244 452A  
                                               u11500 5A2E  
                                               u11245 4524  
                                               u10390 2A4A  
                                               u10470 6414  
                                               u11350 681C  
                                               u12080 222A  
                                               u11600 745E  
                                     __end_of___llmod 79BA  
                                               u12145 822E  
                                               u12161 8A28  
                              __end_of_USBDeviceTasks 377A  
                                               u10475 640A  
                                               u10900 5100  
                                               u11284 457C  
                                               u11268 454C  
                                               u11380 686C  
                                               u11285 4576  
                                               u11269 455E  
                                               u10840 5738  
                                               u11640 2886  
                                               u11480 59D2  
                                               u12280 1054  
                                               u10930 77E2  
                                               u11650 4FA0  
                                               u13307 809C  
                                               u11555 8DDC  
                                               u11740 3EFA  
                                               u12700 3776  
                                               u12380 053E  
                                               u13317 80AE  
                                               u10685 85CE  
                                               u11565 87DC  
                                               u10870 8208  
                                               u11910 2084  
                                               u13327 80B8  
                                               u11575 740A  
                                               u10775 76D6  
                                               u10960 73B2  
                                               u11690 62EA  
                                               u12810 66B4  
                                               u11770 3FA0  
                                               u10795 89A2  
                                               u10990 45EE  
                                               u13297 8C40  
                                               u11890 2050  
                           ?_USBCtrlEPServiceComplete 0001  
                                               u12940 499C  
                                               u12790 66A0  
                                               u12890 4928  
                                     __end_of___lwdiv 81D0  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 85C2  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                               ??__parse_format_drive 0029  
                                _file_minimum_address 0152  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00A5  
                            __find_nth_cluster@offset 003C  
                  __size_of_USBCtrlEPAllowStatusStage 00CC  
                      __get_first_cluster@file_number 0038  
                                ?__bootloader_program 0001  
                                        __delete_root 83A2  
                                     ??_flash_is_busy 0014  
                            __bootloader_program@root 007C  
                           __end_of__find_nth_cluster 6C34  
                            __find_nth_cluster@sector 0040  
                                    __end_of_MSDTasks 2284  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 5F54  
                     __end_of_internalFlash_getBuffer 8F9E  
                     __end_of_USBCtrlEPAllowDataStage 6AF8  
                                               _sd000 9FCC  
                              __write_value_to_offset 8836  
                                               _sd001 9EE8  
                                               _sd002 9F1C  
                                               _sd003 9F8B  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 7A82  
                 i2c_display_send_init_sequence@F6808 01C7  
                       __end_of_MSDTransferTerminated 7ED2  
                                        _gblCBWLength 018F  
                          __end_of__parse_file_delete 8222  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 73FC  
                          __end_of__parse_file_create 51B4  
                              __end_of_ResetSenseData 7B46  
                          __end_of__parse_file_modify 46C4  
                          __end_of__parse_file_rename 7816  
                           internalFlash_read@address 000E  
                            fat_write_to_buffer@start 0025  
                            __parse_command_long@data 0098  
                           __data_sector_from_cluster 8F66  
                           fat_get_format_status@cntr 002E  
                          __end_of__parse_file_resize 57E2  
                             ?__fill_buffer_read_file 009E  
                                               pclath 000FFA  
                                     __end_of_ui_init 8EE0  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00EC  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 8802  
                          __end_of__display_rebooting 7F7E  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
            fat_copy_sector_to_buffer@physical_sector 004F  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 6262  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 009E  
                  __fill_buffer_read_buffer@outBuffer 002D  
                          fat_read_from_buffer@length 0027  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 8B9A  
             __fill_buffer_get_file_details@outBuffer 003A  
                                      _MSDReadHandler 30B4  
                     fat_append_to_file@old_file_size 0093  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 0060  
               __bootloader_check_address@byte_status 000B  
                         __end_of__make_cluster_chain 1890  
                       internalFlash_readPage@address 0018  
                   __make_cluster_chain@first_cluster 0036  
                                     __initialization 6FBA  
                       fat_read_from_file@file_number 0078  
                            __parse_write_buffer@data 002B  
                           __end_of__flash_get_status 8964  
                        fat_get_file_information@data 0030  
                         fat_read_from_file_fast@data 004A  
                  spi_set_configuration@configuration 0001  
                                 _system_minimal_init 8E8A  
               __end_of_ExternalFlash_MediaInitialize 8E28  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 8E0E  
                __offset_from_file_number@file_number 0003  
                      __size_of_system_encoder_enable 0010  
                             __end_of_fat_resize_file 4EE4  
                                         _FileAddress 0172  
                                        __end_of_main 3BDE  
                                        __end_of_itoa 8580  
                       __end_of_system_encoder_enable 8F28  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 7F28  
                                        __end_of_utoa 69B8  
                       fat_read_from_file_fast@length 0046  
                                __end_of__normal_mode 7C66  
                                    _timer_pseudo_isr 879A  
                       fat_read_from_file_fast@offset 0064  
                            __parse_command_short@cmd 002C  
                  fat_read_from_file_fast@read_length 0068  
                                    __end_of_i2c_init 8F80  
                                  __flash_buffer_read 8272  
                  __size_of_flash_copy_page_to_buffer 001E  
                       fat_read_from_file_fast@sector 0060  
                            __end_of__i2c_acknowledge 8FBC  
                      __end_of__fill_buffer_find_file 6A5A  
                     fat_append_to_file@new_file_size 008E  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 00D7  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                              _flash_read_from_buffer 89C2  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 8EB6  
                           __size_of_USBCtrlEPService 00AC  
                             __display_rebooting@cntr 0001  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 017A  
                                api_prepare@outBuffer 00B4  
                                              ??_main 00BB  
                                    __end_of__i2c_get 8FB2  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00E0  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 0076  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00BF  
                            _fat_get_file_information 7656  
                            __flash_buffer_read@start 0014  
                                  __write_root@offset 002D  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 904C  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 9048  
                                 __find_nth_cluster@n 003A  
                                 ?__flash_buffer_read 0014  
                                         ?_USBSuspend 0001  
                                  __write_root@sector 002B  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0168  
                               ??__bootloader_program 006E  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                       __get_available_cluster@offset 0032  
                              ?_spi_set_configuration 0001  
             fat_write_sector_from_buffer@file_number 0053  
                       __get_available_cluster@sector 0034  
                fat_copy_sector_to_buffer@file_number 0053  
                                _i2c_eeprom_writeByte 85C2  
                         ?_spi_get_external_tx_buffer 0001  
                                ?_system_minimal_init 0001  
                  fat_write_sector_from_buffer@sector 0043  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 8C32  
                              __flash_write_to_buffer 82C2  
                     i2c_digipot_reset_off@data_array 000B  
                      __end_of__fill_buffer_read_file 28FA  
                                _start_from_byte_next 018B  
                                    ___llmod@dividend 0001  
                    __end_of__fat_offset_from_cluster 8E8A  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                          ?_fat_copy_sector_to_buffer 0043  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0036  
                                          __i2c_start 9014  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 835A  
                                _fat_read_from_buffer 8D44  
                           fat_read_from_file@cluster 0079  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 006E  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7FD4  
                                    __end_of__get_fbr 2030  
                                    __end_of__get_mbr 5DC0  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                           __size_of_system_full_init 005C  
                                   ??__display_verify 001F  
                                  __size_of_i2c_reset 000E  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 328E  
                                 _flash_pages_written 0174  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                                ??__flash_buffer_read 001B  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 6870  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 8F48  
                   __bootloader_program@page_to_write 00A7  
                                    __read_fat@sector 0032  
                                   _shortPacketStatus 00F7  
                   fat_append_to_file@number_of_bytes 0056  
                                      __CFG_XINST$OFF 000000  
                                    ?_fat_modify_file 0042  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 747A  
                        __end_of__flash_set_page_size 74F4  
                                     _hexCharsToUint8 8DBC  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 7816  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                      __read_value_from_offset@buffer 0003  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3113 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 00E8  
                                           ??___lwmod 0005  
                                              _buffer 03C0  
                                   _USBEnableEndpoint 867E  
                       __bootloader_program@address32 00A0  
                      __read_value_from_offset@offset 0001  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 79BA  
                                  ?_fat_get_file_size 0036  
                                              _memset 8A76  
                    __end_of__sector_from_file_number 8AFA  
                             __parse_sector_to_buffer 7162  
                                              clear_0 6FF4  
                                              clear_1 7008  
                                              clear_2 701A  
                                              clear_3 7026  
                                              clear_4 7032  
                                              clear_5 703E  
                           _ExternalFlash_SectorWrite 886A  
                                   api_parse@inBuffer 009B  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 9F6E  
                                              _reboot 8E28  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                   __end_of_flash_copy_page_to_buffer 8D9E  
                                              _ui_run 48D6  
                                              _spi_tx 7E24  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 8900  
              __make_cluster_chain@number_of_clusters 0038  
                                              _tx_buf 01D0  
                                    ?_fat_rename_file 0038  
                          __parse_command_long@length 009A  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0102  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 8AA2  
                        __end_of_jump_to_main_program 902A  
                               __end_of_fat_find_file 59A2  
                                 ??_fat_get_file_size 003A  
                       __size_of__parse_command_short 00B4  
                    __size_of__read_value_from_offset 0046  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                    __size_of_fat_read_from_file_fast 0226  
                                        __mediumconst 9C98  
                                 __end_of__i2c_open_1 8E5A  
                          __size_of__find_nth_cluster 009E  
                   __fill_buffer_read_buffer@inBuffer 002B  
                      i2c_digipot_reset_on@data_array 000B  
                               ??_system_minimal_init 0004  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 7C08  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 7BA8  
                                              tblptru 000FF8  
                                    __end_of_spi_init 867E  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00C1  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                                       spi_tx_rx@data 0005  
                   __size_of__fat_sector_from_cluster 0018  
                          __end_of__root_is_available 7BA8  
                             __spi_external_rx_buffer 0300  
                           ?__fat_sector_from_cluster 0001  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0044  
                                       main@tx_buffer 00C3  
                         __end_of_fat_write_to_buffer 8D80  
                               ?_fat_read_from_buffer 0025  
                               __end_of_ui_get_status 9042  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00F6  
                          ??_APP_DeviceCustomHIDTasks 00B7  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0340  
                                   _SYSTEM_Initialize 80D6  
                               fat_modify_file@length 0046  
                               fat_modify_file@offset 0066  
                                 ??_i2c_set_frequency 0001  
                                          __accesstop 0060  
                             __end_of__initialization 7044  
                               fat_modify_file@sector 0060  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                        fat_resize_file@first_cluster 0064  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 8FA8  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00A6  
                         __end_of__parse_command_long 5700  
                   __end_of_failed_line3_noNextRecord 9E22  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 7884  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                                ??_flash_partial_read 0030  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 86BA  
                    __size_of__parse_buffer_to_sector 0088  
                            _bootloader_get_file_size 8F06  
                 __size_of_ExternalFlash_CapacityRead 0012  
                           fat_read_from_buffer@start 0025  
                                       __end_of_sd000 9FD0  
                                       __end_of_sd001 9F1C  
                                       __end_of_sd002 9F4A  
                                       __end_of_sd003 9FA5  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 9050  
                                        __pidataBANK1 8C0C  
                           ??_bootloader_get_rec_data 0001  
                                    ?_fat_resize_file 004D  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 8FEE  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 8FE4  
                           __get_available_root_entry 8C7A  
                                 fat_rename_file@cntr 005E  
                                 fat_rename_file@name 0038  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 003E  
                                  __size_of__read_fat 0056  
                                     _active_protocol 01B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 12DC  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 5F54  
                                 _userInterfaceStatus 00E6  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 49DC  
                      ?_ExternalFlash_MediaInitialize 0001  
                __sector_from_file_number@file_number 0003  
                          flash_write_to_buffer@start 001F  
                           __end_of_i2c_set_frequency 8ACE  
                       __size_of__display_programming 01D6  
         fat_write_sector_from_buffer@physical_sector 004F  
                                   __end_of_i2c_reset 8F66  
                             __end_of_system_delay_ms 8C56  
                                  __size_of_api_parse 00D0  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 0178  
                      __end_of_failed_line3_startCode 9CE9  
                               _communicationSettings 0139  
                                  _flash_sector_write 7FD4  
                                  _fat_read_from_file 4FDA  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 004F  
                             flash_sector_write@match 0024  
               __end_of_MSDProcessCommandMediaPresent 0C2A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 086C  
                                        _failed_line1 9DA4  
                                        _failed_line2 9D0E  
                                        _failed_line4 9E6B  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 0190  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 812A  
                                   __end_of__i2c_read 70D6  
                                   __end_of__i2c_send 9024  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 65D2  
                                 ?_flash_sector_write 0020  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 9014  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 006E  
                                         ?__i2c_write 0006  
                       __read_value_from_offset@value 0008  
                                          __pbssBANK0 00C5  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                               _flash_write_to_buffer 89F0  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 47CE  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 015A  
                                           ?_i2c_init 0001  
                      __parse_sector_to_buffer@sector 0057  
                    __fill_buffer_read_file@outBuffer 00A0  
                                    _mediaInformation 01AA  
                             __end_of_hexCharsToUint8 8DD8  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 0035  
                              ?__bootloader_find_file 0001  
                      __get_available_cluster@cluster 0030  
                       __end_of_fat_get_format_status 6870  
                     ??__fill_buffer_get_file_details 003C  
                                       __flash_wakeup 8080  
                            __fill_buffer_get_display 6262  
                             ?__get_available_cluster 002C  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 00D1  
                               __size_of__normal_mode 005E  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                    __end_of_USBCtrlEPServiceComplete 4DE6  
               __end_of_APP_DeviceCustomHIDInitialize 8836  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 8802  
                         MSDTransferTerminated@handle 000C  
                  __size_of__data_sector_from_cluster 000E  
                        __size_of__parse_write_buffer 00A6  
                           __bootloader_check_address 59A2  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                           ??__parse_sector_to_buffer 0056  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 28FA  
                                   ?__display_checked 0001  
                                ??_flash_sector_write 0024  
                   __size_of__fat_offset_from_cluster 0018  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 005C  
                        __size_of__flash_partial_read 0078  
                           ?__fat_offset_from_cluster 0001  
                            __size_of_fat_delete_file 0040  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 6E92  
                                             ?_memset 0001  
                                          _device_dsc 9FA5  
                 fat_get_file_information@file_number 0037  
                                    ??_display_update 0011  
                      __parse_buffer_to_sector@sector 0057  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 8E42  
                                    _USBCtrlEPService 6526  
                                             ?_ui_run 0001  
                                          _ep_data_in 016F  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0146  
                                  __display_clear@row 0003  
                            __delete_root@file_number 002E  
                       fat_append_to_file@file_number 0097  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 38F6  
               __data_sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 44A4  
                             ?__write_value_to_offset 0001  
                                  _USBCheckStdRequest 51B4  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 9EA8  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 0056  
                              fat_append_to_file@data 0058  
                                          _flash_init 8DF4  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 5B50  
                                   __end_of__get_data 8B74  
                                   __end_of__get_date 900C  
                                 _USBStdSetCfgHandler 5296  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 9002  
                                   __end_of__get_root 35FA  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 9D74  
                                          _done_line2 9E9F  
                                          _done_line3 9D64  
                                          _done_line4 9D54  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                              ??_fat_read_from_buffer 002B  
                     __end_of_bootloader_get_rec_data 8ECC  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0176  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 747A  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 87CE  
                                  __get_first_cluster 812A  
                                        __normal_mode 7C08  
                          __end_of_APP_DeviceMSDTasks 8EF4  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 8080  
                     ??_internalFlash_pageFromAddress 0005  
                            _system_minimal_init_undo 8F28  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 0096  
                             __size_of_hexCharToUint8 002C  
                   __size_of__sector_from_file_number 002C  
               __end_of__flash_compare_page_to_buffer 756C  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 74F4  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 9FB7  
                           ?__sector_from_file_number 0001  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                       flash_copy_page_to_buffer@page 001E  
                          __flash_buffer_read@command 001B  
                       fat_read_from_file@return_code 007D  
                                    _system_full_init 7C66  
                                   __read_fat@cluster 0030  
                      __end_of__get_available_cluster 61A0  
                                      ?__flash_wakeup 0001  
              fat_read_from_file_fast@working_cluster 0062  
                      __end_of_bootloader_get_entries 8FE4  
                              fat_find_file@extension 002E  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 5CF2  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 44A4  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 005A  
                            fat_find_file@file_number 0032  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 81D0  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 006E  
           __end_of__get_available_offset_from_buffer 7D1C  
          __size_of__get_available_offset_from_buffer 005A  
                 ??__get_available_offset_from_buffer 0005  
                  ?__get_available_offset_from_buffer 0001  
                   __get_available_offset_from_buffer 7CC2  
                                   __end_of__spi_init 872C  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 737A  
                                             __Lparam 0000  
                                  __parse_file_create 50C8  
                                _jump_to_main_program 9024  
                            __size_of_fat_create_file 013E  
                                   __end_of_hid_rpt01 9F8B  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4AE2  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                  __parse_file_modify 45B6  
                             ?_flash_read_from_buffer 001F  
                                  __parse_file_rename 77A8  
                          ??_fat_get_file_information 0032  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 76C8  
                                  __parse_file_resize 5700  
                                          _last_error 018C  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0066  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0380  
                   __end_of__data_sector_from_cluster 8F74  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 9E98  
                                             ___lldiv 72F8  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 7954  
                                             ___lwdiv 817E  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 8580  
                                   _fast_read_cluster 00FB  
                                  __display_rebooting 7F28  
                         __end_of__parse_format_drive 84B8  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 0050  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 005A  
                                 ?__parse_file_create 0059  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 86F4  
                                             __pcinit 6FBA  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B8  
                           __end_of_configDescriptor1 9EE8  
                      __end_of__write_value_to_offset 886A  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 001A  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 3A6C  
                                             __ptext1 48D6  
                                     __display_failed 12DC  
                                             __ptext2 8F18  
                                             __ptext3 8A1E  
                                             __ptext4 8C9E  
                                             __ptext5 8CC0  
                                             __ptext6 8B74  
                                             __ptext7 57E2  
                                             __ptext8 879A  
                                 ?__parse_file_modify 0056  
                                             __ptext9 8F28  
                                             _inPipes 00CB  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0060  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00EE  
                                 ?__parse_file_resize 0055  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005C  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 8D24  
                                ??__get_first_cluster 0032  
                             __read_value_from_offset 83EA  
                             _fat_read_from_file_fast 24B8  
                                        ??_USBSuspend 0018  
                                     __display_search 3D46  
                                  __end_of_USBMSDInit 4BE4  
                                 ?__display_rebooting 0001  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 8F48  
                                             _msd_cbw 000D40  
                                     __display_verify 4260  
                                             _msd_csw 000D80  
                            __fill_buffer_read_buffer 4EE4  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 8F9E  
                            __offset_from_file_number 8BE6  
                                             _ui_init 8ECC  
                                          ??_fat_init 0030  
                     __end_of__parse_sector_to_buffer 71EA  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 8EB6  
                                  __end_of_USB_CD_Ptr 9EA7  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0096  
                              ?_flash_write_to_buffer 001F  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 0042  
                                             _strncmp 61A0  
                                 _flash_partial_write 7738  
                         ??_fat_copy_sector_to_buffer 0045  
                                end_of_initialization 7044  
                                ??__parse_file_delete 0052  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 7E7C  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2ED6  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 2CE8  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 005C  
                                ??__parse_file_create 005B  
                                  __end_of_USB_SD_Ptr 9E83  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                 _pBDTEntryEP0OutNext 00E1  
                                ??__parse_file_modify 0058  
                           __end_of_MSDProcessCommand 45B6  
                                             itoa@buf 0011  
                                ??__parse_file_rename 005F  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 004D  
                                ??__parse_file_resize 0057  
                                     _USB1msTickCount 0162  
                                    ?_hexCharsToUint8 0003  
                            __flash_partial_read@data 001A  
                              _internalFlash_readPage 84FC  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                                ??__display_rebooting 0001  
                         i2c_eeprom_writeByte@address 000B  
           __fill_buffer_get_file_details@file_number 003D  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                      __end_of_flash_read_from_buffer 89F0  
                             __parse_buffer_to_sector 71EA  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 8994  
                             _USBCtrlEPAllowDataStage 6A5A  
                                   __end_of_spi_tx_rx 6FBA  
                                   __end_of_spi_tx_tx 7162  
               __end_of__fill_buffer_get_file_details 7656  
              __size_of__fill_buffer_get_file_details 0072  
                       __fill_buffer_get_file_details 75E4  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
        __make_cluster_chain@different_sector_cluster 0040  
                __end_of_ExternalFlash_SectorSizeRead 8FC6  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 8FBC  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 002C  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4CE6  
                                             utoa@val 000A  
                                           _MSD_State 00ED  
             __end_of__cluster_from_sector_and_offset 8BE6  
            __size_of__cluster_from_sector_and_offset 0026  
                   ??__cluster_from_sector_and_offset 0005  
                    ?__cluster_from_sector_and_offset 0001  
                     __cluster_from_sector_and_offset 8BC0  
                         __end_of__bootloader_program 086C  
                               _system_encoder_enable 8F18  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C4  
                                       ??_api_prepare 0060  
                          _USBStatusStageEnabledFlag1 00F1  
                          _USBStatusStageEnabledFlag2 00F0  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                        __size_of__make_cluster_chain 02BE  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                      __end_of__flash_write_to_buffer 8312  
                                    __CFG_DSBOREN$OFF 000000  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       __parse_file_modify@start_byte 005B  
                                   ??_fat_delete_file 004D  
                    __make_cluster_chain@next_cluster 004B  
                              fat_modify_file@cluster 0064  
                                         ?_flash_init 0001  
                                    __CFG_CPUDIV$OSC1 000000  
                     __fill_buffer_find_file@inBuffer 0037  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0250  
                                  _BothEP0OutUOWNsSet 0191  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 03C0  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7ED2  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00FD  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 9DB4  
                                       _checked_line2 9C99  
                                       _checked_line3 9E73  
                                       _checked_line4 9D32  
                                 __delete_root@offset 002B  
                          ??_bootloader_get_file_size 0005  
                 __parse_write_buffer@number_of_bytes 0030  
                                 __delete_root@sector 0029  
                            _failed_line3_dataTooLong 9E31  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4CE6  
                              i2c_display_cursor@line 000F  
                    __fat_sector_from_cluster@cluster 0001  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 63CA  
                         __size_of__flash_buffer_read 0050  
               __end_of_internalFlash_pageFromAddress 8DF4  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 8DD8  
                                __end_of_reboot_line1 9E4C  
                                __end_of_search_line1 9DF4  
                                __end_of_search_line2 9D54  
                                __end_of_search_line3 9CD6  
                                __end_of_search_line4 9E62  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 7B46  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                  __make_cluster_chain@minimum_sector 003E  
                             __end_of__display_failed 15D2  
                                    ?_MSDErrorHandler 0001  
               fat_resize_file@new_number_of_clusters 0062  
                  __find_nth_cluster@sector_in_buffer 003E  
                        fat_resize_file@new_file_size 004D  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 6D68  
                               ??_flash_partial_write 0028  
                        __write_value_to_offset@value 0005  
                       ??_bootloader_get_rec_checksum 0001  
                           _fat_copy_sector_to_buffer 63CA  
                      __bootloader_program@entry_page 0078  
                  fat_copy_sector_to_buffer@file_size 0049  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00D2  
                             __end_of__display_search 3E98  
                               __end_of_USBDeviceInit 3FE8  
               __end_of_USBIncrement1msInternalTimers 8D44  
              __size_of_USBIncrement1msInternalTimers 0020  
                       _USBIncrement1msInternalTimers 8D24  
                                     ??__display_done 001F  
                     __sector_from_file_number@sector 0004  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 438C  
                           ??__read_value_from_offset 0005  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0254  
                           ??_fat_read_from_file_fast 0050  
                            __end_of_USBStallEndpoint 48D6  
                                 _i2c_eeprom_readByte 8222  
                                   ??_fat_create_file 0055  
                 __bootloader_program@start_from_byte 00A4  
                  __fill_buffer_read_file@data_length 00AA  
                         __end_of_system_minimal_init 8EA0  
                            __size_of_fat_modify_file 0234  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 9CAE  
                                      __end_of_memcpy 7A20  
                                     _MSDRetryAttempt 00E9  
                                      __end_of_memset 8AA2  
                                      __end_of_reboot 8E42  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                          ?_flash_copy_page_to_buffer 001E  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 0192  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 49DC  
                                      __end_of_spi_tx 7E7C  
               __get_available_root_entry@file_number 0036  
                                 fat_modify_file@data 0048  
                                 __end_of__ui_encoder 58C2  
                           __flash_set_page_size@size 0018  
                         flash_write_to_buffer@length 0021  
                                 start_initialization 6FBA  
                                 fat_modify_file@root 006E  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                 __parse_write_buffer 6726  
                                   ??_MSDWriteHandler 0030  
                                           _i2c_reset 8F58  
                                 __end_of_api_prepare 3D46  
                   __end_of__get_available_root_entry 8C9E  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0098  
                                     _USBMSDOutHandle 00DF  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 6E92  
                                        ??__i2c_start 0001  
                             __flash_buffer_read@data 0018  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1DCC  
                                 __flash_partial_read 756C  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0043  
                                       _MSDHostNoData 00E7  
                                      _hexCharToUint8 8A4A  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                   __end_of_USBCtrlEPAllowStatusStage 5E8C  
                            _fast_read_cluster_number 00F9  
                                ?_i2c_eeprom_readByte 0012  
                        __end_of__display_programming 3464  
                            __end_of_USBCtrlEPService 65D2  
                          __size_of_MSDProcessCommand 0112  
                      ??_fat_write_sector_from_buffer 0045  
                                __system_encoder_init 86BA  
                                           __i2c_read 704A  
                                           __i2c_send 901C  
                           ??__parse_buffer_to_sector 0056  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 900C  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                        __size_of_fat_write_to_buffer 001E  
                            ??__fill_buffer_find_file 003B  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 9048  
                          __flash_partial_read@length 0018  
                                ?__parse_write_buffer 002B  
                       __end_of_failed_line3_checksum 9E13  
                       __root_is_available@first_byte 0035  
                              _pBDTEntryEP0OutCurrent 00E3  
                              __size_of_fat_find_file 00E0  
                    __end_of_fat_get_file_information 76C8  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 9D94  
                                   _programming_line2 9CFC  
                                   _programming_line3 9E83  
                                   _programming_line4 9D84  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                               spi_init@configuration 0004  
                       fat_append_to_file@return_code 0092  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 4126  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 003E  
                                         __pdataBANK0 00FF  
                                         __pdataBANK1 01B3  
                           ?_APP_DeviceCustomHIDTasks 0001  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 00E2  
                       __end_of_i2c_digipot_backlight 8B9A  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 002C  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 002C  
                                  __end_of__i2c_start 901C  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 0038  
                                  __end_of__i2c_write 83A2  
                            __end_of_system_full_init 7CC2  
                           __root_is_available@offset 0032  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00FE  
                            ??__fill_buffer_read_file 00A2  
                      __end_of_USBStdGetStatusHandler 667C  
                          ??_system_minimal_init_undo 0001  
                            __size_of_fat_resize_file 00FE  
                            __fat_sector_from_cluster 8E5A  
                         api_parse@receivedDataLength 009D  
                   __end_of__bootloader_check_address 5A7C  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 89C2  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 8994  
         fat_copy_sector_to_buffer@number_of_clusters 004D  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 0060  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                          ?_i2c_reset 0001  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 9FCC  
            __get_available_offset_from_buffer@buffer 0003  
                       __end_of_MSDCheckForErrorCases 553C  
             __bootloader_program@address_within_page 007A  
                          fat_create_file@file_number 0064  
                              __end_of_hexCharToUint8 8A76  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 0156  
            __get_available_offset_from_buffer@offset 0007  
                  __end_of_flash_command_pagesize_512 9FC8  
                          _flash_command_pagesize_512 9FC4  
                  __end_of_flash_command_pagesize_528 9FC4  
                          _flash_command_pagesize_528 9FC0  
                                      __flash_is_busy 8CE2  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 7738  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 9E91  
                                           __get_data 8B4C  
                                           __get_date 9002  
                                   _flash_sector_read 88CE  
                    __bootloader_program@return_value 009C  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 0033  
                                   ?_timer_pseudo_isr 0001  
                     __end_of__read_value_from_offset 8430  
                     __end_of_fat_read_from_file_fast 26DE  
                                           __get_time 8FF8  
                                           __get_root 3464  
                              flash_sector_write@data 0022  
                              flash_sector_write@page 0020  
                                 __end_of__write_root 84FC  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 8764  
                                  ?_flash_sector_read 0028  
                          __end_of_i2c_display_cursor 8C7A  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 8430  
                                        _pBDTEntryOut 0140  
                                          ?__i2c_stop 0001  
                          fat_modify_file@file_number 0062  
                          fat_rename_file@file_number 003D  
                                           __read_fat 802A  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 9DA4  
                           __end_of_programming_line2 9D0E  
                           __end_of_programming_line3 9E8A  
                           __end_of_programming_line4 9D94  
                    __end_of_ExternalFlash_SectorRead 88CE  
                               ??__parse_write_buffer 002D  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 8FF8  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 8FEE  
                  __get_available_cluster@skip_sector 002E  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 67CC  
                   fat_read_from_file_fast@start_byte 0042  
                                   fat_find_file@name 002C  
                      MSDProcessCommandMediaPresent@i 0047  
                                 ??_flash_sector_read 002C  
                                           _api_parse 5C22  
                           fat_create_file@root_entry 0065  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 553C  
                                  _APP_DeviceMSDTasks 8EE0  
                                       __pmediumconst 9C98  
                                 fat_find_file@offset 0035  
                               ??__flash_partial_read 001C  
                                           __ptext100 904C  
                                           __ptext101 667C  
                                           __ptext110 553C  
                                           __ptext102 3BDE  
                                           __ptext111 8EA0  
                                           __ptext103 26DE  
                                           __ptext200 60DC  
                                           __ptext120 9030  
                                           __ptext112 75E4  
                                           __ptext104 4FDA  
                                           __ptext201 7CC2  
                                           __ptext121 9036  
                                           __ptext113 6262  
                                           __ptext105 24B8  
                                           __ptext210 71EA  
                                           __ptext202 8BC0  
                                           __ptext130 8C56  
                                           __ptext122 69B8  
                                           __ptext114 8AFA  
                                           __ptext106 4EE4  
                                           __ptext211 6478  
                                           __ptext203 2284  
                                           __ptext131 8B9A  
                                           __ptext123 5C22  
                                           __ptext115 6AF8  
                                           __ptext107 8D44  
                                           __ptext220 88CE  
                                           __ptext212 8D9E  
                                           __ptext204 7738  
                                           __ptext140 12DC  
                                           __ptext132 5B50  
                                           __ptext124 6316  
                                           __ptext116 2CE8  
                                           __ptext108 89C2  
                                           __ptext221 83EA  
                                           __ptext213 7DCC  
                                           __ptext205 82C2  
                                           __ptext141 8FD0  
                                           __ptext133 4260  
                                           __ptext125 8C32  
                                           __ptext117 902A  
                                           __ptext109 8272  
                                           __ptext230 6F26  
                                           __ptext222 802A  
                                           __ptext214 7816  
                                           __ptext206 70D6  
                                           __ptext150 377A  
                                           __ptext142 9042  
                                           __ptext134 2AF8  
                                           __ptext126 8E28  
                                           __ptext118 8FC6  
                                           __ptext231 8E5A  
                                           __ptext223 8900  
                                           __ptext215 7B46  
                                           __ptext207 7D74  
                                           __ptext151 8FEE  
                                           __ptext143 8FDA  
                                           __ptext135 3D46  
                                           __ptext127 903C  
                                           __ptext119 8EB6  
                                           __ptext232 8E72  
                                           __ptext224 46C4  
                                           __ptext216 812A  
                                           __ptext208 74F4  
                                           __ptext160 7D1C  
                                           __ptext152 6018  
                                           __ptext144 0C2A  
                                           __ptext136 7F28  
                                           __ptext128 7884  
                                           __ptext233 8F66  
                                           __ptext225 756C  
                                           __ptext217 8ACE  
                                           __ptext209 7656  
                                           __ptext161 900C  
                                           __ptext153 853E  
                                           __ptext145 7954  
                                           __ptext137 328E  
                                           __ptext129 7ED2  
                                           __ptext234 4BE4  
                                           __ptext226 8CE2  
                                           __ptext218 8BE6  
                                           __ptext170 8D80  
                                           __ptext162 9014  
                                           __ptext154 6914  
                                           __ptext146 72F8  
                                           __ptext138 2ED6  
                                           __ptext235 0000  
                                           __ptext227 8080  
                                           __ptext219 6B96  
                                           __ptext171 8474  
                                           __ptext163 901C  
                                           __ptext155 8580  
                                           __ptext147 38F6  
                                           __ptext139 8F06  
                                           __ptext228 7E24  
                                           __ptext180 6CD0  
                                           __ptext172 28FA  
                                           __ptext164 561E  
                                           __ptext156 817E  
                                           __ptext148 8FE4  
                                           __ptext229 8932  
                                           __ptext181 45B6  
                                           __ptext173 3464  
                                           __ptext165 6726  
                                           __ptext157 85C2  
                                           __ptext149 8312  
                                           __ptext190 8FF8  
                                           __ptext182 81D0  
                                           __ptext174 5CF2  
                                           __ptext166 8D62  
                                           __ptext158 8AA2  
                                           __ptext191 9002  
                                           __ptext183 8602  
                                           __ptext175 1DCC  
                                           __ptext167 89F0  
                                           __ptext159 835A  
                                           __ptext192 8C7A  
                                           __ptext184 83A2  
                                           __ptext176 7F7E  
                                           __ptext168 7162  
                                           __ptext193 737A  
                                           __ptext185 50C8  
                                           __ptext177 8B4C  
                                           __ptext169 63CA  
                                           __ptext194 6E92  
                                           __ptext186 3FE8  
                                           __ptext178 5700  
                                           __ptext195 4DE6  
                                           __ptext187 79BA  
                                           __ptext179 77A8  
                                           __ptext196 84B8  
                                           __ptext188 58C2  
                                           __ptext197 15D2  
                                           __ptext189 61A0  
                                           __ptext198 7FD4  
                                           __ptext199 8836  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0033  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                         __size_of_flash_sector_write 0056  
                                            ?___lwdiv 0001  
                                           __spi_init 86F4  
                          ??__fill_buffer_read_buffer 002F  
                                            ?___lwmod 0001  
                          ??__offset_from_file_number 0003  
                         __size_of_fat_read_from_file 00EE  
                                    ?__display_search 0001  
                                           _hid_rpt01 9F6E  
                                         __ui_encoder 57E2  
                           __get_first_cluster@offset 0034  
                                           _idle_rate 01B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0032  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3BDE  
                             __parse_file_delete@data 0050  
                           fat_modify_file@start_byte 0042  
                     __end_of__parse_buffer_to_sector 7272  
                                     __i2c_write@data 0006  
                                _file_maximum_address 014E  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 004D  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0051  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4BE4  
                          __make_cluster_chain@offset 0049  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 010A  
                          __make_cluster_chain@sector 0045  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 47CE  
                             ??_flash_write_to_buffer 0025  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 6316  
                        ??_spi_get_external_rx_buffer 0003  
                 __fill_buffer_get_display@secondHalf 0007  
                              fat_read_from_file@data 0076  
                              __end_of__flash_is_busy 8D04  
                                       _fat_find_file 58C2  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 007E  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 0C2A  
                                   __display_itoa_u16 6018  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 7954  
                                   ??_fat_modify_file 004A  
                           __end_of_flash_sector_read 8900  
                               ??_USBStdGetDscHandler 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 9DE4  
                                 __end_of_found_line2 9CFC  
                                 __end_of_found_line3 9E9F  
                                 __end_of_found_line4 9D32  
                                         _ep_data_out 016C  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 8FD0  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 8CE2  
                       _bootloader_get_rec_dataLength 8FC6  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 00EA  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 8312  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
              __cluster_from_sector_and_offset@offset 0003  
                       __size_of_fat_read_from_buffer 001E  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2ED6  
                    __end_of_bootloader_get_file_size 8F18  
                                         _file_buffer 0290  
              __cluster_from_sector_and_offset@sector 0001  
                                     _config_internal 0169  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 903C  
                                     _config_external 0166  
                                      __display_start 2AF8  
                        __size_of_USBCtrlTrfTxService 00D4  
                      __size_of_display_get_character 002A  
                                 __make_cluster_chain 15D2  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 8B24  
                                         _file_number 00FF  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 545A  
                      __root_is_available@file_number 0034  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 003C  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                            ?__parse_sector_to_buffer 0054  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0094  
                            __fat_offset_from_cluster 8E72  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 0038  
                   __bootloader_verify_file@address32 009B  
                          __end_of_internalFlash_read 879A  
                                          ?_api_parse 009B  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 005A  
                                            _MSDTasks 2030  
                          _USBDeferINDataStagePackets 00EF  
                                        ??_fat_format 0025  
                                     _fat_delete_file 8602  
                                _active_configuration 018A  
                           ?__ic2_display_set_address 0001  
                                            _SSP1CON1 000FC6  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0059  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6DFE  
                          ?__data_sector_from_cluster 0001  
                                   __i2c_write@length 0008  
                                           _spi_tx_rx 6F26  
                                           _spi_tx_tx 70D6  
                                __display_verify@cntr 0021  
                                ?__make_cluster_chain 0036  
                     __make_cluster_chain@next_offset 003C  
                    flash_write_page_from_buffer@page 001E  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 00DD  
                 __size_of_spi_get_external_tx_buffer 000A  
                               flash_sector_read@data 002A  
                                __display_programming 328E  
                               ?_USBTransferOnePacket 0001  
                               flash_sector_read@page 0028  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 0054  
                           __end_of__display_itoa_u16 60DC  
                           __end_of__display_itoa_u32 0F98  
                     __size_of__fill_buffer_read_file 021C  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 9DD4  
                                __end_of_verify_line2 9E59  
                                __end_of_verify_line3 9E91  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 002C  
                            fat_rename_file@extension 003A  
                  __size_of_fat_copy_sector_to_buffer 00AE  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00F5  
                   __end_of_ExternalFlash_MediaDetect 9050  
                        __size_of__parse_format_drive 0044  
                                        _reboot_line1 9E3F  
                                        _search_line1 9DE4  
                                        _search_line2 9D43  
                                        _search_line3 9CC2  
                                        _search_line4 9E59  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                     fat_read_from_file_fast@position 006A  
                                     ?__flash_is_busy 0001  
                                         ??_i2c_reset 0001  
                    __end_of__fill_buffer_get_display 6316  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 84B8  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 835A  
                   __size_of_fat_get_file_information 0072  
                                _bootloader_get_error 9042  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0030  
                              __end_of__display_found 30B4  
                             __end_of_USBStallHandler 8474  
                            __sector_from_file_number 8ACE  
                      __end_of_internalFlash_readPage 853E  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 2CE8  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 6FCE  
                        __size_of__system_timer0_init 0020  
                                   ??_fat_resize_file 0051  
                            __size_of_system_delay_ms 0024  
                __fill_buffer_read_buffer@data_length 0033  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                           __find_nth_cluster@cluster 0038  
                         __end_of_USBStdSetCfgHandler 5378  
                         __size_of__parse_file_delete 0052  
                                  __end_of_fat_format 2AF8  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 00EC  
                                 __display_found@cntr 0028  
                                            _i2c_init 8F74  
                  __parse_file_modify@number_of_bytes 0059  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 010E  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00EB  
                         __size_of__parse_file_rename 006E  
                                         ??__i2c_stop 0001  
                         __size_of__parse_file_resize 00E2  
                      __parse_write_buffer@start_byte 002E  
                                  __end_of_device_dsc 9FB7  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 8FA8  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 3FE8  
                         __size_of__display_rebooting 0056  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0072  
                                            __Hrparam 0000  
                        __parse_file_create@file_size 005C  
                         __end_of_bootloader_filename 9FC0  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 8E0E  
                                      _TransferLength 00DB  
                                _bootloader_extension 9FC8  
                           fat_write_to_buffer@length 0027  
                          __end_of_USBCheckMSDRequest 6018  
               fat_read_from_file_fast@cluster_number 004E  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 889C  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 9D84  
                                  __end_of_done_line2 9EA5  
                                  __end_of_done_line3 9D74  
                                  __end_of_done_line4 9D64  
                                      __i2c_wait_idle 7D1C  
                                     _MSDWriteHandler 1890  
                        fat_create_file@first_cluster 0062  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                               ??__make_cluster_chain 003A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 018E  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                    __end_of_system_minimal_init_undo 8F38  
                                         _found_line1 9DD4  
                                         _found_line2 9CE9  
                                         _found_line3 9E98  
                                         _found_line4 9D20  
                                            __get_fat 7F7E  
                                            __get_fbr 1DCC  
                                            __get_mbr 5CF2  
                                __size_of__i2c_open_1 0018  
                         ??_flash_copy_page_to_buffer 0020  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 8F06  
                          _ExternalFlash_CapacityRead 8EF4  
                                 _fat_write_to_buffer 8D62  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 69B8  
                        __size_of__bootloader_program 03D0  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 8F38  
                    __get_first_cluster@first_cluster 0036  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                   __end_of_fat_copy_sector_to_buffer 6478  
                          __size_of_flash_sector_read 0032  
                                    __display_checked 377A  
               __end_of_bootloader_get_rec_recordType 9030  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 902A  
                            ??__get_available_cluster 0030  
                                            __ptext10 8F58  
                                            __ptext11 8E8A  
                                            __ptext20 8F38  
                                            __ptext12 8F74  
                                            __ptext21 67CC  
                                            __ptext13 8E42  
                                            __ptext30 0020  
                                            __ptext22 8D04  
                                            __ptext14 7C66  
                                            __ptext31 8DBC  
                                            __ptext23 86BA  
                                            __ptext15 8ECC  
                            fat_read_from_buffer@data 0029  
                                            __ptext40 8B24  
                                            __ptext32 76C8  
                                            __ptext24 8F80  
                                            __ptext16 8DF4  
                                            __ptext41 7BA8  
                                            __ptext33 8A4A  
                                            __ptext25 8F8A  
                                            __ptext17 8642  
                                            __ptext50 8FB2  
                                            __ptext42 8994  
                                            __ptext34 73FC  
                                            __ptext26 9024  
                                            __ptext18 86F4  
                                            __ptext51 35FA  
                                            __ptext43 59A2  
                                            __ptext35 84FC  
                                            __ptext27 7A20  
                                            __ptext19 747A  
                                            __ptext60 6A5A  
                                            __ptext52 872C  
                                            __ptext44 6870  
                                            __ptext36 8764  
                                            __ptext28 0F98  
                                            __ptext61 51B4  
                                            __ptext53 8964  
                                            __ptext45 7C08  
                                            __ptext37 8DD8  
                                            __ptext29 049C  
                                            __ptext70 80D6  
                                            __ptext62 5296  
                                            __ptext54 8430  
                                            __ptext46 8222  
                                            __ptext38 8F94  
                                            __ptext71 7E7C  
                                            __ptext63 8A76  
                                            __ptext55 8D24  
                                            __ptext47 704A  
                                            __ptext39 87CE  
                                            __ptext80 5E8C  
                                            __ptext72 8F48  
                                            __ptext64 65D2  
                                            __ptext56 3E98  
                                            __ptext48 8F9E  
                                            __ptext81 5A7C  
                                            __ptext73 4AE2  
                                            __ptext65 4126  
                                            __ptext57 6526  
                                            __ptext49 8FA8  
                                            __ptext90 30B4  
                                            __ptext82 8EE0  
                                            __ptext74 8802  
                                            __ptext66 1B48  
                                            __ptext58 6D68  
                                            __ptext91 545A  
                                            __ptext83 2030  
                                            __ptext75 867E  
                                            __ptext67 7272  
                                            __ptext59 4CE6  
                                            __ptext92 49DC  
                                            __ptext84 44A4  
                                            __ptext76 6DFE  
                                            __ptext68 5F54  
                                            __ptext93 47CE  
                                            __ptext85 7A82  
                                            __ptext77 78EE  
                                            __ptext69 5378  
                                            __ptext94 7AE4  
                                            __ptext86 086C  
                                            __ptext78 438C  
                                            __ptext95 889C  
                                            __ptext87 1890  
                                            __ptext79 5DC0  
                                            __ptext96 6C34  
                                            __ptext88 9048  
                                            __ptext97 8FBC  
                                            __ptext89 886A  
                                            __ptext98 8EF4  
                                            __ptext99 8E0E  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 7AE4  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 7A82  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                    fat_copy_sector_to_buffer@cluster 0051  
                           flash_write_to_buffer@data 0023  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                __end_of_flash_write_page_from_buffer 8DBC  
               __size_of_flash_write_page_from_buffer 001E  
                        _flash_write_page_from_buffer 8D9E  
                             __size_of_bootloader_run 0062  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 561E  
                   __end_of_failed_line3_addressRange 9CC2  
                          ?_ExternalFlash_SectorWrite 0025  
               fat_write_sector_from_buffer@file_size 0049  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                          __end_of__flash_buffer_read 82C2  
                                        api_parse@idx 00A0  
                      __size_of__bootloader_find_file 00A4  
                  __end_of__flash_copy_page_to_buffer 7DCC  
                          __flash_copy_page_to_buffer 7D74  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 6726  
                       __end_of__bootloader_find_file 6914  
                        __end_of_i2c_digipot_reset_on 8CC0  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 80D6  
                      __end_of_USBCtrlTrfSetupHandler 6DFE  
                                       __size_of_main 0172  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 9F4A  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 8642  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 26DE  
                         __end_of_flash_partial_write 77A8  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003C  
                                ?_fat_write_to_buffer 0025  
                             fat_get_file_size@sector 003A  
               fat_read_from_file_fast@needed_cluster 0066  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 83EA  
                    __size_of__bootloader_verify_file 0344  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 9036  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 9030  
                      __fill_buffer_read_buffer@start 0031  
                                 _USBCtrlTrfInHandler 5E8C  
                  _MSDProcessCommandMediaPresent$2390 003C  
                            ??__write_value_to_offset 0007  
                      fat_read_from_file_fast@cluster 004C  
                                         ??_api_parse 009E  
                              __end_of__i2c_wait_idle 7D74  
               fat_resize_file@old_number_of_clusters 0060  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 8642  
                    __end_of__fill_buffer_read_buffer 4FDA  
                                _USBCtrlTrfOutHandler 78EE  
                    __end_of__offset_from_file_number 8C0C  
                          ??__fat_sector_from_cluster 0003  
                           _USBCtrlEPAllowStatusStage 5DC0  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 8F94  
                                ?__parse_command_long 0098  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
              __make_cluster_chain@remaining_clusters 0043  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 3A6C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0030  
                              ??__parse_command_short 002C  
                                   ?_system_full_init 0001  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00F2  
                  __end_of_spi_get_external_rx_buffer 8F94  
                          _spi_get_external_rx_buffer 8F8A  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 561E  
                             __parse_file_modify@data 0056  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 8B4C  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 8B24  
                             _internalFlash_erasePage 87CE  
                            __parse_format_drive@data 0027  
                                  ??_system_full_init 0030  
                           __flash_buffer_read@buffer 001A  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                           __flash_buffer_read@length 0016  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 8F8A  
                          _spi_get_external_tx_buffer 8F80  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                        __size_of_system_minimal_init 0016  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                    fat_read_from_file@cluster_number 007B  
                __end_of_MSDComputeDeviceInAndResidue 6CD0  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 6C34  
                          fat_modify_file@return_code 0063  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 9E04  
                                 __end_of_start_line2 9E6B  
                                 __end_of_start_line3 9EA8  
                                 __end_of_start_line4 9E31  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                          fat_rename_file@return_code 003C  
                                       _flash_is_busy 8EA0  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 8FB2  
                              bootloader_run@timeslot 005C  
                             __end_of_fat_create_file 4126  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                            ??_flash_read_from_buffer 0025  
                         __size_of__root_is_available 0062  
                             __parse_file_rename@data 0060  
                              __size_of_USBDeviceInit 0150  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 72F8  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 7272  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 889C  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 7E24  
              __size_of__flash_write_page_from_buffer 0058  
                       ?_flash_write_page_from_buffer 001E  
                       __flash_write_page_from_buffer 7DCC  
                 fat_write_sector_from_buffer@cluster 0051  
                           _flash_copy_page_to_buffer 8D80  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               ??_fat_write_to_buffer 002B  
                        fat_read_from_file@start_byte 006E  
                                     _display_content 0200  
                     fat_copy_sector_to_buffer@sector 0043  
      fat_write_sector_from_buffer@number_of_clusters 004D  
                          __end_of_flash_partial_read 8932  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 1B48  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                             __write_root@file_number 002F  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 903C  
                         _bootloader_get_rec_checksum 9036  
                        __parse_sector_to_buffer@data 0054  
                             __size_of_MSDReadHandler 01DA  
                       __size_of_jump_to_main_program 0006  
                                 fat_resize_file@root 0067  
                        __bootloader_verify_file@root 0076  
                   __size_of__fill_buffer_get_display 00B4  
                            ?__read_value_from_offset 0001  
                            ?_fat_read_from_file_fast 0042  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                        __parse_buffer_to_sector@data 0054  
                                     _display_prepare 5B50  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 9E04  
                                 _USBCtrlTrfRxService 438C  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 872C  
                               ??__parse_command_long 0060  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 8C56  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 1B48  
                                     _fat_modify_file 2284  
                        __fill_buffer_read_file@start 00AE  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 5A7C  
                                        ?_api_prepare 00B2  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                __end_of_fat_write_sector_from_buffer 6526  
               __size_of_fat_write_sector_from_buffer 00AE  
                        _fat_write_sector_from_buffer 6478  
                                     _gblMediaPresent 0182  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 8B74  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 9E3F  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 8FDA  
                          _bootloader_get_rec_address 8FD0  
                               _USBAlternateInterface 01AF  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 8272  
                          __delete_root@deleted_value 002D  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 0186  
                    __make_cluster_chain@data_changed 0042  
                             __parse_file_resize@data 0055  
                           _failed_line3_noNextRecord 9E13  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 6CD0  
                      __size_of_flash_write_to_buffer 002E  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00F4  
                                      _display_update 7884  
                       __end_of_flash_write_to_buffer 8A1E  
                                      ??__normal_mode 0019  
                 __get_available_cluster@first_sector 002C  
                                      ?_flash_is_busy 0001  
                     __size_of__get_available_cluster 00C4  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 9CD6  
                            ?__parse_buffer_to_sector 0054  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 545A  
                          ??__fat_offset_from_cluster 0003  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 8BC0  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0184  
                             _internalFlash_writePage 73FC  
                         __end_of__parse_write_buffer 67CC  
                                ?_USBCtrlTrfTxService 0001  
                     __offset_from_file_number@offset 0004  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 4AE2  
                        _USBStatusStageTimeoutCounter 00F3  
                     ??_ExternalFlash_MediaInitialize 0003  
                   __size_of_system_minimal_init_undo 0010  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                           ?_system_minimal_init_undo 0001  
                         __end_of__flash_partial_read 75E4  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 8602  
                                        _verify_line1 9DC4  
                                        _verify_line2 9E4C  
                                        _verify_line3 9E8A  
                                 __parse_format_drive 8474  
                          fat_resize_file@file_number 0066  
                                          _USB_CD_Ptr 9EA5  
                                         _power_state 00E5  
                                         _USBInHandle 017E  
                            _APP_DeviceCustomHIDTasks 667C  
                          __end_of_flash_sector_write 802A  
