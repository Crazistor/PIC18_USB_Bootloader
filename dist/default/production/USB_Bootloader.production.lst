

Microchip Technology PIC18 LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Mon Sep 03 20:04:27 2018

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1                           	processor	18F47J53
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	intcode,global,delta=1
     6                           	psect	intcodelo,global,delta=1
     7                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     8                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     9                           	psect	idataBANK2,global,class=CODE,delta=1,noexec
    10                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
    11                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    12                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    16                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    17                           	psect	dataBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    18                           	psect	bssBANK3,global,class=BANK3,space=1,delta=1,lowdata,noexec
    19                           	psect	bssBIGRAMlh,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    20                           	psect	bssBIGRAMll,global,class=BIGRAM,space=1,delta=1,lowdata,noexec
    21                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    22                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    23                           	psect	text0,global,reloc=2,class=CODE,delta=1
    24                           	psect	text1,global,reloc=2,class=CODE,delta=1
    25                           	psect	text2,global,reloc=2,class=CODE,delta=1
    26                           	psect	text3,global,reloc=2,class=CODE,delta=1
    27                           	psect	text4,global,reloc=2,class=CODE,delta=1
    28                           	psect	text5,global,reloc=2,class=CODE,delta=1
    29                           	psect	text6,global,reloc=2,class=CODE,delta=1
    30                           	psect	text7,global,reloc=2,class=CODE,delta=1
    31                           	psect	text8,global,reloc=2,class=CODE,delta=1
    32                           	psect	text9,global,reloc=2,class=CODE,delta=1
    33                           	psect	text10,global,reloc=2,class=CODE,delta=1
    34                           	psect	text11,global,reloc=2,class=CODE,delta=1
    35                           	psect	text12,global,reloc=2,class=CODE,delta=1
    36                           	psect	text13,global,reloc=2,class=CODE,delta=1
    37                           	psect	text14,global,reloc=2,class=CODE,delta=1
    38                           	psect	text15,global,reloc=2,class=CODE,delta=1
    39                           	psect	text16,global,reloc=2,class=CODE,delta=1
    40                           	psect	text17,global,reloc=2,class=CODE,delta=1
    41                           	psect	text18,global,reloc=2,class=CODE,delta=1
    42                           	psect	text19,global,reloc=2,class=CODE,delta=1
    43                           	psect	text20,global,reloc=2,class=CODE,delta=1
    44                           	psect	text21,global,reloc=2,class=CODE,delta=1
    45                           	psect	text22,global,reloc=2,class=CODE,delta=1
    46                           	psect	text23,global,reloc=2,class=CODE,delta=1
    47                           	psect	text24,global,reloc=2,class=CODE,delta=1
    48                           	psect	text25,global,reloc=2,class=CODE,delta=1
    49                           	psect	text26,global,reloc=2,class=CODE,delta=1
    50                           	psect	text27,global,reloc=2,class=CODE,delta=1
    51                           	psect	text28,global,reloc=2,class=CODE,delta=1
    52                           	psect	text29,global,reloc=2,class=CODE,delta=1
    53                           	psect	text30,global,reloc=2,class=CODE,delta=1
    54                           	psect	text31,global,reloc=2,class=CODE,delta=1
    55                           	psect	text32,global,reloc=2,class=CODE,delta=1
    56                           	psect	text33,global,reloc=2,class=CODE,delta=1
    57                           	psect	text34,global,reloc=2,class=CODE,delta=1
    58                           	psect	text35,global,reloc=2,class=CODE,delta=1
    59                           	psect	text36,global,reloc=2,class=CODE,delta=1
    60                           	psect	text37,global,reloc=2,class=CODE,delta=1
    61                           	psect	text38,global,reloc=2,class=CODE,delta=1
    62                           	psect	text39,global,reloc=2,class=CODE,delta=1
    63                           	psect	text40,global,reloc=2,class=CODE,delta=1
    64                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    65                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text43,global,reloc=2,class=CODE,delta=1
    67                           	psect	text44,global,reloc=2,class=CODE,delta=1
    68                           	psect	text45,global,reloc=2,class=CODE,delta=1
    69                           	psect	text46,global,reloc=2,class=CODE,delta=1
    70                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    72                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=1
    73                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    74                           	psect	text51,global,reloc=2,class=CODE,delta=1
    75                           	psect	text52,global,reloc=2,class=CODE,delta=1
    76                           	psect	text53,global,reloc=2,class=CODE,delta=1
    77                           	psect	text54,global,reloc=2,class=CODE,delta=1
    78                           	psect	text55,global,reloc=2,class=CODE,delta=1
    79                           	psect	text56,global,reloc=2,class=CODE,delta=1
    80                           	psect	text57,global,reloc=2,class=CODE,delta=1
    81                           	psect	text58,global,reloc=2,class=CODE,delta=1
    82                           	psect	text59,global,reloc=2,class=CODE,delta=1
    83                           	psect	text60,global,reloc=2,class=CODE,delta=1
    84                           	psect	text61,global,reloc=2,class=CODE,delta=1
    85                           	psect	text62,global,reloc=2,class=CODE,delta=1
    86                           	psect	text63,global,reloc=2,class=CODE,delta=1
    87                           	psect	text64,global,reloc=2,class=CODE,delta=1
    88                           	psect	text65,global,reloc=2,class=CODE,delta=1
    89                           	psect	text66,global,reloc=2,class=CODE,delta=1
    90                           	psect	text67,global,reloc=2,class=CODE,delta=1
    91                           	psect	text68,global,reloc=2,class=CODE,delta=1
    92                           	psect	text69,global,reloc=2,class=CODE,delta=1
    93                           	psect	text70,global,reloc=2,class=CODE,delta=1
    94                           	psect	text71,global,reloc=2,class=CODE,delta=1
    95                           	psect	text72,global,reloc=2,class=CODE,delta=1
    96                           	psect	text73,global,reloc=2,class=CODE,delta=1
    97                           	psect	text74,global,reloc=2,class=CODE,delta=1
    98                           	psect	text75,global,reloc=2,class=CODE,delta=1
    99                           	psect	text76,global,reloc=2,class=CODE,delta=1
   100                           	psect	text77,global,reloc=2,class=CODE,delta=1
   101                           	psect	text78,global,reloc=2,class=CODE,delta=1
   102                           	psect	text79,global,reloc=2,class=CODE,delta=1
   103                           	psect	text80,global,reloc=2,class=CODE,delta=1
   104                           	psect	text81,global,reloc=2,class=CODE,delta=1
   105                           	psect	text82,global,reloc=2,class=CODE,delta=1
   106                           	psect	text83,global,reloc=2,class=CODE,delta=1
   107                           	psect	text84,global,reloc=2,class=CODE,delta=1
   108                           	psect	text85,global,reloc=2,class=CODE,delta=1
   109                           	psect	text86,global,reloc=2,class=CODE,delta=1
   110                           	psect	text87,global,reloc=2,class=CODE,delta=1,group=2
   111                           	psect	text88,global,reloc=2,class=CODE,delta=1
   112                           	psect	text89,global,reloc=2,class=CODE,delta=1
   113                           	psect	text90,global,reloc=2,class=CODE,delta=1
   114                           	psect	text91,global,reloc=2,class=CODE,delta=1
   115                           	psect	text92,global,reloc=2,class=CODE,delta=1
   116                           	psect	text93,global,reloc=2,class=CODE,delta=1
   117                           	psect	text94,global,reloc=2,class=CODE,delta=1
   118                           	psect	text95,global,reloc=2,class=CODE,delta=1
   119                           	psect	text96,global,reloc=2,class=CODE,delta=1
   120                           	psect	text97,global,reloc=2,class=CODE,delta=1
   121                           	psect	text98,global,reloc=2,class=CODE,delta=1
   122                           	psect	text99,global,reloc=2,class=CODE,delta=1
   123                           	psect	text100,global,reloc=2,class=CODE,delta=1
   124                           	psect	text101,global,reloc=2,class=CODE,delta=1
   125                           	psect	text102,global,reloc=2,class=CODE,delta=1
   126                           	psect	text103,global,reloc=2,class=CODE,delta=1
   127                           	psect	text104,global,reloc=2,class=CODE,delta=1
   128                           	psect	text105,global,reloc=2,class=CODE,delta=1
   129                           	psect	text106,global,reloc=2,class=CODE,delta=1
   130                           	psect	text107,global,reloc=2,class=CODE,delta=1
   131                           	psect	text108,global,reloc=2,class=CODE,delta=1
   132                           	psect	text109,global,reloc=2,class=CODE,delta=1
   133                           	psect	text110,global,reloc=2,class=CODE,delta=1
   134                           	psect	text111,global,reloc=2,class=CODE,delta=1
   135                           	psect	text112,global,reloc=2,class=CODE,delta=1
   136                           	psect	text113,global,reloc=2,class=CODE,delta=1
   137                           	psect	text114,global,reloc=2,class=CODE,delta=1
   138                           	psect	text115,global,reloc=2,class=CODE,delta=1
   139                           	psect	text116,global,reloc=2,class=CODE,delta=1
   140                           	psect	text117,global,reloc=2,class=CODE,delta=1
   141                           	psect	text118,global,reloc=2,class=CODE,delta=1
   142                           	psect	text119,global,reloc=2,class=CODE,delta=1
   143                           	psect	text120,global,reloc=2,class=CODE,delta=1
   144                           	psect	text121,global,reloc=2,class=CODE,delta=1
   145                           	psect	text122,global,reloc=2,class=CODE,delta=1
   146                           	psect	text123,global,reloc=2,class=CODE,delta=1
   147                           	psect	text124,global,reloc=2,class=CODE,delta=1
   148                           	psect	text125,global,reloc=2,class=CODE,delta=1
   149                           	psect	text126,global,reloc=2,class=CODE,delta=1
   150                           	psect	text127,global,reloc=2,class=CODE,delta=1
   151                           	psect	text128,global,reloc=2,class=CODE,delta=1
   152                           	psect	text129,global,reloc=2,class=CODE,delta=1
   153                           	psect	text130,global,reloc=2,class=CODE,delta=1
   154                           	psect	text131,global,reloc=2,class=CODE,delta=1
   155                           	psect	text132,global,reloc=2,class=CODE,delta=1
   156                           	psect	text133,global,reloc=2,class=CODE,delta=1
   157                           	psect	text134,global,reloc=2,class=CODE,delta=1
   158                           	psect	text135,global,reloc=2,class=CODE,delta=1
   159                           	psect	text136,global,reloc=2,class=CODE,delta=1
   160                           	psect	text137,global,reloc=2,class=CODE,delta=1
   161                           	psect	text138,global,reloc=2,class=CODE,delta=1
   162                           	psect	text139,global,reloc=2,class=CODE,delta=1
   163                           	psect	text140,global,reloc=2,class=CODE,delta=1
   164                           	psect	text141,global,reloc=2,class=CODE,delta=1
   165                           	psect	text142,global,reloc=2,class=CODE,delta=1
   166                           	psect	text143,global,reloc=2,class=CODE,delta=1
   167                           	psect	text144,global,reloc=2,class=CODE,delta=1
   168                           	psect	text145,global,reloc=2,class=CODE,delta=1
   169                           	psect	text146,global,reloc=2,class=CODE,delta=1
   170                           	psect	text147,global,reloc=2,class=CODE,delta=1
   171                           	psect	text148,global,reloc=2,class=CODE,delta=1
   172                           	psect	text149,global,reloc=2,class=CODE,delta=1
   173                           	psect	text150,global,reloc=2,class=CODE,delta=1
   174                           	psect	text151,global,reloc=2,class=CODE,delta=1
   175                           	psect	text152,global,reloc=2,class=CODE,delta=1
   176                           	psect	text153,global,reloc=2,class=CODE,delta=1
   177                           	psect	text154,global,reloc=2,class=CODE,delta=1
   178                           	psect	text155,global,reloc=2,class=CODE,delta=1
   179                           	psect	text156,global,reloc=2,class=CODE,delta=1
   180                           	psect	text157,global,reloc=2,class=CODE,delta=1
   181                           	psect	text158,global,reloc=2,class=CODE,delta=1
   182                           	psect	text159,global,reloc=2,class=CODE,delta=1
   183                           	psect	text160,global,reloc=2,class=CODE,delta=1
   184                           	psect	text161,global,reloc=2,class=CODE,delta=1
   185                           	psect	text162,global,reloc=2,class=CODE,delta=1
   186                           	psect	text163,global,reloc=2,class=CODE,delta=1
   187                           	psect	text164,global,reloc=2,class=CODE,delta=1
   188                           	psect	text165,global,reloc=2,class=CODE,delta=1
   189                           	psect	text166,global,reloc=2,class=CODE,delta=1
   190                           	psect	text167,global,reloc=2,class=CODE,delta=1
   191                           	psect	text168,global,reloc=2,class=CODE,delta=1
   192                           	psect	text169,global,reloc=2,class=CODE,delta=1
   193                           	psect	text170,global,reloc=2,class=CODE,delta=1
   194                           	psect	text171,global,reloc=2,class=CODE,delta=1
   195                           	psect	text172,global,reloc=2,class=CODE,delta=1
   196                           	psect	text173,global,reloc=2,class=CODE,delta=1
   197                           	psect	text174,global,reloc=2,class=CODE,delta=1,group=2
   198                           	psect	text175,global,reloc=2,class=CODE,delta=1
   199                           	psect	text176,global,reloc=2,class=CODE,delta=1
   200                           	psect	text177,global,reloc=2,class=CODE,delta=1,group=2
   201                           	psect	text178,global,reloc=2,class=CODE,delta=1
   202                           	psect	text179,global,reloc=2,class=CODE,delta=1
   203                           	psect	text180,global,reloc=2,class=CODE,delta=1
   204                           	psect	text181,global,reloc=2,class=CODE,delta=1
   205                           	psect	text182,global,reloc=2,class=CODE,delta=1
   206                           	psect	text183,global,reloc=2,class=CODE,delta=1
   207                           	psect	text184,global,reloc=2,class=CODE,delta=1
   208                           	psect	text185,global,reloc=2,class=CODE,delta=1
   209                           	psect	text186,global,reloc=2,class=CODE,delta=1
   210                           	psect	text187,global,reloc=2,class=CODE,delta=1
   211                           	psect	text188,global,reloc=2,class=CODE,delta=1
   212                           	psect	text189,global,reloc=2,class=CODE,delta=1
   213                           	psect	text190,global,reloc=2,class=CODE,delta=1
   214                           	psect	text191,global,reloc=2,class=CODE,delta=1
   215                           	psect	text192,global,reloc=2,class=CODE,delta=1
   216                           	psect	text193,global,reloc=2,class=CODE,delta=1
   217                           	psect	text194,global,reloc=2,class=CODE,delta=1
   218                           	psect	text195,global,reloc=2,class=CODE,delta=1
   219                           	psect	text196,global,reloc=2,class=CODE,delta=1
   220                           	psect	text197,global,reloc=2,class=CODE,delta=1
   221                           	psect	text198,global,reloc=2,class=CODE,delta=1
   222                           	psect	text199,global,reloc=2,class=CODE,delta=1
   223                           	psect	text200,global,reloc=2,class=CODE,delta=1
   224                           	psect	text201,global,reloc=2,class=CODE,delta=1
   225                           	psect	text202,global,reloc=2,class=CODE,delta=1
   226                           	psect	text203,global,reloc=2,class=CODE,delta=1
   227                           	psect	text204,global,reloc=2,class=CODE,delta=1
   228                           	psect	text205,global,reloc=2,class=CODE,delta=1
   229                           	psect	text206,global,reloc=2,class=CODE,delta=1
   230                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
   231                           	psect	text207,global,reloc=2,class=CODE,delta=1
   232                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
   233                           	dabs	1,0x600,512,_msd_buffer
   234                           	dabs	1,0xD00,48,_BDT
   235                           	dabs	1,0xD40,31,_msd_cbw
   236                           	dabs	1,0xD80,13,_msd_csw
   237                           	dabs	1,0xD38,8,_CtrlTrfData
   238                           	dabs	1,0xD30,8,_SetupPkt
   239  0000                     
   240                           ; Version 2.00
   241                           ; Generated 27/05/2018 GMT
   242                           ; 
   243                           ; Copyright © 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
   244                           ; All rights reserved.
   245                           ; 
   246                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   247                           ; 
   248                           ; Redistribution and use in source and binary forms, with or without modification, are
   249                           ; permitted provided that the following conditions are met:
   250                           ; 
   251                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   252                           ;        conditions and the following disclaimer.
   253                           ; 
   254                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   255                           ;        of conditions and the following disclaimer in the documentation and/or other
   256                           ;        materials provided with the distribution.
   257                           ; 
   258                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   259                           ;        software without specific prior written permission.
   260                           ; 
   261                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   262                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   263                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   264                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   265                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   266                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   267                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   268                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   269                           ; 
   270                           ; 
   271                           ; Code-generator required, PIC18F47J53 Definitions
   272                           ; 
   273                           ; SFR Addresses
   274  0000                     
   275                           	psect	intcode
   276  000008  EF04 F048          	goto	36872	;# 
   277                           
   278                           	psect	intcodelo
   279  000018  EF0C F048          	goto	36888	; ;# 
   280  0000                     
   281                           	psect	idataBANK0
   282  008058                     __pidataBANK0:
   283                           	opt stack 0
   284                           
   285                           ;initializer for _file_number
   286  008058  FF                 	db	255
   287                           
   288                           	psect	idataBANK1
   289  007E18                     __pidataBANK1:
   290                           	opt stack 0
   291                           
   292                           ;initializer for _LUN
   293  007E18  86                 	db	low _ExternalFlash_MediaInitialize
   294  007E19  7E                 	db	high _ExternalFlash_MediaInitialize
   295  007E1A  0C                 	db	low _ExternalFlash_CapacityRead
   296  007E1B  7F                 	db	high _ExternalFlash_CapacityRead
   297  007E1C  B6                 	db	low _ExternalFlash_SectorSizeRead
   298  007E1D  7F                 	db	high _ExternalFlash_SectorSizeRead
   299  007E1E  4A                 	db	low _ExternalFlash_MediaDetect
   300  007E1F  80                 	db	high _ExternalFlash_MediaDetect
   301  007E20  36                 	db	low _ExternalFlash_SectorRead
   302  007E21  7A                 	db	high _ExternalFlash_SectorRead
   303  007E22  46                 	db	low _ExternalFlash_WriteProtectStateGet
   304  007E23  80                 	db	high _ExternalFlash_WriteProtectStateGet
   305  007E24  04                 	db	low _ExternalFlash_SectorWrite
   306  007E25  7A                 	db	high _ExternalFlash_SectorWrite
   307  007E26  00                 	db	0
   308  007E27  00                 	db	0
   309  007E28  00                 	db	0
   310  007E29  00                 	db	0
   311  007E2A  00                 	db	0
   312  007E2B  00                 	db	0
   313                           
   314                           ;initializer for _tx_buf
   315  007E2C  01                 	db	1
   316  007E2D  02                 	db	2
   317  007E2E  03                 	db	3
   318  007E2F  04                 	db	4
   319  007E30  05                 	db	5
   320  007E31  06                 	db	6
   321  007E32  07                 	db	7
   322  007E33  08                 	db	8
   323                           
   324                           	psect	idataBANK2
   325  008006                     __pidataBANK2:
   326                           	opt stack 0
   327                           
   328                           ;initializer for i2c_display_send_init_sequence@F6800
   329  008006  3A                 	db	58
   330  008007  1E                 	db	30
   331  008008  39                 	db	57
   332  008009  0C                 	db	12
   333  00800A  74                 	db	116
   334  00800B  5C                 	db	92
   335  00800C  6D                 	db	109
   336  00800D  0C                 	db	12
   337  00800E  01                 	db	1
   338                           
   339                           	psect	mediumconst
   340  008CA4                     __pmediumconst:
   341                           	opt stack 0
   342  008CA4  00                 	db	0
   343  008CA5                     _checked_line2:
   344                           	opt stack 0
   345  008CA5  46                 	db	70
   346  008CA6  69                 	db	105
   347  008CA7  6C                 	db	108
   348  008CA8  65                 	db	101
   349  008CA9  20                 	db	32
   350  008CAA  63                 	db	99
   351  008CAB  68                 	db	104
   352  008CAC  65                 	db	101
   353  008CAD  63                 	db	99
   354  008CAE  6B                 	db	107
   355  008CAF  20                 	db	32
   356  008CB0  63                 	db	99
   357  008CB1  6F                 	db	111
   358  008CB2  6D                 	db	109
   359  008CB3  70                 	db	112
   360  008CB4  6C                 	db	108
   361  008CB5  65                 	db	101
   362  008CB6  74                 	db	116
   363  008CB7  65                 	db	101
   364  008CB8  64                 	db	100
   365  008CB9  00                 	db	0
   366  008CBA                     __end_of_checked_line2:
   367                           	opt stack 0
   368  008CBA                     _failed_line3_addressRange:
   369                           	opt stack 0
   370  008CBA  41                 	db	65
   371  008CBB  64                 	db	100
   372  008CBC  64                 	db	100
   373  008CBD  72                 	db	114
   374  008CBE  2E                 	db	46
   375  008CBF  20                 	db	32
   376  008CC0  6F                 	db	111
   377  008CC1  75                 	db	117
   378  008CC2  74                 	db	116
   379  008CC3  73                 	db	115
   380  008CC4  69                 	db	105
   381  008CC5  64                 	db	100
   382  008CC6  65                 	db	101
   383  008CC7  20                 	db	32
   384  008CC8  72                 	db	114
   385  008CC9  61                 	db	97
   386  008CCA  6E                 	db	110
   387  008CCB  67                 	db	103
   388  008CCC  65                 	db	101
   389  008CCD  00                 	db	0
   390  008CCE                     __end_of_failed_line3_addressRange:
   391                           	opt stack 0
   392  008CCE                     _search_line3:
   393                           	opt stack 0
   394  008CCE  46                 	db	70
   395  008CCF  49                 	db	73
   396  008CD0  52                 	db	82
   397  008CD1  4D                 	db	77
   398  008CD2  57                 	db	87
   399  008CD3  41                 	db	65
   400  008CD4  52                 	db	82
   401  008CD5  45                 	db	69
   402  008CD6  2E                 	db	46
   403  008CD7  48                 	db	72
   404  008CD8  45                 	db	69
   405  008CD9  58                 	db	88
   406  008CDA  20                 	db	32
   407  008CDB  6F                 	db	111
   408  008CDC  6E                 	db	110
   409  008CDD  20                 	db	32
   410  008CDE  55                 	db	85
   411  008CDF  53                 	db	83
   412  008CE0  42                 	db	66
   413  008CE1  00                 	db	0
   414  008CE2                     __end_of_search_line3:
   415                           	opt stack 0
   416  008CE2                     _failed_line3_startCode:
   417                           	opt stack 0
   418  008CE2  4D                 	db	77
   419  008CE3  69                 	db	105
   420  008CE4  73                 	db	115
   421  008CE5  73                 	db	115
   422  008CE6  69                 	db	105
   423  008CE7  6E                 	db	110
   424  008CE8  67                 	db	103
   425  008CE9  20                 	db	32
   426  008CEA  73                 	db	115
   427  008CEB  74                 	db	116
   428  008CEC  61                 	db	97
   429  008CED  72                 	db	114
   430  008CEE  74                 	db	116
   431  008CEF  20                 	db	32
   432  008CF0  63                 	db	99
   433  008CF1  6F                 	db	111
   434  008CF2  64                 	db	100
   435  008CF3  65                 	db	101
   436  008CF4  00                 	db	0
   437  008CF5                     __end_of_failed_line3_startCode:
   438                           	opt stack 0
   439  008CF5                     _found_line2:
   440                           	opt stack 0
   441  008CF5  46                 	db	70
   442  008CF6  49                 	db	73
   443  008CF7  52                 	db	82
   444  008CF8  4D                 	db	77
   445  008CF9  57                 	db	87
   446  008CFA  41                 	db	65
   447  008CFB  52                 	db	82
   448  008CFC  45                 	db	69
   449  008CFD  2E                 	db	46
   450  008CFE  48                 	db	72
   451  008CFF  45                 	db	69
   452  008D00  58                 	db	88
   453  008D01  20                 	db	32
   454  008D02  66                 	db	102
   455  008D03  6F                 	db	111
   456  008D04  75                 	db	117
   457  008D05  6E                 	db	110
   458  008D06  64                 	db	100
   459  008D07  00                 	db	0
   460  008D08                     __end_of_found_line2:
   461                           	opt stack 0
   462  008D08                     _programming_line2:
   463                           	opt stack 0
   464  008D08  50                 	db	80
   465  008D09  72                 	db	114
   466  008D0A  6F                 	db	111
   467  008D0B  67                 	db	103
   468  008D0C  72                 	db	114
   469  008D0D  61                 	db	97
   470  008D0E  6D                 	db	109
   471  008D0F  6D                 	db	109
   472  008D10  69                 	db	105
   473  008D11  6E                 	db	110
   474  008D12  67                 	db	103
   475  008D13  20                 	db	32
   476  008D14  66                 	db	102
   477  008D15  6C                 	db	108
   478  008D16  61                 	db	97
   479  008D17  73                 	db	115
   480  008D18  68                 	db	104
   481  008D19  00                 	db	0
   482  008D1A                     __end_of_programming_line2:
   483                           	opt stack 0
   484  008D1A                     _failed_line2:
   485                           	opt stack 0
   486  008D1A  46                 	db	70
   487  008D1B  69                 	db	105
   488  008D1C  6C                 	db	108
   489  008D1D  65                 	db	101
   490  008D1E  20                 	db	32
   491  008D1F  63                 	db	99
   492  008D20  68                 	db	104
   493  008D21  65                 	db	101
   494  008D22  63                 	db	99
   495  008D23  6B                 	db	107
   496  008D24  20                 	db	32
   497  008D25  66                 	db	102
   498  008D26  61                 	db	97
   499  008D27  69                 	db	105
   500  008D28  6C                 	db	108
   501  008D29  65                 	db	101
   502  008D2A  64                 	db	100
   503  008D2B  00                 	db	0
   504  008D2C                     __end_of_failed_line2:
   505                           	opt stack 0
   506  008D2C                     _found_line4:
   507                           	opt stack 0
   508  008D2C  50                 	db	80
   509  008D2D  72                 	db	114
   510  008D2E  65                 	db	101
   511  008D2F  73                 	db	115
   512  008D30  73                 	db	115
   513  008D31  20                 	db	32
   514  008D32  74                 	db	116
   515  008D33  6F                 	db	111
   516  008D34  20                 	db	32
   517  008D35  75                 	db	117
   518  008D36  73                 	db	115
   519  008D37  65                 	db	101
   520  008D38  20                 	db	32
   521  008D39  66                 	db	102
   522  008D3A  69                 	db	105
   523  008D3B  6C                 	db	108
   524  008D3C  65                 	db	101
   525  008D3D  00                 	db	0
   526  008D3E                     __end_of_found_line4:
   527                           	opt stack 0
   528  008D3E                     _checked_line4:
   529                           	opt stack 0
   530  008D3E  50                 	db	80
   531  008D3F  72                 	db	114
   532  008D40  65                 	db	101
   533  008D41  73                 	db	115
   534  008D42  73                 	db	115
   535  008D43  20                 	db	32
   536  008D44  74                 	db	116
   537  008D45  6F                 	db	111
   538  008D46  20                 	db	32
   539  008D47  70                 	db	112
   540  008D48  72                 	db	114
   541  008D49  6F                 	db	111
   542  008D4A  67                 	db	103
   543  008D4B  72                 	db	114
   544  008D4C  61                 	db	97
   545  008D4D  6D                 	db	109
   546  008D4E  00                 	db	0
   547  008D4F                     __end_of_checked_line4:
   548                           	opt stack 0
   549  008D4F                     _search_line2:
   550                           	opt stack 0
   551  008D4F  4C                 	db	76
   552  008D50  6F                 	db	111
   553  008D51  6F                 	db	111
   554  008D52  6B                 	db	107
   555  008D53  69                 	db	105
   556  008D54  6E                 	db	110
   557  008D55  67                 	db	103
   558  008D56  20                 	db	32
   559  008D57  66                 	db	102
   560  008D58  6F                 	db	111
   561  008D59  72                 	db	114
   562  008D5A  20                 	db	32
   563  008D5B  66                 	db	102
   564  008D5C  69                 	db	105
   565  008D5D  6C                 	db	108
   566  008D5E  65                 	db	101
   567  008D5F  00                 	db	0
   568  008D60                     __end_of_search_line2:
   569                           	opt stack 0
   570  008D60                     _done_line4:
   571                           	opt stack 0
   572  008D60  50                 	db	80
   573  008D61  72                 	db	114
   574  008D62  65                 	db	101
   575  008D63  73                 	db	115
   576  008D64  73                 	db	115
   577  008D65  20                 	db	32
   578  008D66  74                 	db	116
   579  008D67  6F                 	db	111
   580  008D68  20                 	db	32
   581  008D69  72                 	db	114
   582  008D6A  65                 	db	101
   583  008D6B  62                 	db	98
   584  008D6C  6F                 	db	111
   585  008D6D  6F                 	db	111
   586  008D6E  74                 	db	116
   587  008D6F  00                 	db	0
   588  008D70                     __end_of_done_line4:
   589                           	opt stack 0
   590  008D70                     _done_line3:
   591                           	opt stack 0
   592  008D70  50                 	db	80
   593  008D71  61                 	db	97
   594  008D72  67                 	db	103
   595  008D73  65                 	db	101
   596  008D74  73                 	db	115
   597  008D75  20                 	db	32
   598  008D76  77                 	db	119
   599  008D77  72                 	db	114
   600  008D78  69                 	db	105
   601  008D79  74                 	db	116
   602  008D7A  74                 	db	116
   603  008D7B  65                 	db	101
   604  008D7C  6E                 	db	110
   605  008D7D  3A                 	db	58
   606  008D7E  20                 	db	32
   607  008D7F  00                 	db	0
   608  008D80                     __end_of_done_line3:
   609                           	opt stack 0
   610  008D80                     _done_line1:
   611                           	opt stack 0
   612  008D80  42                 	db	66
   613  008D81  6F                 	db	111
   614  008D82  6F                 	db	111
   615  008D83  74                 	db	116
   616  008D84  6C                 	db	108
   617  008D85  6F                 	db	111
   618  008D86  61                 	db	97
   619  008D87  64                 	db	100
   620  008D88  65                 	db	101
   621  008D89  72                 	db	114
   622  008D8A  20                 	db	32
   623  008D8B  4D                 	db	77
   624  008D8C  6F                 	db	111
   625  008D8D  64                 	db	100
   626  008D8E  65                 	db	101
   627  008D8F  00                 	db	0
   628  008D90                     __end_of_done_line1:
   629                           	opt stack 0
   630  008D90                     _programming_line4:
   631                           	opt stack 0
   632  008D90  50                 	db	80
   633  008D91  61                 	db	97
   634  008D92  67                 	db	103
   635  008D93  65                 	db	101
   636  008D94  73                 	db	115
   637  008D95  20                 	db	32
   638  008D96  77                 	db	119
   639  008D97  72                 	db	114
   640  008D98  69                 	db	105
   641  008D99  74                 	db	116
   642  008D9A  74                 	db	116
   643  008D9B  65                 	db	101
   644  008D9C  6E                 	db	110
   645  008D9D  3A                 	db	58
   646  008D9E  20                 	db	32
   647  008D9F  00                 	db	0
   648  008DA0                     __end_of_programming_line4:
   649                           	opt stack 0
   650  008DA0                     _programming_line1:
   651                           	opt stack 0
   652  008DA0  42                 	db	66
   653  008DA1  6F                 	db	111
   654  008DA2  6F                 	db	111
   655  008DA3  74                 	db	116
   656  008DA4  6C                 	db	108
   657  008DA5  6F                 	db	111
   658  008DA6  61                 	db	97
   659  008DA7  64                 	db	100
   660  008DA8  65                 	db	101
   661  008DA9  72                 	db	114
   662  008DAA  20                 	db	32
   663  008DAB  4D                 	db	77
   664  008DAC  6F                 	db	111
   665  008DAD  64                 	db	100
   666  008DAE  65                 	db	101
   667  008DAF  00                 	db	0
   668  008DB0                     __end_of_programming_line1:
   669                           	opt stack 0
   670  008DB0                     _failed_line1:
   671                           	opt stack 0
   672  008DB0  42                 	db	66
   673  008DB1  6F                 	db	111
   674  008DB2  6F                 	db	111
   675  008DB3  74                 	db	116
   676  008DB4  6C                 	db	108
   677  008DB5  6F                 	db	111
   678  008DB6  61                 	db	97
   679  008DB7  64                 	db	100
   680  008DB8  65                 	db	101
   681  008DB9  72                 	db	114
   682  008DBA  20                 	db	32
   683  008DBB  4D                 	db	77
   684  008DBC  6F                 	db	111
   685  008DBD  64                 	db	100
   686  008DBE  65                 	db	101
   687  008DBF  00                 	db	0
   688  008DC0                     __end_of_failed_line1:
   689                           	opt stack 0
   690  008DC0                     _checked_line1:
   691                           	opt stack 0
   692  008DC0  42                 	db	66
   693  008DC1  6F                 	db	111
   694  008DC2  6F                 	db	111
   695  008DC3  74                 	db	116
   696  008DC4  6C                 	db	108
   697  008DC5  6F                 	db	111
   698  008DC6  61                 	db	97
   699  008DC7  64                 	db	100
   700  008DC8  65                 	db	101
   701  008DC9  72                 	db	114
   702  008DCA  20                 	db	32
   703  008DCB  4D                 	db	77
   704  008DCC  6F                 	db	111
   705  008DCD  64                 	db	100
   706  008DCE  65                 	db	101
   707  008DCF  00                 	db	0
   708  008DD0                     __end_of_checked_line1:
   709                           	opt stack 0
   710  008DD0                     _verify_line1:
   711                           	opt stack 0
   712  008DD0  42                 	db	66
   713  008DD1  6F                 	db	111
   714  008DD2  6F                 	db	111
   715  008DD3  74                 	db	116
   716  008DD4  6C                 	db	108
   717  008DD5  6F                 	db	111
   718  008DD6  61                 	db	97
   719  008DD7  64                 	db	100
   720  008DD8  65                 	db	101
   721  008DD9  72                 	db	114
   722  008DDA  20                 	db	32
   723  008DDB  4D                 	db	77
   724  008DDC  6F                 	db	111
   725  008DDD  64                 	db	100
   726  008DDE  65                 	db	101
   727  008DDF  00                 	db	0
   728  008DE0                     __end_of_verify_line1:
   729                           	opt stack 0
   730  008DE0                     _found_line1:
   731                           	opt stack 0
   732  008DE0  42                 	db	66
   733  008DE1  6F                 	db	111
   734  008DE2  6F                 	db	111
   735  008DE3  74                 	db	116
   736  008DE4  6C                 	db	108
   737  008DE5  6F                 	db	111
   738  008DE6  61                 	db	97
   739  008DE7  64                 	db	100
   740  008DE8  65                 	db	101
   741  008DE9  72                 	db	114
   742  008DEA  20                 	db	32
   743  008DEB  4D                 	db	77
   744  008DEC  6F                 	db	111
   745  008DED  64                 	db	100
   746  008DEE  65                 	db	101
   747  008DEF  00                 	db	0
   748  008DF0                     __end_of_found_line1:
   749                           	opt stack 0
   750  008DF0                     _search_line1:
   751                           	opt stack 0
   752  008DF0  42                 	db	66
   753  008DF1  6F                 	db	111
   754  008DF2  6F                 	db	111
   755  008DF3  74                 	db	116
   756  008DF4  6C                 	db	108
   757  008DF5  6F                 	db	111
   758  008DF6  61                 	db	97
   759  008DF7  64                 	db	100
   760  008DF8  65                 	db	101
   761  008DF9  72                 	db	114
   762  008DFA  20                 	db	32
   763  008DFB  4D                 	db	77
   764  008DFC  6F                 	db	111
   765  008DFD  64                 	db	100
   766  008DFE  65                 	db	101
   767  008DFF  00                 	db	0
   768  008E00                     __end_of_search_line1:
   769                           	opt stack 0
   770  008E00                     _start_line1:
   771                           	opt stack 0
   772  008E00  42                 	db	66
   773  008E01  6F                 	db	111
   774  008E02  6F                 	db	111
   775  008E03  74                 	db	116
   776  008E04  6C                 	db	108
   777  008E05  6F                 	db	111
   778  008E06  61                 	db	97
   779  008E07  64                 	db	100
   780  008E08  65                 	db	101
   781  008E09  72                 	db	114
   782  008E0A  20                 	db	32
   783  008E0B  4D                 	db	77
   784  008E0C  6F                 	db	111
   785  008E0D  64                 	db	100
   786  008E0E  65                 	db	101
   787  008E0F  00                 	db	0
   788  008E10                     __end_of_start_line1:
   789                           	opt stack 0
   790  008E10                     _failed_line3_checksum:
   791                           	opt stack 0
   792  008E10  43                 	db	67
   793  008E11  68                 	db	104
   794  008E12  65                 	db	101
   795  008E13  63                 	db	99
   796  008E14  6B                 	db	107
   797  008E15  73                 	db	115
   798  008E16  75                 	db	117
   799  008E17  6D                 	db	109
   800  008E18  20                 	db	32
   801  008E19  65                 	db	101
   802  008E1A  72                 	db	114
   803  008E1B  72                 	db	114
   804  008E1C  6F                 	db	111
   805  008E1D  72                 	db	114
   806  008E1E  00                 	db	0
   807  008E1F                     __end_of_failed_line3_checksum:
   808                           	opt stack 0
   809  008E1F                     _failed_line3_noNextRecord:
   810                           	opt stack 0
   811  008E1F  4E                 	db	78
   812  008E20  6F                 	db	111
   813  008E21  20                 	db	32
   814  008E22  6E                 	db	110
   815  008E23  65                 	db	101
   816  008E24  78                 	db	120
   817  008E25  74                 	db	116
   818  008E26  20                 	db	32
   819  008E27  72                 	db	114
   820  008E28  65                 	db	101
   821  008E29  63                 	db	99
   822  008E2A  6F                 	db	111
   823  008E2B  72                 	db	114
   824  008E2C  64                 	db	100
   825  008E2D  00                 	db	0
   826  008E2E                     __end_of_failed_line3_noNextRecord:
   827                           	opt stack 0
   828  008E2E                     _start_line4:
   829                           	opt stack 0
   830  008E2E  73                 	db	115
   831  008E2F  6F                 	db	111
   832  008E30  6C                 	db	108
   833  008E31  64                 	db	100
   834  008E32  65                 	db	101
   835  008E33  72                 	db	114
   836  008E34  6E                 	db	110
   837  008E35  65                 	db	101
   838  008E36  72                 	db	114
   839  008E37  64                 	db	100
   840  008E38  2E                 	db	46
   841  008E39  63                 	db	99
   842  008E3A  6F                 	db	111
   843  008E3B  6D                 	db	109
   844  008E3C  00                 	db	0
   845  008E3D                     __end_of_start_line4:
   846                           	opt stack 0
   847  008E3D                     _failed_line3_dataTooLong:
   848                           	opt stack 0
   849  008E3D  44                 	db	68
   850  008E3E  61                 	db	97
   851  008E3F  74                 	db	116
   852  008E40  61                 	db	97
   853  008E41  20                 	db	32
   854  008E42  74                 	db	116
   855  008E43  6F                 	db	111
   856  008E44  6F                 	db	111
   857  008E45  20                 	db	32
   858  008E46  6C                 	db	108
   859  008E47  6F                 	db	111
   860  008E48  6E                 	db	110
   861  008E49  67                 	db	103
   862  008E4A  00                 	db	0
   863  008E4B                     __end_of_failed_line3_dataTooLong:
   864                           	opt stack 0
   865  008E4B                     _verify_line2:
   866                           	opt stack 0
   867  008E4B  56                 	db	86
   868  008E4C  65                 	db	101
   869  008E4D  72                 	db	114
   870  008E4E  69                 	db	105
   871  008E4F  66                 	db	102
   872  008E50  79                 	db	121
   873  008E51  69                 	db	105
   874  008E52  6E                 	db	110
   875  008E53  67                 	db	103
   876  008E54  2E                 	db	46
   877  008E55  2E                 	db	46
   878  008E56  2E                 	db	46
   879  008E57  00                 	db	0
   880  008E58                     __end_of_verify_line2:
   881                           	opt stack 0
   882  008E58                     _search_line4:
   883                           	opt stack 0
   884  008E58  64                 	db	100
   885  008E59  72                 	db	114
   886  008E5A  69                 	db	105
   887  008E5B  76                 	db	118
   888  008E5C  65                 	db	101
   889  008E5D  2E                 	db	46
   890  008E5E  2E                 	db	46
   891  008E5F  2E                 	db	46
   892  008E60  00                 	db	0
   893  008E61                     __end_of_search_line4:
   894                           	opt stack 0
   895  008E61                     _start_line2:
   896                           	opt stack 0
   897  008E61  56                 	db	86
   898  008E62  65                 	db	101
   899  008E63  72                 	db	114
   900  008E64  73                 	db	115
   901  008E65  69                 	db	105
   902  008E66  6F                 	db	111
   903  008E67  6E                 	db	110
   904  008E68  20                 	db	32
   905  008E69  00                 	db	0
   906  008E6A                     __end_of_start_line2:
   907                           	opt stack 0
   908  008E6A                     _failed_line4:
   909                           	opt stack 0
   910  008E6A  52                 	db	82
   911  008E6B  65                 	db	101
   912  008E6C  63                 	db	99
   913  008E6D  6F                 	db	111
   914  008E6E  72                 	db	114
   915  008E6F  64                 	db	100
   916  008E70  20                 	db	32
   917  008E71  00                 	db	0
   918  008E72                     __end_of_failed_line4:
   919                           	opt stack 0
   920  008E72                     _checked_line3:
   921                           	opt stack 0
   922  008E72  72                 	db	114
   923  008E73  65                 	db	101
   924  008E74  63                 	db	99
   925  008E75  6F                 	db	111
   926  008E76  72                 	db	114
   927  008E77  64                 	db	100
   928  008E78  73                 	db	115
   929  008E79  00                 	db	0
   930  008E7A                     __end_of_checked_line3:
   931                           	opt stack 0
   932  008E7A                     _USB_SD_Ptr:
   933                           	opt stack 0
   934  008E7A  CB                 	db	low _sd000
   935  008E7B  8F                 	db	high _sd000
   936  008E7C  E7                 	db	low _sd001
   937  008E7D  8E                 	db	high _sd001
   938  008E7E  1B                 	db	low _sd002
   939  008E7F  8F                 	db	high _sd002
   940  008E80  8A                 	db	low _sd003
   941  008E81  8F                 	db	high _sd003
   942  008E82                     __end_of_USB_SD_Ptr:
   943                           	opt stack 0
   944  008E82                     _programming_line3:
   945                           	opt stack 0
   946  008E82  45                 	db	69
   947  008E83  6E                 	db	110
   948  008E84  74                 	db	116
   949  008E85  72                 	db	114
   950  008E86  79                 	db	121
   951  008E87  20                 	db	32
   952  008E88  00                 	db	0
   953  008E89                     __end_of_programming_line3:
   954                           	opt stack 0
   955  008E89                     _verify_line3:
   956                           	opt stack 0
   957  008E89  52                 	db	82
   958  008E8A  65                 	db	101
   959  008E8B  63                 	db	99
   960  008E8C  6F                 	db	111
   961  008E8D  72                 	db	114
   962  008E8E  64                 	db	100
   963  008E8F  00                 	db	0
   964  008E90                     __end_of_verify_line3:
   965                           	opt stack 0
   966  008E90                     _found_line3b:
   967                           	opt stack 0
   968  008E90  20                 	db	32
   969  008E91  62                 	db	98
   970  008E92  79                 	db	121
   971  008E93  74                 	db	116
   972  008E94  65                 	db	101
   973  008E95  73                 	db	115
   974  008E96  00                 	db	0
   975  008E97                     __end_of_found_line3b:
   976                           	opt stack 0
   977  008E97                     _found_line3:
   978                           	opt stack 0
   979  008E97  53                 	db	83
   980  008E98  69                 	db	105
   981  008E99  7A                 	db	122
   982  008E9A  65                 	db	101
   983  008E9B  3A                 	db	58
   984  008E9C  20                 	db	32
   985  008E9D  00                 	db	0
   986  008E9E                     __end_of_found_line3:
   987                           	opt stack 0
   988  008E9E                     _done_line2:
   989                           	opt stack 0
   990  008E9E  44                 	db	68
   991  008E9F  6F                 	db	111
   992  008EA0  6E                 	db	110
   993  008EA1  65                 	db	101
   994  008EA2  21                 	db	33
   995  008EA3  00                 	db	0
   996  008EA4                     __end_of_done_line2:
   997                           	opt stack 0
   998  008EA4                     _USB_CD_Ptr:
   999                           	opt stack 0
  1000  008EA4  A7                 	db	low _configDescriptor1
  1001  008EA5  8E                 	db	high _configDescriptor1
  1002  008EA6                     __end_of_USB_CD_Ptr:
  1003                           	opt stack 0
  1004  008EA6                     _start_line3:
  1005                           	opt stack 0
  1006  008EA6  00                 	db	0
  1007  008EA7                     __end_of_start_line3:
  1008                           	opt stack 0
  1009  008EA7                     _configDescriptor1:
  1010                           	opt stack 0
  1011  008EA7  09                 	db	9
  1012  008EA8  02                 	db	2
  1013  008EA9  40                 	db	64
  1014  008EAA  00                 	db	0
  1015  008EAB  02                 	db	2
  1016  008EAC  01                 	db	1
  1017  008EAD  00                 	db	0
  1018  008EAE  C0                 	db	192
  1019  008EAF  32                 	db	50
  1020  008EB0  09                 	db	9
  1021  008EB1  04                 	db	4
  1022  008EB2  00                 	db	0
  1023  008EB3  00                 	db	0
  1024  008EB4  02                 	db	2
  1025  008EB5  03                 	db	3
  1026  008EB6  00                 	db	0
  1027  008EB7  00                 	db	0
  1028  008EB8  00                 	db	0
  1029  008EB9  09                 	db	9
  1030  008EBA  21                 	db	33
  1031  008EBB  11                 	db	17
  1032  008EBC  01                 	db	1
  1033  008EBD  00                 	db	0
  1034  008EBE  01                 	db	1
  1035  008EBF  22                 	db	34
  1036  008EC0  1D                 	db	29
  1037  008EC1  00                 	db	0
  1038  008EC2  07                 	db	7
  1039  008EC3  05                 	db	5
  1040  008EC4  81                 	db	129
  1041  008EC5  03                 	db	3
  1042  008EC6  40                 	db	64
  1043  008EC7  00                 	db	0
  1044  008EC8  01                 	db	1
  1045  008EC9  07                 	db	7
  1046  008ECA  05                 	db	5
  1047  008ECB  01                 	db	1
  1048  008ECC  03                 	db	3
  1049  008ECD  40                 	db	64
  1050  008ECE  00                 	db	0
  1051  008ECF  01                 	db	1
  1052  008ED0  09                 	db	9
  1053  008ED1  04                 	db	4
  1054  008ED2  01                 	db	1
  1055  008ED3  00                 	db	0
  1056  008ED4  02                 	db	2
  1057  008ED5  08                 	db	8
  1058  008ED6  06                 	db	6
  1059  008ED7  50                 	db	80
  1060  008ED8  00                 	db	0
  1061  008ED9  07                 	db	7
  1062  008EDA  05                 	db	5
  1063  008EDB  82                 	db	130
  1064  008EDC  02                 	db	2
  1065  008EDD  40                 	db	64
  1066  008EDE  00                 	db	0
  1067  008EDF  01                 	db	1
  1068  008EE0  07                 	db	7
  1069  008EE1  05                 	db	5
  1070  008EE2  02                 	db	2
  1071  008EE3  02                 	db	2
  1072  008EE4  40                 	db	64
  1073  008EE5  00                 	db	0
  1074  008EE6  01                 	db	1
  1075  008EE7                     __end_of_configDescriptor1:
  1076                           	opt stack 0
  1077  008EE7                     _sd001:
  1078                           	opt stack 0
  1079  008EE7  34                 	db	52
  1080  008EE8  03                 	db	3
  1081  008EE9  0053               	dw	83
  1082  008EEB  006F               	dw	111
  1083  008EED  006C               	dw	108
  1084  008EEF  0064               	dw	100
  1085  008EF1  0065               	dw	101
  1086  008EF3  0072               	dw	114
  1087  008EF5  006E               	dw	110
  1088  008EF7  0065               	dw	101
  1089  008EF9  0072               	dw	114
  1090  008EFB  0064               	dw	100
  1091  008EFD  002E               	dw	46
  1092  008EFF  0063               	dw	99
  1093  008F01  006F               	dw	111
  1094  008F03  006D               	dw	109
  1095  008F05  0020               	dw	32
  1096  008F07  0020               	dw	32
  1097  008F09  0020               	dw	32
  1098  008F0B  0020               	dw	32
  1099  008F0D  0020               	dw	32
  1100  008F0F  0020               	dw	32
  1101  008F11  0020               	dw	32
  1102  008F13  0020               	dw	32
  1103  008F15  0020               	dw	32
  1104  008F17  0020               	dw	32
  1105  008F19  0020               	dw	32
  1106  008F1B                     __end_of_sd001:
  1107                           	opt stack 0
  1108  008F1B                     _sd002:
  1109                           	opt stack 0
  1110  008F1B  2E                 	db	46
  1111  008F1C  03                 	db	3
  1112  008F1D  004D               	dw	77
  1113  008F1F  0050               	dw	80
  1114  008F21  0050               	dw	80
  1115  008F23  0054               	dw	84
  1116  008F25  0053               	dw	83
  1117  008F27  006F               	dw	111
  1118  008F29  006C               	dw	108
  1119  008F2B  0061               	dw	97
  1120  008F2D  0072               	dw	114
  1121  008F2F  0020               	dw	32
  1122  008F31  0043               	dw	67
  1123  008F33  0068               	dw	104
  1124  008F35  0061               	dw	97
  1125  008F37  0072               	dw	114
  1126  008F39  0067               	dw	103
  1127  008F3B  0065               	dw	101
  1128  008F3D  0072               	dw	114
  1129  008F3F  0020               	dw	32
  1130  008F41  0052               	dw	82
  1131  008F43  0065               	dw	101
  1132  008F45  0076               	dw	118
  1133  008F47  0043               	dw	67
  1134  008F49                     __end_of_sd002:
  1135                           	opt stack 0
  1136  008F49                     _inq_resp:
  1137                           	opt stack 0
  1138  008F49  00                 	db	0
  1139  008F4A  80                 	db	128
  1140  008F4B  04                 	db	4
  1141  008F4C  02                 	db	2
  1142  008F4D  20                 	db	32
  1143  008F4E  00                 	db	0
  1144  008F4F  00                 	db	0
  1145  008F50  00                 	db	0
  1146  008F51  4D                 	db	77
  1147  008F52  69                 	db	105
  1148  008F53  63                 	db	99
  1149  008F54  72                 	db	114
  1150  008F55  6F                 	db	111
  1151  008F56  63                 	db	99
  1152  008F57  68                 	db	104
  1153  008F58  70                 	db	112
  1154  008F59  4D                 	db	77
  1155  008F5A  61                 	db	97
  1156  008F5B  73                 	db	115
  1157  008F5C  73                 	db	115
  1158  008F5D  20                 	db	32
  1159  008F5E  53                 	db	83
  1160  008F5F  74                 	db	116
  1161  008F60  6F                 	db	111
  1162  008F61  72                 	db	114
  1163  008F62  61                 	db	97
  1164  008F63  67                 	db	103
  1165  008F64  65                 	db	101
  1166  008F65  20                 	db	32
  1167  008F66  20                 	db	32
  1168  008F67  20                 	db	32
  1169  008F68  20                 	db	32
  1170  008F69  30                 	db	48
  1171  008F6A  30                 	db	48
  1172  008F6B  30                 	db	48
  1173  008F6C  31                 	db	49
  1174  008F6D                     __end_of_inq_resp:
  1175                           	opt stack 0
  1176  008F6D                     _hid_rpt01:
  1177                           	opt stack 0
  1178  008F6D  06                 	db	6
  1179  008F6E  00                 	db	0
  1180  008F6F  FF                 	db	255
  1181  008F70  09                 	db	9
  1182  008F71  01                 	db	1
  1183  008F72  A1                 	db	161
  1184  008F73  01                 	db	1
  1185  008F74  19                 	db	25
  1186  008F75  01                 	db	1
  1187  008F76  29                 	db	41
  1188  008F77  40                 	db	64
  1189  008F78  15                 	db	21
  1190  008F79  00                 	db	0
  1191  008F7A  26                 	db	38
  1192  008F7B  FF                 	db	255
  1193  008F7C  00                 	db	0
  1194  008F7D  75                 	db	117
  1195  008F7E  08                 	db	8
  1196  008F7F  95                 	db	149
  1197  008F80  40                 	db	64
  1198  008F81  81                 	db	129
  1199  008F82  00                 	db	0
  1200  008F83  19                 	db	25
  1201  008F84  01                 	db	1
  1202  008F85  29                 	db	41
  1203  008F86  40                 	db	64
  1204  008F87  91                 	db	145
  1205  008F88  00                 	db	0
  1206  008F89  C0                 	db	192
  1207  008F8A                     __end_of_hid_rpt01:
  1208                           	opt stack 0
  1209  008F8A                     _sd003:
  1210                           	opt stack 0
  1211  008F8A  1A                 	db	26
  1212  008F8B  03                 	db	3
  1213  008F8C  0031               	dw	49
  1214  008F8E  0032               	dw	50
  1215  008F90  0033               	dw	51
  1216  008F92  0034               	dw	52
  1217  008F94  0035               	dw	53
  1218  008F96  0036               	dw	54
  1219  008F98  0037               	dw	55
  1220  008F9A  0038               	dw	56
  1221  008F9C  0039               	dw	57
  1222  008F9E  0030               	dw	48
  1223  008FA0  0039               	dw	57
  1224  008FA2  0039               	dw	57
  1225  008FA4                     __end_of_sd003:
  1226                           	opt stack 0
  1227  008FA4                     _device_dsc:
  1228                           	opt stack 0
  1229  008FA4  12                 	db	18
  1230  008FA5  01                 	db	1
  1231  008FA6  0200               	dw	512
  1232  008FA8  00                 	db	0
  1233  008FA9  00                 	db	0
  1234  008FAA  00                 	db	0
  1235  008FAB  08                 	db	8
  1236  008FAC  04D8               	dw	1240
  1237  008FAE  F08E               	dw	61582
  1238  008FB0  0100               	dw	256
  1239  008FB2  01                 	db	1
  1240  008FB3  02                 	db	2
  1241  008FB4  00                 	db	0
  1242  008FB5  01                 	db	1
  1243  008FB6                     __end_of_device_dsc:
  1244                           	opt stack 0
  1245  008FB6                     _bootloader_filename:
  1246                           	opt stack 0
  1247  008FB6  46                 	db	70
  1248  008FB7  49                 	db	73
  1249  008FB8  52                 	db	82
  1250  008FB9  4D                 	db	77
  1251  008FBA  57                 	db	87
  1252  008FBB  41                 	db	65
  1253  008FBC  52                 	db	82
  1254  008FBD  45                 	db	69
  1255  008FBE  00                 	db	0
  1256  008FBF                     __end_of_bootloader_filename:
  1257                           	opt stack 0
  1258  008FBF                     _flash_command_pagesize_528:
  1259                           	opt stack 0
  1260  008FBF  3D                 	db	61
  1261  008FC0  2A                 	db	42
  1262  008FC1  80                 	db	128
  1263  008FC2  A7                 	db	167
  1264  008FC3                     __end_of_flash_command_pagesize_528:
  1265                           	opt stack 0
  1266  008FC3                     _flash_command_pagesize_512:
  1267                           	opt stack 0
  1268  008FC3  3D                 	db	61
  1269  008FC4  2A                 	db	42
  1270  008FC5  80                 	db	128
  1271  008FC6  A6                 	db	166
  1272  008FC7                     __end_of_flash_command_pagesize_512:
  1273                           	opt stack 0
  1274  008FC7                     _bootloader_extension:
  1275                           	opt stack 0
  1276  008FC7  48                 	db	72
  1277  008FC8  45                 	db	69
  1278  008FC9  58                 	db	88
  1279  008FCA  00                 	db	0
  1280  008FCB                     __end_of_bootloader_extension:
  1281                           	opt stack 0
  1282  008FCB                     _sd000:
  1283                           	opt stack 0
  1284  008FCB  04                 	db	4
  1285  008FCC  03                 	db	3
  1286  008FCD  0409               	dw	1033
  1287  008FCF                     __end_of_sd000:
  1288                           	opt stack 0
  1289  0000                     _RPINR22	set	3837
  1290  0000                     _RPOR22	set	3798
  1291  0000                     _RPOR21	set	3797
  1292  0000                     _RPINR23	set	3838
  1293  0000                     _RPINR21	set	3836
  1294  0000                     _RPOR23	set	3799
  1295  0000                     _RPINR2	set	3810
  1296  0000                     _RPINR3	set	3811
  1297  0000                     _RPINR1	set	3809
  1298  0000                     _PPSCONbits	set	3775
  1299  0000                     _ODCON3bits	set	3904
  1300  0000                     _ANCON0bits	set	3912
  1301  0000                     _UEP0bits	set	3878
  1302  0000                     _UIEbits	set	3894
  1303  0000                     _UADDR	set	3896
  1304  0000                     _UIE	set	3894
  1305  0000                     _UEIE	set	3895
  1306  0000                     _UCFG	set	3897
  1307  0000                     _UEP1	set	3879
  1308  0000                     _UEP0	set	3878
  1309  0000                     _TBLPTR	set	4086
  1310  0000                     _DMACON2bits	set	3974
  1311  0000                     _SSP2STATbits	set	3955
  1312  0000                     _INTCON	set	4082
  1313  0000                     _EECON1	set	4006
  1314  0000                     _TABLAT	set	4085
  1315  0000                     _EECON1bits	set	4006
  1316  0000                     _SSP1BUF	set	4041
  1317  0000                     _SSP1CON2bits	set	4037
  1318  0000                     _SSP1CON1bits	set	4038
  1319  0000                     _SSP1ADD	set	4040
  1320  0000                     _SSP1STATbits	set	4039
  1321  0000                     _SSP2CON1bits	set	3954
  1322  0000                     _LATAbits	set	3977
  1323  0000                     _TRISAbits	set	3986
  1324  0000                     _LATEbits	set	3981
  1325  0000                     _TRISEbits	set	3990
  1326  0000                     _LATBbits	set	3978
  1327  0000                     _TRISBbits	set	3987
  1328  0000                     _LATDbits	set	3980
  1329  0000                     _TRISDbits	set	3989
  1330  0000                     _LATCbits	set	3979
  1331  0000                     _TRISCbits	set	3988
  1332  0000                     _T0CONbits	set	4053
  1333  0000                     _INTCON2bits	set	4081
  1334  0000                     _EECON2	set	4007
  1335  0000                     _PORTBbits	set	3969
  1336  0000                     _INTCON3bits	set	4080
  1337  0000                     _TMR0L	set	4054
  1338  0000                     _TMR0H	set	4055
  1339  0000                     _INTCONbits	set	4082
  1340  0000                     _OSCCON	set	4051
  1341  0000                     _OSCTUNEbits	set	3995
  1342  0000                     _PORTAbits	set	3968
  1343  0000                     _PIR3bits	set	4004
  1344  0000                     _DMABCL	set	3943
  1345  0000                     _DMABCH	set	3942
  1346  0000                     _RXADDRL	set	3945
  1347  0000                     _RXADDRH	set	3944
  1348  0000                     _DMACON1bits	set	3976
  1349  0000                     _TXADDRL	set	3947
  1350  0000                     _TXADDRH	set	3946
  1351  0000                     _PORTDbits	set	3971
  1352  0000                     _USTAT	set	3940
  1353  0000                     _PIR2bits	set	4001
  1354  0000                     _UCON	set	3941
  1355  0000                     _UIRbits	set	3938
  1356  0000                     _UCONbits	set	3941
  1357  0000                     _UIR	set	3938
  1358  0000                     _UEIR	set	3939
  1359  0000                     _PIE2bits	set	4000
  1360  008FCF                     STR_12:
  1361  008FCF  68                 	db	104	;'h'
  1362  008FD0  65                 	db	101	;'e'
  1363  008FD1  6C                 	db	108	;'l'
  1364  008FD2  6C                 	db	108	;'l'
  1365  008FD3  6F                 	db	111	;'o'
  1366  008FD4  20                 	db	32
  1367  008FD5  77                 	db	119	;'w'
  1368  008FD6  6F                 	db	111	;'o'
  1369  008FD7  72                 	db	114	;'r'
  1370  008FD8  6C                 	db	108	;'l'
  1371  008FD9  64                 	db	100	;'d'
  1372  008FDA  21                 	db	33
  1373  008FDB  00                 	db	0
  1374  008FDC                     STR_9:
  1375  008FDC  53                 	db	83	;'S'
  1376  008FDD  6F                 	db	111	;'o'
  1377  008FDE  6C                 	db	108	;'l'
  1378  008FDF  61                 	db	97	;'a'
  1379  008FE0  72                 	db	114	;'r'
  1380  008FE1  43                 	db	67	;'C'
  1381  008FE2  68                 	db	104	;'h'
  1382  008FE3  61                 	db	97	;'a'
  1383  008FE4  72                 	db	114	;'r'
  1384  008FE5  67                 	db	103	;'g'
  1385  008FE6  72                 	db	114	;'r'
  1386  008FE7  00                 	db	0
  1387  008FE8                     STR_10:
  1388  008FE8  46                 	db	70	;'F'
  1389  008FE9  49                 	db	73	;'I'
  1390  008FEA  4C                 	db	76	;'L'
  1391  008FEB  45                 	db	69	;'E'
  1392  008FEC  20                 	db	32
  1393  008FED  20                 	db	32
  1394  008FEE  20                 	db	32
  1395  008FEF  20                 	db	32
  1396  008FF0  00                 	db	0
  1397  008FF1                     STR_1:
  1398  008FF1  4D                 	db	77	;'M'
  1399  008FF2  53                 	db	83	;'S'
  1400  008FF3  44                 	db	68	;'D'
  1401  008FF4  4F                 	db	79	;'O'
  1402  008FF5  53                 	db	83	;'S'
  1403  008FF6  35                 	db	53	;'5'
  1404  008FF7  2E                 	db	46
  1405  008FF8  30                 	db	48	;'0'
  1406  008FF9  00                 	db	0
  1407  008FFA                     STR_11:
  1408  008FFA  54                 	db	84	;'T'
  1409  008FFB  58                 	db	88	;'X'
  1410  008FFC  54                 	db	84	;'T'
  1411  008FFD  00                 	db	0
  1412  0000                     
  1413                           ; #config settings
  1414  008FFE  00                 	db	0	; dummy byte at the end
  1415  0000                     
  1416                           	psect	cinit
  1417  0057CA                     __pcinit:
  1418                           	opt stack 0
  1419  0057CA                     start_initialization:
  1420                           	opt stack 0
  1421  0057CA                     __initialization:
  1422                           	opt stack 0
  1423                           
  1424                           ; Initialize objects allocated to BANK2 (9 bytes)
  1425                           ; load TBLPTR registers with __pidataBANK2
  1426  0057CA  0E06               	movlw	low __pidataBANK2
  1427  0057CC  6EF6               	movwf	tblptrl,c
  1428  0057CE  0E80               	movlw	high __pidataBANK2
  1429  0057D0  6EF7               	movwf	tblptrh,c
  1430  0057D2  0E00               	movlw	low (__pidataBANK2 shr (0+16))
  1431  0057D4  6EF8               	movwf	tblptru,c
  1432  0057D6  EE02  F0F2         	lfsr	0,__pdataBANK2
  1433  0057DA  EE10 F009          	lfsr	1,9
  1434  0057DE                     copy_data0:
  1435  0057DE  0009               	tblrd		*+
  1436  0057E0  CFF5 FFEE          	movff	tablat,postinc0
  1437  0057E4  50E5               	movf	postdec1,w,c
  1438  0057E6  50E1               	movf	fsr1l,w,c
  1439  0057E8  E1FA               	bnz	copy_data0
  1440                           
  1441                           ; Initialize objects allocated to BANK1 (28 bytes)
  1442                           ; load TBLPTR registers with __pidataBANK1
  1443  0057EA  0E18               	movlw	low __pidataBANK1
  1444  0057EC  6EF6               	movwf	tblptrl,c
  1445  0057EE  0E7E               	movlw	high __pidataBANK1
  1446  0057F0  6EF7               	movwf	tblptrh,c
  1447  0057F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
  1448  0057F4  6EF8               	movwf	tblptru,c
  1449  0057F6  EE01  F0E4         	lfsr	0,__pdataBANK1
  1450  0057FA  EE10 F01C          	lfsr	1,28
  1451  0057FE                     copy_data1:
  1452  0057FE  0009               	tblrd		*+
  1453  005800  CFF5 FFEE          	movff	tablat,postinc0
  1454  005804  50E5               	movf	postdec1,w,c
  1455  005806  50E1               	movf	fsr1l,w,c
  1456  005808  E1FA               	bnz	copy_data1
  1457                           
  1458                           ; Initialize objects allocated to BANK0 (1 bytes)
  1459                           ; load TBLPTR registers with __pidataBANK0
  1460  00580A  0E58               	movlw	low __pidataBANK0
  1461  00580C  6EF6               	movwf	tblptrl,c
  1462  00580E  0E80               	movlw	high __pidataBANK0
  1463  005810  6EF7               	movwf	tblptrh,c
  1464  005812  0E00               	movlw	low (__pidataBANK0 shr (0+16))
  1465  005814  6EF8               	movwf	tblptru,c
  1466  005816  0009               	tblrd		*+	;fetch initializer
  1467  005818  CFF5 F0FE          	movff	tablat,__pdataBANK0
  1468                           
  1469                           ; Clear objects allocated to BIGRAMll (512 bytes)
  1470  00581C  EE03  F040         	lfsr	0,__pbssBIGRAMll
  1471  005820  EE12 F000          	lfsr	1,512
  1472  005824                     clear_0:
  1473  005824  6AEE               	clrf	postinc0,c
  1474  005826  50E5               	movf	postdec1,w,c
  1475  005828  50E1               	movf	fsr1l,w,c
  1476  00582A  E1FC               	bnz	clear_0
  1477  00582C  50E2               	movf	fsr1h,w,c
  1478  00582E  E1FA               	bnz	clear_0
  1479                           
  1480                           ; Clear objects allocated to BIGRAMlh (1024 bytes)
  1481  005830  EE08  F000         	lfsr	0,__pbssBIGRAMlh
  1482  005834  EE14 F000          	lfsr	1,1024
  1483  005838                     clear_1:
  1484  005838  6AEE               	clrf	postinc0,c
  1485  00583A  50E5               	movf	postdec1,w,c
  1486  00583C  50E1               	movf	fsr1l,w,c
  1487  00583E  E1FC               	bnz	clear_1
  1488  005840  50E2               	movf	fsr1h,w,c
  1489  005842  E1FA               	bnz	clear_1
  1490                           
  1491                           ; Clear objects allocated to BANK3 (64 bytes)
  1492  005844  EE03  F000         	lfsr	0,__pbssBANK3
  1493  005848  0E40               	movlw	64
  1494  00584A                     clear_2:
  1495  00584A  6AEE               	clrf	postinc0,c
  1496  00584C  06E8               	decf	wreg,f,c
  1497  00584E  E1FD               	bnz	clear_2
  1498                           
  1499                           ; Clear objects allocated to BANK2 (242 bytes)
  1500  005850  EE02  F000         	lfsr	0,__pbssBANK2
  1501  005854  0EF2               	movlw	242
  1502  005856                     clear_3:
  1503  005856  6AEE               	clrf	postinc0,c
  1504  005858  06E8               	decf	wreg,f,c
  1505  00585A  E1FD               	bnz	clear_3
  1506                           
  1507                           ; Clear objects allocated to BANK1 (228 bytes)
  1508  00585C  EE01  F000         	lfsr	0,__pbssBANK1
  1509  005860  0EE4               	movlw	228
  1510  005862                     clear_4:
  1511  005862  6AEE               	clrf	postinc0,c
  1512  005864  06E8               	decf	wreg,f,c
  1513  005866  E1FD               	bnz	clear_4
  1514                           
  1515                           ; Clear objects allocated to BANK0 (85 bytes)
  1516  005868  EE00  F060         	lfsr	0,__pbssBANK0
  1517  00586C  0E55               	movlw	85
  1518  00586E                     clear_5:
  1519  00586E  6AEE               	clrf	postinc0,c
  1520  005870  06E8               	decf	wreg,f,c
  1521  005872  E1FD               	bnz	clear_5
  1522  005874                     end_of_initialization:
  1523                           	opt stack 0
  1524  005874                     __end_of__initialization:
  1525                           	opt stack 0
  1526  005874  0100               	movlb	0
  1527  005876  EF3E  F01C         	goto	_main	;jump to C main() function
  1528                           tblptru	equ	0xFF8
  1529                           tblptrh	equ	0xFF7
  1530                           tblptrl	equ	0xFF6
  1531                           tablat	equ	0xFF5
  1532                           postinc0	equ	0xFEE
  1533                           wreg	equ	0xFE8
  1534                           postdec1	equ	0xFE5
  1535                           fsr1h	equ	0xFE2
  1536                           fsr1l	equ	0xFE1
  1537                           
  1538                           	psect	bssBANK0
  1539  000060                     __pbssBANK0:
  1540                           	opt stack 0
  1541  000060                     _os:
  1542                           	opt stack 0
  1543  000060                     	ds	6
  1544  000066                     _inPipes:
  1545                           	opt stack 0
  1546  000066                     	ds	6
  1547  00006C                     _pBDTEntryIn:
  1548                           	opt stack 0
  1549  00006C                     	ds	6
  1550  000072                     _pBDTEntryOut:
  1551                           	opt stack 0
  1552  000072                     	ds	6
  1553  000078                     _hex_file_size:
  1554                           	opt stack 0
  1555  000078                     	ds	4
  1556  00007C                     _hex_file_offset:
  1557                           	opt stack 0
  1558  00007C                     	ds	4
  1559  000080                     _LBA:
  1560                           	opt stack 0
  1561  000080                     	ds	4
  1562  000084                     _USBOutHandle:
  1563                           	opt stack 0
  1564  000084                     	ds	2
  1565  000086                     _TransferLength:
  1566                           	opt stack 0
  1567  000086                     	ds	2
  1568  000088                     _USBMSDInHandle:
  1569                           	opt stack 0
  1570  000088                     	ds	2
  1571  00008A                     _USBMSDOutHandle:
  1572                           	opt stack 0
  1573  00008A                     	ds	2
  1574  00008C                     _ptrNextData:
  1575                           	opt stack 0
  1576  00008C                     	ds	2
  1577  00008E                     _pDst:
  1578                           	opt stack 0
  1579  00008E                     	ds	2
  1580  000090                     _pBDTEntryEP0OutNext:
  1581                           	opt stack 0
  1582  000090                     	ds	2
  1583  000092                     _pBDTEntryEP0OutCurrent:
  1584                           	opt stack 0
  1585  000092                     	ds	2
  1586  000094                     _active_configuration:
  1587                           	opt stack 0
  1588  000094                     	ds	1
  1589  000095                     _start_from_byte_next:
  1590                           	opt stack 0
  1591  000095                     	ds	1
  1592  000096                     _last_error:
  1593                           	opt stack 0
  1594  000096                     	ds	1
  1595  000097                     _power_state:
  1596                           	opt stack 0
  1597  000097                     	ds	1
  1598  000098                     _userInterfaceStatus:
  1599                           	opt stack 0
  1600  000098                     	ds	1
  1601  000099                     _i2c_frequency:
  1602                           	opt stack 0
  1603  000099                     	ds	1
  1604  00009A                     _MSDCBWValid:
  1605                           	opt stack 0
  1606  00009A                     	ds	1
  1607  00009B                     _MSDHostNoData:
  1608                           	opt stack 0
  1609  00009B                     	ds	1
  1610  00009C                     _SoftDetach:
  1611                           	opt stack 0
  1612  00009C                     	ds	1
  1613  00009D                     _gblCBWLength:
  1614                           	opt stack 0
  1615  00009D                     	ds	1
  1616  00009E                     _MSDRetryAttempt:
  1617                           	opt stack 0
  1618  00009E                     	ds	1
  1619  00009F                     _MSDWriteState:
  1620                           	opt stack 0
  1621  00009F                     	ds	1
  1622  0000A0                     _MSDReadState:
  1623                           	opt stack 0
  1624  0000A0                     	ds	1
  1625  0000A1                     _MSDCommandState:
  1626                           	opt stack 0
  1627  0000A1                     	ds	1
  1628  0000A2                     _MSD_State:
  1629                           	opt stack 0
  1630  0000A2                     	ds	1
  1631  0000A3                     _USBTicksSinceSuspendEnd:
  1632                           	opt stack 0
  1633  0000A3                     	ds	1
  1634  0000A4                     _USBDeferOUTDataStagePackets:
  1635                           	opt stack 0
  1636  0000A4                     	ds	1
  1637  0000A5                     _USBDeferINDataStagePackets:
  1638                           	opt stack 0
  1639  0000A5                     	ds	1
  1640  0000A6                     _USBStatusStageEnabledFlag2:
  1641                           	opt stack 0
  1642  0000A6                     	ds	1
  1643  0000A7                     _USBStatusStageEnabledFlag1:
  1644                           	opt stack 0
  1645  0000A7                     	ds	1
  1646  0000A8                     _USBDeferStatusStagePacket:
  1647                           	opt stack 0
  1648  0000A8                     	ds	1
  1649  0000A9                     _USBStatusStageTimeoutCounter:
  1650                           	opt stack 0
  1651  0000A9                     	ds	1
  1652  0000AA                     _BothEP0OutUOWNsSet:
  1653                           	opt stack 0
  1654  0000AA                     	ds	1
  1655  0000AB                     _endpoint_number:
  1656                           	opt stack 0
  1657  0000AB                     	ds	1
  1658  0000AC                     _USBBusIsSuspended:
  1659                           	opt stack 0
  1660  0000AC                     	ds	1
  1661  0000AD                     _RemoteWakeup:
  1662                           	opt stack 0
  1663  0000AD                     	ds	1
  1664  0000AE                     _controlTransferState:
  1665                           	opt stack 0
  1666  0000AE                     	ds	1
  1667  0000AF                     _shortPacketStatus:
  1668                           	opt stack 0
  1669  0000AF                     	ds	1
  1670  0000B0                     _USBDeviceState:
  1671                           	opt stack 0
  1672  0000B0                     	ds	1
  1673  0000B1                     _active_protocol:
  1674                           	opt stack 0
  1675  0000B1                     	ds	1
  1676  0000B2                     _idle_rate:
  1677                           	opt stack 0
  1678  0000B2                     	ds	1
  1679  0000B3                     _USTATcopy:
  1680                           	opt stack 0
  1681  0000B3                     	ds	1
  1682  0000B4                     _USBActiveConfiguration:
  1683                           	opt stack 0
  1684  0000B4                     	ds	1
  1685                           tblptru	equ	0xFF8
  1686                           tblptrh	equ	0xFF7
  1687                           tblptrl	equ	0xFF6
  1688                           tablat	equ	0xFF5
  1689                           postinc0	equ	0xFEE
  1690                           wreg	equ	0xFE8
  1691                           postdec1	equ	0xFE5
  1692                           fsr1h	equ	0xFE2
  1693                           fsr1l	equ	0xFE1
  1694                           
  1695                           	psect	dataBANK0
  1696  0000FE                     __pdataBANK0:
  1697                           	opt stack 0
  1698  0000FE                     _file_number:
  1699                           	opt stack 0
  1700  0000FE                     	ds	1
  1701                           tblptru	equ	0xFF8
  1702                           tblptrh	equ	0xFF7
  1703                           tblptrl	equ	0xFF6
  1704                           tablat	equ	0xFF5
  1705                           postinc0	equ	0xFEE
  1706                           wreg	equ	0xFE8
  1707                           postdec1	equ	0xFE5
  1708                           fsr1h	equ	0xFE2
  1709                           fsr1l	equ	0xFE1
  1710                           
  1711                           	psect	bssBANK1
  1712  000100                     __pbssBANK1:
  1713                           	opt stack 0
  1714  000100                     _gblCBW:
  1715                           	opt stack 0
  1716  000100                     	ds	31
  1717  00011F                     _gblSenseData:
  1718                           	opt stack 0
  1719  00011F                     	ds	18
  1720  000131                     _outPipes:
  1721                           	opt stack 0
  1722  000131                     	ds	8
  1723  000139                     _communicationSettings:
  1724                           	opt stack 0
  1725  000139                     	ds	7
  1726  000140                     _extended_linear_address:
  1727                           	opt stack 0
  1728  000140                     	ds	4
  1729  000144                     _file_maximum_address:
  1730                           	opt stack 0
  1731  000144                     	ds	4
  1732  000148                     _file_minimum_address:
  1733                           	opt stack 0
  1734  000148                     	ds	4
  1735  00014C                     _gblBLKLen:
  1736                           	opt stack 0
  1737  00014C                     	ds	4
  1738  000150                     _gblNumBLKS:
  1739                           	opt stack 0
  1740  000150                     	ds	4
  1741  000154                     _USB1msTickCount:
  1742                           	opt stack 0
  1743  000154                     	ds	4
  1744  000158                     _config_external:
  1745                           	opt stack 0
  1746  000158                     	ds	3
  1747  00015B                     _config_internal:
  1748                           	opt stack 0
  1749  00015B                     	ds	3
  1750  00015E                     _ep_data_out:
  1751                           	opt stack 0
  1752  00015E                     	ds	3
  1753  000161                     _ep_data_in:
  1754                           	opt stack 0
  1755  000161                     	ds	3
  1756  000164                     _FileAddress:
  1757                           	opt stack 0
  1758  000164                     	ds	2
  1759  000166                     _flash_pages_written:
  1760                           	opt stack 0
  1761  000166                     	ds	2
  1762  000168                     _total_hex_file_entries:
  1763                           	opt stack 0
  1764  000168                     	ds	2
  1765  00016A                     _hex_file_entries:
  1766                           	opt stack 0
  1767  00016A                     	ds	2
  1768  00016C                     _startup_timer:
  1769                           	opt stack 0
  1770  00016C                     	ds	2
  1771  00016E                     _system_ui_inactive_count:
  1772                           	opt stack 0
  1773  00016E                     	ds	2
  1774  000170                     _USBInHandle:
  1775                           	opt stack 0
  1776  000170                     	ds	2
  1777  000172                     _gblMediaPresent:
  1778                           	opt stack 0
  1779  000172                     	ds	2
  1780  000174                     _MSBBufferIndex:
  1781                           	opt stack 0
  1782  000174                     	ds	2
  1783  000176                     _display_content:
  1784                           	opt stack 0
  1785  000176                     	ds	80
  1786  0001C6                     _hex_file_entry:
  1787                           	opt stack 0
  1788  0001C6                     	ds	23
  1789  0001DD                     _mediaInformation:
  1790                           	opt stack 0
  1791  0001DD                     	ds	5
  1792  0001E2                     _USBAlternateInterface:
  1793                           	opt stack 0
  1794  0001E2                     	ds	2
  1795                           tblptru	equ	0xFF8
  1796                           tblptrh	equ	0xFF7
  1797                           tblptrl	equ	0xFF6
  1798                           tablat	equ	0xFF5
  1799                           postinc0	equ	0xFEE
  1800                           wreg	equ	0xFE8
  1801                           postdec1	equ	0xFE5
  1802                           fsr1h	equ	0xFE2
  1803                           fsr1l	equ	0xFE1
  1804                           
  1805                           	psect	dataBANK1
  1806  0001E4                     __pdataBANK1:
  1807                           	opt stack 0
  1808  0001E4                     _LUN:
  1809                           	opt stack 0
  1810  0001E4                     	ds	20
  1811  0001F8                     	ds	8
  1812                           tblptru	equ	0xFF8
  1813                           tblptrh	equ	0xFF7
  1814                           tblptrl	equ	0xFF6
  1815                           tablat	equ	0xFF5
  1816                           postinc0	equ	0xFEE
  1817                           wreg	equ	0xFE8
  1818                           postdec1	equ	0xFE5
  1819                           fsr1h	equ	0xFE2
  1820                           fsr1l	equ	0xFE1
  1821                           
  1822                           	psect	bssBANK2
  1823  000200                     __pbssBANK2:
  1824                           	opt stack 0
  1825  000200                     __spi_external_rx_buffer:
  1826                           	opt stack 0
  1827  000200                     	ds	64
  1828  000240                     __spi_external_tx_buffer:
  1829                           	opt stack 0
  1830  000240                     	ds	64
  1831  000280                     _ReceivedDataBuffer:
  1832                           	opt stack 0
  1833  000280                     	ds	64
  1834  0002C0                     _file_buffer:
  1835                           	opt stack 0
  1836  0002C0                     	ds	50
  1837                           tblptru	equ	0xFF8
  1838                           tblptrh	equ	0xFF7
  1839                           tblptrl	equ	0xFF6
  1840                           tablat	equ	0xFF5
  1841                           postinc0	equ	0xFEE
  1842                           wreg	equ	0xFE8
  1843                           postdec1	equ	0xFE5
  1844                           fsr1h	equ	0xFE2
  1845                           fsr1l	equ	0xFE1
  1846                           
  1847                           	psect	dataBANK2
  1848  0002F2                     __pdataBANK2:
  1849                           	opt stack 0
  1850  0002F2                     i2c_display_send_init_sequence@F6800:
  1851                           	opt stack 0
  1852  0002F2                     	ds	9
  1853                           tblptru	equ	0xFF8
  1854                           tblptrh	equ	0xFF7
  1855                           tblptrl	equ	0xFF6
  1856                           tablat	equ	0xFF5
  1857                           postinc0	equ	0xFEE
  1858                           wreg	equ	0xFE8
  1859                           postdec1	equ	0xFE5
  1860                           fsr1h	equ	0xFE2
  1861                           fsr1l	equ	0xFE1
  1862                           
  1863                           	psect	bssBANK3
  1864  000300                     __pbssBANK3:
  1865                           	opt stack 0
  1866  000300                     _ToSendDataBuffer:
  1867                           	opt stack 0
  1868  000300                     	ds	64
  1869                           tblptru	equ	0xFF8
  1870                           tblptrh	equ	0xFF7
  1871                           tblptrl	equ	0xFF6
  1872                           tablat	equ	0xFF5
  1873                           postinc0	equ	0xFEE
  1874                           wreg	equ	0xFE8
  1875                           postdec1	equ	0xFE5
  1876                           fsr1h	equ	0xFE2
  1877                           fsr1l	equ	0xFE1
  1878                           
  1879                           	psect	bssBIGRAMlh
  1880  000800                     __pbssBIGRAMlh:
  1881                           	opt stack 0
  1882  000800                     _pageBuffer:
  1883                           	opt stack 0
  1884  000800                     	ds	1024
  1885                           tblptru	equ	0xFF8
  1886                           tblptrh	equ	0xFF7
  1887                           tblptrl	equ	0xFF6
  1888                           tablat	equ	0xFF5
  1889                           postinc0	equ	0xFEE
  1890                           wreg	equ	0xFE8
  1891                           postdec1	equ	0xFE5
  1892                           fsr1h	equ	0xFE2
  1893                           fsr1l	equ	0xFE1
  1894                           
  1895                           	psect	bssBIGRAMll
  1896  000340                     __pbssBIGRAMll:
  1897                           	opt stack 0
  1898  000340                     _buffer:
  1899                           	opt stack 0
  1900  000340                     	ds	512
  1901                           tblptru	equ	0xFF8
  1902                           tblptrh	equ	0xFF7
  1903                           tblptrl	equ	0xFF6
  1904                           tablat	equ	0xFF5
  1905                           postinc0	equ	0xFEE
  1906                           wreg	equ	0xFE8
  1907                           postdec1	equ	0xFE5
  1908                           fsr1h	equ	0xFE2
  1909                           fsr1l	equ	0xFE1
  1910                           
  1911                           	psect	cstackBANK0
  1912  0000B5                     __pcstackBANK0:
  1913                           	opt stack 0
  1914  0000B5                     fat_rename_file@file_number:
  1915                           	opt stack 0
  1916  0000B5                     fat_create_file@next_cluster:
  1917                           	opt stack 0
  1918  0000B5                     fat_append_to_file@sector:
  1919                           	opt stack 0
  1920  0000B5                     fat_read_from_file@sector:
  1921                           	opt stack 0
  1922                           
  1923                           ; 2 bytes @ 0x0
  1924  0000B5                     	ds	1
  1925  0000B6                     fat_rename_file@root:
  1926                           	opt stack 0
  1927                           
  1928                           ; 32 bytes @ 0x1
  1929  0000B6                     	ds	1
  1930  0000B7                     fat_read_from_file@file_number:
  1931                           	opt stack 0
  1932  0000B7                     fat_create_file@cluster_count:
  1933                           	opt stack 0
  1934  0000B7                     fat_append_to_file@file_size:
  1935                           	opt stack 0
  1936                           
  1937                           ; 4 bytes @ 0x2
  1938  0000B7                     	ds	1
  1939  0000B8                     fat_read_from_file@root:
  1940                           	opt stack 0
  1941                           
  1942                           ; 32 bytes @ 0x3
  1943  0000B8                     	ds	1
  1944  0000B9                     fat_create_file@root_slot:
  1945                           	opt stack 0
  1946                           
  1947                           ; 1 bytes @ 0x4
  1948  0000B9                     	ds	1
  1949  0000BA                     fat_create_file@number_of_clusters:
  1950                           	opt stack 0
  1951                           
  1952                           ; 2 bytes @ 0x5
  1953  0000BA                     	ds	1
  1954  0000BB                     fat_append_to_file@new_cluster:
  1955                           	opt stack 0
  1956                           
  1957                           ; 2 bytes @ 0x6
  1958  0000BB                     	ds	1
  1959  0000BC                     fat_create_file@cluster:
  1960                           	opt stack 0
  1961                           
  1962                           ; 2 bytes @ 0x7
  1963  0000BC                     	ds	1
  1964  0000BD                     fat_append_to_file@fat_cluster:
  1965                           	opt stack 0
  1966                           
  1967                           ; 2 bytes @ 0x8
  1968  0000BD                     	ds	1
  1969  0000BE                     fat_create_file@root_entry:
  1970                           	opt stack 0
  1971                           
  1972                           ; 32 bytes @ 0x9
  1973  0000BE                     	ds	1
  1974  0000BF                     fat_append_to_file@offset:
  1975                           	opt stack 0
  1976                           
  1977                           ; 2 bytes @ 0xA
  1978  0000BF                     	ds	2
  1979  0000C1                     fat_append_to_file@file_number:
  1980                           	opt stack 0
  1981                           
  1982                           ; 1 bytes @ 0xC
  1983  0000C1                     	ds	1
  1984  0000C2                     fat_append_to_file@length:
  1985                           	opt stack 0
  1986                           
  1987                           ; 2 bytes @ 0xD
  1988  0000C2                     	ds	2
  1989  0000C4                     fat_append_to_file@position:
  1990                           	opt stack 0
  1991                           
  1992                           ; 4 bytes @ 0xF
  1993  0000C4                     	ds	4
  1994  0000C8                     fat_append_to_file@root:
  1995                           	opt stack 0
  1996                           
  1997                           ; 32 bytes @ 0x13
  1998  0000C8                     	ds	14
  1999  0000D6                     fat_rename_file@cntr:
  2000                           	opt stack 0
  2001                           
  2002                           ; 1 bytes @ 0x21
  2003  0000D6                     	ds	2
  2004  0000D8                     fat_read_from_file@cluster:
  2005                           	opt stack 0
  2006                           
  2007                           ; 2 bytes @ 0x23
  2008  0000D8                     	ds	2
  2009  0000DA                     fat_read_from_file@offset:
  2010                           	opt stack 0
  2011                           
  2012                           ; 2 bytes @ 0x25
  2013  0000DA                     	ds	2
  2014  0000DC                     fat_read_from_file@read_length:
  2015                           	opt stack 0
  2016                           
  2017                           ; 2 bytes @ 0x27
  2018  0000DC                     	ds	2
  2019  0000DE                     fat_read_from_file@position:
  2020                           	opt stack 0
  2021                           
  2022                           ; 4 bytes @ 0x29
  2023  0000DE                     	ds	4
  2024  0000E2                     __bootloader_verify_file@rec_counter:
  2025                           	opt stack 0
  2026  0000E2                     __bootloader_program@buffer:
  2027                           	opt stack 0
  2028  0000E2                     __fill_buffer_read_file@file_size:
  2029                           	opt stack 0
  2030                           
  2031                           ; 4 bytes @ 0x2D
  2032  0000E2                     	ds	1
  2033  0000E3                     __bootloader_verify_file@return_value:
  2034                           	opt stack 0
  2035                           
  2036                           ; 4 bytes @ 0x2E
  2037  0000E3                     	ds	1
  2038  0000E4                     __bootloader_program@entry_page:
  2039                           	opt stack 0
  2040                           
  2041                           ; 2 bytes @ 0x2F
  2042  0000E4                     	ds	2
  2043  0000E6                     __bootloader_program@address_within_page:
  2044                           	opt stack 0
  2045  0000E6                     __fill_buffer_read_file@data_length:
  2046                           	opt stack 0
  2047                           
  2048                           ; 4 bytes @ 0x31
  2049  0000E6                     	ds	1
  2050  0000E7                     __bootloader_verify_file@address32:
  2051                           	opt stack 0
  2052                           
  2053                           ; 4 bytes @ 0x32
  2054  0000E7                     	ds	1
  2055  0000E8                     api_parse@inBuffer:
  2056                           	opt stack 0
  2057  0000E8                     __bootloader_program@return_value:
  2058                           	opt stack 0
  2059                           
  2060                           ; 4 bytes @ 0x33
  2061  0000E8                     	ds	2
  2062  0000EA                     api_parse@receivedDataLength:
  2063                           	opt stack 0
  2064  0000EA                     __fill_buffer_read_file@start:
  2065                           	opt stack 0
  2066                           
  2067                           ; 4 bytes @ 0x35
  2068  0000EA                     	ds	2
  2069  0000EC                     __bootloader_program@address32:
  2070                           	opt stack 0
  2071                           
  2072                           ; 4 bytes @ 0x37
  2073  0000EC                     	ds	2
  2074  0000EE                     api_prepare@inBuffer:
  2075                           	opt stack 0
  2076                           
  2077                           ; 2 bytes @ 0x39
  2078  0000EE                     	ds	2
  2079  0000F0                     __bootloader_program@start_from_byte:
  2080                           	opt stack 0
  2081  0000F0                     api_prepare@outBuffer:
  2082                           	opt stack 0
  2083                           
  2084                           ; 2 bytes @ 0x3B
  2085  0000F0                     	ds	1
  2086  0000F1                     __bootloader_program@cntr:
  2087                           	opt stack 0
  2088                           
  2089                           ; 2 bytes @ 0x3C
  2090  0000F1                     	ds	1
  2091  0000F2                     ??_APP_DeviceCustomHIDTasks:
  2092                           
  2093                           ; 1 bytes @ 0x3D
  2094  0000F2                     	ds	1
  2095  0000F3                     __bootloader_program@page_to_write:
  2096                           	opt stack 0
  2097                           
  2098                           ; 2 bytes @ 0x3E
  2099  0000F3                     	ds	3
  2100  0000F6                     main@tx_start_addr:
  2101                           	opt stack 0
  2102                           
  2103                           ; 2 bytes @ 0x41
  2104  0000F6                     	ds	2
  2105  0000F8                     main@bytes_transmitted:
  2106                           	opt stack 0
  2107                           
  2108                           ; 2 bytes @ 0x43
  2109  0000F8                     	ds	2
  2110  0000FA                     main@rx_buffer:
  2111                           	opt stack 0
  2112                           
  2113                           ; 2 bytes @ 0x45
  2114  0000FA                     	ds	2
  2115  0000FC                     main@tx_buffer:
  2116                           	opt stack 0
  2117                           
  2118                           ; 2 bytes @ 0x47
  2119  0000FC                     	ds	2
  2120                           tblptru	equ	0xFF8
  2121                           tblptrh	equ	0xFF7
  2122                           tblptrl	equ	0xFF6
  2123                           tablat	equ	0xFF5
  2124                           postinc0	equ	0xFEE
  2125                           wreg	equ	0xFE8
  2126                           postdec1	equ	0xFE5
  2127                           fsr1h	equ	0xFE2
  2128                           fsr1l	equ	0xFE1
  2129                           
  2130                           	psect	cstackCOMRAM
  2131  000001                     __pcstackCOMRAM:
  2132                           	opt stack 0
  2133  000001                     ??_USBStdGetDscHandler:
  2134  000001                     ??_USBStdGetStatusHandler:
  2135  000001                     ??_system_delay_ms:
  2136  000001                     ??__i2c_wait_idle:
  2137  000001                     ??__display_clear:
  2138  000001                     ?_USBTransferOnePacket:
  2139                           	opt stack 0
  2140  000001                     ?_spi_get_external_rx_buffer:
  2141                           	opt stack 0
  2142  000001                     ?_spi_get_external_tx_buffer:
  2143                           	opt stack 0
  2144  000001                     ?_ExternalFlash_MediaInitialize:
  2145                           	opt stack 0
  2146  000001                     ?_ExternalFlash_SectorSizeRead:
  2147                           	opt stack 0
  2148  000001                     ?_bootloader_get_entries:
  2149                           	opt stack 0
  2150  000001                     ?_bootloader_get_total_entries:
  2151                           	opt stack 0
  2152  000001                     ?_bootloader_get_rec_address:
  2153                           	opt stack 0
  2154  000001                     ?_bootloader_get_flashPagesWritten:
  2155                           	opt stack 0
  2156  000001                     ?_strncmp:
  2157                           	opt stack 0
  2158  000001                     ?_internalFlash_pageFromAddress:
  2159                           	opt stack 0
  2160  000001                     ?_internalFlash_getBuffer:
  2161                           	opt stack 0
  2162  000001                     ?__get_time:
  2163                           	opt stack 0
  2164  000001                     ?__get_date:
  2165                           	opt stack 0
  2166  000001                     ?__sector_from_cluster:
  2167                           	opt stack 0
  2168  000001                     ?_bootloader_get_rec_dataLength:
  2169                           	opt stack 0
  2170  000001                     ?___lwdiv:
  2171                           	opt stack 0
  2172  000001                     ?___lwmod:
  2173                           	opt stack 0
  2174  000001                     ?_ExternalFlash_CapacityRead:
  2175                           	opt stack 0
  2176  000001                     ?_bootloader_get_file_size:
  2177                           	opt stack 0
  2178  000001                     ?_internalFlash_addressFromPage:
  2179                           	opt stack 0
  2180  000001                     ?___lldiv:
  2181                           	opt stack 0
  2182  000001                     ?___llmod:
  2183                           	opt stack 0
  2184  000001                     USBTransferOnePacket@dir:
  2185                           	opt stack 0
  2186  000001                     USBStallEndpoint@dir:
  2187                           	opt stack 0
  2188  000001                     USBConfigureEndpoint@direction:
  2189                           	opt stack 0
  2190  000001                     USBCtrlTrfTxService@byteToSend:
  2191                           	opt stack 0
  2192  000001                     USBCtrlTrfRxService@i:
  2193                           	opt stack 0
  2194  000001                     __i2c_send@dat:
  2195                           	opt stack 0
  2196  000001                     i2c_set_frequency@frequency:
  2197                           	opt stack 0
  2198  000001                     display_get_character@position:
  2199                           	opt stack 0
  2200  000001                     __display_search@cntr:
  2201                           	opt stack 0
  2202  000001                     hexCharToUint8@c:
  2203                           	opt stack 0
  2204  000001                     bootloader_get_rec_data@index:
  2205                           	opt stack 0
  2206  000001                     __internalFlash_unlockAndActivate@UnlockKey:
  2207                           	opt stack 0
  2208  000001                     spi_set_configuration@configuration:
  2209                           	opt stack 0
  2210  000001                     MSDComputeDeviceInAndResidue@DiExpected:
  2211                           	opt stack 0
  2212  000001                     SYSTEM_Initialize@pll_startup_counter:
  2213                           	opt stack 0
  2214  000001                     ExternalFlash_MediaInitialize@config:
  2215                           	opt stack 0
  2216  000001                     ExternalFlash_SectorSizeRead@config:
  2217                           	opt stack 0
  2218  000001                     ExternalFlash_CapacityRead@config:
  2219                           	opt stack 0
  2220  000001                     ExternalFlash_MediaDetect@config:
  2221                           	opt stack 0
  2222  000001                     ExternalFlash_WriteProtectStateGet@config:
  2223                           	opt stack 0
  2224  000001                     __sector_from_cluster@fat_cluster:
  2225                           	opt stack 0
  2226  000001                     __get_mbr@idx:
  2227                           	opt stack 0
  2228  000001                     __get_fbr@idx:
  2229                           	opt stack 0
  2230  000001                     __get_fat@idx:
  2231                           	opt stack 0
  2232  000001                     __get_root@idx:
  2233                           	opt stack 0
  2234  000001                     __get_data@idx:
  2235                           	opt stack 0
  2236  000001                     internalFlash_addressFromPage@page:
  2237                           	opt stack 0
  2238  000001                     __fill_buffer_get_configuration@outBuffer:
  2239                           	opt stack 0
  2240  000001                     __parse_file_truncate@data:
  2241                           	opt stack 0
  2242  000001                     __parse_file_modify@data:
  2243                           	opt stack 0
  2244  000001                     spi_tx@data:
  2245                           	opt stack 0
  2246  000001                     spi_tx_tx@command:
  2247                           	opt stack 0
  2248  000001                     spi_tx_rx@command:
  2249                           	opt stack 0
  2250  000001                     ___lwdiv@dividend:
  2251                           	opt stack 0
  2252  000001                     ___lwmod@dividend:
  2253                           	opt stack 0
  2254  000001                     memcpy@d1:
  2255                           	opt stack 0
  2256  000001                     memset@p1:
  2257                           	opt stack 0
  2258  000001                     strncmp@s1:
  2259                           	opt stack 0
  2260  000001                     __spi_init@details:
  2261                           	opt stack 0
  2262  000001                     __bootloader_check_address@address:
  2263                           	opt stack 0
  2264  000001                     internalFlash_pageFromAddress@address:
  2265                           	opt stack 0
  2266  000001                     ___lldiv@dividend:
  2267                           	opt stack 0
  2268  000001                     ___llmod@dividend:
  2269                           	opt stack 0
  2270                           
  2271                           ; 4 bytes @ 0x0
  2272  000001                     	ds	1
  2273  000002                     ??_USBConfigureEndpoint:
  2274  000002                     ??_USBStallEndpoint:
  2275  000002                     ??_display_get_character:
  2276  000002                     USBCtrlTrfRxService@byteToRead:
  2277                           	opt stack 0
  2278  000002                     USBCtrlTrfInHandler@lastDTS:
  2279                           	opt stack 0
  2280  000002                     system_delay_ms@ms:
  2281                           	opt stack 0
  2282  000002                     hexCharToUint8@ascii:
  2283                           	opt stack 0
  2284  000002                     __internalFlash_unlockAndActivate@InterruptEnableSave:
  2285                           	opt stack 0
  2286  000002                     USBTransferOnePacket@data:
  2287                           	opt stack 0
  2288  000002                     USBStdGetStatusHandler@p:
  2289                           	opt stack 0
  2290                           
  2291                           ; 2 bytes @ 0x1
  2292  000002                     	ds	1
  2293  000003                     ??_MSDComputeDeviceInAndResidue:
  2294  000003                     ??__get_mbr:
  2295  000003                     ??__get_fbr:
  2296  000003                     ??__get_fat:
  2297  000003                     ??__get_root:
  2298  000003                     ?_hexCharsToUint16:
  2299                           	opt stack 0
  2300  000003                     system_delay_ms@cntr:
  2301                           	opt stack 0
  2302  000003                     __display_clear@row:
  2303                           	opt stack 0
  2304  000003                     hexCharsToUint8@c2:
  2305                           	opt stack 0
  2306  000003                     hexCharsToUint16@c2:
  2307                           	opt stack 0
  2308  000003                     SYSTEM_Initialize@pll_startup_counter_3027:
  2309                           	opt stack 0
  2310  000003                     __get_time@time:
  2311                           	opt stack 0
  2312  000003                     __get_date@date:
  2313                           	opt stack 0
  2314  000003                     internalFlash_erasePage@page:
  2315                           	opt stack 0
  2316  000003                     internalFlash_writePage@page:
  2317                           	opt stack 0
  2318  000003                     spi_tx@length:
  2319                           	opt stack 0
  2320  000003                     spi_tx_tx@command_length:
  2321                           	opt stack 0
  2322  000003                     spi_tx_rx@command_length:
  2323                           	opt stack 0
  2324  000003                     ___lwdiv@divisor:
  2325                           	opt stack 0
  2326  000003                     ___lwmod@divisor:
  2327                           	opt stack 0
  2328  000003                     memset@c:
  2329                           	opt stack 0
  2330  000003                     strncmp@s2:
  2331                           	opt stack 0
  2332  000003                     memcpy@s1:
  2333                           	opt stack 0
  2334                           
  2335                           ; 3 bytes @ 0x2
  2336  000003                     	ds	1
  2337  000004                     ??_hexCharsToUint8:
  2338  000004                     USBTransferOnePacket@len:
  2339                           	opt stack 0
  2340  000004                     display_get_character@line:
  2341                           	opt stack 0
  2342  000004                     __display_clear@col:
  2343                           	opt stack 0
  2344  000004                     hexCharsToUint16@c3:
  2345                           	opt stack 0
  2346  000004                     spi_init@configuration:
  2347                           	opt stack 0
  2348                           
  2349                           ; 1 bytes @ 0x3
  2350  000004                     	ds	1
  2351  000005                     ??_USBTransferOnePacket:
  2352  000005                     ??_spi_tx:
  2353  000005                     ??_internalFlash_pageFromAddress:
  2354  000005                     SYSTEM_Initialize@state:
  2355                           	opt stack 0
  2356  000005                     hexCharsToUint8@c1:
  2357                           	opt stack 0
  2358  000005                     hexCharsToUint16@c4:
  2359                           	opt stack 0
  2360  000005                     __bootloader_check_address@dataLength:
  2361                           	opt stack 0
  2362  000005                     ___lwmod@counter:
  2363                           	opt stack 0
  2364  000005                     __update_modified_time@root:
  2365                           	opt stack 0
  2366  000005                     __fill_buffer_get_display@outBuffer:
  2367                           	opt stack 0
  2368  000005                     __fill_buffer_get_bootloader_details@outBuffer:
  2369                           	opt stack 0
  2370  000005                     spi_tx_tx@data:
  2371                           	opt stack 0
  2372  000005                     spi_tx_rx@data:
  2373                           	opt stack 0
  2374  000005                     ___lwdiv@quotient:
  2375                           	opt stack 0
  2376  000005                     memset@n:
  2377                           	opt stack 0
  2378  000005                     strncmp@len:
  2379                           	opt stack 0
  2380  000005                     internalFlash_erasePage@address:
  2381                           	opt stack 0
  2382  000005                     internalFlash_writePage@address:
  2383                           	opt stack 0
  2384  000005                     internalFlash_addressFromPage@address:
  2385                           	opt stack 0
  2386  000005                     ___lldiv@divisor:
  2387                           	opt stack 0
  2388  000005                     ___llmod@divisor:
  2389                           	opt stack 0
  2390                           
  2391                           ; 4 bytes @ 0x4
  2392  000005                     	ds	1
  2393  000006                     ??_hexCharsToUint16:
  2394  000006                     ??__bootloader_check_address:
  2395  000006                     USBStallEndpoint@ep:
  2396                           	opt stack 0
  2397  000006                     USBConfigureEndpoint@EPNum:
  2398                           	opt stack 0
  2399  000006                     hexCharsToUint8@retVal:
  2400                           	opt stack 0
  2401  000006                     __i2c_write@data:
  2402                           	opt stack 0
  2403  000006                     __i2c_read@data:
  2404                           	opt stack 0
  2405  000006                     i2c_display_write_fixed@data:
  2406                           	opt stack 0
  2407  000006                     memcpy@n:
  2408                           	opt stack 0
  2409                           
  2410                           ; 2 bytes @ 0x5
  2411  000006                     	ds	1
  2412  000007                     ??_strncmp:
  2413  000007                     ??__fill_buffer_get_bootloader_details:
  2414  000007                     __fill_buffer_get_display@secondHalf:
  2415                           	opt stack 0
  2416  000007                     ___lwdiv@counter:
  2417                           	opt stack 0
  2418  000007                     USBStallEndpoint@p:
  2419                           	opt stack 0
  2420  000007                     USBConfigureEndpoint@handle:
  2421                           	opt stack 0
  2422  000007                     spi_tx_tx@data_length:
  2423                           	opt stack 0
  2424  000007                     spi_tx_rx@data_length:
  2425                           	opt stack 0
  2426  000007                     memset@p:
  2427                           	opt stack 0
  2428                           
  2429                           ; 2 bytes @ 0x6
  2430  000007                     	ds	1
  2431  000008                     ??__fill_buffer_get_display:
  2432  000008                     __i2c_write@length:
  2433                           	opt stack 0
  2434  000008                     __i2c_read@length:
  2435                           	opt stack 0
  2436  000008                     i2c_display_write_fixed@length:
  2437                           	opt stack 0
  2438  000008                     utoa@buf:
  2439                           	opt stack 0
  2440  000008                     memcpy@s:
  2441                           	opt stack 0
  2442                           
  2443                           ; 3 bytes @ 0x7
  2444  000008                     	ds	1
  2445  000009                     ??_spi_tx_rx:
  2446  000009                     ??_spi_tx_tx:
  2447  000009                     ??__i2c_read:
  2448  000009                     ?_internalFlash_addressWithinPage:
  2449                           	opt stack 0
  2450  000009                     USBDeviceInit@i:
  2451                           	opt stack 0
  2452  000009                     USBEnableEndpoint@options:
  2453                           	opt stack 0
  2454  000009                     USBTransferOnePacket@ep:
  2455                           	opt stack 0
  2456  000009                     MSDErrorHandler@ErrorCase:
  2457                           	opt stack 0
  2458  000009                     __i2c_write@slave_address:
  2459                           	opt stack 0
  2460  000009                     i2c_display_write_fixed@pos:
  2461                           	opt stack 0
  2462  000009                     __flash_wakeup@command:
  2463                           	opt stack 0
  2464  000009                     hexCharsToUint16@c1:
  2465                           	opt stack 0
  2466  000009                     ___llmod@counter:
  2467                           	opt stack 0
  2468  000009                     internalFlash_writePage@cntr:
  2469                           	opt stack 0
  2470  000009                     internalFlash_addressWithinPage@address:
  2471                           	opt stack 0
  2472  000009                     ___lldiv@quotient:
  2473                           	opt stack 0
  2474                           
  2475                           ; 4 bytes @ 0x8
  2476  000009                     	ds	1
  2477  00000A                     MSDErrorHandler@OldMSD_State:
  2478                           	opt stack 0
  2479  00000A                     __i2c_write@cntr:
  2480                           	opt stack 0
  2481  00000A                     __bootloader_check_address@worst_case:
  2482                           	opt stack 0
  2483  00000A                     __fill_buffer_get_bootloader_details@data_length:
  2484                           	opt stack 0
  2485  00000A                     USBEnableEndpoint@p:
  2486                           	opt stack 0
  2487  00000A                     USBTransferOnePacket@handle:
  2488                           	opt stack 0
  2489  00000A                     hexCharsToUint16@retVal:
  2490                           	opt stack 0
  2491  00000A                     utoa@val:
  2492                           	opt stack 0
  2493                           
  2494                           ; 2 bytes @ 0x9
  2495  00000A                     	ds	1
  2496  00000B                     __ic2_display_set_address@address:
  2497                           	opt stack 0
  2498  00000B                     i2c_digipot_backlight@level:
  2499                           	opt stack 0
  2500  00000B                     __bootloader_check_address@byte_status:
  2501                           	opt stack 0
  2502  00000B                     internalFlash_writePage@block_cntr:
  2503                           	opt stack 0
  2504  00000B                     __fill_buffer_get_bootloader_details@cntr:
  2505                           	opt stack 0
  2506  00000B                     i2c_digipot_reset_on@data_array:
  2507                           	opt stack 0
  2508  00000B                     i2c_digipot_reset_off@data_array:
  2509                           	opt stack 0
  2510  00000B                     i2c_eeprom_writeByte@address:
  2511                           	opt stack 0
  2512  00000B                     memcpy@d:
  2513                           	opt stack 0
  2514  00000B                     MSDCheckForErrorCases@DeviceBytes:
  2515                           	opt stack 0
  2516  00000B                     i2c_display_send_init_sequence@init_sequence:
  2517                           	opt stack 0
  2518                           
  2519                           ; 9 bytes @ 0xA
  2520  00000B                     	ds	1
  2521  00000C                     ??_USBMSDInit:
  2522  00000C                     ?_parseHexFileEntry:
  2523                           	opt stack 0
  2524  00000C                     USBEnableEndpoint@ep:
  2525                           	opt stack 0
  2526  00000C                     __bootloader_check_address@cntr:
  2527                           	opt stack 0
  2528  00000C                     internalFlash_writePage@byte_cntr:
  2529                           	opt stack 0
  2530  00000C                     _USBCheckMSDRequest$2319:
  2531                           	opt stack 0
  2532  00000C                     MSDTransferTerminated@handle:
  2533                           	opt stack 0
  2534  00000C                     __ic2_display_set_address@data_array:
  2535                           	opt stack 0
  2536  00000C                     i2c_digipot_backlight@data_array:
  2537                           	opt stack 0
  2538  00000C                     parseHexFileEntry@data:
  2539                           	opt stack 0
  2540  00000C                     utoa@base:
  2541                           	opt stack 0
  2542  00000C                     __fill_buffer_get_bootloader_details@buffer_large:
  2543                           	opt stack 0
  2544                           
  2545                           ; 4 bytes @ 0xB
  2546  00000C                     	ds	1
  2547  00000D                     ?__flash_get_status:
  2548                           	opt stack 0
  2549  00000D                     i2c_eeprom_writeByte@data:
  2550                           	opt stack 0
  2551  00000D                     __fill_buffer_get_display@cntr:
  2552                           	opt stack 0
  2553  00000D                     ___lldiv@counter:
  2554                           	opt stack 0
  2555  00000D                     memcpy@tmp:
  2556                           	opt stack 0
  2557  00000D                     internalFlash_addressWithinPage@page:
  2558                           	opt stack 0
  2559                           
  2560                           ; 2 bytes @ 0xC
  2561  00000D                     	ds	1
  2562  00000E                     ??_i2c_eeprom_writeByte:
  2563  00000E                     i2c_display_cursor@position:
  2564                           	opt stack 0
  2565  00000E                     __fill_buffer_get_display@line:
  2566                           	opt stack 0
  2567  00000E                     _USBCheckMSDRequest$2320:
  2568                           	opt stack 0
  2569  00000E                     _MSDTransferTerminated$2407:
  2570                           	opt stack 0
  2571  00000E                     utoa@v:
  2572                           	opt stack 0
  2573  00000E                     parseHexFileEntry@offset:
  2574                           	opt stack 0
  2575  00000E                     internalFlash_read@address:
  2576                           	opt stack 0
  2577                           
  2578                           ; 4 bytes @ 0xD
  2579  00000E                     	ds	1
  2580  00000F                     ??_internalFlash_addressWithinPage:
  2581  00000F                     MSDCheckForErrorCases@HostMoreDataThanDevice:
  2582                           	opt stack 0
  2583  00000F                     i2c_display_cursor@line:
  2584                           	opt stack 0
  2585  00000F                     __flash_get_status@command:
  2586                           	opt stack 0
  2587  00000F                     __fill_buffer_get_display@start_line:
  2588                           	opt stack 0
  2589                           
  2590                           ; 1 bytes @ 0xE
  2591  00000F                     	ds	1
  2592  000010                     MSDCheckForErrorCases@MSDErrorCase:
  2593                           	opt stack 0
  2594  000010                     __i2c_read@slave_address:
  2595                           	opt stack 0
  2596  000010                     i2c_display_cursor@address:
  2597                           	opt stack 0
  2598  000010                     __fill_buffer_get_display@position:
  2599                           	opt stack 0
  2600  000010                     utoa@c:
  2601                           	opt stack 0
  2602  000010                     USER_USB_CALLBACK_EVENT_HANDLER@event:
  2603                           	opt stack 0
  2604  000010                     __flash_get_status@status:
  2605                           	opt stack 0
  2606  000010                     __fill_buffer_get_bootloader_details@buffer_small:
  2607                           	opt stack 0
  2608                           
  2609                           ; 2 bytes @ 0xF
  2610  000010                     	ds	1
  2611  000011                     MSDCheckForErrorCases@DeviceNoData:
  2612                           	opt stack 0
  2613  000011                     __i2c_read@cntr:
  2614                           	opt stack 0
  2615  000011                     i2c_eeprom_writeByte@dat:
  2616                           	opt stack 0
  2617  000011                     itoa@buf:
  2618                           	opt stack 0
  2619                           
  2620                           ; 2 bytes @ 0x10
  2621  000011                     	ds	1
  2622  000012                     USER_USB_CALLBACK_EVENT_HANDLER@pdata:
  2623                           	opt stack 0
  2624  000012                     i2c_eeprom_readByte@address:
  2625                           	opt stack 0
  2626  000012                     __flash_is_busy@status:
  2627                           	opt stack 0
  2628  000012                     parseHexFileEntry@hexEntry:
  2629                           	opt stack 0
  2630  000012                     internalFlash_read@data_length:
  2631                           	opt stack 0
  2632                           
  2633                           ; 2 bytes @ 0x11
  2634  000012                     	ds	1
  2635  000013                     i2c_eeprom_writeByte@slave_address:
  2636                           	opt stack 0
  2637  000013                     itoa@val:
  2638                           	opt stack 0
  2639  000013                     internalFlash_addressWithinPage@page_start_address:
  2640                           	opt stack 0
  2641                           
  2642                           ; 4 bytes @ 0x12
  2643  000013                     	ds	1
  2644  000014                     ??_i2c_eeprom_readByte:
  2645  000014                     ??_parseHexFileEntry:
  2646  000014                     flash_is_busy@result:
  2647                           	opt stack 0
  2648  000014                     __parse_command_short@cmd:
  2649                           	opt stack 0
  2650  000014                     USER_USB_CALLBACK_EVENT_HANDLER@size:
  2651                           	opt stack 0
  2652  000014                     __flash_copy_page_to_buffer@page:
  2653                           	opt stack 0
  2654  000014                     __flash_compare_page_to_buffer@page:
  2655                           	opt stack 0
  2656  000014                     __flash_write_to_buffer@start:
  2657                           	opt stack 0
  2658  000014                     __flash_write_page_from_buffer@page:
  2659                           	opt stack 0
  2660  000014                     __flash_partial_read@page:
  2661                           	opt stack 0
  2662  000014                     internalFlash_read@buffer:
  2663                           	opt stack 0
  2664  000014                     __flash_set_page_size@command:
  2665                           	opt stack 0
  2666                           
  2667                           ; 4 bytes @ 0x13
  2668  000014                     	ds	1
  2669  000015                     __fill_buffer_get_status@outBuffer:
  2670                           	opt stack 0
  2671  000015                     itoa@base:
  2672                           	opt stack 0
  2673                           
  2674                           ; 2 bytes @ 0x14
  2675  000015                     	ds	1
  2676  000016                     ??_USER_USB_CALLBACK_EVENT_HANDLER:
  2677  000016                     __flash_copy_page_to_buffer@buffer:
  2678                           	opt stack 0
  2679  000016                     __flash_compare_page_to_buffer@buffer:
  2680                           	opt stack 0
  2681  000016                     __flash_write_page_from_buffer@buffer:
  2682                           	opt stack 0
  2683  000016                     __flash_write_to_buffer@data:
  2684                           	opt stack 0
  2685  000016                     __flash_partial_read@start:
  2686                           	opt stack 0
  2687  000016                     internalFlash_readPage@page:
  2688                           	opt stack 0
  2689                           
  2690                           ; 2 bytes @ 0x15
  2691  000016                     	ds	1
  2692  000017                     ??__flash_copy_page_to_buffer:
  2693  000017                     ??__flash_compare_page_to_buffer:
  2694  000017                     ??__flash_write_page_from_buffer:
  2695  000017                     i2c_eeprom_readByte@slave_address:
  2696                           	opt stack 0
  2697  000017                     itoa@cp:
  2698                           	opt stack 0
  2699                           
  2700                           ; 2 bytes @ 0x16
  2701  000017                     	ds	1
  2702  000018                     ??_USBStdFeatureReqHandler:
  2703  000018                     USBStdSetCfgHandler@i:
  2704                           	opt stack 0
  2705  000018                     i2c_eeprom_readByte@addr:
  2706                           	opt stack 0
  2707  000018                     __flash_set_page_size@size:
  2708                           	opt stack 0
  2709  000018                     __flash_write_to_buffer@data_length:
  2710                           	opt stack 0
  2711  000018                     __flash_partial_read@length:
  2712                           	opt stack 0
  2713  000018                     internalFlash_readPage@address:
  2714                           	opt stack 0
  2715                           
  2716                           ; 4 bytes @ 0x17
  2717  000018                     	ds	1
  2718  000019                     USBStdFeatureReqHandler@pUEP:
  2719                           	opt stack 0
  2720  000019                     __display_itoa_u16@value:
  2721                           	opt stack 0
  2722                           
  2723                           ; 4 bytes @ 0x18
  2724  000019                     	ds	1
  2725  00001A                     __flash_write_to_buffer@buffer:
  2726                           	opt stack 0
  2727  00001A                     __flash_compare_page_to_buffer@status:
  2728                           	opt stack 0
  2729  00001A                     __flash_partial_read@data:
  2730                           	opt stack 0
  2731  00001A                     __flash_copy_page_to_buffer@command:
  2732                           	opt stack 0
  2733  00001A                     __flash_write_page_from_buffer@command:
  2734                           	opt stack 0
  2735                           
  2736                           ; 4 bytes @ 0x19
  2737  00001A                     	ds	1
  2738  00001B                     USBStdFeatureReqHandler@current_ep_data:
  2739                           	opt stack 0
  2740  00001B                     __flash_write_to_buffer@command:
  2741                           	opt stack 0
  2742                           
  2743                           ; 4 bytes @ 0x1A
  2744  00001B                     	ds	1
  2745  00001C                     ??__flash_partial_read:
  2746  00001C                     parseHexFileEntry@i:
  2747                           	opt stack 0
  2748  00001C                     USBStdFeatureReqHandler@p:
  2749                           	opt stack 0
  2750  00001C                     __flash_compare_page_to_buffer@command:
  2751                           	opt stack 0
  2752                           
  2753                           ; 4 bytes @ 0x1B
  2754  00001C                     	ds	1
  2755  00001D                     __display_itoa_u16@text:
  2756                           	opt stack 0
  2757                           
  2758                           ; 2 bytes @ 0x1C
  2759  00001D                     	ds	1
  2760  00001E                     ??_USBCtrlEPService:
  2761  00001E                     
  2762                           ; 1 bytes @ 0x1D
  2763  00001E                     	ds	1
  2764  00001F                     ??__display_verify:
  2765  00001F                     ??__display_checked:
  2766  00001F                     __display_programming@cntr:
  2767                           	opt stack 0
  2768  00001F                     __display_done@cntr:
  2769                           	opt stack 0
  2770  00001F                     __display_itoa_u32@value:
  2771                           	opt stack 0
  2772                           
  2773                           ; 4 bytes @ 0x1E
  2774  00001F                     	ds	1
  2775  000020                     USBDeviceTasks@i:
  2776                           	opt stack 0
  2777  000020                     flash_page_write@page:
  2778                           	opt stack 0
  2779  000020                     flash_partial_write@page:
  2780                           	opt stack 0
  2781  000020                     __flash_partial_read@command:
  2782                           	opt stack 0
  2783                           
  2784                           ; 4 bytes @ 0x1F
  2785  000020                     	ds	1
  2786  000021                     __display_verify@cntr:
  2787                           	opt stack 0
  2788  000021                     __display_checked@start:
  2789                           	opt stack 0
  2790                           
  2791                           ; 1 bytes @ 0x20
  2792  000021                     	ds	1
  2793  000022                     __display_checked@cntr:
  2794                           	opt stack 0
  2795  000022                     flash_page_write@data:
  2796                           	opt stack 0
  2797  000022                     flash_partial_write@start:
  2798                           	opt stack 0
  2799                           
  2800                           ; 2 bytes @ 0x21
  2801  000022                     	ds	1
  2802  000023                     __display_itoa_u32@text:
  2803                           	opt stack 0
  2804                           
  2805                           ; 2 bytes @ 0x22
  2806  000023                     	ds	1
  2807  000024                     flash_page_write@match:
  2808                           	opt stack 0
  2809  000024                     flash_partial_write@length:
  2810                           	opt stack 0
  2811  000024                     __flash_partial_read@address:
  2812                           	opt stack 0
  2813                           
  2814                           ; 4 bytes @ 0x23
  2815  000024                     	ds	1
  2816  000025                     ??__display_found:
  2817  000025                     __display_start@cntr:
  2818                           	opt stack 0
  2819  000025                     __display_failed@cntr:
  2820                           	opt stack 0
  2821  000025                     ExternalFlash_SectorWrite@config:
  2822                           	opt stack 0
  2823  000025                     fat_format@cntr:
  2824                           	opt stack 0
  2825                           
  2826                           ; 2 bytes @ 0x24
  2827  000025                     	ds	1
  2828  000026                     flash_partial_write@data:
  2829                           	opt stack 0
  2830                           
  2831                           ; 2 bytes @ 0x25
  2832  000026                     	ds	1
  2833  000027                     __display_found@start:
  2834                           	opt stack 0
  2835  000027                     ExternalFlash_SectorWrite@sector_addr:
  2836                           	opt stack 0
  2837                           
  2838                           ; 4 bytes @ 0x26
  2839  000027                     	ds	1
  2840  000028                     __display_found@cntr:
  2841                           	opt stack 0
  2842  000028                     flash_partial_write@match:
  2843                           	opt stack 0
  2844  000028                     flash_page_read@page:
  2845                           	opt stack 0
  2846  000028                     flash_partial_read@page:
  2847                           	opt stack 0
  2848                           
  2849                           ; 2 bytes @ 0x27
  2850  000028                     	ds	1
  2851  000029                     ??_display_prepare:
  2852  000029                     ??__delete_root:
  2853  000029                     __write_fat@cluster:
  2854                           	opt stack 0
  2855  000029                     __write_root@data:
  2856                           	opt stack 0
  2857                           
  2858                           ; 2 bytes @ 0x28
  2859  000029                     	ds	1
  2860  00002A                     flash_page_read@data:
  2861                           	opt stack 0
  2862  00002A                     flash_partial_read@start:
  2863                           	opt stack 0
  2864  00002A                     __delete_root@root_sector:
  2865                           	opt stack 0
  2866                           
  2867                           ; 2 bytes @ 0x29
  2868  00002A                     	ds	1
  2869  00002B                     ??__write_root:
  2870  00002B                     display_prepare@mode:
  2871                           	opt stack 0
  2872  00002B                     ExternalFlash_SectorWrite@buffer:
  2873                           	opt stack 0
  2874  00002B                     __write_fat@value:
  2875                           	opt stack 0
  2876                           
  2877                           ; 2 bytes @ 0x2A
  2878  00002B                     	ds	1
  2879  00002C                     ??_fat_get_format_status:
  2880  00002C                     flash_partial_read@length:
  2881                           	opt stack 0
  2882  00002C                     ExternalFlash_SectorRead@config:
  2883                           	opt stack 0
  2884  00002C                     __write_root@root_sector:
  2885                           	opt stack 0
  2886  00002C                     __delete_root@offset:
  2887                           	opt stack 0
  2888                           
  2889                           ; 2 bytes @ 0x2B
  2890  00002C                     	ds	1
  2891  00002D                     ExternalFlash_SectorWrite@allowWriteToZero:
  2892                           	opt stack 0
  2893  00002D                     __write_fat@fat_sector:
  2894                           	opt stack 0
  2895                           
  2896                           ; 2 bytes @ 0x2C
  2897  00002D                     	ds	1
  2898  00002E                     __delete_root@deleted_value:
  2899                           	opt stack 0
  2900  00002E                     flash_partial_read@data:
  2901                           	opt stack 0
  2902  00002E                     ExternalFlash_SectorWrite@page:
  2903                           	opt stack 0
  2904  00002E                     __write_root@offset:
  2905                           	opt stack 0
  2906  00002E                     fat_get_format_status@cntr:
  2907                           	opt stack 0
  2908  00002E                     ExternalFlash_SectorRead@sector_addr:
  2909                           	opt stack 0
  2910                           
  2911                           ; 4 bytes @ 0x2D
  2912  00002E                     	ds	1
  2913  00002F                     __delete_root@slot:
  2914                           	opt stack 0
  2915  00002F                     __write_fat@offset:
  2916                           	opt stack 0
  2917                           
  2918                           ; 2 bytes @ 0x2E
  2919  00002F                     	ds	1
  2920  000030                     ??_MSDWriteHandler:
  2921  000030                     ??__root_is_available:
  2922  000030                     ?__get_empty_cluster:
  2923                           	opt stack 0
  2924  000030                     ?_fat_get_empty_clusters:
  2925                           	opt stack 0
  2926  000030                     ?__read_fat:
  2927                           	opt stack 0
  2928  000030                     ?__get_first_cluster:
  2929                           	opt stack 0
  2930  000030                     ?_fat_get_file_size:
  2931                           	opt stack 0
  2932  000030                     __write_root@slot:
  2933                           	opt stack 0
  2934  000030                     __get_empty_cluster@first_cluster:
  2935                           	opt stack 0
  2936  000030                     fat_get_empty_clusters@maximum:
  2937                           	opt stack 0
  2938  000030                     __read_fat@cluster:
  2939                           	opt stack 0
  2940  000030                     fat_find_file@name:
  2941                           	opt stack 0
  2942                           
  2943                           ; 2 bytes @ 0x2F
  2944  000030                     	ds	1
  2945  000031                     __root_is_available@root_sector:
  2946                           	opt stack 0
  2947                           
  2948                           ; 2 bytes @ 0x30
  2949  000031                     	ds	1
  2950  000032                     ??__get_first_cluster:
  2951  000032                     ExternalFlash_SectorRead@buffer:
  2952                           	opt stack 0
  2953  000032                     __get_empty_cluster@fat_sector:
  2954                           	opt stack 0
  2955  000032                     fat_get_empty_clusters@fat_sector:
  2956                           	opt stack 0
  2957  000032                     __read_fat@fat_sector:
  2958                           	opt stack 0
  2959  000032                     fat_find_file@extension:
  2960                           	opt stack 0
  2961                           
  2962                           ; 2 bytes @ 0x31
  2963  000032                     	ds	1
  2964  000033                     __root_is_available@offset:
  2965                           	opt stack 0
  2966  000033                     __get_first_cluster@sector:
  2967                           	opt stack 0
  2968                           
  2969                           ; 2 bytes @ 0x32
  2970  000033                     	ds	1
  2971  000034                     ??_fat_get_file_size:
  2972  000034                     ExternalFlash_SectorRead@page:
  2973                           	opt stack 0
  2974  000034                     __get_empty_cluster@offset:
  2975                           	opt stack 0
  2976  000034                     fat_get_empty_clusters@offset:
  2977                           	opt stack 0
  2978  000034                     __read_fat@offset:
  2979                           	opt stack 0
  2980  000034                     fat_find_file@buffer:
  2981                           	opt stack 0
  2982                           
  2983                           ; 11 bytes @ 0x33
  2984  000034                     	ds	1
  2985  000035                     __root_is_available@file_number:
  2986                           	opt stack 0
  2987  000035                     __get_first_cluster@offset:
  2988                           	opt stack 0
  2989  000035                     fat_get_file_size@sector:
  2990                           	opt stack 0
  2991                           
  2992                           ; 2 bytes @ 0x34
  2993  000035                     	ds	1
  2994  000036                     ??_MSDReadHandler:
  2995  000036                     __root_is_available@first_byte:
  2996                           	opt stack 0
  2997  000036                     __get_empty_cluster@value:
  2998                           	opt stack 0
  2999  000036                     fat_get_empty_clusters@value:
  3000                           	opt stack 0
  3001  000036                     __read_fat@value:
  3002                           	opt stack 0
  3003                           
  3004                           ; 2 bytes @ 0x35
  3005  000036                     	ds	1
  3006  000037                     __get_available_root_entry@file_number:
  3007                           	opt stack 0
  3008  000037                     __get_first_cluster@first_cluster:
  3009                           	opt stack 0
  3010  000037                     fat_get_file_information@data:
  3011                           	opt stack 0
  3012  000037                     fat_get_file_size@file_size:
  3013                           	opt stack 0
  3014                           
  3015                           ; 4 bytes @ 0x36
  3016  000037                     	ds	1
  3017  000038                     __get_empty_cluster@cluster:
  3018                           	opt stack 0
  3019  000038                     fat_get_empty_clusters@empty_clusters:
  3020                           	opt stack 0
  3021                           
  3022                           ; 2 bytes @ 0x37
  3023  000038                     	ds	1
  3024  000039                     ??_fat_get_file_information:
  3025  000039                     __get_first_cluster@slot:
  3026                           	opt stack 0
  3027                           
  3028                           ; 1 bytes @ 0x38
  3029  000039                     	ds	1
  3030  00003A                     ??_MSDProcessCommandMediaPresent:
  3031  00003A                     fat_get_empty_clusters@cluster:
  3032                           	opt stack 0
  3033  00003A                     fat_delete_file@next_cluster:
  3034                           	opt stack 0
  3035  00003A                     fat_get_file_information@root_sector:
  3036                           	opt stack 0
  3037                           
  3038                           ; 2 bytes @ 0x39
  3039  00003A                     	ds	1
  3040  00003B                     fat_get_file_size@offset:
  3041                           	opt stack 0
  3042                           
  3043                           ; 2 bytes @ 0x3A
  3044  00003B                     	ds	1
  3045  00003C                     _MSDProcessCommandMediaPresent$2390:
  3046                           	opt stack 0
  3047  00003C                     fat_delete_file@first_cluster:
  3048                           	opt stack 0
  3049  00003C                     fat_get_file_information@offset:
  3050                           	opt stack 0
  3051                           
  3052                           ; 2 bytes @ 0x3B
  3053  00003C                     	ds	1
  3054  00003D                     fat_get_file_size@file_number:
  3055                           	opt stack 0
  3056                           
  3057                           ; 1 bytes @ 0x3C
  3058  00003D                     	ds	1
  3059  00003E                     MSDProcessCommandMediaPresent@NumBytesInPacket:
  3060                           	opt stack 0
  3061  00003E                     fat_delete_file@file_number:
  3062                           	opt stack 0
  3063  00003E                     fat_get_file_information@file_number:
  3064                           	opt stack 0
  3065                           
  3066                           ; 1 bytes @ 0x3D
  3067  00003E                     	ds	1
  3068  00003F                     fat_find_file@slot:
  3069                           	opt stack 0
  3070  00003F                     fat_append_to_file@number_of_bytes:
  3071                           	opt stack 0
  3072  00003F                     fat_rename_file@name:
  3073                           	opt stack 0
  3074  00003F                     __fill_buffer_get_file_details@inBuffer:
  3075                           	opt stack 0
  3076  00003F                     __parse_file_delete@data:
  3077                           	opt stack 0
  3078  00003F                     MSDProcessCommandMediaPresent@sectorSize:
  3079                           	opt stack 0
  3080  00003F                     fat_read_from_file@start_byte:
  3081                           	opt stack 0
  3082                           
  3083                           ; 4 bytes @ 0x3E
  3084  00003F                     	ds	1
  3085  000040                     fat_find_file@sector:
  3086                           	opt stack 0
  3087                           
  3088                           ; 2 bytes @ 0x3F
  3089  000040                     	ds	1
  3090  000041                     fat_append_to_file@data:
  3091                           	opt stack 0
  3092  000041                     fat_rename_file@extension:
  3093                           	opt stack 0
  3094  000041                     __fill_buffer_get_file_details@outBuffer:
  3095                           	opt stack 0
  3096                           
  3097                           ; 2 bytes @ 0x40
  3098  000041                     	ds	1
  3099  000042                     fat_find_file@offset:
  3100                           	opt stack 0
  3101                           
  3102                           ; 2 bytes @ 0x41
  3103  000042                     	ds	1
  3104  000043                     ??_fat_append_to_file:
  3105  000043                     __fill_buffer_get_file_details@file_number:
  3106                           	opt stack 0
  3107  000043                     __parse_file_rename@data:
  3108                           	opt stack 0
  3109  000043                     MSDProcessCommandMediaPresent@capacity:
  3110                           	opt stack 0
  3111  000043                     fat_read_from_file@length:
  3112                           	opt stack 0
  3113                           
  3114                           ; 4 bytes @ 0x42
  3115  000043                     	ds	1
  3116  000044                     fat_create_file@name:
  3117                           	opt stack 0
  3118  000044                     __fill_buffer_find_file@inBuffer:
  3119                           	opt stack 0
  3120                           
  3121                           ; 2 bytes @ 0x43
  3122  000044                     	ds	1
  3123  000045                     
  3124                           ; 1 bytes @ 0x44
  3125  000045                     	ds	1
  3126  000046                     fat_create_file@extension:
  3127                           	opt stack 0
  3128  000046                     __fill_buffer_find_file@outBuffer:
  3129                           	opt stack 0
  3130                           
  3131                           ; 2 bytes @ 0x45
  3132  000046                     	ds	1
  3133  000047                     MSDProcessCommandMediaPresent@i:
  3134                           	opt stack 0
  3135  000047                     fat_read_from_file@data:
  3136                           	opt stack 0
  3137                           
  3138                           ; 2 bytes @ 0x46
  3139  000047                     	ds	1
  3140  000048                     ??_MSDProcessCommand:
  3141  000048                     ??__fill_buffer_find_file:
  3142  000048                     fat_create_file@size:
  3143                           	opt stack 0
  3144                           
  3145                           ; 4 bytes @ 0x47
  3146  000048                     	ds	1
  3147  000049                     ??_fat_read_from_file:
  3148                           
  3149                           ; 1 bytes @ 0x48
  3150  000049                     	ds	2
  3151  00004B                     __parse_file_append@data:
  3152                           	opt stack 0
  3153                           
  3154                           ; 2 bytes @ 0x4A
  3155  00004B                     	ds	1
  3156  00004C                     ??_fat_create_file:
  3157  00004C                     __fill_buffer_find_file@cntr:
  3158                           	opt stack 0
  3159                           
  3160                           ; 1 bytes @ 0x4B
  3161  00004C                     	ds	1
  3162  00004D                     ??__parse_file_append:
  3163  00004D                     ??_MSDTasks:
  3164                           
  3165                           ; 1 bytes @ 0x4C
  3166  00004D                     	ds	1
  3167  00004E                     _MSDTasks$2372:
  3168                           	opt stack 0
  3169                           
  3170                           ; 2 bytes @ 0x4D
  3171  00004E                     	ds	2
  3172  000050                     _MSDTasks$2373:
  3173                           	opt stack 0
  3174  000050                     __parse_file_create@data:
  3175                           	opt stack 0
  3176                           
  3177                           ; 2 bytes @ 0x4F
  3178  000050                     	ds	2
  3179  000052                     MSDTasks@i:
  3180                           	opt stack 0
  3181                           
  3182                           ; 1 bytes @ 0x51
  3183  000052                     	ds	1
  3184  000053                     __parse_command_long@data:
  3185                           	opt stack 0
  3186                           
  3187                           ; 2 bytes @ 0x52
  3188  000053                     	ds	2
  3189  000055                     ??__bootloader_verify_file:
  3190  000055                     ??__bootloader_program:
  3191  000055                     __parse_command_long@length:
  3192                           	opt stack 0
  3193  000055                     __fill_buffer_read_file@inBuffer:
  3194                           	opt stack 0
  3195                           
  3196                           ; 2 bytes @ 0x54
  3197  000055                     	ds	1
  3198  000056                     ??_api_parse:
  3199                           
  3200                           ; 1 bytes @ 0x55
  3201  000056                     	ds	1
  3202  000057                     __fill_buffer_read_file@outBuffer:
  3203                           	opt stack 0
  3204                           
  3205                           ; 2 bytes @ 0x56
  3206  000057                     	ds	1
  3207  000058                     api_parse@idx:
  3208                           	opt stack 0
  3209                           
  3210                           ; 1 bytes @ 0x57
  3211  000058                     	ds	1
  3212  000059                     ??__fill_buffer_read_file:
  3213                           
  3214                           ; 1 bytes @ 0x58
  3215  000059                     	ds	4
  3216  00005D                     bootloader_run@timeslot:
  3217                           	opt stack 0
  3218  00005D                     api_prepare@command:
  3219                           	opt stack 0
  3220                           
  3221                           ; 1 bytes @ 0x5C
  3222  00005D                     	ds	1
  3223  00005E                     ??_main:
  3224                           
  3225                           ; 1 bytes @ 0x5D
  3226  00005E                     	ds	2
  3227                           tblptru	equ	0xFF8
  3228                           tblptrh	equ	0xFF7
  3229                           tblptrl	equ	0xFF6
  3230                           tablat	equ	0xFF5
  3231                           postinc0	equ	0xFEE
  3232                           wreg	equ	0xFE8
  3233                           postdec1	equ	0xFE5
  3234                           fsr1h	equ	0xFE2
  3235                           fsr1l	equ	0xFE1
  3236                           
  3237 ;;
  3238 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
  3239 ;;
  3240 ;; *************** function _main *****************
  3241 ;; Defined at:
  3242 ;;		line 54 in file "main.c"
  3243 ;; Parameters:    Size  Location     Type
  3244 ;;		None
  3245 ;; Auto vars:     Size  Location     Type
  3246 ;;  tx_buffer       2   71[BANK0 ] PTR unsigned char 
  3247 ;;		 -> _spi_external_tx_buffer(64), 
  3248 ;;  rx_buffer       2   69[BANK0 ] PTR unsigned char 
  3249 ;;		 -> _spi_external_rx_buffer(64), 
  3250 ;;  bytes_transm    2   67[BANK0 ] unsigned int 
  3251 ;;  tx_start_add    2   65[BANK0 ] unsigned int 
  3252 ;; Return value:  Size  Location     Type
  3253 ;;                  1    wreg      void 
  3254 ;; Registers used:
  3255 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
  3256 ;; Tracked objects:
  3257 ;;		On entry : 0/0
  3258 ;;		On exit  : 0/0
  3259 ;;		Unchanged: 0/0
  3260 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3261 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3262 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3263 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3264 ;;      Totals:         2       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3265 ;;Total ram usage:       10 bytes
  3266 ;; Hardware stack levels required when called:   12
  3267 ;; This function calls:
  3268 ;;		_APP_DeviceCustomHIDTasks
  3269 ;;		_APP_DeviceMSDTasks
  3270 ;;		_SYSTEM_Initialize
  3271 ;;		_USBDeviceInit
  3272 ;;		_USBDeviceTasks
  3273 ;;		__normal_mode
  3274 ;;		_api_parse
  3275 ;;		_api_prepare
  3276 ;;		_bootloader_run
  3277 ;;		_display_prepare
  3278 ;;		_display_update
  3279 ;;		_jump_to_main_program
  3280 ;;		_spi_get_external_rx_buffer
  3281 ;;		_spi_get_external_tx_buffer
  3282 ;;		_system_init
  3283 ;;		_timer_pseudo_isr
  3284 ;;		_ui_get_status
  3285 ;;		_ui_run
  3286 ;; This function is called by:
  3287 ;;		Startup code after reset
  3288 ;; This function uses a non-reentrant model
  3289 ;;
  3290                           
  3291                           	psect	text0
  3292  00387C                     __ptext0:
  3293                           	opt stack 0
  3294  00387C                     _main:
  3295                           	opt stack 19
  3296                           
  3297                           ;main.c: 56: uint16_t bytes_transmitted;;main.c: 57: uint16_t tx_start_addr;;main.c: 59:
      +                           uint8_t *rx_buffer;;main.c: 60: uint8_t *tx_buffer;;main.c: 62: rx_buffer = spi_get_ext
      +                          ernal_rx_buffer();
  3298                           
  3299                           ;incstack = 0
  3300  00387C  ECC2  F03F         	call	_spi_get_external_rx_buffer	;wreg free
  3301  003880  C001  F0FA         	movff	?_spi_get_external_rx_buffer,main@rx_buffer
  3302  003884  C002  F0FB         	movff	?_spi_get_external_rx_buffer+1,main@rx_buffer+1
  3303                           
  3304                           ;main.c: 63: tx_buffer = spi_get_external_tx_buffer();
  3305  003888  ECBD  F03F         	call	_spi_get_external_tx_buffer	;wreg free
  3306  00388C  C001  F0FC         	movff	?_spi_get_external_tx_buffer,main@tx_buffer
  3307  003890  C002  F0FD         	movff	?_spi_get_external_tx_buffer+1,main@tx_buffer+1
  3308                           
  3309                           ;main.c: 64: tx_start_addr = (uint16_t) tx_buffer;
  3310  003894  C0FC  F0F6         	movff	main@tx_buffer,main@tx_start_addr
  3311  003898  C0FD  F0F7         	movff	main@tx_buffer+1,main@tx_start_addr+1
  3312                           
  3313                           ;main.c: 68: system_init();
  3314  00389C  EC13  F035         	call	_system_init	;wreg free
  3315                           
  3316                           ;main.c: 71: if(_normal_mode())
  3317  0038A0  EC0E  F038         	call	__normal_mode	;wreg free
  3318  0038A4  0900               	iorlw	0
  3319  0038A6  A4D8               	btfss	status,2,c
  3320                           
  3321                           ;main.c: 72: {;main.c: 73: jump_to_main_program();
  3322  0038A8  EC26  F03C         	call	_jump_to_main_program	;wreg free
  3323                           
  3324                           ;main.c: 74: };main.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_START);
  3325  0038AC  0E00               	movlw	0
  3326  0038AE  ECED  F039         	call	_SYSTEM_Initialize
  3327                           
  3328                           ;main.c: 79: USBDeviceInit();
  3329  0038B2  EC9F  F01D         	call	_USBDeviceInit	;wreg free
  3330  0038B6                     l886:
  3331  0038B6  0004               	clrwdt		;# 
  3332                           
  3333                           ;main.c: 92: USBDeviceTasks();
  3334  0038B8  EC05  F01A         	call	_USBDeviceTasks	;wreg free
  3335                           
  3336                           ;main.c: 93: APP_DeviceMSDTasks();
  3337  0038BC  EC7C  F03F         	call	_APP_DeviceMSDTasks	;wreg free
  3338                           
  3339                           ;main.c: 94: APP_DeviceCustomHIDTasks();
  3340  0038C0  ECE8  F02C         	call	_APP_DeviceCustomHIDTasks	;wreg free
  3341                           
  3342                           ;main.c: 98: timer_pseudo_isr();
  3343  0038C4  ECB4  F03C         	call	_timer_pseudo_isr	;wreg free
  3344                           
  3345                           ;main.c: 101: if(PORTDbits.RD2)
  3346  0038C8  A483               	btfss	3971,2,c	;volatile
  3347  0038CA  D039               	goto	l888
  3348                           
  3349                           ;main.c: 102: {;main.c: 105: bytes_transmitted = TXADDRH;
  3350  0038CC  CF6A F0F8          	movff	3946,main@bytes_transmitted	;volatile
  3351  0038D0  0100               	movlb	0	; () banked
  3352  0038D2  6BF9               	clrf	(main@bytes_transmitted+1)& (0+255),b
  3353                           
  3354                           ; BSR set to: 0
  3355                           ;main.c: 106: bytes_transmitted <<= 8;
  3356  0038D4  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3357  0038D6  6FF9               	movwf	(main@bytes_transmitted+1)& (0+255),b
  3358  0038D8  6BF8               	clrf	main@bytes_transmitted& (0+255),b
  3359                           
  3360                           ; BSR set to: 0
  3361                           ;main.c: 107: bytes_transmitted |= TXADDRL;
  3362  0038DA  506B               	movf	3947,w,c	;volatile
  3363  0038DC  13F8               	iorwf	main@bytes_transmitted& (0+255),f,b
  3364                           
  3365                           ; BSR set to: 0
  3366                           ;main.c: 108: --bytes_transmitted;
  3367  0038DE  07F8               	decf	main@bytes_transmitted& (0+255),f,b
  3368  0038E0  A0D8               	btfss	status,0,c
  3369  0038E2  07F9               	decf	(main@bytes_transmitted+1)& (0+255),f,b
  3370                           
  3371                           ; BSR set to: 0
  3372                           ;main.c: 109: bytes_transmitted -= (uint16_t) spi_get_external_tx_buffer();
  3373  0038E4  ECBD  F03F         	call	_spi_get_external_tx_buffer	;wreg free
  3374  0038E8  5001               	movf	?_spi_get_external_tx_buffer,w,c
  3375  0038EA  0100               	movlb	0	; () banked
  3376  0038EC  5FF8               	subwf	main@bytes_transmitted& (0+255),f,b
  3377  0038EE  5002               	movf	?_spi_get_external_tx_buffer+1,w,c
  3378  0038F0  5BF9               	subwfb	(main@bytes_transmitted+1)& (0+255),f,b
  3379                           
  3380                           ; BSR set to: 0
  3381                           ;main.c: 112: if(bytes_transmitted>0)
  3382  0038F2  51F8               	movf	main@bytes_transmitted& (0+255),w,b
  3383  0038F4  11F9               	iorwf	(main@bytes_transmitted+1)& (0+255),w,b
  3384  0038F6  B4D8               	btfsc	status,2,c
  3385  0038F8  D022               	goto	l888
  3386                           
  3387                           ; BSR set to: 0
  3388                           ;main.c: 113: {;main.c: 115: DMACON1bits.DMAEN = 0;
  3389  0038FA  9088               	bcf	3976,0,c	;volatile
  3390                           
  3391                           ; BSR set to: 0
  3392                           ;main.c: 118: api_prepare(rx_buffer, tx_buffer);
  3393  0038FC  C0FA  F0EE         	movff	main@rx_buffer,api_prepare@inBuffer
  3394  003900  C0FB  F0EF         	movff	main@rx_buffer+1,api_prepare@inBuffer+1
  3395  003904  C0FC  F0F0         	movff	main@tx_buffer,api_prepare@outBuffer
  3396  003908  C0FD  F0F1         	movff	main@tx_buffer+1,api_prepare@outBuffer+1
  3397  00390C  EC79  F01F         	call	_api_prepare	;wreg free
  3398                           
  3399                           ;main.c: 119: api_parse(rx_buffer, (uint8_t) bytes_transmitted);
  3400  003910  C0FA  F0E8         	movff	main@rx_buffer,api_parse@inBuffer
  3401  003914  C0FB  F0E9         	movff	main@rx_buffer+1,api_parse@inBuffer+1
  3402  003918  C0F8  F0EA         	movff	main@bytes_transmitted,api_parse@receivedDataLength
  3403  00391C  EC4E  F027         	call	_api_parse	;wreg free
  3404                           
  3405                           ;main.c: 122: TXADDRH = ((unsigned char)((((uint16_t) tx_buffer)>>8)&0xFF));
  3406  003920  0100               	movlb	0	; () banked
  3407  003922  51FD               	movf	(main@tx_buffer+1)& (0+255),w,b
  3408  003924  6E6A               	movwf	3946,c	;volatile
  3409                           
  3410                           ; BSR set to: 0
  3411                           ;main.c: 123: TXADDRL = ((unsigned char)(((uint16_t) tx_buffer)&0xFF));
  3412  003926  C0FC  FF6B         	movff	main@tx_buffer,3947	;volatile
  3413                           
  3414                           ; BSR set to: 0
  3415                           ;main.c: 126: RXADDRH = ((unsigned char)((((uint16_t) rx_buffer)>>8)&0xFF));
  3416  00392A  51FB               	movf	(main@rx_buffer+1)& (0+255),w,b
  3417  00392C  6E68               	movwf	3944,c	;volatile
  3418                           
  3419                           ; BSR set to: 0
  3420                           ;main.c: 127: RXADDRL = ((unsigned char)(((uint16_t) rx_buffer)&0xFF));
  3421  00392E  C0FA  FF69         	movff	main@rx_buffer,3945	;volatile
  3422                           
  3423                           ; BSR set to: 0
  3424                           ;main.c: 130: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
  3425  003932  0E00               	movlw	0
  3426  003934  6E66               	movwf	3942,c	;volatile
  3427                           
  3428                           ; BSR set to: 0
  3429                           ;main.c: 131: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
  3430  003936  0E3F               	movlw	63
  3431  003938  6E67               	movwf	3943,c	;volatile
  3432                           
  3433                           ; BSR set to: 0
  3434                           ;main.c: 134: PIR3bits.SSP2IF = 0;
  3435  00393A  9EA4               	bcf	4004,7,c	;volatile
  3436                           
  3437                           ; BSR set to: 0
  3438                           ;main.c: 136: DMACON1bits.DMAEN = 1;
  3439  00393C  8088               	bsf	3976,0,c	;volatile
  3440  00393E                     l888:
  3441                           
  3442                           ;main.c: 137: };main.c: 138: };main.c: 142: if(!os.done)
  3443                           
  3444                           ; BSR set to: 0
  3445                           
  3446                           ; BSR set to: 0
  3447  00393E  0100               	movlb	0	; () banked
  3448  003940  5163               	movf	(_os+3)& (0+255),w,b	;volatile
  3449  003942  A4D8               	btfss	status,2,c
  3450  003944  D7B8               	goto	l886
  3451                           
  3452                           ; BSR set to: 0
  3453                           ;main.c: 143: {;main.c: 145: ui_run();
  3454  003946  ECA2  F021         	call	_ui_run	;wreg free
  3455                           
  3456                           ;main.c: 150: switch(os.timeSlot&0b00000111)
  3457  00394A  D02A               	goto	l890
  3458  00394C                     
  3459                           ;main.c: 153: bootloader_run(0);
  3460  00394C  0E00               	movlw	0
  3461  00394E  ECE1  F037         	call	_bootloader_run
  3462                           
  3463                           ;main.c: 154: break;
  3464  003952  D048               	goto	l892
  3465  003954                     
  3466                           ;main.c: 157: bootloader_run(1);
  3467  003954  0E01               	movlw	1
  3468  003956  ECE1  F037         	call	_bootloader_run
  3469                           
  3470                           ;main.c: 158: break;
  3471  00395A  D044               	goto	l892
  3472  00395C                     
  3473                           ;main.c: 161: bootloader_run(2);
  3474  00395C  0E02               	movlw	2
  3475  00395E  ECE1  F037         	call	_bootloader_run
  3476                           
  3477                           ;main.c: 162: break;
  3478  003962  D040               	goto	l892
  3479  003964                     
  3480                           ;main.c: 165: bootloader_run(3);
  3481  003964  0E03               	movlw	3
  3482  003966  ECE1  F037         	call	_bootloader_run
  3483                           
  3484                           ;main.c: 166: break;
  3485  00396A  D03C               	goto	l892
  3486  00396C                     
  3487                           ;main.c: 169: bootloader_run(4);
  3488  00396C  0E04               	movlw	4
  3489  00396E  ECE1  F037         	call	_bootloader_run
  3490                           
  3491                           ;main.c: 170: break;
  3492  003972  D038               	goto	l892
  3493  003974                     
  3494                           ;main.c: 173: bootloader_run(5);
  3495  003974  0E05               	movlw	5
  3496  003976  ECE1  F037         	call	_bootloader_run
  3497                           
  3498                           ;main.c: 174: break;
  3499  00397A  D034               	goto	l892
  3500  00397C                     
  3501                           ;main.c: 177: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3502  00397C  EC14  F040         	call	_ui_get_status	;wreg free
  3503  003980  0A05               	xorlw	5
  3504  003982  A4D8               	btfss	status,2,c
  3505  003984  D02F               	goto	l892
  3506                           
  3507                           ;main.c: 178: {;main.c: 179: display_prepare(os.display_mode);
  3508  003986  0100               	movlb	0	; () banked
  3509  003988  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3510  00398A  ECE8  F028         	call	_display_prepare
  3511                           
  3512                           ;main.c: 180: };main.c: 181: break;
  3513  00398E  D02A               	goto	l892
  3514  003990                     
  3515                           ;main.c: 184: if(ui_get_status()==USER_INTERFACE_STATUS_ON)
  3516  003990  EC14  F040         	call	_ui_get_status	;wreg free
  3517  003994  0A05               	xorlw	5
  3518  003996  A4D8               	btfss	status,2,c
  3519  003998  D025               	goto	l892
  3520                           
  3521                           ;main.c: 185: {;main.c: 186: display_update();
  3522  00399A  ECB7  F035         	call	_display_update	;wreg free
  3523                           
  3524                           ;main.c: 189: }
  3525                           
  3526                           ;main.c: 187: };main.c: 188: break;
  3527  00399E  D022               	goto	l892
  3528  0039A0                     l890:
  3529  0039A0  0100               	movlb	0	; () banked
  3530  0039A2  5162               	movf	(_os+2)& (0+255),w,b	;volatile
  3531  0039A4  0B07               	andlw	7
  3532  0039A6  6E5E               	movwf	??_main& (0+255),c
  3533  0039A8  6A5F               	clrf	(??_main+1)& (0+255),c
  3534                           
  3535                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3536                           ; Switch size 1, requested type "space"
  3537                           ; Number of cases is 1, Range of values is 0 to 0
  3538                           ; switch strategies available:
  3539                           ; Name         Instructions Cycles
  3540                           ; simple_byte            4     3 (average)
  3541                           ;	Chosen strategy is simple_byte
  3542  0039AA  505F               	movf	??_main+1,w,c
  3543  0039AC  0A00               	xorlw	0	; case 0
  3544  0039AE  A4D8               	btfss	status,2,c
  3545  0039B0  D019               	goto	l892
  3546                           
  3547                           ; BSR set to: 0
  3548                           ; Switch size 1, requested type "space"
  3549                           ; Number of cases is 8, Range of values is 0 to 7
  3550                           ; switch strategies available:
  3551                           ; Name         Instructions Cycles
  3552                           ; simple_byte           25    13 (average)
  3553                           ;	Chosen strategy is simple_byte
  3554  0039B2  505E               	movf	??_main,w,c
  3555  0039B4  0A00               	xorlw	0	; case 0
  3556  0039B6  B4D8               	btfsc	status,2,c
  3557  0039B8  D7C9               	goto	l891
  3558  0039BA  0A01               	xorlw	1	; case 1
  3559  0039BC  B4D8               	btfsc	status,2,c
  3560  0039BE  D7CA               	goto	l893
  3561  0039C0  0A03               	xorlw	3	; case 2
  3562  0039C2  B4D8               	btfsc	status,2,c
  3563  0039C4  D7CB               	goto	l894
  3564  0039C6  0A01               	xorlw	1	; case 3
  3565  0039C8  B4D8               	btfsc	status,2,c
  3566  0039CA  D7CC               	goto	l895
  3567  0039CC  0A07               	xorlw	7	; case 4
  3568  0039CE  B4D8               	btfsc	status,2,c
  3569  0039D0  D7CD               	goto	l896
  3570  0039D2  0A01               	xorlw	1	; case 5
  3571  0039D4  B4D8               	btfsc	status,2,c
  3572  0039D6  D7CE               	goto	l897
  3573  0039D8  0A03               	xorlw	3	; case 6
  3574  0039DA  B4D8               	btfsc	status,2,c
  3575  0039DC  D7CF               	goto	l898
  3576  0039DE  0A01               	xorlw	1	; case 7
  3577  0039E0  B4D8               	btfsc	status,2,c
  3578  0039E2  D7D6               	goto	l900
  3579  0039E4                     l892:
  3580                           
  3581                           ;main.c: 190: os.done = 1;
  3582                           
  3583                           ; BSR set to: 0
  3584  0039E4  0E01               	movlw	1
  3585  0039E6  0100               	movlb	0	; () banked
  3586  0039E8  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  3587                           
  3588                           ; BSR set to: 0
  3589                           
  3590                           ; BSR set to: 0
  3591  0039EA  D765               	goto	l886
  3592  0039EC                     __end_of_main:
  3593                           	opt stack 0
  3594                           tblptru	equ	0xFF8
  3595                           tblptrh	equ	0xFF7
  3596                           tblptrl	equ	0xFF6
  3597                           tablat	equ	0xFF5
  3598                           postinc0	equ	0xFEE
  3599                           wreg	equ	0xFE8
  3600                           postdec1	equ	0xFE5
  3601                           fsr1h	equ	0xFE2
  3602                           fsr1l	equ	0xFE1
  3603                           status	equ	0xFD8
  3604                           
  3605 ;; *************** function _ui_run *****************
  3606 ;; Defined at:
  3607 ;;		line 101 in file "ui.c"
  3608 ;; Parameters:    Size  Location     Type
  3609 ;;		None
  3610 ;; Auto vars:     Size  Location     Type
  3611 ;;		None
  3612 ;; Return value:  Size  Location     Type
  3613 ;;                  1    wreg      void 
  3614 ;; Registers used:
  3615 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3616 ;; Tracked objects:
  3617 ;;		On entry : 0/0
  3618 ;;		On exit  : 0/0
  3619 ;;		Unchanged: 0/0
  3620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3621 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3622 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3623 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3624 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3625 ;;Total ram usage:        0 bytes
  3626 ;; Hardware stack levels used:    1
  3627 ;; Hardware stack levels required when called:    3
  3628 ;; This function calls:
  3629 ;;		__ui_encoder
  3630 ;;		_i2c_digipot_backlight
  3631 ;;		_i2c_digipot_reset_off
  3632 ;;		_i2c_digipot_reset_on
  3633 ;;		_i2c_display_send_init_sequence
  3634 ;;		_system_encoder_enable
  3635 ;;		_ui_init
  3636 ;; This function is called by:
  3637 ;;		_main
  3638 ;; This function uses a non-reentrant model
  3639 ;;
  3640                           
  3641                           	psect	text1
  3642  004344                     __ptext1:
  3643                           	opt stack 0
  3644  004344                     _ui_run:
  3645                           	opt stack 27
  3646                           
  3647                           ;ui.c: 103: switch(userInterfaceStatus)
  3648                           
  3649                           ; BSR set to: 0
  3650                           ;incstack = 0
  3651  004344  D06D               	goto	l1305
  3652  004346                     
  3653                           ;ui.c: 107: if (os.buttonCount!=0)
  3654  004346  0100               	movlb	0	; () banked
  3655  004348  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3656  00434A  B4D8               	btfsc	status,2,c
  3657  00434C  0012               	return	
  3658                           
  3659                           ; BSR set to: 0
  3660                           ;ui.c: 108: {;ui.c: 109: ui_init();
  3661  00434E  EC72  F03F         	call	_ui_init	;wreg free
  3662                           
  3663                           ;ui.c: 110: os.buttonCount = 0;
  3664  004352  0E00               	movlw	0
  3665  004354  0100               	movlb	0	; () banked
  3666  004356  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  3667                           
  3668                           ; BSR set to: 0
  3669                           ;ui.c: 111: };ui.c: 112: break;
  3670  004358  0012               	return	
  3671  00435A                     l1309:
  3672                           
  3673                           ; BSR set to: 0
  3674                           ;ui.c: 116: LATDbits.LD0 = 0;
  3675  00435A  908C               	bcf	3980,0,c	;volatile
  3676                           
  3677                           ; BSR set to: 0
  3678                           ;ui.c: 118: system_ui_inactive_count = 0;
  3679  00435C  0E00               	movlw	0
  3680  00435E  0101               	movlb	1	; () banked
  3681  004360  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3682  004362  0E00               	movlw	0
  3683  004364  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3684                           
  3685                           ;ui.c: 119: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_2;
  3686  004366  0E02               	movlw	2
  3687  004368  0100               	movlb	0	; () banked
  3688  00436A  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3689                           
  3690                           ;ui.c: 120: break;
  3691  00436C  0012               	return	
  3692  00436E                     
  3693                           ; BSR set to: 0
  3694                           ;ui.c: 124: i2c_digipot_reset_on();
  3695                           
  3696                           ; BSR set to: 0
  3697  00436E  ECB8  F03E         	call	_i2c_digipot_reset_on	;wreg free
  3698                           
  3699                           ;ui.c: 126: system_ui_inactive_count = 0;
  3700  004372  0E00               	movlw	0
  3701  004374  0101               	movlb	1	; () banked
  3702  004376  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3703  004378  0E00               	movlw	0
  3704  00437A  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3705                           
  3706                           ; BSR set to: 1
  3707                           ;ui.c: 127: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_3;
  3708  00437C  0E03               	movlw	3
  3709  00437E  0100               	movlb	0	; () banked
  3710  004380  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3711                           
  3712                           ;ui.c: 128: break;
  3713  004382  0012               	return	
  3714  004384                     
  3715                           ; BSR set to: 0
  3716                           ;ui.c: 131: ++system_ui_inactive_count;
  3717                           
  3718                           ; BSR set to: 0
  3719  004384  0101               	movlb	1	; () banked
  3720  004386  4B6E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3721  004388  2B6F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3722                           
  3723                           ; BSR set to: 1
  3724                           ;ui.c: 133: if (system_ui_inactive_count>3)
  3725  00438A  516F               	movf	(_system_ui_inactive_count+1)& (0+255),w,b
  3726  00438C  E104               	bnz	u11600
  3727  00438E  0E04               	movlw	4
  3728  004390  5D6E               	subwf	_system_ui_inactive_count& (0+255),w,b
  3729  004392  A0D8               	btfss	status,0,c
  3730  004394  0012               	return	
  3731  004396                     u11600:
  3732                           
  3733                           ; BSR set to: 1
  3734                           ;ui.c: 134: {;ui.c: 135: i2c_digipot_reset_off();
  3735  004396  ECC9  F03E         	call	_i2c_digipot_reset_off	;wreg free
  3736                           
  3737                           ;ui.c: 136: system_ui_inactive_count = 0;
  3738  00439A  0E00               	movlw	0
  3739  00439C  0101               	movlb	1	; () banked
  3740  00439E  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3741  0043A0  0E00               	movlw	0
  3742  0043A2  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3743                           
  3744                           ; BSR set to: 1
  3745                           ;ui.c: 137: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_4;
  3746  0043A4  0E04               	movlw	4
  3747  0043A6  0100               	movlb	0	; () banked
  3748  0043A8  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3749                           
  3750                           ; BSR set to: 0
  3751                           ;ui.c: 138: };ui.c: 139: break;
  3752  0043AA  0012               	return	
  3753  0043AC                     
  3754                           ; BSR set to: 0
  3755                           ;ui.c: 143: i2c_display_send_init_sequence();
  3756                           
  3757                           ; BSR set to: 0
  3758  0043AC  ECC7  F03D         	call	_i2c_display_send_init_sequence	;wreg free
  3759                           
  3760                           ;ui.c: 145: i2c_digipot_backlight(150);
  3761  0043B0  0E96               	movlw	150
  3762  0043B2  EC5C  F03E         	call	_i2c_digipot_backlight
  3763                           
  3764                           ;ui.c: 147: system_encoder_enable();
  3765  0043B6  EC98  F03F         	call	_system_encoder_enable	;wreg free
  3766                           
  3767                           ;ui.c: 149: system_ui_inactive_count = 0;
  3768  0043BA  0E00               	movlw	0
  3769  0043BC  0101               	movlb	1	; () banked
  3770  0043BE  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3771  0043C0  0E00               	movlw	0
  3772  0043C2  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3773                           
  3774                           ; BSR set to: 1
  3775                           ;ui.c: 150: startup_timer = 0;
  3776  0043C4  0E00               	movlw	0
  3777  0043C6  6F6D               	movwf	(_startup_timer+1)& (0+255),b
  3778  0043C8  0E00               	movlw	0
  3779  0043CA  6F6C               	movwf	_startup_timer& (0+255),b
  3780                           
  3781                           ; BSR set to: 1
  3782                           ;ui.c: 151: userInterfaceStatus = USER_INTERFACE_STATUS_ON;
  3783  0043CC  0E05               	movlw	5
  3784  0043CE  0100               	movlb	0	; () banked
  3785  0043D0  6F98               	movwf	_userInterfaceStatus& (0+255),b
  3786                           
  3787                           ;ui.c: 152: break;
  3788  0043D2  0012               	return	
  3789  0043D4                     
  3790                           ; BSR set to: 0
  3791                           ;ui.c: 155: if(os.display_mode==DISPLAY_MODE_BOOTLOADER_START)
  3792                           
  3793                           ; BSR set to: 0
  3794  0043D4  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  3795  0043D6  A4D8               	btfss	status,2,c
  3796  0043D8  D00B               	goto	l1316
  3797                           
  3798                           ; BSR set to: 0
  3799                           ;ui.c: 156: {;ui.c: 157: ++startup_timer;
  3800  0043DA  0101               	movlb	1	; () banked
  3801  0043DC  4B6C               	infsnz	_startup_timer& (0+255),f,b
  3802  0043DE  2B6D               	incf	(_startup_timer+1)& (0+255),f,b
  3803                           
  3804                           ; BSR set to: 1
  3805                           ;ui.c: 158: if(startup_timer==250)
  3806  0043E0  0EFA               	movlw	250
  3807  0043E2  196C               	xorwf	_startup_timer& (0+255),w,b
  3808  0043E4  116D               	iorwf	(_startup_timer+1)& (0+255),w,b
  3809  0043E6  A4D8               	btfss	status,2,c
  3810  0043E8  D003               	goto	l1316
  3811                           
  3812                           ; BSR set to: 1
  3813                           ;ui.c: 159: {;ui.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARCH;
  3814  0043EA  0E10               	movlw	16
  3815  0043EC  0100               	movlb	0	; () banked
  3816  0043EE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  3817  0043F0                     l1316:
  3818                           
  3819                           ;ui.c: 161: };ui.c: 162: };ui.c: 163: if (os.encoderCount==0 && os.buttonCount==0)
  3820                           
  3821                           ; BSR set to: 0
  3822  0043F0  0100               	movlb	0	; () banked
  3823  0043F2  5160               	movf	_os& (0+255),w,b	;volatile
  3824  0043F4  A4D8               	btfss	status,2,c
  3825  0043F6  D00C               	goto	l1317
  3826                           
  3827                           ; BSR set to: 0
  3828  0043F8  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  3829  0043FA  A4D8               	btfss	status,2,c
  3830  0043FC  D009               	goto	l1317
  3831                           
  3832                           ; BSR set to: 0
  3833                           ;ui.c: 164: {;ui.c: 165: if(system_ui_inactive_count<0xFFFF)
  3834  0043FE  0101               	movlb	1	; () banked
  3835  004400  296E               	incf	_system_ui_inactive_count& (0+255),w,b
  3836  004402  E103               	bnz	u11650
  3837  004404  296F               	incf	(_system_ui_inactive_count+1)& (0+255),w,b
  3838  004406  B4D8               	btfsc	status,2,c
  3839  004408  0012               	return	
  3840  00440A                     u11650:
  3841                           
  3842                           ; BSR set to: 1
  3843                           ;ui.c: 166: ++system_ui_inactive_count;
  3844  00440A  4B6E               	infsnz	_system_ui_inactive_count& (0+255),f,b
  3845  00440C  2B6F               	incf	(_system_ui_inactive_count+1)& (0+255),f,b
  3846                           
  3847                           ; BSR set to: 1
  3848                           ;ui.c: 167: }
  3849  00440E  0012               	return	
  3850  004410                     l1317:
  3851                           
  3852                           ;ui.c: 168: else;ui.c: 169: {;ui.c: 170: system_ui_inactive_count = 0;
  3853                           
  3854                           ; BSR set to: 1
  3855  004410  0E00               	movlw	0
  3856  004412  0101               	movlb	1	; () banked
  3857  004414  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  3858  004416  0E00               	movlw	0
  3859  004418  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  3860                           
  3861                           ; BSR set to: 1
  3862                           ;ui.c: 171: _ui_encoder();
  3863  00441A  EC31  F02B         	call	__ui_encoder	;wreg free
  3864                           
  3865                           ;ui.c: 174: }
  3866                           
  3867                           ;ui.c: 172: };ui.c: 173: break;
  3868  00441E  0012               	return	
  3869  004420                     l1305:
  3870  004420  0100               	movlb	0	; () banked
  3871  004422  5198               	movf	_userInterfaceStatus& (0+255),w,b
  3872                           
  3873                           ; Switch size 1, requested type "space"
  3874                           ; Number of cases is 6, Range of values is 0 to 5
  3875                           ; switch strategies available:
  3876                           ; Name         Instructions Cycles
  3877                           ; simple_byte           19    10 (average)
  3878                           ;	Chosen strategy is simple_byte
  3879  004424  0A00               	xorlw	0	; case 0
  3880  004426  B4D8               	btfsc	status,2,c
  3881  004428  D78E               	goto	l1306
  3882  00442A  0A01               	xorlw	1	; case 1
  3883  00442C  B4D8               	btfsc	status,2,c
  3884  00442E  D795               	goto	l1309
  3885  004430  0A03               	xorlw	3	; case 2
  3886  004432  B4D8               	btfsc	status,2,c
  3887  004434  D79C               	goto	l1310
  3888  004436  0A01               	xorlw	1	; case 3
  3889  004438  B4D8               	btfsc	status,2,c
  3890  00443A  D7A4               	goto	l1311
  3891  00443C  0A07               	xorlw	7	; case 4
  3892  00443E  B4D8               	btfsc	status,2,c
  3893  004440  D7B5               	goto	l1313
  3894  004442  0A01               	xorlw	1	; case 5
  3895  004444  A4D8               	btfss	status,2,c
  3896  004446  0012               	return	
  3897  004448  D7C5               	goto	l1314
  3898  00444A                     __end_of_ui_run:
  3899                           	opt stack 0
  3900                           tblptru	equ	0xFF8
  3901                           tblptrh	equ	0xFF7
  3902                           tblptrl	equ	0xFF6
  3903                           tablat	equ	0xFF5
  3904                           postinc0	equ	0xFEE
  3905                           wreg	equ	0xFE8
  3906                           postdec1	equ	0xFE5
  3907                           fsr1h	equ	0xFE2
  3908                           fsr1l	equ	0xFE1
  3909                           status	equ	0xFD8
  3910                           
  3911 ;; *************** function _system_encoder_enable *****************
  3912 ;; Defined at:
  3913 ;;		line 95 in file "os.c"
  3914 ;; Parameters:    Size  Location     Type
  3915 ;;		None
  3916 ;; Auto vars:     Size  Location     Type
  3917 ;;		None
  3918 ;; Return value:  Size  Location     Type
  3919 ;;                  1    wreg      void 
  3920 ;; Registers used:
  3921 ;;		wreg, status,2
  3922 ;; Tracked objects:
  3923 ;;		On entry : 0/0
  3924 ;;		On exit  : 0/0
  3925 ;;		Unchanged: 0/0
  3926 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3927 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3928 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3929 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3930 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  3931 ;;Total ram usage:        0 bytes
  3932 ;; Hardware stack levels used:    1
  3933 ;; This function calls:
  3934 ;;		Nothing
  3935 ;; This function is called by:
  3936 ;;		_ui_run
  3937 ;; This function uses a non-reentrant model
  3938 ;;
  3939                           
  3940                           	psect	text2
  3941  007F30                     __ptext2:
  3942                           	opt stack 0
  3943  007F30                     _system_encoder_enable:
  3944                           	opt stack 29
  3945                           
  3946                           ;os.c: 98: INTCON3bits.INT2IF = 0;
  3947                           
  3948                           ;incstack = 0
  3949  007F30  92F0               	bcf	intcon3,1,c	;volatile
  3950                           
  3951                           ;os.c: 99: INTCON3bits.INT3IF = 0;
  3952  007F32  94F0               	bcf	intcon3,2,c	;volatile
  3953                           
  3954                           ;os.c: 102: os.encoderCount = 0;
  3955  007F34  0E00               	movlw	0
  3956  007F36  0100               	movlb	0	; () banked
  3957  007F38  6F60               	movwf	_os& (0+255),b	;volatile
  3958                           
  3959                           ; BSR set to: 0
  3960                           ;os.c: 105: INTCON3bits.INT2IE = 1;
  3961  007F3A  88F0               	bsf	intcon3,4,c	;volatile
  3962                           
  3963                           ; BSR set to: 0
  3964                           ;os.c: 106: INTCON3bits.INT3IE = 1;
  3965  007F3C  8AF0               	bsf	intcon3,5,c	;volatile
  3966                           
  3967                           ; BSR set to: 0
  3968  007F3E  0012               	return		;funcret
  3969  007F40                     __end_of_system_encoder_enable:
  3970                           	opt stack 0
  3971                           tblptru	equ	0xFF8
  3972                           tblptrh	equ	0xFF7
  3973                           tblptrl	equ	0xFF6
  3974                           tablat	equ	0xFF5
  3975                           intcon3	equ	0xFF0
  3976                           postinc0	equ	0xFEE
  3977                           wreg	equ	0xFE8
  3978                           postdec1	equ	0xFE5
  3979                           fsr1h	equ	0xFE2
  3980                           fsr1l	equ	0xFE1
  3981                           status	equ	0xFD8
  3982                           
  3983 ;; *************** function _i2c_display_send_init_sequence *****************
  3984 ;; Defined at:
  3985 ;;		line 199 in file "i2c.c"
  3986 ;; Parameters:    Size  Location     Type
  3987 ;;		None
  3988 ;; Auto vars:     Size  Location     Type
  3989 ;;  init_sequenc    9   10[COMRAM] unsigned char [9]
  3990 ;; Return value:  Size  Location     Type
  3991 ;;                  1    wreg      void 
  3992 ;; Registers used:
  3993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3994 ;; Tracked objects:
  3995 ;;		On entry : 0/0
  3996 ;;		On exit  : 0/0
  3997 ;;		Unchanged: 0/0
  3998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  3999 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4000 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4001 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4002 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4003 ;;Total ram usage:        9 bytes
  4004 ;; Hardware stack levels used:    1
  4005 ;; Hardware stack levels required when called:    2
  4006 ;; This function calls:
  4007 ;;		__i2c_write
  4008 ;;		_i2c_set_frequency
  4009 ;; This function is called by:
  4010 ;;		_ui_run
  4011 ;; This function uses a non-reentrant model
  4012 ;;
  4013                           
  4014                           	psect	text3
  4015  007B8E                     __ptext3:
  4016                           	opt stack 0
  4017  007B8E                     _i2c_display_send_init_sequence:
  4018                           	opt stack 27
  4019                           
  4020                           ;i2c.c: 201: uint8_t init_sequence[9] = {;i2c.c: 202: 0x3A,;i2c.c: 204: 0b00011110,;i2c.
      +                          c: 205: 0x39,;i2c.c: 207: 0b00001100,;i2c.c: 208: 0x74,;i2c.c: 209: 0b1011100,;i2c.c: 21
      +                          0: 0x6d,;i2c.c: 211: 0x0c,;i2c.c: 212: 0x01;i2c.c: 213: };
  4021                           
  4022                           ; BSR set to: 0
  4023                           ;incstack = 0
  4024  007B8E  EE22  F0F2         	lfsr	2,i2c_display_send_init_sequence@F6800
  4025  007B92  EE10  F00B         	lfsr	1,i2c_display_send_init_sequence@init_sequence
  4026  007B96  0E08               	movlw	8
  4027  007B98                     u10481:
  4028  007B98  CFDB FFE3          	movff	plusw2,plusw1
  4029  007B9C  06E8               	decf	wreg,f,c
  4030  007B9E  E2FC               	bc	u10481
  4031                           
  4032                           ;i2c.c: 216: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4033  007BA0  0E00               	movlw	0
  4034  007BA2  EC09  F03E         	call	_i2c_set_frequency
  4035                           
  4036                           ;i2c.c: 219: _i2c_write(0b01111000, &init_sequence[0], 9);
  4037  007BA6  0E0B               	movlw	low i2c_display_send_init_sequence@init_sequence
  4038  007BA8  6E06               	movwf	__i2c_write@data,c
  4039  007BAA  0E00               	movlw	high i2c_display_send_init_sequence@init_sequence
  4040  007BAC  6E07               	movwf	__i2c_write@data+1,c
  4041  007BAE  0E09               	movlw	9
  4042  007BB0  6E08               	movwf	__i2c_write@length,c
  4043  007BB2  0E78               	movlw	120
  4044  007BB4  ECDD  F03A         	call	__i2c_write
  4045  007BB8  0012               	return		;funcret
  4046  007BBA                     __end_of_i2c_display_send_init_sequence:
  4047                           	opt stack 0
  4048                           tblptru	equ	0xFF8
  4049                           tblptrh	equ	0xFF7
  4050                           tblptrl	equ	0xFF6
  4051                           tablat	equ	0xFF5
  4052                           intcon3	equ	0xFF0
  4053                           postinc0	equ	0xFEE
  4054                           wreg	equ	0xFE8
  4055                           postdec1	equ	0xFE5
  4056                           plusw1	equ	0xFE3
  4057                           fsr1h	equ	0xFE2
  4058                           fsr1l	equ	0xFE1
  4059                           plusw2	equ	0xFDB
  4060                           status	equ	0xFD8
  4061                           
  4062 ;; *************** function _i2c_digipot_reset_on *****************
  4063 ;; Defined at:
  4064 ;;		line 302 in file "i2c.c"
  4065 ;; Parameters:    Size  Location     Type
  4066 ;;		None
  4067 ;; Auto vars:     Size  Location     Type
  4068 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4069 ;; Return value:  Size  Location     Type
  4070 ;;                  1    wreg      void 
  4071 ;; Registers used:
  4072 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4073 ;; Tracked objects:
  4074 ;;		On entry : 0/0
  4075 ;;		On exit  : 0/0
  4076 ;;		Unchanged: 0/0
  4077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4078 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4079 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4080 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4081 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4082 ;;Total ram usage:        2 bytes
  4083 ;; Hardware stack levels used:    1
  4084 ;; Hardware stack levels required when called:    2
  4085 ;; This function calls:
  4086 ;;		__i2c_write
  4087 ;;		_i2c_set_frequency
  4088 ;; This function is called by:
  4089 ;;		_ui_run
  4090 ;; This function uses a non-reentrant model
  4091 ;;
  4092                           
  4093                           	psect	text4
  4094  007D70                     __ptext4:
  4095                           	opt stack 0
  4096  007D70                     _i2c_digipot_reset_on:
  4097                           	opt stack 27
  4098                           
  4099                           ;i2c.c: 304: uint8_t data_array[2];;i2c.c: 305: data_array[0] = 0x10 | 0x00;
  4100                           
  4101                           ;incstack = 0
  4102  007D70  0E10               	movlw	16
  4103  007D72  6E0B               	movwf	i2c_digipot_reset_on@data_array,c
  4104                           
  4105                           ;i2c.c: 307: data_array[1] = 0x00;
  4106  007D74  0E00               	movlw	0
  4107  007D76  6E0C               	movwf	i2c_digipot_reset_on@data_array+1,c
  4108                           
  4109                           ;i2c.c: 310: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4110  007D78  0E02               	movlw	2
  4111  007D7A  EC09  F03E         	call	_i2c_set_frequency
  4112                           
  4113                           ;i2c.c: 312: _i2c_write(0b01011100, &data_array[0], 2);
  4114  007D7E  0E0B               	movlw	low i2c_digipot_reset_on@data_array
  4115  007D80  6E06               	movwf	__i2c_write@data,c
  4116  007D82  0E00               	movlw	high i2c_digipot_reset_on@data_array
  4117  007D84  6E07               	movwf	__i2c_write@data+1,c
  4118  007D86  0E02               	movlw	2
  4119  007D88  6E08               	movwf	__i2c_write@length,c
  4120  007D8A  0E5C               	movlw	92
  4121  007D8C  ECDD  F03A         	call	__i2c_write
  4122  007D90  0012               	return		;funcret
  4123  007D92                     __end_of_i2c_digipot_reset_on:
  4124                           	opt stack 0
  4125                           tblptru	equ	0xFF8
  4126                           tblptrh	equ	0xFF7
  4127                           tblptrl	equ	0xFF6
  4128                           tablat	equ	0xFF5
  4129                           intcon3	equ	0xFF0
  4130                           postinc0	equ	0xFEE
  4131                           wreg	equ	0xFE8
  4132                           postdec1	equ	0xFE5
  4133                           plusw1	equ	0xFE3
  4134                           fsr1h	equ	0xFE2
  4135                           fsr1l	equ	0xFE1
  4136                           plusw2	equ	0xFDB
  4137                           status	equ	0xFD8
  4138                           
  4139 ;; *************** function _i2c_digipot_reset_off *****************
  4140 ;; Defined at:
  4141 ;;		line 315 in file "i2c.c"
  4142 ;; Parameters:    Size  Location     Type
  4143 ;;		None
  4144 ;; Auto vars:     Size  Location     Type
  4145 ;;  data_array      2   10[COMRAM] unsigned char [2]
  4146 ;; Return value:  Size  Location     Type
  4147 ;;                  1    wreg      void 
  4148 ;; Registers used:
  4149 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4150 ;; Tracked objects:
  4151 ;;		On entry : 0/0
  4152 ;;		On exit  : 0/0
  4153 ;;		Unchanged: 0/0
  4154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4155 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4156 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4157 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4158 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4159 ;;Total ram usage:        2 bytes
  4160 ;; Hardware stack levels used:    1
  4161 ;; Hardware stack levels required when called:    2
  4162 ;; This function calls:
  4163 ;;		__i2c_write
  4164 ;;		_i2c_set_frequency
  4165 ;; This function is called by:
  4166 ;;		_ui_run
  4167 ;; This function uses a non-reentrant model
  4168 ;;
  4169                           
  4170                           	psect	text5
  4171  007D92                     __ptext5:
  4172                           	opt stack 0
  4173  007D92                     _i2c_digipot_reset_off:
  4174                           	opt stack 27
  4175                           
  4176                           ;i2c.c: 317: uint8_t data_array[2];;i2c.c: 318: data_array[0] = 0x10 | 0x00;
  4177                           
  4178                           ;incstack = 0
  4179  007D92  0E10               	movlw	16
  4180  007D94  6E0B               	movwf	i2c_digipot_reset_off@data_array,c
  4181                           
  4182                           ;i2c.c: 319: data_array[1] = 0x80;
  4183  007D96  0E80               	movlw	128
  4184  007D98  6E0C               	movwf	i2c_digipot_reset_off@data_array+1,c
  4185                           
  4186                           ;i2c.c: 322: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4187  007D9A  0E02               	movlw	2
  4188  007D9C  EC09  F03E         	call	_i2c_set_frequency
  4189                           
  4190                           ;i2c.c: 324: _i2c_write(0b01011100, &data_array[0], 2);
  4191  007DA0  0E0B               	movlw	low i2c_digipot_reset_off@data_array
  4192  007DA2  6E06               	movwf	__i2c_write@data,c
  4193  007DA4  0E00               	movlw	high i2c_digipot_reset_off@data_array
  4194  007DA6  6E07               	movwf	__i2c_write@data+1,c
  4195  007DA8  0E02               	movlw	2
  4196  007DAA  6E08               	movwf	__i2c_write@length,c
  4197  007DAC  0E5C               	movlw	92
  4198  007DAE  ECDD  F03A         	call	__i2c_write
  4199  007DB2  0012               	return		;funcret
  4200  007DB4                     __end_of_i2c_digipot_reset_off:
  4201                           	opt stack 0
  4202                           tblptru	equ	0xFF8
  4203                           tblptrh	equ	0xFF7
  4204                           tblptrl	equ	0xFF6
  4205                           tablat	equ	0xFF5
  4206                           intcon3	equ	0xFF0
  4207                           postinc0	equ	0xFEE
  4208                           wreg	equ	0xFE8
  4209                           postdec1	equ	0xFE5
  4210                           plusw1	equ	0xFE3
  4211                           fsr1h	equ	0xFE2
  4212                           fsr1l	equ	0xFE1
  4213                           plusw2	equ	0xFDB
  4214                           status	equ	0xFD8
  4215                           
  4216 ;; *************** function _i2c_digipot_backlight *****************
  4217 ;; Defined at:
  4218 ;;		line 327 in file "i2c.c"
  4219 ;; Parameters:    Size  Location     Type
  4220 ;;  level           1    wreg     unsigned char 
  4221 ;; Auto vars:     Size  Location     Type
  4222 ;;  level           1   10[COMRAM] unsigned char 
  4223 ;;  data_array      2   11[COMRAM] unsigned char [2]
  4224 ;; Return value:  Size  Location     Type
  4225 ;;                  1    wreg      void 
  4226 ;; Registers used:
  4227 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  4228 ;; Tracked objects:
  4229 ;;		On entry : 0/0
  4230 ;;		On exit  : 0/0
  4231 ;;		Unchanged: 0/0
  4232 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4233 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4234 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4235 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4236 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4237 ;;Total ram usage:        3 bytes
  4238 ;; Hardware stack levels used:    1
  4239 ;; Hardware stack levels required when called:    2
  4240 ;; This function calls:
  4241 ;;		__i2c_write
  4242 ;;		_i2c_set_frequency
  4243 ;; This function is called by:
  4244 ;;		_ui_run
  4245 ;; This function uses a non-reentrant model
  4246 ;;
  4247                           
  4248                           	psect	text6
  4249  007CB8                     __ptext6:
  4250                           	opt stack 0
  4251  007CB8                     _i2c_digipot_backlight:
  4252                           	opt stack 27
  4253                           
  4254                           ;incstack = 0
  4255                           ;i2c_digipot_backlight@level stored from wreg
  4256  007CB8  6E0B               	movwf	i2c_digipot_backlight@level,c
  4257                           
  4258                           ;i2c.c: 329: uint8_t data_array[2];;i2c.c: 330: data_array[0] = 0x00 | 0x00;
  4259  007CBA  0E00               	movlw	0
  4260  007CBC  6E0C               	movwf	i2c_digipot_backlight@data_array,c
  4261                           
  4262                           ;i2c.c: 331: data_array[1] = level>>1;
  4263  007CBE  90D8               	bcf	status,0,c
  4264  007CC0  300B               	rrcf	i2c_digipot_backlight@level,w,c
  4265  007CC2  6E0D               	movwf	i2c_digipot_backlight@data_array+1,c
  4266                           
  4267                           ;i2c.c: 334: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  4268  007CC4  0E02               	movlw	2
  4269  007CC6  EC09  F03E         	call	_i2c_set_frequency
  4270                           
  4271                           ;i2c.c: 336: _i2c_write(0b01011100, &data_array[0], 2);
  4272  007CCA  0E0C               	movlw	low i2c_digipot_backlight@data_array
  4273  007CCC  6E06               	movwf	__i2c_write@data,c
  4274  007CCE  0E00               	movlw	high i2c_digipot_backlight@data_array
  4275  007CD0  6E07               	movwf	__i2c_write@data+1,c
  4276  007CD2  0E02               	movlw	2
  4277  007CD4  6E08               	movwf	__i2c_write@length,c
  4278  007CD6  0E5C               	movlw	92
  4279  007CD8  ECDD  F03A         	call	__i2c_write
  4280  007CDC  0012               	return		;funcret
  4281  007CDE                     __end_of_i2c_digipot_backlight:
  4282                           	opt stack 0
  4283                           tblptru	equ	0xFF8
  4284                           tblptrh	equ	0xFF7
  4285                           tblptrl	equ	0xFF6
  4286                           tablat	equ	0xFF5
  4287                           intcon3	equ	0xFF0
  4288                           postinc0	equ	0xFEE
  4289                           wreg	equ	0xFE8
  4290                           postdec1	equ	0xFE5
  4291                           plusw1	equ	0xFE3
  4292                           fsr1h	equ	0xFE2
  4293                           fsr1l	equ	0xFE1
  4294                           plusw2	equ	0xFDB
  4295                           status	equ	0xFD8
  4296                           
  4297 ;; *************** function __ui_encoder *****************
  4298 ;; Defined at:
  4299 ;;		line 22 in file "ui.c"
  4300 ;; Parameters:    Size  Location     Type
  4301 ;;		None
  4302 ;; Auto vars:     Size  Location     Type
  4303 ;;		None
  4304 ;; Return value:  Size  Location     Type
  4305 ;;                  1    wreg      void 
  4306 ;; Registers used:
  4307 ;;		wreg, status,2, status,0, cstack
  4308 ;; Tracked objects:
  4309 ;;		On entry : 0/0
  4310 ;;		On exit  : 0/0
  4311 ;;		Unchanged: 0/0
  4312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4313 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4314 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4316 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4317 ;;Total ram usage:        0 bytes
  4318 ;; Hardware stack levels used:    1
  4319 ;; Hardware stack levels required when called:    1
  4320 ;; This function calls:
  4321 ;;		_jump_to_main_program
  4322 ;; This function is called by:
  4323 ;;		_ui_run
  4324 ;; This function uses a non-reentrant model
  4325 ;;
  4326                           
  4327                           	psect	text7
  4328  005662                     __ptext7:
  4329                           	opt stack 0
  4330  005662                     __ui_encoder:
  4331                           	opt stack 28
  4332                           
  4333                           ;ui.c: 24: switch(os.display_mode)
  4334                           
  4335                           ;incstack = 0
  4336  005662  D041               	goto	l1280
  4337  005664                     
  4338                           ;ui.c: 27: if(os.buttonCount>0)
  4339  005664  0100               	movlb	0	; () banked
  4340  005666  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4341  005668  0A80               	xorlw	128
  4342  00566A  0F7F               	addlw	-129
  4343  00566C  A0D8               	btfss	status,0,c
  4344  00566E  0012               	return	
  4345                           
  4346                           ; BSR set to: 0
  4347                           ;ui.c: 28: {;ui.c: 29: os.buttonCount = 0;
  4348  005670  0E00               	movlw	0
  4349  005672  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;ui.c: 30: };ui.c: 31: break;
  4353  005674  0012               	return	
  4354  005676                     
  4355                           ; BSR set to: 0
  4356                           ;ui.c: 34: if(os.buttonCount>0)
  4357                           
  4358                           ; BSR set to: 0
  4359  005676  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4360  005678  0A80               	xorlw	128
  4361  00567A  0F7F               	addlw	-129
  4362  00567C  A0D8               	btfss	status,0,c
  4363  00567E  0012               	return	
  4364                           
  4365                           ; BSR set to: 0
  4366                           ;ui.c: 35: {;ui.c: 36: os.bootloader_mode = BOOTLOADER_MODE_FILE_VERIFYING;
  4367  005680  0E30               	movlw	48
  4368  005682  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4369                           
  4370                           ;ui.c: 37: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_VERIFYING;
  4371  005684  0E30               	movlw	48
  4372  005686  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4373                           
  4374                           ;ui.c: 38: os.buttonCount = 0;
  4375  005688  0E00               	movlw	0
  4376  00568A  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4377                           
  4378                           ; BSR set to: 0
  4379                           ;ui.c: 39: };ui.c: 40: break;
  4380  00568C  0012               	return	
  4381  00568E                     
  4382                           ; BSR set to: 0
  4383                           ;ui.c: 43: if(os.buttonCount>0)
  4384                           
  4385                           ; BSR set to: 0
  4386  00568E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4387  005690  0A80               	xorlw	128
  4388  005692  0F7F               	addlw	-129
  4389  005694  A0D8               	btfss	status,0,c
  4390  005696  0012               	return	
  4391                           
  4392                           ; BSR set to: 0
  4393                           ;ui.c: 44: {;ui.c: 45: os.buttonCount = 0;
  4394  005698  0E00               	movlw	0
  4395  00569A  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4396                           
  4397                           ; BSR set to: 0
  4398                           ;ui.c: 46: };ui.c: 47: break;
  4399  00569C  0012               	return	
  4400  00569E                     
  4401                           ; BSR set to: 0
  4402                           ;ui.c: 50: if(os.buttonCount>0)
  4403                           
  4404                           ; BSR set to: 0
  4405  00569E  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4406  0056A0  0A80               	xorlw	128
  4407  0056A2  0F7F               	addlw	-129
  4408  0056A4  A0D8               	btfss	status,0,c
  4409  0056A6  0012               	return	
  4410                           
  4411                           ; BSR set to: 0
  4412                           ;ui.c: 51: {;ui.c: 52: os.buttonCount = 0;
  4413  0056A8  0E00               	movlw	0
  4414  0056AA  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4415                           
  4416                           ; BSR set to: 0
  4417                           ;ui.c: 53: };ui.c: 54: break;
  4418  0056AC  0012               	return	
  4419  0056AE                     
  4420                           ; BSR set to: 0
  4421                           ;ui.c: 57: if(os.buttonCount>0)
  4422                           
  4423                           ; BSR set to: 0
  4424  0056AE  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4425  0056B0  0A80               	xorlw	128
  4426  0056B2  0F7F               	addlw	-129
  4427  0056B4  A0D8               	btfss	status,0,c
  4428  0056B6  0012               	return	
  4429                           
  4430                           ; BSR set to: 0
  4431                           ;ui.c: 58: {;ui.c: 59: os.bootloader_mode = BOOTLOADER_MODE_PROGRAMMING;
  4432  0056B8  0E60               	movlw	96
  4433  0056BA  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4434                           
  4435                           ;ui.c: 60: os.display_mode = DISPLAY_MODE_BOOTLOADER_PROGRAMMING;
  4436  0056BC  0E60               	movlw	96
  4437  0056BE  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4438                           
  4439                           ;ui.c: 61: os.buttonCount = 0;
  4440  0056C0  0E00               	movlw	0
  4441  0056C2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4442                           
  4443                           ; BSR set to: 0
  4444                           ;ui.c: 62: };ui.c: 63: break;
  4445  0056C4  0012               	return	
  4446  0056C6                     
  4447                           ; BSR set to: 0
  4448                           ;ui.c: 66: if(os.buttonCount>0)
  4449                           
  4450                           ; BSR set to: 0
  4451  0056C6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4452  0056C8  0A80               	xorlw	128
  4453  0056CA  0F7F               	addlw	-129
  4454  0056CC  A0D8               	btfss	status,0,c
  4455  0056CE  0012               	return	
  4456                           
  4457                           ; BSR set to: 0
  4458                           ;ui.c: 67: {;ui.c: 68: os.buttonCount = 0;
  4459  0056D0  0E00               	movlw	0
  4460  0056D2  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  4461                           
  4462                           ; BSR set to: 0
  4463                           ;ui.c: 69: };ui.c: 70: break;
  4464  0056D4  0012               	return	
  4465  0056D6                     
  4466                           ; BSR set to: 0
  4467                           ;ui.c: 73: if(os.buttonCount>0)
  4468                           
  4469                           ; BSR set to: 0
  4470  0056D6  5161               	movf	(_os+1)& (0+255),w,b	;volatile
  4471  0056D8  0A80               	xorlw	128
  4472  0056DA  0F7F               	addlw	-129
  4473  0056DC  A0D8               	btfss	status,0,c
  4474  0056DE  0012               	return	
  4475                           
  4476                           ; BSR set to: 0
  4477                           ;ui.c: 74: {;ui.c: 75: jump_to_main_program();
  4478  0056E0  EC26  F03C         	call	_jump_to_main_program	;wreg free
  4479                           
  4480                           ;ui.c: 78: }
  4481                           
  4482                           ;ui.c: 76: };ui.c: 77: break;
  4483  0056E4  0012               	return	
  4484  0056E6                     l1280:
  4485  0056E6  0100               	movlb	0	; () banked
  4486  0056E8  5165               	movf	(_os+5)& (0+255),w,b	;volatile
  4487                           
  4488                           ; Switch size 1, requested type "space"
  4489                           ; Number of cases is 7, Range of values is 0 to 112
  4490                           ; switch strategies available:
  4491                           ; Name         Instructions Cycles
  4492                           ; simple_byte           22    12 (average)
  4493                           ;	Chosen strategy is simple_byte
  4494  0056EA  0A00               	xorlw	0	; case 0
  4495  0056EC  B4D8               	btfsc	status,2,c
  4496  0056EE  D7BA               	goto	l1281
  4497  0056F0  0A20               	xorlw	32	; case 32
  4498  0056F2  B4D8               	btfsc	status,2,c
  4499  0056F4  D7C0               	goto	l1284
  4500  0056F6  0A10               	xorlw	16	; case 48
  4501  0056F8  B4D8               	btfsc	status,2,c
  4502  0056FA  D7C9               	goto	l1286
  4503  0056FC  0A70               	xorlw	112	; case 64
  4504  0056FE  B4D8               	btfsc	status,2,c
  4505  005700  D7D6               	goto	l1290
  4506  005702  0A10               	xorlw	16	; case 80
  4507  005704  B4D8               	btfsc	status,2,c
  4508  005706  D7CB               	goto	l1288
  4509  005708  0A30               	xorlw	48	; case 96
  4510  00570A  B4D8               	btfsc	status,2,c
  4511  00570C  D7DC               	goto	l1292
  4512  00570E  0A10               	xorlw	16	; case 112
  4513  005710  A4D8               	btfss	status,2,c
  4514  005712  0012               	return	
  4515  005714  D7E0               	goto	l1294
  4516  005716                     __end_of__ui_encoder:
  4517                           	opt stack 0
  4518                           tblptru	equ	0xFF8
  4519                           tblptrh	equ	0xFF7
  4520                           tblptrl	equ	0xFF6
  4521                           tablat	equ	0xFF5
  4522                           intcon3	equ	0xFF0
  4523                           postinc0	equ	0xFEE
  4524                           wreg	equ	0xFE8
  4525                           postdec1	equ	0xFE5
  4526                           plusw1	equ	0xFE3
  4527                           fsr1h	equ	0xFE2
  4528                           fsr1l	equ	0xFE1
  4529                           plusw2	equ	0xFDB
  4530                           status	equ	0xFD8
  4531                           
  4532 ;; *************** function _timer_pseudo_isr *****************
  4533 ;; Defined at:
  4534 ;;		line 18 in file "os.c"
  4535 ;; Parameters:    Size  Location     Type
  4536 ;;		None
  4537 ;; Auto vars:     Size  Location     Type
  4538 ;;		None
  4539 ;; Return value:  Size  Location     Type
  4540 ;;                  1    wreg      void 
  4541 ;; Registers used:
  4542 ;;		wreg, status,2, status,0
  4543 ;; Tracked objects:
  4544 ;;		On entry : 0/0
  4545 ;;		On exit  : 0/0
  4546 ;;		Unchanged: 0/0
  4547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4548 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4549 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4550 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4551 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4552 ;;Total ram usage:        0 bytes
  4553 ;; Hardware stack levels used:    1
  4554 ;; This function calls:
  4555 ;;		Nothing
  4556 ;; This function is called by:
  4557 ;;		_main
  4558 ;; This function uses a non-reentrant model
  4559 ;;
  4560                           
  4561                           	psect	text8
  4562  007968                     __ptext8:
  4563                           	opt stack 0
  4564  007968                     _timer_pseudo_isr:
  4565                           	opt stack 30
  4566                           
  4567                           ;os.c: 21: if(INTCONbits.T0IF==0)
  4568                           
  4569                           ;incstack = 0
  4570  007968  A4F2               	btfss	intcon,2,c	;volatile
  4571  00796A  0012               	return	
  4572                           
  4573                           ;os.c: 24: };os.c: 28: TMR0H = 0xD1;
  4574                           
  4575                           ;os.c: 22: {;os.c: 23: return;
  4576  00796C  0ED1               	movlw	209
  4577  00796E  6ED7               	movwf	4055,c	;volatile
  4578                           
  4579                           ;os.c: 29: TMR0L = 0x20;
  4580  007970  0E20               	movlw	32
  4581  007972  6ED6               	movwf	4054,c	;volatile
  4582                           
  4583                           ;os.c: 30: ++os.timeSlot;
  4584  007974  0100               	movlb	0	; () banked
  4585  007976  2B62               	incf	(_os+2)& (0+255),f,b	;volatile
  4586                           
  4587                           ; BSR set to: 0
  4588                           ;os.c: 32: os.done = 0;
  4589  007978  0E00               	movlw	0
  4590  00797A  6F63               	movwf	(_os+3)& (0+255),b	;volatile
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;os.c: 33: INTCONbits.T0IF = 0;
  4594  00797C  94F2               	bcf	intcon,2,c	;volatile
  4595                           
  4596                           ; BSR set to: 0
  4597                           ;os.c: 36: if(INTCON3bits.INT1IF)
  4598  00797E  A0F0               	btfss	intcon3,0,c	;volatile
  4599  007980  D002               	goto	l1087
  4600                           
  4601                           ; BSR set to: 0
  4602                           ;os.c: 37: {;os.c: 38: ++os.buttonCount;
  4603  007982  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
  4604                           
  4605                           ; BSR set to: 0
  4606                           ;os.c: 39: INTCON3bits.INT1IF = 0;
  4607  007984  90F0               	bcf	intcon3,0,c	;volatile
  4608  007986                     l1087:
  4609                           
  4610                           ; BSR set to: 0
  4611                           ;os.c: 40: };os.c: 43: if(INTCON3bits.INT2IF)
  4612                           
  4613                           ; BSR set to: 0
  4614  007986  A2F0               	btfss	intcon3,1,c	;volatile
  4615  007988  D003               	goto	l1088
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;os.c: 44: {;os.c: 45: if(!PORTBbits.RB6)
  4619  00798A  AC81               	btfss	3969,6,c	;volatile
  4620                           
  4621                           ; BSR set to: 0
  4622                           ;os.c: 46: {;os.c: 47: --os.encoderCount;
  4623  00798C  0760               	decf	_os& (0+255),f,b	;volatile
  4624                           
  4625                           ; BSR set to: 0
  4626                           ;os.c: 48: };os.c: 49: INTCON3bits.INT2IF = 0;
  4627                           
  4628                           ; BSR set to: 0
  4629  00798E  92F0               	bcf	intcon3,1,c	;volatile
  4630  007990                     l1088:
  4631                           
  4632                           ; BSR set to: 0
  4633                           ;os.c: 50: };os.c: 51: if(INTCON3bits.INT3IF)
  4634                           
  4635                           ; BSR set to: 0
  4636  007990  A4F0               	btfss	intcon3,2,c	;volatile
  4637  007992  0012               	return	
  4638                           
  4639                           ; BSR set to: 0
  4640                           ;os.c: 52: {;os.c: 53: if(!PORTBbits.RB7)
  4641  007994  AE81               	btfss	3969,7,c	;volatile
  4642                           
  4643                           ; BSR set to: 0
  4644                           ;os.c: 54: {;os.c: 55: ++os.encoderCount;
  4645  007996  2B60               	incf	_os& (0+255),f,b	;volatile
  4646                           
  4647                           ; BSR set to: 0
  4648                           ;os.c: 56: };os.c: 57: INTCON3bits.INT3IF = 0;
  4649                           
  4650                           ; BSR set to: 0
  4651  007998  94F0               	bcf	intcon3,2,c	;volatile
  4652  00799A  0012               	return	
  4653  00799C                     __end_of_timer_pseudo_isr:
  4654                           	opt stack 0
  4655                           tblptru	equ	0xFF8
  4656                           tblptrh	equ	0xFF7
  4657                           tblptrl	equ	0xFF6
  4658                           tablat	equ	0xFF5
  4659                           intcon	equ	0xFF2
  4660                           intcon3	equ	0xFF0
  4661                           postinc0	equ	0xFEE
  4662                           wreg	equ	0xFE8
  4663                           postdec1	equ	0xFE5
  4664                           plusw1	equ	0xFE3
  4665                           fsr1h	equ	0xFE2
  4666                           fsr1l	equ	0xFE1
  4667                           plusw2	equ	0xFDB
  4668                           status	equ	0xFD8
  4669                           
  4670 ;; *************** function _system_init *****************
  4671 ;; Defined at:
  4672 ;;		line 137 in file "os.c"
  4673 ;; Parameters:    Size  Location     Type
  4674 ;;		None
  4675 ;; Auto vars:     Size  Location     Type
  4676 ;;		None
  4677 ;; Return value:  Size  Location     Type
  4678 ;;                  1    wreg      void 
  4679 ;; Registers used:
  4680 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4681 ;; Tracked objects:
  4682 ;;		On entry : 0/0
  4683 ;;		On exit  : 0/0
  4684 ;;		Unchanged: 0/0
  4685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4686 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4687 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4688 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4689 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4690 ;;Total ram usage:        0 bytes
  4691 ;; Hardware stack levels used:    1
  4692 ;; Hardware stack levels required when called:    7
  4693 ;; This function calls:
  4694 ;;		__system_encoder_init
  4695 ;;		__system_timer0_init
  4696 ;;		_fat_format
  4697 ;;		_fat_init
  4698 ;;		_flash_init
  4699 ;;		_i2c_init
  4700 ;;		_ui_init
  4701 ;; This function is called by:
  4702 ;;		_main
  4703 ;; This function uses a non-reentrant model
  4704 ;;
  4705                           
  4706                           	psect	text9
  4707  006A26                     __ptext9:
  4708                           	opt stack 0
  4709  006A26                     _system_init:
  4710                           	opt stack 23
  4711                           
  4712                           ;os.c: 144: TRISCbits.TRISC2 = 0;
  4713                           
  4714                           ;incstack = 0
  4715  006A26  9494               	bcf	3988,2,c	;volatile
  4716                           
  4717                           ;os.c: 145: LATCbits.LC2 = 1;
  4718  006A28  848B               	bsf	3979,2,c	;volatile
  4719                           
  4720                           ;os.c: 148: TRISDbits.TRISD0 = 0;
  4721  006A2A  9095               	bcf	3989,0,c	;volatile
  4722                           
  4723                           ;os.c: 149: LATDbits.LD0 = 0;
  4724  006A2C  908C               	bcf	3980,0,c	;volatile
  4725                           
  4726                           ;os.c: 152: TRISDbits.TRISD3 = 0;
  4727  006A2E  9695               	bcf	3989,3,c	;volatile
  4728                           
  4729                           ;os.c: 153: LATDbits.LD3 = 0;
  4730  006A30  968C               	bcf	3980,3,c	;volatile
  4731                           
  4732                           ;os.c: 156: TRISDbits.TRISD1 = 0;
  4733  006A32  9295               	bcf	3989,1,c	;volatile
  4734                           
  4735                           ;os.c: 157: LATDbits.LD1 = 0;
  4736  006A34  928C               	bcf	3980,1,c	;volatile
  4737                           
  4738                           ;os.c: 160: TRISBbits.TRISB1 = 0;
  4739  006A36  9293               	bcf	3987,1,c	;volatile
  4740                           
  4741                           ;os.c: 161: LATBbits.LB1 = 0;
  4742  006A38  928A               	bcf	3978,1,c	;volatile
  4743                           
  4744                           ;os.c: 164: TRISBbits.TRISB2 = 0;
  4745  006A3A  9493               	bcf	3987,2,c	;volatile
  4746                           
  4747                           ;os.c: 165: LATBbits.LB2 = 0;
  4748  006A3C  948A               	bcf	3978,2,c	;volatile
  4749                           
  4750                           ;os.c: 166: TRISBbits.TRISB3 = 0;
  4751  006A3E  9693               	bcf	3987,3,c	;volatile
  4752                           
  4753                           ;os.c: 167: LATBbits.LB3 = 0;
  4754  006A40  968A               	bcf	3978,3,c	;volatile
  4755                           
  4756                           ;os.c: 170: TRISDbits.TRISD6 = 1;
  4757  006A42  8C95               	bsf	3989,6,c	;volatile
  4758                           
  4759                           ;os.c: 171: TRISDbits.TRISD4 = 0;
  4760  006A44  9895               	bcf	3989,4,c	;volatile
  4761                           
  4762                           ;os.c: 172: TRISDbits.TRISD5 = 0;
  4763  006A46  9A95               	bcf	3989,5,c	;volatile
  4764                           
  4765                           ;os.c: 173: TRISDbits.TRISD7 = 0;
  4766  006A48  9E95               	bcf	3989,7,c	;volatile
  4767                           
  4768                           ;os.c: 174: LATDbits.LD7 = 1;
  4769  006A4A  8E8C               	bsf	3980,7,c	;volatile
  4770                           
  4771                           ;os.c: 175: TRISDbits.TRISD2 = 1;
  4772  006A4C  8495               	bsf	3989,2,c	;volatile
  4773                           
  4774                           ;os.c: 178: TRISCbits.TRISC7 = 0;
  4775  006A4E  9E94               	bcf	3988,7,c	;volatile
  4776                           
  4777                           ;os.c: 179: LATCbits.LC7 = 0;
  4778  006A50  9E8B               	bcf	3979,7,c	;volatile
  4779                           
  4780                           ;os.c: 182: TRISEbits.TRISE2 = 0;
  4781  006A52  9496               	bcf	3990,2,c	;volatile
  4782                           
  4783                           ;os.c: 183: LATEbits.LE2 = 1;
  4784  006A54  848D               	bsf	3981,2,c	;volatile
  4785                           
  4786                           ;os.c: 184: TRISEbits.TRISE1 = 0;
  4787  006A56  9296               	bcf	3990,1,c	;volatile
  4788                           
  4789                           ;os.c: 185: LATEbits.LE1 = 1;
  4790  006A58  828D               	bsf	3981,1,c	;volatile
  4791                           
  4792                           ;os.c: 186: TRISEbits.TRISE0 = 0;
  4793  006A5A  9096               	bcf	3990,0,c	;volatile
  4794                           
  4795                           ;os.c: 187: LATEbits.LE0 = 1;
  4796  006A5C  808D               	bsf	3981,0,c	;volatile
  4797                           
  4798                           ;os.c: 188: TRISAbits.TRISA5 = 0;
  4799  006A5E  9A92               	bcf	3986,5,c	;volatile
  4800                           
  4801                           ;os.c: 189: LATAbits.LA5 = 1;
  4802  006A60  8A89               	bsf	3977,5,c	;volatile
  4803                           
  4804                           ;os.c: 192: TRISAbits.TRISA0 = 1;
  4805  006A62  8092               	bsf	3986,0,c	;volatile
  4806                           
  4807                           ;os.c: 193: ANCON0bits.PCFG0 = 1;
  4808  006A64  010F               	movlb	15	; () banked
  4809  006A66  8148               	bsf	72,0,b	;volatile
  4810                           
  4811                           ;os.c: 194: TRISBbits.TRISB7 = 1;
  4812  006A68  8E93               	bsf	3987,7,c	;volatile
  4813                           
  4814                           ;os.c: 195: TRISBbits.TRISB6 = 1;
  4815  006A6A  8C93               	bsf	3987,6,c	;volatile
  4816                           
  4817                           ; BSR set to: 15
  4818                           ;os.c: 198: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
  4819  006A6C  0E10               	movlw	16
  4820  006A6E  0100               	movlb	0	; () banked
  4821  006A70  6F64               	movwf	(_os+4)& (0+255),b	;volatile
  4822                           
  4823                           ;os.c: 199: os.display_mode = DISPLAY_MODE_BOOTLOADER_START;
  4824  006A72  0E00               	movlw	0
  4825  006A74  6F65               	movwf	(_os+5)& (0+255),b	;volatile
  4826                           
  4827                           ; BSR set to: 0
  4828                           ;os.c: 202: i2c_init();
  4829  006A76  ECB7  F03F         	call	_i2c_init	;wreg free
  4830                           
  4831                           ;os.c: 205: flash_init();
  4832  006A7A  EC36  F03F         	call	_flash_init	;wreg free
  4833                           
  4834                           ;os.c: 208: fat_init();
  4835  006A7E  ECA0  F03F         	call	_fat_init	;wreg free
  4836                           
  4837                           ;os.c: 210: fat_format();
  4838  006A82  ECA8  F012         	call	_fat_format	;wreg free
  4839                           
  4840                           ;os.c: 213: _system_encoder_init();
  4841  006A86  EC44  F03C         	call	__system_encoder_init	;wreg free
  4842                           
  4843                           ;os.c: 216: ui_init();
  4844  006A8A  EC72  F03F         	call	_ui_init	;wreg free
  4845                           
  4846                           ;os.c: 219: _system_timer0_init();
  4847  006A8E  ECFC  F03E         	call	__system_timer0_init	;wreg free
  4848  006A92  0012               	return		;funcret
  4849  006A94                     __end_of_system_init:
  4850                           	opt stack 0
  4851                           tblptru	equ	0xFF8
  4852                           tblptrh	equ	0xFF7
  4853                           tblptrl	equ	0xFF6
  4854                           tablat	equ	0xFF5
  4855                           intcon	equ	0xFF2
  4856                           intcon3	equ	0xFF0
  4857                           postinc0	equ	0xFEE
  4858                           wreg	equ	0xFE8
  4859                           postdec1	equ	0xFE5
  4860                           plusw1	equ	0xFE3
  4861                           fsr1h	equ	0xFE2
  4862                           fsr1l	equ	0xFE1
  4863                           plusw2	equ	0xFDB
  4864                           status	equ	0xFD8
  4865                           
  4866 ;; *************** function _ui_init *****************
  4867 ;; Defined at:
  4868 ;;		line 92 in file "ui.c"
  4869 ;; Parameters:    Size  Location     Type
  4870 ;;		None
  4871 ;; Auto vars:     Size  Location     Type
  4872 ;;		None
  4873 ;; Return value:  Size  Location     Type
  4874 ;;                  1    wreg      void 
  4875 ;; Registers used:
  4876 ;;		wreg, status,2
  4877 ;; Tracked objects:
  4878 ;;		On entry : 0/0
  4879 ;;		On exit  : 0/0
  4880 ;;		Unchanged: 0/0
  4881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4882 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4883 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4884 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4885 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4886 ;;Total ram usage:        0 bytes
  4887 ;; Hardware stack levels used:    1
  4888 ;; This function calls:
  4889 ;;		Nothing
  4890 ;; This function is called by:
  4891 ;;		_system_init
  4892 ;;		_ui_run
  4893 ;; This function uses a non-reentrant model
  4894 ;;
  4895                           
  4896                           	psect	text10
  4897  007EE4                     __ptext10:
  4898                           	opt stack 0
  4899  007EE4                     _ui_init:
  4900                           	opt stack 29
  4901                           
  4902                           ;ui.c: 94: system_ui_inactive_count = 0;
  4903                           
  4904                           ;incstack = 0
  4905  007EE4  0E00               	movlw	0
  4906  007EE6  0101               	movlb	1	; () banked
  4907  007EE8  6F6F               	movwf	(_system_ui_inactive_count+1)& (0+255),b
  4908  007EEA  0E00               	movlw	0
  4909  007EEC  6F6E               	movwf	_system_ui_inactive_count& (0+255),b
  4910                           
  4911                           ; BSR set to: 1
  4912                           ;ui.c: 96: LATCbits.LC2 = 1;
  4913  007EEE  848B               	bsf	3979,2,c	;volatile
  4914                           
  4915                           ;ui.c: 97: userInterfaceStatus = USER_INTERFACE_STATUS_STARTUP_1;
  4916  007EF0  0E01               	movlw	1
  4917  007EF2  0100               	movlb	0	; () banked
  4918  007EF4  6F98               	movwf	_userInterfaceStatus& (0+255),b
  4919                           
  4920                           ; BSR set to: 0
  4921  007EF6  0012               	return		;funcret
  4922  007EF8                     __end_of_ui_init:
  4923                           	opt stack 0
  4924                           tblptru	equ	0xFF8
  4925                           tblptrh	equ	0xFF7
  4926                           tblptrl	equ	0xFF6
  4927                           tablat	equ	0xFF5
  4928                           intcon	equ	0xFF2
  4929                           intcon3	equ	0xFF0
  4930                           postinc0	equ	0xFEE
  4931                           wreg	equ	0xFE8
  4932                           postdec1	equ	0xFE5
  4933                           plusw1	equ	0xFE3
  4934                           fsr1h	equ	0xFE2
  4935                           fsr1l	equ	0xFE1
  4936                           plusw2	equ	0xFDB
  4937                           status	equ	0xFD8
  4938                           
  4939 ;; *************** function _i2c_init *****************
  4940 ;; Defined at:
  4941 ;;		line 102 in file "i2c.c"
  4942 ;; Parameters:    Size  Location     Type
  4943 ;;		None
  4944 ;; Auto vars:     Size  Location     Type
  4945 ;;		None
  4946 ;; Return value:  Size  Location     Type
  4947 ;;                  1    wreg      void 
  4948 ;; Registers used:
  4949 ;;		wreg, status,2, status,0, cstack
  4950 ;; Tracked objects:
  4951 ;;		On entry : 0/0
  4952 ;;		On exit  : 0/0
  4953 ;;		Unchanged: 0/0
  4954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  4955 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4956 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4957 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4958 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  4959 ;;Total ram usage:        0 bytes
  4960 ;; Hardware stack levels used:    1
  4961 ;; Hardware stack levels required when called:    1
  4962 ;; This function calls:
  4963 ;;		__i2c_open_1
  4964 ;;		_i2c_set_frequency
  4965 ;; This function is called by:
  4966 ;;		_system_init
  4967 ;; This function uses a non-reentrant model
  4968 ;;
  4969                           
  4970                           	psect	text11
  4971  007F6E                     __ptext11:
  4972                           	opt stack 0
  4973  007F6E                     _i2c_init:
  4974                           	opt stack 28
  4975                           
  4976                           ;i2c.c: 105: _i2c_open_1();
  4977                           
  4978                           ; BSR set to: 0
  4979                           ;incstack = 0
  4980  007F6E  EC50  F03F         	call	__i2c_open_1	;wreg free
  4981                           
  4982                           ;i2c.c: 107: i2c_set_frequency(I2C_FREQUENCY_100kHz);
  4983  007F72  0E00               	movlw	0
  4984  007F74  EC09  F03E         	call	_i2c_set_frequency
  4985  007F78  0012               	return		;funcret
  4986  007F7A                     __end_of_i2c_init:
  4987                           	opt stack 0
  4988                           tblptru	equ	0xFF8
  4989                           tblptrh	equ	0xFF7
  4990                           tblptrl	equ	0xFF6
  4991                           tablat	equ	0xFF5
  4992                           intcon	equ	0xFF2
  4993                           intcon3	equ	0xFF0
  4994                           postinc0	equ	0xFEE
  4995                           wreg	equ	0xFE8
  4996                           postdec1	equ	0xFE5
  4997                           plusw1	equ	0xFE3
  4998                           fsr1h	equ	0xFE2
  4999                           fsr1l	equ	0xFE1
  5000                           plusw2	equ	0xFDB
  5001                           status	equ	0xFD8
  5002                           
  5003 ;; *************** function __i2c_open_1 *****************
  5004 ;; Defined at:
  5005 ;;		line 36 in file "i2c.c"
  5006 ;; Parameters:    Size  Location     Type
  5007 ;;		None
  5008 ;; Auto vars:     Size  Location     Type
  5009 ;;		None
  5010 ;; Return value:  Size  Location     Type
  5011 ;;                  1    wreg      void 
  5012 ;; Registers used:
  5013 ;;		wreg, status,2
  5014 ;; Tracked objects:
  5015 ;;		On entry : 0/0
  5016 ;;		On exit  : 0/0
  5017 ;;		Unchanged: 0/0
  5018 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5019 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5020 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5021 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5022 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5023 ;;Total ram usage:        0 bytes
  5024 ;; Hardware stack levels used:    1
  5025 ;; This function calls:
  5026 ;;		Nothing
  5027 ;; This function is called by:
  5028 ;;		_i2c_init
  5029 ;; This function uses a non-reentrant model
  5030 ;;
  5031                           
  5032                           	psect	text12
  5033  007EA0                     __ptext12:
  5034                           	opt stack 0
  5035  007EA0                     __i2c_open_1:
  5036                           	opt stack 28
  5037                           
  5038                           ;i2c.c: 38: SSP1STATbits.SMP = 0;
  5039                           
  5040                           ;incstack = 0
  5041  007EA0  9EC7               	bcf	4039,7,c	;volatile
  5042                           
  5043                           ;i2c.c: 39: SSP1STATbits.CKE = 0;
  5044  007EA2  9CC7               	bcf	4039,6,c	;volatile
  5045                           
  5046                           ;i2c.c: 40: SSP1ADD = 29;
  5047  007EA4  0E1D               	movlw	29
  5048  007EA6  6EC8               	movwf	4040,c	;volatile
  5049                           
  5050                           ;i2c.c: 41: SSP1CON1bits.WCOL = 0;
  5051  007EA8  9EC6               	bcf	4038,7,c	;volatile
  5052                           
  5053                           ;i2c.c: 42: SSP1CON1bits.SSPOV = 0;
  5054  007EAA  9CC6               	bcf	4038,6,c	;volatile
  5055                           
  5056                           ;i2c.c: 43: SSP1CON1bits.SSPM = 0b1000;
  5057  007EAC  50C6               	movf	4038,w,c	;volatile
  5058  007EAE  0BF0               	andlw	-16
  5059  007EB0  0908               	iorlw	8
  5060  007EB2  6EC6               	movwf	4038,c	;volatile
  5061                           
  5062                           ;i2c.c: 44: SSP1CON1bits.SSPEN = 1;
  5063  007EB4  8AC6               	bsf	4038,5,c	;volatile
  5064  007EB6  0012               	return		;funcret
  5065  007EB8                     __end_of__i2c_open_1:
  5066                           	opt stack 0
  5067                           tblptru	equ	0xFF8
  5068                           tblptrh	equ	0xFF7
  5069                           tblptrl	equ	0xFF6
  5070                           tablat	equ	0xFF5
  5071                           intcon	equ	0xFF2
  5072                           intcon3	equ	0xFF0
  5073                           postinc0	equ	0xFEE
  5074                           wreg	equ	0xFE8
  5075                           postdec1	equ	0xFE5
  5076                           plusw1	equ	0xFE3
  5077                           fsr1h	equ	0xFE2
  5078                           fsr1l	equ	0xFE1
  5079                           plusw2	equ	0xFDB
  5080                           status	equ	0xFD8
  5081                           
  5082 ;; *************** function _flash_init *****************
  5083 ;; Defined at:
  5084 ;;		line 337 in file "flash.c"
  5085 ;; Parameters:    Size  Location     Type
  5086 ;;		None
  5087 ;; Auto vars:     Size  Location     Type
  5088 ;;		None
  5089 ;; Return value:  Size  Location     Type
  5090 ;;                  1    wreg      void 
  5091 ;; Registers used:
  5092 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5093 ;; Tracked objects:
  5094 ;;		On entry : 0/0
  5095 ;;		On exit  : 0/0
  5096 ;;		Unchanged: 0/0
  5097 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5098 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5099 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5100 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5101 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5102 ;;Total ram usage:        0 bytes
  5103 ;; Hardware stack levels used:    1
  5104 ;; Hardware stack levels required when called:    4
  5105 ;; This function calls:
  5106 ;;		__flash_set_page_size
  5107 ;;		_spi_init
  5108 ;;		_spi_set_configuration
  5109 ;; This function is called by:
  5110 ;;		_system_init
  5111 ;; This function uses a non-reentrant model
  5112 ;;
  5113                           
  5114                           	psect	text13
  5115  007E6C                     __ptext13:
  5116                           	opt stack 0
  5117  007E6C                     _flash_init:
  5118                           	opt stack 25
  5119                           
  5120                           ;flash.c: 340: spi_init(SPI_CONFIGURATION_INTERNAL);
  5121                           
  5122                           ;incstack = 0
  5123  007E6C  0E00               	movlw	0
  5124  007E6E  ECEA  F03B         	call	_spi_init
  5125                           
  5126                           ;flash.c: 341: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
  5127  007E72  0E00               	movlw	0
  5128  007E74  EC2C  F024         	call	_spi_set_configuration
  5129                           
  5130                           ;flash.c: 344: _flash_set_page_size(FLASH_PAGE_SIZE_512);
  5131  007E78  0E00               	movlw	0
  5132  007E7A  EC06  F033         	call	__flash_set_page_size
  5133                           
  5134                           ;flash.c: 347: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
  5135  007E7E  0E01               	movlw	1
  5136  007E80  EC2C  F024         	call	_spi_set_configuration
  5137  007E84  0012               	return		;funcret
  5138  007E86                     __end_of_flash_init:
  5139                           	opt stack 0
  5140                           tblptru	equ	0xFF8
  5141                           tblptrh	equ	0xFF7
  5142                           tblptrl	equ	0xFF6
  5143                           tablat	equ	0xFF5
  5144                           intcon	equ	0xFF2
  5145                           intcon3	equ	0xFF0
  5146                           postinc0	equ	0xFEE
  5147                           wreg	equ	0xFE8
  5148                           postdec1	equ	0xFE5
  5149                           plusw1	equ	0xFE3
  5150                           fsr1h	equ	0xFE2
  5151                           fsr1l	equ	0xFE1
  5152                           plusw2	equ	0xFDB
  5153                           status	equ	0xFD8
  5154                           
  5155 ;; *************** function _spi_init *****************
  5156 ;; Defined at:
  5157 ;;		line 122 in file "spi.c"
  5158 ;; Parameters:    Size  Location     Type
  5159 ;;  configuratio    1    wreg     enum E6747
  5160 ;; Auto vars:     Size  Location     Type
  5161 ;;  configuratio    1    3[COMRAM] enum E6747
  5162 ;; Return value:  Size  Location     Type
  5163 ;;                  1    wreg      void 
  5164 ;; Registers used:
  5165 ;;		wreg, status,2, status,0, cstack
  5166 ;; Tracked objects:
  5167 ;;		On entry : 0/0
  5168 ;;		On exit  : 0/0
  5169 ;;		Unchanged: 0/0
  5170 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5171 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5172 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5173 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5174 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5175 ;;Total ram usage:        1 bytes
  5176 ;; Hardware stack levels used:    1
  5177 ;; Hardware stack levels required when called:    1
  5178 ;; This function calls:
  5179 ;;		__spi_init
  5180 ;; This function is called by:
  5181 ;;		_flash_init
  5182 ;; This function uses a non-reentrant model
  5183 ;;
  5184                           
  5185                           	psect	text14
  5186  0077D4                     __ptext14:
  5187                           	opt stack 0
  5188  0077D4                     _spi_init:
  5189                           	opt stack 27
  5190                           
  5191                           ;incstack = 0
  5192                           ;spi_init@configuration stored from wreg
  5193  0077D4  6E04               	movwf	spi_init@configuration,c
  5194                           
  5195                           ;spi.c: 124: switch(configuration)
  5196  0077D6  D012               	goto	l2768
  5197  0077D8                     
  5198                           ;spi.c: 127: _spi_init(config_internal);
  5199  0077D8  C15B  F001         	movff	_config_internal,__spi_init@details
  5200  0077DC  C15C  F002         	movff	_config_internal+1,__spi_init@details+1
  5201  0077E0  C15D  F003         	movff	_config_internal+2,__spi_init@details+2
  5202  0077E4  EC61  F03C         	call	__spi_init	;wreg free
  5203                           
  5204                           ;spi.c: 128: break;
  5205  0077E8  D010               	goto	l2770
  5206  0077EA                     
  5207                           ;spi.c: 131: _spi_init(config_external);
  5208  0077EA  C158  F001         	movff	_config_external,__spi_init@details
  5209  0077EE  C159  F002         	movff	_config_external+1,__spi_init@details+1
  5210  0077F2  C15A  F003         	movff	_config_external+2,__spi_init@details+2
  5211  0077F6  EC61  F03C         	call	__spi_init	;wreg free
  5212                           
  5213                           ;spi.c: 133: }
  5214                           
  5215                           ;spi.c: 132: break;
  5216  0077FA  D007               	goto	l2770
  5217  0077FC                     l2768:
  5218  0077FC  5004               	movf	spi_init@configuration,w,c
  5219                           
  5220                           ; Switch size 1, requested type "space"
  5221                           ; Number of cases is 2, Range of values is 0 to 1
  5222                           ; switch strategies available:
  5223                           ; Name         Instructions Cycles
  5224                           ; simple_byte            7     4 (average)
  5225                           ;	Chosen strategy is simple_byte
  5226  0077FE  0A00               	xorlw	0	; case 0
  5227  007800  B4D8               	btfsc	status,2,c
  5228  007802  D7EA               	goto	l2769
  5229  007804  0A01               	xorlw	1	; case 1
  5230  007806  B4D8               	btfsc	status,2,c
  5231  007808  D7F0               	goto	l2771
  5232  00780A                     l2770:
  5233                           
  5234                           ;spi.c: 135: active_configuration = configuration;
  5235  00780A  C004  F094         	movff	spi_init@configuration,_active_configuration
  5236  00780E  0012               	return		;funcret
  5237  007810                     __end_of_spi_init:
  5238                           	opt stack 0
  5239                           tblptru	equ	0xFF8
  5240                           tblptrh	equ	0xFF7
  5241                           tblptrl	equ	0xFF6
  5242                           tablat	equ	0xFF5
  5243                           intcon	equ	0xFF2
  5244                           intcon3	equ	0xFF0
  5245                           postinc0	equ	0xFEE
  5246                           wreg	equ	0xFE8
  5247                           postdec1	equ	0xFE5
  5248                           plusw1	equ	0xFE3
  5249                           fsr1h	equ	0xFE2
  5250                           fsr1l	equ	0xFE1
  5251                           plusw2	equ	0xFDB
  5252                           status	equ	0xFD8
  5253                           
  5254 ;; *************** function __spi_init *****************
  5255 ;; Defined at:
  5256 ;;		line 25 in file "spi.c"
  5257 ;; Parameters:    Size  Location     Type
  5258 ;;  details         3    0[COMRAM] struct .
  5259 ;; Auto vars:     Size  Location     Type
  5260 ;;		None
  5261 ;; Return value:  Size  Location     Type
  5262 ;;                  1    wreg      void 
  5263 ;; Registers used:
  5264 ;;		wreg, status,2
  5265 ;; Tracked objects:
  5266 ;;		On entry : 0/0
  5267 ;;		On exit  : 0/0
  5268 ;;		Unchanged: 0/0
  5269 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5270 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5271 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5272 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5273 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5274 ;;Total ram usage:        3 bytes
  5275 ;; Hardware stack levels used:    1
  5276 ;; This function calls:
  5277 ;;		Nothing
  5278 ;; This function is called by:
  5279 ;;		_spi_init
  5280 ;; This function uses a non-reentrant model
  5281 ;;
  5282                           
  5283                           	psect	text15
  5284  0078C2                     __ptext15:
  5285                           	opt stack 0
  5286  0078C2                     __spi_init:
  5287                           	opt stack 27
  5288                           
  5289                           ;spi.c: 31: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  5290                           
  5291                           ;incstack = 0
  5292  0078C2  0E55               	movlw	85
  5293  0078C4  6EA7               	movwf	4007,c	;volsfr
  5294  0078C6  0EAA               	movlw	170
  5295  0078C8  6EA7               	movwf	4007,c	;volsfr
  5296  0078CA  010E               	movlb	14	; () banked
  5297  0078CC  91BF               	bcf	191,0,b	;volatile
  5298                           
  5299                           ;spi.c: 32: RPINR21 = 23;
  5300  0078CE  0E17               	movlw	23
  5301  0078D0  6FFC               	movwf	252,b	;volatile
  5302                           
  5303                           ;spi.c: 33: RPOR21 = 10;
  5304  0078D2  0E0A               	movlw	10
  5305  0078D4  6FD5               	movwf	213,b	;volatile
  5306                           
  5307                           ;spi.c: 35: RPOR22 = 11;
  5308  0078D6  0E0B               	movlw	11
  5309  0078D8  6FD6               	movwf	214,b	;volatile
  5310                           
  5311                           ;spi.c: 36: RPINR22 = 22;
  5312  0078DA  0E16               	movlw	22
  5313  0078DC  6FFD               	movwf	253,b	;volatile
  5314                           
  5315                           ;spi.c: 37: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
  5316  0078DE  0E55               	movlw	85
  5317  0078E0  6EA7               	movwf	4007,c	;volsfr
  5318  0078E2  0EAA               	movlw	170
  5319  0078E4  6EA7               	movwf	4007,c	;volsfr
  5320                           
  5321                           ; BSR set to: 14
  5322  0078E6  81BF               	bsf	191,0,b	;volatile
  5323                           
  5324                           ; BSR set to: 14
  5325                           ;spi.c: 40: SSP2STATbits.SMP = 1;
  5326  0078E8  8E73               	bsf	3955,7,c	;volatile
  5327                           
  5328                           ; BSR set to: 14
  5329                           ;spi.c: 41: SSP2STATbits.CKE = 1;
  5330  0078EA  8C73               	bsf	3955,6,c	;volatile
  5331                           
  5332                           ; BSR set to: 14
  5333                           ;spi.c: 42: SSP2CON1bits.CKP = 0;
  5334  0078EC  9872               	bcf	3954,4,c	;volatile
  5335                           
  5336                           ; BSR set to: 14
  5337                           ;spi.c: 43: SSP2CON1bits.SSPM =0b0000;
  5338  0078EE  9072               	bcf	3954,0,c	;volatile
  5339  0078F0  9272               	bcf	3954,1,c	;volatile
  5340  0078F2  9472               	bcf	3954,2,c	;volatile
  5341  0078F4  9672               	bcf	3954,3,c	;volatile
  5342                           
  5343                           ; BSR set to: 14
  5344                           ;spi.c: 44: SSP2CON1bits.SSPEN = 1;
  5345  0078F6  8A72               	bsf	3954,5,c	;volatile
  5346                           
  5347                           ; BSR set to: 14
  5348  0078F8  0012               	return		;funcret
  5349  0078FA                     __end_of__spi_init:
  5350                           	opt stack 0
  5351                           tblptru	equ	0xFF8
  5352                           tblptrh	equ	0xFF7
  5353                           tblptrl	equ	0xFF6
  5354                           tablat	equ	0xFF5
  5355                           intcon	equ	0xFF2
  5356                           intcon3	equ	0xFF0
  5357                           postinc0	equ	0xFEE
  5358                           wreg	equ	0xFE8
  5359                           postdec1	equ	0xFE5
  5360                           plusw1	equ	0xFE3
  5361                           fsr1h	equ	0xFE2
  5362                           fsr1l	equ	0xFE1
  5363                           plusw2	equ	0xFDB
  5364                           status	equ	0xFD8
  5365                           
  5366 ;; *************** function __flash_set_page_size *****************
  5367 ;; Defined at:
  5368 ;;		line 95 in file "flash.c"
  5369 ;; Parameters:    Size  Location     Type
  5370 ;;  size            1    wreg     enum E6879
  5371 ;; Auto vars:     Size  Location     Type
  5372 ;;  size            1   23[COMRAM] enum E6879
  5373 ;;  command         4   19[COMRAM] unsigned char [4]
  5374 ;; Return value:  Size  Location     Type
  5375 ;;                  1    wreg      void 
  5376 ;; Registers used:
  5377 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5378 ;; Tracked objects:
  5379 ;;		On entry : 0/0
  5380 ;;		On exit  : 0/0
  5381 ;;		Unchanged: 0/0
  5382 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5383 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5384 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5385 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5386 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5387 ;;Total ram usage:        5 bytes
  5388 ;; Hardware stack levels used:    1
  5389 ;; Hardware stack levels required when called:    3
  5390 ;; This function calls:
  5391 ;;		__flash_is_busy
  5392 ;;		_memcpy
  5393 ;;		_spi_tx
  5394 ;; This function is called by:
  5395 ;;		_flash_init
  5396 ;; This function uses a non-reentrant model
  5397 ;;
  5398                           
  5399                           	psect	text16
  5400  00660C                     __ptext16:
  5401                           	opt stack 0
  5402  00660C                     __flash_set_page_size:
  5403                           	opt stack 25
  5404                           
  5405                           ; BSR set to: 14
  5406                           ;incstack = 0
  5407                           ;__flash_set_page_size@size stored from wreg
  5408  00660C  6E18               	movwf	__flash_set_page_size@size,c
  5409  00660E                     
  5410                           ;flash.c: 97: uint8_t command[4];;flash.c: 100: while(_flash_is_busy());
  5411  00660E  ECEB  F03E         	call	__flash_is_busy	;wreg free
  5412  006612  0900               	iorlw	0
  5413  006614  A4D8               	btfss	status,2,c
  5414  006616  D7FB               	goto	l12699
  5415                           
  5416                           ;flash.c: 103: if(size==FLASH_PAGE_SIZE_512)
  5417  006618  5018               	movf	__flash_set_page_size@size,w,c
  5418  00661A  A4D8               	btfss	status,2,c
  5419  00661C  D013               	goto	l1716
  5420                           
  5421                           ;flash.c: 104: memcpy(command, flash_command_pagesize_512, 4);
  5422  00661E  0E14               	movlw	low __flash_set_page_size@command
  5423  006620  6E01               	movwf	memcpy@d1,c
  5424  006622  0E00               	movlw	high __flash_set_page_size@command
  5425  006624  6E02               	movwf	memcpy@d1+1,c
  5426  006626  0EC3               	movlw	low _flash_command_pagesize_512
  5427  006628  6E03               	movwf	memcpy@s1,c
  5428  00662A  0E8F               	movlw	high _flash_command_pagesize_512
  5429  00662C  6E04               	movwf	memcpy@s1+1,c
  5430  00662E  5003               	movf	memcpy@s1,w,c
  5431  006630  1004               	iorwf	memcpy@s1+1,w,c
  5432  006632  A4D8               	btfss	status,2,c
  5433  006634  0E00               	movlw	low (__mediumconst shr (0+16))
  5434  006636  6E05               	movwf	memcpy@s1+2,c
  5435  006638  0E00               	movlw	0
  5436  00663A  6E07               	movwf	memcpy@n+1,c
  5437  00663C  0E04               	movlw	4
  5438  00663E  6E06               	movwf	memcpy@n,c
  5439  006640  ECBE  F036         	call	_memcpy	;wreg free
  5440  006644                     l1716:
  5441                           
  5442                           ;flash.c: 105: if(size==FLASH_PAGE_SIZE_528)
  5443  006644  0418               	decf	__flash_set_page_size@size,w,c
  5444  006646  A4D8               	btfss	status,2,c
  5445  006648  D013               	goto	l1717
  5446                           
  5447                           ;flash.c: 106: memcpy(command, flash_command_pagesize_528, 4);
  5448  00664A  0E14               	movlw	low __flash_set_page_size@command
  5449  00664C  6E01               	movwf	memcpy@d1,c
  5450  00664E  0E00               	movlw	high __flash_set_page_size@command
  5451  006650  6E02               	movwf	memcpy@d1+1,c
  5452  006652  0EBF               	movlw	low _flash_command_pagesize_528
  5453  006654  6E03               	movwf	memcpy@s1,c
  5454  006656  0E8F               	movlw	high _flash_command_pagesize_528
  5455  006658  6E04               	movwf	memcpy@s1+1,c
  5456  00665A  5003               	movf	memcpy@s1,w,c
  5457  00665C  1004               	iorwf	memcpy@s1+1,w,c
  5458  00665E  A4D8               	btfss	status,2,c
  5459  006660  0E00               	movlw	low (__mediumconst shr (0+16))
  5460  006662  6E05               	movwf	memcpy@s1+2,c
  5461  006664  0E00               	movlw	0
  5462  006666  6E07               	movwf	memcpy@n+1,c
  5463  006668  0E04               	movlw	4
  5464  00666A  6E06               	movwf	memcpy@n,c
  5465  00666C  ECBE  F036         	call	_memcpy	;wreg free
  5466  006670                     l1717:
  5467                           
  5468                           ;flash.c: 109: spi_tx(command, 4);
  5469  006670  0E14               	movlw	low __flash_set_page_size@command
  5470  006672  6E01               	movwf	spi_tx@data,c
  5471  006674  0E00               	movlw	high __flash_set_page_size@command
  5472  006676  6E02               	movwf	spi_tx@data+1,c
  5473  006678  0E00               	movlw	0
  5474  00667A  6E04               	movwf	spi_tx@length+1,c
  5475  00667C  0E04               	movlw	4
  5476  00667E  6E03               	movwf	spi_tx@length,c
  5477  006680  ECEA  F038         	call	_spi_tx	;wreg free
  5478  006684  0012               	return		;funcret
  5479  006686                     __end_of__flash_set_page_size:
  5480                           	opt stack 0
  5481                           tblptru	equ	0xFF8
  5482                           tblptrh	equ	0xFF7
  5483                           tblptrl	equ	0xFF6
  5484                           tablat	equ	0xFF5
  5485                           intcon	equ	0xFF2
  5486                           intcon3	equ	0xFF0
  5487                           postinc0	equ	0xFEE
  5488                           wreg	equ	0xFE8
  5489                           postdec1	equ	0xFE5
  5490                           plusw1	equ	0xFE3
  5491                           fsr1h	equ	0xFE2
  5492                           fsr1l	equ	0xFE1
  5493                           plusw2	equ	0xFDB
  5494                           status	equ	0xFD8
  5495                           
  5496 ;; *************** function _fat_init *****************
  5497 ;; Defined at:
  5498 ;;		line 972 in file "fat16.c"
  5499 ;; Parameters:    Size  Location     Type
  5500 ;;		None
  5501 ;; Auto vars:     Size  Location     Type
  5502 ;;		None
  5503 ;; Return value:  Size  Location     Type
  5504 ;;                  1    wreg      void 
  5505 ;; Registers used:
  5506 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5507 ;; Tracked objects:
  5508 ;;		On entry : 0/0
  5509 ;;		On exit  : 0/0
  5510 ;;		Unchanged: 0/0
  5511 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5512 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5513 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5514 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5515 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5516 ;;Total ram usage:        0 bytes
  5517 ;; Hardware stack levels used:    1
  5518 ;; Hardware stack levels required when called:    6
  5519 ;; This function calls:
  5520 ;;		_fat_format
  5521 ;;		_fat_get_format_status
  5522 ;; This function is called by:
  5523 ;;		_system_init
  5524 ;; This function uses a non-reentrant model
  5525 ;;
  5526                           
  5527                           	psect	text17
  5528  007F40                     __ptext17:
  5529                           	opt stack 0
  5530  007F40                     _fat_init:
  5531                           	opt stack 23
  5532                           
  5533                           ;fat16.c: 975: if(fat_get_format_status()==DRIVE_NOT_FORMATED)
  5534                           
  5535                           ;incstack = 0
  5536  007F40  EC90  F02D         	call	_fat_get_format_status	;wreg free
  5537  007F44  0900               	iorlw	0
  5538  007F46  A4D8               	btfss	status,2,c
  5539  007F48  0012               	return	
  5540                           
  5541                           ;fat16.c: 976: {;fat16.c: 977: fat_format();
  5542  007F4A  ECA8  F012         	call	_fat_format	;wreg free
  5543  007F4E  0012               	return	
  5544  007F50                     __end_of_fat_init:
  5545                           	opt stack 0
  5546                           tblptru	equ	0xFF8
  5547                           tblptrh	equ	0xFF7
  5548                           tblptrl	equ	0xFF6
  5549                           tablat	equ	0xFF5
  5550                           intcon	equ	0xFF2
  5551                           intcon3	equ	0xFF0
  5552                           postinc0	equ	0xFEE
  5553                           wreg	equ	0xFE8
  5554                           postdec1	equ	0xFE5
  5555                           plusw1	equ	0xFE3
  5556                           fsr1h	equ	0xFE2
  5557                           fsr1l	equ	0xFE1
  5558                           plusw2	equ	0xFDB
  5559                           status	equ	0xFD8
  5560                           
  5561 ;; *************** function _fat_get_format_status *****************
  5562 ;; Defined at:
  5563 ;;		line 884 in file "fat16.c"
  5564 ;; Parameters:    Size  Location     Type
  5565 ;;		None
  5566 ;; Auto vars:     Size  Location     Type
  5567 ;;  cntr            2   45[COMRAM] unsigned int 
  5568 ;; Return value:  Size  Location     Type
  5569 ;;                  1    wreg      enum E6865
  5570 ;; Registers used:
  5571 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5572 ;; Tracked objects:
  5573 ;;		On entry : 0/0
  5574 ;;		On exit  : 0/0
  5575 ;;		Unchanged: 0/0
  5576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5577 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5578 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5579 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5580 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5581 ;;Total ram usage:        4 bytes
  5582 ;; Hardware stack levels used:    1
  5583 ;; Hardware stack levels required when called:    5
  5584 ;; This function calls:
  5585 ;;		__get_fbr
  5586 ;;		__get_mbr
  5587 ;;		_flash_page_read
  5588 ;; This function is called by:
  5589 ;;		_fat_init
  5590 ;; This function uses a non-reentrant model
  5591 ;;
  5592                           
  5593                           	psect	text18
  5594  005B20                     __ptext18:
  5595                           	opt stack 0
  5596  005B20                     _fat_get_format_status:
  5597                           	opt stack 23
  5598                           
  5599                           ;fat16.c: 886: uint16_t cntr;;fat16.c: 889: flash_page_read(0, buffer);
  5600                           
  5601                           ;incstack = 0
  5602  005B20  0E00               	movlw	0
  5603  005B22  6E29               	movwf	flash_page_read@page+1,c
  5604  005B24  0E00               	movlw	0
  5605  005B26  6E28               	movwf	flash_page_read@page,c
  5606  005B28  0E40               	movlw	low _buffer
  5607  005B2A  6E2A               	movwf	flash_page_read@data,c
  5608  005B2C  0E03               	movlw	high _buffer
  5609  005B2E  6E2B               	movwf	flash_page_read@data+1,c
  5610  005B30  EC34  F03D         	call	_flash_page_read	;wreg free
  5611                           
  5612                           ;fat16.c: 890: for(cntr=0; cntr<512; ++cntr)
  5613  005B34  0E00               	movlw	0
  5614  005B36  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5615  005B38  0E00               	movlw	0
  5616  005B3A  6E2E               	movwf	fat_get_format_status@cntr,c
  5617  005B3C                     l12727:
  5618  005B3C  0E02               	movlw	2
  5619  005B3E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5620  005B40  B0D8               	btfsc	status,0,c
  5621  005B42  D016               	goto	u9680
  5622                           
  5623                           ;fat16.c: 891: {;fat16.c: 892: if(buffer[cntr] != _get_mbr(cntr))
  5624  005B44  0E40               	movlw	low _buffer
  5625  005B46  242E               	addwf	fat_get_format_status@cntr,w,c
  5626  005B48  6ED9               	movwf	fsr2l,c
  5627  005B4A  0E03               	movlw	high _buffer
  5628  005B4C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5629  005B4E  6EDA               	movwf	fsr2h,c
  5630  005B50  C02E  F001         	movff	fat_get_format_status@cntr,__get_mbr@idx
  5631  005B54  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_mbr@idx+1
  5632  005B58  ECB7  F027         	call	__get_mbr	;wreg free
  5633  005B5C  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5634  005B5E  50DE               	movf	postinc2,w,c
  5635  005B60  182D               	xorwf	??_fat_get_format_status+1,w,c
  5636  005B62  B4D8               	btfsc	status,2,c
  5637  005B64  D002               	goto	l2136
  5638                           
  5639                           ;fat16.c: 893: {;fat16.c: 894: return DRIVE_NOT_FORMATED;
  5640  005B66  0E00               	movlw	0
  5641  005B68  0012               	return	
  5642  005B6A                     l2136:
  5643  005B6A  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5644  005B6C  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5645  005B6E  D7E6               	goto	l12727
  5646  005B70                     u9680:
  5647                           
  5648                           ;fat16.c: 895: };fat16.c: 896: };fat16.c: 899: flash_page_read(1, buffer);
  5649  005B70  0E00               	movlw	0
  5650  005B72  6E29               	movwf	flash_page_read@page+1,c
  5651  005B74  0E01               	movlw	1
  5652  005B76  6E28               	movwf	flash_page_read@page,c
  5653  005B78  0E40               	movlw	low _buffer
  5654  005B7A  6E2A               	movwf	flash_page_read@data,c
  5655  005B7C  0E03               	movlw	high _buffer
  5656  005B7E  6E2B               	movwf	flash_page_read@data+1,c
  5657  005B80  EC34  F03D         	call	_flash_page_read	;wreg free
  5658                           
  5659                           ;fat16.c: 900: for(cntr=0; cntr<512; ++cntr)
  5660  005B84  0E00               	movlw	0
  5661  005B86  6E2F               	movwf	fat_get_format_status@cntr+1,c
  5662  005B88  0E00               	movlw	0
  5663  005B8A  6E2E               	movwf	fat_get_format_status@cntr,c
  5664  005B8C                     l12745:
  5665  005B8C  0E02               	movlw	2
  5666  005B8E  5C2F               	subwf	fat_get_format_status@cntr+1,w,c
  5667  005B90  B0D8               	btfsc	status,0,c
  5668  005B92  D016               	goto	u9710
  5669                           
  5670                           ;fat16.c: 901: {;fat16.c: 902: if(buffer[cntr] != _get_fbr(cntr))
  5671  005B94  0E40               	movlw	low _buffer
  5672  005B96  242E               	addwf	fat_get_format_status@cntr,w,c
  5673  005B98  6ED9               	movwf	fsr2l,c
  5674  005B9A  0E03               	movlw	high _buffer
  5675  005B9C  202F               	addwfc	fat_get_format_status@cntr+1,w,c
  5676  005B9E  6EDA               	movwf	fsr2h,c
  5677  005BA0  C02E  F001         	movff	fat_get_format_status@cntr,__get_fbr@idx
  5678  005BA4  C02F  F002         	movff	fat_get_format_status@cntr+1,__get_fbr@idx+1
  5679  005BA8  EC1C  F00D         	call	__get_fbr	;wreg free
  5680  005BAC  6E2D               	movwf	(??_fat_get_format_status+1)& (0+255),c
  5681  005BAE  50DE               	movf	postinc2,w,c
  5682  005BB0  182D               	xorwf	??_fat_get_format_status+1,w,c
  5683  005BB2  B4D8               	btfsc	status,2,c
  5684  005BB4  D002               	goto	l2140
  5685                           
  5686                           ;fat16.c: 903: {;fat16.c: 904: return DRIVE_NOT_FORMATED;
  5687  005BB6  0E00               	movlw	0
  5688  005BB8  0012               	return	
  5689  005BBA                     l2140:
  5690  005BBA  4A2E               	infsnz	fat_get_format_status@cntr,f,c
  5691  005BBC  2A2F               	incf	fat_get_format_status@cntr+1,f,c
  5692  005BBE  D7E6               	goto	l12745
  5693  005BC0                     u9710:
  5694                           
  5695                           ;fat16.c: 905: };fat16.c: 906: };fat16.c: 909: return DRIVE_FORMATED;
  5696  005BC0  0E01               	movlw	1
  5697  005BC2  0012               	return	
  5698  005BC4                     __end_of_fat_get_format_status:
  5699                           	opt stack 0
  5700                           tblptru	equ	0xFF8
  5701                           tblptrh	equ	0xFF7
  5702                           tblptrl	equ	0xFF6
  5703                           tablat	equ	0xFF5
  5704                           intcon	equ	0xFF2
  5705                           intcon3	equ	0xFF0
  5706                           postinc0	equ	0xFEE
  5707                           wreg	equ	0xFE8
  5708                           postdec1	equ	0xFE5
  5709                           plusw1	equ	0xFE3
  5710                           fsr1h	equ	0xFE2
  5711                           fsr1l	equ	0xFE1
  5712                           postinc2	equ	0xFDE
  5713                           plusw2	equ	0xFDB
  5714                           fsr2h	equ	0xFDA
  5715                           fsr2l	equ	0xFD9
  5716                           status	equ	0xFD8
  5717                           
  5718 ;; *************** function _fat_format *****************
  5719 ;; Defined at:
  5720 ;;		line 912 in file "fat16.c"
  5721 ;; Parameters:    Size  Location     Type
  5722 ;;		None
  5723 ;; Auto vars:     Size  Location     Type
  5724 ;;  cntr            2   36[COMRAM] unsigned int 
  5725 ;; Return value:  Size  Location     Type
  5726 ;;                  1    wreg      void 
  5727 ;; Registers used:
  5728 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  5729 ;; Tracked objects:
  5730 ;;		On entry : 0/0
  5731 ;;		On exit  : 0/0
  5732 ;;		Unchanged: 0/0
  5733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  5734 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5735 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5736 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5737 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  5738 ;;Total ram usage:        2 bytes
  5739 ;; Hardware stack levels used:    1
  5740 ;; Hardware stack levels required when called:    5
  5741 ;; This function calls:
  5742 ;;		__get_data
  5743 ;;		__get_fat
  5744 ;;		__get_fbr
  5745 ;;		__get_mbr
  5746 ;;		__get_root
  5747 ;;		_flash_page_write
  5748 ;; This function is called by:
  5749 ;;		_system_init
  5750 ;;		_fat_init
  5751 ;; This function uses a non-reentrant model
  5752 ;;
  5753                           
  5754                           	psect	text19
  5755  002550                     __ptext19:
  5756                           	opt stack 0
  5757  002550                     _fat_format:
  5758                           	opt stack 23
  5759                           
  5760                           ;fat16.c: 914: uint16_t cntr;;fat16.c: 917: for(cntr=0; cntr<512; ++cntr)
  5761                           
  5762                           ;incstack = 0
  5763  002550  0E00               	movlw	0
  5764  002552  6E26               	movwf	fat_format@cntr+1,c
  5765  002554  0E00               	movlw	0
  5766  002556  6E25               	movwf	fat_format@cntr,c
  5767  002558                     l12477:
  5768  002558  0E02               	movlw	2
  5769  00255A  5C26               	subwf	fat_format@cntr+1,w,c
  5770  00255C  B0D8               	btfsc	status,0,c
  5771  00255E  D010               	goto	u9400
  5772                           
  5773                           ;fat16.c: 918: {;fat16.c: 919: buffer[cntr] = _get_mbr(cntr);
  5774  002560  0E40               	movlw	low _buffer
  5775  002562  2425               	addwf	fat_format@cntr,w,c
  5776  002564  6ED9               	movwf	fsr2l,c
  5777  002566  0E03               	movlw	high _buffer
  5778  002568  2026               	addwfc	fat_format@cntr+1,w,c
  5779  00256A  6EDA               	movwf	fsr2h,c
  5780  00256C  C025  F001         	movff	fat_format@cntr,__get_mbr@idx
  5781  002570  C026  F002         	movff	fat_format@cntr+1,__get_mbr@idx+1
  5782  002574  ECB7  F027         	call	__get_mbr	;wreg free
  5783  002578  6EDF               	movwf	indf2,c
  5784  00257A  4A25               	infsnz	fat_format@cntr,f,c
  5785  00257C  2A26               	incf	fat_format@cntr+1,f,c
  5786  00257E  D7EC               	goto	l12477
  5787  002580                     u9400:
  5788                           
  5789                           ;fat16.c: 920: };fat16.c: 921: flash_page_write(0, buffer);
  5790  002580  0E00               	movlw	0
  5791  002582  6E21               	movwf	flash_page_write@page+1,c
  5792  002584  0E00               	movlw	0
  5793  002586  6E20               	movwf	flash_page_write@page,c
  5794  002588  0E40               	movlw	low _buffer
  5795  00258A  6E22               	movwf	flash_page_write@data,c
  5796  00258C  0E03               	movlw	high _buffer
  5797  00258E  6E23               	movwf	flash_page_write@data+1,c
  5798  002590  EC97  F039         	call	_flash_page_write	;wreg free
  5799                           
  5800                           ;fat16.c: 924: for(cntr=0; cntr<512; ++cntr)
  5801  002594  0E00               	movlw	0
  5802  002596  6E26               	movwf	fat_format@cntr+1,c
  5803  002598  0E00               	movlw	0
  5804  00259A  6E25               	movwf	fat_format@cntr,c
  5805  00259C                     l12491:
  5806  00259C  0E02               	movlw	2
  5807  00259E  5C26               	subwf	fat_format@cntr+1,w,c
  5808  0025A0  B0D8               	btfsc	status,0,c
  5809  0025A2  D010               	goto	u9420
  5810                           
  5811                           ;fat16.c: 925: {;fat16.c: 926: buffer[cntr] = _get_fbr(cntr);
  5812  0025A4  0E40               	movlw	low _buffer
  5813  0025A6  2425               	addwf	fat_format@cntr,w,c
  5814  0025A8  6ED9               	movwf	fsr2l,c
  5815  0025AA  0E03               	movlw	high _buffer
  5816  0025AC  2026               	addwfc	fat_format@cntr+1,w,c
  5817  0025AE  6EDA               	movwf	fsr2h,c
  5818  0025B0  C025  F001         	movff	fat_format@cntr,__get_fbr@idx
  5819  0025B4  C026  F002         	movff	fat_format@cntr+1,__get_fbr@idx+1
  5820  0025B8  EC1C  F00D         	call	__get_fbr	;wreg free
  5821  0025BC  6EDF               	movwf	indf2,c
  5822  0025BE  4A25               	infsnz	fat_format@cntr,f,c
  5823  0025C0  2A26               	incf	fat_format@cntr+1,f,c
  5824  0025C2  D7EC               	goto	l12491
  5825  0025C4                     u9420:
  5826                           
  5827                           ;fat16.c: 927: };fat16.c: 928: flash_page_write(1, buffer);
  5828  0025C4  0E00               	movlw	0
  5829  0025C6  6E21               	movwf	flash_page_write@page+1,c
  5830  0025C8  0E01               	movlw	1
  5831  0025CA  6E20               	movwf	flash_page_write@page,c
  5832  0025CC  0E40               	movlw	low _buffer
  5833  0025CE  6E22               	movwf	flash_page_write@data,c
  5834  0025D0  0E03               	movlw	high _buffer
  5835  0025D2  6E23               	movwf	flash_page_write@data+1,c
  5836  0025D4  EC97  F039         	call	_flash_page_write	;wreg free
  5837                           
  5838                           ;fat16.c: 931: for(cntr=0; cntr<512; ++cntr)
  5839  0025D8  0E00               	movlw	0
  5840  0025DA  6E26               	movwf	fat_format@cntr+1,c
  5841  0025DC  0E00               	movlw	0
  5842  0025DE  6E25               	movwf	fat_format@cntr,c
  5843  0025E0                     l12505:
  5844  0025E0  0E02               	movlw	2
  5845  0025E2  5C26               	subwf	fat_format@cntr+1,w,c
  5846  0025E4  B0D8               	btfsc	status,0,c
  5847  0025E6  D010               	goto	u9440
  5848                           
  5849                           ;fat16.c: 932: {;fat16.c: 933: buffer[cntr] = _get_fat(cntr);
  5850  0025E8  0E40               	movlw	low _buffer
  5851  0025EA  2425               	addwf	fat_format@cntr,w,c
  5852  0025EC  6ED9               	movwf	fsr2l,c
  5853  0025EE  0E03               	movlw	high _buffer
  5854  0025F0  2026               	addwfc	fat_format@cntr+1,w,c
  5855  0025F2  6EDA               	movwf	fsr2h,c
  5856  0025F4  C025  F001         	movff	fat_format@cntr,__get_fat@idx
  5857  0025F8  C026  F002         	movff	fat_format@cntr+1,__get_fat@idx+1
  5858  0025FC  EC16  F039         	call	__get_fat	;wreg free
  5859  002600  6EDF               	movwf	indf2,c
  5860  002602  4A25               	infsnz	fat_format@cntr,f,c
  5861  002604  2A26               	incf	fat_format@cntr+1,f,c
  5862  002606  D7EC               	goto	l12505
  5863  002608                     u9440:
  5864                           
  5865                           ;fat16.c: 934: };fat16.c: 935: flash_page_write(2, buffer);
  5866  002608  0E00               	movlw	0
  5867  00260A  6E21               	movwf	flash_page_write@page+1,c
  5868  00260C  0E02               	movlw	2
  5869  00260E  6E20               	movwf	flash_page_write@page,c
  5870  002610  0E40               	movlw	low _buffer
  5871  002612  6E22               	movwf	flash_page_write@data,c
  5872  002614  0E03               	movlw	high _buffer
  5873  002616  6E23               	movwf	flash_page_write@data+1,c
  5874  002618  EC97  F039         	call	_flash_page_write	;wreg free
  5875                           
  5876                           ;fat16.c: 938: for(cntr=0; cntr<512; ++cntr)
  5877  00261C  0E00               	movlw	0
  5878  00261E  6E26               	movwf	fat_format@cntr+1,c
  5879  002620  0E00               	movlw	0
  5880  002622  6E25               	movwf	fat_format@cntr,c
  5881  002624                     l12519:
  5882  002624  0E02               	movlw	2
  5883  002626  5C26               	subwf	fat_format@cntr+1,w,c
  5884  002628  B0D8               	btfsc	status,0,c
  5885  00262A  D00B               	goto	u9460
  5886                           
  5887                           ;fat16.c: 939: {;fat16.c: 940: buffer[cntr] = 0x00;
  5888  00262C  0E40               	movlw	low _buffer
  5889  00262E  2425               	addwf	fat_format@cntr,w,c
  5890  002630  6ED9               	movwf	fsr2l,c
  5891  002632  0E03               	movlw	high _buffer
  5892  002634  2026               	addwfc	fat_format@cntr+1,w,c
  5893  002636  6EDA               	movwf	fsr2h,c
  5894  002638  0E00               	movlw	0
  5895  00263A  6EDF               	movwf	indf2,c
  5896  00263C  4A25               	infsnz	fat_format@cntr,f,c
  5897  00263E  2A26               	incf	fat_format@cntr+1,f,c
  5898  002640  D7F1               	goto	l12519
  5899  002642                     u9460:
  5900                           
  5901                           ;fat16.c: 941: };fat16.c: 942: for(cntr=2+1; cntr<=33; ++cntr)
  5902  002642  0E00               	movlw	0
  5903  002644  6E26               	movwf	fat_format@cntr+1,c
  5904  002646  0E03               	movlw	3
  5905  002648  6E25               	movwf	fat_format@cntr,c
  5906  00264A                     l12531:
  5907  00264A  5026               	movf	fat_format@cntr+1,w,c
  5908  00264C  E111               	bnz	l12541
  5909  00264E  0E22               	movlw	34
  5910  002650  5C25               	subwf	fat_format@cntr,w,c
  5911  002652  B0D8               	btfsc	status,0,c
  5912  002654  D00D               	goto	u9480
  5913                           
  5914                           ;fat16.c: 943: {;fat16.c: 944: flash_page_write(cntr, buffer);
  5915  002656  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  5916  00265A  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  5917  00265E  0E40               	movlw	low _buffer
  5918  002660  6E22               	movwf	flash_page_write@data,c
  5919  002662  0E03               	movlw	high _buffer
  5920  002664  6E23               	movwf	flash_page_write@data+1,c
  5921  002666  EC97  F039         	call	_flash_page_write	;wreg free
  5922  00266A  4A25               	infsnz	fat_format@cntr,f,c
  5923  00266C  2A26               	incf	fat_format@cntr+1,f,c
  5924  00266E  D7ED               	goto	l12531
  5925  002670                     u9480:
  5926  002670                     l12541:
  5927                           
  5928                           ;fat16.c: 945: };fat16.c: 948: for(cntr=0; cntr<512; ++cntr)
  5929  002670  0E00               	movlw	0
  5930  002672  6E26               	movwf	fat_format@cntr+1,c
  5931  002674  0E00               	movlw	0
  5932  002676  6E25               	movwf	fat_format@cntr,c
  5933  002678                     l12543:
  5934  002678  0E02               	movlw	2
  5935  00267A  5C26               	subwf	fat_format@cntr+1,w,c
  5936  00267C  B0D8               	btfsc	status,0,c
  5937  00267E  D010               	goto	u9500
  5938                           
  5939                           ;fat16.c: 949: {;fat16.c: 950: buffer[cntr] = _get_root(cntr);
  5940  002680  0E40               	movlw	low _buffer
  5941  002682  2425               	addwf	fat_format@cntr,w,c
  5942  002684  6ED9               	movwf	fsr2l,c
  5943  002686  0E03               	movlw	high _buffer
  5944  002688  2026               	addwfc	fat_format@cntr+1,w,c
  5945  00268A  6EDA               	movwf	fsr2h,c
  5946  00268C  C025  F001         	movff	fat_format@cntr,__get_root@idx
  5947  002690  C026  F002         	movff	fat_format@cntr+1,__get_root@idx+1
  5948  002694  EC3A  F019         	call	__get_root	;wreg free
  5949  002698  6EDF               	movwf	indf2,c
  5950  00269A  4A25               	infsnz	fat_format@cntr,f,c
  5951  00269C  2A26               	incf	fat_format@cntr+1,f,c
  5952  00269E  D7EC               	goto	l12543
  5953  0026A0                     u9500:
  5954                           
  5955                           ;fat16.c: 951: };fat16.c: 952: flash_page_write(34, buffer);
  5956  0026A0  0E00               	movlw	0
  5957  0026A2  6E21               	movwf	flash_page_write@page+1,c
  5958  0026A4  0E22               	movlw	34
  5959  0026A6  6E20               	movwf	flash_page_write@page,c
  5960  0026A8  0E40               	movlw	low _buffer
  5961  0026AA  6E22               	movwf	flash_page_write@data,c
  5962  0026AC  0E03               	movlw	high _buffer
  5963  0026AE  6E23               	movwf	flash_page_write@data+1,c
  5964  0026B0  EC97  F039         	call	_flash_page_write	;wreg free
  5965                           
  5966                           ;fat16.c: 955: for(cntr=0; cntr<512; ++cntr)
  5967  0026B4  0E00               	movlw	0
  5968  0026B6  6E26               	movwf	fat_format@cntr+1,c
  5969  0026B8  0E00               	movlw	0
  5970  0026BA  6E25               	movwf	fat_format@cntr,c
  5971  0026BC                     l12557:
  5972  0026BC  0E02               	movlw	2
  5973  0026BE  5C26               	subwf	fat_format@cntr+1,w,c
  5974  0026C0  B0D8               	btfsc	status,0,c
  5975  0026C2  D00B               	goto	u9520
  5976                           
  5977                           ;fat16.c: 956: {;fat16.c: 957: buffer[cntr] = 0x00;
  5978  0026C4  0E40               	movlw	low _buffer
  5979  0026C6  2425               	addwf	fat_format@cntr,w,c
  5980  0026C8  6ED9               	movwf	fsr2l,c
  5981  0026CA  0E03               	movlw	high _buffer
  5982  0026CC  2026               	addwfc	fat_format@cntr+1,w,c
  5983  0026CE  6EDA               	movwf	fsr2h,c
  5984  0026D0  0E00               	movlw	0
  5985  0026D2  6EDF               	movwf	indf2,c
  5986  0026D4  4A25               	infsnz	fat_format@cntr,f,c
  5987  0026D6  2A26               	incf	fat_format@cntr+1,f,c
  5988  0026D8  D7F1               	goto	l12557
  5989  0026DA                     u9520:
  5990                           
  5991                           ;fat16.c: 958: };fat16.c: 959: for(cntr=34+1; cntr<=37; ++cntr)
  5992  0026DA  0E00               	movlw	0
  5993  0026DC  6E26               	movwf	fat_format@cntr+1,c
  5994  0026DE  0E23               	movlw	35
  5995  0026E0  6E25               	movwf	fat_format@cntr,c
  5996  0026E2                     l12569:
  5997  0026E2  5026               	movf	fat_format@cntr+1,w,c
  5998  0026E4  E111               	bnz	l12579
  5999  0026E6  0E26               	movlw	38
  6000  0026E8  5C25               	subwf	fat_format@cntr,w,c
  6001  0026EA  B0D8               	btfsc	status,0,c
  6002  0026EC  D00D               	goto	u9540
  6003                           
  6004                           ;fat16.c: 960: {;fat16.c: 961: flash_page_write(cntr, buffer);
  6005  0026EE  C025  F020         	movff	fat_format@cntr,flash_page_write@page
  6006  0026F2  C026  F021         	movff	fat_format@cntr+1,flash_page_write@page+1
  6007  0026F6  0E40               	movlw	low _buffer
  6008  0026F8  6E22               	movwf	flash_page_write@data,c
  6009  0026FA  0E03               	movlw	high _buffer
  6010  0026FC  6E23               	movwf	flash_page_write@data+1,c
  6011  0026FE  EC97  F039         	call	_flash_page_write	;wreg free
  6012  002702  4A25               	infsnz	fat_format@cntr,f,c
  6013  002704  2A26               	incf	fat_format@cntr+1,f,c
  6014  002706  D7ED               	goto	l12569
  6015  002708                     u9540:
  6016  002708                     l12579:
  6017                           
  6018                           ;fat16.c: 962: };fat16.c: 965: for(cntr=0; cntr<512; ++cntr)
  6019  002708  0E00               	movlw	0
  6020  00270A  6E26               	movwf	fat_format@cntr+1,c
  6021  00270C  0E00               	movlw	0
  6022  00270E  6E25               	movwf	fat_format@cntr,c
  6023  002710                     l12581:
  6024  002710  0E02               	movlw	2
  6025  002712  5C26               	subwf	fat_format@cntr+1,w,c
  6026  002714  B0D8               	btfsc	status,0,c
  6027  002716  D010               	goto	u9560
  6028                           
  6029                           ;fat16.c: 966: {;fat16.c: 967: buffer[cntr] = _get_data(cntr);
  6030  002718  0E40               	movlw	low _buffer
  6031  00271A  2425               	addwf	fat_format@cntr,w,c
  6032  00271C  6ED9               	movwf	fsr2l,c
  6033  00271E  0E03               	movlw	high _buffer
  6034  002720  2026               	addwfc	fat_format@cntr+1,w,c
  6035  002722  6EDA               	movwf	fsr2h,c
  6036  002724  C025  F001         	movff	fat_format@cntr,__get_data@idx
  6037  002728  C026  F002         	movff	fat_format@cntr+1,__get_data@idx+1
  6038  00272C  EC34  F03E         	call	__get_data	;wreg free
  6039  002730  6EDF               	movwf	indf2,c
  6040  002732  4A25               	infsnz	fat_format@cntr,f,c
  6041  002734  2A26               	incf	fat_format@cntr+1,f,c
  6042  002736  D7EC               	goto	l12581
  6043  002738                     u9560:
  6044                           
  6045                           ;fat16.c: 968: };fat16.c: 969: flash_page_write(38, buffer);
  6046  002738  0E00               	movlw	0
  6047  00273A  6E21               	movwf	flash_page_write@page+1,c
  6048  00273C  0E26               	movlw	38
  6049  00273E  6E20               	movwf	flash_page_write@page,c
  6050  002740  0E40               	movlw	low _buffer
  6051  002742  6E22               	movwf	flash_page_write@data,c
  6052  002744  0E03               	movlw	high _buffer
  6053  002746  6E23               	movwf	flash_page_write@data+1,c
  6054  002748  EC97  F039         	call	_flash_page_write	;wreg free
  6055  00274C  0012               	return		;funcret
  6056  00274E                     __end_of_fat_format:
  6057                           	opt stack 0
  6058                           tblptru	equ	0xFF8
  6059                           tblptrh	equ	0xFF7
  6060                           tblptrl	equ	0xFF6
  6061                           tablat	equ	0xFF5
  6062                           intcon	equ	0xFF2
  6063                           intcon3	equ	0xFF0
  6064                           postinc0	equ	0xFEE
  6065                           wreg	equ	0xFE8
  6066                           postdec1	equ	0xFE5
  6067                           plusw1	equ	0xFE3
  6068                           fsr1h	equ	0xFE2
  6069                           fsr1l	equ	0xFE1
  6070                           indf2	equ	0xFDF
  6071                           postinc2	equ	0xFDE
  6072                           plusw2	equ	0xFDB
  6073                           fsr2h	equ	0xFDA
  6074                           fsr2l	equ	0xFD9
  6075                           status	equ	0xFD8
  6076                           
  6077 ;; *************** function __get_root *****************
  6078 ;; Defined at:
  6079 ;;		line 798 in file "fat16.c"
  6080 ;; Parameters:    Size  Location     Type
  6081 ;;  idx             2    0[COMRAM] unsigned int 
  6082 ;; Auto vars:     Size  Location     Type
  6083 ;;		None
  6084 ;; Return value:  Size  Location     Type
  6085 ;;                  1    wreg      unsigned char 
  6086 ;; Registers used:
  6087 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6088 ;; Tracked objects:
  6089 ;;		On entry : 0/0
  6090 ;;		On exit  : 0/0
  6091 ;;		Unchanged: 0/0
  6092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6093 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6094 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6095 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6096 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6097 ;;Total ram usage:        6 bytes
  6098 ;; Hardware stack levels used:    1
  6099 ;; This function calls:
  6100 ;;		Nothing
  6101 ;; This function is called by:
  6102 ;;		_fat_format
  6103 ;; This function uses a non-reentrant model
  6104 ;;
  6105                           
  6106                           	psect	text20
  6107  003274                     __ptext20:
  6108                           	opt stack 0
  6109  003274                     __get_root:
  6110                           	opt stack 27
  6111                           
  6112                           ;fat16.c: 800: if (idx < 0x20)
  6113                           
  6114                           ;incstack = 0
  6115  003274  5002               	movf	__get_root@idx+1,w,c
  6116  003276  E11D               	bnz	l12057
  6117  003278  0E20               	movlw	32
  6118  00327A  5C01               	subwf	__get_root@idx,w,c
  6119  00327C  B0D8               	btfsc	status,0,c
  6120  00327E  D019               	goto	l2101
  6121                           
  6122                           ;fat16.c: 801: {;fat16.c: 802: if (idx < 11)
  6123  003280  5002               	movf	__get_root@idx+1,w,c
  6124  003282  E110               	bnz	l12051
  6125  003284  0E0B               	movlw	11
  6126  003286  5C01               	subwf	__get_root@idx,w,c
  6127  003288  B0D8               	btfsc	status,0,c
  6128  00328A  D00C               	goto	l2099
  6129                           
  6130                           ;fat16.c: 803: {;fat16.c: 804: return "SolarChargr"[idx];
  6131  00328C  0EDC               	movlw	low STR_9
  6132  00328E  2401               	addwf	__get_root@idx,w,c
  6133  003290  6EF6               	movwf	tblptrl,c
  6134  003292  0E8F               	movlw	high STR_9
  6135  003294  2002               	addwfc	__get_root@idx+1,w,c
  6136  003296  6EF7               	movwf	tblptrh,c
  6137  003298                     	if	1	;There are 3 active tblptr bytes
  6138  003298  6AF8               	clrf	tblptru,c
  6139  00329A  0E00               	movlw	low (__mediumconst shr (0+16))
  6140  00329C  22F8               	addwfc	tblptru,f,c
  6141  00329E                     	endif
  6142  00329E  0008               	tblrd		*
  6143  0032A0  50F5               	movf	tablat,w,c
  6144  0032A2  0012               	return	
  6145  0032A4                     l2099:
  6146  0032A4                     l12051:
  6147                           
  6148                           ;fat16.c: 805: };fat16.c: 806: if(idx==11)
  6149  0032A4  0E0B               	movlw	11
  6150  0032A6  1801               	xorwf	__get_root@idx,w,c
  6151  0032A8  1002               	iorwf	__get_root@idx+1,w,c
  6152  0032AA  A4D8               	btfss	status,2,c
  6153  0032AC  D002               	goto	l2101
  6154                           
  6155                           ;fat16.c: 807: {;fat16.c: 808: return 0x08;
  6156  0032AE  0E08               	movlw	8
  6157  0032B0  0012               	return	
  6158  0032B2                     l2101:
  6159  0032B2                     l12057:
  6160                           
  6161                           ;fat16.c: 809: };fat16.c: 810: };fat16.c: 811: if (idx < 0x40)
  6162  0032B2  5002               	movf	__get_root@idx+1,w,c
  6163  0032B4  E103               	bnz	u8951
  6164  0032B6  0E40               	movlw	64
  6165  0032B8  5C01               	subwf	__get_root@idx,w,c
  6166  0032BA  B0D8               	btfsc	status,0,c
  6167  0032BC                     u8951:
  6168  0032BC  D0A4               	goto	l2127
  6169                           
  6170                           ;fat16.c: 812: {;fat16.c: 813: idx -= 0x20;
  6171  0032BE  0E20               	movlw	32
  6172  0032C0  5E01               	subwf	__get_root@idx,f,c
  6173  0032C2  0E00               	movlw	0
  6174  0032C4  5A02               	subwfb	__get_root@idx+1,f,c
  6175                           
  6176                           ;fat16.c: 814: if (idx < 0+8)
  6177  0032C6  5002               	movf	__get_root@idx+1,w,c
  6178  0032C8  E110               	bnz	l12065
  6179  0032CA  0E08               	movlw	8
  6180  0032CC  5C01               	subwf	__get_root@idx,w,c
  6181  0032CE  B0D8               	btfsc	status,0,c
  6182  0032D0  D00C               	goto	l2103
  6183                           
  6184                           ;fat16.c: 815: {;fat16.c: 816: return "FILE    "[idx];
  6185  0032D2  0EE8               	movlw	low STR_10
  6186  0032D4  2401               	addwf	__get_root@idx,w,c
  6187  0032D6  6EF6               	movwf	tblptrl,c
  6188  0032D8  0E8F               	movlw	high STR_10
  6189  0032DA  2002               	addwfc	__get_root@idx+1,w,c
  6190  0032DC  6EF7               	movwf	tblptrh,c
  6191  0032DE                     	if	1	;There are 3 active tblptr bytes
  6192  0032DE  6AF8               	clrf	tblptru,c
  6193  0032E0  0E00               	movlw	low (__mediumconst shr (0+16))
  6194  0032E2  22F8               	addwfc	tblptru,f,c
  6195  0032E4                     	endif
  6196  0032E4  0008               	tblrd		*
  6197  0032E6  50F5               	movf	tablat,w,c
  6198  0032E8  0012               	return	
  6199  0032EA                     l2103:
  6200  0032EA                     l12065:
  6201                           
  6202                           ;fat16.c: 817: };fat16.c: 818: if (idx < 11)
  6203  0032EA  5002               	movf	__get_root@idx+1,w,c
  6204  0032EC  E146               	bnz	l12157
  6205  0032EE  0E0B               	movlw	11
  6206  0032F0  5C01               	subwf	__get_root@idx,w,c
  6207  0032F2  B0D8               	btfsc	status,0,c
  6208  0032F4  D042               	goto	l2105
  6209                           
  6210                           ;fat16.c: 819: {;fat16.c: 820: return "TXT"[idx-8];
  6211  0032F6  0EF8               	movlw	248
  6212  0032F8  6E03               	movwf	??__get_root& (0+255),c
  6213  0032FA  0EFF               	movlw	255
  6214  0032FC  6E04               	movwf	(??__get_root+1)& (0+255),c
  6215  0032FE  C001  F005         	movff	__get_root@idx,??__get_root+2
  6216  003302  C002  F006         	movff	__get_root@idx+1,??__get_root+3
  6217  003306  5003               	movf	??__get_root,w,c
  6218  003308  2605               	addwf	??__get_root+2,f,c
  6219  00330A  5004               	movf	??__get_root+1,w,c
  6220  00330C  2206               	addwfc	??__get_root+3,f,c
  6221  00330E  0EFA               	movlw	low STR_11
  6222  003310  2405               	addwf	??__get_root+2,w,c
  6223  003312  6EF6               	movwf	tblptrl,c
  6224  003314  0E8F               	movlw	high STR_11
  6225  003316  2006               	addwfc	??__get_root+3,w,c
  6226  003318  6EF7               	movwf	tblptrh,c
  6227  00331A                     	if	1	;There are 3 active tblptr bytes
  6228  00331A  6AF8               	clrf	tblptru,c
  6229  00331C  0E00               	movlw	low (__mediumconst shr (0+16))
  6230  00331E  22F8               	addwfc	tblptru,f,c
  6231  003320                     	endif
  6232  003320  0008               	tblrd		*
  6233  003322  50F5               	movf	tablat,w,c
  6234  003324  0012               	return	
  6235  003326                     
  6236                           ;fat16.c: 825: return 0x20;
  6237  003326  0E20               	movlw	32
  6238  003328  0012               	return	
  6239  00332A                     
  6240                           ;fat16.c: 827: return 0x06;
  6241  00332A  0E06               	movlw	6
  6242  00332C  0012               	return	
  6243  00332E                     
  6244                           ;fat16.c: 829: return 0x28;
  6245  00332E  0E28               	movlw	40
  6246  003330  0012               	return	
  6247  003332                     
  6248                           ;fat16.c: 831: return 0x78;
  6249  003332  0E78               	movlw	120
  6250  003334  0012               	return	
  6251  003336                     
  6252                           ;fat16.c: 833: return 0xDE;
  6253  003336  0EDE               	movlw	222
  6254  003338  0012               	return	
  6255  00333A                     
  6256                           ;fat16.c: 835: return 0x38;
  6257  00333A  0E38               	movlw	56
  6258  00333C  0012               	return	
  6259  00333E                     
  6260                           ;fat16.c: 837: return 0x5F;
  6261  00333E  0E5F               	movlw	95
  6262  003340  0012               	return	
  6263  003342                     
  6264                           ;fat16.c: 839: return 0x4B;
  6265  003342  0E4B               	movlw	75
  6266  003344  0012               	return	
  6267  003346                     
  6268                           ;fat16.c: 841: return 0x00;
  6269  003346  0E00               	movlw	0
  6270  003348  0012               	return	
  6271  00334A                     
  6272                           ;fat16.c: 843: return 0x00;
  6273  00334A  0E00               	movlw	0
  6274  00334C  0012               	return	
  6275  00334E                     
  6276                           ;fat16.c: 845: return 0x04;
  6277  00334E  0E04               	movlw	4
  6278  003350  0012               	return	
  6279  003352                     
  6280                           ;fat16.c: 847: return 0x77;
  6281  003352  0E77               	movlw	119
  6282  003354  0012               	return	
  6283  003356                     
  6284                           ;fat16.c: 849: return 0xDE;
  6285  003356  0EDE               	movlw	222
  6286  003358  0012               	return	
  6287  00335A                     
  6288                           ;fat16.c: 851: return 0x38;
  6289  00335A  0E38               	movlw	56
  6290  00335C  0012               	return	
  6291  00335E                     
  6292                           ;fat16.c: 853: return ((unsigned char)((((uint16_t)2))&0xFF));
  6293  00335E  0E02               	movlw	2
  6294  003360  0012               	return	
  6295  003362                     
  6296                           ;fat16.c: 855: return ((unsigned char)(((((uint16_t)2))>>8)&0xFF));
  6297  003362  0E00               	movlw	0
  6298  003364  0012               	return	
  6299  003366                     
  6300                           ;fat16.c: 857: return ((unsigned char)((((unsigned short)((((uint32_t)12))&0xFFFF)))&0xF
      +                          F));
  6301  003366  0E0C               	movlw	12
  6302  003368  0012               	return	
  6303  00336A                     
  6304                           ;fat16.c: 860: return ((unsigned char)(((((unsigned short)((((uint32_t)12))&0xFFFF)))>>8
      +                          )&0xFF));
  6305  00336A  0E00               	movlw	0
  6306  00336C  0012               	return	
  6307  00336E                     
  6308                           ;fat16.c: 863: return ((unsigned char)((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF)
      +                          ))&0xFF));
  6309  00336E  0E00               	movlw	0
  6310  003370  0012               	return	
  6311  003372                     
  6312                           ;fat16.c: 866: return ((unsigned char)(((((unsigned short)(((((uint32_t)12))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6313  003372  0E00               	movlw	0
  6314  003374  0012               	return	
  6315  003376                     
  6316                           ;fat16.c: 869: return 0x00;
  6317  003376  0E00               	movlw	0
  6318  003378  0012               	return	
  6319  00337A                     l2105:
  6320  00337A                     l12157:
  6321  00337A  C001  F003         	movff	__get_root@idx,??__get_root
  6322  00337E  C002  F004         	movff	__get_root@idx+1,??__get_root+1
  6323                           
  6324                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6325                           ; Switch size 1, requested type "space"
  6326                           ; Number of cases is 1, Range of values is 0 to 0
  6327                           ; switch strategies available:
  6328                           ; Name         Instructions Cycles
  6329                           ; simple_byte            4     3 (average)
  6330                           ;	Chosen strategy is simple_byte
  6331  003382  5004               	movf	??__get_root+1,w,c
  6332  003384  0A00               	xorlw	0	; case 0
  6333  003386  A4D8               	btfss	status,2,c
  6334  003388  D7F6               	goto	l2126
  6335                           
  6336                           ; Switch size 1, requested type "space"
  6337                           ; Number of cases is 20, Range of values is 11 to 31
  6338                           ; switch strategies available:
  6339                           ; Name         Instructions Cycles
  6340                           ; simple_byte           61    31 (average)
  6341                           ;	Chosen strategy is simple_byte
  6342  00338A  5003               	movf	??__get_root,w,c
  6343  00338C  0A0B               	xorlw	11	; case 11
  6344  00338E  B4D8               	btfsc	status,2,c
  6345  003390  D7CA               	goto	l2106
  6346  003392  0A06               	xorlw	6	; case 13
  6347  003394  B4D8               	btfsc	status,2,c
  6348  003396  D7C9               	goto	l2107
  6349  003398  0A03               	xorlw	3	; case 14
  6350  00339A  B4D8               	btfsc	status,2,c
  6351  00339C  D7C8               	goto	l2108
  6352  00339E  0A01               	xorlw	1	; case 15
  6353  0033A0  B4D8               	btfsc	status,2,c
  6354  0033A2  D7C7               	goto	l2109
  6355  0033A4  0A1F               	xorlw	31	; case 16
  6356  0033A6  B4D8               	btfsc	status,2,c
  6357  0033A8  D7C6               	goto	l2110
  6358  0033AA  0A01               	xorlw	1	; case 17
  6359  0033AC  B4D8               	btfsc	status,2,c
  6360  0033AE  D7C5               	goto	l2111
  6361  0033B0  0A03               	xorlw	3	; case 18
  6362  0033B2  B4D8               	btfsc	status,2,c
  6363  0033B4  D7C4               	goto	l2112
  6364  0033B6  0A01               	xorlw	1	; case 19
  6365  0033B8  B4D8               	btfsc	status,2,c
  6366  0033BA  D7C3               	goto	l2113
  6367  0033BC  0A07               	xorlw	7	; case 20
  6368  0033BE  B4D8               	btfsc	status,2,c
  6369  0033C0  D7C2               	goto	l2114
  6370  0033C2  0A01               	xorlw	1	; case 21
  6371  0033C4  B4D8               	btfsc	status,2,c
  6372  0033C6  D7C1               	goto	l2115
  6373  0033C8  0A03               	xorlw	3	; case 22
  6374  0033CA  B4D8               	btfsc	status,2,c
  6375  0033CC  D7C0               	goto	l2116
  6376  0033CE  0A01               	xorlw	1	; case 23
  6377  0033D0  B4D8               	btfsc	status,2,c
  6378  0033D2  D7BF               	goto	l2117
  6379  0033D4  0A0F               	xorlw	15	; case 24
  6380  0033D6  B4D8               	btfsc	status,2,c
  6381  0033D8  D7BE               	goto	l2118
  6382  0033DA  0A01               	xorlw	1	; case 25
  6383  0033DC  B4D8               	btfsc	status,2,c
  6384  0033DE  D7BD               	goto	l2119
  6385  0033E0  0A03               	xorlw	3	; case 26
  6386  0033E2  B4D8               	btfsc	status,2,c
  6387  0033E4  D7BC               	goto	l2120
  6388  0033E6  0A01               	xorlw	1	; case 27
  6389  0033E8  B4D8               	btfsc	status,2,c
  6390  0033EA  D7BB               	goto	l2121
  6391  0033EC  0A07               	xorlw	7	; case 28
  6392  0033EE  B4D8               	btfsc	status,2,c
  6393  0033F0  D7BA               	goto	l2122
  6394  0033F2  0A01               	xorlw	1	; case 29
  6395  0033F4  B4D8               	btfsc	status,2,c
  6396  0033F6  D7B9               	goto	l2123
  6397  0033F8  0A03               	xorlw	3	; case 30
  6398  0033FA  B4D8               	btfsc	status,2,c
  6399  0033FC  D7B8               	goto	l2124
  6400  0033FE  0A01               	xorlw	1	; case 31
  6401  003400  B4D8               	btfsc	status,2,c
  6402  003402  D7B7               	goto	l2125
  6403  003404  D7B8               	goto	l2126
  6404  003406                     l2127:
  6405                           
  6406                           ;fat16.c: 871: };fat16.c: 872: return 0X00;
  6407  003406  0E00               	movlw	0
  6408  003408  0012               	return	
  6409  00340A                     __end_of__get_root:
  6410                           	opt stack 0
  6411                           tblptru	equ	0xFF8
  6412                           tblptrh	equ	0xFF7
  6413                           tblptrl	equ	0xFF6
  6414                           tablat	equ	0xFF5
  6415                           intcon	equ	0xFF2
  6416                           intcon3	equ	0xFF0
  6417                           postinc0	equ	0xFEE
  6418                           wreg	equ	0xFE8
  6419                           postdec1	equ	0xFE5
  6420                           plusw1	equ	0xFE3
  6421                           fsr1h	equ	0xFE2
  6422                           fsr1l	equ	0xFE1
  6423                           indf2	equ	0xFDF
  6424                           postinc2	equ	0xFDE
  6425                           plusw2	equ	0xFDB
  6426                           fsr2h	equ	0xFDA
  6427                           fsr2l	equ	0xFD9
  6428                           status	equ	0xFD8
  6429                           
  6430 ;; *************** function __get_mbr *****************
  6431 ;; Defined at:
  6432 ;;		line 625 in file "fat16.c"
  6433 ;; Parameters:    Size  Location     Type
  6434 ;;  idx             2    0[COMRAM] unsigned int 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;		None
  6437 ;; Return value:  Size  Location     Type
  6438 ;;                  1    wreg      unsigned char 
  6439 ;; Registers used:
  6440 ;;		wreg, status,2, status,0
  6441 ;; Tracked objects:
  6442 ;;		On entry : 0/0
  6443 ;;		On exit  : 0/0
  6444 ;;		Unchanged: 0/0
  6445 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6446 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6447 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6448 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6449 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6450 ;;Total ram usage:        4 bytes
  6451 ;; Hardware stack levels used:    1
  6452 ;; This function calls:
  6453 ;;		Nothing
  6454 ;; This function is called by:
  6455 ;;		_fat_get_format_status
  6456 ;;		_fat_format
  6457 ;; This function uses a non-reentrant model
  6458 ;;
  6459                           
  6460                           	psect	text21
  6461  004F6E                     __ptext21:
  6462                           	opt stack 0
  6463  004F6E                     __get_mbr:
  6464                           	opt stack 27
  6465                           
  6466                           ;fat16.c: 627: switch (idx)
  6467                           
  6468                           ;incstack = 0
  6469  004F6E  D026               	goto	l2008
  6470  004F70                     
  6471                           ;fat16.c: 630: return 0x80;
  6472  004F70  0E80               	movlw	128
  6473  004F72  0012               	return	
  6474  004F74                     
  6475                           ;fat16.c: 632: return 0;
  6476  004F74  0E00               	movlw	0
  6477  004F76  0012               	return	
  6478  004F78                     
  6479                           ;fat16.c: 634: return 2;
  6480  004F78  0E02               	movlw	2
  6481  004F7A  0012               	return	
  6482  004F7C                     
  6483                           ;fat16.c: 636: return 0;
  6484  004F7C  0E00               	movlw	0
  6485  004F7E  0012               	return	
  6486  004F80                     
  6487                           ;fat16.c: 638: return 0x04;
  6488  004F80  0E04               	movlw	4
  6489  004F82  0012               	return	
  6490  004F84                     
  6491                           ;fat16.c: 640: return 2;
  6492  004F84  0E02               	movlw	2
  6493  004F86  0012               	return	
  6494  004F88                     
  6495                           ;fat16.c: 642: return 3;
  6496  004F88  0E03               	movlw	3
  6497  004F8A  0012               	return	
  6498  004F8C                     
  6499                           ;fat16.c: 644: return 8;
  6500  004F8C  0E08               	movlw	8
  6501  004F8E  0012               	return	
  6502  004F90                     
  6503                           ;fat16.c: 646: return ((unsigned char)((((unsigned short)((((uint32_t)1))&0xFFFF)))&0xFF
      +                          ));
  6504  004F90  0E01               	movlw	1
  6505  004F92  0012               	return	
  6506  004F94                     
  6507                           ;fat16.c: 648: return ((unsigned char)(((((unsigned short)((((uint32_t)1))&0xFFFF)))>>8)
      +                          &0xFF));
  6508  004F94  0E00               	movlw	0
  6509  004F96  0012               	return	
  6510  004F98                     
  6511                           ;fat16.c: 650: return ((unsigned char)((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF))
      +                          )&0xFF));
  6512  004F98  0E00               	movlw	0
  6513  004F9A  0012               	return	
  6514  004F9C                     
  6515                           ;fat16.c: 652: return ((unsigned char)(((((unsigned short)(((((uint32_t)1))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6516  004F9C  0E00               	movlw	0
  6517  004F9E  0012               	return	
  6518  004FA0                     
  6519                           ;fat16.c: 654: return ((unsigned char)((((unsigned short)((((uint32_t)8191))&0xFFFF)))&0
      +                          xFF));
  6520  004FA0  0EFF               	movlw	255
  6521  004FA2  0012               	return	
  6522  004FA4                     
  6523                           ;fat16.c: 656: return ((unsigned char)(((((unsigned short)((((uint32_t)8191))&0xFFFF)))>
      +                          >8)&0xFF));
  6524  004FA4  0E1F               	movlw	31
  6525  004FA6  0012               	return	
  6526  004FA8                     
  6527                           ;fat16.c: 658: return ((unsigned char)((((unsigned short)(((((uint32_t)8191))>>16)&0xFFF
      +                          F)))&0xFF));
  6528  004FA8  0E00               	movlw	0
  6529  004FAA  0012               	return	
  6530  004FAC                     
  6531                           ;fat16.c: 660: return ((unsigned char)(((((unsigned short)(((((uint32_t)8191))>>16)&0xFF
      +                          FF)))>>8)&0xFF));
  6532  004FAC  0E00               	movlw	0
  6533  004FAE  0012               	return	
  6534  004FB0                     
  6535                           ;fat16.c: 662: return ((unsigned char)((((uint16_t)0X55AA)>>8)&0xFF));
  6536  004FB0  0E55               	movlw	85
  6537  004FB2  0012               	return	
  6538  004FB4                     
  6539                           ;fat16.c: 664: return ((unsigned char)(((uint16_t)0X55AA)&0xFF));
  6540  004FB4  0EAA               	movlw	170
  6541  004FB6  0012               	return	
  6542  004FB8                     
  6543                           ;fat16.c: 666: return 0X00;
  6544  004FB8  0E00               	movlw	0
  6545                           
  6546                           ;fat16.c: 667: }
  6547  004FBA  0012               	return	
  6548  004FBC                     l2008:
  6549  004FBC  C001  F003         	movff	__get_mbr@idx,??__get_mbr
  6550  004FC0  C002  F004         	movff	__get_mbr@idx+1,??__get_mbr+1
  6551                           
  6552                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  6553                           ; Switch size 1, requested type "space"
  6554                           ; Number of cases is 1, Range of values is 1 to 1
  6555                           ; switch strategies available:
  6556                           ; Name         Instructions Cycles
  6557                           ; simple_byte            4     3 (average)
  6558                           ;	Chosen strategy is simple_byte
  6559  004FC4  5004               	movf	??__get_mbr+1,w,c
  6560  004FC6  0A01               	xorlw	1	; case 1
  6561  004FC8  A4D8               	btfss	status,2,c
  6562  004FCA  D7F6               	goto	l2028
  6563                           
  6564                           ; Switch size 1, requested type "space"
  6565                           ; Number of cases is 18, Range of values is 190 to 255
  6566                           ; switch strategies available:
  6567                           ; Name         Instructions Cycles
  6568                           ; simple_byte           55    28 (average)
  6569                           ;	Chosen strategy is simple_byte
  6570  004FCC  5003               	movf	??__get_mbr,w,c
  6571  004FCE  0ABE               	xorlw	190	; case 190
  6572  004FD0  B4D8               	btfsc	status,2,c
  6573  004FD2  D7CE               	goto	l2009
  6574  004FD4  0A01               	xorlw	1	; case 191
  6575  004FD6  B4D8               	btfsc	status,2,c
  6576  004FD8  D7CD               	goto	l2011
  6577  004FDA  0A7F               	xorlw	127	; case 192
  6578  004FDC  B4D8               	btfsc	status,2,c
  6579  004FDE  D7CC               	goto	l2012
  6580  004FE0  0A01               	xorlw	1	; case 193
  6581  004FE2  B4D8               	btfsc	status,2,c
  6582  004FE4  D7CB               	goto	l2013
  6583  004FE6  0A03               	xorlw	3	; case 194
  6584  004FE8  B4D8               	btfsc	status,2,c
  6585  004FEA  D7CA               	goto	l2014
  6586  004FEC  0A01               	xorlw	1	; case 195
  6587  004FEE  B4D8               	btfsc	status,2,c
  6588  004FF0  D7C9               	goto	l2015
  6589  004FF2  0A07               	xorlw	7	; case 196
  6590  004FF4  B4D8               	btfsc	status,2,c
  6591  004FF6  D7C8               	goto	l2016
  6592  004FF8  0A01               	xorlw	1	; case 197
  6593  004FFA  B4D8               	btfsc	status,2,c
  6594  004FFC  D7C7               	goto	l2017
  6595  004FFE  0A03               	xorlw	3	; case 198
  6596  005000  B4D8               	btfsc	status,2,c
  6597  005002  D7C6               	goto	l2018
  6598  005004  0A01               	xorlw	1	; case 199
  6599  005006  B4D8               	btfsc	status,2,c
  6600  005008  D7C5               	goto	l2019
  6601  00500A  0A0F               	xorlw	15	; case 200
  6602  00500C  B4D8               	btfsc	status,2,c
  6603  00500E  D7C4               	goto	l2020
  6604  005010  0A01               	xorlw	1	; case 201
  6605  005012  B4D8               	btfsc	status,2,c
  6606  005014  D7C3               	goto	l2021
  6607  005016  0A03               	xorlw	3	; case 202
  6608  005018  B4D8               	btfsc	status,2,c
  6609  00501A  D7C2               	goto	l2022
  6610  00501C  0A01               	xorlw	1	; case 203
  6611  00501E  B4D8               	btfsc	status,2,c
  6612  005020  D7C1               	goto	l2023
  6613  005022  0A07               	xorlw	7	; case 204
  6614  005024  B4D8               	btfsc	status,2,c
  6615  005026  D7C0               	goto	l2024
  6616  005028  0A01               	xorlw	1	; case 205
  6617  00502A  B4D8               	btfsc	status,2,c
  6618  00502C  D7BF               	goto	l2025
  6619  00502E  0A33               	xorlw	51	; case 254
  6620  005030  B4D8               	btfsc	status,2,c
  6621  005032  D7BE               	goto	l2026
  6622  005034  0A01               	xorlw	1	; case 255
  6623  005036  B4D8               	btfsc	status,2,c
  6624  005038  D7BD               	goto	l2027
  6625  00503A  D7BE               	goto	l2028
  6626  00503C                     __end_of__get_mbr:
  6627                           	opt stack 0
  6628                           tblptru	equ	0xFF8
  6629                           tblptrh	equ	0xFF7
  6630                           tblptrl	equ	0xFF6
  6631                           tablat	equ	0xFF5
  6632                           intcon	equ	0xFF2
  6633                           intcon3	equ	0xFF0
  6634                           postinc0	equ	0xFEE
  6635                           wreg	equ	0xFE8
  6636                           postdec1	equ	0xFE5
  6637                           plusw1	equ	0xFE3
  6638                           fsr1h	equ	0xFE2
  6639                           fsr1l	equ	0xFE1
  6640                           indf2	equ	0xFDF
  6641                           postinc2	equ	0xFDE
  6642                           plusw2	equ	0xFDB
  6643                           fsr2h	equ	0xFDA
  6644                           fsr2l	equ	0xFD9
  6645                           status	equ	0xFD8
  6646                           
  6647 ;; *************** function __get_fbr *****************
  6648 ;; Defined at:
  6649 ;;		line 670 in file "fat16.c"
  6650 ;; Parameters:    Size  Location     Type
  6651 ;;  idx             2    0[COMRAM] unsigned int 
  6652 ;; Auto vars:     Size  Location     Type
  6653 ;;		None
  6654 ;; Return value:  Size  Location     Type
  6655 ;;                  1    wreg      unsigned char 
  6656 ;; Registers used:
  6657 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  6658 ;; Tracked objects:
  6659 ;;		On entry : 0/0
  6660 ;;		On exit  : 0/0
  6661 ;;		Unchanged: 0/0
  6662 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  6663 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6664 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6665 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6666 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  6667 ;;Total ram usage:        4 bytes
  6668 ;; Hardware stack levels used:    1
  6669 ;; This function calls:
  6670 ;;		Nothing
  6671 ;; This function is called by:
  6672 ;;		_fat_get_format_status
  6673 ;;		_fat_format
  6674 ;; This function uses a non-reentrant model
  6675 ;;
  6676                           
  6677                           	psect	text22
  6678  001A38                     __ptext22:
  6679                           	opt stack 0
  6680  001A38                     __get_fbr:
  6681                           	opt stack 27
  6682                           
  6683                           ;fat16.c: 672: switch (idx)
  6684                           
  6685                           ;incstack = 0
  6686  001A38  D091               	goto	l2032
  6687  001A3A                     
  6688                           ;fat16.c: 675: return 0xEB;
  6689  001A3A  0EEB               	movlw	235
  6690  001A3C  0012               	return	
  6691  001A3E                     
  6692                           ;fat16.c: 677: return 0x3C;
  6693  001A3E  0E3C               	movlw	60
  6694  001A40  0012               	return	
  6695  001A42                     
  6696                           ;fat16.c: 679: return 0x90;
  6697  001A42  0E90               	movlw	144
  6698  001A44  0012               	return	
  6699  001A46                     
  6700                           ;fat16.c: 681: return "MSDOS5.0"[0];
  6701  001A46  0EF1               	movlw	low STR_1
  6702  001A48  6EF6               	movwf	tblptrl,c
  6703  001A4A                     	if	1	;There is more than 1 active tblptr byte
  6704  001A4A  0E8F               	movlw	high STR_1
  6705  001A4C  6EF7               	movwf	tblptrh,c
  6706  001A4E                     	endif
  6707  001A4E                     	if	1	;There are 3 active tblptr bytes
  6708  001A4E  0E00               	movlw	low (STR_1 shr (0+16))
  6709  001A50  6EF8               	movwf	tblptru,c
  6710  001A52                     	endif
  6711  001A52  0008               	tblrd		*
  6712  001A54  50F5               	movf	tablat,w,c
  6713  001A56  0012               	return	
  6714  001A58                     
  6715                           ;fat16.c: 683: return "MSDOS5.0"[1];
  6716  001A58  0EF2               	movlw	low (STR_1+1)
  6717  001A5A  6EF6               	movwf	tblptrl,c
  6718  001A5C  0E8F               	movlw	high (STR_1+1)
  6719  001A5E  6EF7               	movwf	tblptrh,c
  6720  001A60                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6721  001A60  6AF8               	clrf	tblptru,c
  6722  001A62                     	endif
  6723  001A62                     	if	0	;tblptru may be non-zero
  6724  001A62                     	endif
  6725  001A62  0008               	tblrd		*
  6726  001A64  50F5               	movf	tablat,w,c
  6727  001A66  0012               	return	
  6728  001A68                     
  6729                           ;fat16.c: 685: return "MSDOS5.0"[2];
  6730  001A68  0EF3               	movlw	low (STR_1+2)
  6731  001A6A  6EF6               	movwf	tblptrl,c
  6732  001A6C  0E8F               	movlw	high (STR_1+2)
  6733  001A6E  6EF7               	movwf	tblptrh,c
  6734  001A70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6735  001A70  6AF8               	clrf	tblptru,c
  6736  001A72                     	endif
  6737  001A72                     	if	0	;tblptru may be non-zero
  6738  001A72                     	endif
  6739  001A72  0008               	tblrd		*
  6740  001A74  50F5               	movf	tablat,w,c
  6741  001A76  0012               	return	
  6742  001A78                     
  6743                           ;fat16.c: 687: return "MSDOS5.0"[3];
  6744  001A78  0EF4               	movlw	low (STR_1+3)
  6745  001A7A  6EF6               	movwf	tblptrl,c
  6746  001A7C  0E8F               	movlw	high (STR_1+3)
  6747  001A7E  6EF7               	movwf	tblptrh,c
  6748  001A80                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6749  001A80  6AF8               	clrf	tblptru,c
  6750  001A82                     	endif
  6751  001A82                     	if	0	;tblptru may be non-zero
  6752  001A82                     	endif
  6753  001A82  0008               	tblrd		*
  6754  001A84  50F5               	movf	tablat,w,c
  6755  001A86  0012               	return	
  6756  001A88                     
  6757                           ;fat16.c: 689: return "MSDOS5.0"[4];
  6758  001A88  0EF5               	movlw	low (STR_1+4)
  6759  001A8A  6EF6               	movwf	tblptrl,c
  6760  001A8C  0E8F               	movlw	high (STR_1+4)
  6761  001A8E  6EF7               	movwf	tblptrh,c
  6762  001A90                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6763  001A90  6AF8               	clrf	tblptru,c
  6764  001A92                     	endif
  6765  001A92                     	if	0	;tblptru may be non-zero
  6766  001A92                     	endif
  6767  001A92  0008               	tblrd		*
  6768  001A94  50F5               	movf	tablat,w,c
  6769  001A96  0012               	return	
  6770  001A98                     
  6771                           ;fat16.c: 691: return "MSDOS5.0"[5];
  6772  001A98  0EF6               	movlw	low (STR_1+5)
  6773  001A9A  6EF6               	movwf	tblptrl,c
  6774  001A9C  0E8F               	movlw	high (STR_1+5)
  6775  001A9E  6EF7               	movwf	tblptrh,c
  6776  001AA0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6777  001AA0  6AF8               	clrf	tblptru,c
  6778  001AA2                     	endif
  6779  001AA2                     	if	0	;tblptru may be non-zero
  6780  001AA2                     	endif
  6781  001AA2  0008               	tblrd		*
  6782  001AA4  50F5               	movf	tablat,w,c
  6783  001AA6  0012               	return	
  6784  001AA8                     
  6785                           ;fat16.c: 693: return "MSDOS5.0"[6];
  6786  001AA8  0EF7               	movlw	low (STR_1+6)
  6787  001AAA  6EF6               	movwf	tblptrl,c
  6788  001AAC  0E8F               	movlw	high (STR_1+6)
  6789  001AAE  6EF7               	movwf	tblptrh,c
  6790  001AB0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6791  001AB0  6AF8               	clrf	tblptru,c
  6792  001AB2                     	endif
  6793  001AB2                     	if	0	;tblptru may be non-zero
  6794  001AB2                     	endif
  6795  001AB2  0008               	tblrd		*
  6796  001AB4  50F5               	movf	tablat,w,c
  6797  001AB6  0012               	return	
  6798  001AB8                     
  6799                           ;fat16.c: 695: return "MSDOS5.0"[7];
  6800  001AB8  0EF8               	movlw	low (STR_1+7)
  6801  001ABA  6EF6               	movwf	tblptrl,c
  6802  001ABC  0E8F               	movlw	high (STR_1+7)
  6803  001ABE  6EF7               	movwf	tblptrh,c
  6804  001AC0                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6805  001AC0  6AF8               	clrf	tblptru,c
  6806  001AC2                     	endif
  6807  001AC2                     	if	0	;tblptru may be non-zero
  6808  001AC2                     	endif
  6809  001AC2  0008               	tblrd		*
  6810  001AC4  50F5               	movf	tablat,w,c
  6811  001AC6  0012               	return	
  6812  001AC8                     
  6813                           ;fat16.c: 697: return ((unsigned char)((((uint16_t)512))&0xFF));
  6814  001AC8  0E00               	movlw	0
  6815  001ACA  0012               	return	
  6816  001ACC                     
  6817                           ;fat16.c: 699: return ((unsigned char)(((((uint16_t)512))>>8)&0xFF));
  6818  001ACC  0E02               	movlw	2
  6819  001ACE  0012               	return	
  6820  001AD0                     
  6821                           ;fat16.c: 701: return 1;
  6822  001AD0  0E01               	movlw	1
  6823  001AD2  0012               	return	
  6824  001AD4                     
  6825                           ;fat16.c: 703: return ((unsigned char)((((uint16_t)1))&0xFF));
  6826  001AD4  0E01               	movlw	1
  6827  001AD6  0012               	return	
  6828  001AD8                     
  6829                           ;fat16.c: 705: return ((unsigned char)(((((uint16_t)1))>>8)&0xFF));
  6830  001AD8  0E00               	movlw	0
  6831  001ADA  0012               	return	
  6832  001ADC                     
  6833                           ;fat16.c: 707: return 1;
  6834  001ADC  0E01               	movlw	1
  6835  001ADE  0012               	return	
  6836  001AE0                     
  6837                           ;fat16.c: 709: return ((unsigned char)((((uint16_t)64))&0xFF));
  6838  001AE0  0E40               	movlw	64
  6839  001AE2  0012               	return	
  6840  001AE4                     
  6841                           ;fat16.c: 711: return ((unsigned char)(((((uint16_t)64))>>8)&0xFF));
  6842  001AE4  0E00               	movlw	0
  6843  001AE6  0012               	return	
  6844  001AE8                     
  6845                           ;fat16.c: 713: return ((unsigned char)((((uint16_t)8191))&0xFF));
  6846  001AE8  0EFF               	movlw	255
  6847  001AEA  0012               	return	
  6848  001AEC                     
  6849                           ;fat16.c: 715: return ((unsigned char)(((((uint16_t)8191))>>8)&0xFF));
  6850  001AEC  0E1F               	movlw	31
  6851  001AEE  0012               	return	
  6852  001AF0                     
  6853                           ;fat16.c: 717: return 0XF8;
  6854  001AF0  0EF8               	movlw	248
  6855  001AF2  0012               	return	
  6856  001AF4                     
  6857                           ;fat16.c: 719: return ((unsigned char)((((uint16_t)32))&0xFF));
  6858  001AF4  0E20               	movlw	32
  6859  001AF6  0012               	return	
  6860  001AF8                     
  6861                           ;fat16.c: 721: return ((unsigned char)(((((uint16_t)32))>>8)&0xFF));
  6862  001AF8  0E00               	movlw	0
  6863  001AFA  0012               	return	
  6864  001AFC                     
  6865                           ;fat16.c: 723: return ((unsigned char)((((uint16_t)63))&0xFF));
  6866  001AFC  0E3F               	movlw	63
  6867  001AFE  0012               	return	
  6868  001B00                     
  6869                           ;fat16.c: 725: return ((unsigned char)(((((uint16_t)63))>>8)&0xFF));
  6870  001B00  0E00               	movlw	0
  6871  001B02  0012               	return	
  6872  001B04                     
  6873                           ;fat16.c: 727: return ((unsigned char)((((uint16_t)16))&0xFF));
  6874  001B04  0E10               	movlw	16
  6875  001B06  0012               	return	
  6876  001B08                     
  6877                           ;fat16.c: 729: return ((unsigned char)(((((uint16_t)16))>>8)&0xFF));
  6878  001B08  0E00               	movlw	0
  6879  001B0A  0012               	return	
  6880  001B0C                     
  6881                           ;fat16.c: 731: return ((unsigned char)((((unsigned short)((((uint32_t)0))&0xFFFF)))&0xFF
      +                          ));
  6882  001B0C  0E00               	movlw	0
  6883  001B0E  0012               	return	
  6884  001B10                     
  6885                           ;fat16.c: 733: return ((unsigned char)(((((unsigned short)((((uint32_t)0))&0xFFFF)))>>8)
      +                          &0xFF));
  6886  001B10  0E00               	movlw	0
  6887  001B12  0012               	return	
  6888  001B14                     
  6889                           ;fat16.c: 735: return ((unsigned char)((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF))
      +                          )&0xFF));
  6890  001B14  0E00               	movlw	0
  6891  001B16  0012               	return	
  6892  001B18                     
  6893                           ;fat16.c: 737: return ((unsigned char)(((((unsigned short)(((((uint32_t)0))>>16)&0xFFFF)
      +                          ))>>8)&0xFF));
  6894  001B18  0E00               	movlw	0
  6895  001B1A  0012               	return	
  6896  001B1C                     
  6897                           ;fat16.c: 739: return ((unsigned char)((((uint16_t)0b00000001))&0xFF));
  6898  001B1C  0E01               	movlw	1
  6899  001B1E  0012               	return	
  6900  001B20                     
  6901                           ;fat16.c: 741: return ((unsigned char)(((((uint16_t)0b00000001))>>8)&0xFF));
  6902  001B20  0E00               	movlw	0
  6903  001B22  0012               	return	
  6904  001B24                     
  6905                           ;fat16.c: 743: return ((unsigned char)((((unsigned short)((((uint32_t)34))&0xFFFF)))&0xF
      +                          F));
  6906  001B24  0E22               	movlw	34
  6907  001B26  0012               	return	
  6908  001B28                     
  6909                           ;fat16.c: 745: return ((unsigned char)(((((unsigned short)((((uint32_t)34))&0xFFFF)))>>8
      +                          )&0xFF));
  6910  001B28  0E00               	movlw	0
  6911  001B2A  0012               	return	
  6912  001B2C                     
  6913                           ;fat16.c: 749: return ((unsigned char)(((((unsigned short)(((((uint32_t)34))>>16)&0xFFFF
      +                          )))>>8)&0xFF));
  6914                           
  6915                           ;fat16.c: 748: case 0x2F:
  6916  001B2C  0E00               	movlw	0
  6917  001B2E  0012               	return	
  6918  001B30                     
  6919                           ;fat16.c: 751: return 'F';
  6920  001B30  0E46               	movlw	70
  6921  001B32  0012               	return	
  6922  001B34                     
  6923                           ;fat16.c: 753: return 'A';
  6924  001B34  0E41               	movlw	65
  6925  001B36  0012               	return	
  6926  001B38                     
  6927                           ;fat16.c: 755: return 'T';
  6928  001B38  0E54               	movlw	84
  6929  001B3A  0012               	return	
  6930  001B3C                     
  6931                           ;fat16.c: 757: return '1';
  6932  001B3C  0E31               	movlw	49
  6933  001B3E  0012               	return	
  6934  001B40                     
  6935                           ;fat16.c: 759: return '6';
  6936  001B40  0E36               	movlw	54
  6937  001B42  0012               	return	
  6938  001B44                     
  6939                           ;fat16.c: 761: return ' ';
  6940  001B44  0E20               	movlw	32
  6941  001B46  0012               	return	
  6942  001B48                     
  6943                           ;fat16.c: 763: return ' ';
  6944  001B48  0E20               	movlw	32
  6945  001B4A  0012               	return	
  6946  001B4C                     
  6947                           ;fat16.c: 765: return ' ';
  6948  001B4C  0E20               	movlw	32
  6949  001B4E  0012               	return	
  6950  001B50                     
  6951                           ;fat16.c: 767: return ((unsigned char)(((((uint16_t)0X55AA))>>8)&0xFF));
  6952  001B50  0E55               	movlw	85
  6953  001B52  0012               	return	
  6954  001B54                     
  6955                           ;fat16.c: 769: return ((unsigned char)((((uint16_t)0X55AA))&0xFF));
  6956  001B54  0EAA               	movlw	170
  6957  001B56  0012               	return	
  6958  001B58                     
  6959                           ;fat16.c: 771: return 0X00;
  6960  001B58  0E00               	movlw	0
  6961                           
  6962                           ;fat16.c: 772: }
  6963  001B5A  0012               	return	
  6964  001B5C                     l2032:
  6965  001B5C  C001  F003         	movff	__get_fbr@idx,??__get_fbr
  6966  001B60  C002  F004         	movff	__get_fbr@idx+1,??__get_fbr+1
  6967                           
  6968                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
  6969                           ; Switch size 1, requested type "space"
  6970                           ; Number of cases is 2, Range of values is 0 to 1
  6971                           ; switch strategies available:
  6972                           ; Name         Instructions Cycles
  6973                           ; simple_byte            7     4 (average)
  6974                           ;	Chosen strategy is simple_byte
  6975  001B64  5004               	movf	??__get_fbr+1,w,c
  6976  001B66  0A00               	xorlw	0	; case 0
  6977  001B68  B4D8               	btfsc	status,2,c
  6978  001B6A  D004               	goto	l15091
  6979  001B6C  0A01               	xorlw	1	; case 1
  6980  001B6E  B4D8               	btfsc	status,2,c
  6981  001B70  D08D               	goto	l15093
  6982  001B72  D7F2               	goto	l2082
  6983  001B74                     l15091:
  6984                           
  6985                           ; Switch size 1, requested type "space"
  6986                           ; Number of cases is 46, Range of values is 0 to 61
  6987                           ; switch strategies available:
  6988                           ; Name         Instructions Cycles
  6989                           ; simple_byte          139    70 (average)
  6990                           ;	Chosen strategy is simple_byte
  6991  001B74  5003               	movf	??__get_fbr,w,c
  6992  001B76  0A00               	xorlw	0	; case 0
  6993  001B78  B4D8               	btfsc	status,2,c
  6994  001B7A  D75F               	goto	l2033
  6995  001B7C  0A01               	xorlw	1	; case 1
  6996  001B7E  B4D8               	btfsc	status,2,c
  6997  001B80  D75E               	goto	l2035
  6998  001B82  0A03               	xorlw	3	; case 2
  6999  001B84  B4D8               	btfsc	status,2,c
  7000  001B86  D75D               	goto	l2036
  7001  001B88  0A01               	xorlw	1	; case 3
  7002  001B8A  B4D8               	btfsc	status,2,c
  7003  001B8C  D75C               	goto	l2037
  7004  001B8E  0A07               	xorlw	7	; case 4
  7005  001B90  B4D8               	btfsc	status,2,c
  7006  001B92  D762               	goto	l2038
  7007  001B94  0A01               	xorlw	1	; case 5
  7008  001B96  B4D8               	btfsc	status,2,c
  7009  001B98  D767               	goto	l2039
  7010  001B9A  0A03               	xorlw	3	; case 6
  7011  001B9C  B4D8               	btfsc	status,2,c
  7012  001B9E  D76C               	goto	l2040
  7013  001BA0  0A01               	xorlw	1	; case 7
  7014  001BA2  B4D8               	btfsc	status,2,c
  7015  001BA4  D771               	goto	l2041
  7016  001BA6  0A0F               	xorlw	15	; case 8
  7017  001BA8  B4D8               	btfsc	status,2,c
  7018  001BAA  D776               	goto	l2042
  7019  001BAC  0A01               	xorlw	1	; case 9
  7020  001BAE  B4D8               	btfsc	status,2,c
  7021  001BB0  D77B               	goto	l2043
  7022  001BB2  0A03               	xorlw	3	; case 10
  7023  001BB4  B4D8               	btfsc	status,2,c
  7024  001BB6  D780               	goto	l2044
  7025  001BB8  0A01               	xorlw	1	; case 11
  7026  001BBA  B4D8               	btfsc	status,2,c
  7027  001BBC  D785               	goto	l2045
  7028  001BBE  0A07               	xorlw	7	; case 12
  7029  001BC0  B4D8               	btfsc	status,2,c
  7030  001BC2  D784               	goto	l2046
  7031  001BC4  0A01               	xorlw	1	; case 13
  7032  001BC6  B4D8               	btfsc	status,2,c
  7033  001BC8  D783               	goto	l2047
  7034  001BCA  0A03               	xorlw	3	; case 14
  7035  001BCC  B4D8               	btfsc	status,2,c
  7036  001BCE  D782               	goto	l2048
  7037  001BD0  0A01               	xorlw	1	; case 15
  7038  001BD2  B4D8               	btfsc	status,2,c
  7039  001BD4  D781               	goto	l2049
  7040  001BD6  0A1F               	xorlw	31	; case 16
  7041  001BD8  B4D8               	btfsc	status,2,c
  7042  001BDA  D780               	goto	l2050
  7043  001BDC  0A01               	xorlw	1	; case 17
  7044  001BDE  B4D8               	btfsc	status,2,c
  7045  001BE0  D77F               	goto	l2051
  7046  001BE2  0A03               	xorlw	3	; case 18
  7047  001BE4  B4D8               	btfsc	status,2,c
  7048  001BE6  D77E               	goto	l2052
  7049  001BE8  0A01               	xorlw	1	; case 19
  7050  001BEA  B4D8               	btfsc	status,2,c
  7051  001BEC  D77D               	goto	l2053
  7052  001BEE  0A07               	xorlw	7	; case 20
  7053  001BF0  B4D8               	btfsc	status,2,c
  7054  001BF2  D77C               	goto	l2054
  7055  001BF4  0A01               	xorlw	1	; case 21
  7056  001BF6  B4D8               	btfsc	status,2,c
  7057  001BF8  D77B               	goto	l2055
  7058  001BFA  0A03               	xorlw	3	; case 22
  7059  001BFC  B4D8               	btfsc	status,2,c
  7060  001BFE  D77A               	goto	l2056
  7061  001C00  0A01               	xorlw	1	; case 23
  7062  001C02  B4D8               	btfsc	status,2,c
  7063  001C04  D779               	goto	l2057
  7064  001C06  0A0F               	xorlw	15	; case 24
  7065  001C08  B4D8               	btfsc	status,2,c
  7066  001C0A  D778               	goto	l2058
  7067  001C0C  0A01               	xorlw	1	; case 25
  7068  001C0E  B4D8               	btfsc	status,2,c
  7069  001C10  D777               	goto	l2059
  7070  001C12  0A03               	xorlw	3	; case 26
  7071  001C14  B4D8               	btfsc	status,2,c
  7072  001C16  D776               	goto	l2060
  7073  001C18  0A01               	xorlw	1	; case 27
  7074  001C1A  B4D8               	btfsc	status,2,c
  7075  001C1C  D775               	goto	l2061
  7076  001C1E  0A07               	xorlw	7	; case 28
  7077  001C20  B4D8               	btfsc	status,2,c
  7078  001C22  D774               	goto	l2062
  7079  001C24  0A01               	xorlw	1	; case 29
  7080  001C26  B4D8               	btfsc	status,2,c
  7081  001C28  D773               	goto	l2063
  7082  001C2A  0A03               	xorlw	3	; case 30
  7083  001C2C  B4D8               	btfsc	status,2,c
  7084  001C2E  D772               	goto	l2064
  7085  001C30  0A01               	xorlw	1	; case 31
  7086  001C32  B4D8               	btfsc	status,2,c
  7087  001C34  D771               	goto	l2065
  7088  001C36  0A37               	xorlw	55	; case 40
  7089  001C38  B4D8               	btfsc	status,2,c
  7090  001C3A  D770               	goto	l2066
  7091  001C3C  0A01               	xorlw	1	; case 41
  7092  001C3E  B4D8               	btfsc	status,2,c
  7093  001C40  D76F               	goto	l2067
  7094  001C42  0A05               	xorlw	5	; case 44
  7095  001C44  B4D8               	btfsc	status,2,c
  7096  001C46  D76E               	goto	l2068
  7097  001C48  0A01               	xorlw	1	; case 45
  7098  001C4A  B4D8               	btfsc	status,2,c
  7099  001C4C  D76D               	goto	l2069
  7100  001C4E  0A03               	xorlw	3	; case 46
  7101  001C50  B4D8               	btfsc	status,2,c
  7102  001C52  D76C               	goto	l2070
  7103  001C54  0A01               	xorlw	1	; case 47
  7104  001C56  B4D8               	btfsc	status,2,c
  7105  001C58  D769               	goto	l2070
  7106  001C5A  0A19               	xorlw	25	; case 54
  7107  001C5C  B4D8               	btfsc	status,2,c
  7108  001C5E  D768               	goto	l2072
  7109  001C60  0A01               	xorlw	1	; case 55
  7110  001C62  B4D8               	btfsc	status,2,c
  7111  001C64  D767               	goto	l2073
  7112  001C66  0A0F               	xorlw	15	; case 56
  7113  001C68  B4D8               	btfsc	status,2,c
  7114  001C6A  D766               	goto	l2074
  7115  001C6C  0A01               	xorlw	1	; case 57
  7116  001C6E  B4D8               	btfsc	status,2,c
  7117  001C70  D765               	goto	l2075
  7118  001C72  0A03               	xorlw	3	; case 58
  7119  001C74  B4D8               	btfsc	status,2,c
  7120  001C76  D764               	goto	l2076
  7121  001C78  0A01               	xorlw	1	; case 59
  7122  001C7A  B4D8               	btfsc	status,2,c
  7123  001C7C  D763               	goto	l2077
  7124  001C7E  0A07               	xorlw	7	; case 60
  7125  001C80  B4D8               	btfsc	status,2,c
  7126  001C82  D762               	goto	l2078
  7127  001C84  0A01               	xorlw	1	; case 61
  7128  001C86  B4D8               	btfsc	status,2,c
  7129  001C88  D761               	goto	l2079
  7130  001C8A  D766               	goto	l2082
  7131  001C8C                     l15093:
  7132                           
  7133                           ; Switch size 1, requested type "space"
  7134                           ; Number of cases is 2, Range of values is 254 to 255
  7135                           ; switch strategies available:
  7136                           ; Name         Instructions Cycles
  7137                           ; simple_byte            7     4 (average)
  7138                           ;	Chosen strategy is simple_byte
  7139  001C8C  5003               	movf	??__get_fbr,w,c
  7140  001C8E  0AFE               	xorlw	254	; case 254
  7141  001C90  B4D8               	btfsc	status,2,c
  7142  001C92  D75E               	goto	l2080
  7143  001C94  0A01               	xorlw	1	; case 255
  7144  001C96  B4D8               	btfsc	status,2,c
  7145  001C98  D75D               	goto	l2081
  7146  001C9A  D75E               	goto	l2082
  7147  001C9C                     __end_of__get_fbr:
  7148                           	opt stack 0
  7149                           tblptru	equ	0xFF8
  7150                           tblptrh	equ	0xFF7
  7151                           tblptrl	equ	0xFF6
  7152                           tablat	equ	0xFF5
  7153                           intcon	equ	0xFF2
  7154                           intcon3	equ	0xFF0
  7155                           postinc0	equ	0xFEE
  7156                           wreg	equ	0xFE8
  7157                           postdec1	equ	0xFE5
  7158                           plusw1	equ	0xFE3
  7159                           fsr1h	equ	0xFE2
  7160                           fsr1l	equ	0xFE1
  7161                           indf2	equ	0xFDF
  7162                           postinc2	equ	0xFDE
  7163                           plusw2	equ	0xFDB
  7164                           fsr2h	equ	0xFDA
  7165                           fsr2l	equ	0xFD9
  7166                           status	equ	0xFD8
  7167                           
  7168 ;; *************** function __get_fat *****************
  7169 ;; Defined at:
  7170 ;;		line 775 in file "fat16.c"
  7171 ;; Parameters:    Size  Location     Type
  7172 ;;  idx             2    0[COMRAM] unsigned int 
  7173 ;; Auto vars:     Size  Location     Type
  7174 ;;		None
  7175 ;; Return value:  Size  Location     Type
  7176 ;;                  1    wreg      unsigned char 
  7177 ;; Registers used:
  7178 ;;		wreg, status,2, status,0
  7179 ;; Tracked objects:
  7180 ;;		On entry : 0/0
  7181 ;;		On exit  : 0/0
  7182 ;;		Unchanged: 0/0
  7183 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7184 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7185 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7186 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7187 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7188 ;;Total ram usage:        4 bytes
  7189 ;; Hardware stack levels used:    1
  7190 ;; This function calls:
  7191 ;;		Nothing
  7192 ;; This function is called by:
  7193 ;;		_fat_format
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text23
  7198  00722C                     __ptext23:
  7199                           	opt stack 0
  7200  00722C                     __get_fat:
  7201                           	opt stack 27
  7202                           
  7203                           ;fat16.c: 777: switch (idx)
  7204                           
  7205                           ;incstack = 0
  7206  00722C  D00E               	goto	l2086
  7207  00722E                     
  7208                           ;fat16.c: 781: return 0xF8;
  7209  00722E  0EF8               	movlw	248
  7210  007230  0012               	return	
  7211  007232                     
  7212                           ;fat16.c: 783: return 0xFF;
  7213  007232  0EFF               	movlw	255
  7214  007234  0012               	return	
  7215  007236                     
  7216                           ;fat16.c: 785: return 0xFF;
  7217  007236  0EFF               	movlw	255
  7218  007238  0012               	return	
  7219  00723A                     
  7220                           ;fat16.c: 787: return 0xFF;
  7221  00723A  0EFF               	movlw	255
  7222  00723C  0012               	return	
  7223  00723E                     
  7224                           ;fat16.c: 790: return 0xFF;
  7225  00723E  0EFF               	movlw	255
  7226  007240  0012               	return	
  7227  007242                     
  7228                           ;fat16.c: 792: return 0xFF;
  7229  007242  0EFF               	movlw	255
  7230  007244  0012               	return	
  7231  007246                     
  7232                           ;fat16.c: 794: return 0X00;
  7233  007246  0E00               	movlw	0
  7234                           
  7235                           ;fat16.c: 795: }
  7236  007248  0012               	return	
  7237  00724A                     l2086:
  7238  00724A  C001  F003         	movff	__get_fat@idx,??__get_fat
  7239  00724E  C002  F004         	movff	__get_fat@idx+1,??__get_fat+1
  7240                           
  7241                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  7242                           ; Switch size 1, requested type "space"
  7243                           ; Number of cases is 1, Range of values is 0 to 0
  7244                           ; switch strategies available:
  7245                           ; Name         Instructions Cycles
  7246                           ; simple_byte            4     3 (average)
  7247                           ;	Chosen strategy is simple_byte
  7248  007252  5004               	movf	??__get_fat+1,w,c
  7249  007254  0A00               	xorlw	0	; case 0
  7250  007256  A4D8               	btfss	status,2,c
  7251  007258  D7F6               	goto	l2094
  7252                           
  7253                           ; Switch size 1, requested type "space"
  7254                           ; Number of cases is 6, Range of values is 0 to 5
  7255                           ; switch strategies available:
  7256                           ; Name         Instructions Cycles
  7257                           ; simple_byte           19    10 (average)
  7258                           ;	Chosen strategy is simple_byte
  7259  00725A  5003               	movf	??__get_fat,w,c
  7260  00725C  0A00               	xorlw	0	; case 0
  7261  00725E  B4D8               	btfsc	status,2,c
  7262  007260  D7E6               	goto	l2087
  7263  007262  0A01               	xorlw	1	; case 1
  7264  007264  B4D8               	btfsc	status,2,c
  7265  007266  D7E5               	goto	l2089
  7266  007268  0A03               	xorlw	3	; case 2
  7267  00726A  B4D8               	btfsc	status,2,c
  7268  00726C  D7E4               	goto	l2090
  7269  00726E  0A01               	xorlw	1	; case 3
  7270  007270  B4D8               	btfsc	status,2,c
  7271  007272  D7E3               	goto	l2091
  7272  007274  0A07               	xorlw	7	; case 4
  7273  007276  B4D8               	btfsc	status,2,c
  7274  007278  D7E2               	goto	l2092
  7275  00727A  0A01               	xorlw	1	; case 5
  7276  00727C  B4D8               	btfsc	status,2,c
  7277  00727E  D7E1               	goto	l2093
  7278  007280  D7E2               	goto	l2094
  7279  007282                     __end_of__get_fat:
  7280                           	opt stack 0
  7281                           tblptru	equ	0xFF8
  7282                           tblptrh	equ	0xFF7
  7283                           tblptrl	equ	0xFF6
  7284                           tablat	equ	0xFF5
  7285                           intcon	equ	0xFF2
  7286                           intcon3	equ	0xFF0
  7287                           postinc0	equ	0xFEE
  7288                           wreg	equ	0xFE8
  7289                           postdec1	equ	0xFE5
  7290                           plusw1	equ	0xFE3
  7291                           fsr1h	equ	0xFE2
  7292                           fsr1l	equ	0xFE1
  7293                           indf2	equ	0xFDF
  7294                           postinc2	equ	0xFDE
  7295                           plusw2	equ	0xFDB
  7296                           fsr2h	equ	0xFDA
  7297                           fsr2l	equ	0xFD9
  7298                           status	equ	0xFD8
  7299                           
  7300 ;; *************** function __get_data *****************
  7301 ;; Defined at:
  7302 ;;		line 875 in file "fat16.c"
  7303 ;; Parameters:    Size  Location     Type
  7304 ;;  idx             2    0[COMRAM] unsigned int 
  7305 ;; Auto vars:     Size  Location     Type
  7306 ;;		None
  7307 ;; Return value:  Size  Location     Type
  7308 ;;                  1    wreg      unsigned char 
  7309 ;; Registers used:
  7310 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7311 ;; Tracked objects:
  7312 ;;		On entry : 0/0
  7313 ;;		On exit  : 0/0
  7314 ;;		Unchanged: 0/0
  7315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7316 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7317 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7318 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7319 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7320 ;;Total ram usage:        2 bytes
  7321 ;; Hardware stack levels used:    1
  7322 ;; This function calls:
  7323 ;;		Nothing
  7324 ;; This function is called by:
  7325 ;;		_fat_format
  7326 ;; This function uses a non-reentrant model
  7327 ;;
  7328                           
  7329                           	psect	text24
  7330  007C68                     __ptext24:
  7331                           	opt stack 0
  7332  007C68                     __get_data:
  7333                           	opt stack 27
  7334                           
  7335                           ;fat16.c: 877: if (idx < 12)
  7336                           
  7337                           ;incstack = 0
  7338  007C68  5002               	movf	__get_data@idx+1,w,c
  7339  007C6A  E110               	bnz	l12173
  7340  007C6C  0E0C               	movlw	12
  7341  007C6E  5C01               	subwf	__get_data@idx,w,c
  7342  007C70  B0D8               	btfsc	status,0,c
  7343  007C72  D00C               	goto	l2130
  7344                           
  7345                           ;fat16.c: 878: {;fat16.c: 879: return "hello world!"[idx];
  7346  007C74  0ECF               	movlw	low STR_12
  7347  007C76  2401               	addwf	__get_data@idx,w,c
  7348  007C78  6EF6               	movwf	tblptrl,c
  7349  007C7A  0E8F               	movlw	high STR_12
  7350  007C7C  2002               	addwfc	__get_data@idx+1,w,c
  7351  007C7E  6EF7               	movwf	tblptrh,c
  7352  007C80                     	if	1	;There are 3 active tblptr bytes
  7353  007C80  6AF8               	clrf	tblptru,c
  7354  007C82  0E00               	movlw	low (__mediumconst shr (0+16))
  7355  007C84  22F8               	addwfc	tblptru,f,c
  7356  007C86                     	endif
  7357  007C86  0008               	tblrd		*
  7358  007C88  50F5               	movf	tablat,w,c
  7359  007C8A  0012               	return	
  7360  007C8C                     l2130:
  7361  007C8C                     l12173:
  7362                           
  7363                           ;fat16.c: 880: };fat16.c: 881: return 0X00;
  7364  007C8C  0E00               	movlw	0
  7365  007C8E  0012               	return	
  7366  007C90                     __end_of__get_data:
  7367                           	opt stack 0
  7368                           tblptru	equ	0xFF8
  7369                           tblptrh	equ	0xFF7
  7370                           tblptrl	equ	0xFF6
  7371                           tablat	equ	0xFF5
  7372                           intcon	equ	0xFF2
  7373                           intcon3	equ	0xFF0
  7374                           postinc0	equ	0xFEE
  7375                           wreg	equ	0xFE8
  7376                           postdec1	equ	0xFE5
  7377                           plusw1	equ	0xFE3
  7378                           fsr1h	equ	0xFE2
  7379                           fsr1l	equ	0xFE1
  7380                           indf2	equ	0xFDF
  7381                           postinc2	equ	0xFDE
  7382                           plusw2	equ	0xFDB
  7383                           fsr2h	equ	0xFDA
  7384                           fsr2l	equ	0xFD9
  7385                           status	equ	0xFD8
  7386                           
  7387 ;; *************** function __system_timer0_init *****************
  7388 ;; Defined at:
  7389 ;;		line 111 in file "os.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;		None
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7403 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7404 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7405 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7406 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7407 ;;Total ram usage:        0 bytes
  7408 ;; Hardware stack levels used:    1
  7409 ;; This function calls:
  7410 ;;		Nothing
  7411 ;; This function is called by:
  7412 ;;		_system_init
  7413 ;; This function uses a non-reentrant model
  7414 ;;
  7415                           
  7416                           	psect	text25
  7417  007DF8                     __ptext25:
  7418                           	opt stack 0
  7419  007DF8                     __system_timer0_init:
  7420                           	opt stack 29
  7421                           
  7422                           ;os.c: 114: T0CONbits.T0CS = 0;
  7423                           
  7424                           ;incstack = 0
  7425  007DF8  9AD5               	bcf	4053,5,c	;volatile
  7426                           
  7427                           ;os.c: 116: T0CONbits.T08BIT = 0;
  7428  007DFA  9CD5               	bcf	4053,6,c	;volatile
  7429                           
  7430                           ;os.c: 118: T0CONbits.T0PS2 = 0;
  7431  007DFC  94D5               	bcf	4053,2,c	;volatile
  7432                           
  7433                           ;os.c: 119: T0CONbits.T0PS1 = 1;
  7434  007DFE  82D5               	bsf	4053,1,c	;volatile
  7435                           
  7436                           ;os.c: 120: T0CONbits.T0PS0 = 0;
  7437  007E00  90D5               	bcf	4053,0,c	;volatile
  7438                           
  7439                           ;os.c: 122: T0CONbits.PSA = 0;
  7440  007E02  96D5               	bcf	4053,3,c	;volatile
  7441                           
  7442                           ;os.c: 124: TMR0H = 0xD1;
  7443  007E04  0ED1               	movlw	209
  7444  007E06  6ED7               	movwf	4055,c	;volatile
  7445                           
  7446                           ;os.c: 125: TMR0L = 0x20;
  7447  007E08  0E20               	movlw	32
  7448  007E0A  6ED6               	movwf	4054,c	;volatile
  7449                           
  7450                           ;os.c: 127: T0CONbits.TMR0ON = 1;
  7451  007E0C  8ED5               	bsf	4053,7,c	;volatile
  7452                           
  7453                           ;os.c: 131: INTCONbits.TMR0IF = 0;
  7454  007E0E  94F2               	bcf	intcon,2,c	;volatile
  7455                           
  7456                           ;os.c: 134: os.timeSlot = 0;
  7457  007E10  0E00               	movlw	0
  7458  007E12  0100               	movlb	0	; () banked
  7459  007E14  6F62               	movwf	(_os+2)& (0+255),b	;volatile
  7460                           
  7461                           ; BSR set to: 0
  7462  007E16  0012               	return		;funcret
  7463  007E18                     __end_of__system_timer0_init:
  7464                           	opt stack 0
  7465                           tblptru	equ	0xFF8
  7466                           tblptrh	equ	0xFF7
  7467                           tblptrl	equ	0xFF6
  7468                           tablat	equ	0xFF5
  7469                           intcon	equ	0xFF2
  7470                           intcon3	equ	0xFF0
  7471                           postinc0	equ	0xFEE
  7472                           wreg	equ	0xFE8
  7473                           postdec1	equ	0xFE5
  7474                           plusw1	equ	0xFE3
  7475                           fsr1h	equ	0xFE2
  7476                           fsr1l	equ	0xFE1
  7477                           indf2	equ	0xFDF
  7478                           postinc2	equ	0xFDE
  7479                           plusw2	equ	0xFDB
  7480                           fsr2h	equ	0xFDA
  7481                           fsr2l	equ	0xFD9
  7482                           status	equ	0xFD8
  7483                           
  7484 ;; *************** function __system_encoder_init *****************
  7485 ;; Defined at:
  7486 ;;		line 72 in file "os.c"
  7487 ;; Parameters:    Size  Location     Type
  7488 ;;		None
  7489 ;; Auto vars:     Size  Location     Type
  7490 ;;		None
  7491 ;; Return value:  Size  Location     Type
  7492 ;;                  1    wreg      void 
  7493 ;; Registers used:
  7494 ;;		wreg, status,2
  7495 ;; Tracked objects:
  7496 ;;		On entry : 0/0
  7497 ;;		On exit  : 0/0
  7498 ;;		Unchanged: 0/0
  7499 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7500 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7501 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7502 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7503 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7504 ;;Total ram usage:        0 bytes
  7505 ;; Hardware stack levels used:    1
  7506 ;; This function calls:
  7507 ;;		Nothing
  7508 ;; This function is called by:
  7509 ;;		_system_init
  7510 ;; This function uses a non-reentrant model
  7511 ;;
  7512                           
  7513                           	psect	text26
  7514  007888                     __ptext26:
  7515                           	opt stack 0
  7516  007888                     __system_encoder_init:
  7517                           	opt stack 29
  7518                           
  7519                           ;os.c: 74: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
  7520                           
  7521                           ; BSR set to: 0
  7522                           ;incstack = 0
  7523  007888  0E55               	movlw	85
  7524  00788A  6EA7               	movwf	4007,c	;volsfr
  7525  00788C  0EAA               	movlw	170
  7526  00788E  6EA7               	movwf	4007,c	;volsfr
  7527  007890  010E               	movlb	14	; () banked
  7528  007892  91BF               	bcf	191,0,b	;volatile
  7529                           
  7530                           ;os.c: 75: RPINR1 = 0;
  7531  007894  0E00               	movlw	0
  7532  007896  6FE1               	movwf	225,b	;volatile
  7533                           
  7534                           ;os.c: 76: RPINR3 = 9;
  7535  007898  0E09               	movlw	9
  7536  00789A  6FE3               	movwf	227,b	;volatile
  7537                           
  7538                           ;os.c: 77: RPINR2 = 10;
  7539  00789C  0E0A               	movlw	10
  7540  00789E  6FE2               	movwf	226,b	;volatile
  7541                           
  7542                           ;os.c: 78: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;}
  7543  0078A0  0E55               	movlw	85
  7544  0078A2  6EA7               	movwf	4007,c	;volsfr
  7545  0078A4  0EAA               	movlw	170
  7546  0078A6  6EA7               	movwf	4007,c	;volsfr
  7547                           
  7548                           ; BSR set to: 14
  7549  0078A8  91BF               	bcf	191,0,b	;volatile
  7550                           
  7551                           ; BSR set to: 14
  7552                           ;os.c: 81: INTCON2bits.INTEDG1 = 0;
  7553  0078AA  9AF1               	bcf	intcon2,5,c	;volatile
  7554                           
  7555                           ; BSR set to: 14
  7556                           ;os.c: 82: INTCON3bits.INT1IF = 0;
  7557  0078AC  90F0               	bcf	intcon3,0,c	;volatile
  7558                           
  7559                           ; BSR set to: 14
  7560                           ;os.c: 84: INTCON2bits.INTEDG2 = 1;
  7561  0078AE  88F1               	bsf	intcon2,4,c	;volatile
  7562                           
  7563                           ; BSR set to: 14
  7564                           ;os.c: 85: INTCON3bits.INT2IF = 0;
  7565  0078B0  92F0               	bcf	intcon3,1,c	;volatile
  7566                           
  7567                           ; BSR set to: 14
  7568                           ;os.c: 87: INTCON2bits.INTEDG3 = 1;
  7569  0078B2  86F1               	bsf	intcon2,3,c	;volatile
  7570                           
  7571                           ; BSR set to: 14
  7572                           ;os.c: 88: INTCON3bits.INT3IF = 0;
  7573  0078B4  94F0               	bcf	intcon3,2,c	;volatile
  7574                           
  7575                           ;os.c: 90: os.encoderCount = 0;
  7576  0078B6  0E00               	movlw	0
  7577  0078B8  0100               	movlb	0	; () banked
  7578  0078BA  6F60               	movwf	_os& (0+255),b	;volatile
  7579                           
  7580                           ;os.c: 91: os.buttonCount = 0;
  7581  0078BC  0E00               	movlw	0
  7582  0078BE  6F61               	movwf	(_os+1)& (0+255),b	;volatile
  7583                           
  7584                           ; BSR set to: 0
  7585  0078C0  0012               	return		;funcret
  7586  0078C2                     __end_of__system_encoder_init:
  7587                           	opt stack 0
  7588                           tblptru	equ	0xFF8
  7589                           tblptrh	equ	0xFF7
  7590                           tblptrl	equ	0xFF6
  7591                           tablat	equ	0xFF5
  7592                           intcon	equ	0xFF2
  7593                           intcon2	equ	0xFF1
  7594                           intcon3	equ	0xFF0
  7595                           postinc0	equ	0xFEE
  7596                           wreg	equ	0xFE8
  7597                           postdec1	equ	0xFE5
  7598                           plusw1	equ	0xFE3
  7599                           fsr1h	equ	0xFE2
  7600                           fsr1l	equ	0xFE1
  7601                           indf2	equ	0xFDF
  7602                           postinc2	equ	0xFDE
  7603                           plusw2	equ	0xFDB
  7604                           fsr2h	equ	0xFDA
  7605                           fsr2l	equ	0xFD9
  7606                           status	equ	0xFD8
  7607                           
  7608 ;; *************** function _spi_get_external_tx_buffer *****************
  7609 ;; Defined at:
  7610 ;;		line 75 in file "spi.c"
  7611 ;; Parameters:    Size  Location     Type
  7612 ;;		None
  7613 ;; Auto vars:     Size  Location     Type
  7614 ;;		None
  7615 ;; Return value:  Size  Location     Type
  7616 ;;                  2    0[COMRAM] PTR unsigned char 
  7617 ;; Registers used:
  7618 ;;		wreg, status,2, status,0
  7619 ;; Tracked objects:
  7620 ;;		On entry : 0/0
  7621 ;;		On exit  : 0/0
  7622 ;;		Unchanged: 0/0
  7623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7624 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7625 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7627 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7628 ;;Total ram usage:        2 bytes
  7629 ;; Hardware stack levels used:    1
  7630 ;; This function calls:
  7631 ;;		Nothing
  7632 ;; This function is called by:
  7633 ;;		_main
  7634 ;; This function uses a non-reentrant model
  7635 ;;
  7636                           
  7637                           	psect	text27
  7638  007F7A                     __ptext27:
  7639                           	opt stack 0
  7640  007F7A                     _spi_get_external_tx_buffer:
  7641                           	opt stack 30
  7642                           
  7643                           ;spi.c: 77: return _spi_external_tx_buffer;
  7644                           
  7645                           ; BSR set to: 0
  7646                           ;incstack = 0
  7647  007F7A  0E40               	movlw	low __spi_external_tx_buffer
  7648  007F7C  6E01               	movwf	?_spi_get_external_tx_buffer,c
  7649  007F7E  0E02               	movlw	high __spi_external_tx_buffer
  7650  007F80  6E02               	movwf	?_spi_get_external_tx_buffer+1,c
  7651  007F82  0012               	return	
  7652  007F84                     __end_of_spi_get_external_tx_buffer:
  7653                           	opt stack 0
  7654                           tblptru	equ	0xFF8
  7655                           tblptrh	equ	0xFF7
  7656                           tblptrl	equ	0xFF6
  7657                           tablat	equ	0xFF5
  7658                           intcon	equ	0xFF2
  7659                           intcon2	equ	0xFF1
  7660                           intcon3	equ	0xFF0
  7661                           postinc0	equ	0xFEE
  7662                           wreg	equ	0xFE8
  7663                           postdec1	equ	0xFE5
  7664                           plusw1	equ	0xFE3
  7665                           fsr1h	equ	0xFE2
  7666                           fsr1l	equ	0xFE1
  7667                           indf2	equ	0xFDF
  7668                           postinc2	equ	0xFDE
  7669                           plusw2	equ	0xFDB
  7670                           fsr2h	equ	0xFDA
  7671                           fsr2l	equ	0xFD9
  7672                           status	equ	0xFD8
  7673                           
  7674 ;; *************** function _spi_get_external_rx_buffer *****************
  7675 ;; Defined at:
  7676 ;;		line 80 in file "spi.c"
  7677 ;; Parameters:    Size  Location     Type
  7678 ;;		None
  7679 ;; Auto vars:     Size  Location     Type
  7680 ;;		None
  7681 ;; Return value:  Size  Location     Type
  7682 ;;                  2    0[COMRAM] PTR unsigned char 
  7683 ;; Registers used:
  7684 ;;		wreg, status,2, status,0
  7685 ;; Tracked objects:
  7686 ;;		On entry : 0/0
  7687 ;;		On exit  : 0/0
  7688 ;;		Unchanged: 0/0
  7689 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7690 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7691 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7692 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7693 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7694 ;;Total ram usage:        2 bytes
  7695 ;; Hardware stack levels used:    1
  7696 ;; This function calls:
  7697 ;;		Nothing
  7698 ;; This function is called by:
  7699 ;;		_main
  7700 ;; This function uses a non-reentrant model
  7701 ;;
  7702                           
  7703                           	psect	text28
  7704  007F84                     __ptext28:
  7705                           	opt stack 0
  7706  007F84                     _spi_get_external_rx_buffer:
  7707                           	opt stack 30
  7708                           
  7709                           ;spi.c: 82: return _spi_external_rx_buffer;
  7710                           
  7711                           ;incstack = 0
  7712  007F84  0E00               	movlw	low __spi_external_rx_buffer
  7713  007F86  6E01               	movwf	?_spi_get_external_rx_buffer,c
  7714  007F88  0E02               	movlw	high __spi_external_rx_buffer
  7715  007F8A  6E02               	movwf	?_spi_get_external_rx_buffer+1,c
  7716  007F8C  0012               	return	
  7717  007F8E                     __end_of_spi_get_external_rx_buffer:
  7718                           	opt stack 0
  7719                           tblptru	equ	0xFF8
  7720                           tblptrh	equ	0xFF7
  7721                           tblptrl	equ	0xFF6
  7722                           tablat	equ	0xFF5
  7723                           intcon	equ	0xFF2
  7724                           intcon2	equ	0xFF1
  7725                           intcon3	equ	0xFF0
  7726                           postinc0	equ	0xFEE
  7727                           wreg	equ	0xFE8
  7728                           postdec1	equ	0xFE5
  7729                           plusw1	equ	0xFE3
  7730                           fsr1h	equ	0xFE2
  7731                           fsr1l	equ	0xFE1
  7732                           indf2	equ	0xFDF
  7733                           postinc2	equ	0xFDE
  7734                           plusw2	equ	0xFDB
  7735                           fsr2h	equ	0xFDA
  7736                           fsr2l	equ	0xFD9
  7737                           status	equ	0xFD8
  7738                           
  7739 ;; *************** function _display_update *****************
  7740 ;; Defined at:
  7741 ;;		line 540 in file "display.c"
  7742 ;; Parameters:    Size  Location     Type
  7743 ;;		None
  7744 ;; Auto vars:     Size  Location     Type
  7745 ;;		None
  7746 ;; Return value:  Size  Location     Type
  7747 ;;                  1    wreg      void 
  7748 ;; Registers used:
  7749 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7750 ;; Tracked objects:
  7751 ;;		On entry : 0/0
  7752 ;;		On exit  : 0/0
  7753 ;;		Unchanged: 0/0
  7754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7755 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7756 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7757 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7758 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7759 ;;Total ram usage:        0 bytes
  7760 ;; Hardware stack levels used:    1
  7761 ;; Hardware stack levels required when called:    4
  7762 ;; This function calls:
  7763 ;;		_i2c_display_cursor
  7764 ;;		_i2c_display_write_fixed
  7765 ;; This function is called by:
  7766 ;;		_main
  7767 ;; This function uses a non-reentrant model
  7768 ;;
  7769                           
  7770                           	psect	text29
  7771  006B6E                     __ptext29:
  7772                           	opt stack 0
  7773  006B6E                     _display_update:
  7774                           	opt stack 26
  7775                           
  7776                           ;display.c: 542: i2c_display_cursor(0, 0);
  7777                           
  7778                           ;incstack = 0
  7779  006B6E  0E00               	movlw	0
  7780  006B70  6E0E               	movwf	i2c_display_cursor@position,c
  7781  006B72  0E00               	movlw	0
  7782  006B74  EC82  F03E         	call	_i2c_display_cursor
  7783                           
  7784                           ;display.c: 543: i2c_display_write_fixed(&display_content[0][0], 20);
  7785  006B78  0E76               	movlw	low _display_content
  7786  006B7A  6E06               	movwf	i2c_display_write_fixed@data,c
  7787  006B7C  0E01               	movlw	high _display_content
  7788  006B7E  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7789  006B80  0E14               	movlw	20
  7790  006B82  6E08               	movwf	i2c_display_write_fixed@length,c
  7791  006B84  EC41  F039         	call	_i2c_display_write_fixed	;wreg free
  7792                           
  7793                           ;display.c: 544: i2c_display_cursor(1, 0);
  7794  006B88  0E00               	movlw	0
  7795  006B8A  6E0E               	movwf	i2c_display_cursor@position,c
  7796  006B8C  0E01               	movlw	1
  7797  006B8E  EC82  F03E         	call	_i2c_display_cursor
  7798                           
  7799                           ;display.c: 545: i2c_display_write_fixed(&display_content[1][0], 20);
  7800  006B92  0E8A               	movlw	low (_display_content+20)
  7801  006B94  6E06               	movwf	i2c_display_write_fixed@data,c
  7802  006B96  0E01               	movlw	high (_display_content+20)
  7803  006B98  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7804  006B9A  0E14               	movlw	20
  7805  006B9C  6E08               	movwf	i2c_display_write_fixed@length,c
  7806  006B9E  EC41  F039         	call	_i2c_display_write_fixed	;wreg free
  7807                           
  7808                           ;display.c: 546: i2c_display_cursor(2, 0);
  7809  006BA2  0E00               	movlw	0
  7810  006BA4  6E0E               	movwf	i2c_display_cursor@position,c
  7811  006BA6  0E02               	movlw	2
  7812  006BA8  EC82  F03E         	call	_i2c_display_cursor
  7813                           
  7814                           ;display.c: 547: i2c_display_write_fixed(&display_content[2][0], 20);
  7815  006BAC  0E9E               	movlw	low (_display_content+40)
  7816  006BAE  6E06               	movwf	i2c_display_write_fixed@data,c
  7817  006BB0  0E01               	movlw	high (_display_content+40)
  7818  006BB2  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7819  006BB4  0E14               	movlw	20
  7820  006BB6  6E08               	movwf	i2c_display_write_fixed@length,c
  7821  006BB8  EC41  F039         	call	_i2c_display_write_fixed	;wreg free
  7822                           
  7823                           ;display.c: 548: i2c_display_cursor(3, 0);
  7824  006BBC  0E00               	movlw	0
  7825  006BBE  6E0E               	movwf	i2c_display_cursor@position,c
  7826  006BC0  0E03               	movlw	3
  7827  006BC2  EC82  F03E         	call	_i2c_display_cursor
  7828                           
  7829                           ;display.c: 549: i2c_display_write_fixed(&display_content[3][0], 20);
  7830  006BC6  0EB2               	movlw	low (_display_content+60)
  7831  006BC8  6E06               	movwf	i2c_display_write_fixed@data,c
  7832  006BCA  0E01               	movlw	high (_display_content+60)
  7833  006BCC  6E07               	movwf	i2c_display_write_fixed@data+1,c
  7834  006BCE  0E14               	movlw	20
  7835  006BD0  6E08               	movwf	i2c_display_write_fixed@length,c
  7836  006BD2  EC41  F039         	call	_i2c_display_write_fixed	;wreg free
  7837  006BD6  0012               	return		;funcret
  7838  006BD8                     __end_of_display_update:
  7839                           	opt stack 0
  7840                           tblptru	equ	0xFF8
  7841                           tblptrh	equ	0xFF7
  7842                           tblptrl	equ	0xFF6
  7843                           tablat	equ	0xFF5
  7844                           intcon	equ	0xFF2
  7845                           intcon2	equ	0xFF1
  7846                           intcon3	equ	0xFF0
  7847                           postinc0	equ	0xFEE
  7848                           wreg	equ	0xFE8
  7849                           postdec1	equ	0xFE5
  7850                           plusw1	equ	0xFE3
  7851                           fsr1h	equ	0xFE2
  7852                           fsr1l	equ	0xFE1
  7853                           indf2	equ	0xFDF
  7854                           postinc2	equ	0xFDE
  7855                           plusw2	equ	0xFDB
  7856                           fsr2h	equ	0xFDA
  7857                           fsr2l	equ	0xFD9
  7858                           status	equ	0xFD8
  7859                           
  7860 ;; *************** function _i2c_display_write_fixed *****************
  7861 ;; Defined at:
  7862 ;;		line 262 in file "i2c.c"
  7863 ;; Parameters:    Size  Location     Type
  7864 ;;  data            2    5[COMRAM] PTR unsigned char 
  7865 ;;		 -> display_content(80), 
  7866 ;;  length          1    7[COMRAM] unsigned char 
  7867 ;; Auto vars:     Size  Location     Type
  7868 ;;  pos             1    8[COMRAM] unsigned char 
  7869 ;; Return value:  Size  Location     Type
  7870 ;;                  1    wreg      void 
  7871 ;; Registers used:
  7872 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7873 ;; Tracked objects:
  7874 ;;		On entry : 0/0
  7875 ;;		On exit  : 0/0
  7876 ;;		Unchanged: 0/0
  7877 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  7878 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7879 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7880 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7881 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  7882 ;;Total ram usage:        4 bytes
  7883 ;; Hardware stack levels used:    1
  7884 ;; Hardware stack levels required when called:    1
  7885 ;; This function calls:
  7886 ;;		__i2c_send
  7887 ;;		__i2c_start
  7888 ;;		__i2c_stop
  7889 ;;		__i2c_wait_idle
  7890 ;;		_i2c_set_frequency
  7891 ;; This function is called by:
  7892 ;;		_display_update
  7893 ;; This function uses a non-reentrant model
  7894 ;;
  7895                           
  7896                           	psect	text30
  7897  007282                     __ptext30:
  7898                           	opt stack 0
  7899  007282                     _i2c_display_write_fixed:
  7900                           	opt stack 28
  7901                           
  7902                           ;i2c.c: 264: uint8_t pos;;i2c.c: 267: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  7903                           
  7904                           ;incstack = 0
  7905  007282  0E02               	movlw	2
  7906  007284  EC09  F03E         	call	_i2c_set_frequency
  7907                           
  7908                           ;i2c.c: 269: _i2c_wait_idle();
  7909  007288  EC3A  F038         	call	__i2c_wait_idle	;wreg free
  7910                           
  7911                           ;i2c.c: 270: _i2c_start();
  7912  00728C  EC0C  F040         	call	__i2c_start	;wreg free
  7913                           
  7914                           ;i2c.c: 271: _i2c_wait_idle();
  7915  007290  EC3A  F038         	call	__i2c_wait_idle	;wreg free
  7916                           
  7917                           ;i2c.c: 272: _i2c_send(0b01111000);
  7918  007294  0E78               	movlw	120
  7919  007296  EC10  F040         	call	__i2c_send
  7920                           
  7921                           ;i2c.c: 273: _i2c_wait_idle();
  7922  00729A  EC3A  F038         	call	__i2c_wait_idle	;wreg free
  7923                           
  7924                           ;i2c.c: 274: _i2c_send(0b01000000);
  7925  00729E  0E40               	movlw	64
  7926  0072A0  EC10  F040         	call	__i2c_send
  7927                           
  7928                           ;i2c.c: 275: _i2c_wait_idle();
  7929  0072A4  EC3A  F038         	call	__i2c_wait_idle	;wreg free
  7930                           
  7931                           ;i2c.c: 278: for(pos=0; pos<length; ++pos)
  7932  0072A8  0E00               	movlw	0
  7933  0072AA  6E09               	movwf	i2c_display_write_fixed@pos,c
  7934  0072AC  D00E               	goto	l1224
  7935  0072AE                     
  7936                           ;i2c.c: 279: {;i2c.c: 280: _i2c_send(data[pos]);
  7937  0072AE  5009               	movf	i2c_display_write_fixed@pos,w,c
  7938  0072B0  0D01               	mullw	1
  7939  0072B2  50F3               	movf	prodl,w,c
  7940  0072B4  2406               	addwf	i2c_display_write_fixed@data,w,c
  7941  0072B6  6ED9               	movwf	fsr2l,c
  7942  0072B8  50F4               	movf	prodh,w,c
  7943  0072BA  2007               	addwfc	i2c_display_write_fixed@data+1,w,c
  7944  0072BC  6EDA               	movwf	fsr2h,c
  7945  0072BE  50DF               	movf	indf2,w,c
  7946  0072C0  EC10  F040         	call	__i2c_send
  7947                           
  7948                           ;i2c.c: 281: _i2c_wait_idle();
  7949  0072C4  EC3A  F038         	call	__i2c_wait_idle	;wreg free
  7950  0072C8  2A09               	incf	i2c_display_write_fixed@pos,f,c
  7951  0072CA                     l1224:
  7952  0072CA  5008               	movf	i2c_display_write_fixed@length,w,c
  7953  0072CC  5C09               	subwf	i2c_display_write_fixed@pos,w,c
  7954  0072CE  A0D8               	btfss	status,0,c
  7955  0072D0  D7EE               	goto	l1225
  7956                           
  7957                           ;i2c.c: 282: };i2c.c: 284: _i2c_stop();
  7958  0072D2  EC08  F040         	call	__i2c_stop	;wreg free
  7959  0072D6  0012               	return		;funcret
  7960  0072D8                     __end_of_i2c_display_write_fixed:
  7961                           	opt stack 0
  7962                           tblptru	equ	0xFF8
  7963                           tblptrh	equ	0xFF7
  7964                           tblptrl	equ	0xFF6
  7965                           tablat	equ	0xFF5
  7966                           prodh	equ	0xFF4
  7967                           prodl	equ	0xFF3
  7968                           intcon	equ	0xFF2
  7969                           intcon2	equ	0xFF1
  7970                           intcon3	equ	0xFF0
  7971                           postinc0	equ	0xFEE
  7972                           wreg	equ	0xFE8
  7973                           postdec1	equ	0xFE5
  7974                           plusw1	equ	0xFE3
  7975                           fsr1h	equ	0xFE2
  7976                           fsr1l	equ	0xFE1
  7977                           indf2	equ	0xFDF
  7978                           postinc2	equ	0xFDE
  7979                           plusw2	equ	0xFDB
  7980                           fsr2h	equ	0xFDA
  7981                           fsr2l	equ	0xFD9
  7982                           status	equ	0xFD8
  7983                           
  7984 ;; *************** function _i2c_display_cursor *****************
  7985 ;; Defined at:
  7986 ;;		line 222 in file "i2c.c"
  7987 ;; Parameters:    Size  Location     Type
  7988 ;;  line            1    wreg     unsigned char 
  7989 ;;  position        1   13[COMRAM] unsigned char 
  7990 ;; Auto vars:     Size  Location     Type
  7991 ;;  line            1   14[COMRAM] unsigned char 
  7992 ;;  address         1   15[COMRAM] unsigned char 
  7993 ;; Return value:  Size  Location     Type
  7994 ;;                  1    wreg      void 
  7995 ;; Registers used:
  7996 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  7997 ;; Tracked objects:
  7998 ;;		On entry : 0/0
  7999 ;;		On exit  : 0/0
  8000 ;;		Unchanged: 0/0
  8001 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8002 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8003 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8004 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8005 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8006 ;;Total ram usage:        3 bytes
  8007 ;; Hardware stack levels used:    1
  8008 ;; Hardware stack levels required when called:    3
  8009 ;; This function calls:
  8010 ;;		__ic2_display_set_address
  8011 ;;		_i2c_set_frequency
  8012 ;; This function is called by:
  8013 ;;		_display_update
  8014 ;; This function uses a non-reentrant model
  8015 ;;
  8016                           
  8017                           	psect	text31
  8018  007D04                     __ptext31:
  8019                           	opt stack 0
  8020  007D04                     _i2c_display_cursor:
  8021                           	opt stack 26
  8022                           
  8023                           ;incstack = 0
  8024                           ;i2c_display_cursor@line stored from wreg
  8025  007D04  6E0F               	movwf	i2c_display_cursor@line,c
  8026                           
  8027                           ;i2c.c: 224: uint8_t address;;i2c.c: 227: line &= 0b11;
  8028  007D06  0E03               	movlw	3
  8029  007D08  160F               	andwf	i2c_display_cursor@line,f,c
  8030                           
  8031                           ;i2c.c: 228: address = line<<5;
  8032  007D0A  380F               	swapf	i2c_display_cursor@line,w,c
  8033  007D0C  46E8               	rlncf	wreg,f,c
  8034  007D0E  0BE0               	andlw	224
  8035  007D10  6E10               	movwf	i2c_display_cursor@address,c
  8036                           
  8037                           ;i2c.c: 229: position &= 0b11111;
  8038  007D12  0E1F               	movlw	31
  8039  007D14  160E               	andwf	i2c_display_cursor@position,f,c
  8040                           
  8041                           ;i2c.c: 230: address |= position;
  8042  007D16  500E               	movf	i2c_display_cursor@position,w,c
  8043  007D18  1210               	iorwf	i2c_display_cursor@address,f,c
  8044                           
  8045                           ;i2c.c: 233: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8046  007D1A  0E02               	movlw	2
  8047  007D1C  EC09  F03E         	call	_i2c_set_frequency
  8048                           
  8049                           ;i2c.c: 236: _ic2_display_set_address(address);
  8050  007D20  5010               	movf	i2c_display_cursor@address,w,c
  8051  007D22  EC6F  F03E         	call	__ic2_display_set_address
  8052  007D26  0012               	return		;funcret
  8053  007D28                     __end_of_i2c_display_cursor:
  8054                           	opt stack 0
  8055                           tblptru	equ	0xFF8
  8056                           tblptrh	equ	0xFF7
  8057                           tblptrl	equ	0xFF6
  8058                           tablat	equ	0xFF5
  8059                           prodh	equ	0xFF4
  8060                           prodl	equ	0xFF3
  8061                           intcon	equ	0xFF2
  8062                           intcon2	equ	0xFF1
  8063                           intcon3	equ	0xFF0
  8064                           postinc0	equ	0xFEE
  8065                           wreg	equ	0xFE8
  8066                           postdec1	equ	0xFE5
  8067                           plusw1	equ	0xFE3
  8068                           fsr1h	equ	0xFE2
  8069                           fsr1l	equ	0xFE1
  8070                           indf2	equ	0xFDF
  8071                           postinc2	equ	0xFDE
  8072                           plusw2	equ	0xFDB
  8073                           fsr2h	equ	0xFDA
  8074                           fsr2l	equ	0xFD9
  8075                           status	equ	0xFD8
  8076                           
  8077 ;; *************** function __ic2_display_set_address *****************
  8078 ;; Defined at:
  8079 ;;		line 186 in file "i2c.c"
  8080 ;; Parameters:    Size  Location     Type
  8081 ;;  address         1    wreg     unsigned char 
  8082 ;; Auto vars:     Size  Location     Type
  8083 ;;  address         1   10[COMRAM] unsigned char 
  8084 ;;  data_array      2   11[COMRAM] unsigned char [2]
  8085 ;; Return value:  Size  Location     Type
  8086 ;;                  1    wreg      void 
  8087 ;; Registers used:
  8088 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  8089 ;; Tracked objects:
  8090 ;;		On entry : 0/0
  8091 ;;		On exit  : 0/0
  8092 ;;		Unchanged: 0/0
  8093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8094 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8095 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8096 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8097 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8098 ;;Total ram usage:        3 bytes
  8099 ;; Hardware stack levels used:    1
  8100 ;; Hardware stack levels required when called:    2
  8101 ;; This function calls:
  8102 ;;		__i2c_write
  8103 ;;		_i2c_set_frequency
  8104 ;; This function is called by:
  8105 ;;		_i2c_display_cursor
  8106 ;; This function uses a non-reentrant model
  8107 ;;
  8108                           
  8109                           	psect	text32
  8110  007CDE                     __ptext32:
  8111                           	opt stack 0
  8112  007CDE                     __ic2_display_set_address:
  8113                           	opt stack 26
  8114                           
  8115                           ;incstack = 0
  8116                           ;__ic2_display_set_address@address stored from wreg
  8117  007CDE  6E0B               	movwf	__ic2_display_set_address@address,c
  8118                           
  8119                           ;i2c.c: 188: uint8_t data_array[2];;i2c.c: 189: data_array[0] = 0b00000000;
  8120  007CE0  0E00               	movlw	0
  8121  007CE2  6E0C               	movwf	__ic2_display_set_address@data_array,c
  8122                           
  8123                           ;i2c.c: 190: data_array[1] = 0b10000000 | address;
  8124  007CE4  500B               	movf	__ic2_display_set_address@address,w,c
  8125  007CE6  0980               	iorlw	128
  8126  007CE8  6E0D               	movwf	__ic2_display_set_address@data_array+1,c
  8127                           
  8128                           ;i2c.c: 193: i2c_set_frequency(I2C_FREQUENCY_400kHz);
  8129  007CEA  0E02               	movlw	2
  8130  007CEC  EC09  F03E         	call	_i2c_set_frequency
  8131                           
  8132                           ;i2c.c: 196: _i2c_write(0b01111000, &data_array[0], 2);
  8133  007CF0  0E0C               	movlw	low __ic2_display_set_address@data_array
  8134  007CF2  6E06               	movwf	__i2c_write@data,c
  8135  007CF4  0E00               	movlw	high __ic2_display_set_address@data_array
  8136  007CF6  6E07               	movwf	__i2c_write@data+1,c
  8137  007CF8  0E02               	movlw	2
  8138  007CFA  6E08               	movwf	__i2c_write@length,c
  8139  007CFC  0E78               	movlw	120
  8140  007CFE  ECDD  F03A         	call	__i2c_write
  8141  007D02  0012               	return		;funcret
  8142  007D04                     __end_of__ic2_display_set_address:
  8143                           	opt stack 0
  8144                           tblptru	equ	0xFF8
  8145                           tblptrh	equ	0xFF7
  8146                           tblptrl	equ	0xFF6
  8147                           tablat	equ	0xFF5
  8148                           prodh	equ	0xFF4
  8149                           prodl	equ	0xFF3
  8150                           intcon	equ	0xFF2
  8151                           intcon2	equ	0xFF1
  8152                           intcon3	equ	0xFF0
  8153                           postinc0	equ	0xFEE
  8154                           wreg	equ	0xFE8
  8155                           postdec1	equ	0xFE5
  8156                           plusw1	equ	0xFE3
  8157                           fsr1h	equ	0xFE2
  8158                           fsr1l	equ	0xFE1
  8159                           indf2	equ	0xFDF
  8160                           postinc2	equ	0xFDE
  8161                           plusw2	equ	0xFDB
  8162                           fsr2h	equ	0xFDA
  8163                           fsr2l	equ	0xFD9
  8164                           status	equ	0xFD8
  8165                           
  8166 ;; *************** function _display_prepare *****************
  8167 ;; Defined at:
  8168 ;;		line 283 in file "display.c"
  8169 ;; Parameters:    Size  Location     Type
  8170 ;;  mode            1    wreg     unsigned char 
  8171 ;; Auto vars:     Size  Location     Type
  8172 ;;  mode            1   42[COMRAM] unsigned char 
  8173 ;; Return value:  Size  Location     Type
  8174 ;;                  1    wreg      void 
  8175 ;; Registers used:
  8176 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8177 ;; Tracked objects:
  8178 ;;		On entry : 0/0
  8179 ;;		On exit  : 0/0
  8180 ;;		Unchanged: 0/0
  8181 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8182 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8183 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8184 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8185 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8186 ;;Total ram usage:        3 bytes
  8187 ;; Hardware stack levels used:    1
  8188 ;; Hardware stack levels required when called:    6
  8189 ;; This function calls:
  8190 ;;		__display_checked
  8191 ;;		__display_clear
  8192 ;;		__display_done
  8193 ;;		__display_failed
  8194 ;;		__display_found
  8195 ;;		__display_programming
  8196 ;;		__display_search
  8197 ;;		__display_start
  8198 ;;		__display_verify
  8199 ;; This function is called by:
  8200 ;;		_main
  8201 ;; This function uses a non-reentrant model
  8202 ;;
  8203                           
  8204                           	psect	text33
  8205  0051D0                     __ptext33:
  8206                           	opt stack 0
  8207  0051D0                     _display_prepare:
  8208                           	opt stack 24
  8209                           
  8210                           ;incstack = 0
  8211                           ;display_prepare@mode stored from wreg
  8212  0051D0  6E2B               	movwf	display_prepare@mode,c
  8213                           
  8214                           ;display.c: 285: _display_clear();
  8215  0051D2  ECB9  F03A         	call	__display_clear	;wreg free
  8216                           
  8217                           ;display.c: 287: switch(mode&0xF0)
  8218  0051D6  D018               	goto	l1524
  8219  0051D8                     
  8220                           ;display.c: 290: _display_start();
  8221  0051D8  ECA7  F013         	call	__display_start	;wreg free
  8222                           
  8223                           ;display.c: 291: break;
  8224  0051DC  D041               	goto	l1534
  8225  0051DE                     
  8226                           ;display.c: 294: _display_search();
  8227  0051DE  ECF6  F01C         	call	__display_search	;wreg free
  8228                           
  8229                           ;display.c: 295: break;
  8230  0051E2  D03E               	goto	l1534
  8231  0051E4                     
  8232                           ;display.c: 298: _display_found();
  8233  0051E4  EC96  F015         	call	__display_found	;wreg free
  8234                           
  8235                           ;display.c: 299: break;
  8236  0051E8  D03B               	goto	l1534
  8237  0051EA                     
  8238                           ;display.c: 302: _display_verify();
  8239  0051EA  ECE3  F01E         	call	__display_verify	;wreg free
  8240                           
  8241                           ;display.c: 303: break;
  8242  0051EE  D038               	goto	l1534
  8243  0051F0                     
  8244                           ;display.c: 306: _display_checked();
  8245  0051F0  ECC5  F01A         	call	__display_checked	;wreg free
  8246                           
  8247                           ;display.c: 307: break;
  8248  0051F4  D035               	goto	l1534
  8249  0051F6                     
  8250                           ;display.c: 310: _display_failed();
  8251  0051F6  EC9B  F007         	call	__display_failed	;wreg free
  8252                           
  8253                           ;display.c: 311: break;
  8254  0051FA  D032               	goto	l1534
  8255  0051FC                     
  8256                           ;display.c: 314: _display_programming();
  8257  0051FC  EC71  F017         	call	__display_programming	;wreg free
  8258                           
  8259                           ;display.c: 315: break;
  8260  005200  D02F               	goto	l1534
  8261  005202                     
  8262                           ;display.c: 318: _display_done();
  8263  005202  EC83  F01B         	call	__display_done	;wreg free
  8264                           
  8265                           ;display.c: 320: }
  8266                           
  8267                           ;display.c: 319: break;
  8268  005206  D02C               	goto	l1534
  8269  005208                     l1524:
  8270  005208  502B               	movf	display_prepare@mode,w,c
  8271  00520A  0BF0               	andlw	240
  8272  00520C  6E29               	movwf	??_display_prepare& (0+255),c
  8273  00520E  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8274                           
  8275                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8276                           ; Switch size 1, requested type "space"
  8277                           ; Number of cases is 1, Range of values is 0 to 0
  8278                           ; switch strategies available:
  8279                           ; Name         Instructions Cycles
  8280                           ; simple_byte            4     3 (average)
  8281                           ;	Chosen strategy is simple_byte
  8282  005210  502A               	movf	??_display_prepare+1,w,c
  8283  005212  0A00               	xorlw	0	; case 0
  8284  005214  A4D8               	btfss	status,2,c
  8285  005216  D024               	goto	l1534
  8286                           
  8287                           ; Switch size 1, requested type "space"
  8288                           ; Number of cases is 8, Range of values is 0 to 112
  8289                           ; switch strategies available:
  8290                           ; Name         Instructions Cycles
  8291                           ; simple_byte           25    13 (average)
  8292                           ;	Chosen strategy is simple_byte
  8293  005218  5029               	movf	??_display_prepare,w,c
  8294  00521A  0A00               	xorlw	0	; case 0
  8295  00521C  B4D8               	btfsc	status,2,c
  8296  00521E  D7DC               	goto	l1525
  8297  005220  0A10               	xorlw	16	; case 16
  8298  005222  B4D8               	btfsc	status,2,c
  8299  005224  D7DC               	goto	l1527
  8300  005226  0A30               	xorlw	48	; case 32
  8301  005228  B4D8               	btfsc	status,2,c
  8302  00522A  D7DC               	goto	l1528
  8303  00522C  0A10               	xorlw	16	; case 48
  8304  00522E  B4D8               	btfsc	status,2,c
  8305  005230  D7DC               	goto	l1529
  8306  005232  0A70               	xorlw	112	; case 64
  8307  005234  B4D8               	btfsc	status,2,c
  8308  005236  D7DC               	goto	l1530
  8309  005238  0A10               	xorlw	16	; case 80
  8310  00523A  B4D8               	btfsc	status,2,c
  8311  00523C  D7DC               	goto	l1531
  8312  00523E  0A30               	xorlw	48	; case 96
  8313  005240  B4D8               	btfsc	status,2,c
  8314  005242  D7DC               	goto	l1532
  8315  005244  0A10               	xorlw	16	; case 112
  8316  005246  B4D8               	btfsc	status,2,c
  8317  005248  D7DC               	goto	l1533
  8318                           
  8319                           ;display.c: 323: switch((os.timeSlot>>5)&0b11)
  8320  00524A  D00A               	goto	l1534
  8321  00524C                     
  8322                           ;display.c: 326: display_content[0][17] = '.';
  8323  00524C  0E2E               	movlw	46
  8324  00524E  0101               	movlb	1	; () banked
  8325  005250  6F87               	movwf	(_display_content+17)& (0+255),b
  8326  005252                     l1536:
  8327                           
  8328                           ;display.c: 329: display_content[0][16] = '.';
  8329  005252  0E2E               	movlw	46
  8330  005254  0101               	movlb	1	; () banked
  8331  005256  6F86               	movwf	(_display_content+16)& (0+255),b
  8332  005258                     l1537:
  8333                           
  8334                           ;display.c: 332: display_content[0][15] = '.';
  8335  005258  0E2E               	movlw	46
  8336  00525A  0101               	movlb	1	; () banked
  8337  00525C  6F85               	movwf	(_display_content+15)& (0+255),b
  8338                           
  8339                           ;display.c: 334: }
  8340  00525E  D015               	goto	l1538
  8341  005260                     l1534:
  8342                           
  8343                           ; BSR set to: 1
  8344  005260  0100               	movlb	0	; () banked
  8345  005262  3962               	swapf	(_os+2)& (0+255),w,b	;volatile
  8346  005264  42E8               	rrncf	wreg,f,c
  8347  005266  0B07               	andlw	7
  8348  005268  0B03               	andlw	3
  8349  00526A  6E29               	movwf	??_display_prepare& (0+255),c
  8350  00526C  6A2A               	clrf	(??_display_prepare+1)& (0+255),c
  8351                           
  8352                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  8353                           ; Switch size 1, requested type "space"
  8354                           ; Number of cases is 1, Range of values is 0 to 0
  8355                           ; switch strategies available:
  8356                           ; Name         Instructions Cycles
  8357                           ; simple_byte            4     3 (average)
  8358                           ;	Chosen strategy is simple_byte
  8359  00526E  502A               	movf	??_display_prepare+1,w,c
  8360  005270  0A00               	xorlw	0	; case 0
  8361  005272  A4D8               	btfss	status,2,c
  8362  005274  D00A               	goto	l1538
  8363                           
  8364                           ; BSR set to: 0
  8365                           ; Switch size 1, requested type "space"
  8366                           ; Number of cases is 3, Range of values is 1 to 3
  8367                           ; switch strategies available:
  8368                           ; Name         Instructions Cycles
  8369                           ; simple_byte           10     6 (average)
  8370                           ;	Chosen strategy is simple_byte
  8371  005276  5029               	movf	??_display_prepare,w,c
  8372  005278  0A01               	xorlw	1	; case 1
  8373  00527A  B4D8               	btfsc	status,2,c
  8374  00527C  D7ED               	goto	l1537
  8375  00527E  0A03               	xorlw	3	; case 2
  8376  005280  B4D8               	btfsc	status,2,c
  8377  005282  D7E7               	goto	l1536
  8378  005284  0A01               	xorlw	1	; case 3
  8379  005286  B4D8               	btfsc	status,2,c
  8380  005288  D7E1               	goto	l1535
  8381  00528A                     l1538:
  8382                           
  8383                           ;display.c: 338: if(INTCONbits.GIE)
  8384  00528A  AEF2               	btfss	intcon,7,c	;volatile
  8385  00528C  0012               	return	
  8386                           
  8387                           ;display.c: 339: {;display.c: 340: display_content[0][18] = 'I';
  8388  00528E  0E49               	movlw	73
  8389  005290  0101               	movlb	1	; () banked
  8390  005292  6F88               	movwf	(_display_content+18)& (0+255),b
  8391  005294  0012               	return	
  8392  005296                     __end_of_display_prepare:
  8393                           	opt stack 0
  8394                           tblptru	equ	0xFF8
  8395                           tblptrh	equ	0xFF7
  8396                           tblptrl	equ	0xFF6
  8397                           tablat	equ	0xFF5
  8398                           prodh	equ	0xFF4
  8399                           prodl	equ	0xFF3
  8400                           intcon	equ	0xFF2
  8401                           intcon2	equ	0xFF1
  8402                           intcon3	equ	0xFF0
  8403                           postinc0	equ	0xFEE
  8404                           wreg	equ	0xFE8
  8405                           postdec1	equ	0xFE5
  8406                           plusw1	equ	0xFE3
  8407                           fsr1h	equ	0xFE2
  8408                           fsr1l	equ	0xFE1
  8409                           indf2	equ	0xFDF
  8410                           postinc2	equ	0xFDE
  8411                           plusw2	equ	0xFDB
  8412                           fsr2h	equ	0xFDA
  8413                           fsr2l	equ	0xFD9
  8414                           status	equ	0xFD8
  8415                           
  8416 ;; *************** function __display_verify *****************
  8417 ;; Defined at:
  8418 ;;		line 410 in file "display.c"
  8419 ;; Parameters:    Size  Location     Type
  8420 ;;		None
  8421 ;; Auto vars:     Size  Location     Type
  8422 ;;  cntr            1   32[COMRAM] unsigned char 
  8423 ;;  start           1    0        unsigned char 
  8424 ;; Return value:  Size  Location     Type
  8425 ;;                  1    wreg      void 
  8426 ;; Registers used:
  8427 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8428 ;; Tracked objects:
  8429 ;;		On entry : 0/0
  8430 ;;		On exit  : 0/0
  8431 ;;		Unchanged: 0/0
  8432 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8433 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8434 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8435 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8436 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8437 ;;Total ram usage:        3 bytes
  8438 ;; Hardware stack levels used:    1
  8439 ;; Hardware stack levels required when called:    4
  8440 ;; This function calls:
  8441 ;;		__display_itoa_u16
  8442 ;;		_bootloader_get_entries
  8443 ;; This function is called by:
  8444 ;;		_display_prepare
  8445 ;; This function uses a non-reentrant model
  8446 ;;
  8447                           
  8448                           	psect	text34
  8449  003DC6                     __ptext34:
  8450                           	opt stack 0
  8451  003DC6                     __display_verify:
  8452                           	opt stack 25
  8453                           
  8454                           ;display.c: 412: uint8_t cntr;;display.c: 413: uint8_t start;;display.c: 414: cntr = 0;
  8455                           
  8456                           ;incstack = 0
  8457  003DC6  0E00               	movlw	0
  8458  003DC8  6E21               	movwf	__display_verify@cntr,c
  8459                           
  8460                           ;display.c: 415: while(verify_line1[cntr])
  8461  003DCA  D017               	goto	l1591
  8462  003DCC                     
  8463                           ;display.c: 416: display_content[0][cntr] = verify_line1[cntr++];
  8464  003DCC  5021               	movf	__display_verify@cntr,w,c
  8465  003DCE  0D01               	mullw	1
  8466  003DD0  0ED0               	movlw	low _verify_line1
  8467  003DD2  24F3               	addwf	prodl,w,c
  8468  003DD4  6EF6               	movwf	tblptrl,c
  8469  003DD6  0E8D               	movlw	high _verify_line1
  8470  003DD8  20F4               	addwfc	prodh,w,c
  8471  003DDA  6EF7               	movwf	tblptrh,c
  8472  003DDC                     	if	1	;There are 3 active tblptr bytes
  8473  003DDC  6AF8               	clrf	tblptru,c
  8474  003DDE  0E00               	movlw	low (__mediumconst shr (0+16))
  8475  003DE0  22F8               	addwfc	tblptru,f,c
  8476  003DE2                     	endif
  8477  003DE2  5021               	movf	__display_verify@cntr,w,c
  8478  003DE4  0D01               	mullw	1
  8479  003DE6  0E76               	movlw	low _display_content
  8480  003DE8  24F3               	addwf	prodl,w,c
  8481  003DEA  6ED9               	movwf	fsr2l,c
  8482  003DEC  0E01               	movlw	high _display_content
  8483  003DEE  20F4               	addwfc	prodh,w,c
  8484  003DF0  6EDA               	movwf	fsr2h,c
  8485  003DF2  0008               	tblrd		*
  8486  003DF4  CFF5 FFDF          	movff	tablat,indf2
  8487  003DF8  2A21               	incf	__display_verify@cntr,f,c
  8488  003DFA                     l1591:
  8489  003DFA  5021               	movf	__display_verify@cntr,w,c
  8490  003DFC  0D01               	mullw	1
  8491  003DFE  0ED0               	movlw	low _verify_line1
  8492  003E00  24F3               	addwf	prodl,w,c
  8493  003E02  6EF6               	movwf	tblptrl,c
  8494  003E04  0E8D               	movlw	high _verify_line1
  8495  003E06  20F4               	addwfc	prodh,w,c
  8496  003E08  6EF7               	movwf	tblptrh,c
  8497  003E0A                     	if	1	;There are 3 active tblptr bytes
  8498  003E0A  6AF8               	clrf	tblptru,c
  8499  003E0C  0E00               	movlw	low (__mediumconst shr (0+16))
  8500  003E0E  22F8               	addwfc	tblptru,f,c
  8501  003E10                     	endif
  8502  003E10  0008               	tblrd		*
  8503  003E12  50F5               	movf	tablat,w,c
  8504  003E14  0900               	iorlw	0
  8505  003E16  A4D8               	btfss	status,2,c
  8506  003E18  D7D9               	goto	l1592
  8507                           
  8508                           ;display.c: 417: cntr = 0;
  8509  003E1A  0E00               	movlw	0
  8510  003E1C  6E21               	movwf	__display_verify@cntr,c
  8511                           
  8512                           ;display.c: 418: while(verify_line2[cntr])
  8513  003E1E  D017               	goto	l1594
  8514  003E20                     
  8515                           ;display.c: 419: display_content[1][cntr] = verify_line2[cntr++];
  8516  003E20  5021               	movf	__display_verify@cntr,w,c
  8517  003E22  0D01               	mullw	1
  8518  003E24  0E4B               	movlw	low _verify_line2
  8519  003E26  24F3               	addwf	prodl,w,c
  8520  003E28  6EF6               	movwf	tblptrl,c
  8521  003E2A  0E8E               	movlw	high _verify_line2
  8522  003E2C  20F4               	addwfc	prodh,w,c
  8523  003E2E  6EF7               	movwf	tblptrh,c
  8524  003E30                     	if	1	;There are 3 active tblptr bytes
  8525  003E30  6AF8               	clrf	tblptru,c
  8526  003E32  0E00               	movlw	low (__mediumconst shr (0+16))
  8527  003E34  22F8               	addwfc	tblptru,f,c
  8528  003E36                     	endif
  8529  003E36  5021               	movf	__display_verify@cntr,w,c
  8530  003E38  0D01               	mullw	1
  8531  003E3A  0E8A               	movlw	low (_display_content+20)
  8532  003E3C  24F3               	addwf	prodl,w,c
  8533  003E3E  6ED9               	movwf	fsr2l,c
  8534  003E40  0E01               	movlw	high (_display_content+20)
  8535  003E42  20F4               	addwfc	prodh,w,c
  8536  003E44  6EDA               	movwf	fsr2h,c
  8537  003E46  0008               	tblrd		*
  8538  003E48  CFF5 FFDF          	movff	tablat,indf2
  8539  003E4C  2A21               	incf	__display_verify@cntr,f,c
  8540  003E4E                     l1594:
  8541  003E4E  5021               	movf	__display_verify@cntr,w,c
  8542  003E50  0D01               	mullw	1
  8543  003E52  0E4B               	movlw	low _verify_line2
  8544  003E54  24F3               	addwf	prodl,w,c
  8545  003E56  6EF6               	movwf	tblptrl,c
  8546  003E58  0E8E               	movlw	high _verify_line2
  8547  003E5A  20F4               	addwfc	prodh,w,c
  8548  003E5C  6EF7               	movwf	tblptrh,c
  8549  003E5E                     	if	1	;There are 3 active tblptr bytes
  8550  003E5E  6AF8               	clrf	tblptru,c
  8551  003E60  0E00               	movlw	low (__mediumconst shr (0+16))
  8552  003E62  22F8               	addwfc	tblptru,f,c
  8553  003E64                     	endif
  8554  003E64  0008               	tblrd		*
  8555  003E66  50F5               	movf	tablat,w,c
  8556  003E68  0900               	iorlw	0
  8557  003E6A  A4D8               	btfss	status,2,c
  8558  003E6C  D7D9               	goto	l1595
  8559                           
  8560                           ;display.c: 420: cntr = 0;
  8561  003E6E  0E00               	movlw	0
  8562  003E70  6E21               	movwf	__display_verify@cntr,c
  8563                           
  8564                           ;display.c: 421: while(verify_line3[cntr])
  8565  003E72  D017               	goto	l1597
  8566  003E74                     
  8567                           ;display.c: 422: display_content[2][cntr] = verify_line3[cntr++];
  8568  003E74  5021               	movf	__display_verify@cntr,w,c
  8569  003E76  0D01               	mullw	1
  8570  003E78  0E89               	movlw	low _verify_line3
  8571  003E7A  24F3               	addwf	prodl,w,c
  8572  003E7C  6EF6               	movwf	tblptrl,c
  8573  003E7E  0E8E               	movlw	high _verify_line3
  8574  003E80  20F4               	addwfc	prodh,w,c
  8575  003E82  6EF7               	movwf	tblptrh,c
  8576  003E84                     	if	1	;There are 3 active tblptr bytes
  8577  003E84  6AF8               	clrf	tblptru,c
  8578  003E86  0E00               	movlw	low (__mediumconst shr (0+16))
  8579  003E88  22F8               	addwfc	tblptru,f,c
  8580  003E8A                     	endif
  8581  003E8A  5021               	movf	__display_verify@cntr,w,c
  8582  003E8C  0D01               	mullw	1
  8583  003E8E  0E9E               	movlw	low (_display_content+40)
  8584  003E90  24F3               	addwf	prodl,w,c
  8585  003E92  6ED9               	movwf	fsr2l,c
  8586  003E94  0E01               	movlw	high (_display_content+40)
  8587  003E96  20F4               	addwfc	prodh,w,c
  8588  003E98  6EDA               	movwf	fsr2h,c
  8589  003E9A  0008               	tblrd		*
  8590  003E9C  CFF5 FFDF          	movff	tablat,indf2
  8591  003EA0  2A21               	incf	__display_verify@cntr,f,c
  8592  003EA2                     l1597:
  8593  003EA2  5021               	movf	__display_verify@cntr,w,c
  8594  003EA4  0D01               	mullw	1
  8595  003EA6  0E89               	movlw	low _verify_line3
  8596  003EA8  24F3               	addwf	prodl,w,c
  8597  003EAA  6EF6               	movwf	tblptrl,c
  8598  003EAC  0E8E               	movlw	high _verify_line3
  8599  003EAE  20F4               	addwfc	prodh,w,c
  8600  003EB0  6EF7               	movwf	tblptrh,c
  8601  003EB2                     	if	1	;There are 3 active tblptr bytes
  8602  003EB2  6AF8               	clrf	tblptru,c
  8603  003EB4  0E00               	movlw	low (__mediumconst shr (0+16))
  8604  003EB6  22F8               	addwfc	tblptru,f,c
  8605  003EB8                     	endif
  8606  003EB8  0008               	tblrd		*
  8607  003EBA  50F5               	movf	tablat,w,c
  8608  003EBC  0900               	iorlw	0
  8609  003EBE  A4D8               	btfss	status,2,c
  8610  003EC0  D7D9               	goto	l1598
  8611                           
  8612                           ;display.c: 423: _display_itoa_u16(bootloader_get_entries(), &display_content[2][cntr+1]
      +                          );
  8613  003EC2  ECF4  F03F         	call	_bootloader_get_entries	;wreg free
  8614  003EC6  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  8615  003ECA  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  8616  003ECE  6A1B               	clrf	__display_itoa_u16@value+2,c
  8617  003ED0  6A1C               	clrf	__display_itoa_u16@value+3,c
  8618  003ED2  5021               	movf	__display_verify@cntr,w,c
  8619  003ED4  6E1F               	movwf	??__display_verify& (0+255),c
  8620  003ED6  6A20               	clrf	(??__display_verify+1)& (0+255),c
  8621  003ED8  0E01               	movlw	1
  8622  003EDA  261F               	addwf	??__display_verify,f,c
  8623  003EDC  0E00               	movlw	0
  8624  003EDE  2220               	addwfc	??__display_verify+1,f,c
  8625  003EE0  0E9E               	movlw	low (_display_content+40)
  8626  003EE2  241F               	addwf	??__display_verify,w,c
  8627  003EE4  6E1D               	movwf	__display_itoa_u16@text,c
  8628  003EE6  0E01               	movlw	high (_display_content+40)
  8629  003EE8  2020               	addwfc	??__display_verify+1,w,c
  8630  003EEA  6E1E               	movwf	__display_itoa_u16@text+1,c
  8631  003EEC  EC4B  F029         	call	__display_itoa_u16	;wreg free
  8632  003EF0  0012               	return		;funcret
  8633  003EF2                     __end_of__display_verify:
  8634                           	opt stack 0
  8635                           tblptru	equ	0xFF8
  8636                           tblptrh	equ	0xFF7
  8637                           tblptrl	equ	0xFF6
  8638                           tablat	equ	0xFF5
  8639                           prodh	equ	0xFF4
  8640                           prodl	equ	0xFF3
  8641                           intcon	equ	0xFF2
  8642                           intcon2	equ	0xFF1
  8643                           intcon3	equ	0xFF0
  8644                           postinc0	equ	0xFEE
  8645                           wreg	equ	0xFE8
  8646                           postdec1	equ	0xFE5
  8647                           plusw1	equ	0xFE3
  8648                           fsr1h	equ	0xFE2
  8649                           fsr1l	equ	0xFE1
  8650                           indf2	equ	0xFDF
  8651                           postinc2	equ	0xFDE
  8652                           plusw2	equ	0xFDB
  8653                           fsr2h	equ	0xFDA
  8654                           fsr2l	equ	0xFD9
  8655                           status	equ	0xFD8
  8656                           
  8657 ;; *************** function __display_start *****************
  8658 ;; Defined at:
  8659 ;;		line 344 in file "display.c"
  8660 ;; Parameters:    Size  Location     Type
  8661 ;;		None
  8662 ;; Auto vars:     Size  Location     Type
  8663 ;;  cntr            1   36[COMRAM] unsigned char 
  8664 ;; Return value:  Size  Location     Type
  8665 ;;                  1    wreg      void 
  8666 ;; Registers used:
  8667 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8668 ;; Tracked objects:
  8669 ;;		On entry : 0/0
  8670 ;;		On exit  : 0/0
  8671 ;;		Unchanged: 0/0
  8672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  8673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8674 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8676 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  8677 ;;Total ram usage:        1 bytes
  8678 ;; Hardware stack levels used:    1
  8679 ;; Hardware stack levels required when called:    5
  8680 ;; This function calls:
  8681 ;;		__display_itoa_u32
  8682 ;; This function is called by:
  8683 ;;		_display_prepare
  8684 ;; This function uses a non-reentrant model
  8685 ;;
  8686                           
  8687                           	psect	text35
  8688  00274E                     __ptext35:
  8689                           	opt stack 0
  8690  00274E                     __display_start:
  8691                           	opt stack 24
  8692                           
  8693                           ;display.c: 346: uint8_t cntr;;display.c: 347: cntr = 0;
  8694                           
  8695                           ;incstack = 0
  8696  00274E  0E00               	movlw	0
  8697  002750  6E25               	movwf	__display_start@cntr,c
  8698                           
  8699                           ;display.c: 348: while(start_line1[cntr])
  8700  002752  D017               	goto	l1543
  8701  002754                     
  8702                           ;display.c: 349: display_content[0][cntr] = start_line1[cntr++];
  8703  002754  5025               	movf	__display_start@cntr,w,c
  8704  002756  0D01               	mullw	1
  8705  002758  0E00               	movlw	low _start_line1
  8706  00275A  24F3               	addwf	prodl,w,c
  8707  00275C  6EF6               	movwf	tblptrl,c
  8708  00275E  0E8E               	movlw	high _start_line1
  8709  002760  20F4               	addwfc	prodh,w,c
  8710  002762  6EF7               	movwf	tblptrh,c
  8711  002764                     	if	1	;There are 3 active tblptr bytes
  8712  002764  6AF8               	clrf	tblptru,c
  8713  002766  0E00               	movlw	low (__mediumconst shr (0+16))
  8714  002768  22F8               	addwfc	tblptru,f,c
  8715  00276A                     	endif
  8716  00276A  5025               	movf	__display_start@cntr,w,c
  8717  00276C  0D01               	mullw	1
  8718  00276E  0E76               	movlw	low _display_content
  8719  002770  24F3               	addwf	prodl,w,c
  8720  002772  6ED9               	movwf	fsr2l,c
  8721  002774  0E01               	movlw	high _display_content
  8722  002776  20F4               	addwfc	prodh,w,c
  8723  002778  6EDA               	movwf	fsr2h,c
  8724  00277A  0008               	tblrd		*
  8725  00277C  CFF5 FFDF          	movff	tablat,indf2
  8726  002780  2A25               	incf	__display_start@cntr,f,c
  8727  002782                     l1543:
  8728  002782  5025               	movf	__display_start@cntr,w,c
  8729  002784  0D01               	mullw	1
  8730  002786  0E00               	movlw	low _start_line1
  8731  002788  24F3               	addwf	prodl,w,c
  8732  00278A  6EF6               	movwf	tblptrl,c
  8733  00278C  0E8E               	movlw	high _start_line1
  8734  00278E  20F4               	addwfc	prodh,w,c
  8735  002790  6EF7               	movwf	tblptrh,c
  8736  002792                     	if	1	;There are 3 active tblptr bytes
  8737  002792  6AF8               	clrf	tblptru,c
  8738  002794  0E00               	movlw	low (__mediumconst shr (0+16))
  8739  002796  22F8               	addwfc	tblptru,f,c
  8740  002798                     	endif
  8741  002798  0008               	tblrd		*
  8742  00279A  50F5               	movf	tablat,w,c
  8743  00279C  0900               	iorlw	0
  8744  00279E  A4D8               	btfss	status,2,c
  8745  0027A0  D7D9               	goto	l1544
  8746                           
  8747                           ;display.c: 350: cntr = 0;
  8748  0027A2  0E00               	movlw	0
  8749  0027A4  6E25               	movwf	__display_start@cntr,c
  8750                           
  8751                           ;display.c: 351: while(start_line2[cntr])
  8752  0027A6  D017               	goto	l1546
  8753  0027A8                     
  8754                           ;display.c: 352: display_content[1][cntr] = start_line2[cntr++];
  8755  0027A8  5025               	movf	__display_start@cntr,w,c
  8756  0027AA  0D01               	mullw	1
  8757  0027AC  0E61               	movlw	low _start_line2
  8758  0027AE  24F3               	addwf	prodl,w,c
  8759  0027B0  6EF6               	movwf	tblptrl,c
  8760  0027B2  0E8E               	movlw	high _start_line2
  8761  0027B4  20F4               	addwfc	prodh,w,c
  8762  0027B6  6EF7               	movwf	tblptrh,c
  8763  0027B8                     	if	1	;There are 3 active tblptr bytes
  8764  0027B8  6AF8               	clrf	tblptru,c
  8765  0027BA  0E00               	movlw	low (__mediumconst shr (0+16))
  8766  0027BC  22F8               	addwfc	tblptru,f,c
  8767  0027BE                     	endif
  8768  0027BE  5025               	movf	__display_start@cntr,w,c
  8769  0027C0  0D01               	mullw	1
  8770  0027C2  0E8A               	movlw	low (_display_content+20)
  8771  0027C4  24F3               	addwf	prodl,w,c
  8772  0027C6  6ED9               	movwf	fsr2l,c
  8773  0027C8  0E01               	movlw	high (_display_content+20)
  8774  0027CA  20F4               	addwfc	prodh,w,c
  8775  0027CC  6EDA               	movwf	fsr2h,c
  8776  0027CE  0008               	tblrd		*
  8777  0027D0  CFF5 FFDF          	movff	tablat,indf2
  8778  0027D4  2A25               	incf	__display_start@cntr,f,c
  8779  0027D6                     l1546:
  8780  0027D6  5025               	movf	__display_start@cntr,w,c
  8781  0027D8  0D01               	mullw	1
  8782  0027DA  0E61               	movlw	low _start_line2
  8783  0027DC  24F3               	addwf	prodl,w,c
  8784  0027DE  6EF6               	movwf	tblptrl,c
  8785  0027E0  0E8E               	movlw	high _start_line2
  8786  0027E2  20F4               	addwfc	prodh,w,c
  8787  0027E4  6EF7               	movwf	tblptrh,c
  8788  0027E6                     	if	1	;There are 3 active tblptr bytes
  8789  0027E6  6AF8               	clrf	tblptru,c
  8790  0027E8  0E00               	movlw	low (__mediumconst shr (0+16))
  8791  0027EA  22F8               	addwfc	tblptru,f,c
  8792  0027EC                     	endif
  8793  0027EC  0008               	tblrd		*
  8794  0027EE  50F5               	movf	tablat,w,c
  8795  0027F0  0900               	iorlw	0
  8796  0027F2  A4D8               	btfss	status,2,c
  8797  0027F4  D7D9               	goto	l1547
  8798                           
  8799                           ;display.c: 353: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
  8800  0027F6  0E00               	movlw	0
  8801  0027F8  6E1F               	movwf	__display_itoa_u32@value,c
  8802  0027FA  0E00               	movlw	0
  8803  0027FC  6E20               	movwf	__display_itoa_u32@value+1,c
  8804  0027FE  0E00               	movlw	0
  8805  002800  6E21               	movwf	__display_itoa_u32@value+2,c
  8806  002802  0E00               	movlw	0
  8807  002804  6E22               	movwf	__display_itoa_u32@value+3,c
  8808  002806  5025               	movf	__display_start@cntr,w,c
  8809  002808  0D01               	mullw	1
  8810  00280A  0E8A               	movlw	low (_display_content+20)
  8811  00280C  24F3               	addwf	prodl,w,c
  8812  00280E  6E23               	movwf	__display_itoa_u32@text,c
  8813  002810  0E01               	movlw	high (_display_content+20)
  8814  002812  20F4               	addwfc	prodh,w,c
  8815  002814  6E24               	movwf	__display_itoa_u32@text+1,c
  8816  002816  EC2D  F004         	call	__display_itoa_u32	;wreg free
  8817  00281A  2625               	addwf	__display_start@cntr,f,c
  8818                           
  8819                           ;display.c: 354: display_content[1][cntr++] = '.';
  8820  00281C  5025               	movf	__display_start@cntr,w,c
  8821  00281E  0D01               	mullw	1
  8822  002820  0E8A               	movlw	low (_display_content+20)
  8823  002822  24F3               	addwf	prodl,w,c
  8824  002824  6ED9               	movwf	fsr2l,c
  8825  002826  0E01               	movlw	high (_display_content+20)
  8826  002828  20F4               	addwfc	prodh,w,c
  8827  00282A  6EDA               	movwf	fsr2h,c
  8828  00282C  0E2E               	movlw	46
  8829  00282E  6EDF               	movwf	indf2,c
  8830  002830  2A25               	incf	__display_start@cntr,f,c
  8831                           
  8832                           ;display.c: 355: cntr += _display_itoa_u32(0x01, &display_content[1][cntr]);
  8833  002832  0E01               	movlw	1
  8834  002834  6E1F               	movwf	__display_itoa_u32@value,c
  8835  002836  0E00               	movlw	0
  8836  002838  6E20               	movwf	__display_itoa_u32@value+1,c
  8837  00283A  0E00               	movlw	0
  8838  00283C  6E21               	movwf	__display_itoa_u32@value+2,c
  8839  00283E  0E00               	movlw	0
  8840  002840  6E22               	movwf	__display_itoa_u32@value+3,c
  8841  002842  5025               	movf	__display_start@cntr,w,c
  8842  002844  0D01               	mullw	1
  8843  002846  0E8A               	movlw	low (_display_content+20)
  8844  002848  24F3               	addwf	prodl,w,c
  8845  00284A  6E23               	movwf	__display_itoa_u32@text,c
  8846  00284C  0E01               	movlw	high (_display_content+20)
  8847  00284E  20F4               	addwfc	prodh,w,c
  8848  002850  6E24               	movwf	__display_itoa_u32@text+1,c
  8849  002852  EC2D  F004         	call	__display_itoa_u32	;wreg free
  8850  002856  2625               	addwf	__display_start@cntr,f,c
  8851                           
  8852                           ;display.c: 356: display_content[1][cntr++] = '.';
  8853  002858  5025               	movf	__display_start@cntr,w,c
  8854  00285A  0D01               	mullw	1
  8855  00285C  0E8A               	movlw	low (_display_content+20)
  8856  00285E  24F3               	addwf	prodl,w,c
  8857  002860  6ED9               	movwf	fsr2l,c
  8858  002862  0E01               	movlw	high (_display_content+20)
  8859  002864  20F4               	addwfc	prodh,w,c
  8860  002866  6EDA               	movwf	fsr2h,c
  8861  002868  0E2E               	movlw	46
  8862  00286A  6EDF               	movwf	indf2,c
  8863  00286C  2A25               	incf	__display_start@cntr,f,c
  8864                           
  8865                           ;display.c: 357: cntr += _display_itoa_u32(0x00, &display_content[1][cntr]);
  8866  00286E  0E00               	movlw	0
  8867  002870  6E1F               	movwf	__display_itoa_u32@value,c
  8868  002872  0E00               	movlw	0
  8869  002874  6E20               	movwf	__display_itoa_u32@value+1,c
  8870  002876  0E00               	movlw	0
  8871  002878  6E21               	movwf	__display_itoa_u32@value+2,c
  8872  00287A  0E00               	movlw	0
  8873  00287C  6E22               	movwf	__display_itoa_u32@value+3,c
  8874  00287E  5025               	movf	__display_start@cntr,w,c
  8875  002880  0D01               	mullw	1
  8876  002882  0E8A               	movlw	low (_display_content+20)
  8877  002884  24F3               	addwf	prodl,w,c
  8878  002886  6E23               	movwf	__display_itoa_u32@text,c
  8879  002888  0E01               	movlw	high (_display_content+20)
  8880  00288A  20F4               	addwfc	prodh,w,c
  8881  00288C  6E24               	movwf	__display_itoa_u32@text+1,c
  8882  00288E  EC2D  F004         	call	__display_itoa_u32	;wreg free
  8883  002892  2625               	addwf	__display_start@cntr,f,c
  8884                           
  8885                           ;display.c: 358: cntr = 0;
  8886  002894  0E00               	movlw	0
  8887  002896  6E25               	movwf	__display_start@cntr,c
  8888                           
  8889                           ;display.c: 359: while(start_line3[cntr])
  8890  002898  D017               	goto	l1549
  8891  00289A                     
  8892                           ;display.c: 360: display_content[2][cntr] = start_line3[cntr++];
  8893  00289A  5025               	movf	__display_start@cntr,w,c
  8894  00289C  0D01               	mullw	1
  8895  00289E  0EA6               	movlw	low _start_line3
  8896  0028A0  24F3               	addwf	prodl,w,c
  8897  0028A2  6EF6               	movwf	tblptrl,c
  8898  0028A4  0E8E               	movlw	high _start_line3
  8899  0028A6  20F4               	addwfc	prodh,w,c
  8900  0028A8  6EF7               	movwf	tblptrh,c
  8901  0028AA                     	if	1	;There are 3 active tblptr bytes
  8902  0028AA  6AF8               	clrf	tblptru,c
  8903  0028AC  0E00               	movlw	low (__mediumconst shr (0+16))
  8904  0028AE  22F8               	addwfc	tblptru,f,c
  8905  0028B0                     	endif
  8906  0028B0  5025               	movf	__display_start@cntr,w,c
  8907  0028B2  0D01               	mullw	1
  8908  0028B4  0E9E               	movlw	low (_display_content+40)
  8909  0028B6  24F3               	addwf	prodl,w,c
  8910  0028B8  6ED9               	movwf	fsr2l,c
  8911  0028BA  0E01               	movlw	high (_display_content+40)
  8912  0028BC  20F4               	addwfc	prodh,w,c
  8913  0028BE  6EDA               	movwf	fsr2h,c
  8914  0028C0  0008               	tblrd		*
  8915  0028C2  CFF5 FFDF          	movff	tablat,indf2
  8916  0028C6  2A25               	incf	__display_start@cntr,f,c
  8917  0028C8                     l1549:
  8918  0028C8  5025               	movf	__display_start@cntr,w,c
  8919  0028CA  0D01               	mullw	1
  8920  0028CC  0EA6               	movlw	low _start_line3
  8921  0028CE  24F3               	addwf	prodl,w,c
  8922  0028D0  6EF6               	movwf	tblptrl,c
  8923  0028D2  0E8E               	movlw	high _start_line3
  8924  0028D4  20F4               	addwfc	prodh,w,c
  8925  0028D6  6EF7               	movwf	tblptrh,c
  8926  0028D8                     	if	1	;There are 3 active tblptr bytes
  8927  0028D8  6AF8               	clrf	tblptru,c
  8928  0028DA  0E00               	movlw	low (__mediumconst shr (0+16))
  8929  0028DC  22F8               	addwfc	tblptru,f,c
  8930  0028DE                     	endif
  8931  0028DE  0008               	tblrd		*
  8932  0028E0  50F5               	movf	tablat,w,c
  8933  0028E2  0900               	iorlw	0
  8934  0028E4  A4D8               	btfss	status,2,c
  8935  0028E6  D7D9               	goto	l1550
  8936                           
  8937                           ;display.c: 361: cntr = 0;
  8938  0028E8  0E00               	movlw	0
  8939  0028EA  6E25               	movwf	__display_start@cntr,c
  8940                           
  8941                           ;display.c: 362: while(start_line4[cntr])
  8942  0028EC  D017               	goto	l1552
  8943  0028EE                     
  8944                           ;display.c: 363: display_content[3][cntr] = start_line4[cntr++];
  8945  0028EE  5025               	movf	__display_start@cntr,w,c
  8946  0028F0  0D01               	mullw	1
  8947  0028F2  0E2E               	movlw	low _start_line4
  8948  0028F4  24F3               	addwf	prodl,w,c
  8949  0028F6  6EF6               	movwf	tblptrl,c
  8950  0028F8  0E8E               	movlw	high _start_line4
  8951  0028FA  20F4               	addwfc	prodh,w,c
  8952  0028FC  6EF7               	movwf	tblptrh,c
  8953  0028FE                     	if	1	;There are 3 active tblptr bytes
  8954  0028FE  6AF8               	clrf	tblptru,c
  8955  002900  0E00               	movlw	low (__mediumconst shr (0+16))
  8956  002902  22F8               	addwfc	tblptru,f,c
  8957  002904                     	endif
  8958  002904  5025               	movf	__display_start@cntr,w,c
  8959  002906  0D01               	mullw	1
  8960  002908  0EB2               	movlw	low (_display_content+60)
  8961  00290A  24F3               	addwf	prodl,w,c
  8962  00290C  6ED9               	movwf	fsr2l,c
  8963  00290E  0E01               	movlw	high (_display_content+60)
  8964  002910  20F4               	addwfc	prodh,w,c
  8965  002912  6EDA               	movwf	fsr2h,c
  8966  002914  0008               	tblrd		*
  8967  002916  CFF5 FFDF          	movff	tablat,indf2
  8968  00291A  2A25               	incf	__display_start@cntr,f,c
  8969  00291C                     l1552:
  8970  00291C  5025               	movf	__display_start@cntr,w,c
  8971  00291E  0D01               	mullw	1
  8972  002920  0E2E               	movlw	low _start_line4
  8973  002922  24F3               	addwf	prodl,w,c
  8974  002924  6EF6               	movwf	tblptrl,c
  8975  002926  0E8E               	movlw	high _start_line4
  8976  002928  20F4               	addwfc	prodh,w,c
  8977  00292A  6EF7               	movwf	tblptrh,c
  8978  00292C                     	if	1	;There are 3 active tblptr bytes
  8979  00292C  6AF8               	clrf	tblptru,c
  8980  00292E  0E00               	movlw	low (__mediumconst shr (0+16))
  8981  002930  22F8               	addwfc	tblptru,f,c
  8982  002932                     	endif
  8983  002932  0008               	tblrd		*
  8984  002934  50F5               	movf	tablat,w,c
  8985  002936  0900               	iorlw	0
  8986  002938  B4D8               	btfsc	status,2,c
  8987  00293A  0012               	return	
  8988  00293C  D7D8               	goto	l1553
  8989  00293E                     __end_of__display_start:
  8990                           	opt stack 0
  8991                           tblptru	equ	0xFF8
  8992                           tblptrh	equ	0xFF7
  8993                           tblptrl	equ	0xFF6
  8994                           tablat	equ	0xFF5
  8995                           prodh	equ	0xFF4
  8996                           prodl	equ	0xFF3
  8997                           intcon	equ	0xFF2
  8998                           intcon2	equ	0xFF1
  8999                           intcon3	equ	0xFF0
  9000                           postinc0	equ	0xFEE
  9001                           wreg	equ	0xFE8
  9002                           postdec1	equ	0xFE5
  9003                           plusw1	equ	0xFE3
  9004                           fsr1h	equ	0xFE2
  9005                           fsr1l	equ	0xFE1
  9006                           indf2	equ	0xFDF
  9007                           postinc2	equ	0xFDE
  9008                           plusw2	equ	0xFDB
  9009                           fsr2h	equ	0xFDA
  9010                           fsr2l	equ	0xFD9
  9011                           status	equ	0xFD8
  9012                           
  9013 ;; *************** function __display_search *****************
  9014 ;; Defined at:
  9015 ;;		line 366 in file "display.c"
  9016 ;; Parameters:    Size  Location     Type
  9017 ;;		None
  9018 ;; Auto vars:     Size  Location     Type
  9019 ;;  cntr            1    0[COMRAM] unsigned char 
  9020 ;; Return value:  Size  Location     Type
  9021 ;;                  1    wreg      void 
  9022 ;; Registers used:
  9023 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
  9024 ;; Tracked objects:
  9025 ;;		On entry : 0/0
  9026 ;;		On exit  : 0/0
  9027 ;;		Unchanged: 0/0
  9028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9029 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9030 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9031 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9032 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9033 ;;Total ram usage:        1 bytes
  9034 ;; Hardware stack levels used:    1
  9035 ;; This function calls:
  9036 ;;		Nothing
  9037 ;; This function is called by:
  9038 ;;		_display_prepare
  9039 ;; This function uses a non-reentrant model
  9040 ;;
  9041                           
  9042                           	psect	text36
  9043  0039EC                     __ptext36:
  9044                           	opt stack 0
  9045  0039EC                     __display_search:
  9046                           	opt stack 29
  9047                           
  9048                           ;display.c: 368: uint8_t cntr;;display.c: 369: cntr = 0;
  9049                           
  9050                           ;incstack = 0
  9051  0039EC  0E00               	movlw	0
  9052  0039EE  6E01               	movwf	__display_search@cntr,c
  9053                           
  9054                           ;display.c: 370: while(search_line1[cntr])
  9055  0039F0  D017               	goto	l1558
  9056  0039F2                     
  9057                           ;display.c: 371: display_content[0][cntr] = search_line1[cntr++];
  9058  0039F2  5001               	movf	__display_search@cntr,w,c
  9059  0039F4  0D01               	mullw	1
  9060  0039F6  0EF0               	movlw	low _search_line1
  9061  0039F8  24F3               	addwf	prodl,w,c
  9062  0039FA  6EF6               	movwf	tblptrl,c
  9063  0039FC  0E8D               	movlw	high _search_line1
  9064  0039FE  20F4               	addwfc	prodh,w,c
  9065  003A00  6EF7               	movwf	tblptrh,c
  9066  003A02                     	if	1	;There are 3 active tblptr bytes
  9067  003A02  6AF8               	clrf	tblptru,c
  9068  003A04  0E00               	movlw	low (__mediumconst shr (0+16))
  9069  003A06  22F8               	addwfc	tblptru,f,c
  9070  003A08                     	endif
  9071  003A08  5001               	movf	__display_search@cntr,w,c
  9072  003A0A  0D01               	mullw	1
  9073  003A0C  0E76               	movlw	low _display_content
  9074  003A0E  24F3               	addwf	prodl,w,c
  9075  003A10  6ED9               	movwf	fsr2l,c
  9076  003A12  0E01               	movlw	high _display_content
  9077  003A14  20F4               	addwfc	prodh,w,c
  9078  003A16  6EDA               	movwf	fsr2h,c
  9079  003A18  0008               	tblrd		*
  9080  003A1A  CFF5 FFDF          	movff	tablat,indf2
  9081  003A1E  2A01               	incf	__display_search@cntr,f,c
  9082  003A20                     l1558:
  9083  003A20  5001               	movf	__display_search@cntr,w,c
  9084  003A22  0D01               	mullw	1
  9085  003A24  0EF0               	movlw	low _search_line1
  9086  003A26  24F3               	addwf	prodl,w,c
  9087  003A28  6EF6               	movwf	tblptrl,c
  9088  003A2A  0E8D               	movlw	high _search_line1
  9089  003A2C  20F4               	addwfc	prodh,w,c
  9090  003A2E  6EF7               	movwf	tblptrh,c
  9091  003A30                     	if	1	;There are 3 active tblptr bytes
  9092  003A30  6AF8               	clrf	tblptru,c
  9093  003A32  0E00               	movlw	low (__mediumconst shr (0+16))
  9094  003A34  22F8               	addwfc	tblptru,f,c
  9095  003A36                     	endif
  9096  003A36  0008               	tblrd		*
  9097  003A38  50F5               	movf	tablat,w,c
  9098  003A3A  0900               	iorlw	0
  9099  003A3C  A4D8               	btfss	status,2,c
  9100  003A3E  D7D9               	goto	l1559
  9101                           
  9102                           ;display.c: 372: cntr = 0;
  9103  003A40  0E00               	movlw	0
  9104  003A42  6E01               	movwf	__display_search@cntr,c
  9105                           
  9106                           ;display.c: 373: while(search_line2[cntr])
  9107  003A44  D017               	goto	l1561
  9108  003A46                     
  9109                           ;display.c: 374: display_content[1][cntr] = search_line2[cntr++];
  9110  003A46  5001               	movf	__display_search@cntr,w,c
  9111  003A48  0D01               	mullw	1
  9112  003A4A  0E4F               	movlw	low _search_line2
  9113  003A4C  24F3               	addwf	prodl,w,c
  9114  003A4E  6EF6               	movwf	tblptrl,c
  9115  003A50  0E8D               	movlw	high _search_line2
  9116  003A52  20F4               	addwfc	prodh,w,c
  9117  003A54  6EF7               	movwf	tblptrh,c
  9118  003A56                     	if	1	;There are 3 active tblptr bytes
  9119  003A56  6AF8               	clrf	tblptru,c
  9120  003A58  0E00               	movlw	low (__mediumconst shr (0+16))
  9121  003A5A  22F8               	addwfc	tblptru,f,c
  9122  003A5C                     	endif
  9123  003A5C  5001               	movf	__display_search@cntr,w,c
  9124  003A5E  0D01               	mullw	1
  9125  003A60  0E8A               	movlw	low (_display_content+20)
  9126  003A62  24F3               	addwf	prodl,w,c
  9127  003A64  6ED9               	movwf	fsr2l,c
  9128  003A66  0E01               	movlw	high (_display_content+20)
  9129  003A68  20F4               	addwfc	prodh,w,c
  9130  003A6A  6EDA               	movwf	fsr2h,c
  9131  003A6C  0008               	tblrd		*
  9132  003A6E  CFF5 FFDF          	movff	tablat,indf2
  9133  003A72  2A01               	incf	__display_search@cntr,f,c
  9134  003A74                     l1561:
  9135  003A74  5001               	movf	__display_search@cntr,w,c
  9136  003A76  0D01               	mullw	1
  9137  003A78  0E4F               	movlw	low _search_line2
  9138  003A7A  24F3               	addwf	prodl,w,c
  9139  003A7C  6EF6               	movwf	tblptrl,c
  9140  003A7E  0E8D               	movlw	high _search_line2
  9141  003A80  20F4               	addwfc	prodh,w,c
  9142  003A82  6EF7               	movwf	tblptrh,c
  9143  003A84                     	if	1	;There are 3 active tblptr bytes
  9144  003A84  6AF8               	clrf	tblptru,c
  9145  003A86  0E00               	movlw	low (__mediumconst shr (0+16))
  9146  003A88  22F8               	addwfc	tblptru,f,c
  9147  003A8A                     	endif
  9148  003A8A  0008               	tblrd		*
  9149  003A8C  50F5               	movf	tablat,w,c
  9150  003A8E  0900               	iorlw	0
  9151  003A90  A4D8               	btfss	status,2,c
  9152  003A92  D7D9               	goto	l1562
  9153                           
  9154                           ;display.c: 375: cntr = 0;
  9155  003A94  0E00               	movlw	0
  9156  003A96  6E01               	movwf	__display_search@cntr,c
  9157                           
  9158                           ;display.c: 376: while(search_line3[cntr])
  9159  003A98  D017               	goto	l1564
  9160  003A9A                     
  9161                           ;display.c: 377: display_content[2][cntr] = search_line3[cntr++];
  9162  003A9A  5001               	movf	__display_search@cntr,w,c
  9163  003A9C  0D01               	mullw	1
  9164  003A9E  0ECE               	movlw	low _search_line3
  9165  003AA0  24F3               	addwf	prodl,w,c
  9166  003AA2  6EF6               	movwf	tblptrl,c
  9167  003AA4  0E8C               	movlw	high _search_line3
  9168  003AA6  20F4               	addwfc	prodh,w,c
  9169  003AA8  6EF7               	movwf	tblptrh,c
  9170  003AAA                     	if	1	;There are 3 active tblptr bytes
  9171  003AAA  6AF8               	clrf	tblptru,c
  9172  003AAC  0E00               	movlw	low (__mediumconst shr (0+16))
  9173  003AAE  22F8               	addwfc	tblptru,f,c
  9174  003AB0                     	endif
  9175  003AB0  5001               	movf	__display_search@cntr,w,c
  9176  003AB2  0D01               	mullw	1
  9177  003AB4  0E9E               	movlw	low (_display_content+40)
  9178  003AB6  24F3               	addwf	prodl,w,c
  9179  003AB8  6ED9               	movwf	fsr2l,c
  9180  003ABA  0E01               	movlw	high (_display_content+40)
  9181  003ABC  20F4               	addwfc	prodh,w,c
  9182  003ABE  6EDA               	movwf	fsr2h,c
  9183  003AC0  0008               	tblrd		*
  9184  003AC2  CFF5 FFDF          	movff	tablat,indf2
  9185  003AC6  2A01               	incf	__display_search@cntr,f,c
  9186  003AC8                     l1564:
  9187  003AC8  5001               	movf	__display_search@cntr,w,c
  9188  003ACA  0D01               	mullw	1
  9189  003ACC  0ECE               	movlw	low _search_line3
  9190  003ACE  24F3               	addwf	prodl,w,c
  9191  003AD0  6EF6               	movwf	tblptrl,c
  9192  003AD2  0E8C               	movlw	high _search_line3
  9193  003AD4  20F4               	addwfc	prodh,w,c
  9194  003AD6  6EF7               	movwf	tblptrh,c
  9195  003AD8                     	if	1	;There are 3 active tblptr bytes
  9196  003AD8  6AF8               	clrf	tblptru,c
  9197  003ADA  0E00               	movlw	low (__mediumconst shr (0+16))
  9198  003ADC  22F8               	addwfc	tblptru,f,c
  9199  003ADE                     	endif
  9200  003ADE  0008               	tblrd		*
  9201  003AE0  50F5               	movf	tablat,w,c
  9202  003AE2  0900               	iorlw	0
  9203  003AE4  A4D8               	btfss	status,2,c
  9204  003AE6  D7D9               	goto	l1565
  9205                           
  9206                           ;display.c: 378: cntr = 0;
  9207  003AE8  0E00               	movlw	0
  9208  003AEA  6E01               	movwf	__display_search@cntr,c
  9209                           
  9210                           ;display.c: 379: while(search_line4[cntr])
  9211  003AEC  D017               	goto	l1567
  9212  003AEE                     
  9213                           ;display.c: 380: display_content[3][cntr] = search_line4[cntr++];
  9214  003AEE  5001               	movf	__display_search@cntr,w,c
  9215  003AF0  0D01               	mullw	1
  9216  003AF2  0E58               	movlw	low _search_line4
  9217  003AF4  24F3               	addwf	prodl,w,c
  9218  003AF6  6EF6               	movwf	tblptrl,c
  9219  003AF8  0E8E               	movlw	high _search_line4
  9220  003AFA  20F4               	addwfc	prodh,w,c
  9221  003AFC  6EF7               	movwf	tblptrh,c
  9222  003AFE                     	if	1	;There are 3 active tblptr bytes
  9223  003AFE  6AF8               	clrf	tblptru,c
  9224  003B00  0E00               	movlw	low (__mediumconst shr (0+16))
  9225  003B02  22F8               	addwfc	tblptru,f,c
  9226  003B04                     	endif
  9227  003B04  5001               	movf	__display_search@cntr,w,c
  9228  003B06  0D01               	mullw	1
  9229  003B08  0EB2               	movlw	low (_display_content+60)
  9230  003B0A  24F3               	addwf	prodl,w,c
  9231  003B0C  6ED9               	movwf	fsr2l,c
  9232  003B0E  0E01               	movlw	high (_display_content+60)
  9233  003B10  20F4               	addwfc	prodh,w,c
  9234  003B12  6EDA               	movwf	fsr2h,c
  9235  003B14  0008               	tblrd		*
  9236  003B16  CFF5 FFDF          	movff	tablat,indf2
  9237  003B1A  2A01               	incf	__display_search@cntr,f,c
  9238  003B1C                     l1567:
  9239  003B1C  5001               	movf	__display_search@cntr,w,c
  9240  003B1E  0D01               	mullw	1
  9241  003B20  0E58               	movlw	low _search_line4
  9242  003B22  24F3               	addwf	prodl,w,c
  9243  003B24  6EF6               	movwf	tblptrl,c
  9244  003B26  0E8E               	movlw	high _search_line4
  9245  003B28  20F4               	addwfc	prodh,w,c
  9246  003B2A  6EF7               	movwf	tblptrh,c
  9247  003B2C                     	if	1	;There are 3 active tblptr bytes
  9248  003B2C  6AF8               	clrf	tblptru,c
  9249  003B2E  0E00               	movlw	low (__mediumconst shr (0+16))
  9250  003B30  22F8               	addwfc	tblptru,f,c
  9251  003B32                     	endif
  9252  003B32  0008               	tblrd		*
  9253  003B34  50F5               	movf	tablat,w,c
  9254  003B36  0900               	iorlw	0
  9255  003B38  B4D8               	btfsc	status,2,c
  9256  003B3A  0012               	return	
  9257  003B3C  D7D8               	goto	l1568
  9258  003B3E                     __end_of__display_search:
  9259                           	opt stack 0
  9260                           tblptru	equ	0xFF8
  9261                           tblptrh	equ	0xFF7
  9262                           tblptrl	equ	0xFF6
  9263                           tablat	equ	0xFF5
  9264                           prodh	equ	0xFF4
  9265                           prodl	equ	0xFF3
  9266                           intcon	equ	0xFF2
  9267                           intcon2	equ	0xFF1
  9268                           intcon3	equ	0xFF0
  9269                           postinc0	equ	0xFEE
  9270                           wreg	equ	0xFE8
  9271                           postdec1	equ	0xFE5
  9272                           plusw1	equ	0xFE3
  9273                           fsr1h	equ	0xFE2
  9274                           fsr1l	equ	0xFE1
  9275                           indf2	equ	0xFDF
  9276                           postinc2	equ	0xFDE
  9277                           plusw2	equ	0xFDB
  9278                           fsr2h	equ	0xFDA
  9279                           fsr2l	equ	0xFD9
  9280                           status	equ	0xFD8
  9281                           
  9282 ;; *************** function __display_programming *****************
  9283 ;; Defined at:
  9284 ;;		line 498 in file "display.c"
  9285 ;; Parameters:    Size  Location     Type
  9286 ;;		None
  9287 ;; Auto vars:     Size  Location     Type
  9288 ;;  cntr            1   30[COMRAM] unsigned char 
  9289 ;; Return value:  Size  Location     Type
  9290 ;;                  1    wreg      void 
  9291 ;; Registers used:
  9292 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9293 ;; Tracked objects:
  9294 ;;		On entry : 0/0
  9295 ;;		On exit  : 0/0
  9296 ;;		Unchanged: 0/0
  9297 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9298 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9299 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9300 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9301 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9302 ;;Total ram usage:        1 bytes
  9303 ;; Hardware stack levels used:    1
  9304 ;; Hardware stack levels required when called:    4
  9305 ;; This function calls:
  9306 ;;		__display_itoa_u16
  9307 ;;		_bootloader_get_entries
  9308 ;;		_bootloader_get_flashPagesWritten
  9309 ;;		_bootloader_get_total_entries
  9310 ;; This function is called by:
  9311 ;;		_display_prepare
  9312 ;; This function uses a non-reentrant model
  9313 ;;
  9314                           
  9315                           	psect	text37
  9316  002EE2                     __ptext37:
  9317                           	opt stack 0
  9318  002EE2                     __display_programming:
  9319                           	opt stack 25
  9320                           
  9321                           ;display.c: 500: uint8_t cntr;;display.c: 501: cntr = 0;
  9322                           
  9323                           ;incstack = 0
  9324  002EE2  0E00               	movlw	0
  9325  002EE4  6E1F               	movwf	__display_programming@cntr,c
  9326                           
  9327                           ;display.c: 502: while(programming_line1[cntr])
  9328  002EE6  D017               	goto	l1652
  9329  002EE8                     
  9330                           ;display.c: 503: display_content[0][cntr] = programming_line1[cntr++];
  9331  002EE8  501F               	movf	__display_programming@cntr,w,c
  9332  002EEA  0D01               	mullw	1
  9333  002EEC  0EA0               	movlw	low _programming_line1
  9334  002EEE  24F3               	addwf	prodl,w,c
  9335  002EF0  6EF6               	movwf	tblptrl,c
  9336  002EF2  0E8D               	movlw	high _programming_line1
  9337  002EF4  20F4               	addwfc	prodh,w,c
  9338  002EF6  6EF7               	movwf	tblptrh,c
  9339  002EF8                     	if	1	;There are 3 active tblptr bytes
  9340  002EF8  6AF8               	clrf	tblptru,c
  9341  002EFA  0E00               	movlw	low (__mediumconst shr (0+16))
  9342  002EFC  22F8               	addwfc	tblptru,f,c
  9343  002EFE                     	endif
  9344  002EFE  501F               	movf	__display_programming@cntr,w,c
  9345  002F00  0D01               	mullw	1
  9346  002F02  0E76               	movlw	low _display_content
  9347  002F04  24F3               	addwf	prodl,w,c
  9348  002F06  6ED9               	movwf	fsr2l,c
  9349  002F08  0E01               	movlw	high _display_content
  9350  002F0A  20F4               	addwfc	prodh,w,c
  9351  002F0C  6EDA               	movwf	fsr2h,c
  9352  002F0E  0008               	tblrd		*
  9353  002F10  CFF5 FFDF          	movff	tablat,indf2
  9354  002F14  2A1F               	incf	__display_programming@cntr,f,c
  9355  002F16                     l1652:
  9356  002F16  501F               	movf	__display_programming@cntr,w,c
  9357  002F18  0D01               	mullw	1
  9358  002F1A  0EA0               	movlw	low _programming_line1
  9359  002F1C  24F3               	addwf	prodl,w,c
  9360  002F1E  6EF6               	movwf	tblptrl,c
  9361  002F20  0E8D               	movlw	high _programming_line1
  9362  002F22  20F4               	addwfc	prodh,w,c
  9363  002F24  6EF7               	movwf	tblptrh,c
  9364  002F26                     	if	1	;There are 3 active tblptr bytes
  9365  002F26  6AF8               	clrf	tblptru,c
  9366  002F28  0E00               	movlw	low (__mediumconst shr (0+16))
  9367  002F2A  22F8               	addwfc	tblptru,f,c
  9368  002F2C                     	endif
  9369  002F2C  0008               	tblrd		*
  9370  002F2E  50F5               	movf	tablat,w,c
  9371  002F30  0900               	iorlw	0
  9372  002F32  A4D8               	btfss	status,2,c
  9373  002F34  D7D9               	goto	l1653
  9374                           
  9375                           ;display.c: 505: cntr = 0;
  9376  002F36  0E00               	movlw	0
  9377  002F38  6E1F               	movwf	__display_programming@cntr,c
  9378                           
  9379                           ;display.c: 506: while(programming_line2[cntr])
  9380  002F3A  D017               	goto	l1655
  9381  002F3C                     
  9382                           ;display.c: 507: display_content[1][cntr] = programming_line2[cntr++];
  9383  002F3C  501F               	movf	__display_programming@cntr,w,c
  9384  002F3E  0D01               	mullw	1
  9385  002F40  0E08               	movlw	low _programming_line2
  9386  002F42  24F3               	addwf	prodl,w,c
  9387  002F44  6EF6               	movwf	tblptrl,c
  9388  002F46  0E8D               	movlw	high _programming_line2
  9389  002F48  20F4               	addwfc	prodh,w,c
  9390  002F4A  6EF7               	movwf	tblptrh,c
  9391  002F4C                     	if	1	;There are 3 active tblptr bytes
  9392  002F4C  6AF8               	clrf	tblptru,c
  9393  002F4E  0E00               	movlw	low (__mediumconst shr (0+16))
  9394  002F50  22F8               	addwfc	tblptru,f,c
  9395  002F52                     	endif
  9396  002F52  501F               	movf	__display_programming@cntr,w,c
  9397  002F54  0D01               	mullw	1
  9398  002F56  0E8A               	movlw	low (_display_content+20)
  9399  002F58  24F3               	addwf	prodl,w,c
  9400  002F5A  6ED9               	movwf	fsr2l,c
  9401  002F5C  0E01               	movlw	high (_display_content+20)
  9402  002F5E  20F4               	addwfc	prodh,w,c
  9403  002F60  6EDA               	movwf	fsr2h,c
  9404  002F62  0008               	tblrd		*
  9405  002F64  CFF5 FFDF          	movff	tablat,indf2
  9406  002F68  2A1F               	incf	__display_programming@cntr,f,c
  9407  002F6A                     l1655:
  9408  002F6A  501F               	movf	__display_programming@cntr,w,c
  9409  002F6C  0D01               	mullw	1
  9410  002F6E  0E08               	movlw	low _programming_line2
  9411  002F70  24F3               	addwf	prodl,w,c
  9412  002F72  6EF6               	movwf	tblptrl,c
  9413  002F74  0E8D               	movlw	high _programming_line2
  9414  002F76  20F4               	addwfc	prodh,w,c
  9415  002F78  6EF7               	movwf	tblptrh,c
  9416  002F7A                     	if	1	;There are 3 active tblptr bytes
  9417  002F7A  6AF8               	clrf	tblptru,c
  9418  002F7C  0E00               	movlw	low (__mediumconst shr (0+16))
  9419  002F7E  22F8               	addwfc	tblptru,f,c
  9420  002F80                     	endif
  9421  002F80  0008               	tblrd		*
  9422  002F82  50F5               	movf	tablat,w,c
  9423  002F84  0900               	iorlw	0
  9424  002F86  A4D8               	btfss	status,2,c
  9425  002F88  D7D9               	goto	l1656
  9426                           
  9427                           ;display.c: 509: cntr = 0;
  9428  002F8A  0E00               	movlw	0
  9429  002F8C  6E1F               	movwf	__display_programming@cntr,c
  9430                           
  9431                           ;display.c: 510: while(programming_line3[cntr])
  9432  002F8E  D017               	goto	l1658
  9433  002F90                     
  9434                           ;display.c: 511: display_content[2][cntr] = programming_line3[cntr++];
  9435  002F90  501F               	movf	__display_programming@cntr,w,c
  9436  002F92  0D01               	mullw	1
  9437  002F94  0E82               	movlw	low _programming_line3
  9438  002F96  24F3               	addwf	prodl,w,c
  9439  002F98  6EF6               	movwf	tblptrl,c
  9440  002F9A  0E8E               	movlw	high _programming_line3
  9441  002F9C  20F4               	addwfc	prodh,w,c
  9442  002F9E  6EF7               	movwf	tblptrh,c
  9443  002FA0                     	if	1	;There are 3 active tblptr bytes
  9444  002FA0  6AF8               	clrf	tblptru,c
  9445  002FA2  0E00               	movlw	low (__mediumconst shr (0+16))
  9446  002FA4  22F8               	addwfc	tblptru,f,c
  9447  002FA6                     	endif
  9448  002FA6  501F               	movf	__display_programming@cntr,w,c
  9449  002FA8  0D01               	mullw	1
  9450  002FAA  0E9E               	movlw	low (_display_content+40)
  9451  002FAC  24F3               	addwf	prodl,w,c
  9452  002FAE  6ED9               	movwf	fsr2l,c
  9453  002FB0  0E01               	movlw	high (_display_content+40)
  9454  002FB2  20F4               	addwfc	prodh,w,c
  9455  002FB4  6EDA               	movwf	fsr2h,c
  9456  002FB6  0008               	tblrd		*
  9457  002FB8  CFF5 FFDF          	movff	tablat,indf2
  9458  002FBC  2A1F               	incf	__display_programming@cntr,f,c
  9459  002FBE                     l1658:
  9460  002FBE  501F               	movf	__display_programming@cntr,w,c
  9461  002FC0  0D01               	mullw	1
  9462  002FC2  0E82               	movlw	low _programming_line3
  9463  002FC4  24F3               	addwf	prodl,w,c
  9464  002FC6  6EF6               	movwf	tblptrl,c
  9465  002FC8  0E8E               	movlw	high _programming_line3
  9466  002FCA  20F4               	addwfc	prodh,w,c
  9467  002FCC  6EF7               	movwf	tblptrh,c
  9468  002FCE                     	if	1	;There are 3 active tblptr bytes
  9469  002FCE  6AF8               	clrf	tblptru,c
  9470  002FD0  0E00               	movlw	low (__mediumconst shr (0+16))
  9471  002FD2  22F8               	addwfc	tblptru,f,c
  9472  002FD4                     	endif
  9473  002FD4  0008               	tblrd		*
  9474  002FD6  50F5               	movf	tablat,w,c
  9475  002FD8  0900               	iorlw	0
  9476  002FDA  A4D8               	btfss	status,2,c
  9477  002FDC  D7D9               	goto	l1659
  9478                           
  9479                           ;display.c: 512: cntr += _display_itoa_u16(bootloader_get_entries(), &display_content[2]
      +                          [cntr]);
  9480  002FDE  ECF4  F03F         	call	_bootloader_get_entries	;wreg free
  9481  002FE2  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
  9482  002FE6  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
  9483  002FEA  6A1B               	clrf	__display_itoa_u16@value+2,c
  9484  002FEC  6A1C               	clrf	__display_itoa_u16@value+3,c
  9485  002FEE  501F               	movf	__display_programming@cntr,w,c
  9486  002FF0  0D01               	mullw	1
  9487  002FF2  0E9E               	movlw	low (_display_content+40)
  9488  002FF4  24F3               	addwf	prodl,w,c
  9489  002FF6  6E1D               	movwf	__display_itoa_u16@text,c
  9490  002FF8  0E01               	movlw	high (_display_content+40)
  9491  002FFA  20F4               	addwfc	prodh,w,c
  9492  002FFC  6E1E               	movwf	__display_itoa_u16@text+1,c
  9493  002FFE  EC4B  F029         	call	__display_itoa_u16	;wreg free
  9494  003002  261F               	addwf	__display_programming@cntr,f,c
  9495                           
  9496                           ;display.c: 513: display_content[2][cntr++] = '/';
  9497  003004  501F               	movf	__display_programming@cntr,w,c
  9498  003006  0D01               	mullw	1
  9499  003008  0E9E               	movlw	low (_display_content+40)
  9500  00300A  24F3               	addwf	prodl,w,c
  9501  00300C  6ED9               	movwf	fsr2l,c
  9502  00300E  0E01               	movlw	high (_display_content+40)
  9503  003010  20F4               	addwfc	prodh,w,c
  9504  003012  6EDA               	movwf	fsr2h,c
  9505  003014  0E2F               	movlw	47
  9506  003016  6EDF               	movwf	indf2,c
  9507  003018  2A1F               	incf	__display_programming@cntr,f,c
  9508                           
  9509                           ;display.c: 514: _display_itoa_u16(bootloader_get_total_entries(), &display_content[2][c
      +                          ntr]);
  9510  00301A  ECE0  F03F         	call	_bootloader_get_total_entries	;wreg free
  9511  00301E  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
  9512  003022  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
  9513  003026  6A1B               	clrf	__display_itoa_u16@value+2,c
  9514  003028  6A1C               	clrf	__display_itoa_u16@value+3,c
  9515  00302A  501F               	movf	__display_programming@cntr,w,c
  9516  00302C  0D01               	mullw	1
  9517  00302E  0E9E               	movlw	low (_display_content+40)
  9518  003030  24F3               	addwf	prodl,w,c
  9519  003032  6E1D               	movwf	__display_itoa_u16@text,c
  9520  003034  0E01               	movlw	high (_display_content+40)
  9521  003036  20F4               	addwfc	prodh,w,c
  9522  003038  6E1E               	movwf	__display_itoa_u16@text+1,c
  9523  00303A  EC4B  F029         	call	__display_itoa_u16	;wreg free
  9524                           
  9525                           ;display.c: 516: cntr = 0;
  9526  00303E  0E00               	movlw	0
  9527  003040  6E1F               	movwf	__display_programming@cntr,c
  9528                           
  9529                           ;display.c: 517: while(programming_line4[cntr])
  9530  003042  D017               	goto	l1661
  9531  003044                     
  9532                           ;display.c: 518: display_content[3][cntr] = programming_line4[cntr++];
  9533  003044  501F               	movf	__display_programming@cntr,w,c
  9534  003046  0D01               	mullw	1
  9535  003048  0E90               	movlw	low _programming_line4
  9536  00304A  24F3               	addwf	prodl,w,c
  9537  00304C  6EF6               	movwf	tblptrl,c
  9538  00304E  0E8D               	movlw	high _programming_line4
  9539  003050  20F4               	addwfc	prodh,w,c
  9540  003052  6EF7               	movwf	tblptrh,c
  9541  003054                     	if	1	;There are 3 active tblptr bytes
  9542  003054  6AF8               	clrf	tblptru,c
  9543  003056  0E00               	movlw	low (__mediumconst shr (0+16))
  9544  003058  22F8               	addwfc	tblptru,f,c
  9545  00305A                     	endif
  9546  00305A  501F               	movf	__display_programming@cntr,w,c
  9547  00305C  0D01               	mullw	1
  9548  00305E  0EB2               	movlw	low (_display_content+60)
  9549  003060  24F3               	addwf	prodl,w,c
  9550  003062  6ED9               	movwf	fsr2l,c
  9551  003064  0E01               	movlw	high (_display_content+60)
  9552  003066  20F4               	addwfc	prodh,w,c
  9553  003068  6EDA               	movwf	fsr2h,c
  9554  00306A  0008               	tblrd		*
  9555  00306C  CFF5 FFDF          	movff	tablat,indf2
  9556  003070  2A1F               	incf	__display_programming@cntr,f,c
  9557  003072                     l1661:
  9558  003072  501F               	movf	__display_programming@cntr,w,c
  9559  003074  0D01               	mullw	1
  9560  003076  0E90               	movlw	low _programming_line4
  9561  003078  24F3               	addwf	prodl,w,c
  9562  00307A  6EF6               	movwf	tblptrl,c
  9563  00307C  0E8D               	movlw	high _programming_line4
  9564  00307E  20F4               	addwfc	prodh,w,c
  9565  003080  6EF7               	movwf	tblptrh,c
  9566  003082                     	if	1	;There are 3 active tblptr bytes
  9567  003082  6AF8               	clrf	tblptru,c
  9568  003084  0E00               	movlw	low (__mediumconst shr (0+16))
  9569  003086  22F8               	addwfc	tblptru,f,c
  9570  003088                     	endif
  9571  003088  0008               	tblrd		*
  9572  00308A  50F5               	movf	tablat,w,c
  9573  00308C  0900               	iorlw	0
  9574  00308E  A4D8               	btfss	status,2,c
  9575  003090  D7D9               	goto	l1662
  9576                           
  9577                           ;display.c: 519: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          3][cntr]);
  9578  003092  ECEF  F03F         	call	_bootloader_get_flashPagesWritten	;wreg free
  9579  003096  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
  9580  00309A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
  9581  00309E  6A1B               	clrf	__display_itoa_u16@value+2,c
  9582  0030A0  6A1C               	clrf	__display_itoa_u16@value+3,c
  9583  0030A2  501F               	movf	__display_programming@cntr,w,c
  9584  0030A4  0D01               	mullw	1
  9585  0030A6  0EB2               	movlw	low (_display_content+60)
  9586  0030A8  24F3               	addwf	prodl,w,c
  9587  0030AA  6E1D               	movwf	__display_itoa_u16@text,c
  9588  0030AC  0E01               	movlw	high (_display_content+60)
  9589  0030AE  20F4               	addwfc	prodh,w,c
  9590  0030B0  6E1E               	movwf	__display_itoa_u16@text+1,c
  9591  0030B2  EC4B  F029         	call	__display_itoa_u16	;wreg free
  9592  0030B6  0012               	return		;funcret
  9593  0030B8                     __end_of__display_programming:
  9594                           	opt stack 0
  9595                           tblptru	equ	0xFF8
  9596                           tblptrh	equ	0xFF7
  9597                           tblptrl	equ	0xFF6
  9598                           tablat	equ	0xFF5
  9599                           prodh	equ	0xFF4
  9600                           prodl	equ	0xFF3
  9601                           intcon	equ	0xFF2
  9602                           intcon2	equ	0xFF1
  9603                           intcon3	equ	0xFF0
  9604                           postinc0	equ	0xFEE
  9605                           wreg	equ	0xFE8
  9606                           postdec1	equ	0xFE5
  9607                           plusw1	equ	0xFE3
  9608                           fsr1h	equ	0xFE2
  9609                           fsr1l	equ	0xFE1
  9610                           indf2	equ	0xFDF
  9611                           postinc2	equ	0xFDE
  9612                           plusw2	equ	0xFDB
  9613                           fsr2h	equ	0xFDA
  9614                           fsr2l	equ	0xFD9
  9615                           status	equ	0xFD8
  9616                           
  9617 ;; *************** function __display_found *****************
  9618 ;; Defined at:
  9619 ;;		line 383 in file "display.c"
  9620 ;; Parameters:    Size  Location     Type
  9621 ;;		None
  9622 ;; Auto vars:     Size  Location     Type
  9623 ;;  cntr            1   39[COMRAM] unsigned char 
  9624 ;;  start           1   38[COMRAM] unsigned char 
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  1    wreg      void 
  9627 ;; Registers used:
  9628 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9634 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9635 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9636 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9637 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9638 ;;Total ram usage:        4 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    5
  9641 ;; This function calls:
  9642 ;;		__display_itoa_u32
  9643 ;;		_bootloader_get_file_size
  9644 ;; This function is called by:
  9645 ;;		_display_prepare
  9646 ;; This function uses a non-reentrant model
  9647 ;;
  9648                           
  9649                           	psect	text38
  9650  002B2C                     __ptext38:
  9651                           	opt stack 0
  9652  002B2C                     __display_found:
  9653                           	opt stack 24
  9654                           
  9655                           ;display.c: 385: uint8_t cntr;;display.c: 386: uint8_t start;;display.c: 388: cntr = 0;
  9656                           
  9657                           ;incstack = 0
  9658  002B2C  0E00               	movlw	0
  9659  002B2E  6E28               	movwf	__display_found@cntr,c
  9660                           
  9661                           ;display.c: 389: while(found_line1[cntr])
  9662  002B30  D017               	goto	l1573
  9663  002B32                     
  9664                           ;display.c: 390: display_content[0][cntr] = found_line1[cntr++];
  9665  002B32  5028               	movf	__display_found@cntr,w,c
  9666  002B34  0D01               	mullw	1
  9667  002B36  0EE0               	movlw	low _found_line1
  9668  002B38  24F3               	addwf	prodl,w,c
  9669  002B3A  6EF6               	movwf	tblptrl,c
  9670  002B3C  0E8D               	movlw	high _found_line1
  9671  002B3E  20F4               	addwfc	prodh,w,c
  9672  002B40  6EF7               	movwf	tblptrh,c
  9673  002B42                     	if	1	;There are 3 active tblptr bytes
  9674  002B42  6AF8               	clrf	tblptru,c
  9675  002B44  0E00               	movlw	low (__mediumconst shr (0+16))
  9676  002B46  22F8               	addwfc	tblptru,f,c
  9677  002B48                     	endif
  9678  002B48  5028               	movf	__display_found@cntr,w,c
  9679  002B4A  0D01               	mullw	1
  9680  002B4C  0E76               	movlw	low _display_content
  9681  002B4E  24F3               	addwf	prodl,w,c
  9682  002B50  6ED9               	movwf	fsr2l,c
  9683  002B52  0E01               	movlw	high _display_content
  9684  002B54  20F4               	addwfc	prodh,w,c
  9685  002B56  6EDA               	movwf	fsr2h,c
  9686  002B58  0008               	tblrd		*
  9687  002B5A  CFF5 FFDF          	movff	tablat,indf2
  9688  002B5E  2A28               	incf	__display_found@cntr,f,c
  9689  002B60                     l1573:
  9690  002B60  5028               	movf	__display_found@cntr,w,c
  9691  002B62  0D01               	mullw	1
  9692  002B64  0EE0               	movlw	low _found_line1
  9693  002B66  24F3               	addwf	prodl,w,c
  9694  002B68  6EF6               	movwf	tblptrl,c
  9695  002B6A  0E8D               	movlw	high _found_line1
  9696  002B6C  20F4               	addwfc	prodh,w,c
  9697  002B6E  6EF7               	movwf	tblptrh,c
  9698  002B70                     	if	1	;There are 3 active tblptr bytes
  9699  002B70  6AF8               	clrf	tblptru,c
  9700  002B72  0E00               	movlw	low (__mediumconst shr (0+16))
  9701  002B74  22F8               	addwfc	tblptru,f,c
  9702  002B76                     	endif
  9703  002B76  0008               	tblrd		*
  9704  002B78  50F5               	movf	tablat,w,c
  9705  002B7A  0900               	iorlw	0
  9706  002B7C  A4D8               	btfss	status,2,c
  9707  002B7E  D7D9               	goto	l1574
  9708                           
  9709                           ;display.c: 392: cntr = 0;
  9710  002B80  0E00               	movlw	0
  9711  002B82  6E28               	movwf	__display_found@cntr,c
  9712                           
  9713                           ;display.c: 393: while(found_line2[cntr])
  9714  002B84  D017               	goto	l1576
  9715  002B86                     
  9716                           ;display.c: 394: display_content[1][cntr] = found_line2[cntr++];
  9717  002B86  5028               	movf	__display_found@cntr,w,c
  9718  002B88  0D01               	mullw	1
  9719  002B8A  0EF5               	movlw	low _found_line2
  9720  002B8C  24F3               	addwf	prodl,w,c
  9721  002B8E  6EF6               	movwf	tblptrl,c
  9722  002B90  0E8C               	movlw	high _found_line2
  9723  002B92  20F4               	addwfc	prodh,w,c
  9724  002B94  6EF7               	movwf	tblptrh,c
  9725  002B96                     	if	1	;There are 3 active tblptr bytes
  9726  002B96  6AF8               	clrf	tblptru,c
  9727  002B98  0E00               	movlw	low (__mediumconst shr (0+16))
  9728  002B9A  22F8               	addwfc	tblptru,f,c
  9729  002B9C                     	endif
  9730  002B9C  5028               	movf	__display_found@cntr,w,c
  9731  002B9E  0D01               	mullw	1
  9732  002BA0  0E8A               	movlw	low (_display_content+20)
  9733  002BA2  24F3               	addwf	prodl,w,c
  9734  002BA4  6ED9               	movwf	fsr2l,c
  9735  002BA6  0E01               	movlw	high (_display_content+20)
  9736  002BA8  20F4               	addwfc	prodh,w,c
  9737  002BAA  6EDA               	movwf	fsr2h,c
  9738  002BAC  0008               	tblrd		*
  9739  002BAE  CFF5 FFDF          	movff	tablat,indf2
  9740  002BB2  2A28               	incf	__display_found@cntr,f,c
  9741  002BB4                     l1576:
  9742  002BB4  5028               	movf	__display_found@cntr,w,c
  9743  002BB6  0D01               	mullw	1
  9744  002BB8  0EF5               	movlw	low _found_line2
  9745  002BBA  24F3               	addwf	prodl,w,c
  9746  002BBC  6EF6               	movwf	tblptrl,c
  9747  002BBE  0E8C               	movlw	high _found_line2
  9748  002BC0  20F4               	addwfc	prodh,w,c
  9749  002BC2  6EF7               	movwf	tblptrh,c
  9750  002BC4                     	if	1	;There are 3 active tblptr bytes
  9751  002BC4  6AF8               	clrf	tblptru,c
  9752  002BC6  0E00               	movlw	low (__mediumconst shr (0+16))
  9753  002BC8  22F8               	addwfc	tblptru,f,c
  9754  002BCA                     	endif
  9755  002BCA  0008               	tblrd		*
  9756  002BCC  50F5               	movf	tablat,w,c
  9757  002BCE  0900               	iorlw	0
  9758  002BD0  A4D8               	btfss	status,2,c
  9759  002BD2  D7D9               	goto	l1577
  9760                           
  9761                           ;display.c: 396: cntr = 0;
  9762  002BD4  0E00               	movlw	0
  9763  002BD6  6E28               	movwf	__display_found@cntr,c
  9764                           
  9765                           ;display.c: 397: while(found_line3[cntr])
  9766  002BD8  D017               	goto	l1579
  9767  002BDA                     
  9768                           ;display.c: 398: display_content[2][cntr] = found_line3[cntr++];
  9769  002BDA  5028               	movf	__display_found@cntr,w,c
  9770  002BDC  0D01               	mullw	1
  9771  002BDE  0E97               	movlw	low _found_line3
  9772  002BE0  24F3               	addwf	prodl,w,c
  9773  002BE2  6EF6               	movwf	tblptrl,c
  9774  002BE4  0E8E               	movlw	high _found_line3
  9775  002BE6  20F4               	addwfc	prodh,w,c
  9776  002BE8  6EF7               	movwf	tblptrh,c
  9777  002BEA                     	if	1	;There are 3 active tblptr bytes
  9778  002BEA  6AF8               	clrf	tblptru,c
  9779  002BEC  0E00               	movlw	low (__mediumconst shr (0+16))
  9780  002BEE  22F8               	addwfc	tblptru,f,c
  9781  002BF0                     	endif
  9782  002BF0  5028               	movf	__display_found@cntr,w,c
  9783  002BF2  0D01               	mullw	1
  9784  002BF4  0E9E               	movlw	low (_display_content+40)
  9785  002BF6  24F3               	addwf	prodl,w,c
  9786  002BF8  6ED9               	movwf	fsr2l,c
  9787  002BFA  0E01               	movlw	high (_display_content+40)
  9788  002BFC  20F4               	addwfc	prodh,w,c
  9789  002BFE  6EDA               	movwf	fsr2h,c
  9790  002C00  0008               	tblrd		*
  9791  002C02  CFF5 FFDF          	movff	tablat,indf2
  9792  002C06  2A28               	incf	__display_found@cntr,f,c
  9793  002C08                     l1579:
  9794  002C08  5028               	movf	__display_found@cntr,w,c
  9795  002C0A  0D01               	mullw	1
  9796  002C0C  0E97               	movlw	low _found_line3
  9797  002C0E  24F3               	addwf	prodl,w,c
  9798  002C10  6EF6               	movwf	tblptrl,c
  9799  002C12  0E8E               	movlw	high _found_line3
  9800  002C14  20F4               	addwfc	prodh,w,c
  9801  002C16  6EF7               	movwf	tblptrh,c
  9802  002C18                     	if	1	;There are 3 active tblptr bytes
  9803  002C18  6AF8               	clrf	tblptru,c
  9804  002C1A  0E00               	movlw	low (__mediumconst shr (0+16))
  9805  002C1C  22F8               	addwfc	tblptru,f,c
  9806  002C1E                     	endif
  9807  002C1E  0008               	tblrd		*
  9808  002C20  50F5               	movf	tablat,w,c
  9809  002C22  0900               	iorlw	0
  9810  002C24  A4D8               	btfss	status,2,c
  9811  002C26  D7D9               	goto	l1580
  9812                           
  9813                           ;display.c: 399: start = cntr;
  9814  002C28  C028  F027         	movff	__display_found@cntr,__display_found@start
  9815                           
  9816                           ;display.c: 400: start += _display_itoa_u32(bootloader_get_file_size(), &display_content
      +                          [2][cntr]);
  9817  002C2C  EC8F  F03F         	call	_bootloader_get_file_size	;wreg free
  9818  002C30  C001  F01F         	movff	?_bootloader_get_file_size,__display_itoa_u32@value
  9819  002C34  C002  F020         	movff	?_bootloader_get_file_size+1,__display_itoa_u32@value+1
  9820  002C38  C003  F021         	movff	?_bootloader_get_file_size+2,__display_itoa_u32@value+2
  9821  002C3C  C004  F022         	movff	?_bootloader_get_file_size+3,__display_itoa_u32@value+3
  9822  002C40  5028               	movf	__display_found@cntr,w,c
  9823  002C42  0D01               	mullw	1
  9824  002C44  0E9E               	movlw	low (_display_content+40)
  9825  002C46  24F3               	addwf	prodl,w,c
  9826  002C48  6E23               	movwf	__display_itoa_u32@text,c
  9827  002C4A  0E01               	movlw	high (_display_content+40)
  9828  002C4C  20F4               	addwfc	prodh,w,c
  9829  002C4E  6E24               	movwf	__display_itoa_u32@text+1,c
  9830  002C50  EC2D  F004         	call	__display_itoa_u32	;wreg free
  9831  002C54  2627               	addwf	__display_found@start,f,c
  9832                           
  9833                           ;display.c: 401: cntr = 0;
  9834  002C56  0E00               	movlw	0
  9835  002C58  6E28               	movwf	__display_found@cntr,c
  9836                           
  9837                           ;display.c: 402: while(found_line3b[cntr])
  9838  002C5A  D01C               	goto	l1582
  9839  002C5C                     
  9840                           ;display.c: 403: display_content[2][start+cntr] = found_line3b[cntr++];
  9841  002C5C  5028               	movf	__display_found@cntr,w,c
  9842  002C5E  0D01               	mullw	1
  9843  002C60  0E90               	movlw	low _found_line3b
  9844  002C62  24F3               	addwf	prodl,w,c
  9845  002C64  6EF6               	movwf	tblptrl,c
  9846  002C66  0E8E               	movlw	high _found_line3b
  9847  002C68  20F4               	addwfc	prodh,w,c
  9848  002C6A  6EF7               	movwf	tblptrh,c
  9849  002C6C                     	if	1	;There are 3 active tblptr bytes
  9850  002C6C  6AF8               	clrf	tblptru,c
  9851  002C6E  0E00               	movlw	low (__mediumconst shr (0+16))
  9852  002C70  22F8               	addwfc	tblptru,f,c
  9853  002C72                     	endif
  9854  002C72  5028               	movf	__display_found@cntr,w,c
  9855  002C74  C027  F025         	movff	__display_found@start,??__display_found
  9856  002C78  6A26               	clrf	(??__display_found+1)& (0+255),c
  9857  002C7A  2625               	addwf	??__display_found,f,c
  9858  002C7C  0E00               	movlw	0
  9859  002C7E  2226               	addwfc	??__display_found+1,f,c
  9860  002C80  0E9E               	movlw	low (_display_content+40)
  9861  002C82  2425               	addwf	??__display_found,w,c
  9862  002C84  6ED9               	movwf	fsr2l,c
  9863  002C86  0E01               	movlw	high (_display_content+40)
  9864  002C88  2026               	addwfc	??__display_found+1,w,c
  9865  002C8A  6EDA               	movwf	fsr2h,c
  9866  002C8C  0008               	tblrd		*
  9867  002C8E  CFF5 FFDF          	movff	tablat,indf2
  9868  002C92  2A28               	incf	__display_found@cntr,f,c
  9869  002C94                     l1582:
  9870  002C94  5028               	movf	__display_found@cntr,w,c
  9871  002C96  0D01               	mullw	1
  9872  002C98  0E90               	movlw	low _found_line3b
  9873  002C9A  24F3               	addwf	prodl,w,c
  9874  002C9C  6EF6               	movwf	tblptrl,c
  9875  002C9E  0E8E               	movlw	high _found_line3b
  9876  002CA0  20F4               	addwfc	prodh,w,c
  9877  002CA2  6EF7               	movwf	tblptrh,c
  9878  002CA4                     	if	1	;There are 3 active tblptr bytes
  9879  002CA4  6AF8               	clrf	tblptru,c
  9880  002CA6  0E00               	movlw	low (__mediumconst shr (0+16))
  9881  002CA8  22F8               	addwfc	tblptru,f,c
  9882  002CAA                     	endif
  9883  002CAA  0008               	tblrd		*
  9884  002CAC  50F5               	movf	tablat,w,c
  9885  002CAE  0900               	iorlw	0
  9886  002CB0  A4D8               	btfss	status,2,c
  9887  002CB2  D7D4               	goto	l1583
  9888                           
  9889                           ;display.c: 405: cntr = 0;
  9890  002CB4  0E00               	movlw	0
  9891  002CB6  6E28               	movwf	__display_found@cntr,c
  9892                           
  9893                           ;display.c: 406: while(found_line4[cntr])
  9894  002CB8  D017               	goto	l1585
  9895  002CBA                     
  9896                           ;display.c: 407: display_content[3][cntr] = found_line4[cntr++];
  9897  002CBA  5028               	movf	__display_found@cntr,w,c
  9898  002CBC  0D01               	mullw	1
  9899  002CBE  0E2C               	movlw	low _found_line4
  9900  002CC0  24F3               	addwf	prodl,w,c
  9901  002CC2  6EF6               	movwf	tblptrl,c
  9902  002CC4  0E8D               	movlw	high _found_line4
  9903  002CC6  20F4               	addwfc	prodh,w,c
  9904  002CC8  6EF7               	movwf	tblptrh,c
  9905  002CCA                     	if	1	;There are 3 active tblptr bytes
  9906  002CCA  6AF8               	clrf	tblptru,c
  9907  002CCC  0E00               	movlw	low (__mediumconst shr (0+16))
  9908  002CCE  22F8               	addwfc	tblptru,f,c
  9909  002CD0                     	endif
  9910  002CD0  5028               	movf	__display_found@cntr,w,c
  9911  002CD2  0D01               	mullw	1
  9912  002CD4  0EB2               	movlw	low (_display_content+60)
  9913  002CD6  24F3               	addwf	prodl,w,c
  9914  002CD8  6ED9               	movwf	fsr2l,c
  9915  002CDA  0E01               	movlw	high (_display_content+60)
  9916  002CDC  20F4               	addwfc	prodh,w,c
  9917  002CDE  6EDA               	movwf	fsr2h,c
  9918  002CE0  0008               	tblrd		*
  9919  002CE2  CFF5 FFDF          	movff	tablat,indf2
  9920  002CE6  2A28               	incf	__display_found@cntr,f,c
  9921  002CE8                     l1585:
  9922  002CE8  5028               	movf	__display_found@cntr,w,c
  9923  002CEA  0D01               	mullw	1
  9924  002CEC  0E2C               	movlw	low _found_line4
  9925  002CEE  24F3               	addwf	prodl,w,c
  9926  002CF0  6EF6               	movwf	tblptrl,c
  9927  002CF2  0E8D               	movlw	high _found_line4
  9928  002CF4  20F4               	addwfc	prodh,w,c
  9929  002CF6  6EF7               	movwf	tblptrh,c
  9930  002CF8                     	if	1	;There are 3 active tblptr bytes
  9931  002CF8  6AF8               	clrf	tblptru,c
  9932  002CFA  0E00               	movlw	low (__mediumconst shr (0+16))
  9933  002CFC  22F8               	addwfc	tblptru,f,c
  9934  002CFE                     	endif
  9935  002CFE  0008               	tblrd		*
  9936  002D00  50F5               	movf	tablat,w,c
  9937  002D02  0900               	iorlw	0
  9938  002D04  B4D8               	btfsc	status,2,c
  9939  002D06  0012               	return	
  9940  002D08  D7D8               	goto	l1586
  9941  002D0A                     __end_of__display_found:
  9942                           	opt stack 0
  9943                           tblptru	equ	0xFF8
  9944                           tblptrh	equ	0xFF7
  9945                           tblptrl	equ	0xFF6
  9946                           tablat	equ	0xFF5
  9947                           prodh	equ	0xFF4
  9948                           prodl	equ	0xFF3
  9949                           intcon	equ	0xFF2
  9950                           intcon2	equ	0xFF1
  9951                           intcon3	equ	0xFF0
  9952                           postinc0	equ	0xFEE
  9953                           wreg	equ	0xFE8
  9954                           postdec1	equ	0xFE5
  9955                           plusw1	equ	0xFE3
  9956                           fsr1h	equ	0xFE2
  9957                           fsr1l	equ	0xFE1
  9958                           indf2	equ	0xFDF
  9959                           postinc2	equ	0xFDE
  9960                           plusw2	equ	0xFDB
  9961                           fsr2h	equ	0xFDA
  9962                           fsr2l	equ	0xFD9
  9963                           status	equ	0xFD8
  9964                           
  9965 ;; *************** function __display_failed *****************
  9966 ;; Defined at:
  9967 ;;		line 448 in file "display.c"
  9968 ;; Parameters:    Size  Location     Type
  9969 ;;		None
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  cntr            1   36[COMRAM] unsigned char 
  9972 ;;  start           1    0        unsigned char 
  9973 ;; Return value:  Size  Location     Type
  9974 ;;                  1    wreg      void 
  9975 ;; Registers used:
  9976 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  9977 ;; Tracked objects:
  9978 ;;		On entry : 0/0
  9979 ;;		On exit  : 0/0
  9980 ;;		Unchanged: 0/0
  9981 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
  9982 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9983 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9984 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9985 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
  9986 ;;Total ram usage:        1 bytes
  9987 ;; Hardware stack levels used:    1
  9988 ;; Hardware stack levels required when called:    5
  9989 ;; This function calls:
  9990 ;;		__display_itoa_u16
  9991 ;;		__display_itoa_u32
  9992 ;;		_bootloader_get_entries
  9993 ;;		_bootloader_get_error
  9994 ;;		_bootloader_get_rec_address
  9995 ;; This function is called by:
  9996 ;;		_display_prepare
  9997 ;; This function uses a non-reentrant model
  9998 ;;
  9999                           
 10000                           	psect	text39
 10001  000F36                     __ptext39:
 10002                           	opt stack 0
 10003  000F36                     __display_failed:
 10004                           	opt stack 24
 10005                           
 10006                           ;display.c: 450: uint8_t cntr;;display.c: 451: uint8_t start;;display.c: 452: cntr = 0;
 10007                           
 10008                           ;incstack = 0
 10009  000F36  0E00               	movlw	0
 10010  000F38  6E25               	movwf	__display_failed@cntr,c
 10011                           
 10012                           ;display.c: 453: while(failed_line1[cntr])
 10013  000F3A  D017               	goto	l1618
 10014  000F3C                     
 10015                           ;display.c: 454: display_content[0][cntr] = failed_line1[cntr++];
 10016  000F3C  5025               	movf	__display_failed@cntr,w,c
 10017  000F3E  0D01               	mullw	1
 10018  000F40  0EB0               	movlw	low _failed_line1
 10019  000F42  24F3               	addwf	prodl,w,c
 10020  000F44  6EF6               	movwf	tblptrl,c
 10021  000F46  0E8D               	movlw	high _failed_line1
 10022  000F48  20F4               	addwfc	prodh,w,c
 10023  000F4A  6EF7               	movwf	tblptrh,c
 10024  000F4C                     	if	1	;There are 3 active tblptr bytes
 10025  000F4C  6AF8               	clrf	tblptru,c
 10026  000F4E  0E00               	movlw	low (__mediumconst shr (0+16))
 10027  000F50  22F8               	addwfc	tblptru,f,c
 10028  000F52                     	endif
 10029  000F52  5025               	movf	__display_failed@cntr,w,c
 10030  000F54  0D01               	mullw	1
 10031  000F56  0E76               	movlw	low _display_content
 10032  000F58  24F3               	addwf	prodl,w,c
 10033  000F5A  6ED9               	movwf	fsr2l,c
 10034  000F5C  0E01               	movlw	high _display_content
 10035  000F5E  20F4               	addwfc	prodh,w,c
 10036  000F60  6EDA               	movwf	fsr2h,c
 10037  000F62  0008               	tblrd		*
 10038  000F64  CFF5 FFDF          	movff	tablat,indf2
 10039  000F68  2A25               	incf	__display_failed@cntr,f,c
 10040  000F6A                     l1618:
 10041  000F6A  5025               	movf	__display_failed@cntr,w,c
 10042  000F6C  0D01               	mullw	1
 10043  000F6E  0EB0               	movlw	low _failed_line1
 10044  000F70  24F3               	addwf	prodl,w,c
 10045  000F72  6EF6               	movwf	tblptrl,c
 10046  000F74  0E8D               	movlw	high _failed_line1
 10047  000F76  20F4               	addwfc	prodh,w,c
 10048  000F78  6EF7               	movwf	tblptrh,c
 10049  000F7A                     	if	1	;There are 3 active tblptr bytes
 10050  000F7A  6AF8               	clrf	tblptru,c
 10051  000F7C  0E00               	movlw	low (__mediumconst shr (0+16))
 10052  000F7E  22F8               	addwfc	tblptru,f,c
 10053  000F80                     	endif
 10054  000F80  0008               	tblrd		*
 10055  000F82  50F5               	movf	tablat,w,c
 10056  000F84  0900               	iorlw	0
 10057  000F86  A4D8               	btfss	status,2,c
 10058  000F88  D7D9               	goto	l1619
 10059                           
 10060                           ;display.c: 455: cntr = 0;
 10061  000F8A  0E00               	movlw	0
 10062  000F8C  6E25               	movwf	__display_failed@cntr,c
 10063                           
 10064                           ;display.c: 456: while(failed_line2[cntr])
 10065  000F8E  D017               	goto	l1621
 10066  000F90                     
 10067                           ;display.c: 457: display_content[1][cntr] = failed_line2[cntr++];
 10068  000F90  5025               	movf	__display_failed@cntr,w,c
 10069  000F92  0D01               	mullw	1
 10070  000F94  0E1A               	movlw	low _failed_line2
 10071  000F96  24F3               	addwf	prodl,w,c
 10072  000F98  6EF6               	movwf	tblptrl,c
 10073  000F9A  0E8D               	movlw	high _failed_line2
 10074  000F9C  20F4               	addwfc	prodh,w,c
 10075  000F9E  6EF7               	movwf	tblptrh,c
 10076  000FA0                     	if	1	;There are 3 active tblptr bytes
 10077  000FA0  6AF8               	clrf	tblptru,c
 10078  000FA2  0E00               	movlw	low (__mediumconst shr (0+16))
 10079  000FA4  22F8               	addwfc	tblptru,f,c
 10080  000FA6                     	endif
 10081  000FA6  5025               	movf	__display_failed@cntr,w,c
 10082  000FA8  0D01               	mullw	1
 10083  000FAA  0E8A               	movlw	low (_display_content+20)
 10084  000FAC  24F3               	addwf	prodl,w,c
 10085  000FAE  6ED9               	movwf	fsr2l,c
 10086  000FB0  0E01               	movlw	high (_display_content+20)
 10087  000FB2  20F4               	addwfc	prodh,w,c
 10088  000FB4  6EDA               	movwf	fsr2h,c
 10089  000FB6  0008               	tblrd		*
 10090  000FB8  CFF5 FFDF          	movff	tablat,indf2
 10091  000FBC  2A25               	incf	__display_failed@cntr,f,c
 10092  000FBE                     l1621:
 10093  000FBE  5025               	movf	__display_failed@cntr,w,c
 10094  000FC0  0D01               	mullw	1
 10095  000FC2  0E1A               	movlw	low _failed_line2
 10096  000FC4  24F3               	addwf	prodl,w,c
 10097  000FC6  6EF6               	movwf	tblptrl,c
 10098  000FC8  0E8D               	movlw	high _failed_line2
 10099  000FCA  20F4               	addwfc	prodh,w,c
 10100  000FCC  6EF7               	movwf	tblptrh,c
 10101  000FCE                     	if	1	;There are 3 active tblptr bytes
 10102  000FCE  6AF8               	clrf	tblptru,c
 10103  000FD0  0E00               	movlw	low (__mediumconst shr (0+16))
 10104  000FD2  22F8               	addwfc	tblptru,f,c
 10105  000FD4                     	endif
 10106  000FD4  0008               	tblrd		*
 10107  000FD6  50F5               	movf	tablat,w,c
 10108  000FD8  0900               	iorlw	0
 10109  000FDA  A4D8               	btfss	status,2,c
 10110  000FDC  D7D9               	goto	l1622
 10111                           
 10112                           ;display.c: 459: cntr = 0;
 10113  000FDE  0E00               	movlw	0
 10114  000FE0  6E25               	movwf	__display_failed@cntr,c
 10115                           
 10116                           ;display.c: 460: switch(bootloader_get_error())
 10117  000FE2  D0D6               	goto	l1624
 10118  000FE4                     
 10119                           ;display.c: 464: display_content[2][cntr] = failed_line3_startCode[cntr++];
 10120  000FE4  5025               	movf	__display_failed@cntr,w,c
 10121  000FE6  0D01               	mullw	1
 10122  000FE8  0EE2               	movlw	low _failed_line3_startCode
 10123  000FEA  24F3               	addwf	prodl,w,c
 10124  000FEC  6EF6               	movwf	tblptrl,c
 10125  000FEE  0E8C               	movlw	high _failed_line3_startCode
 10126  000FF0  20F4               	addwfc	prodh,w,c
 10127  000FF2  6EF7               	movwf	tblptrh,c
 10128  000FF4                     	if	1	;There are 3 active tblptr bytes
 10129  000FF4  6AF8               	clrf	tblptru,c
 10130  000FF6  0E00               	movlw	low (__mediumconst shr (0+16))
 10131  000FF8  22F8               	addwfc	tblptru,f,c
 10132  000FFA                     	endif
 10133  000FFA  5025               	movf	__display_failed@cntr,w,c
 10134  000FFC  0D01               	mullw	1
 10135  000FFE  0E9E               	movlw	low (_display_content+40)
 10136  001000  24F3               	addwf	prodl,w,c
 10137  001002  6ED9               	movwf	fsr2l,c
 10138  001004  0E01               	movlw	high (_display_content+40)
 10139  001006  20F4               	addwfc	prodh,w,c
 10140  001008  6EDA               	movwf	fsr2h,c
 10141  00100A  0008               	tblrd		*
 10142  00100C  CFF5 FFDF          	movff	tablat,indf2
 10143  001010  2A25               	incf	__display_failed@cntr,f,c
 10144  001012  5025               	movf	__display_failed@cntr,w,c
 10145  001014  0D01               	mullw	1
 10146  001016  0EE2               	movlw	low _failed_line3_startCode
 10147  001018  24F3               	addwf	prodl,w,c
 10148  00101A  6EF6               	movwf	tblptrl,c
 10149  00101C  0E8C               	movlw	high _failed_line3_startCode
 10150  00101E  20F4               	addwfc	prodh,w,c
 10151  001020  6EF7               	movwf	tblptrh,c
 10152  001022                     	if	1	;There are 3 active tblptr bytes
 10153  001022  6AF8               	clrf	tblptru,c
 10154  001024  0E00               	movlw	low (__mediumconst shr (0+16))
 10155  001026  22F8               	addwfc	tblptru,f,c
 10156  001028                     	endif
 10157  001028  0008               	tblrd		*
 10158  00102A  50F5               	movf	tablat,w,c
 10159  00102C  0900               	iorlw	0
 10160  00102E  B4D8               	btfsc	status,2,c
 10161  001030  D0C0               	goto	l1629
 10162  001032  D7D8               	goto	l1627
 10163  001034                     
 10164                           ;display.c: 469: display_content[2][cntr] = failed_line3_checksum[cntr++];
 10165  001034  5025               	movf	__display_failed@cntr,w,c
 10166  001036  0D01               	mullw	1
 10167  001038  0E10               	movlw	low _failed_line3_checksum
 10168  00103A  24F3               	addwf	prodl,w,c
 10169  00103C  6EF6               	movwf	tblptrl,c
 10170  00103E  0E8E               	movlw	high _failed_line3_checksum
 10171  001040  20F4               	addwfc	prodh,w,c
 10172  001042  6EF7               	movwf	tblptrh,c
 10173  001044                     	if	1	;There are 3 active tblptr bytes
 10174  001044  6AF8               	clrf	tblptru,c
 10175  001046  0E00               	movlw	low (__mediumconst shr (0+16))
 10176  001048  22F8               	addwfc	tblptru,f,c
 10177  00104A                     	endif
 10178  00104A  5025               	movf	__display_failed@cntr,w,c
 10179  00104C  0D01               	mullw	1
 10180  00104E  0E9E               	movlw	low (_display_content+40)
 10181  001050  24F3               	addwf	prodl,w,c
 10182  001052  6ED9               	movwf	fsr2l,c
 10183  001054  0E01               	movlw	high (_display_content+40)
 10184  001056  20F4               	addwfc	prodh,w,c
 10185  001058  6EDA               	movwf	fsr2h,c
 10186  00105A  0008               	tblrd		*
 10187  00105C  CFF5 FFDF          	movff	tablat,indf2
 10188  001060  2A25               	incf	__display_failed@cntr,f,c
 10189  001062  5025               	movf	__display_failed@cntr,w,c
 10190  001064  0D01               	mullw	1
 10191  001066  0E10               	movlw	low _failed_line3_checksum
 10192  001068  24F3               	addwf	prodl,w,c
 10193  00106A  6EF6               	movwf	tblptrl,c
 10194  00106C  0E8E               	movlw	high _failed_line3_checksum
 10195  00106E  20F4               	addwfc	prodh,w,c
 10196  001070  6EF7               	movwf	tblptrh,c
 10197  001072                     	if	1	;There are 3 active tblptr bytes
 10198  001072  6AF8               	clrf	tblptru,c
 10199  001074  0E00               	movlw	low (__mediumconst shr (0+16))
 10200  001076  22F8               	addwfc	tblptru,f,c
 10201  001078                     	endif
 10202  001078  0008               	tblrd		*
 10203  00107A  50F5               	movf	tablat,w,c
 10204  00107C  0900               	iorlw	0
 10205  00107E  B4D8               	btfsc	status,2,c
 10206  001080  D098               	goto	l1629
 10207  001082  D7D8               	goto	l1632
 10208  001084                     
 10209                           ;display.c: 476: display_content[2][cntr] = failed_line3_noNextRecord[cntr++];
 10210  001084  5025               	movf	__display_failed@cntr,w,c
 10211  001086  0D01               	mullw	1
 10212  001088  0E1F               	movlw	low _failed_line3_noNextRecord
 10213  00108A  24F3               	addwf	prodl,w,c
 10214  00108C  6EF6               	movwf	tblptrl,c
 10215  00108E  0E8E               	movlw	high _failed_line3_noNextRecord
 10216  001090  20F4               	addwfc	prodh,w,c
 10217  001092  6EF7               	movwf	tblptrh,c
 10218  001094                     	if	1	;There are 3 active tblptr bytes
 10219  001094  6AF8               	clrf	tblptru,c
 10220  001096  0E00               	movlw	low (__mediumconst shr (0+16))
 10221  001098  22F8               	addwfc	tblptru,f,c
 10222  00109A                     	endif
 10223  00109A  5025               	movf	__display_failed@cntr,w,c
 10224  00109C  0D01               	mullw	1
 10225  00109E  0E9E               	movlw	low (_display_content+40)
 10226  0010A0  24F3               	addwf	prodl,w,c
 10227  0010A2  6ED9               	movwf	fsr2l,c
 10228  0010A4  0E01               	movlw	high (_display_content+40)
 10229  0010A6  20F4               	addwfc	prodh,w,c
 10230  0010A8  6EDA               	movwf	fsr2h,c
 10231  0010AA  0008               	tblrd		*
 10232  0010AC  CFF5 FFDF          	movff	tablat,indf2
 10233  0010B0  2A25               	incf	__display_failed@cntr,f,c
 10234  0010B2  5025               	movf	__display_failed@cntr,w,c
 10235  0010B4  0D01               	mullw	1
 10236  0010B6  0E1F               	movlw	low _failed_line3_noNextRecord
 10237  0010B8  24F3               	addwf	prodl,w,c
 10238  0010BA  6EF6               	movwf	tblptrl,c
 10239  0010BC  0E8E               	movlw	high _failed_line3_noNextRecord
 10240  0010BE  20F4               	addwfc	prodh,w,c
 10241  0010C0  6EF7               	movwf	tblptrh,c
 10242  0010C2                     	if	1	;There are 3 active tblptr bytes
 10243  0010C2  6AF8               	clrf	tblptru,c
 10244  0010C4  0E00               	movlw	low (__mediumconst shr (0+16))
 10245  0010C6  22F8               	addwfc	tblptru,f,c
 10246  0010C8                     	endif
 10247  0010C8  0008               	tblrd		*
 10248  0010CA  50F5               	movf	tablat,w,c
 10249  0010CC  0900               	iorlw	0
 10250  0010CE  B4D8               	btfsc	status,2,c
 10251  0010D0  D070               	goto	l1629
 10252  0010D2  D7D8               	goto	l1636
 10253  0010D4                     
 10254                           ;display.c: 481: display_content[2][cntr] = failed_line3_dataTooLong[cntr++];
 10255  0010D4  5025               	movf	__display_failed@cntr,w,c
 10256  0010D6  0D01               	mullw	1
 10257  0010D8  0E3D               	movlw	low _failed_line3_dataTooLong
 10258  0010DA  24F3               	addwf	prodl,w,c
 10259  0010DC  6EF6               	movwf	tblptrl,c
 10260  0010DE  0E8E               	movlw	high _failed_line3_dataTooLong
 10261  0010E0  20F4               	addwfc	prodh,w,c
 10262  0010E2  6EF7               	movwf	tblptrh,c
 10263  0010E4                     	if	1	;There are 3 active tblptr bytes
 10264  0010E4  6AF8               	clrf	tblptru,c
 10265  0010E6  0E00               	movlw	low (__mediumconst shr (0+16))
 10266  0010E8  22F8               	addwfc	tblptru,f,c
 10267  0010EA                     	endif
 10268  0010EA  5025               	movf	__display_failed@cntr,w,c
 10269  0010EC  0D01               	mullw	1
 10270  0010EE  0E9E               	movlw	low (_display_content+40)
 10271  0010F0  24F3               	addwf	prodl,w,c
 10272  0010F2  6ED9               	movwf	fsr2l,c
 10273  0010F4  0E01               	movlw	high (_display_content+40)
 10274  0010F6  20F4               	addwfc	prodh,w,c
 10275  0010F8  6EDA               	movwf	fsr2h,c
 10276  0010FA  0008               	tblrd		*
 10277  0010FC  CFF5 FFDF          	movff	tablat,indf2
 10278  001100  2A25               	incf	__display_failed@cntr,f,c
 10279  001102  5025               	movf	__display_failed@cntr,w,c
 10280  001104  0D01               	mullw	1
 10281  001106  0E3D               	movlw	low _failed_line3_dataTooLong
 10282  001108  24F3               	addwf	prodl,w,c
 10283  00110A  6EF6               	movwf	tblptrl,c
 10284  00110C  0E8E               	movlw	high _failed_line3_dataTooLong
 10285  00110E  20F4               	addwfc	prodh,w,c
 10286  001110  6EF7               	movwf	tblptrh,c
 10287  001112                     	if	1	;There are 3 active tblptr bytes
 10288  001112  6AF8               	clrf	tblptru,c
 10289  001114  0E00               	movlw	low (__mediumconst shr (0+16))
 10290  001116  22F8               	addwfc	tblptru,f,c
 10291  001118                     	endif
 10292  001118  0008               	tblrd		*
 10293  00111A  50F5               	movf	tablat,w,c
 10294  00111C  0900               	iorlw	0
 10295  00111E  B4D8               	btfsc	status,2,c
 10296  001120  D048               	goto	l1629
 10297  001122  D7D8               	goto	l1640
 10298  001124                     
 10299                           ;display.c: 486: display_content[2][cntr] = failed_line3_addressRange[cntr++];
 10300  001124  5025               	movf	__display_failed@cntr,w,c
 10301  001126  0D01               	mullw	1
 10302  001128  0EBA               	movlw	low _failed_line3_addressRange
 10303  00112A  24F3               	addwf	prodl,w,c
 10304  00112C  6EF6               	movwf	tblptrl,c
 10305  00112E  0E8C               	movlw	high _failed_line3_addressRange
 10306  001130  20F4               	addwfc	prodh,w,c
 10307  001132  6EF7               	movwf	tblptrh,c
 10308  001134                     	if	1	;There are 3 active tblptr bytes
 10309  001134  6AF8               	clrf	tblptru,c
 10310  001136  0E00               	movlw	low (__mediumconst shr (0+16))
 10311  001138  22F8               	addwfc	tblptru,f,c
 10312  00113A                     	endif
 10313  00113A  5025               	movf	__display_failed@cntr,w,c
 10314  00113C  0D01               	mullw	1
 10315  00113E  0E9E               	movlw	low (_display_content+40)
 10316  001140  24F3               	addwf	prodl,w,c
 10317  001142  6ED9               	movwf	fsr2l,c
 10318  001144  0E01               	movlw	high (_display_content+40)
 10319  001146  20F4               	addwfc	prodh,w,c
 10320  001148  6EDA               	movwf	fsr2h,c
 10321  00114A  0008               	tblrd		*
 10322  00114C  CFF5 FFDF          	movff	tablat,indf2
 10323  001150  2A25               	incf	__display_failed@cntr,f,c
 10324  001152  5025               	movf	__display_failed@cntr,w,c
 10325  001154  0D01               	mullw	1
 10326  001156  0EBA               	movlw	low _failed_line3_addressRange
 10327  001158  24F3               	addwf	prodl,w,c
 10328  00115A  6EF6               	movwf	tblptrl,c
 10329  00115C  0E8C               	movlw	high _failed_line3_addressRange
 10330  00115E  20F4               	addwfc	prodh,w,c
 10331  001160  6EF7               	movwf	tblptrh,c
 10332  001162                     	if	1	;There are 3 active tblptr bytes
 10333  001162  6AF8               	clrf	tblptru,c
 10334  001164  0E00               	movlw	low (__mediumconst shr (0+16))
 10335  001166  22F8               	addwfc	tblptru,f,c
 10336  001168                     	endif
 10337  001168  0008               	tblrd		*
 10338  00116A  50F5               	movf	tablat,w,c
 10339  00116C  0900               	iorlw	0
 10340  00116E  A4D8               	btfss	status,2,c
 10341  001170  D7D9               	goto	l1644
 10342                           
 10343                           ;display.c: 487: _display_itoa_u32(bootloader_get_rec_address(), &display_content[3][14]
      +                          );
 10344  001172  ECEA  F03F         	call	_bootloader_get_rec_address	;wreg free
 10345  001176  C001  F01F         	movff	?_bootloader_get_rec_address,__display_itoa_u32@value
 10346  00117A  C002  F020         	movff	?_bootloader_get_rec_address+1,__display_itoa_u32@value+1
 10347  00117E  6A21               	clrf	__display_itoa_u32@value+2,c
 10348  001180  6A22               	clrf	__display_itoa_u32@value+3,c
 10349  001182  0EC0               	movlw	low (_display_content+74)
 10350  001184  6E23               	movwf	__display_itoa_u32@text,c
 10351  001186  0E01               	movlw	high (_display_content+74)
 10352  001188  6E24               	movwf	__display_itoa_u32@text+1,c
 10353  00118A  EC2D  F004         	call	__display_itoa_u32	;wreg free
 10354                           
 10355                           ;display.c: 490: }
 10356                           
 10357                           ;display.c: 488: break;
 10358  00118E  D011               	goto	l1629
 10359  001190                     l1624:
 10360  001190  EC20  F040         	call	_bootloader_get_error	;wreg free
 10361                           
 10362                           ; Switch size 1, requested type "space"
 10363                           ; Number of cases is 5, Range of values is 11 to 15
 10364                           ; switch strategies available:
 10365                           ; Name         Instructions Cycles
 10366                           ; simple_byte           16     9 (average)
 10367                           ;	Chosen strategy is simple_byte
 10368  001194  0A0B               	xorlw	11	; case 11
 10369  001196  B4D8               	btfsc	status,2,c
 10370  001198  D7DC               	goto	l1643
 10371  00119A  0A07               	xorlw	7	; case 12
 10372  00119C  B4D8               	btfsc	status,2,c
 10373  00119E  D7B1               	goto	l1639
 10374  0011A0  0A01               	xorlw	1	; case 13
 10375  0011A2  B4D8               	btfsc	status,2,c
 10376  0011A4  D786               	goto	l1635
 10377  0011A6  0A03               	xorlw	3	; case 14
 10378  0011A8  B4D8               	btfsc	status,2,c
 10379  0011AA  D75B               	goto	l1631
 10380  0011AC  0A01               	xorlw	1	; case 15
 10381  0011AE  B4D8               	btfsc	status,2,c
 10382  0011B0  D730               	goto	l1626
 10383  0011B2                     l1629:
 10384                           
 10385                           ;display.c: 492: cntr = 0;
 10386  0011B2  0E00               	movlw	0
 10387  0011B4  6E25               	movwf	__display_failed@cntr,c
 10388                           
 10389                           ;display.c: 493: while(failed_line4[cntr])
 10390  0011B6  D017               	goto	l1646
 10391  0011B8                     
 10392                           ;display.c: 494: display_content[3][cntr] = failed_line4[cntr++];
 10393  0011B8  5025               	movf	__display_failed@cntr,w,c
 10394  0011BA  0D01               	mullw	1
 10395  0011BC  0E6A               	movlw	low _failed_line4
 10396  0011BE  24F3               	addwf	prodl,w,c
 10397  0011C0  6EF6               	movwf	tblptrl,c
 10398  0011C2  0E8E               	movlw	high _failed_line4
 10399  0011C4  20F4               	addwfc	prodh,w,c
 10400  0011C6  6EF7               	movwf	tblptrh,c
 10401  0011C8                     	if	1	;There are 3 active tblptr bytes
 10402  0011C8  6AF8               	clrf	tblptru,c
 10403  0011CA  0E00               	movlw	low (__mediumconst shr (0+16))
 10404  0011CC  22F8               	addwfc	tblptru,f,c
 10405  0011CE                     	endif
 10406  0011CE  5025               	movf	__display_failed@cntr,w,c
 10407  0011D0  0D01               	mullw	1
 10408  0011D2  0EB2               	movlw	low (_display_content+60)
 10409  0011D4  24F3               	addwf	prodl,w,c
 10410  0011D6  6ED9               	movwf	fsr2l,c
 10411  0011D8  0E01               	movlw	high (_display_content+60)
 10412  0011DA  20F4               	addwfc	prodh,w,c
 10413  0011DC  6EDA               	movwf	fsr2h,c
 10414  0011DE  0008               	tblrd		*
 10415  0011E0  CFF5 FFDF          	movff	tablat,indf2
 10416  0011E4  2A25               	incf	__display_failed@cntr,f,c
 10417  0011E6                     l1646:
 10418  0011E6  5025               	movf	__display_failed@cntr,w,c
 10419  0011E8  0D01               	mullw	1
 10420  0011EA  0E6A               	movlw	low _failed_line4
 10421  0011EC  24F3               	addwf	prodl,w,c
 10422  0011EE  6EF6               	movwf	tblptrl,c
 10423  0011F0  0E8E               	movlw	high _failed_line4
 10424  0011F2  20F4               	addwfc	prodh,w,c
 10425  0011F4  6EF7               	movwf	tblptrh,c
 10426  0011F6                     	if	1	;There are 3 active tblptr bytes
 10427  0011F6  6AF8               	clrf	tblptru,c
 10428  0011F8  0E00               	movlw	low (__mediumconst shr (0+16))
 10429  0011FA  22F8               	addwfc	tblptru,f,c
 10430  0011FC                     	endif
 10431  0011FC  0008               	tblrd		*
 10432  0011FE  50F5               	movf	tablat,w,c
 10433  001200  0900               	iorlw	0
 10434  001202  A4D8               	btfss	status,2,c
 10435  001204  D7D9               	goto	l1647
 10436                           
 10437                           ;display.c: 495: _display_itoa_u16(bootloader_get_entries(), &display_content[3][cntr]);
 10438  001206  ECF4  F03F         	call	_bootloader_get_entries	;wreg free
 10439  00120A  C001  F019         	movff	?_bootloader_get_entries,__display_itoa_u16@value
 10440  00120E  C002  F01A         	movff	?_bootloader_get_entries+1,__display_itoa_u16@value+1
 10441  001212  6A1B               	clrf	__display_itoa_u16@value+2,c
 10442  001214  6A1C               	clrf	__display_itoa_u16@value+3,c
 10443  001216  5025               	movf	__display_failed@cntr,w,c
 10444  001218  0D01               	mullw	1
 10445  00121A  0EB2               	movlw	low (_display_content+60)
 10446  00121C  24F3               	addwf	prodl,w,c
 10447  00121E  6E1D               	movwf	__display_itoa_u16@text,c
 10448  001220  0E01               	movlw	high (_display_content+60)
 10449  001222  20F4               	addwfc	prodh,w,c
 10450  001224  6E1E               	movwf	__display_itoa_u16@text+1,c
 10451  001226  EC4B  F029         	call	__display_itoa_u16	;wreg free
 10452  00122A  0012               	return		;funcret
 10453  00122C                     __end_of__display_failed:
 10454                           	opt stack 0
 10455                           tblptru	equ	0xFF8
 10456                           tblptrh	equ	0xFF7
 10457                           tblptrl	equ	0xFF6
 10458                           tablat	equ	0xFF5
 10459                           prodh	equ	0xFF4
 10460                           prodl	equ	0xFF3
 10461                           intcon	equ	0xFF2
 10462                           intcon2	equ	0xFF1
 10463                           intcon3	equ	0xFF0
 10464                           postinc0	equ	0xFEE
 10465                           wreg	equ	0xFE8
 10466                           postdec1	equ	0xFE5
 10467                           plusw1	equ	0xFE3
 10468                           fsr1h	equ	0xFE2
 10469                           fsr1l	equ	0xFE1
 10470                           indf2	equ	0xFDF
 10471                           postinc2	equ	0xFDE
 10472                           plusw2	equ	0xFDB
 10473                           fsr2h	equ	0xFDA
 10474                           fsr2l	equ	0xFD9
 10475                           status	equ	0xFD8
 10476                           
 10477 ;; *************** function __display_itoa_u32 *****************
 10478 ;; Defined at:
 10479 ;;		line 169 in file "display.c"
 10480 ;; Parameters:    Size  Location     Type
 10481 ;;  value           4   30[COMRAM] unsigned long 
 10482 ;;  text            2   34[COMRAM] PTR unsigned char 
 10483 ;;		 -> display_content(80), 
 10484 ;; Auto vars:     Size  Location     Type
 10485 ;;		None
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  1    wreg      unsigned char 
 10488 ;; Registers used:
 10489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10495 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10496 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10498 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10499 ;;Total ram usage:        6 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    4
 10502 ;; This function calls:
 10503 ;;		___lldiv
 10504 ;;		___llmod
 10505 ;;		__display_itoa_u16
 10506 ;;		_itoa
 10507 ;; This function is called by:
 10508 ;;		__display_start
 10509 ;;		__display_found
 10510 ;;		__display_failed
 10511 ;; This function uses a non-reentrant model
 10512 ;;
 10513                           
 10514                           	psect	text40
 10515  00085A                     __ptext40:
 10516                           	opt stack 0
 10517  00085A                     __display_itoa_u32:
 10518                           	opt stack 24
 10519                           
 10520                           ;display.c: 172: if(value<=0x7FFF)
 10521                           
 10522                           ;incstack = 0
 10523  00085A  5022               	movf	__display_itoa_u32@value+3,w,c
 10524  00085C  1021               	iorwf	__display_itoa_u32@value+2,w,c
 10525  00085E  E111               	bnz	l12643
 10526  000860  0E80               	movlw	128
 10527  000862  5C20               	subwf	__display_itoa_u32@value+1,w,c
 10528  000864  B0D8               	btfsc	status,0,c
 10529  000866  D00D               	goto	l1490
 10530                           
 10531                           ;display.c: 173: {;display.c: 174: return _display_itoa_u16((uint16_t) value, text);
 10532  000868  C01F  F019         	movff	__display_itoa_u32@value,__display_itoa_u16@value
 10533  00086C  C020  F01A         	movff	__display_itoa_u32@value+1,__display_itoa_u16@value+1
 10534  000870  6A1B               	clrf	__display_itoa_u16@value+2,c
 10535  000872  6A1C               	clrf	__display_itoa_u16@value+3,c
 10536  000874  C023  F01D         	movff	__display_itoa_u32@text,__display_itoa_u16@text
 10537  000878  C024  F01E         	movff	__display_itoa_u32@text+1,__display_itoa_u16@text+1
 10538  00087C  EC4B  F029         	call	__display_itoa_u16	;wreg free
 10539  000880  0012               	return	
 10540  000882                     l1490:
 10541  000882                     l12643:
 10542                           
 10543                           ;display.c: 175: };display.c: 178: if(value>100000000)
 10544  000882  041F               	decf	__display_itoa_u32@value,w,c
 10545  000884  0EE1               	movlw	225
 10546  000886  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10547  000888  0EF5               	movlw	245
 10548  00088A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10549  00088C  0E05               	movlw	5
 10550  00088E  5822               	subwfb	__display_itoa_u32@value+3,w,c
 10551  000890  A0D8               	btfss	status,0,c
 10552  000892  D04C               	goto	l1492
 10553                           
 10554                           ;display.c: 179: {;display.c: 180: itoa(text, (uint16_t)(value/10000), 10);
 10555  000894  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10556  000898  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10557  00089C  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10558  0008A0  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10559  0008A4  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10560  0008A8  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10561  0008AC  0E10               	movlw	16
 10562  0008AE  6E05               	movwf	___lldiv@divisor,c
 10563  0008B0  0E27               	movlw	39
 10564  0008B2  6E06               	movwf	___lldiv@divisor+1,c
 10565  0008B4  0E00               	movlw	0
 10566  0008B6  6E07               	movwf	___lldiv@divisor+2,c
 10567  0008B8  0E00               	movlw	0
 10568  0008BA  6E08               	movwf	___lldiv@divisor+3,c
 10569  0008BC  EC45  F032         	call	___lldiv	;wreg free
 10570  0008C0  C001  F013         	movff	?___lldiv,itoa@val
 10571  0008C4  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10572  0008C8  0E00               	movlw	0
 10573  0008CA  6E16               	movwf	itoa@base+1,c
 10574  0008CC  0E0A               	movlw	10
 10575  0008CE  6E15               	movwf	itoa@base,c
 10576  0008D0  EC47  F03B         	call	_itoa	;wreg free
 10577                           
 10578                           ;display.c: 181: itoa(text+5, (uint16_t)(value%10000), 10);
 10579  0008D4  0E05               	movlw	5
 10580  0008D6  2423               	addwf	__display_itoa_u32@text,w,c
 10581  0008D8  6E11               	movwf	itoa@buf,c
 10582  0008DA  0E00               	movlw	0
 10583  0008DC  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10584  0008DE  6E12               	movwf	itoa@buf+1,c
 10585  0008E0  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10586  0008E4  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10587  0008E8  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10588  0008EC  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10589  0008F0  0E10               	movlw	16
 10590  0008F2  6E05               	movwf	___llmod@divisor,c
 10591  0008F4  0E27               	movlw	39
 10592  0008F6  6E06               	movwf	___llmod@divisor+1,c
 10593  0008F8  0E00               	movlw	0
 10594  0008FA  6E07               	movwf	___llmod@divisor+2,c
 10595  0008FC  0E00               	movlw	0
 10596  0008FE  6E08               	movwf	___llmod@divisor+3,c
 10597  000900  EC8B  F036         	call	___llmod	;wreg free
 10598  000904  C001  F013         	movff	?___llmod,itoa@val
 10599  000908  C002  F014         	movff	?___llmod+1,itoa@val+1
 10600  00090C  0E00               	movlw	0
 10601  00090E  6E16               	movwf	itoa@base+1,c
 10602  000910  0E0A               	movlw	10
 10603  000912  6E15               	movwf	itoa@base,c
 10604  000914  EC47  F03B         	call	_itoa	;wreg free
 10605                           
 10606                           ;display.c: 182: *(text+9) = ' ';
 10607  000918  EE20 F009          	lfsr	2,9
 10608  00091C  5023               	movf	__display_itoa_u32@text,w,c
 10609  00091E  26D9               	addwf	fsr2l,f,c
 10610  000920  5024               	movf	__display_itoa_u32@text+1,w,c
 10611  000922  22DA               	addwfc	fsr2h,f,c
 10612  000924  0E20               	movlw	32
 10613  000926  6EDF               	movwf	indf2,c
 10614                           
 10615                           ;display.c: 183: return 9;
 10616  000928  0E09               	movlw	9
 10617                           
 10618                           ;display.c: 184: }
 10619  00092A  0012               	return	
 10620  00092C                     l1492:
 10621                           
 10622                           ;display.c: 185: else if(value>10000000)
 10623  00092C  5022               	movf	__display_itoa_u32@value+3,w,c
 10624  00092E  E108               	bnz	u9600
 10625  000930  0E81               	movlw	129
 10626  000932  5C1F               	subwf	__display_itoa_u32@value,w,c
 10627  000934  0E96               	movlw	150
 10628  000936  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10629  000938  0E98               	movlw	152
 10630  00093A  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10631  00093C  A0D8               	btfss	status,0,c
 10632  00093E  D04C               	goto	l1494
 10633  000940                     u9600:
 10634                           
 10635                           ;display.c: 186: {;display.c: 187: itoa(text, (uint16_t)(value/10000), 10);
 10636  000940  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10637  000944  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10638  000948  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10639  00094C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10640  000950  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10641  000954  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10642  000958  0E10               	movlw	16
 10643  00095A  6E05               	movwf	___lldiv@divisor,c
 10644  00095C  0E27               	movlw	39
 10645  00095E  6E06               	movwf	___lldiv@divisor+1,c
 10646  000960  0E00               	movlw	0
 10647  000962  6E07               	movwf	___lldiv@divisor+2,c
 10648  000964  0E00               	movlw	0
 10649  000966  6E08               	movwf	___lldiv@divisor+3,c
 10650  000968  EC45  F032         	call	___lldiv	;wreg free
 10651  00096C  C001  F013         	movff	?___lldiv,itoa@val
 10652  000970  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10653  000974  0E00               	movlw	0
 10654  000976  6E16               	movwf	itoa@base+1,c
 10655  000978  0E0A               	movlw	10
 10656  00097A  6E15               	movwf	itoa@base,c
 10657  00097C  EC47  F03B         	call	_itoa	;wreg free
 10658                           
 10659                           ;display.c: 188: itoa(text+4, (uint16_t)(value%10000), 10);
 10660  000980  0E04               	movlw	4
 10661  000982  2423               	addwf	__display_itoa_u32@text,w,c
 10662  000984  6E11               	movwf	itoa@buf,c
 10663  000986  0E00               	movlw	0
 10664  000988  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10665  00098A  6E12               	movwf	itoa@buf+1,c
 10666  00098C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10667  000990  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10668  000994  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10669  000998  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10670  00099C  0E10               	movlw	16
 10671  00099E  6E05               	movwf	___llmod@divisor,c
 10672  0009A0  0E27               	movlw	39
 10673  0009A2  6E06               	movwf	___llmod@divisor+1,c
 10674  0009A4  0E00               	movlw	0
 10675  0009A6  6E07               	movwf	___llmod@divisor+2,c
 10676  0009A8  0E00               	movlw	0
 10677  0009AA  6E08               	movwf	___llmod@divisor+3,c
 10678  0009AC  EC8B  F036         	call	___llmod	;wreg free
 10679  0009B0  C001  F013         	movff	?___llmod,itoa@val
 10680  0009B4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10681  0009B8  0E00               	movlw	0
 10682  0009BA  6E16               	movwf	itoa@base+1,c
 10683  0009BC  0E0A               	movlw	10
 10684  0009BE  6E15               	movwf	itoa@base,c
 10685  0009C0  EC47  F03B         	call	_itoa	;wreg free
 10686                           
 10687                           ;display.c: 189: *(text+8) = ' ';
 10688  0009C4  EE20 F008          	lfsr	2,8
 10689  0009C8  5023               	movf	__display_itoa_u32@text,w,c
 10690  0009CA  26D9               	addwf	fsr2l,f,c
 10691  0009CC  5024               	movf	__display_itoa_u32@text+1,w,c
 10692  0009CE  22DA               	addwfc	fsr2h,f,c
 10693  0009D0  0E20               	movlw	32
 10694  0009D2  6EDF               	movwf	indf2,c
 10695                           
 10696                           ;display.c: 190: return 8;
 10697  0009D4  0E08               	movlw	8
 10698                           
 10699                           ;display.c: 191: }
 10700  0009D6  0012               	return	
 10701  0009D8                     l1494:
 10702                           
 10703                           ;display.c: 192: else if(value>1000000)
 10704  0009D8  5022               	movf	__display_itoa_u32@value+3,w,c
 10705  0009DA  E108               	bnz	u9610
 10706  0009DC  0E41               	movlw	65
 10707  0009DE  5C1F               	subwf	__display_itoa_u32@value,w,c
 10708  0009E0  0E42               	movlw	66
 10709  0009E2  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10710  0009E4  0E0F               	movlw	15
 10711  0009E6  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10712  0009E8  A0D8               	btfss	status,0,c
 10713  0009EA  D04C               	goto	l1496
 10714  0009EC                     u9610:
 10715                           
 10716                           ;display.c: 193: {;display.c: 194: itoa(text, (uint16_t)(value/10000), 10);
 10717  0009EC  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10718  0009F0  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10719  0009F4  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10720  0009F8  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10721  0009FC  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10722  000A00  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10723  000A04  0E10               	movlw	16
 10724  000A06  6E05               	movwf	___lldiv@divisor,c
 10725  000A08  0E27               	movlw	39
 10726  000A0A  6E06               	movwf	___lldiv@divisor+1,c
 10727  000A0C  0E00               	movlw	0
 10728  000A0E  6E07               	movwf	___lldiv@divisor+2,c
 10729  000A10  0E00               	movlw	0
 10730  000A12  6E08               	movwf	___lldiv@divisor+3,c
 10731  000A14  EC45  F032         	call	___lldiv	;wreg free
 10732  000A18  C001  F013         	movff	?___lldiv,itoa@val
 10733  000A1C  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10734  000A20  0E00               	movlw	0
 10735  000A22  6E16               	movwf	itoa@base+1,c
 10736  000A24  0E0A               	movlw	10
 10737  000A26  6E15               	movwf	itoa@base,c
 10738  000A28  EC47  F03B         	call	_itoa	;wreg free
 10739                           
 10740                           ;display.c: 195: itoa(text+3, (uint16_t)(value%10000), 10);
 10741  000A2C  0E03               	movlw	3
 10742  000A2E  2423               	addwf	__display_itoa_u32@text,w,c
 10743  000A30  6E11               	movwf	itoa@buf,c
 10744  000A32  0E00               	movlw	0
 10745  000A34  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10746  000A36  6E12               	movwf	itoa@buf+1,c
 10747  000A38  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10748  000A3C  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10749  000A40  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10750  000A44  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10751  000A48  0E10               	movlw	16
 10752  000A4A  6E05               	movwf	___llmod@divisor,c
 10753  000A4C  0E27               	movlw	39
 10754  000A4E  6E06               	movwf	___llmod@divisor+1,c
 10755  000A50  0E00               	movlw	0
 10756  000A52  6E07               	movwf	___llmod@divisor+2,c
 10757  000A54  0E00               	movlw	0
 10758  000A56  6E08               	movwf	___llmod@divisor+3,c
 10759  000A58  EC8B  F036         	call	___llmod	;wreg free
 10760  000A5C  C001  F013         	movff	?___llmod,itoa@val
 10761  000A60  C002  F014         	movff	?___llmod+1,itoa@val+1
 10762  000A64  0E00               	movlw	0
 10763  000A66  6E16               	movwf	itoa@base+1,c
 10764  000A68  0E0A               	movlw	10
 10765  000A6A  6E15               	movwf	itoa@base,c
 10766  000A6C  EC47  F03B         	call	_itoa	;wreg free
 10767                           
 10768                           ;display.c: 196: *(text+7) = ' ';
 10769  000A70  EE20 F007          	lfsr	2,7
 10770  000A74  5023               	movf	__display_itoa_u32@text,w,c
 10771  000A76  26D9               	addwf	fsr2l,f,c
 10772  000A78  5024               	movf	__display_itoa_u32@text+1,w,c
 10773  000A7A  22DA               	addwfc	fsr2h,f,c
 10774  000A7C  0E20               	movlw	32
 10775  000A7E  6EDF               	movwf	indf2,c
 10776                           
 10777                           ;display.c: 197: return 7;
 10778  000A80  0E07               	movlw	7
 10779                           
 10780                           ;display.c: 198: }
 10781  000A82  0012               	return	
 10782  000A84                     l1496:
 10783                           
 10784                           ;display.c: 199: else if(value>100000)
 10785  000A84  5022               	movf	__display_itoa_u32@value+3,w,c
 10786  000A86  E108               	bnz	u9620
 10787  000A88  0EA1               	movlw	161
 10788  000A8A  5C1F               	subwf	__display_itoa_u32@value,w,c
 10789  000A8C  0E86               	movlw	134
 10790  000A8E  5820               	subwfb	__display_itoa_u32@value+1,w,c
 10791  000A90  0E01               	movlw	1
 10792  000A92  5821               	subwfb	__display_itoa_u32@value+2,w,c
 10793  000A94  A0D8               	btfss	status,0,c
 10794  000A96  D04C               	goto	l1498
 10795  000A98                     u9620:
 10796                           
 10797                           ;display.c: 200: {;display.c: 201: itoa(text, (uint16_t)(value/10000), 10);
 10798  000A98  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10799  000A9C  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10800  000AA0  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10801  000AA4  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10802  000AA8  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10803  000AAC  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10804  000AB0  0E10               	movlw	16
 10805  000AB2  6E05               	movwf	___lldiv@divisor,c
 10806  000AB4  0E27               	movlw	39
 10807  000AB6  6E06               	movwf	___lldiv@divisor+1,c
 10808  000AB8  0E00               	movlw	0
 10809  000ABA  6E07               	movwf	___lldiv@divisor+2,c
 10810  000ABC  0E00               	movlw	0
 10811  000ABE  6E08               	movwf	___lldiv@divisor+3,c
 10812  000AC0  EC45  F032         	call	___lldiv	;wreg free
 10813  000AC4  C001  F013         	movff	?___lldiv,itoa@val
 10814  000AC8  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10815  000ACC  0E00               	movlw	0
 10816  000ACE  6E16               	movwf	itoa@base+1,c
 10817  000AD0  0E0A               	movlw	10
 10818  000AD2  6E15               	movwf	itoa@base,c
 10819  000AD4  EC47  F03B         	call	_itoa	;wreg free
 10820                           
 10821                           ;display.c: 202: itoa(text+2, (uint16_t)(value%10000), 10);
 10822  000AD8  0E02               	movlw	2
 10823  000ADA  2423               	addwf	__display_itoa_u32@text,w,c
 10824  000ADC  6E11               	movwf	itoa@buf,c
 10825  000ADE  0E00               	movlw	0
 10826  000AE0  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10827  000AE2  6E12               	movwf	itoa@buf+1,c
 10828  000AE4  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10829  000AE8  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10830  000AEC  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10831  000AF0  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10832  000AF4  0E10               	movlw	16
 10833  000AF6  6E05               	movwf	___llmod@divisor,c
 10834  000AF8  0E27               	movlw	39
 10835  000AFA  6E06               	movwf	___llmod@divisor+1,c
 10836  000AFC  0E00               	movlw	0
 10837  000AFE  6E07               	movwf	___llmod@divisor+2,c
 10838  000B00  0E00               	movlw	0
 10839  000B02  6E08               	movwf	___llmod@divisor+3,c
 10840  000B04  EC8B  F036         	call	___llmod	;wreg free
 10841  000B08  C001  F013         	movff	?___llmod,itoa@val
 10842  000B0C  C002  F014         	movff	?___llmod+1,itoa@val+1
 10843  000B10  0E00               	movlw	0
 10844  000B12  6E16               	movwf	itoa@base+1,c
 10845  000B14  0E0A               	movlw	10
 10846  000B16  6E15               	movwf	itoa@base,c
 10847  000B18  EC47  F03B         	call	_itoa	;wreg free
 10848                           
 10849                           ;display.c: 203: *(text+6) = ' ';
 10850  000B1C  EE20 F006          	lfsr	2,6
 10851  000B20  5023               	movf	__display_itoa_u32@text,w,c
 10852  000B22  26D9               	addwf	fsr2l,f,c
 10853  000B24  5024               	movf	__display_itoa_u32@text+1,w,c
 10854  000B26  22DA               	addwfc	fsr2h,f,c
 10855  000B28  0E20               	movlw	32
 10856  000B2A  6EDF               	movwf	indf2,c
 10857                           
 10858                           ;display.c: 204: return 6;
 10859  000B2C  0E06               	movlw	6
 10860                           
 10861                           ;display.c: 205: }
 10862  000B2E  0012               	return	
 10863  000B30                     l1498:
 10864                           
 10865                           ;display.c: 206: else;display.c: 207: {;display.c: 208: itoa(text, (uint16_t)(value/1000
      +                          0), 10);
 10866  000B30  C023  F011         	movff	__display_itoa_u32@text,itoa@buf
 10867  000B34  C024  F012         	movff	__display_itoa_u32@text+1,itoa@buf+1
 10868  000B38  C01F  F001         	movff	__display_itoa_u32@value,___lldiv@dividend
 10869  000B3C  C020  F002         	movff	__display_itoa_u32@value+1,___lldiv@dividend+1
 10870  000B40  C021  F003         	movff	__display_itoa_u32@value+2,___lldiv@dividend+2
 10871  000B44  C022  F004         	movff	__display_itoa_u32@value+3,___lldiv@dividend+3
 10872  000B48  0E10               	movlw	16
 10873  000B4A  6E05               	movwf	___lldiv@divisor,c
 10874  000B4C  0E27               	movlw	39
 10875  000B4E  6E06               	movwf	___lldiv@divisor+1,c
 10876  000B50  0E00               	movlw	0
 10877  000B52  6E07               	movwf	___lldiv@divisor+2,c
 10878  000B54  0E00               	movlw	0
 10879  000B56  6E08               	movwf	___lldiv@divisor+3,c
 10880  000B58  EC45  F032         	call	___lldiv	;wreg free
 10881  000B5C  C001  F013         	movff	?___lldiv,itoa@val
 10882  000B60  C002  F014         	movff	?___lldiv+1,itoa@val+1
 10883  000B64  0E00               	movlw	0
 10884  000B66  6E16               	movwf	itoa@base+1,c
 10885  000B68  0E0A               	movlw	10
 10886  000B6A  6E15               	movwf	itoa@base,c
 10887  000B6C  EC47  F03B         	call	_itoa	;wreg free
 10888                           
 10889                           ;display.c: 209: itoa(text+1, (uint16_t)(value%10000), 10);
 10890  000B70  0E01               	movlw	1
 10891  000B72  2423               	addwf	__display_itoa_u32@text,w,c
 10892  000B74  6E11               	movwf	itoa@buf,c
 10893  000B76  0E00               	movlw	0
 10894  000B78  2024               	addwfc	__display_itoa_u32@text+1,w,c
 10895  000B7A  6E12               	movwf	itoa@buf+1,c
 10896  000B7C  C01F  F001         	movff	__display_itoa_u32@value,___llmod@dividend
 10897  000B80  C020  F002         	movff	__display_itoa_u32@value+1,___llmod@dividend+1
 10898  000B84  C021  F003         	movff	__display_itoa_u32@value+2,___llmod@dividend+2
 10899  000B88  C022  F004         	movff	__display_itoa_u32@value+3,___llmod@dividend+3
 10900  000B8C  0E10               	movlw	16
 10901  000B8E  6E05               	movwf	___llmod@divisor,c
 10902  000B90  0E27               	movlw	39
 10903  000B92  6E06               	movwf	___llmod@divisor+1,c
 10904  000B94  0E00               	movlw	0
 10905  000B96  6E07               	movwf	___llmod@divisor+2,c
 10906  000B98  0E00               	movlw	0
 10907  000B9A  6E08               	movwf	___llmod@divisor+3,c
 10908  000B9C  EC8B  F036         	call	___llmod	;wreg free
 10909  000BA0  C001  F013         	movff	?___llmod,itoa@val
 10910  000BA4  C002  F014         	movff	?___llmod+1,itoa@val+1
 10911  000BA8  0E00               	movlw	0
 10912  000BAA  6E16               	movwf	itoa@base+1,c
 10913  000BAC  0E0A               	movlw	10
 10914  000BAE  6E15               	movwf	itoa@base,c
 10915  000BB0  EC47  F03B         	call	_itoa	;wreg free
 10916                           
 10917                           ;display.c: 210: *(text+5) = ' ';
 10918  000BB4  EE20 F005          	lfsr	2,5
 10919  000BB8  5023               	movf	__display_itoa_u32@text,w,c
 10920  000BBA  26D9               	addwf	fsr2l,f,c
 10921  000BBC  5024               	movf	__display_itoa_u32@text+1,w,c
 10922  000BBE  22DA               	addwfc	fsr2h,f,c
 10923  000BC0  0E20               	movlw	32
 10924  000BC2  6EDF               	movwf	indf2,c
 10925                           
 10926                           ;display.c: 211: return 5;
 10927  000BC4  0E05               	movlw	5
 10928  000BC6  0012               	return	
 10929  000BC8                     __end_of__display_itoa_u32:
 10930                           	opt stack 0
 10931                           tblptru	equ	0xFF8
 10932                           tblptrh	equ	0xFF7
 10933                           tblptrl	equ	0xFF6
 10934                           tablat	equ	0xFF5
 10935                           prodh	equ	0xFF4
 10936                           prodl	equ	0xFF3
 10937                           intcon	equ	0xFF2
 10938                           intcon2	equ	0xFF1
 10939                           intcon3	equ	0xFF0
 10940                           postinc0	equ	0xFEE
 10941                           wreg	equ	0xFE8
 10942                           postdec1	equ	0xFE5
 10943                           plusw1	equ	0xFE3
 10944                           fsr1h	equ	0xFE2
 10945                           fsr1l	equ	0xFE1
 10946                           indf2	equ	0xFDF
 10947                           postinc2	equ	0xFDE
 10948                           plusw2	equ	0xFDB
 10949                           fsr2h	equ	0xFDA
 10950                           fsr2l	equ	0xFD9
 10951                           status	equ	0xFD8
 10952                           
 10953 ;; *************** function ___llmod *****************
 10954 ;; Defined at:
 10955 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\llmod.c"
 10956 ;; Parameters:    Size  Location     Type
 10957 ;;  dividend        4    0[COMRAM] unsigned long 
 10958 ;;  divisor         4    4[COMRAM] unsigned long 
 10959 ;; Auto vars:     Size  Location     Type
 10960 ;;  counter         1    8[COMRAM] unsigned char 
 10961 ;; Return value:  Size  Location     Type
 10962 ;;                  4    0[COMRAM] unsigned long 
 10963 ;; Registers used:
 10964 ;;		wreg, status,2, status,0
 10965 ;; Tracked objects:
 10966 ;;		On entry : 0/0
 10967 ;;		On exit  : 0/0
 10968 ;;		Unchanged: 0/0
 10969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 10970 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10971 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10972 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10973 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 10974 ;;Total ram usage:        9 bytes
 10975 ;; Hardware stack levels used:    1
 10976 ;; This function calls:
 10977 ;;		Nothing
 10978 ;; This function is called by:
 10979 ;;		__display_itoa_u32
 10980 ;; This function uses a non-reentrant model
 10981 ;;
 10982                           
 10983                           	psect	text41
 10984  006D16                     __ptext41:
 10985                           	opt stack 0
 10986  006D16                     ___llmod:
 10987                           	opt stack 27
 10988                           
 10989                           ;incstack = 0
 10990  006D16  5005               	movf	___llmod@divisor,w,c
 10991  006D18  1006               	iorwf	___llmod@divisor+1,w,c
 10992  006D1A  1007               	iorwf	___llmod@divisor+2,w,c
 10993  006D1C  1008               	iorwf	___llmod@divisor+3,w,c
 10994  006D1E  B4D8               	btfsc	status,2,c
 10995  006D20  D024               	goto	l3223
 10996  006D22  0E01               	movlw	1
 10997  006D24  6E09               	movwf	___llmod@counter,c
 10998  006D26  D006               	goto	l3218
 10999  006D28  90D8               	bcf	status,0,c
 11000  006D2A  3605               	rlcf	___llmod@divisor,f,c
 11001  006D2C  3606               	rlcf	___llmod@divisor+1,f,c
 11002  006D2E  3607               	rlcf	___llmod@divisor+2,f,c
 11003  006D30  3608               	rlcf	___llmod@divisor+3,f,c
 11004  006D32  2A09               	incf	___llmod@counter,f,c
 11005  006D34                     l3218:
 11006  006D34  AE08               	btfss	___llmod@divisor+3,7,c
 11007  006D36  D7F8               	goto	l3219
 11008  006D38                     u9200:
 11009  006D38  5005               	movf	___llmod@divisor,w,c
 11010  006D3A  5C01               	subwf	___llmod@dividend,w,c
 11011  006D3C  5006               	movf	___llmod@divisor+1,w,c
 11012  006D3E  5802               	subwfb	___llmod@dividend+1,w,c
 11013  006D40  5007               	movf	___llmod@divisor+2,w,c
 11014  006D42  5803               	subwfb	___llmod@dividend+2,w,c
 11015  006D44  5008               	movf	___llmod@divisor+3,w,c
 11016  006D46  5804               	subwfb	___llmod@dividend+3,w,c
 11017  006D48  A0D8               	btfss	status,0,c
 11018  006D4A  D008               	goto	l3222
 11019  006D4C  5005               	movf	___llmod@divisor,w,c
 11020  006D4E  5E01               	subwf	___llmod@dividend,f,c
 11021  006D50  5006               	movf	___llmod@divisor+1,w,c
 11022  006D52  5A02               	subwfb	___llmod@dividend+1,f,c
 11023  006D54  5007               	movf	___llmod@divisor+2,w,c
 11024  006D56  5A03               	subwfb	___llmod@dividend+2,f,c
 11025  006D58  5008               	movf	___llmod@divisor+3,w,c
 11026  006D5A  5A04               	subwfb	___llmod@dividend+3,f,c
 11027  006D5C                     l3222:
 11028  006D5C  90D8               	bcf	status,0,c
 11029  006D5E  3208               	rrcf	___llmod@divisor+3,f,c
 11030  006D60  3207               	rrcf	___llmod@divisor+2,f,c
 11031  006D62  3206               	rrcf	___llmod@divisor+1,f,c
 11032  006D64  3205               	rrcf	___llmod@divisor,f,c
 11033  006D66  2E09               	decfsz	___llmod@counter,f,c
 11034  006D68  D7E7               	goto	u9200
 11035  006D6A                     l3223:
 11036  006D6A  C001  F001         	movff	___llmod@dividend,?___llmod
 11037  006D6E  C002  F002         	movff	___llmod@dividend+1,?___llmod+1
 11038  006D72  C003  F003         	movff	___llmod@dividend+2,?___llmod+2
 11039  006D76  C004  F004         	movff	___llmod@dividend+3,?___llmod+3
 11040  006D7A  0012               	return		;funcret
 11041  006D7C                     __end_of___llmod:
 11042                           	opt stack 0
 11043                           tblptru	equ	0xFF8
 11044                           tblptrh	equ	0xFF7
 11045                           tblptrl	equ	0xFF6
 11046                           tablat	equ	0xFF5
 11047                           prodh	equ	0xFF4
 11048                           prodl	equ	0xFF3
 11049                           intcon	equ	0xFF2
 11050                           intcon2	equ	0xFF1
 11051                           intcon3	equ	0xFF0
 11052                           postinc0	equ	0xFEE
 11053                           wreg	equ	0xFE8
 11054                           postdec1	equ	0xFE5
 11055                           plusw1	equ	0xFE3
 11056                           fsr1h	equ	0xFE2
 11057                           fsr1l	equ	0xFE1
 11058                           indf2	equ	0xFDF
 11059                           postinc2	equ	0xFDE
 11060                           plusw2	equ	0xFDB
 11061                           fsr2h	equ	0xFDA
 11062                           fsr2l	equ	0xFD9
 11063                           status	equ	0xFD8
 11064                           
 11065 ;; *************** function ___lldiv *****************
 11066 ;; Defined at:
 11067 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\__lldiv.c"
 11068 ;; Parameters:    Size  Location     Type
 11069 ;;  dividend        4    0[COMRAM] unsigned long 
 11070 ;;  divisor         4    4[COMRAM] unsigned long 
 11071 ;; Auto vars:     Size  Location     Type
 11072 ;;  quotient        4    8[COMRAM] unsigned long 
 11073 ;;  counter         1   12[COMRAM] unsigned char 
 11074 ;; Return value:  Size  Location     Type
 11075 ;;                  4    0[COMRAM] unsigned long 
 11076 ;; Registers used:
 11077 ;;		wreg, status,2, status,0
 11078 ;; Tracked objects:
 11079 ;;		On entry : 0/0
 11080 ;;		On exit  : 0/0
 11081 ;;		Unchanged: 0/0
 11082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11083 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11084 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11085 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11086 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11087 ;;Total ram usage:       13 bytes
 11088 ;; Hardware stack levels used:    1
 11089 ;; This function calls:
 11090 ;;		Nothing
 11091 ;; This function is called by:
 11092 ;;		__display_itoa_u32
 11093 ;; This function uses a non-reentrant model
 11094 ;;
 11095                           
 11096                           	psect	text42
 11097  00648A                     __ptext42:
 11098                           	opt stack 0
 11099  00648A                     ___lldiv:
 11100                           	opt stack 27
 11101                           
 11102                           ;incstack = 0
 11103  00648A  0E00               	movlw	0
 11104  00648C  6E09               	movwf	___lldiv@quotient,c
 11105  00648E  0E00               	movlw	0
 11106  006490  6E0A               	movwf	___lldiv@quotient+1,c
 11107  006492  0E00               	movlw	0
 11108  006494  6E0B               	movwf	___lldiv@quotient+2,c
 11109  006496  0E00               	movlw	0
 11110  006498  6E0C               	movwf	___lldiv@quotient+3,c
 11111  00649A  5005               	movf	___lldiv@divisor,w,c
 11112  00649C  1006               	iorwf	___lldiv@divisor+1,w,c
 11113  00649E  1007               	iorwf	___lldiv@divisor+2,w,c
 11114  0064A0  1008               	iorwf	___lldiv@divisor+3,w,c
 11115  0064A2  B4D8               	btfsc	status,2,c
 11116  0064A4  D02A               	goto	l2842
 11117  0064A6  0E01               	movlw	1
 11118  0064A8  6E0D               	movwf	___lldiv@counter,c
 11119  0064AA  D006               	goto	l2837
 11120  0064AC  90D8               	bcf	status,0,c
 11121  0064AE  3605               	rlcf	___lldiv@divisor,f,c
 11122  0064B0  3606               	rlcf	___lldiv@divisor+1,f,c
 11123  0064B2  3607               	rlcf	___lldiv@divisor+2,f,c
 11124  0064B4  3608               	rlcf	___lldiv@divisor+3,f,c
 11125  0064B6  2A0D               	incf	___lldiv@counter,f,c
 11126  0064B8                     l2837:
 11127  0064B8  AE08               	btfss	___lldiv@divisor+3,7,c
 11128  0064BA  D7F8               	goto	l2838
 11129  0064BC                     u9170:
 11130  0064BC  90D8               	bcf	status,0,c
 11131  0064BE  3609               	rlcf	___lldiv@quotient,f,c
 11132  0064C0  360A               	rlcf	___lldiv@quotient+1,f,c
 11133  0064C2  360B               	rlcf	___lldiv@quotient+2,f,c
 11134  0064C4  360C               	rlcf	___lldiv@quotient+3,f,c
 11135  0064C6  5005               	movf	___lldiv@divisor,w,c
 11136  0064C8  5C01               	subwf	___lldiv@dividend,w,c
 11137  0064CA  5006               	movf	___lldiv@divisor+1,w,c
 11138  0064CC  5802               	subwfb	___lldiv@dividend+1,w,c
 11139  0064CE  5007               	movf	___lldiv@divisor+2,w,c
 11140  0064D0  5803               	subwfb	___lldiv@dividend+2,w,c
 11141  0064D2  5008               	movf	___lldiv@divisor+3,w,c
 11142  0064D4  5804               	subwfb	___lldiv@dividend+3,w,c
 11143  0064D6  A0D8               	btfss	status,0,c
 11144  0064D8  D009               	goto	l2841
 11145  0064DA  5005               	movf	___lldiv@divisor,w,c
 11146  0064DC  5E01               	subwf	___lldiv@dividend,f,c
 11147  0064DE  5006               	movf	___lldiv@divisor+1,w,c
 11148  0064E0  5A02               	subwfb	___lldiv@dividend+1,f,c
 11149  0064E2  5007               	movf	___lldiv@divisor+2,w,c
 11150  0064E4  5A03               	subwfb	___lldiv@dividend+2,f,c
 11151  0064E6  5008               	movf	___lldiv@divisor+3,w,c
 11152  0064E8  5A04               	subwfb	___lldiv@dividend+3,f,c
 11153  0064EA  8009               	bsf	___lldiv@quotient,0,c
 11154  0064EC                     l2841:
 11155  0064EC  90D8               	bcf	status,0,c
 11156  0064EE  3208               	rrcf	___lldiv@divisor+3,f,c
 11157  0064F0  3207               	rrcf	___lldiv@divisor+2,f,c
 11158  0064F2  3206               	rrcf	___lldiv@divisor+1,f,c
 11159  0064F4  3205               	rrcf	___lldiv@divisor,f,c
 11160  0064F6  2E0D               	decfsz	___lldiv@counter,f,c
 11161  0064F8  D7E1               	goto	u9170
 11162  0064FA                     l2842:
 11163  0064FA  C009  F001         	movff	___lldiv@quotient,?___lldiv
 11164  0064FE  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 11165  006502  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 11166  006506  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 11167  00650A  0012               	return		;funcret
 11168  00650C                     __end_of___lldiv:
 11169                           	opt stack 0
 11170                           tblptru	equ	0xFF8
 11171                           tblptrh	equ	0xFF7
 11172                           tblptrl	equ	0xFF6
 11173                           tablat	equ	0xFF5
 11174                           prodh	equ	0xFF4
 11175                           prodl	equ	0xFF3
 11176                           intcon	equ	0xFF2
 11177                           intcon2	equ	0xFF1
 11178                           intcon3	equ	0xFF0
 11179                           postinc0	equ	0xFEE
 11180                           wreg	equ	0xFE8
 11181                           postdec1	equ	0xFE5
 11182                           plusw1	equ	0xFE3
 11183                           fsr1h	equ	0xFE2
 11184                           fsr1l	equ	0xFE1
 11185                           indf2	equ	0xFDF
 11186                           postinc2	equ	0xFDE
 11187                           plusw2	equ	0xFDB
 11188                           fsr2h	equ	0xFDA
 11189                           fsr2l	equ	0xFD9
 11190                           status	equ	0xFD8
 11191                           
 11192 ;; *************** function __display_done *****************
 11193 ;; Defined at:
 11194 ;;		line 522 in file "display.c"
 11195 ;; Parameters:    Size  Location     Type
 11196 ;;		None
 11197 ;; Auto vars:     Size  Location     Type
 11198 ;;  cntr            1   30[COMRAM] unsigned char 
 11199 ;; Return value:  Size  Location     Type
 11200 ;;                  1    wreg      void 
 11201 ;; Registers used:
 11202 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11203 ;; Tracked objects:
 11204 ;;		On entry : 0/0
 11205 ;;		On exit  : 0/0
 11206 ;;		Unchanged: 0/0
 11207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11208 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11209 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11210 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11211 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11212 ;;Total ram usage:        1 bytes
 11213 ;; Hardware stack levels used:    1
 11214 ;; Hardware stack levels required when called:    4
 11215 ;; This function calls:
 11216 ;;		__display_itoa_u16
 11217 ;;		_bootloader_get_flashPagesWritten
 11218 ;; This function is called by:
 11219 ;;		_display_prepare
 11220 ;; This function uses a non-reentrant model
 11221 ;;
 11222                           
 11223                           	psect	text43
 11224  003706                     __ptext43:
 11225                           	opt stack 0
 11226  003706                     __display_done:
 11227                           	opt stack 25
 11228                           
 11229                           ;display.c: 524: uint8_t cntr;;display.c: 525: cntr = 0;
 11230                           
 11231                           ;incstack = 0
 11232  003706  0E00               	movlw	0
 11233  003708  6E1F               	movwf	__display_done@cntr,c
 11234                           
 11235                           ;display.c: 526: while(done_line1[cntr])
 11236  00370A  D017               	goto	l1667
 11237  00370C                     
 11238                           ;display.c: 527: display_content[0][cntr] = done_line1[cntr++];
 11239  00370C  501F               	movf	__display_done@cntr,w,c
 11240  00370E  0D01               	mullw	1
 11241  003710  0E80               	movlw	low _done_line1
 11242  003712  24F3               	addwf	prodl,w,c
 11243  003714  6EF6               	movwf	tblptrl,c
 11244  003716  0E8D               	movlw	high _done_line1
 11245  003718  20F4               	addwfc	prodh,w,c
 11246  00371A  6EF7               	movwf	tblptrh,c
 11247  00371C                     	if	1	;There are 3 active tblptr bytes
 11248  00371C  6AF8               	clrf	tblptru,c
 11249  00371E  0E00               	movlw	low (__mediumconst shr (0+16))
 11250  003720  22F8               	addwfc	tblptru,f,c
 11251  003722                     	endif
 11252  003722  501F               	movf	__display_done@cntr,w,c
 11253  003724  0D01               	mullw	1
 11254  003726  0E76               	movlw	low _display_content
 11255  003728  24F3               	addwf	prodl,w,c
 11256  00372A  6ED9               	movwf	fsr2l,c
 11257  00372C  0E01               	movlw	high _display_content
 11258  00372E  20F4               	addwfc	prodh,w,c
 11259  003730  6EDA               	movwf	fsr2h,c
 11260  003732  0008               	tblrd		*
 11261  003734  CFF5 FFDF          	movff	tablat,indf2
 11262  003738  2A1F               	incf	__display_done@cntr,f,c
 11263  00373A                     l1667:
 11264  00373A  501F               	movf	__display_done@cntr,w,c
 11265  00373C  0D01               	mullw	1
 11266  00373E  0E80               	movlw	low _done_line1
 11267  003740  24F3               	addwf	prodl,w,c
 11268  003742  6EF6               	movwf	tblptrl,c
 11269  003744  0E8D               	movlw	high _done_line1
 11270  003746  20F4               	addwfc	prodh,w,c
 11271  003748  6EF7               	movwf	tblptrh,c
 11272  00374A                     	if	1	;There are 3 active tblptr bytes
 11273  00374A  6AF8               	clrf	tblptru,c
 11274  00374C  0E00               	movlw	low (__mediumconst shr (0+16))
 11275  00374E  22F8               	addwfc	tblptru,f,c
 11276  003750                     	endif
 11277  003750  0008               	tblrd		*
 11278  003752  50F5               	movf	tablat,w,c
 11279  003754  0900               	iorlw	0
 11280  003756  A4D8               	btfss	status,2,c
 11281  003758  D7D9               	goto	l1668
 11282                           
 11283                           ;display.c: 528: cntr = 0;
 11284  00375A  0E00               	movlw	0
 11285  00375C  6E1F               	movwf	__display_done@cntr,c
 11286                           
 11287                           ;display.c: 529: while(done_line2[cntr])
 11288  00375E  D017               	goto	l1670
 11289  003760                     
 11290                           ;display.c: 530: display_content[1][cntr] = done_line2[cntr++];
 11291  003760  501F               	movf	__display_done@cntr,w,c
 11292  003762  0D01               	mullw	1
 11293  003764  0E9E               	movlw	low _done_line2
 11294  003766  24F3               	addwf	prodl,w,c
 11295  003768  6EF6               	movwf	tblptrl,c
 11296  00376A  0E8E               	movlw	high _done_line2
 11297  00376C  20F4               	addwfc	prodh,w,c
 11298  00376E  6EF7               	movwf	tblptrh,c
 11299  003770                     	if	1	;There are 3 active tblptr bytes
 11300  003770  6AF8               	clrf	tblptru,c
 11301  003772  0E00               	movlw	low (__mediumconst shr (0+16))
 11302  003774  22F8               	addwfc	tblptru,f,c
 11303  003776                     	endif
 11304  003776  501F               	movf	__display_done@cntr,w,c
 11305  003778  0D01               	mullw	1
 11306  00377A  0E8A               	movlw	low (_display_content+20)
 11307  00377C  24F3               	addwf	prodl,w,c
 11308  00377E  6ED9               	movwf	fsr2l,c
 11309  003780  0E01               	movlw	high (_display_content+20)
 11310  003782  20F4               	addwfc	prodh,w,c
 11311  003784  6EDA               	movwf	fsr2h,c
 11312  003786  0008               	tblrd		*
 11313  003788  CFF5 FFDF          	movff	tablat,indf2
 11314  00378C  2A1F               	incf	__display_done@cntr,f,c
 11315  00378E                     l1670:
 11316  00378E  501F               	movf	__display_done@cntr,w,c
 11317  003790  0D01               	mullw	1
 11318  003792  0E9E               	movlw	low _done_line2
 11319  003794  24F3               	addwf	prodl,w,c
 11320  003796  6EF6               	movwf	tblptrl,c
 11321  003798  0E8E               	movlw	high _done_line2
 11322  00379A  20F4               	addwfc	prodh,w,c
 11323  00379C  6EF7               	movwf	tblptrh,c
 11324  00379E                     	if	1	;There are 3 active tblptr bytes
 11325  00379E  6AF8               	clrf	tblptru,c
 11326  0037A0  0E00               	movlw	low (__mediumconst shr (0+16))
 11327  0037A2  22F8               	addwfc	tblptru,f,c
 11328  0037A4                     	endif
 11329  0037A4  0008               	tblrd		*
 11330  0037A6  50F5               	movf	tablat,w,c
 11331  0037A8  0900               	iorlw	0
 11332  0037AA  A4D8               	btfss	status,2,c
 11333  0037AC  D7D9               	goto	l1671
 11334                           
 11335                           ;display.c: 531: cntr = 0;
 11336  0037AE  0E00               	movlw	0
 11337  0037B0  6E1F               	movwf	__display_done@cntr,c
 11338                           
 11339                           ;display.c: 532: while(done_line3[cntr])
 11340  0037B2  D017               	goto	l1673
 11341  0037B4                     
 11342                           ;display.c: 533: display_content[2][cntr] = done_line3[cntr++];
 11343  0037B4  501F               	movf	__display_done@cntr,w,c
 11344  0037B6  0D01               	mullw	1
 11345  0037B8  0E70               	movlw	low _done_line3
 11346  0037BA  24F3               	addwf	prodl,w,c
 11347  0037BC  6EF6               	movwf	tblptrl,c
 11348  0037BE  0E8D               	movlw	high _done_line3
 11349  0037C0  20F4               	addwfc	prodh,w,c
 11350  0037C2  6EF7               	movwf	tblptrh,c
 11351  0037C4                     	if	1	;There are 3 active tblptr bytes
 11352  0037C4  6AF8               	clrf	tblptru,c
 11353  0037C6  0E00               	movlw	low (__mediumconst shr (0+16))
 11354  0037C8  22F8               	addwfc	tblptru,f,c
 11355  0037CA                     	endif
 11356  0037CA  501F               	movf	__display_done@cntr,w,c
 11357  0037CC  0D01               	mullw	1
 11358  0037CE  0E9E               	movlw	low (_display_content+40)
 11359  0037D0  24F3               	addwf	prodl,w,c
 11360  0037D2  6ED9               	movwf	fsr2l,c
 11361  0037D4  0E01               	movlw	high (_display_content+40)
 11362  0037D6  20F4               	addwfc	prodh,w,c
 11363  0037D8  6EDA               	movwf	fsr2h,c
 11364  0037DA  0008               	tblrd		*
 11365  0037DC  CFF5 FFDF          	movff	tablat,indf2
 11366  0037E0  2A1F               	incf	__display_done@cntr,f,c
 11367  0037E2                     l1673:
 11368  0037E2  501F               	movf	__display_done@cntr,w,c
 11369  0037E4  0D01               	mullw	1
 11370  0037E6  0E70               	movlw	low _done_line3
 11371  0037E8  24F3               	addwf	prodl,w,c
 11372  0037EA  6EF6               	movwf	tblptrl,c
 11373  0037EC  0E8D               	movlw	high _done_line3
 11374  0037EE  20F4               	addwfc	prodh,w,c
 11375  0037F0  6EF7               	movwf	tblptrh,c
 11376  0037F2                     	if	1	;There are 3 active tblptr bytes
 11377  0037F2  6AF8               	clrf	tblptru,c
 11378  0037F4  0E00               	movlw	low (__mediumconst shr (0+16))
 11379  0037F6  22F8               	addwfc	tblptru,f,c
 11380  0037F8                     	endif
 11381  0037F8  0008               	tblrd		*
 11382  0037FA  50F5               	movf	tablat,w,c
 11383  0037FC  0900               	iorlw	0
 11384  0037FE  A4D8               	btfss	status,2,c
 11385  003800  D7D9               	goto	l1674
 11386                           
 11387                           ;display.c: 534: _display_itoa_u16(bootloader_get_flashPagesWritten(), &display_content[
      +                          2][cntr]);
 11388  003802  ECEF  F03F         	call	_bootloader_get_flashPagesWritten	;wreg free
 11389  003806  C001  F019         	movff	?_bootloader_get_flashPagesWritten,__display_itoa_u16@value
 11390  00380A  C002  F01A         	movff	?_bootloader_get_flashPagesWritten+1,__display_itoa_u16@value+1
 11391  00380E  6A1B               	clrf	__display_itoa_u16@value+2,c
 11392  003810  6A1C               	clrf	__display_itoa_u16@value+3,c
 11393  003812  501F               	movf	__display_done@cntr,w,c
 11394  003814  0D01               	mullw	1
 11395  003816  0E9E               	movlw	low (_display_content+40)
 11396  003818  24F3               	addwf	prodl,w,c
 11397  00381A  6E1D               	movwf	__display_itoa_u16@text,c
 11398  00381C  0E01               	movlw	high (_display_content+40)
 11399  00381E  20F4               	addwfc	prodh,w,c
 11400  003820  6E1E               	movwf	__display_itoa_u16@text+1,c
 11401  003822  EC4B  F029         	call	__display_itoa_u16	;wreg free
 11402                           
 11403                           ;display.c: 535: cntr = 0;
 11404  003826  0E00               	movlw	0
 11405  003828  6E1F               	movwf	__display_done@cntr,c
 11406                           
 11407                           ;display.c: 536: while(done_line4[cntr])
 11408  00382A  D017               	goto	l1676
 11409  00382C                     
 11410                           ;display.c: 537: display_content[3][cntr] = done_line4[cntr++];
 11411  00382C  501F               	movf	__display_done@cntr,w,c
 11412  00382E  0D01               	mullw	1
 11413  003830  0E60               	movlw	low _done_line4
 11414  003832  24F3               	addwf	prodl,w,c
 11415  003834  6EF6               	movwf	tblptrl,c
 11416  003836  0E8D               	movlw	high _done_line4
 11417  003838  20F4               	addwfc	prodh,w,c
 11418  00383A  6EF7               	movwf	tblptrh,c
 11419  00383C                     	if	1	;There are 3 active tblptr bytes
 11420  00383C  6AF8               	clrf	tblptru,c
 11421  00383E  0E00               	movlw	low (__mediumconst shr (0+16))
 11422  003840  22F8               	addwfc	tblptru,f,c
 11423  003842                     	endif
 11424  003842  501F               	movf	__display_done@cntr,w,c
 11425  003844  0D01               	mullw	1
 11426  003846  0EB2               	movlw	low (_display_content+60)
 11427  003848  24F3               	addwf	prodl,w,c
 11428  00384A  6ED9               	movwf	fsr2l,c
 11429  00384C  0E01               	movlw	high (_display_content+60)
 11430  00384E  20F4               	addwfc	prodh,w,c
 11431  003850  6EDA               	movwf	fsr2h,c
 11432  003852  0008               	tblrd		*
 11433  003854  CFF5 FFDF          	movff	tablat,indf2
 11434  003858  2A1F               	incf	__display_done@cntr,f,c
 11435  00385A                     l1676:
 11436  00385A  501F               	movf	__display_done@cntr,w,c
 11437  00385C  0D01               	mullw	1
 11438  00385E  0E60               	movlw	low _done_line4
 11439  003860  24F3               	addwf	prodl,w,c
 11440  003862  6EF6               	movwf	tblptrl,c
 11441  003864  0E8D               	movlw	high _done_line4
 11442  003866  20F4               	addwfc	prodh,w,c
 11443  003868  6EF7               	movwf	tblptrh,c
 11444  00386A                     	if	1	;There are 3 active tblptr bytes
 11445  00386A  6AF8               	clrf	tblptru,c
 11446  00386C  0E00               	movlw	low (__mediumconst shr (0+16))
 11447  00386E  22F8               	addwfc	tblptru,f,c
 11448  003870                     	endif
 11449  003870  0008               	tblrd		*
 11450  003872  50F5               	movf	tablat,w,c
 11451  003874  0900               	iorlw	0
 11452  003876  B4D8               	btfsc	status,2,c
 11453  003878  0012               	return	
 11454  00387A  D7D8               	goto	l1677
 11455  00387C                     __end_of__display_done:
 11456                           	opt stack 0
 11457                           tblptru	equ	0xFF8
 11458                           tblptrh	equ	0xFF7
 11459                           tblptrl	equ	0xFF6
 11460                           tablat	equ	0xFF5
 11461                           prodh	equ	0xFF4
 11462                           prodl	equ	0xFF3
 11463                           intcon	equ	0xFF2
 11464                           intcon2	equ	0xFF1
 11465                           intcon3	equ	0xFF0
 11466                           postinc0	equ	0xFEE
 11467                           wreg	equ	0xFE8
 11468                           postdec1	equ	0xFE5
 11469                           plusw1	equ	0xFE3
 11470                           fsr1h	equ	0xFE2
 11471                           fsr1l	equ	0xFE1
 11472                           indf2	equ	0xFDF
 11473                           postinc2	equ	0xFDE
 11474                           plusw2	equ	0xFDB
 11475                           fsr2h	equ	0xFDA
 11476                           fsr2l	equ	0xFD9
 11477                           status	equ	0xFD8
 11478                           
 11479 ;; *************** function __display_clear *****************
 11480 ;; Defined at:
 11481 ;;		line 72 in file "display.c"
 11482 ;; Parameters:    Size  Location     Type
 11483 ;;		None
 11484 ;; Auto vars:     Size  Location     Type
 11485 ;;  col             1    3[COMRAM] unsigned char 
 11486 ;;  row             1    2[COMRAM] unsigned char 
 11487 ;; Return value:  Size  Location     Type
 11488 ;;                  1    wreg      void 
 11489 ;; Registers used:
 11490 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 11491 ;; Tracked objects:
 11492 ;;		On entry : 0/0
 11493 ;;		On exit  : 0/0
 11494 ;;		Unchanged: 0/0
 11495 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11496 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11497 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11498 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11499 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11500 ;;Total ram usage:        4 bytes
 11501 ;; Hardware stack levels used:    1
 11502 ;; This function calls:
 11503 ;;		Nothing
 11504 ;; This function is called by:
 11505 ;;		_display_prepare
 11506 ;; This function uses a non-reentrant model
 11507 ;;
 11508                           
 11509                           	psect	text44
 11510  007572                     __ptext44:
 11511                           	opt stack 0
 11512  007572                     __display_clear:
 11513                           	opt stack 29
 11514                           
 11515                           ;display.c: 74: uint8_t row;;display.c: 75: uint8_t col;;display.c: 76: for(row=0;row<4;
      +                          ++row)
 11516                           
 11517                           ;incstack = 0
 11518  007572  0E00               	movlw	0
 11519  007574  6E03               	movwf	__display_clear@row,c
 11520  007576                     l13699:
 11521  007576  0E03               	movlw	3
 11522  007578  6403               	cpfsgt	__display_clear@row,c
 11523  00757A  D001               	goto	l1446
 11524  00757C  0012               	return	
 11525  00757E                     l1446:
 11526                           
 11527                           ;display.c: 77: {;display.c: 78: for(col=0;col<20;++col)
 11528  00757E  0E00               	movlw	0
 11529  007580  6E04               	movwf	__display_clear@col,c
 11530  007582                     l13705:
 11531  007582  0E13               	movlw	19
 11532  007584  6404               	cpfsgt	__display_clear@col,c
 11533  007586  D001               	goto	l1448
 11534  007588  D016               	goto	u10590
 11535  00758A                     l1448:
 11536                           
 11537                           ;display.c: 79: {;display.c: 80: display_content[row][col] = ' ';
 11538  00758A  5003               	movf	__display_clear@row,w,c
 11539  00758C  0D14               	mullw	20
 11540  00758E  0E76               	movlw	low _display_content
 11541  007590  6E01               	movwf	??__display_clear& (0+255),c
 11542  007592  0E01               	movlw	high _display_content
 11543  007594  6E02               	movwf	(??__display_clear+1)& (0+255),c
 11544  007596  50F3               	movf	prodl,w,c
 11545  007598  2601               	addwf	??__display_clear,f,c
 11546  00759A  50F4               	movf	prodh,w,c
 11547  00759C  2202               	addwfc	??__display_clear+1,f,c
 11548  00759E  5004               	movf	__display_clear@col,w,c
 11549  0075A0  0D01               	mullw	1
 11550  0075A2  50F3               	movf	prodl,w,c
 11551  0075A4  2401               	addwf	??__display_clear,w,c
 11552  0075A6  6ED9               	movwf	fsr2l,c
 11553  0075A8  50F4               	movf	prodh,w,c
 11554  0075AA  2002               	addwfc	??__display_clear+1,w,c
 11555  0075AC  6EDA               	movwf	fsr2h,c
 11556  0075AE  0E20               	movlw	32
 11557  0075B0  6EDF               	movwf	indf2,c
 11558  0075B2  2A04               	incf	__display_clear@col,f,c
 11559  0075B4  D7E6               	goto	l13705
 11560  0075B6                     u10590:
 11561  0075B6  2A03               	incf	__display_clear@row,f,c
 11562  0075B8  D7DE               	goto	l13699
 11563  0075BA                     __end_of__display_clear:
 11564                           	opt stack 0
 11565                           tblptru	equ	0xFF8
 11566                           tblptrh	equ	0xFF7
 11567                           tblptrl	equ	0xFF6
 11568                           tablat	equ	0xFF5
 11569                           prodh	equ	0xFF4
 11570                           prodl	equ	0xFF3
 11571                           intcon	equ	0xFF2
 11572                           intcon2	equ	0xFF1
 11573                           intcon3	equ	0xFF0
 11574                           postinc0	equ	0xFEE
 11575                           wreg	equ	0xFE8
 11576                           postdec1	equ	0xFE5
 11577                           plusw1	equ	0xFE3
 11578                           fsr1h	equ	0xFE2
 11579                           fsr1l	equ	0xFE1
 11580                           indf2	equ	0xFDF
 11581                           postinc2	equ	0xFDE
 11582                           plusw2	equ	0xFDB
 11583                           fsr2h	equ	0xFDA
 11584                           fsr2l	equ	0xFD9
 11585                           status	equ	0xFD8
 11586                           
 11587 ;; *************** function __display_checked *****************
 11588 ;; Defined at:
 11589 ;;		line 426 in file "display.c"
 11590 ;; Parameters:    Size  Location     Type
 11591 ;;		None
 11592 ;; Auto vars:     Size  Location     Type
 11593 ;;  cntr            1   33[COMRAM] unsigned char 
 11594 ;;  start           1   32[COMRAM] unsigned char 
 11595 ;; Return value:  Size  Location     Type
 11596 ;;                  1    wreg      void 
 11597 ;; Registers used:
 11598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 11599 ;; Tracked objects:
 11600 ;;		On entry : 0/0
 11601 ;;		On exit  : 0/0
 11602 ;;		Unchanged: 0/0
 11603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11605 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11606 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11607 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11608 ;;Total ram usage:        4 bytes
 11609 ;; Hardware stack levels used:    1
 11610 ;; Hardware stack levels required when called:    4
 11611 ;; This function calls:
 11612 ;;		__display_itoa_u16
 11613 ;;		_bootloader_get_total_entries
 11614 ;; This function is called by:
 11615 ;;		_display_prepare
 11616 ;; This function uses a non-reentrant model
 11617 ;;
 11618                           
 11619                           	psect	text45
 11620  00358A                     __ptext45:
 11621                           	opt stack 0
 11622  00358A                     __display_checked:
 11623                           	opt stack 25
 11624                           
 11625                           ;display.c: 428: uint8_t cntr;;display.c: 429: uint8_t start;;display.c: 430: cntr = 0;
 11626                           
 11627                           ;incstack = 0
 11628  00358A  0E00               	movlw	0
 11629  00358C  6E22               	movwf	__display_checked@cntr,c
 11630                           
 11631                           ;display.c: 431: while(checked_line1[cntr])
 11632  00358E  D017               	goto	l1603
 11633  003590                     
 11634                           ;display.c: 432: display_content[0][cntr] = checked_line1[cntr++];
 11635  003590  5022               	movf	__display_checked@cntr,w,c
 11636  003592  0D01               	mullw	1
 11637  003594  0EC0               	movlw	low _checked_line1
 11638  003596  24F3               	addwf	prodl,w,c
 11639  003598  6EF6               	movwf	tblptrl,c
 11640  00359A  0E8D               	movlw	high _checked_line1
 11641  00359C  20F4               	addwfc	prodh,w,c
 11642  00359E  6EF7               	movwf	tblptrh,c
 11643  0035A0                     	if	1	;There are 3 active tblptr bytes
 11644  0035A0  6AF8               	clrf	tblptru,c
 11645  0035A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11646  0035A4  22F8               	addwfc	tblptru,f,c
 11647  0035A6                     	endif
 11648  0035A6  5022               	movf	__display_checked@cntr,w,c
 11649  0035A8  0D01               	mullw	1
 11650  0035AA  0E76               	movlw	low _display_content
 11651  0035AC  24F3               	addwf	prodl,w,c
 11652  0035AE  6ED9               	movwf	fsr2l,c
 11653  0035B0  0E01               	movlw	high _display_content
 11654  0035B2  20F4               	addwfc	prodh,w,c
 11655  0035B4  6EDA               	movwf	fsr2h,c
 11656  0035B6  0008               	tblrd		*
 11657  0035B8  CFF5 FFDF          	movff	tablat,indf2
 11658  0035BC  2A22               	incf	__display_checked@cntr,f,c
 11659  0035BE                     l1603:
 11660  0035BE  5022               	movf	__display_checked@cntr,w,c
 11661  0035C0  0D01               	mullw	1
 11662  0035C2  0EC0               	movlw	low _checked_line1
 11663  0035C4  24F3               	addwf	prodl,w,c
 11664  0035C6  6EF6               	movwf	tblptrl,c
 11665  0035C8  0E8D               	movlw	high _checked_line1
 11666  0035CA  20F4               	addwfc	prodh,w,c
 11667  0035CC  6EF7               	movwf	tblptrh,c
 11668  0035CE                     	if	1	;There are 3 active tblptr bytes
 11669  0035CE  6AF8               	clrf	tblptru,c
 11670  0035D0  0E00               	movlw	low (__mediumconst shr (0+16))
 11671  0035D2  22F8               	addwfc	tblptru,f,c
 11672  0035D4                     	endif
 11673  0035D4  0008               	tblrd		*
 11674  0035D6  50F5               	movf	tablat,w,c
 11675  0035D8  0900               	iorlw	0
 11676  0035DA  A4D8               	btfss	status,2,c
 11677  0035DC  D7D9               	goto	l1604
 11678                           
 11679                           ;display.c: 433: cntr = 0;
 11680  0035DE  0E00               	movlw	0
 11681  0035E0  6E22               	movwf	__display_checked@cntr,c
 11682                           
 11683                           ;display.c: 434: while(checked_line2[cntr])
 11684  0035E2  D017               	goto	l1606
 11685  0035E4                     
 11686                           ;display.c: 435: display_content[1][cntr] = checked_line2[cntr++];
 11687  0035E4  5022               	movf	__display_checked@cntr,w,c
 11688  0035E6  0D01               	mullw	1
 11689  0035E8  0EA5               	movlw	low _checked_line2
 11690  0035EA  24F3               	addwf	prodl,w,c
 11691  0035EC  6EF6               	movwf	tblptrl,c
 11692  0035EE  0E8C               	movlw	high _checked_line2
 11693  0035F0  20F4               	addwfc	prodh,w,c
 11694  0035F2  6EF7               	movwf	tblptrh,c
 11695  0035F4                     	if	1	;There are 3 active tblptr bytes
 11696  0035F4  6AF8               	clrf	tblptru,c
 11697  0035F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11698  0035F8  22F8               	addwfc	tblptru,f,c
 11699  0035FA                     	endif
 11700  0035FA  5022               	movf	__display_checked@cntr,w,c
 11701  0035FC  0D01               	mullw	1
 11702  0035FE  0E8A               	movlw	low (_display_content+20)
 11703  003600  24F3               	addwf	prodl,w,c
 11704  003602  6ED9               	movwf	fsr2l,c
 11705  003604  0E01               	movlw	high (_display_content+20)
 11706  003606  20F4               	addwfc	prodh,w,c
 11707  003608  6EDA               	movwf	fsr2h,c
 11708  00360A  0008               	tblrd		*
 11709  00360C  CFF5 FFDF          	movff	tablat,indf2
 11710  003610  2A22               	incf	__display_checked@cntr,f,c
 11711  003612                     l1606:
 11712  003612  5022               	movf	__display_checked@cntr,w,c
 11713  003614  0D01               	mullw	1
 11714  003616  0EA5               	movlw	low _checked_line2
 11715  003618  24F3               	addwf	prodl,w,c
 11716  00361A  6EF6               	movwf	tblptrl,c
 11717  00361C  0E8C               	movlw	high _checked_line2
 11718  00361E  20F4               	addwfc	prodh,w,c
 11719  003620  6EF7               	movwf	tblptrh,c
 11720  003622                     	if	1	;There are 3 active tblptr bytes
 11721  003622  6AF8               	clrf	tblptru,c
 11722  003624  0E00               	movlw	low (__mediumconst shr (0+16))
 11723  003626  22F8               	addwfc	tblptru,f,c
 11724  003628                     	endif
 11725  003628  0008               	tblrd		*
 11726  00362A  50F5               	movf	tablat,w,c
 11727  00362C  0900               	iorlw	0
 11728  00362E  A4D8               	btfss	status,2,c
 11729  003630  D7D9               	goto	l1607
 11730                           
 11731                           ;display.c: 437: start = _display_itoa_u16(bootloader_get_total_entries(), &display_cont
      +                          ent[2][0]);
 11732  003632  ECE0  F03F         	call	_bootloader_get_total_entries	;wreg free
 11733  003636  C001  F019         	movff	?_bootloader_get_total_entries,__display_itoa_u16@value
 11734  00363A  C002  F01A         	movff	?_bootloader_get_total_entries+1,__display_itoa_u16@value+1
 11735  00363E  6A1B               	clrf	__display_itoa_u16@value+2,c
 11736  003640  6A1C               	clrf	__display_itoa_u16@value+3,c
 11737  003642  0E9E               	movlw	low (_display_content+40)
 11738  003644  6E1D               	movwf	__display_itoa_u16@text,c
 11739  003646  0E01               	movlw	high (_display_content+40)
 11740  003648  6E1E               	movwf	__display_itoa_u16@text+1,c
 11741  00364A  EC4B  F029         	call	__display_itoa_u16	;wreg free
 11742  00364E  6E21               	movwf	__display_checked@start,c
 11743                           
 11744                           ;display.c: 438: start++;
 11745  003650  2A21               	incf	__display_checked@start,f,c
 11746                           
 11747                           ;display.c: 439: cntr = 0;
 11748  003652  0E00               	movlw	0
 11749  003654  6E22               	movwf	__display_checked@cntr,c
 11750                           
 11751                           ;display.c: 440: while(checked_line3[cntr])
 11752  003656  D01C               	goto	l1609
 11753  003658                     
 11754                           ;display.c: 441: display_content[2][start+cntr] = checked_line3[cntr++];
 11755  003658  5022               	movf	__display_checked@cntr,w,c
 11756  00365A  0D01               	mullw	1
 11757  00365C  0E72               	movlw	low _checked_line3
 11758  00365E  24F3               	addwf	prodl,w,c
 11759  003660  6EF6               	movwf	tblptrl,c
 11760  003662  0E8E               	movlw	high _checked_line3
 11761  003664  20F4               	addwfc	prodh,w,c
 11762  003666  6EF7               	movwf	tblptrh,c
 11763  003668                     	if	1	;There are 3 active tblptr bytes
 11764  003668  6AF8               	clrf	tblptru,c
 11765  00366A  0E00               	movlw	low (__mediumconst shr (0+16))
 11766  00366C  22F8               	addwfc	tblptru,f,c
 11767  00366E                     	endif
 11768  00366E  5022               	movf	__display_checked@cntr,w,c
 11769  003670  C021  F01F         	movff	__display_checked@start,??__display_checked
 11770  003674  6A20               	clrf	(??__display_checked+1)& (0+255),c
 11771  003676  261F               	addwf	??__display_checked,f,c
 11772  003678  0E00               	movlw	0
 11773  00367A  2220               	addwfc	??__display_checked+1,f,c
 11774  00367C  0E9E               	movlw	low (_display_content+40)
 11775  00367E  241F               	addwf	??__display_checked,w,c
 11776  003680  6ED9               	movwf	fsr2l,c
 11777  003682  0E01               	movlw	high (_display_content+40)
 11778  003684  2020               	addwfc	??__display_checked+1,w,c
 11779  003686  6EDA               	movwf	fsr2h,c
 11780  003688  0008               	tblrd		*
 11781  00368A  CFF5 FFDF          	movff	tablat,indf2
 11782  00368E  2A22               	incf	__display_checked@cntr,f,c
 11783  003690                     l1609:
 11784  003690  5022               	movf	__display_checked@cntr,w,c
 11785  003692  0D01               	mullw	1
 11786  003694  0E72               	movlw	low _checked_line3
 11787  003696  24F3               	addwf	prodl,w,c
 11788  003698  6EF6               	movwf	tblptrl,c
 11789  00369A  0E8E               	movlw	high _checked_line3
 11790  00369C  20F4               	addwfc	prodh,w,c
 11791  00369E  6EF7               	movwf	tblptrh,c
 11792  0036A0                     	if	1	;There are 3 active tblptr bytes
 11793  0036A0  6AF8               	clrf	tblptru,c
 11794  0036A2  0E00               	movlw	low (__mediumconst shr (0+16))
 11795  0036A4  22F8               	addwfc	tblptru,f,c
 11796  0036A6                     	endif
 11797  0036A6  0008               	tblrd		*
 11798  0036A8  50F5               	movf	tablat,w,c
 11799  0036AA  0900               	iorlw	0
 11800  0036AC  A4D8               	btfss	status,2,c
 11801  0036AE  D7D4               	goto	l1610
 11802                           
 11803                           ;display.c: 443: cntr = 0;
 11804  0036B0  0E00               	movlw	0
 11805  0036B2  6E22               	movwf	__display_checked@cntr,c
 11806                           
 11807                           ;display.c: 444: while(checked_line4[cntr])
 11808  0036B4  D017               	goto	l1612
 11809  0036B6                     
 11810                           ;display.c: 445: display_content[3][cntr] = checked_line4[cntr++];
 11811  0036B6  5022               	movf	__display_checked@cntr,w,c
 11812  0036B8  0D01               	mullw	1
 11813  0036BA  0E3E               	movlw	low _checked_line4
 11814  0036BC  24F3               	addwf	prodl,w,c
 11815  0036BE  6EF6               	movwf	tblptrl,c
 11816  0036C0  0E8D               	movlw	high _checked_line4
 11817  0036C2  20F4               	addwfc	prodh,w,c
 11818  0036C4  6EF7               	movwf	tblptrh,c
 11819  0036C6                     	if	1	;There are 3 active tblptr bytes
 11820  0036C6  6AF8               	clrf	tblptru,c
 11821  0036C8  0E00               	movlw	low (__mediumconst shr (0+16))
 11822  0036CA  22F8               	addwfc	tblptru,f,c
 11823  0036CC                     	endif
 11824  0036CC  5022               	movf	__display_checked@cntr,w,c
 11825  0036CE  0D01               	mullw	1
 11826  0036D0  0EB2               	movlw	low (_display_content+60)
 11827  0036D2  24F3               	addwf	prodl,w,c
 11828  0036D4  6ED9               	movwf	fsr2l,c
 11829  0036D6  0E01               	movlw	high (_display_content+60)
 11830  0036D8  20F4               	addwfc	prodh,w,c
 11831  0036DA  6EDA               	movwf	fsr2h,c
 11832  0036DC  0008               	tblrd		*
 11833  0036DE  CFF5 FFDF          	movff	tablat,indf2
 11834  0036E2  2A22               	incf	__display_checked@cntr,f,c
 11835  0036E4                     l1612:
 11836  0036E4  5022               	movf	__display_checked@cntr,w,c
 11837  0036E6  0D01               	mullw	1
 11838  0036E8  0E3E               	movlw	low _checked_line4
 11839  0036EA  24F3               	addwf	prodl,w,c
 11840  0036EC  6EF6               	movwf	tblptrl,c
 11841  0036EE  0E8D               	movlw	high _checked_line4
 11842  0036F0  20F4               	addwfc	prodh,w,c
 11843  0036F2  6EF7               	movwf	tblptrh,c
 11844  0036F4                     	if	1	;There are 3 active tblptr bytes
 11845  0036F4  6AF8               	clrf	tblptru,c
 11846  0036F6  0E00               	movlw	low (__mediumconst shr (0+16))
 11847  0036F8  22F8               	addwfc	tblptru,f,c
 11848  0036FA                     	endif
 11849  0036FA  0008               	tblrd		*
 11850  0036FC  50F5               	movf	tablat,w,c
 11851  0036FE  0900               	iorlw	0
 11852  003700  B4D8               	btfsc	status,2,c
 11853  003702  0012               	return	
 11854  003704  D7D8               	goto	l1613
 11855  003706                     __end_of__display_checked:
 11856                           	opt stack 0
 11857                           tblptru	equ	0xFF8
 11858                           tblptrh	equ	0xFF7
 11859                           tblptrl	equ	0xFF6
 11860                           tablat	equ	0xFF5
 11861                           prodh	equ	0xFF4
 11862                           prodl	equ	0xFF3
 11863                           intcon	equ	0xFF2
 11864                           intcon2	equ	0xFF1
 11865                           intcon3	equ	0xFF0
 11866                           postinc0	equ	0xFEE
 11867                           wreg	equ	0xFE8
 11868                           postdec1	equ	0xFE5
 11869                           plusw1	equ	0xFE3
 11870                           fsr1h	equ	0xFE2
 11871                           fsr1l	equ	0xFE1
 11872                           indf2	equ	0xFDF
 11873                           postinc2	equ	0xFDE
 11874                           plusw2	equ	0xFDB
 11875                           fsr2h	equ	0xFDA
 11876                           fsr2l	equ	0xFD9
 11877                           status	equ	0xFD8
 11878                           
 11879 ;; *************** function __display_itoa_u16 *****************
 11880 ;; Defined at:
 11881 ;;		line 85 in file "display.c"
 11882 ;; Parameters:    Size  Location     Type
 11883 ;;  value           4   24[COMRAM] unsigned long 
 11884 ;;  text            2   28[COMRAM] PTR unsigned char 
 11885 ;;		 -> display_content(80), 
 11886 ;; Auto vars:     Size  Location     Type
 11887 ;;		None
 11888 ;; Return value:  Size  Location     Type
 11889 ;;                  1    wreg      unsigned char 
 11890 ;; Registers used:
 11891 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 11892 ;; Tracked objects:
 11893 ;;		On entry : 0/0
 11894 ;;		On exit  : 0/0
 11895 ;;		Unchanged: 0/0
 11896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 11897 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11898 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11899 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11900 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 11901 ;;Total ram usage:        6 bytes
 11902 ;; Hardware stack levels used:    1
 11903 ;; Hardware stack levels required when called:    3
 11904 ;; This function calls:
 11905 ;;		_itoa
 11906 ;; This function is called by:
 11907 ;;		__display_itoa_u32
 11908 ;;		__display_verify
 11909 ;;		__display_checked
 11910 ;;		__display_failed
 11911 ;;		__display_programming
 11912 ;;		__display_done
 11913 ;; This function uses a non-reentrant model
 11914 ;;
 11915                           
 11916                           	psect	text46
 11917  005296                     __ptext46:
 11918                           	opt stack 0
 11919  005296                     __display_itoa_u16:
 11920                           	opt stack 25
 11921                           
 11922                           ;display.c: 87: itoa(text, value, 10);
 11923                           
 11924                           ;incstack = 0
 11925  005296  C01D  F011         	movff	__display_itoa_u16@text,itoa@buf
 11926  00529A  C01E  F012         	movff	__display_itoa_u16@text+1,itoa@buf+1
 11927  00529E  C019  F013         	movff	__display_itoa_u16@value,itoa@val
 11928  0052A2  C01A  F014         	movff	__display_itoa_u16@value+1,itoa@val+1
 11929  0052A6  0E00               	movlw	0
 11930  0052A8  6E16               	movwf	itoa@base+1,c
 11931  0052AA  0E0A               	movlw	10
 11932  0052AC  6E15               	movwf	itoa@base,c
 11933  0052AE  EC47  F03B         	call	_itoa	;wreg free
 11934                           
 11935                           ;display.c: 88: if(value>9999)
 11936  0052B2  501C               	movf	__display_itoa_u16@value+3,w,c
 11937  0052B4  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11938  0052B6  E106               	bnz	u8820
 11939  0052B8  0E10               	movlw	16
 11940  0052BA  5C19               	subwf	__display_itoa_u16@value,w,c
 11941  0052BC  0E27               	movlw	39
 11942  0052BE  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11943  0052C0  A0D8               	btfss	status,0,c
 11944  0052C2  D00A               	goto	l1453
 11945  0052C4                     u8820:
 11946                           
 11947                           ;display.c: 89: {;display.c: 90: *(text+5) = ' ';
 11948  0052C4  EE20 F005          	lfsr	2,5
 11949  0052C8  501D               	movf	__display_itoa_u16@text,w,c
 11950  0052CA  26D9               	addwf	fsr2l,f,c
 11951  0052CC  501E               	movf	__display_itoa_u16@text+1,w,c
 11952  0052CE  22DA               	addwfc	fsr2h,f,c
 11953  0052D0  0E20               	movlw	32
 11954  0052D2  6EDF               	movwf	indf2,c
 11955                           
 11956                           ;display.c: 91: return 5;
 11957  0052D4  0E05               	movlw	5
 11958                           
 11959                           ;display.c: 92: }
 11960  0052D6  0012               	return	
 11961  0052D8                     l1453:
 11962                           
 11963                           ;display.c: 93: else if (value>999)
 11964  0052D8  501C               	movf	__display_itoa_u16@value+3,w,c
 11965  0052DA  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11966  0052DC  E106               	bnz	u8830
 11967  0052DE  0EE8               	movlw	232
 11968  0052E0  5C19               	subwf	__display_itoa_u16@value,w,c
 11969  0052E2  0E03               	movlw	3
 11970  0052E4  581A               	subwfb	__display_itoa_u16@value+1,w,c
 11971  0052E6  A0D8               	btfss	status,0,c
 11972  0052E8  D00A               	goto	l1456
 11973  0052EA                     u8830:
 11974                           
 11975                           ;display.c: 94: {;display.c: 95: *(text+4) = ' ';
 11976  0052EA  EE20 F004          	lfsr	2,4
 11977  0052EE  501D               	movf	__display_itoa_u16@text,w,c
 11978  0052F0  26D9               	addwf	fsr2l,f,c
 11979  0052F2  501E               	movf	__display_itoa_u16@text+1,w,c
 11980  0052F4  22DA               	addwfc	fsr2h,f,c
 11981  0052F6  0E20               	movlw	32
 11982  0052F8  6EDF               	movwf	indf2,c
 11983                           
 11984                           ;display.c: 96: return 4;
 11985  0052FA  0E04               	movlw	4
 11986                           
 11987                           ;display.c: 97: }
 11988  0052FC  0012               	return	
 11989  0052FE                     l1456:
 11990                           
 11991                           ;display.c: 98: else if (value>99)
 11992  0052FE  501C               	movf	__display_itoa_u16@value+3,w,c
 11993  005300  101B               	iorwf	__display_itoa_u16@value+2,w,c
 11994  005302  101A               	iorwf	__display_itoa_u16@value+1,w,c
 11995  005304  E104               	bnz	u8840
 11996  005306  0E64               	movlw	100
 11997  005308  5C19               	subwf	__display_itoa_u16@value,w,c
 11998  00530A  A0D8               	btfss	status,0,c
 11999  00530C  D00A               	goto	l1458
 12000  00530E                     u8840:
 12001                           
 12002                           ;display.c: 99: {;display.c: 100: *(text+3) = ' ';
 12003  00530E  EE20 F003          	lfsr	2,3
 12004  005312  501D               	movf	__display_itoa_u16@text,w,c
 12005  005314  26D9               	addwf	fsr2l,f,c
 12006  005316  501E               	movf	__display_itoa_u16@text+1,w,c
 12007  005318  22DA               	addwfc	fsr2h,f,c
 12008  00531A  0E20               	movlw	32
 12009  00531C  6EDF               	movwf	indf2,c
 12010                           
 12011                           ;display.c: 101: return 3;
 12012  00531E  0E03               	movlw	3
 12013                           
 12014                           ;display.c: 102: }
 12015  005320  0012               	return	
 12016  005322                     l1458:
 12017                           
 12018                           ;display.c: 103: else if (value>9)
 12019  005322  501C               	movf	__display_itoa_u16@value+3,w,c
 12020  005324  101B               	iorwf	__display_itoa_u16@value+2,w,c
 12021  005326  101A               	iorwf	__display_itoa_u16@value+1,w,c
 12022  005328  E104               	bnz	u8850
 12023  00532A  0E0A               	movlw	10
 12024  00532C  5C19               	subwf	__display_itoa_u16@value,w,c
 12025  00532E  A0D8               	btfss	status,0,c
 12026  005330  D00A               	goto	l1460
 12027  005332                     u8850:
 12028                           
 12029                           ;display.c: 104: {;display.c: 105: *(text+2) = ' ';
 12030  005332  EE20 F002          	lfsr	2,2
 12031  005336  501D               	movf	__display_itoa_u16@text,w,c
 12032  005338  26D9               	addwf	fsr2l,f,c
 12033  00533A  501E               	movf	__display_itoa_u16@text+1,w,c
 12034  00533C  22DA               	addwfc	fsr2h,f,c
 12035  00533E  0E20               	movlw	32
 12036  005340  6EDF               	movwf	indf2,c
 12037                           
 12038                           ;display.c: 106: return 2;
 12039  005342  0E02               	movlw	2
 12040                           
 12041                           ;display.c: 107: }
 12042  005344  0012               	return	
 12043  005346                     l1460:
 12044                           
 12045                           ;display.c: 108: else;display.c: 109: {;display.c: 110: *(text+1) = ' ';
 12046  005346  EE20 F001          	lfsr	2,1
 12047  00534A  501D               	movf	__display_itoa_u16@text,w,c
 12048  00534C  26D9               	addwf	fsr2l,f,c
 12049  00534E  501E               	movf	__display_itoa_u16@text+1,w,c
 12050  005350  22DA               	addwfc	fsr2h,f,c
 12051  005352  0E20               	movlw	32
 12052  005354  6EDF               	movwf	indf2,c
 12053                           
 12054                           ;display.c: 111: return 1;
 12055  005356  0E01               	movlw	1
 12056  005358  0012               	return	
 12057  00535A                     __end_of__display_itoa_u16:
 12058                           	opt stack 0
 12059                           tblptru	equ	0xFF8
 12060                           tblptrh	equ	0xFF7
 12061                           tblptrl	equ	0xFF6
 12062                           tablat	equ	0xFF5
 12063                           prodh	equ	0xFF4
 12064                           prodl	equ	0xFF3
 12065                           intcon	equ	0xFF2
 12066                           intcon2	equ	0xFF1
 12067                           intcon3	equ	0xFF0
 12068                           postinc0	equ	0xFEE
 12069                           wreg	equ	0xFE8
 12070                           postdec1	equ	0xFE5
 12071                           plusw1	equ	0xFE3
 12072                           fsr1h	equ	0xFE2
 12073                           fsr1l	equ	0xFE1
 12074                           indf2	equ	0xFDF
 12075                           postinc2	equ	0xFDE
 12076                           plusw2	equ	0xFDB
 12077                           fsr2h	equ	0xFDA
 12078                           fsr2l	equ	0xFD9
 12079                           status	equ	0xFD8
 12080                           
 12081 ;; *************** function _itoa *****************
 12082 ;; Defined at:
 12083 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 12084 ;; Parameters:    Size  Location     Type
 12085 ;;  buf             2   16[COMRAM] PTR unsigned char 
 12086 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 12087 ;;  val             2   18[COMRAM] int 
 12088 ;;  base            2   20[COMRAM] int 
 12089 ;; Auto vars:     Size  Location     Type
 12090 ;;  cp              2   22[COMRAM] PTR unsigned char 
 12091 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 12092 ;; Return value:  Size  Location     Type
 12093 ;;                  2   16[COMRAM] PTR unsigned char 
 12094 ;; Registers used:
 12095 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12096 ;; Tracked objects:
 12097 ;;		On entry : 0/0
 12098 ;;		On exit  : 0/0
 12099 ;;		Unchanged: 0/0
 12100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12101 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12102 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12103 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12104 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12105 ;;Total ram usage:        8 bytes
 12106 ;; Hardware stack levels used:    1
 12107 ;; Hardware stack levels required when called:    2
 12108 ;; This function calls:
 12109 ;;		_utoa
 12110 ;; This function is called by:
 12111 ;;		__display_itoa_u16
 12112 ;;		__display_itoa_u32
 12113 ;;		__display_itoa
 12114 ;; This function uses a non-reentrant model
 12115 ;;
 12116                           
 12117                           	psect	text47
 12118  00768E                     __ptext47:
 12119                           	opt stack 0
 12120  00768E                     _itoa:
 12121                           	opt stack 25
 12122                           
 12123                           ;incstack = 0
 12124  00768E  C011  F017         	movff	itoa@buf,itoa@cp
 12125  007692  C012  F018         	movff	itoa@buf+1,itoa@cp+1
 12126  007696  AE14               	btfss	itoa@val+1,7,c
 12127  007698  D00C               	goto	l3473
 12128  00769A  C011  FFD9         	movff	itoa@buf,fsr2l
 12129  00769E  C012  FFDA         	movff	itoa@buf+1,fsr2h
 12130  0076A2  0E2D               	movlw	45
 12131  0076A4  6EDF               	movwf	indf2,c
 12132  0076A6  4A11               	infsnz	itoa@buf,f,c
 12133  0076A8  2A12               	incf	itoa@buf+1,f,c
 12134  0076AA  6C13               	negf	itoa@val,c
 12135  0076AC  1E14               	comf	itoa@val+1,f,c
 12136  0076AE  B0D8               	btfsc	status,0,c
 12137  0076B0  2A14               	incf	itoa@val+1,f,c
 12138  0076B2                     l3473:
 12139  0076B2  C011  F008         	movff	itoa@buf,utoa@buf
 12140  0076B6  C012  F009         	movff	itoa@buf+1,utoa@buf+1
 12141  0076BA  C013  F00A         	movff	itoa@val,utoa@val
 12142  0076BE  C014  F00B         	movff	itoa@val+1,utoa@val+1
 12143  0076C2  C015  F00C         	movff	itoa@base,utoa@base
 12144  0076C6  C016  F00D         	movff	itoa@base+1,utoa@base+1
 12145  0076CA  ECE2  F02D         	call	_utoa	;wreg free
 12146  0076CE  0012               	return	
 12147  0076D0                     __end_of_itoa:
 12148                           	opt stack 0
 12149                           tblptru	equ	0xFF8
 12150                           tblptrh	equ	0xFF7
 12151                           tblptrl	equ	0xFF6
 12152                           tablat	equ	0xFF5
 12153                           prodh	equ	0xFF4
 12154                           prodl	equ	0xFF3
 12155                           intcon	equ	0xFF2
 12156                           intcon2	equ	0xFF1
 12157                           intcon3	equ	0xFF0
 12158                           postinc0	equ	0xFEE
 12159                           wreg	equ	0xFE8
 12160                           postdec1	equ	0xFE5
 12161                           plusw1	equ	0xFE3
 12162                           fsr1h	equ	0xFE2
 12163                           fsr1l	equ	0xFE1
 12164                           indf2	equ	0xFDF
 12165                           postinc2	equ	0xFDE
 12166                           plusw2	equ	0xFDB
 12167                           fsr2h	equ	0xFDA
 12168                           fsr2l	equ	0xFD9
 12169                           status	equ	0xFD8
 12170                           
 12171 ;; *************** function _utoa *****************
 12172 ;; Defined at:
 12173 ;;		line 17 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\itoa.c"
 12174 ;; Parameters:    Size  Location     Type
 12175 ;;  buf             2    7[COMRAM] PTR unsigned char 
 12176 ;;		 -> _display_itoa@tmp(10), display_content(80), 
 12177 ;;  val             2    9[COMRAM] unsigned int 
 12178 ;;  base            2   11[COMRAM] int 
 12179 ;; Auto vars:     Size  Location     Type
 12180 ;;  v               2   13[COMRAM] unsigned int 
 12181 ;;  c               1   15[COMRAM] unsigned char 
 12182 ;; Return value:  Size  Location     Type
 12183 ;;                  2    7[COMRAM] PTR unsigned char 
 12184 ;; Registers used:
 12185 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 12186 ;; Tracked objects:
 12187 ;;		On entry : 0/0
 12188 ;;		On exit  : 0/0
 12189 ;;		Unchanged: 0/0
 12190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12191 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12192 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12193 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12194 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12195 ;;Total ram usage:        9 bytes
 12196 ;; Hardware stack levels used:    1
 12197 ;; Hardware stack levels required when called:    1
 12198 ;; This function calls:
 12199 ;;		___lwdiv
 12200 ;;		___lwmod
 12201 ;; This function is called by:
 12202 ;;		_itoa
 12203 ;; This function uses a non-reentrant model
 12204 ;;
 12205                           
 12206                           	psect	text48
 12207  005BC4                     __ptext48:
 12208                           	opt stack 0
 12209  005BC4                     _utoa:
 12210                           	opt stack 25
 12211                           
 12212                           ;incstack = 0
 12213  005BC4  C00A  F00E         	movff	utoa@val,utoa@v
 12214  005BC8  C00B  F00F         	movff	utoa@val+1,utoa@v+1
 12215  005BCC  C00E  F001         	movff	utoa@v,___lwdiv@dividend
 12216  005BD0  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
 12217  005BD4  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 12218  005BD8  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 12219  005BDC  EC17  F03A         	call	___lwdiv	;wreg free
 12220  005BE0  C001  F00E         	movff	?___lwdiv,utoa@v
 12221  005BE4  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
 12222  005BE8  4A08               	infsnz	utoa@buf,f,c
 12223  005BEA  2A09               	incf	utoa@buf+1,f,c
 12224  005BEC  500E               	movf	utoa@v,w,c
 12225  005BEE  100F               	iorwf	utoa@v+1,w,c
 12226  005BF0  A4D8               	btfss	status,2,c
 12227  005BF2  D7EC               	goto	l3477
 12228  005BF4  C008  FFD9         	movff	utoa@buf,fsr2l
 12229  005BF8  C009  FFDA         	movff	utoa@buf+1,fsr2h
 12230  005BFC  0E00               	movlw	0
 12231  005BFE  6EDF               	movwf	indf2,c
 12232  005C00  0608               	decf	utoa@buf,f,c
 12233  005C02  A0D8               	btfss	status,0,c
 12234  005C04  0609               	decf	utoa@buf+1,f,c
 12235  005C06  C00A  F001         	movff	utoa@val,___lwmod@dividend
 12236  005C0A  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
 12237  005C0E  C00C  F003         	movff	utoa@base,___lwmod@divisor
 12238  005C12  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
 12239  005C16  EC68  F03B         	call	___lwmod	;wreg free
 12240  005C1A  5001               	movf	?___lwmod,w,c
 12241  005C1C  6E10               	movwf	utoa@c,c
 12242  005C1E  C00A  F001         	movff	utoa@val,___lwdiv@dividend
 12243  005C22  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
 12244  005C26  C00C  F003         	movff	utoa@base,___lwdiv@divisor
 12245  005C2A  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
 12246  005C2E  EC17  F03A         	call	___lwdiv	;wreg free
 12247  005C32  C001  F00A         	movff	?___lwdiv,utoa@val
 12248  005C36  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
 12249  005C3A  0E09               	movlw	9
 12250  005C3C  6410               	cpfsgt	utoa@c,c
 12251  005C3E  D002               	goto	l3480
 12252  005C40  0E07               	movlw	7
 12253  005C42  2610               	addwf	utoa@c,f,c
 12254  005C44                     l3480:
 12255  005C44  0E30               	movlw	48
 12256  005C46  2610               	addwf	utoa@c,f,c
 12257  005C48  C008  FFD9         	movff	utoa@buf,fsr2l
 12258  005C4C  C009  FFDA         	movff	utoa@buf+1,fsr2h
 12259  005C50  C010  FFDF         	movff	utoa@c,indf2
 12260  005C54  0608               	decf	utoa@buf,f,c
 12261  005C56  A0D8               	btfss	status,0,c
 12262  005C58  0609               	decf	utoa@buf+1,f,c
 12263  005C5A  500A               	movf	utoa@val,w,c
 12264  005C5C  100B               	iorwf	utoa@val+1,w,c
 12265  005C5E  A4D8               	btfss	status,2,c
 12266  005C60  D7D2               	goto	l3479
 12267                           
 12268                           ;	Return value of _utoa is never used
 12269  005C62  4A08               	infsnz	utoa@buf,f,c
 12270  005C64  2A09               	incf	utoa@buf+1,f,c
 12271  005C66  0012               	return	
 12272  005C68                     __end_of_utoa:
 12273                           	opt stack 0
 12274                           tblptru	equ	0xFF8
 12275                           tblptrh	equ	0xFF7
 12276                           tblptrl	equ	0xFF6
 12277                           tablat	equ	0xFF5
 12278                           prodh	equ	0xFF4
 12279                           prodl	equ	0xFF3
 12280                           intcon	equ	0xFF2
 12281                           intcon2	equ	0xFF1
 12282                           intcon3	equ	0xFF0
 12283                           postinc0	equ	0xFEE
 12284                           wreg	equ	0xFE8
 12285                           postdec1	equ	0xFE5
 12286                           plusw1	equ	0xFE3
 12287                           fsr1h	equ	0xFE2
 12288                           fsr1l	equ	0xFE1
 12289                           indf2	equ	0xFDF
 12290                           postinc2	equ	0xFDE
 12291                           plusw2	equ	0xFDB
 12292                           fsr2h	equ	0xFDA
 12293                           fsr2l	equ	0xFD9
 12294                           status	equ	0xFD8
 12295                           
 12296 ;; *************** function ___lwmod *****************
 12297 ;; Defined at:
 12298 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwmod.c"
 12299 ;; Parameters:    Size  Location     Type
 12300 ;;  dividend        2    0[COMRAM] unsigned int 
 12301 ;;  divisor         2    2[COMRAM] unsigned int 
 12302 ;; Auto vars:     Size  Location     Type
 12303 ;;  counter         1    4[COMRAM] unsigned char 
 12304 ;; Return value:  Size  Location     Type
 12305 ;;                  2    0[COMRAM] unsigned int 
 12306 ;; Registers used:
 12307 ;;		wreg, status,2, status,0
 12308 ;; Tracked objects:
 12309 ;;		On entry : 0/0
 12310 ;;		On exit  : 0/0
 12311 ;;		Unchanged: 0/0
 12312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12313 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12316 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12317 ;;Total ram usage:        5 bytes
 12318 ;; Hardware stack levels used:    1
 12319 ;; This function calls:
 12320 ;;		Nothing
 12321 ;; This function is called by:
 12322 ;;		_utoa
 12323 ;; This function uses a non-reentrant model
 12324 ;;
 12325                           
 12326                           	psect	text49
 12327  0076D0                     __ptext49:
 12328                           	opt stack 0
 12329  0076D0                     ___lwmod:
 12330                           	opt stack 25
 12331                           
 12332                           ;incstack = 0
 12333  0076D0  5003               	movf	___lwmod@divisor,w,c
 12334  0076D2  1004               	iorwf	___lwmod@divisor+1,w,c
 12335  0076D4  B4D8               	btfsc	status,2,c
 12336  0076D6  D018               	goto	l3304
 12337  0076D8  0E01               	movlw	1
 12338  0076DA  6E05               	movwf	___lwmod@counter,c
 12339  0076DC  D004               	goto	l3299
 12340  0076DE  90D8               	bcf	status,0,c
 12341  0076E0  3603               	rlcf	___lwmod@divisor,f,c
 12342  0076E2  3604               	rlcf	___lwmod@divisor+1,f,c
 12343  0076E4  2A05               	incf	___lwmod@counter,f,c
 12344  0076E6                     l3299:
 12345  0076E6  AE04               	btfss	___lwmod@divisor+1,7,c
 12346  0076E8  D7FA               	goto	l3300
 12347  0076EA                     u7010:
 12348  0076EA  5003               	movf	___lwmod@divisor,w,c
 12349  0076EC  5C01               	subwf	___lwmod@dividend,w,c
 12350  0076EE  5004               	movf	___lwmod@divisor+1,w,c
 12351  0076F0  5802               	subwfb	___lwmod@dividend+1,w,c
 12352  0076F2  A0D8               	btfss	status,0,c
 12353  0076F4  D004               	goto	l3303
 12354  0076F6  5003               	movf	___lwmod@divisor,w,c
 12355  0076F8  5E01               	subwf	___lwmod@dividend,f,c
 12356  0076FA  5004               	movf	___lwmod@divisor+1,w,c
 12357  0076FC  5A02               	subwfb	___lwmod@dividend+1,f,c
 12358  0076FE                     l3303:
 12359  0076FE  90D8               	bcf	status,0,c
 12360  007700  3204               	rrcf	___lwmod@divisor+1,f,c
 12361  007702  3203               	rrcf	___lwmod@divisor,f,c
 12362  007704  2E05               	decfsz	___lwmod@counter,f,c
 12363  007706  D7F1               	goto	u7010
 12364  007708                     l3304:
 12365  007708  C001  F001         	movff	___lwmod@dividend,?___lwmod
 12366  00770C  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
 12367  007710  0012               	return		;funcret
 12368  007712                     __end_of___lwmod:
 12369                           	opt stack 0
 12370                           tblptru	equ	0xFF8
 12371                           tblptrh	equ	0xFF7
 12372                           tblptrl	equ	0xFF6
 12373                           tablat	equ	0xFF5
 12374                           prodh	equ	0xFF4
 12375                           prodl	equ	0xFF3
 12376                           intcon	equ	0xFF2
 12377                           intcon2	equ	0xFF1
 12378                           intcon3	equ	0xFF0
 12379                           postinc0	equ	0xFEE
 12380                           wreg	equ	0xFE8
 12381                           postdec1	equ	0xFE5
 12382                           plusw1	equ	0xFE3
 12383                           fsr1h	equ	0xFE2
 12384                           fsr1l	equ	0xFE1
 12385                           indf2	equ	0xFDF
 12386                           postinc2	equ	0xFDE
 12387                           plusw2	equ	0xFDB
 12388                           fsr2h	equ	0xFDA
 12389                           fsr2l	equ	0xFD9
 12390                           status	equ	0xFD8
 12391                           
 12392 ;; *************** function ___lwdiv *****************
 12393 ;; Defined at:
 12394 ;;		line 7 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\lwdiv.c"
 12395 ;; Parameters:    Size  Location     Type
 12396 ;;  dividend        2    0[COMRAM] unsigned int 
 12397 ;;  divisor         2    2[COMRAM] unsigned int 
 12398 ;; Auto vars:     Size  Location     Type
 12399 ;;  quotient        2    4[COMRAM] unsigned int 
 12400 ;;  counter         1    6[COMRAM] unsigned char 
 12401 ;; Return value:  Size  Location     Type
 12402 ;;                  2    0[COMRAM] unsigned int 
 12403 ;; Registers used:
 12404 ;;		wreg, status,2, status,0
 12405 ;; Tracked objects:
 12406 ;;		On entry : 0/0
 12407 ;;		On exit  : 0/0
 12408 ;;		Unchanged: 0/0
 12409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12410 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12411 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12412 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12413 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12414 ;;Total ram usage:        7 bytes
 12415 ;; Hardware stack levels used:    1
 12416 ;; This function calls:
 12417 ;;		Nothing
 12418 ;; This function is called by:
 12419 ;;		_utoa
 12420 ;; This function uses a non-reentrant model
 12421 ;;
 12422                           
 12423                           	psect	text50
 12424  00742E                     __ptext50:
 12425                           	opt stack 0
 12426  00742E                     ___lwdiv:
 12427                           	opt stack 25
 12428                           
 12429                           ;incstack = 0
 12430  00742E  0E00               	movlw	0
 12431  007430  6E06               	movwf	___lwdiv@quotient+1,c
 12432  007432  0E00               	movlw	0
 12433  007434  6E05               	movwf	___lwdiv@quotient,c
 12434  007436  5003               	movf	___lwdiv@divisor,w,c
 12435  007438  1004               	iorwf	___lwdiv@divisor+1,w,c
 12436  00743A  B4D8               	btfsc	status,2,c
 12437  00743C  D01C               	goto	l3294
 12438  00743E  0E01               	movlw	1
 12439  007440  6E07               	movwf	___lwdiv@counter,c
 12440  007442  D004               	goto	l3289
 12441  007444  90D8               	bcf	status,0,c
 12442  007446  3603               	rlcf	___lwdiv@divisor,f,c
 12443  007448  3604               	rlcf	___lwdiv@divisor+1,f,c
 12444  00744A  2A07               	incf	___lwdiv@counter,f,c
 12445  00744C                     l3289:
 12446  00744C  AE04               	btfss	___lwdiv@divisor+1,7,c
 12447  00744E  D7FA               	goto	l3290
 12448  007450                     u6980:
 12449  007450  90D8               	bcf	status,0,c
 12450  007452  3605               	rlcf	___lwdiv@quotient,f,c
 12451  007454  3606               	rlcf	___lwdiv@quotient+1,f,c
 12452  007456  5003               	movf	___lwdiv@divisor,w,c
 12453  007458  5C01               	subwf	___lwdiv@dividend,w,c
 12454  00745A  5004               	movf	___lwdiv@divisor+1,w,c
 12455  00745C  5802               	subwfb	___lwdiv@dividend+1,w,c
 12456  00745E  A0D8               	btfss	status,0,c
 12457  007460  D005               	goto	l3293
 12458  007462  5003               	movf	___lwdiv@divisor,w,c
 12459  007464  5E01               	subwf	___lwdiv@dividend,f,c
 12460  007466  5004               	movf	___lwdiv@divisor+1,w,c
 12461  007468  5A02               	subwfb	___lwdiv@dividend+1,f,c
 12462  00746A  8005               	bsf	___lwdiv@quotient,0,c
 12463  00746C                     l3293:
 12464  00746C  90D8               	bcf	status,0,c
 12465  00746E  3204               	rrcf	___lwdiv@divisor+1,f,c
 12466  007470  3203               	rrcf	___lwdiv@divisor,f,c
 12467  007472  2E07               	decfsz	___lwdiv@counter,f,c
 12468  007474  D7ED               	goto	u6980
 12469  007476                     l3294:
 12470  007476  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
 12471  00747A  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
 12472  00747E  0012               	return		;funcret
 12473  007480                     __end_of___lwdiv:
 12474                           	opt stack 0
 12475                           tblptru	equ	0xFF8
 12476                           tblptrh	equ	0xFF7
 12477                           tblptrl	equ	0xFF6
 12478                           tablat	equ	0xFF5
 12479                           prodh	equ	0xFF4
 12480                           prodl	equ	0xFF3
 12481                           intcon	equ	0xFF2
 12482                           intcon2	equ	0xFF1
 12483                           intcon3	equ	0xFF0
 12484                           postinc0	equ	0xFEE
 12485                           wreg	equ	0xFE8
 12486                           postdec1	equ	0xFE5
 12487                           plusw1	equ	0xFE3
 12488                           fsr1h	equ	0xFE2
 12489                           fsr1l	equ	0xFE1
 12490                           indf2	equ	0xFDF
 12491                           postinc2	equ	0xFDE
 12492                           plusw2	equ	0xFDB
 12493                           fsr2h	equ	0xFDA
 12494                           fsr2l	equ	0xFD9
 12495                           status	equ	0xFD8
 12496                           
 12497 ;; *************** function _bootloader_run *****************
 12498 ;; Defined at:
 12499 ;;		line 60 in file "bootloader.c"
 12500 ;; Parameters:    Size  Location     Type
 12501 ;;  timeslot        1    wreg     unsigned char 
 12502 ;; Auto vars:     Size  Location     Type
 12503 ;;  timeslot        1   92[COMRAM] unsigned char 
 12504 ;; Return value:  Size  Location     Type
 12505 ;;                  1    wreg      void 
 12506 ;; Registers used:
 12507 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12508 ;; Tracked objects:
 12509 ;;		On entry : 0/0
 12510 ;;		On exit  : 0/0
 12511 ;;		Unchanged: 0/0
 12512 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12513 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12514 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12515 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12516 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12517 ;;Total ram usage:        1 bytes
 12518 ;; Hardware stack levels used:    1
 12519 ;; Hardware stack levels required when called:    9
 12520 ;; This function calls:
 12521 ;;		__bootloader_find_file
 12522 ;;		__bootloader_program
 12523 ;;		__bootloader_verify_file
 12524 ;; This function is called by:
 12525 ;;		_main
 12526 ;; This function uses a non-reentrant model
 12527 ;;
 12528                           
 12529                           	psect	text51
 12530  006FC2                     __ptext51:
 12531                           	opt stack 0
 12532  006FC2                     _bootloader_run:
 12533                           	opt stack 21
 12534                           
 12535                           ;incstack = 0
 12536                           ;bootloader_run@timeslot stored from wreg
 12537  006FC2  6E5D               	movwf	bootloader_run@timeslot,c
 12538                           
 12539                           ;bootloader.c: 62: switch(os.bootloader_mode)
 12540  006FC4  D015               	goto	l2270
 12541  006FC6                     
 12542                           ;bootloader.c: 65: if(timeslot==0)
 12543  006FC6  505D               	movf	bootloader_run@timeslot,w,c
 12544  006FC8  A4D8               	btfss	status,2,c
 12545  006FCA  0012               	return	
 12546                           
 12547                           ;bootloader.c: 66: {;bootloader.c: 67: _bootloader_find_file();
 12548  006FCC  EC3D  F02D         	call	__bootloader_find_file	;wreg free
 12549                           
 12550                           ;bootloader.c: 68: };bootloader.c: 69: break;
 12551  006FD0  0012               	return	
 12552  006FD2                     
 12553                           ;bootloader.c: 72: if(timeslot==0)
 12554  006FD2  505D               	movf	bootloader_run@timeslot,w,c
 12555  006FD4  A4D8               	btfss	status,2,c
 12556  006FD6  0012               	return	
 12557                           
 12558                           ;bootloader.c: 73: {;bootloader.c: 74: _bootloader_find_file();
 12559  006FD8  EC3D  F02D         	call	__bootloader_find_file	;wreg free
 12560                           
 12561                           ;bootloader.c: 75: };bootloader.c: 76: break;
 12562  006FDC  0012               	return	
 12563  006FDE                     
 12564                           ;bootloader.c: 79: _bootloader_verify_file();
 12565  006FDE  EC16  F009         	call	__bootloader_verify_file	;wreg free
 12566                           
 12567                           ;bootloader.c: 86: break;
 12568                           
 12569                           ;bootloader.c: 85: case BOOTLOADER_MODE_CHECK_FAILED:
 12570                           
 12571                           ;bootloader.c: 83: break;
 12572                           
 12573                           ;bootloader.c: 82: case BOOTLOADER_MODE_CHECK_COMPLETE:
 12574                           
 12575                           ;bootloader.c: 80: break;
 12576  006FE2  0012               	return	
 12577  006FE4                     
 12578                           ;bootloader.c: 89: if(timeslot==0)
 12579  006FE4  505D               	movf	bootloader_run@timeslot,w,c
 12580  006FE6  A4D8               	btfss	status,2,c
 12581  006FE8  0012               	return	
 12582                           
 12583                           ;bootloader.c: 90: {;bootloader.c: 91: _bootloader_program();
 12584  006FEA  ECE4  F005         	call	__bootloader_program	;wreg free
 12585                           
 12586                           ;bootloader.c: 97: }
 12587                           
 12588                           ;bootloader.c: 96: break;
 12589                           
 12590                           ;bootloader.c: 95: case BOOTLOADER_MODE_DONE:
 12591                           
 12592                           ;bootloader.c: 92: };bootloader.c: 93: break;
 12593  006FEE  0012               	return	
 12594  006FF0                     l2270:
 12595  006FF0  0100               	movlb	0	; () banked
 12596  006FF2  5164               	movf	(_os+4)& (0+255),w,b	;volatile
 12597                           
 12598                           ; Switch size 1, requested type "space"
 12599                           ; Number of cases is 7, Range of values is 16 to 112
 12600                           ; switch strategies available:
 12601                           ; Name         Instructions Cycles
 12602                           ; simple_byte           22    12 (average)
 12603                           ;	Chosen strategy is simple_byte
 12604  006FF4  0A10               	xorlw	16	; case 16
 12605  006FF6  B4D8               	btfsc	status,2,c
 12606  006FF8  D7E6               	goto	l2271
 12607  006FFA  0A30               	xorlw	48	; case 32
 12608  006FFC  B4D8               	btfsc	status,2,c
 12609  006FFE  D7E9               	goto	l2274
 12610  007000  0A10               	xorlw	16	; case 48
 12611  007002  B4D8               	btfsc	status,2,c
 12612  007004  D7EC               	goto	l2276
 12613  007006  0A70               	xorlw	112	; case 64
 12614  007008  B4D8               	btfsc	status,2,c
 12615  00700A  0012               	return	
 12616  00700C  0A10               	xorlw	16	; case 80
 12617  00700E  B4D8               	btfsc	status,2,c
 12618  007010  0012               	return	
 12619  007012  0A30               	xorlw	48	; case 96
 12620  007014  B4D8               	btfsc	status,2,c
 12621  007016  D7E6               	goto	l2279
 12622  007018  0A10               	xorlw	16	; case 112
 12623  00701A  0012               	return	
 12624  00701C                     __end_of_bootloader_run:
 12625                           	opt stack 0
 12626                           tblptru	equ	0xFF8
 12627                           tblptrh	equ	0xFF7
 12628                           tblptrl	equ	0xFF6
 12629                           tablat	equ	0xFF5
 12630                           prodh	equ	0xFF4
 12631                           prodl	equ	0xFF3
 12632                           intcon	equ	0xFF2
 12633                           intcon2	equ	0xFF1
 12634                           intcon3	equ	0xFF0
 12635                           postinc0	equ	0xFEE
 12636                           wreg	equ	0xFE8
 12637                           postdec1	equ	0xFE5
 12638                           plusw1	equ	0xFE3
 12639                           fsr1h	equ	0xFE2
 12640                           fsr1l	equ	0xFE1
 12641                           indf2	equ	0xFDF
 12642                           postinc2	equ	0xFDE
 12643                           plusw2	equ	0xFDB
 12644                           fsr2h	equ	0xFDA
 12645                           fsr2l	equ	0xFD9
 12646                           status	equ	0xFD8
 12647                           
 12648 ;; *************** function __bootloader_verify_file *****************
 12649 ;; Defined at:
 12650 ;;		line 176 in file "bootloader.c"
 12651 ;; Parameters:    Size  Location     Type
 12652 ;;		None
 12653 ;; Auto vars:     Size  Location     Type
 12654 ;;  address32       4   50[BANK0 ] unsigned long 
 12655 ;;  return_value    4   46[BANK0 ] unsigned long 
 12656 ;;  rec_counter     1   45[BANK0 ] unsigned char 
 12657 ;; Return value:  Size  Location     Type
 12658 ;;                  1    wreg      void 
 12659 ;; Registers used:
 12660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 12661 ;; Tracked objects:
 12662 ;;		On entry : 0/0
 12663 ;;		On exit  : 0/0
 12664 ;;		Unchanged: 0/0
 12665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 12666 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12667 ;;      Locals:         0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12668 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12669 ;;      Totals:         8       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 12670 ;;Total ram usage:       17 bytes
 12671 ;; Hardware stack levels used:    1
 12672 ;; Hardware stack levels required when called:    8
 12673 ;; This function calls:
 12674 ;;		__bootloader_check_address
 12675 ;;		_fat_get_file_size
 12676 ;;		_fat_read_from_file
 12677 ;;		_parseHexFileEntry
 12678 ;; This function is called by:
 12679 ;;		_bootloader_run
 12680 ;; This function uses a non-reentrant model
 12681 ;;
 12682                           
 12683                           	psect	text52
 12684  00122C                     __ptext52:
 12685                           	opt stack 0
 12686  00122C                     __bootloader_verify_file:
 12687                           	opt stack 21
 12688                           
 12689                           ;bootloader.c: 178: uint8_t rec_counter;;bootloader.c: 179: uint32_t return_value = 0;
 12690                           
 12691                           ;incstack = 0
 12692  00122C  0E00               	movlw	0
 12693  00122E  0100               	movlb	0	; () banked
 12694  001230  6FE3               	movwf	__bootloader_verify_file@return_value& (0+255),b
 12695  001232  0E00               	movlw	0
 12696  001234  6FE4               	movwf	(__bootloader_verify_file@return_value+1)& (0+255),b
 12697  001236  0E00               	movlw	0
 12698  001238  6FE5               	movwf	(__bootloader_verify_file@return_value+2)& (0+255),b
 12699  00123A  0E00               	movlw	0
 12700  00123C  6FE6               	movwf	(__bootloader_verify_file@return_value+3)& (0+255),b
 12701                           
 12702                           ; BSR set to: 0
 12703                           ;bootloader.c: 180: uint32_t address32;;bootloader.c: 183: hex_file_size = fat_get_file_
      +                          size(file_number);
 12704  00123E  51FE               	movf	_file_number& (0+255),w,b
 12705  001240  EC6A  F034         	call	_fat_get_file_size
 12706  001244  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 12707  001248  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 12708  00124C  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 12709  001250  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 12710                           
 12711                           ;bootloader.c: 186: for(rec_counter=0; rec_counter<1; ++rec_counter)
 12712  001254  0E00               	movlw	0
 12713  001256  0100               	movlb	0	; () banked
 12714  001258  6FE2               	movwf	__bootloader_verify_file@rec_counter& (0+255),b
 12715  00125A                     l14069:
 12716                           
 12717                           ; BSR set to: 0
 12718  00125A  51E2               	movf	__bootloader_verify_file@rec_counter& (0+255),w,b
 12719  00125C  A4D8               	btfss	status,2,c
 12720  00125E  0012               	return	
 12721                           
 12722                           ; BSR set to: 0
 12723                           ;bootloader.c: 187: {;bootloader.c: 189: if((hex_file_size-hex_file_offset)>=50)
 12724                           
 12725                           ; BSR set to: 0
 12726                           
 12727                           ; BSR set to: 0
 12728  001260  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12729  001264  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12730  001268  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12731  00126C  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12732  001270  1E55               	comf	??__bootloader_verify_file,f,c
 12733  001272  1E56               	comf	??__bootloader_verify_file+1,f,c
 12734  001274  1E57               	comf	??__bootloader_verify_file+2,f,c
 12735  001276  1E58               	comf	??__bootloader_verify_file+3,f,c
 12736  001278  2A55               	incf	??__bootloader_verify_file,f,c
 12737  00127A  0E00               	movlw	0
 12738  00127C  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12739  00127E  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12740  001280  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12741  001282  5178               	movf	_hex_file_size& (0+255),w,b
 12742  001284  2455               	addwf	??__bootloader_verify_file,w,c
 12743  001286  6E59               	movwf	(??__bootloader_verify_file+4)& (0+255),c
 12744  001288  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12745  00128A  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12746  00128C  6E5A               	movwf	(??__bootloader_verify_file+5)& (0+255),c
 12747  00128E  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12748  001290  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12749  001292  6E5B               	movwf	(??__bootloader_verify_file+6)& (0+255),c
 12750  001294  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12751  001296  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12752  001298  6E5C               	movwf	(??__bootloader_verify_file+7)& (0+255),c
 12753  00129A  505C               	movf	??__bootloader_verify_file+7,w,c
 12754  00129C  105B               	iorwf	??__bootloader_verify_file+6,w,c
 12755  00129E  105A               	iorwf	??__bootloader_verify_file+5,w,c
 12756  0012A0  E104               	bnz	u11000
 12757  0012A2  0E32               	movlw	50
 12758  0012A4  5C59               	subwf	??__bootloader_verify_file+4,w,c
 12759  0012A6  A0D8               	btfss	status,0,c
 12760  0012A8  D018               	goto	l2305
 12761  0012AA                     u11000:
 12762                           
 12763                           ; BSR set to: 0
 12764                           ;bootloader.c: 190: fat_read_from_file(file_number, hex_file_offset, 50, file_buffer);
 12765  0012AA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12766  0012AE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12767  0012B2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12768  0012B6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12769  0012BA  0E32               	movlw	50
 12770  0012BC  6E43               	movwf	fat_read_from_file@length,c
 12771  0012BE  0E00               	movlw	0
 12772  0012C0  6E44               	movwf	fat_read_from_file@length+1,c
 12773  0012C2  0E00               	movlw	0
 12774  0012C4  6E45               	movwf	fat_read_from_file@length+2,c
 12775  0012C6  0E00               	movlw	0
 12776  0012C8  6E46               	movwf	fat_read_from_file@length+3,c
 12777  0012CA  0EC0               	movlw	low _file_buffer
 12778  0012CC  6E47               	movwf	fat_read_from_file@data,c
 12779  0012CE  0E02               	movlw	high _file_buffer
 12780  0012D0  6E48               	movwf	fat_read_from_file@data+1,c
 12781  0012D2  51FE               	movf	_file_number& (0+255),w,b
 12782  0012D4  EC7A  F00F         	call	_fat_read_from_file
 12783  0012D8  D02D               	goto	l2306
 12784  0012DA                     l2305:
 12785                           
 12786                           ;bootloader.c: 191: else;bootloader.c: 192: fat_read_from_file(file_number, hex_file_off
      +                          set, (hex_file_size-hex_file_offset), file_buffer);
 12787  0012DA  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 12788  0012DE  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 12789  0012E2  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 12790  0012E6  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 12791  0012EA  C07C  F055         	movff	_hex_file_offset,??__bootloader_verify_file
 12792  0012EE  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_verify_file+1
 12793  0012F2  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_verify_file+2
 12794  0012F6  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_verify_file+3
 12795  0012FA  1E55               	comf	??__bootloader_verify_file,f,c
 12796  0012FC  1E56               	comf	??__bootloader_verify_file+1,f,c
 12797  0012FE  1E57               	comf	??__bootloader_verify_file+2,f,c
 12798  001300  1E58               	comf	??__bootloader_verify_file+3,f,c
 12799  001302  2A55               	incf	??__bootloader_verify_file,f,c
 12800  001304  0E00               	movlw	0
 12801  001306  2256               	addwfc	??__bootloader_verify_file+1,f,c
 12802  001308  2257               	addwfc	??__bootloader_verify_file+2,f,c
 12803  00130A  2258               	addwfc	??__bootloader_verify_file+3,f,c
 12804  00130C  0100               	movlb	0	; () banked
 12805  00130E  5178               	movf	_hex_file_size& (0+255),w,b
 12806  001310  2455               	addwf	??__bootloader_verify_file,w,c
 12807  001312  6E43               	movwf	fat_read_from_file@length,c
 12808  001314  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 12809  001316  2056               	addwfc	??__bootloader_verify_file+1,w,c
 12810  001318  6E44               	movwf	fat_read_from_file@length+1,c
 12811  00131A  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 12812  00131C  2057               	addwfc	??__bootloader_verify_file+2,w,c
 12813  00131E  6E45               	movwf	fat_read_from_file@length+2,c
 12814  001320  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 12815  001322  2058               	addwfc	??__bootloader_verify_file+3,w,c
 12816  001324  6E46               	movwf	fat_read_from_file@length+3,c
 12817  001326  0EC0               	movlw	low _file_buffer
 12818  001328  6E47               	movwf	fat_read_from_file@data,c
 12819  00132A  0E02               	movlw	high _file_buffer
 12820  00132C  6E48               	movwf	fat_read_from_file@data+1,c
 12821  00132E  51FE               	movf	_file_number& (0+255),w,b
 12822  001330  EC7A  F00F         	call	_fat_read_from_file
 12823  001334                     l2306:
 12824                           
 12825                           ;bootloader.c: 194: return_value = parseHexFileEntry(file_buffer, 0, &hex_file_entry);
 12826  001334  0EC0               	movlw	low _file_buffer
 12827  001336  6E0C               	movwf	parseHexFileEntry@data,c
 12828  001338  0E02               	movlw	high _file_buffer
 12829  00133A  6E0D               	movwf	parseHexFileEntry@data+1,c
 12830  00133C  0E00               	movlw	0
 12831  00133E  6E0E               	movwf	parseHexFileEntry@offset,c
 12832  001340  0E00               	movlw	0
 12833  001342  6E0F               	movwf	parseHexFileEntry@offset+1,c
 12834  001344  0E00               	movlw	0
 12835  001346  6E10               	movwf	parseHexFileEntry@offset+2,c
 12836  001348  0E00               	movlw	0
 12837  00134A  6E11               	movwf	parseHexFileEntry@offset+3,c
 12838  00134C  0EC6               	movlw	low _hex_file_entry
 12839  00134E  6E12               	movwf	parseHexFileEntry@hexEntry,c
 12840  001350  0E01               	movlw	high _hex_file_entry
 12841  001352  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 12842  001354  EC10  F000         	call	_parseHexFileEntry	;wreg free
 12843  001358  C00C  F0E3         	movff	?_parseHexFileEntry,__bootloader_verify_file@return_value
 12844  00135C  C00D  F0E4         	movff	?_parseHexFileEntry+1,__bootloader_verify_file@return_value+1
 12845  001360  C00E  F0E5         	movff	?_parseHexFileEntry+2,__bootloader_verify_file@return_value+2
 12846  001364  C00F  F0E6         	movff	?_parseHexFileEntry+3,__bootloader_verify_file@return_value+3
 12847                           
 12848                           ;bootloader.c: 197: ++hex_file_entries;
 12849  001368  0101               	movlb	1	; () banked
 12850  00136A  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 12851  00136C  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 12852                           
 12853                           ; BSR set to: 1
 12854                           ;bootloader.c: 200: if(hex_file_entry.recordType==RecordTypeExtendedLinearAddress)
 12855  00136E  0E04               	movlw	4
 12856  001370  19CA               	xorwf	(_hex_file_entry+4)& (0+255),w,b
 12857  001372  A4D8               	btfss	status,2,c
 12858  001374  D01C               	goto	l2307
 12859                           
 12860                           ; BSR set to: 1
 12861                           ;bootloader.c: 201: {;bootloader.c: 202: extended_linear_address = hex_file_entry.data[0
      +                          ];
 12862  001376  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
 12863  001378  6F40               	movwf	_extended_linear_address& (0+255),b
 12864  00137A  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 12865  00137C  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 12866  00137E  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 12867                           
 12868                           ; BSR set to: 1
 12869                           ;bootloader.c: 203: extended_linear_address <<= 8;
 12870  001380  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12871  001384  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12872  001388  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12873  00138C  6B40               	clrf	_extended_linear_address& (0+255),b
 12874                           
 12875                           ; BSR set to: 1
 12876                           ;bootloader.c: 204: extended_linear_address |= hex_file_entry.data[1];
 12877  00138E  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
 12878  001390  1340               	iorwf	_extended_linear_address& (0+255),f,b
 12879                           
 12880                           ; BSR set to: 1
 12881                           ;bootloader.c: 205: extended_linear_address <<= 8;
 12882  001392  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12883  001396  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12884  00139A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12885  00139E  6B40               	clrf	_extended_linear_address& (0+255),b
 12886                           
 12887                           ; BSR set to: 1
 12888                           ;bootloader.c: 206: extended_linear_address <<= 8;
 12889  0013A0  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 12890  0013A4  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 12891  0013A8  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 12892  0013AC  6B40               	clrf	_extended_linear_address& (0+255),b
 12893  0013AE                     l2307:
 12894                           
 12895                           ; BSR set to: 1
 12896                           ;bootloader.c: 207: };bootloader.c: 210: if(hex_file_entry.recordType==RecordTypeData)
 12897                           
 12898                           ; BSR set to: 1
 12899  0013AE  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
 12900  0013B0  A4D8               	btfss	status,2,c
 12901  0013B2  D05D               	goto	l2311
 12902                           
 12903                           ; BSR set to: 1
 12904                           ;bootloader.c: 211: {;bootloader.c: 213: address32 = extended_linear_address + hex_file_
      +                          entry.address;
 12905  0013B4  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
 12906  0013B6  2540               	addwf	_extended_linear_address& (0+255),w,b
 12907  0013B8  0100               	movlb	0	; () banked
 12908  0013BA  6FE7               	movwf	__bootloader_verify_file@address32& (0+255),b
 12909  0013BC  0101               	movlb	1	; () banked
 12910  0013BE  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
 12911  0013C0  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 12912  0013C2  0100               	movlb	0	; () banked
 12913  0013C4  6FE8               	movwf	(__bootloader_verify_file@address32+1)& (0+255),b
 12914  0013C6  0E00               	movlw	0
 12915  0013C8  0101               	movlb	1	; () banked
 12916  0013CA  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 12917  0013CC  0100               	movlb	0	; () banked
 12918  0013CE  6FE9               	movwf	(__bootloader_verify_file@address32+2)& (0+255),b
 12919  0013D0  0E00               	movlw	0
 12920  0013D2  0101               	movlb	1	; () banked
 12921  0013D4  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 12922  0013D6  0100               	movlb	0	; () banked
 12923  0013D8  6FEA               	movwf	(__bootloader_verify_file@address32+3)& (0+255),b
 12924                           
 12925                           ;bootloader.c: 216: if(address32<file_minimum_address)
 12926  0013DA  0101               	movlb	1	; () banked
 12927  0013DC  5148               	movf	_file_minimum_address& (0+255),w,b
 12928  0013DE  0100               	movlb	0	; () banked
 12929  0013E0  5DE7               	subwf	__bootloader_verify_file@address32& (0+255),w,b
 12930  0013E2  0101               	movlb	1	; () banked
 12931  0013E4  5149               	movf	(_file_minimum_address+1)& (0+255),w,b
 12932  0013E6  0100               	movlb	0	; () banked
 12933  0013E8  59E8               	subwfb	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12934  0013EA  0101               	movlb	1	; () banked
 12935  0013EC  514A               	movf	(_file_minimum_address+2)& (0+255),w,b
 12936  0013EE  0100               	movlb	0	; () banked
 12937  0013F0  59E9               	subwfb	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12938  0013F2  0101               	movlb	1	; () banked
 12939  0013F4  514B               	movf	(_file_minimum_address+3)& (0+255),w,b
 12940  0013F6  0100               	movlb	0	; () banked
 12941  0013F8  59EA               	subwfb	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12942  0013FA  B0D8               	btfsc	status,0,c
 12943  0013FC  D008               	goto	l2309
 12944                           
 12945                           ; BSR set to: 0
 12946                           ;bootloader.c: 217: {;bootloader.c: 218: file_minimum_address = address32;
 12947  0013FE  C0E7  F148         	movff	__bootloader_verify_file@address32,_file_minimum_address
 12948  001402  C0E8  F149         	movff	__bootloader_verify_file@address32+1,_file_minimum_address+1
 12949  001406  C0E9  F14A         	movff	__bootloader_verify_file@address32+2,_file_minimum_address+2
 12950  00140A  C0EA  F14B         	movff	__bootloader_verify_file@address32+3,_file_minimum_address+3
 12951  00140E                     l2309:
 12952                           
 12953                           ; BSR set to: 0
 12954                           ;bootloader.c: 219: };bootloader.c: 220: if(address32>file_maximum_address)
 12955                           
 12956                           ; BSR set to: 0
 12957  00140E  51E7               	movf	__bootloader_verify_file@address32& (0+255),w,b
 12958  001410  0101               	movlb	1	; () banked
 12959  001412  5D44               	subwf	_file_maximum_address& (0+255),w,b
 12960  001414  0100               	movlb	0	; () banked
 12961  001416  51E8               	movf	(__bootloader_verify_file@address32+1)& (0+255),w,b
 12962  001418  0101               	movlb	1	; () banked
 12963  00141A  5945               	subwfb	(_file_maximum_address+1)& (0+255),w,b
 12964  00141C  0100               	movlb	0	; () banked
 12965  00141E  51E9               	movf	(__bootloader_verify_file@address32+2)& (0+255),w,b
 12966  001420  0101               	movlb	1	; () banked
 12967  001422  5946               	subwfb	(_file_maximum_address+2)& (0+255),w,b
 12968  001424  0100               	movlb	0	; () banked
 12969  001426  51EA               	movf	(__bootloader_verify_file@address32+3)& (0+255),w,b
 12970  001428  0101               	movlb	1	; () banked
 12971  00142A  5947               	subwfb	(_file_maximum_address+3)& (0+255),w,b
 12972  00142C  B0D8               	btfsc	status,0,c
 12973  00142E  D008               	goto	l2310
 12974                           
 12975                           ; BSR set to: 1
 12976                           ;bootloader.c: 221: {;bootloader.c: 222: file_maximum_address = address32;
 12977  001430  C0E7  F144         	movff	__bootloader_verify_file@address32,_file_maximum_address
 12978  001434  C0E8  F145         	movff	__bootloader_verify_file@address32+1,_file_maximum_address+1
 12979  001438  C0E9  F146         	movff	__bootloader_verify_file@address32+2,_file_maximum_address+2
 12980  00143C  C0EA  F147         	movff	__bootloader_verify_file@address32+3,_file_maximum_address+3
 12981  001440                     l2310:
 12982                           
 12983                           ; BSR set to: 1
 12984                           ;bootloader.c: 223: };bootloader.c: 226: if(_bootloader_check_address(address32, hex_fil
      +                          e_entry.dataLength) == ADDRESS_CHECK_RESULT_ERROR)
 12985                           
 12986                           ; BSR set to: 1
 12987  001440  C0E7  F001         	movff	__bootloader_verify_file@address32,__bootloader_check_address@address
 12988  001444  C0E8  F002         	movff	__bootloader_verify_file@address32+1,__bootloader_check_address@address+1
 12989  001448  C0E9  F003         	movff	__bootloader_verify_file@address32+2,__bootloader_check_address@address+2
 12990  00144C  C0EA  F004         	movff	__bootloader_verify_file@address32+3,__bootloader_check_address@address+3
 12991  001450  C1C6  F005         	movff	_hex_file_entry,__bootloader_check_address@dataLength
 12992  001454  ECE1  F026         	call	__bootloader_check_address	;wreg free
 12993  001458  0AFF               	xorlw	255
 12994  00145A  A4D8               	btfss	status,2,c
 12995  00145C  D008               	goto	l2311
 12996                           
 12997                           ;bootloader.c: 227: {;bootloader.c: 229: last_error = ShortRecordErrorAddressRange;
 12998  00145E  0E0B               	movlw	11
 12999  001460  0100               	movlb	0	; () banked
 13000  001462  6F96               	movwf	_last_error& (0+255),b
 13001                           
 13002                           ;bootloader.c: 231: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 13003  001464  0E50               	movlw	80
 13004  001466  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13005                           
 13006                           ;bootloader.c: 232: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 13007  001468  0E50               	movlw	80
 13008  00146A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13009                           
 13010                           ;bootloader.c: 233: break;
 13011  00146C  0012               	return	
 13012  00146E                     l2311:
 13013                           
 13014                           ;bootloader.c: 234: };bootloader.c: 235: };bootloader.c: 237: if(return_value==0)
 13015                           
 13016                           ; BSR set to: 0
 13017                           
 13018                           ; BSR set to: 0
 13019  00146E  0100               	movlb	0	; () banked
 13020  001470  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 13021  001472  11E4               	iorwf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 13022  001474  11E5               	iorwf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 13023  001476  11E6               	iorwf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 13024  001478  A4D8               	btfss	status,2,c
 13025  00147A  D027               	goto	l2312
 13026                           
 13027                           ; BSR set to: 0
 13028                           ;bootloader.c: 238: {;bootloader.c: 241: total_hex_file_entries = hex_file_entries;
 13029  00147C  C16A  F168         	movff	_hex_file_entries,_total_hex_file_entries
 13030  001480  C16B  F169         	movff	_hex_file_entries+1,_total_hex_file_entries+1
 13031                           
 13032                           ; BSR set to: 0
 13033                           ;bootloader.c: 242: hex_file_entries = 0;
 13034  001484  0E00               	movlw	0
 13035  001486  0101               	movlb	1	; () banked
 13036  001488  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 13037  00148A  0E00               	movlw	0
 13038  00148C  6F6A               	movwf	_hex_file_entries& (0+255),b
 13039                           
 13040                           ;bootloader.c: 243: hex_file_offset = 0;
 13041  00148E  0E00               	movlw	0
 13042  001490  0100               	movlb	0	; () banked
 13043  001492  6F7C               	movwf	_hex_file_offset& (0+255),b
 13044  001494  0E00               	movlw	0
 13045  001496  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 13046  001498  0E00               	movlw	0
 13047  00149A  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 13048  00149C  0E00               	movlw	0
 13049  00149E  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 13050                           
 13051                           ;bootloader.c: 244: extended_linear_address = 0;
 13052  0014A0  0E00               	movlw	0
 13053  0014A2  0101               	movlb	1	; () banked
 13054  0014A4  6F40               	movwf	_extended_linear_address& (0+255),b
 13055  0014A6  0E00               	movlw	0
 13056  0014A8  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 13057  0014AA  0E00               	movlw	0
 13058  0014AC  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 13059  0014AE  0E00               	movlw	0
 13060  0014B0  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 13061                           
 13062                           ;bootloader.c: 245: flash_pages_written = 0;
 13063  0014B2  0E00               	movlw	0
 13064  0014B4  6F67               	movwf	(_flash_pages_written+1)& (0+255),b
 13065  0014B6  0E00               	movlw	0
 13066  0014B8  6F66               	movwf	_flash_pages_written& (0+255),b
 13067                           
 13068                           ;bootloader.c: 246: start_from_byte_next = 0;
 13069  0014BA  0E00               	movlw	0
 13070  0014BC  0100               	movlb	0	; () banked
 13071  0014BE  6F95               	movwf	_start_from_byte_next& (0+255),b
 13072                           
 13073                           ;bootloader.c: 248: os.bootloader_mode = BOOTLOADER_MODE_CHECK_COMPLETE;
 13074  0014C0  0E40               	movlw	64
 13075  0014C2  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13076                           
 13077                           ;bootloader.c: 249: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_COMPLETE;
 13078  0014C4  0E40               	movlw	64
 13079  0014C6  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13080                           
 13081                           ;bootloader.c: 250: break;
 13082  0014C8  0012               	return	
 13083  0014CA                     l2312:
 13084                           
 13085                           ; BSR set to: 0
 13086                           ;bootloader.c: 252: else if(return_value>0xFFFFFFF0)
 13087                           
 13088                           ; BSR set to: 0
 13089  0014CA  0EF1               	movlw	241
 13090  0014CC  5DE3               	subwf	__bootloader_verify_file@return_value& (0+255),w,b
 13091  0014CE  0EFF               	movlw	255
 13092  0014D0  59E4               	subwfb	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 13093  0014D2  0EFF               	movlw	255
 13094  0014D4  59E5               	subwfb	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 13095  0014D6  0EFF               	movlw	255
 13096  0014D8  59E6               	subwfb	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 13097  0014DA  A0D8               	btfss	status,0,c
 13098  0014DC  D007               	goto	l2314
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;bootloader.c: 253: {;bootloader.c: 255: last_error = return_value & 0xF;
 13102  0014DE  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 13103  0014E0  0B0F               	andlw	15
 13104  0014E2  6F96               	movwf	_last_error& (0+255),b
 13105                           
 13106                           ; BSR set to: 0
 13107                           ;bootloader.c: 257: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAILED;
 13108  0014E4  0E50               	movlw	80
 13109  0014E6  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;bootloader.c: 258: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 13113  0014E8  0E50               	movlw	80
 13114  0014EA  D7ED               	goto	L1
 13115  0014EC                     l2314:
 13116                           
 13117                           ; BSR set to: 0
 13118                           ;bootloader.c: 261: else;bootloader.c: 262: {;bootloader.c: 264: hex_file_offset += retu
      +                          rn_value;
 13119                           
 13120                           ; BSR set to: 0
 13121  0014EC  51E3               	movf	__bootloader_verify_file@return_value& (0+255),w,b
 13122  0014EE  277C               	addwf	_hex_file_offset& (0+255),f,b
 13123  0014F0  51E4               	movf	(__bootloader_verify_file@return_value+1)& (0+255),w,b
 13124  0014F2  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 13125  0014F4  51E5               	movf	(__bootloader_verify_file@return_value+2)& (0+255),w,b
 13126  0014F6  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 13127  0014F8  51E6               	movf	(__bootloader_verify_file@return_value+3)& (0+255),w,b
 13128  0014FA  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 13129                           
 13130                           ; BSR set to: 0
 13131                           
 13132                           ; BSR set to: 0
 13133                           
 13134                           ; BSR set to: 0
 13135  0014FC  2BE2               	incf	__bootloader_verify_file@rec_counter& (0+255),f,b
 13136  0014FE  D6AD               	goto	l14069
 13137  001500                     __end_of__bootloader_verify_file:
 13138                           	opt stack 0
 13139                           tblptru	equ	0xFF8
 13140                           tblptrh	equ	0xFF7
 13141                           tblptrl	equ	0xFF6
 13142                           tablat	equ	0xFF5
 13143                           prodh	equ	0xFF4
 13144                           prodl	equ	0xFF3
 13145                           intcon	equ	0xFF2
 13146                           intcon2	equ	0xFF1
 13147                           intcon3	equ	0xFF0
 13148                           postinc0	equ	0xFEE
 13149                           wreg	equ	0xFE8
 13150                           postdec1	equ	0xFE5
 13151                           plusw1	equ	0xFE3
 13152                           fsr1h	equ	0xFE2
 13153                           fsr1l	equ	0xFE1
 13154                           indf2	equ	0xFDF
 13155                           postinc2	equ	0xFDE
 13156                           plusw2	equ	0xFDB
 13157                           fsr2h	equ	0xFDA
 13158                           fsr2l	equ	0xFD9
 13159                           status	equ	0xFD8
 13160                           
 13161 ;; *************** function __bootloader_program *****************
 13162 ;; Defined at:
 13163 ;;		line 269 in file "bootloader.c"
 13164 ;; Parameters:    Size  Location     Type
 13165 ;;		None
 13166 ;; Auto vars:     Size  Location     Type
 13167 ;;  address32       4   55[BANK0 ] unsigned long 
 13168 ;;  return_value    4   51[BANK0 ] unsigned long 
 13169 ;;  page_to_writ    2   62[BANK0 ] unsigned int 
 13170 ;;  cntr            2   60[BANK0 ] unsigned int 
 13171 ;;  address_with    2   49[BANK0 ] unsigned int 
 13172 ;;  entry_page      2   47[BANK0 ] unsigned int 
 13173 ;;  buffer          2   45[BANK0 ] PTR unsigned char 
 13174 ;;		 -> pageBuffer(1024), 
 13175 ;;  start_from_b    1   59[BANK0 ] unsigned char 
 13176 ;; Return value:  Size  Location     Type
 13177 ;;                  1    wreg      void 
 13178 ;; Registers used:
 13179 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13180 ;; Tracked objects:
 13181 ;;		On entry : 0/0
 13182 ;;		On exit  : 0/0
 13183 ;;		Unchanged: 0/0
 13184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13185 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13186 ;;      Locals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13187 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13188 ;;      Totals:         8      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13189 ;;Total ram usage:       27 bytes
 13190 ;; Hardware stack levels used:    1
 13191 ;; Hardware stack levels required when called:    8
 13192 ;; This function calls:
 13193 ;;		__bootloader_check_address
 13194 ;;		_fat_read_from_file
 13195 ;;		_internalFlash_addressWithinPage
 13196 ;;		_internalFlash_erasePage
 13197 ;;		_internalFlash_getBuffer
 13198 ;;		_internalFlash_pageFromAddress
 13199 ;;		_internalFlash_readPage
 13200 ;;		_internalFlash_writePage
 13201 ;;		_parseHexFileEntry
 13202 ;; This function is called by:
 13203 ;;		_bootloader_run
 13204 ;; This function uses a non-reentrant model
 13205 ;;
 13206                           
 13207                           	psect	text53
 13208  000BC8                     __ptext53:
 13209                           	opt stack 0
 13210  000BC8                     __bootloader_program:
 13211                           	opt stack 21
 13212                           
 13213                           ;bootloader.c: 271: uint16_t cntr;;bootloader.c: 272: uint8_t* buffer;;bootloader.c: 273
      +                          : uint16_t entry_page;;bootloader.c: 274: uint16_t page_to_write = 0;
 13214                           
 13215                           ; BSR set to: 0
 13216                           ;incstack = 0
 13217  000BC8  0E00               	movlw	0
 13218  000BCA  0100               	movlb	0	; () banked
 13219  000BCC  6FF4               	movwf	(__bootloader_program@page_to_write+1)& (0+255),b
 13220  000BCE  0E00               	movlw	0
 13221  000BD0  6FF3               	movwf	__bootloader_program@page_to_write& (0+255),b
 13222                           
 13223                           ;bootloader.c: 275: uint8_t start_from_byte;;bootloader.c: 276: uint32_t address32;;boot
      +                          loader.c: 277: uint32_t return_value = 0;
 13224  000BD2  0E00               	movlw	0
 13225  000BD4  6FE8               	movwf	__bootloader_program@return_value& (0+255),b
 13226  000BD6  0E00               	movlw	0
 13227  000BD8  6FE9               	movwf	(__bootloader_program@return_value+1)& (0+255),b
 13228  000BDA  0E00               	movlw	0
 13229  000BDC  6FEA               	movwf	(__bootloader_program@return_value+2)& (0+255),b
 13230  000BDE  0E00               	movlw	0
 13231  000BE0  6FEB               	movwf	(__bootloader_program@return_value+3)& (0+255),b
 13232  000BE2                     l2319:
 13233  000BE2  0004               	clrwdt		;# 
 13234                           
 13235                           ;bootloader.c: 287: if((hex_file_size-hex_file_offset)>=50)
 13236  000BE4  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 13237  000BE8  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 13238  000BEC  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 13239  000BF0  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 13240  000BF4  1E55               	comf	??__bootloader_program,f,c
 13241  000BF6  1E56               	comf	??__bootloader_program+1,f,c
 13242  000BF8  1E57               	comf	??__bootloader_program+2,f,c
 13243  000BFA  1E58               	comf	??__bootloader_program+3,f,c
 13244  000BFC  2A55               	incf	??__bootloader_program,f,c
 13245  000BFE  0E00               	movlw	0
 13246  000C00  2256               	addwfc	??__bootloader_program+1,f,c
 13247  000C02  2257               	addwfc	??__bootloader_program+2,f,c
 13248  000C04  2258               	addwfc	??__bootloader_program+3,f,c
 13249  000C06  0100               	movlb	0	; () banked
 13250  000C08  5178               	movf	_hex_file_size& (0+255),w,b
 13251  000C0A  2455               	addwf	??__bootloader_program,w,c
 13252  000C0C  6E59               	movwf	(??__bootloader_program+4)& (0+255),c
 13253  000C0E  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 13254  000C10  2056               	addwfc	??__bootloader_program+1,w,c
 13255  000C12  6E5A               	movwf	(??__bootloader_program+5)& (0+255),c
 13256  000C14  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 13257  000C16  2057               	addwfc	??__bootloader_program+2,w,c
 13258  000C18  6E5B               	movwf	(??__bootloader_program+6)& (0+255),c
 13259  000C1A  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 13260  000C1C  2058               	addwfc	??__bootloader_program+3,w,c
 13261  000C1E  6E5C               	movwf	(??__bootloader_program+7)& (0+255),c
 13262  000C20  505C               	movf	??__bootloader_program+7,w,c
 13263  000C22  105B               	iorwf	??__bootloader_program+6,w,c
 13264  000C24  105A               	iorwf	??__bootloader_program+5,w,c
 13265  000C26  E104               	bnz	u11090
 13266  000C28  0E32               	movlw	50
 13267  000C2A  5C59               	subwf	??__bootloader_program+4,w,c
 13268  000C2C  A0D8               	btfss	status,0,c
 13269  000C2E  D018               	goto	l2320
 13270  000C30                     u11090:
 13271                           
 13272                           ; BSR set to: 0
 13273                           ;bootloader.c: 288: {;bootloader.c: 289: fat_read_from_file(file_number, hex_file_offset
      +                          , 50, file_buffer);
 13274  000C30  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 13275  000C34  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 13276  000C38  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 13277  000C3C  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 13278  000C40  0E32               	movlw	50
 13279  000C42  6E43               	movwf	fat_read_from_file@length,c
 13280  000C44  0E00               	movlw	0
 13281  000C46  6E44               	movwf	fat_read_from_file@length+1,c
 13282  000C48  0E00               	movlw	0
 13283  000C4A  6E45               	movwf	fat_read_from_file@length+2,c
 13284  000C4C  0E00               	movlw	0
 13285  000C4E  6E46               	movwf	fat_read_from_file@length+3,c
 13286  000C50  0EC0               	movlw	low _file_buffer
 13287  000C52  6E47               	movwf	fat_read_from_file@data,c
 13288  000C54  0E02               	movlw	high _file_buffer
 13289  000C56  6E48               	movwf	fat_read_from_file@data+1,c
 13290  000C58  51FE               	movf	_file_number& (0+255),w,b
 13291  000C5A  EC7A  F00F         	call	_fat_read_from_file
 13292                           
 13293                           ;bootloader.c: 290: }
 13294  000C5E  D02D               	goto	l2321
 13295  000C60                     l2320:
 13296                           
 13297                           ;bootloader.c: 291: else;bootloader.c: 292: {;bootloader.c: 293: fat_read_from_file(file
      +                          _number, hex_file_offset, (hex_file_size-hex_file_offset), file_buffer);
 13298  000C60  C07C  F03F         	movff	_hex_file_offset,fat_read_from_file@start_byte
 13299  000C64  C07D  F040         	movff	_hex_file_offset+1,fat_read_from_file@start_byte+1
 13300  000C68  C07E  F041         	movff	_hex_file_offset+2,fat_read_from_file@start_byte+2
 13301  000C6C  C07F  F042         	movff	_hex_file_offset+3,fat_read_from_file@start_byte+3
 13302  000C70  C07C  F055         	movff	_hex_file_offset,??__bootloader_program
 13303  000C74  C07D  F056         	movff	_hex_file_offset+1,??__bootloader_program+1
 13304  000C78  C07E  F057         	movff	_hex_file_offset+2,??__bootloader_program+2
 13305  000C7C  C07F  F058         	movff	_hex_file_offset+3,??__bootloader_program+3
 13306  000C80  1E55               	comf	??__bootloader_program,f,c
 13307  000C82  1E56               	comf	??__bootloader_program+1,f,c
 13308  000C84  1E57               	comf	??__bootloader_program+2,f,c
 13309  000C86  1E58               	comf	??__bootloader_program+3,f,c
 13310  000C88  2A55               	incf	??__bootloader_program,f,c
 13311  000C8A  0E00               	movlw	0
 13312  000C8C  2256               	addwfc	??__bootloader_program+1,f,c
 13313  000C8E  2257               	addwfc	??__bootloader_program+2,f,c
 13314  000C90  2258               	addwfc	??__bootloader_program+3,f,c
 13315  000C92  0100               	movlb	0	; () banked
 13316  000C94  5178               	movf	_hex_file_size& (0+255),w,b
 13317  000C96  2455               	addwf	??__bootloader_program,w,c
 13318  000C98  6E43               	movwf	fat_read_from_file@length,c
 13319  000C9A  5179               	movf	(_hex_file_size+1)& (0+255),w,b
 13320  000C9C  2056               	addwfc	??__bootloader_program+1,w,c
 13321  000C9E  6E44               	movwf	fat_read_from_file@length+1,c
 13322  000CA0  517A               	movf	(_hex_file_size+2)& (0+255),w,b
 13323  000CA2  2057               	addwfc	??__bootloader_program+2,w,c
 13324  000CA4  6E45               	movwf	fat_read_from_file@length+2,c
 13325  000CA6  517B               	movf	(_hex_file_size+3)& (0+255),w,b
 13326  000CA8  2058               	addwfc	??__bootloader_program+3,w,c
 13327  000CAA  6E46               	movwf	fat_read_from_file@length+3,c
 13328  000CAC  0EC0               	movlw	low _file_buffer
 13329  000CAE  6E47               	movwf	fat_read_from_file@data,c
 13330  000CB0  0E02               	movlw	high _file_buffer
 13331  000CB2  6E48               	movwf	fat_read_from_file@data+1,c
 13332  000CB4  51FE               	movf	_file_number& (0+255),w,b
 13333  000CB6  EC7A  F00F         	call	_fat_read_from_file
 13334  000CBA                     l2321:
 13335                           
 13336                           ;bootloader.c: 294: };bootloader.c: 297: return_value = parseHexFileEntry(file_buffer, 0
      +                          , &hex_file_entry);
 13337  000CBA  0EC0               	movlw	low _file_buffer
 13338  000CBC  6E0C               	movwf	parseHexFileEntry@data,c
 13339  000CBE  0E02               	movlw	high _file_buffer
 13340  000CC0  6E0D               	movwf	parseHexFileEntry@data+1,c
 13341  000CC2  0E00               	movlw	0
 13342  000CC4  6E0E               	movwf	parseHexFileEntry@offset,c
 13343  000CC6  0E00               	movlw	0
 13344  000CC8  6E0F               	movwf	parseHexFileEntry@offset+1,c
 13345  000CCA  0E00               	movlw	0
 13346  000CCC  6E10               	movwf	parseHexFileEntry@offset+2,c
 13347  000CCE  0E00               	movlw	0
 13348  000CD0  6E11               	movwf	parseHexFileEntry@offset+3,c
 13349  000CD2  0EC6               	movlw	low _hex_file_entry
 13350  000CD4  6E12               	movwf	parseHexFileEntry@hexEntry,c
 13351  000CD6  0E01               	movlw	high _hex_file_entry
 13352  000CD8  6E13               	movwf	parseHexFileEntry@hexEntry+1,c
 13353  000CDA  EC10  F000         	call	_parseHexFileEntry	;wreg free
 13354  000CDE  C00C  F0E8         	movff	?_parseHexFileEntry,__bootloader_program@return_value
 13355  000CE2  C00D  F0E9         	movff	?_parseHexFileEntry+1,__bootloader_program@return_value+1
 13356  000CE6  C00E  F0EA         	movff	?_parseHexFileEntry+2,__bootloader_program@return_value+2
 13357  000CEA  C00F  F0EB         	movff	?_parseHexFileEntry+3,__bootloader_program@return_value+3
 13358                           
 13359                           ;bootloader.c: 300: ++hex_file_entries;
 13360  000CEE  0101               	movlb	1	; () banked
 13361  000CF0  4B6A               	infsnz	_hex_file_entries& (0+255),f,b
 13362  000CF2  2B6B               	incf	(_hex_file_entries+1)& (0+255),f,b
 13363                           
 13364                           ; BSR set to: 1
 13365                           ;bootloader.c: 303: if(return_value>RecordErrorNoError)
 13366  000CF4  0EF1               	movlw	241
 13367  000CF6  0100               	movlb	0	; () banked
 13368  000CF8  5DE8               	subwf	__bootloader_program@return_value& (0+255),w,b
 13369  000CFA  0EFF               	movlw	255
 13370  000CFC  59E9               	subwfb	(__bootloader_program@return_value+1)& (0+255),w,b
 13371  000CFE  0EFF               	movlw	255
 13372  000D00  59EA               	subwfb	(__bootloader_program@return_value+2)& (0+255),w,b
 13373  000D02  0EFF               	movlw	255
 13374  000D04  59EB               	subwfb	(__bootloader_program@return_value+3)& (0+255),w,b
 13375  000D06  A0D8               	btfss	status,0,c
 13376  000D08  D005               	goto	l2322
 13377                           
 13378                           ; BSR set to: 0
 13379                           ;bootloader.c: 304: {;bootloader.c: 306: os.bootloader_mode = BOOTLOADER_MODE_CHECK_FAIL
      +                          ED;
 13380  000D0A  0E50               	movlw	80
 13381  000D0C  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13382                           
 13383                           ;bootloader.c: 307: os.display_mode = DISPLAY_MODE_BOOTLOADER_CHECK_FAILED;
 13384  000D0E  0E50               	movlw	80
 13385  000D10  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13386                           
 13387                           ; BSR set to: 0
 13388                           ;bootloader.c: 308: return;
 13389  000D12  0012               	return	
 13390  000D14                     l2322:
 13391                           
 13392                           ; BSR set to: 0
 13393                           ;bootloader.c: 310: else;bootloader.c: 311: {;bootloader.c: 313: hex_file_offset += retu
      +                          rn_value;
 13394                           
 13395                           ; BSR set to: 0
 13396  000D14  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 13397  000D16  277C               	addwf	_hex_file_offset& (0+255),f,b
 13398  000D18  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 13399  000D1A  237D               	addwfc	(_hex_file_offset+1)& (0+255),f,b
 13400  000D1C  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 13401  000D1E  237E               	addwfc	(_hex_file_offset+2)& (0+255),f,b
 13402  000D20  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 13403  000D22  237F               	addwfc	(_hex_file_offset+3)& (0+255),f,b
 13404                           
 13405                           ; BSR set to: 0
 13406                           ;bootloader.c: 314: };bootloader.c: 316: switch(hex_file_entry.recordType)
 13407  000D24  D0FC               	goto	l2325
 13408  000D26                     
 13409                           ;bootloader.c: 322: extended_linear_address = hex_file_entry.data[0];
 13410                           
 13411                           ; BSR set to: 0
 13412  000D26  0101               	movlb	1	; () banked
 13413  000D28  51CB               	movf	(_hex_file_entry+5)& (0+255),w,b
 13414  000D2A  6F40               	movwf	_extended_linear_address& (0+255),b
 13415  000D2C  6B41               	clrf	(_extended_linear_address+1)& (0+255),b
 13416  000D2E  6B42               	clrf	(_extended_linear_address+2)& (0+255),b
 13417  000D30  6B43               	clrf	(_extended_linear_address+3)& (0+255),b
 13418                           
 13419                           ; BSR set to: 1
 13420                           ;bootloader.c: 323: extended_linear_address <<= 8;
 13421  000D32  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 13422  000D36  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 13423  000D3A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 13424  000D3E  6B40               	clrf	_extended_linear_address& (0+255),b
 13425                           
 13426                           ; BSR set to: 1
 13427                           ;bootloader.c: 324: extended_linear_address |= hex_file_entry.data[1];
 13428  000D40  51CC               	movf	(_hex_file_entry+6)& (0+255),w,b
 13429  000D42  1340               	iorwf	_extended_linear_address& (0+255),f,b
 13430                           
 13431                           ; BSR set to: 1
 13432                           ;bootloader.c: 325: extended_linear_address <<= 8;
 13433  000D44  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 13434  000D48  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 13435  000D4C  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 13436  000D50  6B40               	clrf	_extended_linear_address& (0+255),b
 13437                           
 13438                           ; BSR set to: 1
 13439                           ;bootloader.c: 326: extended_linear_address <<= 8;
 13440  000D52  C142  F143         	movff	_extended_linear_address+2,_extended_linear_address+3
 13441  000D56  C141  F142         	movff	_extended_linear_address+1,_extended_linear_address+2
 13442  000D5A  C140  F141         	movff	_extended_linear_address,_extended_linear_address+1
 13443  000D5E  6B40               	clrf	_extended_linear_address& (0+255),b
 13444                           
 13445                           ; BSR set to: 1
 13446                           ;bootloader.c: 328: break;
 13447                           
 13448                           ;bootloader.c: 327: continue;
 13449  000D60  D740               	goto	l2319
 13450  000D62                     l2329:
 13451                           
 13452                           ; BSR set to: 1
 13453                           ;bootloader.c: 333: start_from_byte = start_from_byte_next;
 13454  000D62  C095  F0F0         	movff	_start_from_byte_next,__bootloader_program@start_from_byte
 13455                           
 13456                           ; BSR set to: 1
 13457                           ;bootloader.c: 335: start_from_byte_next = 0;
 13458  000D66  0E00               	movlw	0
 13459  000D68  0100               	movlb	0	; () banked
 13460  000D6A  6F95               	movwf	_start_from_byte_next& (0+255),b
 13461                           
 13462                           ; BSR set to: 0
 13463                           ;bootloader.c: 338: address32 = extended_linear_address + hex_file_entry.address;
 13464  000D6C  0101               	movlb	1	; () banked
 13465  000D6E  51C8               	movf	(_hex_file_entry+2)& (0+255),w,b
 13466  000D70  2540               	addwf	_extended_linear_address& (0+255),w,b
 13467  000D72  0100               	movlb	0	; () banked
 13468  000D74  6FEC               	movwf	__bootloader_program@address32& (0+255),b
 13469  000D76  0101               	movlb	1	; () banked
 13470  000D78  51C9               	movf	(_hex_file_entry+3)& (0+255),w,b
 13471  000D7A  2141               	addwfc	(_extended_linear_address+1)& (0+255),w,b
 13472  000D7C  0100               	movlb	0	; () banked
 13473  000D7E  6FED               	movwf	(__bootloader_program@address32+1)& (0+255),b
 13474  000D80  0E00               	movlw	0
 13475  000D82  0101               	movlb	1	; () banked
 13476  000D84  2142               	addwfc	(_extended_linear_address+2)& (0+255),w,b
 13477  000D86  0100               	movlb	0	; () banked
 13478  000D88  6FEE               	movwf	(__bootloader_program@address32+2)& (0+255),b
 13479  000D8A  0E00               	movlw	0
 13480  000D8C  0101               	movlb	1	; () banked
 13481  000D8E  2143               	addwfc	(_extended_linear_address+3)& (0+255),w,b
 13482  000D90  0100               	movlb	0	; () banked
 13483  000D92  6FEF               	movwf	(__bootloader_program@address32+3)& (0+255),b
 13484                           
 13485                           ; BSR set to: 0
 13486                           ;bootloader.c: 339: entry_page = internalFlash_pageFromAddress(address32 + start_from_by
      +                          te);
 13487  000D94  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13488  000D96  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13489  000D98  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13490  000D9A  0E00               	movlw	0
 13491  000D9C  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13492  000D9E  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13493  000DA0  0E00               	movlw	0
 13494  000DA2  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13495  000DA4  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13496  000DA6  0E00               	movlw	0
 13497  000DA8  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13498  000DAA  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13499  000DAC  EC28  F03F         	call	_internalFlash_pageFromAddress	;wreg free
 13500  000DB0  C001  F0E4         	movff	?_internalFlash_pageFromAddress,__bootloader_program@entry_page
 13501  000DB4  C002  F0E5         	movff	?_internalFlash_pageFromAddress+1,__bootloader_program@entry_page+1
 13502                           
 13503                           ;bootloader.c: 342: if(_bootloader_check_address(address32+start_from_byte, hex_file_ent
      +                          ry.dataLength-start_from_byte) != ADDRESS_CHECK_RESULT_OK)
 13504  000DB8  0100               	movlb	0	; () banked
 13505  000DBA  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13506  000DBC  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13507  000DBE  6E01               	movwf	__bootloader_check_address@address,c
 13508  000DC0  0E00               	movlw	0
 13509  000DC2  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13510  000DC4  6E02               	movwf	__bootloader_check_address@address+1,c
 13511  000DC6  0E00               	movlw	0
 13512  000DC8  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13513  000DCA  6E03               	movwf	__bootloader_check_address@address+2,c
 13514  000DCC  0E00               	movlw	0
 13515  000DCE  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13516  000DD0  6E04               	movwf	__bootloader_check_address@address+3,c
 13517  000DD2  51F0               	movf	__bootloader_program@start_from_byte& (0+255),w,b
 13518  000DD4  0800               	sublw	0
 13519  000DD6  0101               	movlb	1	; () banked
 13520  000DD8  25C6               	addwf	_hex_file_entry& (0+255),w,b
 13521  000DDA  6E05               	movwf	__bootloader_check_address@dataLength,c
 13522  000DDC  ECE1  F026         	call	__bootloader_check_address	;wreg free
 13523  000DE0  0900               	iorlw	0
 13524  000DE2  A4D8               	btfss	status,2,c
 13525  000DE4  D6FE               	goto	l2319
 13526                           
 13527                           ;bootloader.c: 345: };bootloader.c: 347: if(page_to_write==0)
 13528                           
 13529                           ;bootloader.c: 343: {;bootloader.c: 344: break;
 13530  000DE6  0100               	movlb	0	; () banked
 13531  000DE8  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13532  000DEA  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13533  000DEC  A4D8               	btfss	status,2,c
 13534  000DEE  D010               	goto	l2331
 13535                           
 13536                           ; BSR set to: 0
 13537                           ;bootloader.c: 348: {;bootloader.c: 352: page_to_write = entry_page;
 13538  000DF0  C0E4  F0F3         	movff	__bootloader_program@entry_page,__bootloader_program@page_to_write
 13539  000DF4  C0E5  F0F4         	movff	__bootloader_program@entry_page+1,__bootloader_program@page_to_write+1
 13540                           
 13541                           ; BSR set to: 0
 13542                           ;bootloader.c: 353: internalFlash_readPage(page_to_write);
 13543  000DF8  C0F3  F016         	movff	__bootloader_program@page_to_write,internalFlash_readPage@page
 13544  000DFC  C0F4  F017         	movff	__bootloader_program@page_to_write+1,internalFlash_readPage@page+1
 13545  000E00  EC89  F03B         	call	_internalFlash_readPage	;wreg free
 13546                           
 13547                           ;bootloader.c: 354: buffer = internalFlash_getBuffer();
 13548  000E04  ECC7  F03F         	call	_internalFlash_getBuffer	;wreg free
 13549  000E08  C001  F0E2         	movff	?_internalFlash_getBuffer,__bootloader_program@buffer
 13550  000E0C  C002  F0E3         	movff	?_internalFlash_getBuffer+1,__bootloader_program@buffer+1
 13551  000E10                     l2331:
 13552                           
 13553                           ;bootloader.c: 355: };bootloader.c: 357: for(cntr=start_from_byte; cntr<hex_file_entry.d
      +                          ataLength; ++cntr)
 13554  000E10  C0F0  F0F1         	movff	__bootloader_program@start_from_byte,__bootloader_program@cntr
 13555  000E14  0100               	movlb	0	; () banked
 13556  000E16  6BF2               	clrf	(__bootloader_program@cntr+1)& (0+255),b
 13557  000E18  D05D               	goto	l2332
 13558  000E1A                     
 13559                           ; BSR set to: 0
 13560                           ;bootloader.c: 358: {;bootloader.c: 361: if(internalFlash_pageFromAddress(address32+cntr
      +                          ) == page_to_write)
 13561                           
 13562                           ; BSR set to: 0
 13563  000E1A  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13564  000E1C  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13565  000E1E  6E01               	movwf	internalFlash_pageFromAddress@address,c
 13566  000E20  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13567  000E22  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13568  000E24  6E02               	movwf	internalFlash_pageFromAddress@address+1,c
 13569  000E26  0E00               	movlw	0
 13570  000E28  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13571  000E2A  6E03               	movwf	internalFlash_pageFromAddress@address+2,c
 13572  000E2C  0E00               	movlw	0
 13573  000E2E  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13574  000E30  6E04               	movwf	internalFlash_pageFromAddress@address+3,c
 13575  000E32  EC28  F03F         	call	_internalFlash_pageFromAddress	;wreg free
 13576  000E36  0100               	movlb	0	; () banked
 13577  000E38  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13578  000E3A  1801               	xorwf	?_internalFlash_pageFromAddress,w,c
 13579  000E3C  E12A               	bnz	l14193
 13580  000E3E  51F4               	movf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13581  000E40  1802               	xorwf	?_internalFlash_pageFromAddress+1,w,c
 13582  000E42  A4D8               	btfss	status,2,c
 13583  000E44  D026               	goto	l2334
 13584                           
 13585                           ; BSR set to: 0
 13586                           ;bootloader.c: 362: {;bootloader.c: 363: address_within_page = internalFlash_addressWith
      +                          inPage(address32+cntr, page_to_write);
 13587  000E46  51F1               	movf	__bootloader_program@cntr& (0+255),w,b
 13588  000E48  25EC               	addwf	__bootloader_program@address32& (0+255),w,b
 13589  000E4A  6E09               	movwf	internalFlash_addressWithinPage@address,c
 13590  000E4C  51F2               	movf	(__bootloader_program@cntr+1)& (0+255),w,b
 13591  000E4E  21ED               	addwfc	(__bootloader_program@address32+1)& (0+255),w,b
 13592  000E50  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 13593  000E52  0E00               	movlw	0
 13594  000E54  21EE               	addwfc	(__bootloader_program@address32+2)& (0+255),w,b
 13595  000E56  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 13596  000E58  0E00               	movlw	0
 13597  000E5A  21EF               	addwfc	(__bootloader_program@address32+3)& (0+255),w,b
 13598  000E5C  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 13599  000E5E  C0F3  F00D         	movff	__bootloader_program@page_to_write,internalFlash_addressWithinPage@page
 13600  000E62  C0F4  F00E         	movff	__bootloader_program@page_to_write+1,internalFlash_addressWithinPage@page+1
 13601  000E66  EC53  F037         	call	_internalFlash_addressWithinPage	;wreg free
 13602  000E6A  C009  F0E6         	movff	?_internalFlash_addressWithinPage,__bootloader_program@address_within_page
 13603  000E6E  C00A  F0E7         	movff	?_internalFlash_addressWithinPage+1,__bootloader_program@address_within_page+1
 13604                           
 13605                           ;bootloader.c: 364: buffer[address_within_page] = hex_file_entry.data[cntr];
 13606  000E72  0ECB               	movlw	low (_hex_file_entry+5)
 13607  000E74  0100               	movlb	0	; () banked
 13608  000E76  25F1               	addwf	__bootloader_program@cntr& (0+255),w,b
 13609  000E78  6ED9               	movwf	fsr2l,c
 13610  000E7A  0E01               	movlw	high (_hex_file_entry+5)
 13611  000E7C  21F2               	addwfc	(__bootloader_program@cntr+1)& (0+255),w,b
 13612  000E7E  6EDA               	movwf	fsr2h,c
 13613  000E80  51E6               	movf	__bootloader_program@address_within_page& (0+255),w,b
 13614  000E82  25E2               	addwf	__bootloader_program@buffer& (0+255),w,b
 13615  000E84  6EE1               	movwf	fsr1l,c
 13616  000E86  51E7               	movf	(__bootloader_program@address_within_page+1)& (0+255),w,b
 13617  000E88  21E3               	addwfc	(__bootloader_program@buffer+1)& (0+255),w,b
 13618  000E8A  6EE2               	movwf	fsr1h,c
 13619  000E8C  CFDF FFE7          	movff	indf2,indf1
 13620                           
 13621                           ;bootloader.c: 365: }
 13622  000E90  D01E               	goto	l2335
 13623  000E92                     l2334:
 13624  000E92                     l14193:
 13625                           
 13626                           ; BSR set to: 0
 13627                           ;bootloader.c: 366: else;bootloader.c: 367: {;bootloader.c: 369: hex_file_offset -= retu
      +                          rn_value;
 13628  000E92  51E8               	movf	__bootloader_program@return_value& (0+255),w,b
 13629  000E94  5F7C               	subwf	_hex_file_offset& (0+255),f,b
 13630  000E96  51E9               	movf	(__bootloader_program@return_value+1)& (0+255),w,b
 13631  000E98  5B7D               	subwfb	(_hex_file_offset+1)& (0+255),f,b
 13632  000E9A  51EA               	movf	(__bootloader_program@return_value+2)& (0+255),w,b
 13633  000E9C  5B7E               	subwfb	(_hex_file_offset+2)& (0+255),f,b
 13634  000E9E  51EB               	movf	(__bootloader_program@return_value+3)& (0+255),w,b
 13635  000EA0  5B7F               	subwfb	(_hex_file_offset+3)& (0+255),f,b
 13636                           
 13637                           ; BSR set to: 0
 13638                           ;bootloader.c: 370: --hex_file_entries;
 13639  000EA2  0101               	movlb	1	; () banked
 13640  000EA4  076A               	decf	_hex_file_entries& (0+255),f,b
 13641  000EA6  A0D8               	btfss	status,0,c
 13642  000EA8  076B               	decf	(_hex_file_entries+1)& (0+255),f,b
 13643                           
 13644                           ; BSR set to: 1
 13645                           ;bootloader.c: 372: start_from_byte_next = cntr;
 13646  000EAA  C0F1  F095         	movff	__bootloader_program@cntr,_start_from_byte_next
 13647                           
 13648                           ; BSR set to: 1
 13649                           ;bootloader.c: 374: internalFlash_erasePage(page_to_write);
 13650  000EAE  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13651  000EB2  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13652  000EB6  ECCE  F03C         	call	_internalFlash_erasePage	;wreg free
 13653                           
 13654                           ;bootloader.c: 375: internalFlash_writePage(page_to_write);
 13655  000EBA  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13656  000EBE  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13657  000EC2  ECC7  F032         	call	_internalFlash_writePage	;wreg free
 13658                           
 13659                           ;bootloader.c: 376: ++flash_pages_written;
 13660  000EC6  0101               	movlb	1	; () banked
 13661  000EC8  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13662  000ECA  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13663                           
 13664                           ; BSR set to: 1
 13665                           ;bootloader.c: 378: return;
 13666  000ECC  0012               	return	
 13667  000ECE                     l2335:
 13668                           
 13669                           ; BSR set to: 1
 13670  000ECE  0100               	movlb	0	; () banked
 13671  000ED0  4BF1               	infsnz	__bootloader_program@cntr& (0+255),f,b
 13672  000ED2  2BF2               	incf	(__bootloader_program@cntr+1)& (0+255),f,b
 13673  000ED4                     l2332:
 13674                           
 13675                           ; BSR set to: 0
 13676                           
 13677                           ; BSR set to: 0
 13678  000ED4  0101               	movlb	1	; () banked
 13679  000ED6  51C6               	movf	_hex_file_entry& (0+255),w,b
 13680  000ED8  0100               	movlb	0	; () banked
 13681  000EDA  5DF1               	subwf	__bootloader_program@cntr& (0+255),w,b
 13682  000EDC  0101               	movlb	1	; () banked
 13683  000EDE  51C7               	movf	(_hex_file_entry+1)& (0+255),w,b
 13684  000EE0  0100               	movlb	0	; () banked
 13685  000EE2  59F2               	subwfb	(__bootloader_program@cntr+1)& (0+255),w,b
 13686  000EE4  B0D8               	btfsc	status,0,c
 13687  000EE6  D67D               	goto	l2319
 13688  000EE8  D798               	goto	l2333
 13689  000EEA                     
 13690                           ;bootloader.c: 386: if(page_to_write!=0)
 13691                           
 13692                           ; BSR set to: 0
 13693  000EEA  0100               	movlb	0	; () banked
 13694  000EEC  51F3               	movf	__bootloader_program@page_to_write& (0+255),w,b
 13695  000EEE  11F4               	iorwf	(__bootloader_program@page_to_write+1)& (0+255),w,b
 13696  000EF0  B4D8               	btfsc	status,2,c
 13697  000EF2  0012               	return	
 13698                           
 13699                           ; BSR set to: 0
 13700                           ;bootloader.c: 387: {;bootloader.c: 389: internalFlash_erasePage(page_to_write);
 13701  000EF4  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_erasePage@page
 13702  000EF8  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_erasePage@page+1
 13703  000EFC  ECCE  F03C         	call	_internalFlash_erasePage	;wreg free
 13704                           
 13705                           ;bootloader.c: 390: internalFlash_writePage(page_to_write);
 13706  000F00  C0F3  F003         	movff	__bootloader_program@page_to_write,internalFlash_writePage@page
 13707  000F04  C0F4  F004         	movff	__bootloader_program@page_to_write+1,internalFlash_writePage@page+1
 13708  000F08  ECC7  F032         	call	_internalFlash_writePage	;wreg free
 13709                           
 13710                           ;bootloader.c: 391: ++flash_pages_written;
 13711  000F0C  0101               	movlb	1	; () banked
 13712  000F0E  4B66               	infsnz	_flash_pages_written& (0+255),f,b
 13713  000F10  2B67               	incf	(_flash_pages_written+1)& (0+255),f,b
 13714                           
 13715                           ; BSR set to: 1
 13716                           ;bootloader.c: 393: os.bootloader_mode = BOOTLOADER_MODE_DONE;
 13717  000F12  0E70               	movlw	112
 13718  000F14  0100               	movlb	0	; () banked
 13719  000F16  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 13720                           
 13721                           ; BSR set to: 0
 13722                           ;bootloader.c: 394: os.display_mode = DISPLAY_MODE_BOOTLOADER_DONE;
 13723  000F18  0E70               	movlw	112
 13724  000F1A  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 13725                           
 13726                           ; BSR set to: 0
 13727                           ;bootloader.c: 395: };bootloader.c: 397: return;
 13728                           
 13729                           ; BSR set to: 0
 13730  000F1C  0012               	return	
 13731  000F1E                     l2325:
 13732                           
 13733                           ; BSR set to: 0
 13734                           
 13735                           ; BSR set to: 0
 13736  000F1E  0101               	movlb	1	; () banked
 13737  000F20  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
 13738                           
 13739                           ; Switch size 1, requested type "space"
 13740                           ; Number of cases is 3, Range of values is 0 to 4
 13741                           ; switch strategies available:
 13742                           ; Name         Instructions Cycles
 13743                           ; simple_byte           10     6 (average)
 13744                           ;	Chosen strategy is simple_byte
 13745  000F22  0A00               	xorlw	0	; case 0
 13746  000F24  B4D8               	btfsc	status,2,c
 13747  000F26  D71D               	goto	l2329
 13748  000F28  0A01               	xorlw	1	; case 1
 13749  000F2A  B4D8               	btfsc	status,2,c
 13750  000F2C  D7DE               	goto	l2337
 13751  000F2E  0A05               	xorlw	5	; case 4
 13752  000F30  B4D8               	btfsc	status,2,c
 13753  000F32  D6F9               	goto	l2326
 13754                           
 13755                           ; BSR set to: 1
 13756                           
 13757                           ; BSR set to: 1
 13758  000F34  D656               	goto	l2319
 13759  000F36                     __end_of__bootloader_program:
 13760                           	opt stack 0
 13761                           tblptru	equ	0xFF8
 13762                           tblptrh	equ	0xFF7
 13763                           tblptrl	equ	0xFF6
 13764                           tablat	equ	0xFF5
 13765                           prodh	equ	0xFF4
 13766                           prodl	equ	0xFF3
 13767                           intcon	equ	0xFF2
 13768                           intcon2	equ	0xFF1
 13769                           intcon3	equ	0xFF0
 13770                           postinc0	equ	0xFEE
 13771                           wreg	equ	0xFE8
 13772                           indf1	equ	0xFE7
 13773                           postdec1	equ	0xFE5
 13774                           plusw1	equ	0xFE3
 13775                           fsr1h	equ	0xFE2
 13776                           fsr1l	equ	0xFE1
 13777                           indf2	equ	0xFDF
 13778                           postinc2	equ	0xFDE
 13779                           plusw2	equ	0xFDB
 13780                           fsr2h	equ	0xFDA
 13781                           fsr2l	equ	0xFD9
 13782                           status	equ	0xFD8
 13783                           
 13784 ;; *************** function _parseHexFileEntry *****************
 13785 ;; Defined at:
 13786 ;;		line 59 in file "hex.c"
 13787 ;; Parameters:    Size  Location     Type
 13788 ;;  data            2   11[COMRAM] PTR unsigned char 
 13789 ;;		 -> file_buffer(50), 
 13790 ;;  offset          4   13[COMRAM] unsigned long 
 13791 ;;  hexEntry        2   17[COMRAM] PTR struct HexFileEntry
 13792 ;;		 -> hex_file_entry(23), 
 13793 ;; Auto vars:     Size  Location     Type
 13794 ;;  i               1   27[COMRAM] unsigned char 
 13795 ;; Return value:  Size  Location     Type
 13796 ;;                  4   11[COMRAM] unsigned long 
 13797 ;; Registers used:
 13798 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 13799 ;; Tracked objects:
 13800 ;;		On entry : 0/0
 13801 ;;		On exit  : 0/0
 13802 ;;		Unchanged: 0/0
 13803 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 13804 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13805 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13806 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13807 ;;      Totals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 13808 ;;Total ram usage:       17 bytes
 13809 ;; Hardware stack levels used:    1
 13810 ;; Hardware stack levels required when called:    2
 13811 ;; This function calls:
 13812 ;;		_hexCharsToUint16
 13813 ;;		_hexCharsToUint8
 13814 ;; This function is called by:
 13815 ;;		__bootloader_verify_file
 13816 ;;		__bootloader_program
 13817 ;; This function uses a non-reentrant model
 13818 ;;
 13819                           
 13820                           	psect	text54
 13821  000020                     __ptext54:
 13822                           	opt stack 0
 13823  000020                     _parseHexFileEntry:
 13824                           	opt stack 26
 13825                           
 13826                           ;hex.c: 61: uint8_t i;;hex.c: 64: if (data[offset] != ':')
 13827                           
 13828                           ;incstack = 0
 13829  000020  500E               	movf	parseHexFileEntry@offset,w,c
 13830  000022  240C               	addwf	parseHexFileEntry@data,w,c
 13831  000024  6ED9               	movwf	fsr2l,c
 13832  000026  500F               	movf	parseHexFileEntry@offset+1,w,c
 13833  000028  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13834  00002A  6EDA               	movwf	fsr2h,c
 13835  00002C  0E3A               	movlw	58
 13836  00002E  18DE               	xorwf	postinc2,w,c
 13837  000030  B4D8               	btfsc	status,2,c
 13838  000032  D005               	goto	l2188
 13839                           
 13840                           ;hex.c: 65: {;hex.c: 66: return (uint32_t) RecordErrorStartCode;
 13841  000034  680C               	setf	?_parseHexFileEntry,c
 13842  000036  680D               	setf	?_parseHexFileEntry+1,c
 13843  000038  680E               	setf	?_parseHexFileEntry+2,c
 13844  00003A  680F               	setf	?_parseHexFileEntry+3,c
 13845  00003C  0012               	return	
 13846  00003E                     l2188:
 13847                           
 13848                           ;hex.c: 67: };hex.c: 70: hexEntry->dataLength = hexCharsToUint8(data[offset + 1], data[o
      +                          ffset + 2]);
 13849  00003E  0E02               	movlw	2
 13850  000040  240E               	addwf	parseHexFileEntry@offset,w,c
 13851  000042  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13852  000044  0E00               	movlw	0
 13853  000046  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13854  000048  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13855  00004A  5014               	movf	??_parseHexFileEntry,w,c
 13856  00004C  240C               	addwf	parseHexFileEntry@data,w,c
 13857  00004E  6ED9               	movwf	fsr2l,c
 13858  000050  5015               	movf	??_parseHexFileEntry+1,w,c
 13859  000052  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13860  000054  6EDA               	movwf	fsr2h,c
 13861  000056  50DF               	movf	indf2,w,c
 13862  000058  6E03               	movwf	hexCharsToUint8@c2,c
 13863  00005A  0E01               	movlw	1
 13864  00005C  240E               	addwf	parseHexFileEntry@offset,w,c
 13865  00005E  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13866  000060  0E00               	movlw	0
 13867  000062  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13868  000064  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13869  000066  5016               	movf	??_parseHexFileEntry+2,w,c
 13870  000068  240C               	addwf	parseHexFileEntry@data,w,c
 13871  00006A  6ED9               	movwf	fsr2l,c
 13872  00006C  5017               	movf	??_parseHexFileEntry+3,w,c
 13873  00006E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13874  000070  6EDA               	movwf	fsr2h,c
 13875  000072  50DF               	movf	indf2,w,c
 13876  000074  EC1A  F03F         	call	_hexCharsToUint8
 13877  000078  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13878  00007A  6A19               	clrf	(??_parseHexFileEntry+5)& (0+255),c
 13879  00007C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13880  000080  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13881  000084  C018  FFDE         	movff	??_parseHexFileEntry+4,postinc2
 13882  000088  C019  FFDD         	movff	??_parseHexFileEntry+5,postdec2
 13883                           
 13884                           ;hex.c: 71: if (hexEntry->dataLength > 16)
 13885  00008C  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 13886  000090  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 13887  000094  0E01               	movlw	1
 13888  000096  50DB               	movf	plusw2,w,c
 13889  000098  E104               	bnz	u9730
 13890  00009A  0E11               	movlw	17
 13891  00009C  5CDE               	subwf	postinc2,w,c
 13892  00009E  A0D8               	btfss	status,0,c
 13893  0000A0  D009               	goto	l2190
 13894  0000A2                     u9730:
 13895                           
 13896                           ;hex.c: 72: {;hex.c: 73: return (uint32_t) RecordErrorDataTooLong;
 13897  0000A2  0EFC               	movlw	252
 13898  0000A4  6E0C               	movwf	?_parseHexFileEntry,c
 13899  0000A6  0EFF               	movlw	255
 13900  0000A8  6E0D               	movwf	?_parseHexFileEntry+1,c
 13901  0000AA  0EFF               	movlw	255
 13902  0000AC  6E0E               	movwf	?_parseHexFileEntry+2,c
 13903  0000AE  0EFF               	movlw	255
 13904  0000B0  6E0F               	movwf	?_parseHexFileEntry+3,c
 13905  0000B2  0012               	return	
 13906  0000B4                     l2190:
 13907                           
 13908                           ;hex.c: 74: };hex.c: 77: hexEntry->address = hexCharsToUint16(data[offset + 3], data[off
      +                          set + 4], data[offset + 5], data[offset + 6]);
 13909  0000B4  0E04               	movlw	4
 13910  0000B6  240E               	addwf	parseHexFileEntry@offset,w,c
 13911  0000B8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13912  0000BA  0E00               	movlw	0
 13913  0000BC  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13914  0000BE  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13915  0000C0  5014               	movf	??_parseHexFileEntry,w,c
 13916  0000C2  240C               	addwf	parseHexFileEntry@data,w,c
 13917  0000C4  6ED9               	movwf	fsr2l,c
 13918  0000C6  5015               	movf	??_parseHexFileEntry+1,w,c
 13919  0000C8  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13920  0000CA  6EDA               	movwf	fsr2h,c
 13921  0000CC  50DF               	movf	indf2,w,c
 13922  0000CE  6E03               	movwf	hexCharsToUint16@c2,c
 13923  0000D0  0E05               	movlw	5
 13924  0000D2  240E               	addwf	parseHexFileEntry@offset,w,c
 13925  0000D4  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13926  0000D6  0E00               	movlw	0
 13927  0000D8  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13928  0000DA  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13929  0000DC  5016               	movf	??_parseHexFileEntry+2,w,c
 13930  0000DE  240C               	addwf	parseHexFileEntry@data,w,c
 13931  0000E0  6ED9               	movwf	fsr2l,c
 13932  0000E2  5017               	movf	??_parseHexFileEntry+3,w,c
 13933  0000E4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13934  0000E6  6EDA               	movwf	fsr2h,c
 13935  0000E8  50DF               	movf	indf2,w,c
 13936  0000EA  6E04               	movwf	hexCharsToUint16@c3,c
 13937  0000EC  0E06               	movlw	6
 13938  0000EE  240E               	addwf	parseHexFileEntry@offset,w,c
 13939  0000F0  6E18               	movwf	(??_parseHexFileEntry+4)& (0+255),c
 13940  0000F2  0E00               	movlw	0
 13941  0000F4  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13942  0000F6  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 13943  0000F8  5018               	movf	??_parseHexFileEntry+4,w,c
 13944  0000FA  240C               	addwf	parseHexFileEntry@data,w,c
 13945  0000FC  6ED9               	movwf	fsr2l,c
 13946  0000FE  5019               	movf	??_parseHexFileEntry+5,w,c
 13947  000100  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13948  000102  6EDA               	movwf	fsr2h,c
 13949  000104  50DF               	movf	indf2,w,c
 13950  000106  6E05               	movwf	hexCharsToUint16@c4,c
 13951  000108  0E03               	movlw	3
 13952  00010A  240E               	addwf	parseHexFileEntry@offset,w,c
 13953  00010C  6E1A               	movwf	(??_parseHexFileEntry+6)& (0+255),c
 13954  00010E  0E00               	movlw	0
 13955  000110  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13956  000112  6E1B               	movwf	(??_parseHexFileEntry+7)& (0+255),c
 13957  000114  501A               	movf	??_parseHexFileEntry+6,w,c
 13958  000116  240C               	addwf	parseHexFileEntry@data,w,c
 13959  000118  6ED9               	movwf	fsr2l,c
 13960  00011A  501B               	movf	??_parseHexFileEntry+7,w,c
 13961  00011C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13962  00011E  6EDA               	movwf	fsr2h,c
 13963  000120  50DF               	movf	indf2,w,c
 13964  000122  ECA3  F034         	call	_hexCharsToUint16
 13965  000126  EE20 F002          	lfsr	2,2
 13966  00012A  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13967  00012C  26D9               	addwf	fsr2l,f,c
 13968  00012E  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13969  000130  22DA               	addwfc	fsr2h,f,c
 13970  000132  C003  FFDE         	movff	?_hexCharsToUint16,postinc2
 13971  000136  C004  FFDD         	movff	?_hexCharsToUint16+1,postdec2
 13972                           
 13973                           ;hex.c: 80: hexEntry->recordType = (RecordType_t)hexCharsToUint8(data[offset + 7], data[
      +                          offset + 8]);
 13974  00013A  EE20 F004          	lfsr	2,4
 13975  00013E  5012               	movf	parseHexFileEntry@hexEntry,w,c
 13976  000140  26D9               	addwf	fsr2l,f,c
 13977  000142  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 13978  000144  22DA               	addwfc	fsr2h,f,c
 13979  000146  0E08               	movlw	8
 13980  000148  240E               	addwf	parseHexFileEntry@offset,w,c
 13981  00014A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 13982  00014C  0E00               	movlw	0
 13983  00014E  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13984  000150  6E15               	movwf	(??_parseHexFileEntry+1)& (0+255),c
 13985  000152  5014               	movf	??_parseHexFileEntry,w,c
 13986  000154  240C               	addwf	parseHexFileEntry@data,w,c
 13987  000156  6EE1               	movwf	fsr1l,c
 13988  000158  5015               	movf	??_parseHexFileEntry+1,w,c
 13989  00015A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 13990  00015C  6EE2               	movwf	fsr1h,c
 13991  00015E  50E7               	movf	indf1,w,c
 13992  000160  6E03               	movwf	hexCharsToUint8@c2,c
 13993  000162  0E07               	movlw	7
 13994  000164  240E               	addwf	parseHexFileEntry@offset,w,c
 13995  000166  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 13996  000168  0E00               	movlw	0
 13997  00016A  200F               	addwfc	parseHexFileEntry@offset+1,w,c
 13998  00016C  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 13999  00016E  5016               	movf	??_parseHexFileEntry+2,w,c
 14000  000170  240C               	addwf	parseHexFileEntry@data,w,c
 14001  000172  6EE1               	movwf	fsr1l,c
 14002  000174  5017               	movf	??_parseHexFileEntry+3,w,c
 14003  000176  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14004  000178  6EE2               	movwf	fsr1h,c
 14005  00017A  50E7               	movf	indf1,w,c
 14006  00017C  EC1A  F03F         	call	_hexCharsToUint8
 14007  000180  6EDF               	movwf	indf2,c
 14008                           
 14009                           ;hex.c: 83: for (i = 0; i < hexEntry->dataLength; ++i)
 14010  000182  0E00               	movlw	0
 14011  000184  6E1C               	movwf	parseHexFileEntry@i,c
 14012  000186  D03D               	goto	l2191
 14013  000188                     
 14014                           ;hex.c: 84: {;hex.c: 85: hexEntry->data[i] = hexCharsToUint8(data[offset + 9 + i + i], d
      +                          ata[offset + 10 + i + i]);
 14015  000188  501C               	movf	parseHexFileEntry@i,w,c
 14016  00018A  0D01               	mullw	1
 14017  00018C  0E05               	movlw	5
 14018  00018E  26F3               	addwf	prodl,f,c
 14019  000190  0E00               	movlw	0
 14020  000192  22F4               	addwfc	prodh,f,c
 14021  000194  50F3               	movf	prodl,w,c
 14022  000196  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 14023  000198  6ED9               	movwf	fsr2l,c
 14024  00019A  50F4               	movf	prodh,w,c
 14025  00019C  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 14026  00019E  6EDA               	movwf	fsr2h,c
 14027  0001A0  501C               	movf	parseHexFileEntry@i,w,c
 14028  0001A2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 14029  0001A6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 14030  0001A8  2614               	addwf	??_parseHexFileEntry,f,c
 14031  0001AA  0E00               	movlw	0
 14032  0001AC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14033  0001AE  500E               	movf	parseHexFileEntry@offset,w,c
 14034  0001B0  2614               	addwf	??_parseHexFileEntry,f,c
 14035  0001B2  500F               	movf	parseHexFileEntry@offset+1,w,c
 14036  0001B4  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14037  0001B6  0E0A               	movlw	10
 14038  0001B8  2614               	addwf	??_parseHexFileEntry,f,c
 14039  0001BA  0E00               	movlw	0
 14040  0001BC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14041  0001BE  5014               	movf	??_parseHexFileEntry,w,c
 14042  0001C0  240C               	addwf	parseHexFileEntry@data,w,c
 14043  0001C2  6EE1               	movwf	fsr1l,c
 14044  0001C4  5015               	movf	??_parseHexFileEntry+1,w,c
 14045  0001C6  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14046  0001C8  6EE2               	movwf	fsr1h,c
 14047  0001CA  50E7               	movf	indf1,w,c
 14048  0001CC  6E03               	movwf	hexCharsToUint8@c2,c
 14049  0001CE  501C               	movf	parseHexFileEntry@i,w,c
 14050  0001D0  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 14051  0001D4  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 14052  0001D6  2616               	addwf	??_parseHexFileEntry+2,f,c
 14053  0001D8  0E00               	movlw	0
 14054  0001DA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14055  0001DC  500E               	movf	parseHexFileEntry@offset,w,c
 14056  0001DE  2616               	addwf	??_parseHexFileEntry+2,f,c
 14057  0001E0  500F               	movf	parseHexFileEntry@offset+1,w,c
 14058  0001E2  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14059  0001E4  0E09               	movlw	9
 14060  0001E6  2616               	addwf	??_parseHexFileEntry+2,f,c
 14061  0001E8  0E00               	movlw	0
 14062  0001EA  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14063  0001EC  5016               	movf	??_parseHexFileEntry+2,w,c
 14064  0001EE  240C               	addwf	parseHexFileEntry@data,w,c
 14065  0001F0  6EE1               	movwf	fsr1l,c
 14066  0001F2  5017               	movf	??_parseHexFileEntry+3,w,c
 14067  0001F4  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14068  0001F6  6EE2               	movwf	fsr1h,c
 14069  0001F8  50E7               	movf	indf1,w,c
 14070  0001FA  EC1A  F03F         	call	_hexCharsToUint8
 14071  0001FE  6EDF               	movwf	indf2,c
 14072  000200  2A1C               	incf	parseHexFileEntry@i,f,c
 14073  000202                     l2191:
 14074  000202  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 14075  000206  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 14076  00020A  501C               	movf	parseHexFileEntry@i,w,c
 14077  00020C  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 14078  00020E  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 14079  000210  50DE               	movf	postinc2,w,c
 14080  000212  5C16               	subwf	??_parseHexFileEntry+2,w,c
 14081  000214  50DE               	movf	postinc2,w,c
 14082  000216  5817               	subwfb	??_parseHexFileEntry+3,w,c
 14083  000218  A0D8               	btfss	status,0,c
 14084  00021A  D7B6               	goto	l2192
 14085                           
 14086                           ;hex.c: 86: };hex.c: 89: hexEntry->checksum = hexCharsToUint8(data[offset + 9 + i + i], 
      +                          data[offset + 10 + i + i]);
 14087  00021C  EE20 F015          	lfsr	2,21
 14088  000220  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14089  000222  26D9               	addwf	fsr2l,f,c
 14090  000224  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14091  000226  22DA               	addwfc	fsr2h,f,c
 14092  000228  501C               	movf	parseHexFileEntry@i,w,c
 14093  00022A  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 14094  00022E  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 14095  000230  2614               	addwf	??_parseHexFileEntry,f,c
 14096  000232  0E00               	movlw	0
 14097  000234  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14098  000236  500E               	movf	parseHexFileEntry@offset,w,c
 14099  000238  2614               	addwf	??_parseHexFileEntry,f,c
 14100  00023A  500F               	movf	parseHexFileEntry@offset+1,w,c
 14101  00023C  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14102  00023E  0E0A               	movlw	10
 14103  000240  2614               	addwf	??_parseHexFileEntry,f,c
 14104  000242  0E00               	movlw	0
 14105  000244  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14106  000246  5014               	movf	??_parseHexFileEntry,w,c
 14107  000248  240C               	addwf	parseHexFileEntry@data,w,c
 14108  00024A  6EE1               	movwf	fsr1l,c
 14109  00024C  5015               	movf	??_parseHexFileEntry+1,w,c
 14110  00024E  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14111  000250  6EE2               	movwf	fsr1h,c
 14112  000252  50E7               	movf	indf1,w,c
 14113  000254  6E03               	movwf	hexCharsToUint8@c2,c
 14114  000256  501C               	movf	parseHexFileEntry@i,w,c
 14115  000258  C01C  F016         	movff	parseHexFileEntry@i,??_parseHexFileEntry+2
 14116  00025C  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 14117  00025E  2616               	addwf	??_parseHexFileEntry+2,f,c
 14118  000260  0E00               	movlw	0
 14119  000262  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14120  000264  500E               	movf	parseHexFileEntry@offset,w,c
 14121  000266  2616               	addwf	??_parseHexFileEntry+2,f,c
 14122  000268  500F               	movf	parseHexFileEntry@offset+1,w,c
 14123  00026A  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14124  00026C  0E09               	movlw	9
 14125  00026E  2616               	addwf	??_parseHexFileEntry+2,f,c
 14126  000270  0E00               	movlw	0
 14127  000272  2217               	addwfc	??_parseHexFileEntry+3,f,c
 14128  000274  5016               	movf	??_parseHexFileEntry+2,w,c
 14129  000276  240C               	addwf	parseHexFileEntry@data,w,c
 14130  000278  6EE1               	movwf	fsr1l,c
 14131  00027A  5017               	movf	??_parseHexFileEntry+3,w,c
 14132  00027C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14133  00027E  6EE2               	movwf	fsr1h,c
 14134  000280  50E7               	movf	indf1,w,c
 14135  000282  EC1A  F03F         	call	_hexCharsToUint8
 14136  000286  6EDF               	movwf	indf2,c
 14137                           
 14138                           ;hex.c: 92: hexEntry->checksumCheck = hexEntry->dataLength;
 14139  000288  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 14140  00028C  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 14141  000290  EE10 F016          	lfsr	1,22
 14142  000294  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14143  000296  26E1               	addwf	fsr1l,f,c
 14144  000298  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14145  00029A  22E2               	addwfc	fsr1h,f,c
 14146  00029C  CFDF FFE7          	movff	indf2,indf1
 14147                           
 14148                           ;hex.c: 93: hexEntry->checksumCheck += (hexEntry->address >> 8);
 14149  0002A0  EE20 F002          	lfsr	2,2
 14150  0002A4  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14151  0002A6  26D9               	addwf	fsr2l,f,c
 14152  0002A8  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14153  0002AA  22DA               	addwfc	fsr2h,f,c
 14154  0002AC  CFDE F014          	movff	postinc2,??_parseHexFileEntry
 14155  0002B0  CFDD F015          	movff	postdec2,??_parseHexFileEntry+1
 14156  0002B4  C015  F014         	movff	??_parseHexFileEntry+1,??_parseHexFileEntry
 14157  0002B8  6A15               	clrf	??_parseHexFileEntry+1,c
 14158  0002BA  EE20 F016          	lfsr	2,22
 14159  0002BE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14160  0002C0  26D9               	addwf	fsr2l,f,c
 14161  0002C2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14162  0002C4  22DA               	addwfc	fsr2h,f,c
 14163  0002C6  5014               	movf	??_parseHexFileEntry,w,c
 14164  0002C8  26DF               	addwf	indf2,f,c
 14165                           
 14166                           ;hex.c: 94: hexEntry->checksumCheck += (hexEntry->address & 0xFF);
 14167  0002CA  EE20 F002          	lfsr	2,2
 14168  0002CE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14169  0002D0  26D9               	addwf	fsr2l,f,c
 14170  0002D2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14171  0002D4  22DA               	addwfc	fsr2h,f,c
 14172  0002D6  50DF               	movf	indf2,w,c
 14173  0002D8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 14174  0002DA  EE20 F016          	lfsr	2,22
 14175  0002DE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14176  0002E0  26D9               	addwf	fsr2l,f,c
 14177  0002E2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14178  0002E4  22DA               	addwfc	fsr2h,f,c
 14179  0002E6  5014               	movf	??_parseHexFileEntry,w,c
 14180  0002E8  26DF               	addwf	indf2,f,c
 14181                           
 14182                           ;hex.c: 95: hexEntry->checksumCheck += hexEntry->recordType;
 14183  0002EA  EE20 F004          	lfsr	2,4
 14184  0002EE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14185  0002F0  26D9               	addwf	fsr2l,f,c
 14186  0002F2  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14187  0002F4  22DA               	addwfc	fsr2h,f,c
 14188  0002F6  50DF               	movf	indf2,w,c
 14189  0002F8  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 14190  0002FA  EE20 F016          	lfsr	2,22
 14191  0002FE  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14192  000300  26D9               	addwf	fsr2l,f,c
 14193  000302  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14194  000304  22DA               	addwfc	fsr2h,f,c
 14195  000306  5014               	movf	??_parseHexFileEntry,w,c
 14196  000308  26DF               	addwf	indf2,f,c
 14197                           
 14198                           ;hex.c: 96: for (i = 0; i < hexEntry->dataLength; ++i)
 14199  00030A  0E00               	movlw	0
 14200  00030C  6E1C               	movwf	parseHexFileEntry@i,c
 14201  00030E  D017               	goto	l2194
 14202  000310                     
 14203                           ;hex.c: 97: {;hex.c: 98: hexEntry->checksumCheck += hexEntry->data[i];
 14204  000310  501C               	movf	parseHexFileEntry@i,w,c
 14205  000312  0D01               	mullw	1
 14206  000314  0E05               	movlw	5
 14207  000316  26F3               	addwf	prodl,f,c
 14208  000318  0E00               	movlw	0
 14209  00031A  22F4               	addwfc	prodh,f,c
 14210  00031C  50F3               	movf	prodl,w,c
 14211  00031E  2412               	addwf	parseHexFileEntry@hexEntry,w,c
 14212  000320  6ED9               	movwf	fsr2l,c
 14213  000322  50F4               	movf	prodh,w,c
 14214  000324  2013               	addwfc	parseHexFileEntry@hexEntry+1,w,c
 14215  000326  6EDA               	movwf	fsr2h,c
 14216  000328  50DF               	movf	indf2,w,c
 14217  00032A  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 14218  00032C  EE20 F016          	lfsr	2,22
 14219  000330  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14220  000332  26D9               	addwf	fsr2l,f,c
 14221  000334  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14222  000336  22DA               	addwfc	fsr2h,f,c
 14223  000338  5014               	movf	??_parseHexFileEntry,w,c
 14224  00033A  26DF               	addwf	indf2,f,c
 14225  00033C  2A1C               	incf	parseHexFileEntry@i,f,c
 14226  00033E                     l2194:
 14227  00033E  C012  FFD9         	movff	parseHexFileEntry@hexEntry,fsr2l
 14228  000342  C013  FFDA         	movff	parseHexFileEntry@hexEntry+1,fsr2h
 14229  000346  501C               	movf	parseHexFileEntry@i,w,c
 14230  000348  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 14231  00034A  6A17               	clrf	(??_parseHexFileEntry+3)& (0+255),c
 14232  00034C  50DE               	movf	postinc2,w,c
 14233  00034E  5C16               	subwf	??_parseHexFileEntry+2,w,c
 14234  000350  50DE               	movf	postinc2,w,c
 14235  000352  5817               	subwfb	??_parseHexFileEntry+3,w,c
 14236  000354  A0D8               	btfss	status,0,c
 14237  000356  D7DC               	goto	l2195
 14238                           
 14239                           ;hex.c: 99: };hex.c: 100: hexEntry->checksumCheck += hexEntry->checksum;
 14240  000358  EE20 F015          	lfsr	2,21
 14241  00035C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14242  00035E  26D9               	addwf	fsr2l,f,c
 14243  000360  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14244  000362  22DA               	addwfc	fsr2h,f,c
 14245  000364  50DF               	movf	indf2,w,c
 14246  000366  6E14               	movwf	??_parseHexFileEntry& (0+255),c
 14247  000368  EE20 F016          	lfsr	2,22
 14248  00036C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14249  00036E  26D9               	addwf	fsr2l,f,c
 14250  000370  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14251  000372  22DA               	addwfc	fsr2h,f,c
 14252  000374  5014               	movf	??_parseHexFileEntry,w,c
 14253  000376  26DF               	addwf	indf2,f,c
 14254                           
 14255                           ;hex.c: 103: if (hexEntry->checksumCheck != 0)
 14256  000378  EE20 F016          	lfsr	2,22
 14257  00037C  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14258  00037E  26D9               	addwf	fsr2l,f,c
 14259  000380  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14260  000382  22DA               	addwfc	fsr2h,f,c
 14261  000384  50DF               	movf	indf2,w,c
 14262  000386  B4D8               	btfsc	status,2,c
 14263  000388  D009               	goto	l2197
 14264                           
 14265                           ;hex.c: 104: {;hex.c: 105: return (uint32_t) RecordErrorChecksum;
 14266  00038A  0EFE               	movlw	254
 14267  00038C  6E0C               	movwf	?_parseHexFileEntry,c
 14268  00038E  0EFF               	movlw	255
 14269  000390  6E0D               	movwf	?_parseHexFileEntry+1,c
 14270  000392  0EFF               	movlw	255
 14271  000394  6E0E               	movwf	?_parseHexFileEntry+2,c
 14272  000396  0EFF               	movlw	255
 14273  000398  6E0F               	movwf	?_parseHexFileEntry+3,c
 14274  00039A  0012               	return	
 14275  00039C                     l2197:
 14276                           
 14277                           ;hex.c: 106: };hex.c: 109: if (hexEntry->recordType == RecordTypeEndOfFile)
 14278  00039C  EE20 F004          	lfsr	2,4
 14279  0003A0  5012               	movf	parseHexFileEntry@hexEntry,w,c
 14280  0003A2  26D9               	addwf	fsr2l,f,c
 14281  0003A4  5013               	movf	parseHexFileEntry@hexEntry+1,w,c
 14282  0003A6  22DA               	addwfc	fsr2h,f,c
 14283  0003A8  04DE               	decf	postinc2,w,c
 14284  0003AA  A4D8               	btfss	status,2,c
 14285  0003AC  D009               	goto	l2198
 14286                           
 14287                           ;hex.c: 110: {;hex.c: 112: return 0;
 14288  0003AE  0E00               	movlw	0
 14289  0003B0  6E0C               	movwf	?_parseHexFileEntry,c
 14290  0003B2  0E00               	movlw	0
 14291  0003B4  6E0D               	movwf	?_parseHexFileEntry+1,c
 14292  0003B6  0E00               	movlw	0
 14293  0003B8  6E0E               	movwf	?_parseHexFileEntry+2,c
 14294  0003BA  0E00               	movlw	0
 14295  0003BC  6E0F               	movwf	?_parseHexFileEntry+3,c
 14296                           
 14297                           ;hex.c: 113: }
 14298  0003BE  0012               	return	
 14299  0003C0                     l2198:
 14300                           
 14301                           ;hex.c: 114: else;hex.c: 115: {;hex.c: 116: offset += 11 + i + i;
 14302  0003C0  501C               	movf	parseHexFileEntry@i,w,c
 14303  0003C2  C01C  F014         	movff	parseHexFileEntry@i,??_parseHexFileEntry
 14304  0003C6  6A15               	clrf	(??_parseHexFileEntry+1)& (0+255),c
 14305  0003C8  2614               	addwf	??_parseHexFileEntry,f,c
 14306  0003CA  0E00               	movlw	0
 14307  0003CC  2215               	addwfc	??_parseHexFileEntry+1,f,c
 14308  0003CE  0E0B               	movlw	11
 14309  0003D0  2414               	addwf	??_parseHexFileEntry,w,c
 14310  0003D2  6E16               	movwf	(??_parseHexFileEntry+2)& (0+255),c
 14311  0003D4  0E00               	movlw	0
 14312  0003D6  2015               	addwfc	??_parseHexFileEntry+1,w,c
 14313  0003D8  6E17               	movwf	(??_parseHexFileEntry+3)& (0+255),c
 14314  0003DA  6A18               	clrf	(??_parseHexFileEntry+4)& (0+255),c
 14315  0003DC  BE17               	btfsc	(??_parseHexFileEntry+3)& (0+255),7,c
 14316  0003DE  0618               	decf	(??_parseHexFileEntry+4)& (0+255),f,c
 14317  0003E0  5018               	movf	(??_parseHexFileEntry+4)& (0+255),w,c
 14318  0003E2  6E19               	movwf	(??_parseHexFileEntry+5)& (0+255),c
 14319  0003E4  5016               	movf	??_parseHexFileEntry+2,w,c
 14320  0003E6  260E               	addwf	parseHexFileEntry@offset,f,c
 14321  0003E8  5017               	movf	??_parseHexFileEntry+3,w,c
 14322  0003EA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 14323  0003EC  5018               	movf	??_parseHexFileEntry+4,w,c
 14324  0003EE  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 14325  0003F0  5019               	movf	??_parseHexFileEntry+5,w,c
 14326  0003F2  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 14327                           
 14328                           ;hex.c: 117: if (data[++offset] == ':')
 14329  0003F4  0E01               	movlw	1
 14330  0003F6  260E               	addwf	parseHexFileEntry@offset,f,c
 14331  0003F8  0E00               	movlw	0
 14332  0003FA  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 14333  0003FC  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 14334  0003FE  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 14335  000400  500E               	movf	parseHexFileEntry@offset,w,c
 14336  000402  240C               	addwf	parseHexFileEntry@data,w,c
 14337  000404  6ED9               	movwf	fsr2l,c
 14338  000406  500F               	movf	parseHexFileEntry@offset+1,w,c
 14339  000408  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14340  00040A  6EDA               	movwf	fsr2h,c
 14341  00040C  0E3A               	movlw	58
 14342  00040E  18DE               	xorwf	postinc2,w,c
 14343  000410  A4D8               	btfss	status,2,c
 14344  000412  D009               	goto	l2200
 14345                           
 14346                           ;hex.c: 118: {;hex.c: 119: return offset;
 14347  000414  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 14348  000418  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 14349  00041C  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 14350  000420  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 14351                           
 14352                           ;hex.c: 120: }
 14353  000424  0012               	return	
 14354  000426                     l2200:
 14355                           
 14356                           ;hex.c: 121: else if (data[++offset] == ':')
 14357  000426  0E01               	movlw	1
 14358  000428  260E               	addwf	parseHexFileEntry@offset,f,c
 14359  00042A  0E00               	movlw	0
 14360  00042C  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 14361  00042E  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 14362  000430  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 14363  000432  500E               	movf	parseHexFileEntry@offset,w,c
 14364  000434  240C               	addwf	parseHexFileEntry@data,w,c
 14365  000436  6ED9               	movwf	fsr2l,c
 14366  000438  500F               	movf	parseHexFileEntry@offset+1,w,c
 14367  00043A  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14368  00043C  6EDA               	movwf	fsr2h,c
 14369  00043E  0E3A               	movlw	58
 14370  000440  18DE               	xorwf	postinc2,w,c
 14371  000442  A4D8               	btfss	status,2,c
 14372  000444  D009               	goto	l2202
 14373                           
 14374                           ;hex.c: 122: {;hex.c: 123: return offset;
 14375  000446  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 14376  00044A  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 14377  00044E  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 14378  000452  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 14379                           
 14380                           ;hex.c: 124: }
 14381  000456  0012               	return	
 14382  000458                     l2202:
 14383                           
 14384                           ;hex.c: 125: else if (data[++offset] == ':')
 14385  000458  0E01               	movlw	1
 14386  00045A  260E               	addwf	parseHexFileEntry@offset,f,c
 14387  00045C  0E00               	movlw	0
 14388  00045E  220F               	addwfc	parseHexFileEntry@offset+1,f,c
 14389  000460  2210               	addwfc	parseHexFileEntry@offset+2,f,c
 14390  000462  2211               	addwfc	parseHexFileEntry@offset+3,f,c
 14391  000464  500E               	movf	parseHexFileEntry@offset,w,c
 14392  000466  240C               	addwf	parseHexFileEntry@data,w,c
 14393  000468  6ED9               	movwf	fsr2l,c
 14394  00046A  500F               	movf	parseHexFileEntry@offset+1,w,c
 14395  00046C  200D               	addwfc	parseHexFileEntry@data+1,w,c
 14396  00046E  6EDA               	movwf	fsr2h,c
 14397  000470  0E3A               	movlw	58
 14398  000472  18DE               	xorwf	postinc2,w,c
 14399  000474  A4D8               	btfss	status,2,c
 14400  000476  D009               	goto	l2204
 14401                           
 14402                           ;hex.c: 126: {;hex.c: 127: return offset;
 14403  000478  C00E  F00C         	movff	parseHexFileEntry@offset,?_parseHexFileEntry
 14404  00047C  C00F  F00D         	movff	parseHexFileEntry@offset+1,?_parseHexFileEntry+1
 14405  000480  C010  F00E         	movff	parseHexFileEntry@offset+2,?_parseHexFileEntry+2
 14406  000484  C011  F00F         	movff	parseHexFileEntry@offset+3,?_parseHexFileEntry+3
 14407                           
 14408                           ;hex.c: 128: }
 14409  000488  0012               	return	
 14410  00048A                     l2204:
 14411                           
 14412                           ;hex.c: 129: else;hex.c: 130: {;hex.c: 132: return (uint32_t) RecordErrorNoNextRecord;
 14413  00048A  0EFD               	movlw	253
 14414  00048C  6E0C               	movwf	?_parseHexFileEntry,c
 14415  00048E  0EFF               	movlw	255
 14416  000490  6E0D               	movwf	?_parseHexFileEntry+1,c
 14417  000492  0EFF               	movlw	255
 14418  000494  6E0E               	movwf	?_parseHexFileEntry+2,c
 14419  000496  0EFF               	movlw	255
 14420  000498  6E0F               	movwf	?_parseHexFileEntry+3,c
 14421  00049A  0012               	return	
 14422  00049C                     __end_of_parseHexFileEntry:
 14423                           	opt stack 0
 14424                           tblptru	equ	0xFF8
 14425                           tblptrh	equ	0xFF7
 14426                           tblptrl	equ	0xFF6
 14427                           tablat	equ	0xFF5
 14428                           prodh	equ	0xFF4
 14429                           prodl	equ	0xFF3
 14430                           intcon	equ	0xFF2
 14431                           intcon2	equ	0xFF1
 14432                           intcon3	equ	0xFF0
 14433                           postinc0	equ	0xFEE
 14434                           wreg	equ	0xFE8
 14435                           indf1	equ	0xFE7
 14436                           postdec1	equ	0xFE5
 14437                           plusw1	equ	0xFE3
 14438                           fsr1h	equ	0xFE2
 14439                           fsr1l	equ	0xFE1
 14440                           indf2	equ	0xFDF
 14441                           postinc2	equ	0xFDE
 14442                           postdec2	equ	0xFDD
 14443                           plusw2	equ	0xFDB
 14444                           fsr2h	equ	0xFDA
 14445                           fsr2l	equ	0xFD9
 14446                           status	equ	0xFD8
 14447                           
 14448 ;; *************** function _hexCharsToUint8 *****************
 14449 ;; Defined at:
 14450 ;;		line 42 in file "hex.c"
 14451 ;; Parameters:    Size  Location     Type
 14452 ;;  c1              1    wreg     unsigned char 
 14453 ;;  c2              1    2[COMRAM] unsigned char 
 14454 ;; Auto vars:     Size  Location     Type
 14455 ;;  c1              1    4[COMRAM] unsigned char 
 14456 ;;  retVal          1    5[COMRAM] unsigned char 
 14457 ;; Return value:  Size  Location     Type
 14458 ;;                  1    wreg      unsigned char 
 14459 ;; Registers used:
 14460 ;;		wreg, status,2, status,0, cstack
 14461 ;; Tracked objects:
 14462 ;;		On entry : 0/0
 14463 ;;		On exit  : 0/0
 14464 ;;		Unchanged: 0/0
 14465 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14466 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14467 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14468 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14469 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14470 ;;Total ram usage:        4 bytes
 14471 ;; Hardware stack levels used:    1
 14472 ;; Hardware stack levels required when called:    1
 14473 ;; This function calls:
 14474 ;;		_hexCharToUint8
 14475 ;; This function is called by:
 14476 ;;		_parseHexFileEntry
 14477 ;; This function uses a non-reentrant model
 14478 ;;
 14479                           
 14480                           	psect	text55
 14481  007E34                     __ptext55:
 14482                           	opt stack 0
 14483  007E34                     _hexCharsToUint8:
 14484                           	opt stack 26
 14485                           
 14486                           ;incstack = 0
 14487                           ;hexCharsToUint8@c1 stored from wreg
 14488  007E34  6E05               	movwf	hexCharsToUint8@c1,c
 14489                           
 14490                           ;hex.c: 44: uint8_t retVal = (hexCharToUint8(c1) << 4);
 14491  007E36  5005               	movf	hexCharsToUint8@c1,w,c
 14492  007E38  ECDD  F03D         	call	_hexCharToUint8
 14493  007E3C  6E04               	movwf	??_hexCharsToUint8& (0+255),c
 14494  007E3E  3804               	swapf	??_hexCharsToUint8,w,c
 14495  007E40  0BF0               	andlw	240
 14496  007E42  6E06               	movwf	hexCharsToUint8@retVal,c
 14497                           
 14498                           ;hex.c: 45: retVal |= hexCharToUint8(c2);
 14499  007E44  5003               	movf	hexCharsToUint8@c2,w,c
 14500  007E46  ECDD  F03D         	call	_hexCharToUint8
 14501  007E4A  1206               	iorwf	hexCharsToUint8@retVal,f,c
 14502                           
 14503                           ;hex.c: 46: return retVal;
 14504  007E4C  5006               	movf	hexCharsToUint8@retVal,w,c
 14505  007E4E  0012               	return	
 14506  007E50                     __end_of_hexCharsToUint8:
 14507                           	opt stack 0
 14508                           tblptru	equ	0xFF8
 14509                           tblptrh	equ	0xFF7
 14510                           tblptrl	equ	0xFF6
 14511                           tablat	equ	0xFF5
 14512                           prodh	equ	0xFF4
 14513                           prodl	equ	0xFF3
 14514                           intcon	equ	0xFF2
 14515                           intcon2	equ	0xFF1
 14516                           intcon3	equ	0xFF0
 14517                           postinc0	equ	0xFEE
 14518                           wreg	equ	0xFE8
 14519                           indf1	equ	0xFE7
 14520                           postdec1	equ	0xFE5
 14521                           plusw1	equ	0xFE3
 14522                           fsr1h	equ	0xFE2
 14523                           fsr1l	equ	0xFE1
 14524                           indf2	equ	0xFDF
 14525                           postinc2	equ	0xFDE
 14526                           postdec2	equ	0xFDD
 14527                           plusw2	equ	0xFDB
 14528                           fsr2h	equ	0xFDA
 14529                           fsr2l	equ	0xFD9
 14530                           status	equ	0xFD8
 14531                           
 14532 ;; *************** function _hexCharsToUint16 *****************
 14533 ;; Defined at:
 14534 ;;		line 49 in file "hex.c"
 14535 ;; Parameters:    Size  Location     Type
 14536 ;;  c1              1    wreg     unsigned char 
 14537 ;;  c2              1    2[COMRAM] unsigned char 
 14538 ;;  c3              1    3[COMRAM] unsigned char 
 14539 ;;  c4              1    4[COMRAM] unsigned char 
 14540 ;; Auto vars:     Size  Location     Type
 14541 ;;  c1              1    8[COMRAM] unsigned char 
 14542 ;;  retVal          2    9[COMRAM] unsigned int 
 14543 ;; Return value:  Size  Location     Type
 14544 ;;                  2    2[COMRAM] unsigned int 
 14545 ;; Registers used:
 14546 ;;		wreg, status,2, status,0, cstack
 14547 ;; Tracked objects:
 14548 ;;		On entry : 0/0
 14549 ;;		On exit  : 0/0
 14550 ;;		Unchanged: 0/0
 14551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14552 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14553 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14554 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14555 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14556 ;;Total ram usage:        9 bytes
 14557 ;; Hardware stack levels used:    1
 14558 ;; Hardware stack levels required when called:    1
 14559 ;; This function calls:
 14560 ;;		_hexCharToUint8
 14561 ;; This function is called by:
 14562 ;;		_parseHexFileEntry
 14563 ;; This function uses a non-reentrant model
 14564 ;;
 14565                           
 14566                           	psect	text56
 14567  006946                     __ptext56:
 14568                           	opt stack 0
 14569  006946                     _hexCharsToUint16:
 14570                           	opt stack 26
 14571                           
 14572                           ;incstack = 0
 14573                           ;hexCharsToUint16@c1 stored from wreg
 14574  006946  6E09               	movwf	hexCharsToUint16@c1,c
 14575                           
 14576                           ;hex.c: 51: uint16_t retVal = (hexCharToUint8(c1) << 12);
 14577  006948  5009               	movf	hexCharsToUint16@c1,w,c
 14578  00694A  ECDD  F03D         	call	_hexCharToUint8
 14579  00694E  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14580  006950  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14581  006952  0E0C               	movlw	12
 14582  006954                     u8995:
 14583  006954  90D8               	bcf	status,0,c
 14584  006956  3606               	rlcf	??_hexCharsToUint16,f,c
 14585  006958  3607               	rlcf	??_hexCharsToUint16+1,f,c
 14586  00695A  2EE8               	decfsz	wreg,f,c
 14587  00695C  D7FB               	goto	u8995
 14588  00695E  C006  F00A         	movff	??_hexCharsToUint16,hexCharsToUint16@retVal
 14589  006962  C007  F00B         	movff	??_hexCharsToUint16+1,hexCharsToUint16@retVal+1
 14590                           
 14591                           ;hex.c: 52: retVal |= (hexCharToUint8(c2) << 8);
 14592  006966  5003               	movf	hexCharsToUint16@c2,w,c
 14593  006968  ECDD  F03D         	call	_hexCharToUint8
 14594  00696C  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14595  00696E  5006               	movf	??_hexCharsToUint16,w,c
 14596  006970  6E08               	movwf	(??_hexCharsToUint16+2)& (0+255),c
 14597  006972  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14598  006974  5007               	movf	??_hexCharsToUint16+1,w,c
 14599  006976  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14600  006978  5008               	movf	??_hexCharsToUint16+2,w,c
 14601  00697A  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14602                           
 14603                           ;hex.c: 53: retVal |= (hexCharToUint8(c3) << 4);
 14604  00697C  5004               	movf	hexCharsToUint16@c3,w,c
 14605  00697E  ECDD  F03D         	call	_hexCharToUint8
 14606  006982  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14607  006984  6A07               	clrf	(??_hexCharsToUint16+1)& (0+255),c
 14608  006986  3A06               	swapf	??_hexCharsToUint16,f,c
 14609  006988  3A07               	swapf	??_hexCharsToUint16+1,f,c
 14610  00698A  0EF0               	movlw	240
 14611  00698C  1607               	andwf	??_hexCharsToUint16+1,f,c
 14612  00698E  5006               	movf	??_hexCharsToUint16,w,c
 14613  006990  0B0F               	andlw	15
 14614  006992  1207               	iorwf	??_hexCharsToUint16+1,f,c
 14615  006994  0EF0               	movlw	240
 14616  006996  1606               	andwf	??_hexCharsToUint16,f,c
 14617  006998  5006               	movf	??_hexCharsToUint16,w,c
 14618  00699A  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14619  00699C  5007               	movf	??_hexCharsToUint16+1,w,c
 14620  00699E  120B               	iorwf	hexCharsToUint16@retVal+1,f,c
 14621                           
 14622                           ;hex.c: 54: retVal |= hexCharToUint8(c4);
 14623  0069A0  5005               	movf	hexCharsToUint16@c4,w,c
 14624  0069A2  ECDD  F03D         	call	_hexCharToUint8
 14625  0069A6  6E06               	movwf	??_hexCharsToUint16& (0+255),c
 14626  0069A8  5006               	movf	??_hexCharsToUint16,w,c
 14627  0069AA  120A               	iorwf	hexCharsToUint16@retVal,f,c
 14628                           
 14629                           ;hex.c: 55: return retVal;
 14630  0069AC  C00A  F003         	movff	hexCharsToUint16@retVal,?_hexCharsToUint16
 14631  0069B0  C00B  F004         	movff	hexCharsToUint16@retVal+1,?_hexCharsToUint16+1
 14632  0069B4  0012               	return	
 14633  0069B6                     __end_of_hexCharsToUint16:
 14634                           	opt stack 0
 14635                           tblptru	equ	0xFF8
 14636                           tblptrh	equ	0xFF7
 14637                           tblptrl	equ	0xFF6
 14638                           tablat	equ	0xFF5
 14639                           prodh	equ	0xFF4
 14640                           prodl	equ	0xFF3
 14641                           intcon	equ	0xFF2
 14642                           intcon2	equ	0xFF1
 14643                           intcon3	equ	0xFF0
 14644                           postinc0	equ	0xFEE
 14645                           wreg	equ	0xFE8
 14646                           indf1	equ	0xFE7
 14647                           postdec1	equ	0xFE5
 14648                           plusw1	equ	0xFE3
 14649                           fsr1h	equ	0xFE2
 14650                           fsr1l	equ	0xFE1
 14651                           indf2	equ	0xFDF
 14652                           postinc2	equ	0xFDE
 14653                           postdec2	equ	0xFDD
 14654                           plusw2	equ	0xFDB
 14655                           fsr2h	equ	0xFDA
 14656                           fsr2l	equ	0xFD9
 14657                           status	equ	0xFD8
 14658                           
 14659 ;; *************** function _hexCharToUint8 *****************
 14660 ;; Defined at:
 14661 ;;		line 11 in file "hex.c"
 14662 ;; Parameters:    Size  Location     Type
 14663 ;;  c               1    wreg     unsigned char 
 14664 ;; Auto vars:     Size  Location     Type
 14665 ;;  c               1    0[COMRAM] unsigned char 
 14666 ;;  ascii           1    1[COMRAM] unsigned char 
 14667 ;; Return value:  Size  Location     Type
 14668 ;;                  1    wreg      unsigned char 
 14669 ;; Registers used:
 14670 ;;		wreg, status,2, status,0
 14671 ;; Tracked objects:
 14672 ;;		On entry : 0/0
 14673 ;;		On exit  : 0/0
 14674 ;;		Unchanged: 0/0
 14675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14676 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14677 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14678 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14679 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14680 ;;Total ram usage:        2 bytes
 14681 ;; Hardware stack levels used:    1
 14682 ;; This function calls:
 14683 ;;		Nothing
 14684 ;; This function is called by:
 14685 ;;		_hexCharsToUint8
 14686 ;;		_hexCharsToUint16
 14687 ;; This function uses a non-reentrant model
 14688 ;;
 14689                           
 14690                           	psect	text57
 14691  007BBA                     __ptext57:
 14692                           	opt stack 0
 14693  007BBA                     _hexCharToUint8:
 14694                           	opt stack 26
 14695                           
 14696                           ;incstack = 0
 14697                           ;hexCharToUint8@c stored from wreg
 14698  007BBA  6E01               	movwf	hexCharToUint8@c,c
 14699                           
 14700                           ;hex.c: 13: uint8_t ascii = (uint8_t)c;
 14701  007BBC  C001  F002         	movff	hexCharToUint8@c,hexCharToUint8@ascii
 14702                           
 14703                           ;hex.c: 16: if (ascii >= 97)
 14704  007BC0  0E60               	movlw	96
 14705  007BC2  6402               	cpfsgt	hexCharToUint8@ascii,c
 14706  007BC4  D002               	goto	l2173
 14707                           
 14708                           ;hex.c: 17: {;hex.c: 18: ascii -= 87;
 14709  007BC6  0E57               	movlw	87
 14710  007BC8  D006               	goto	L3
 14711  007BCA                     l2173:
 14712                           
 14713                           ;hex.c: 21: else if (ascii >= 65)
 14714  007BCA  0E40               	movlw	64
 14715  007BCC  6402               	cpfsgt	hexCharToUint8@ascii,c
 14716  007BCE  D002               	goto	l2175
 14717                           
 14718                           ;hex.c: 22: {;hex.c: 23: ascii -= 55;
 14719  007BD0  0E37               	movlw	55
 14720  007BD2  D001               	goto	L3
 14721  007BD4                     l2175:
 14722                           
 14723                           ;hex.c: 26: else;hex.c: 27: {;hex.c: 28: ascii -= 48;
 14724  007BD4  0E30               	movlw	48
 14725  007BD6                     L3:
 14726  007BD6  5E02               	subwf	hexCharToUint8@ascii,f,c
 14727                           
 14728                           ;hex.c: 29: };hex.c: 31: if (ascii > 15)
 14729  007BD8  0E0F               	movlw	15
 14730  007BDA  6402               	cpfsgt	hexCharToUint8@ascii,c
 14731  007BDC  D002               	goto	l2177
 14732                           
 14733                           ;hex.c: 32: {;hex.c: 33: return 0;
 14734  007BDE  0E00               	movlw	0
 14735                           
 14736                           ;hex.c: 34: }
 14737  007BE0  0012               	return	
 14738  007BE2                     l2177:
 14739                           
 14740                           ;hex.c: 35: else;hex.c: 36: {;hex.c: 37: return ascii;
 14741  007BE2  5002               	movf	hexCharToUint8@ascii,w,c
 14742  007BE4  0012               	return	
 14743  007BE6                     __end_of_hexCharToUint8:
 14744                           	opt stack 0
 14745                           tblptru	equ	0xFF8
 14746                           tblptrh	equ	0xFF7
 14747                           tblptrl	equ	0xFF6
 14748                           tablat	equ	0xFF5
 14749                           prodh	equ	0xFF4
 14750                           prodl	equ	0xFF3
 14751                           intcon	equ	0xFF2
 14752                           intcon2	equ	0xFF1
 14753                           intcon3	equ	0xFF0
 14754                           postinc0	equ	0xFEE
 14755                           wreg	equ	0xFE8
 14756                           indf1	equ	0xFE7
 14757                           postdec1	equ	0xFE5
 14758                           plusw1	equ	0xFE3
 14759                           fsr1h	equ	0xFE2
 14760                           fsr1l	equ	0xFE1
 14761                           indf2	equ	0xFDF
 14762                           postinc2	equ	0xFDE
 14763                           postdec2	equ	0xFDD
 14764                           plusw2	equ	0xFDB
 14765                           fsr2h	equ	0xFDA
 14766                           fsr2l	equ	0xFD9
 14767                           status	equ	0xFD8
 14768                           
 14769 ;; *************** function _internalFlash_writePage *****************
 14770 ;; Defined at:
 14771 ;;		line 63 in file "internal_flash.c"
 14772 ;; Parameters:    Size  Location     Type
 14773 ;;  page            2    2[COMRAM] unsigned int 
 14774 ;; Auto vars:     Size  Location     Type
 14775 ;;  address         4    4[COMRAM] unsigned long 
 14776 ;;  cntr            2    8[COMRAM] unsigned int 
 14777 ;;  byte_cntr       1   11[COMRAM] unsigned char 
 14778 ;;  block_cntr      1   10[COMRAM] unsigned char 
 14779 ;;  i               1    0        unsigned char 
 14780 ;;  gie             1    0        unsigned char 
 14781 ;; Return value:  Size  Location     Type
 14782 ;;                  1    wreg      void 
 14783 ;; Registers used:
 14784 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 14785 ;; Tracked objects:
 14786 ;;		On entry : 0/0
 14787 ;;		On exit  : 0/0
 14788 ;;		Unchanged: 0/0
 14789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14790 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14791 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14792 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14793 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14794 ;;Total ram usage:       10 bytes
 14795 ;; Hardware stack levels used:    1
 14796 ;; Hardware stack levels required when called:    1
 14797 ;; This function calls:
 14798 ;;		__internalFlash_unlockAndActivate
 14799 ;; This function is called by:
 14800 ;;		__bootloader_program
 14801 ;; This function uses a non-reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text58
 14805  00658E                     __ptext58:
 14806                           	opt stack 0
 14807  00658E                     _internalFlash_writePage:
 14808                           	opt stack 27
 14809                           
 14810                           ;internal_flash.c: 65: uint32_t address;;internal_flash.c: 66: uint8_t gie;;internal_fla
      +                          sh.c: 67: uint16_t cntr;;internal_flash.c: 68: uint8_t i;;internal_flash.c: 69: uint8_t 
      +                          block_cntr;;internal_flash.c: 70: uint8_t byte_cntr;;internal_flash.c: 73: address = pag
      +                          e;
 14811                           
 14812                           ;incstack = 0
 14813  00658E  C003  F005         	movff	internalFlash_writePage@page,internalFlash_writePage@address
 14814  006592  C004  F006         	movff	internalFlash_writePage@page+1,internalFlash_writePage@address+1
 14815  006596  6A07               	clrf	internalFlash_writePage@address+2,c
 14816  006598  6A08               	clrf	internalFlash_writePage@address+3,c
 14817                           
 14818                           ;internal_flash.c: 74: address <<= 10;
 14819  00659A  0E0A               	movlw	10
 14820  00659C                     u9905:
 14821  00659C  90D8               	bcf	status,0,c
 14822  00659E  3605               	rlcf	internalFlash_writePage@address,f,c
 14823  0065A0  3606               	rlcf	internalFlash_writePage@address+1,f,c
 14824  0065A2  3607               	rlcf	internalFlash_writePage@address+2,f,c
 14825  0065A4  3608               	rlcf	internalFlash_writePage@address+3,f,c
 14826  0065A6  2EE8               	decfsz	wreg,f,c
 14827  0065A8  D7F9               	goto	u9905
 14828                           
 14829                           ;internal_flash.c: 76: TBLPTR = address;
 14830  0065AA  C005  FFF6         	movff	internalFlash_writePage@address,tblptrl	;volatile
 14831  0065AE  C006  FFF7         	movff	internalFlash_writePage@address+1,tblptrh	;volatile
 14832  0065B2  C007  FFF8         	movff	internalFlash_writePage@address+2,tblptru	;volatile
 14833                           
 14834                           ;internal_flash.c: 79: cntr = 0;
 14835  0065B6  0E00               	movlw	0
 14836  0065B8  6E0A               	movwf	internalFlash_writePage@cntr+1,c
 14837  0065BA  0E00               	movlw	0
 14838  0065BC  6E09               	movwf	internalFlash_writePage@cntr,c
 14839                           
 14840                           ;internal_flash.c: 80: for(block_cntr=0; block_cntr<16; ++block_cntr)
 14841  0065BE  0E00               	movlw	0
 14842  0065C0  6E0B               	movwf	internalFlash_writePage@block_cntr,c
 14843  0065C2                     l12919:
 14844  0065C2  0E0F               	movlw	15
 14845  0065C4  640B               	cpfsgt	internalFlash_writePage@block_cntr,c
 14846  0065C6  D001               	goto	l2417
 14847  0065C8  0012               	return	
 14848  0065CA                     l2417:
 14849                           
 14850                           ;internal_flash.c: 81: {;internal_flash.c: 84: for(byte_cntr=0; byte_cntr<64; ++byte_cnt
      +                          r)
 14851  0065CA  0E00               	movlw	0
 14852  0065CC  6E0C               	movwf	internalFlash_writePage@byte_cntr,c
 14853  0065CE                     l12925:
 14854  0065CE  0E3F               	movlw	63
 14855  0065D0  640C               	cpfsgt	internalFlash_writePage@byte_cntr,c
 14856  0065D2  D001               	goto	l2419
 14857  0065D4  D00D               	goto	u9930
 14858  0065D6                     l2419:
 14859                           
 14860                           ;internal_flash.c: 85: {;internal_flash.c: 87: TABLAT = pageBuffer[cntr];
 14861  0065D6  0E00               	movlw	low _pageBuffer
 14862  0065D8  2409               	addwf	internalFlash_writePage@cntr,w,c
 14863  0065DA  6ED9               	movwf	fsr2l,c
 14864  0065DC  0E08               	movlw	high _pageBuffer
 14865  0065DE  200A               	addwfc	internalFlash_writePage@cntr+1,w,c
 14866  0065E0  6EDA               	movwf	fsr2h,c
 14867  0065E2  50DF               	movf	indf2,w,c
 14868  0065E4  6EF5               	movwf	tablat,c	;volatile
 14869  0065E6  000D               	tblwt		*+	;# 
 14870                           
 14871                           ;internal_flash.c: 91: ++cntr;
 14872  0065E8  4A09               	infsnz	internalFlash_writePage@cntr,f,c
 14873  0065EA  2A0A               	incf	internalFlash_writePage@cntr+1,f,c
 14874  0065EC  2A0C               	incf	internalFlash_writePage@byte_cntr,f,c
 14875  0065EE  D7EF               	goto	l12925
 14876  0065F0                     u9930:
 14877  0065F0  000A               	tblrd		*-	;# 
 14878                           
 14879                           ;internal_flash.c: 98: EECON1 = 0x84;
 14880  0065F2  0E84               	movlw	132
 14881  0065F4  6EA6               	movwf	4006,c	;volsfr
 14882                           
 14883                           ;internal_flash.c: 99: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 14884  0065F6  0EB5               	movlw	181
 14885  0065F8  EC48  F03E         	call	__internalFlash_unlockAndActivate
 14886                           
 14887                           ;internal_flash.c: 100: TBLPTR++;
 14888  0065FC  0E01               	movlw	1
 14889  0065FE  26F6               	addwf	tblptrl,f,c	;volatile
 14890  006600  0E00               	movlw	0
 14891  006602  22F7               	addwfc	tblptrh,f,c	;volatile
 14892  006604  0E00               	movlw	0
 14893  006606  22F8               	addwfc	tblptru,f,c	;volatile
 14894  006608  2A0B               	incf	internalFlash_writePage@block_cntr,f,c
 14895  00660A  D7DB               	goto	l12919
 14896  00660C                     __end_of_internalFlash_writePage:
 14897                           	opt stack 0
 14898                           tblptru	equ	0xFF8
 14899                           tblptrh	equ	0xFF7
 14900                           tblptrl	equ	0xFF6
 14901                           tablat	equ	0xFF5
 14902                           prodh	equ	0xFF4
 14903                           prodl	equ	0xFF3
 14904                           intcon	equ	0xFF2
 14905                           intcon2	equ	0xFF1
 14906                           intcon3	equ	0xFF0
 14907                           postinc0	equ	0xFEE
 14908                           wreg	equ	0xFE8
 14909                           indf1	equ	0xFE7
 14910                           postdec1	equ	0xFE5
 14911                           plusw1	equ	0xFE3
 14912                           fsr1h	equ	0xFE2
 14913                           fsr1l	equ	0xFE1
 14914                           indf2	equ	0xFDF
 14915                           postinc2	equ	0xFDE
 14916                           postdec2	equ	0xFDD
 14917                           plusw2	equ	0xFDB
 14918                           fsr2h	equ	0xFDA
 14919                           fsr2l	equ	0xFD9
 14920                           status	equ	0xFD8
 14921                           
 14922 ;; *************** function _internalFlash_readPage *****************
 14923 ;; Defined at:
 14924 ;;		line 37 in file "internal_flash.c"
 14925 ;; Parameters:    Size  Location     Type
 14926 ;;  page            2   21[COMRAM] unsigned int 
 14927 ;; Auto vars:     Size  Location     Type
 14928 ;;  address         4   23[COMRAM] unsigned long 
 14929 ;; Return value:  Size  Location     Type
 14930 ;;                  1    wreg      void 
 14931 ;; Registers used:
 14932 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14933 ;; Tracked objects:
 14934 ;;		On entry : 0/0
 14935 ;;		On exit  : 0/0
 14936 ;;		Unchanged: 0/0
 14937 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 14938 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14939 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14940 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14941 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 14942 ;;Total ram usage:        6 bytes
 14943 ;; Hardware stack levels used:    1
 14944 ;; Hardware stack levels required when called:    2
 14945 ;; This function calls:
 14946 ;;		_internalFlash_addressFromPage
 14947 ;;		_internalFlash_read
 14948 ;; This function is called by:
 14949 ;;		__bootloader_program
 14950 ;; This function uses a non-reentrant model
 14951 ;;
 14952                           
 14953                           	psect	text59
 14954  007712                     __ptext59:
 14955                           	opt stack 0
 14956  007712                     _internalFlash_readPage:
 14957                           	opt stack 26
 14958                           
 14959                           ;internal_flash.c: 39: uint32_t address;;internal_flash.c: 40: address = internalFlash_a
      +                          ddressFromPage(page);
 14960                           
 14961                           ;incstack = 0
 14962  007712  C016  F001         	movff	internalFlash_readPage@page,internalFlash_addressFromPage@page
 14963  007716  C017  F002         	movff	internalFlash_readPage@page+1,internalFlash_addressFromPage@page+1
 14964  00771A  ECB0  F03D         	call	_internalFlash_addressFromPage	;wreg free
 14965  00771E  C001  F018         	movff	?_internalFlash_addressFromPage,internalFlash_readPage@address
 14966  007722  C002  F019         	movff	?_internalFlash_addressFromPage+1,internalFlash_readPage@address+1
 14967  007726  C003  F01A         	movff	?_internalFlash_addressFromPage+2,internalFlash_readPage@address+2
 14968  00772A  C004  F01B         	movff	?_internalFlash_addressFromPage+3,internalFlash_readPage@address+3
 14969                           
 14970                           ;internal_flash.c: 41: internalFlash_read(address, 1024, pageBuffer);
 14971  00772E  C018  F00E         	movff	internalFlash_readPage@address,internalFlash_read@address
 14972  007732  C019  F00F         	movff	internalFlash_readPage@address+1,internalFlash_read@address+1
 14973  007736  C01A  F010         	movff	internalFlash_readPage@address+2,internalFlash_read@address+2
 14974  00773A  C01B  F011         	movff	internalFlash_readPage@address+3,internalFlash_read@address+3
 14975  00773E  0E04               	movlw	4
 14976  007740  6E13               	movwf	internalFlash_read@data_length+1,c
 14977  007742  0E00               	movlw	0
 14978  007744  6E12               	movwf	internalFlash_read@data_length,c
 14979  007746  0E00               	movlw	low _pageBuffer
 14980  007748  6E14               	movwf	internalFlash_read@buffer,c
 14981  00774A  0E08               	movlw	high _pageBuffer
 14982  00774C  6E15               	movwf	internalFlash_read@buffer+1,c
 14983  00774E  EC99  F03C         	call	_internalFlash_read	;wreg free
 14984  007752  0012               	return		;funcret
 14985  007754                     __end_of_internalFlash_readPage:
 14986                           	opt stack 0
 14987                           tblptru	equ	0xFF8
 14988                           tblptrh	equ	0xFF7
 14989                           tblptrl	equ	0xFF6
 14990                           tablat	equ	0xFF5
 14991                           prodh	equ	0xFF4
 14992                           prodl	equ	0xFF3
 14993                           intcon	equ	0xFF2
 14994                           intcon2	equ	0xFF1
 14995                           intcon3	equ	0xFF0
 14996                           postinc0	equ	0xFEE
 14997                           wreg	equ	0xFE8
 14998                           indf1	equ	0xFE7
 14999                           postdec1	equ	0xFE5
 15000                           plusw1	equ	0xFE3
 15001                           fsr1h	equ	0xFE2
 15002                           fsr1l	equ	0xFE1
 15003                           indf2	equ	0xFDF
 15004                           postinc2	equ	0xFDE
 15005                           postdec2	equ	0xFDD
 15006                           plusw2	equ	0xFDB
 15007                           fsr2h	equ	0xFDA
 15008                           fsr2l	equ	0xFD9
 15009                           status	equ	0xFD8
 15010                           
 15011 ;; *************** function _internalFlash_read *****************
 15012 ;; Defined at:
 15013 ;;		line 144 in file "internal_flash.c"
 15014 ;; Parameters:    Size  Location     Type
 15015 ;;  address         4   13[COMRAM] unsigned long 
 15016 ;;  data_length     2   17[COMRAM] unsigned int 
 15017 ;;  buffer          2   19[COMRAM] PTR unsigned char 
 15018 ;;		 -> pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), 
 15019 ;; Auto vars:     Size  Location     Type
 15020 ;;		None
 15021 ;; Return value:  Size  Location     Type
 15022 ;;                  1    wreg      unsigned char 
 15023 ;; Registers used:
 15024 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15025 ;; Tracked objects:
 15026 ;;		On entry : 0/0
 15027 ;;		On exit  : 0/0
 15028 ;;		Unchanged: 0/0
 15029 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15030 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15031 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15032 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15033 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15034 ;;Total ram usage:        8 bytes
 15035 ;; Hardware stack levels used:    1
 15036 ;; Hardware stack levels required when called:    1
 15037 ;; This function calls:
 15038 ;;		_memcpy
 15039 ;; This function is called by:
 15040 ;;		_internalFlash_readPage
 15041 ;;		__bootloader_verify_program_memory
 15042 ;; This function uses a non-reentrant model
 15043 ;;
 15044                           
 15045                           	psect	text60
 15046  007932                     __ptext60:
 15047                           	opt stack 0
 15048  007932                     _internalFlash_read:
 15049                           	opt stack 26
 15050                           
 15051                           ;internal_flash.c: 149: if(address >= 0x1FFFF)
 15052                           
 15053                           ;incstack = 0
 15054  007932  5011               	movf	internalFlash_read@address+3,w,c
 15055  007934  E118               	bnz	l2433
 15056  007936  280E               	incf	internalFlash_read@address,w,c
 15057  007938  0EFF               	movlw	255
 15058  00793A  580F               	subwfb	internalFlash_read@address+1,w,c
 15059  00793C  0E01               	movlw	1
 15060  00793E  5810               	subwfb	internalFlash_read@address+2,w,c
 15061  007940  B0D8               	btfsc	status,0,c
 15062  007942  0012               	return	
 15063                           
 15064                           ;internal_flash.c: 152: };internal_flash.c: 155: memcpy;internal_flash.c: 156: (;interna
      +                          l_flash.c: 157: (void*)buffer,;internal_flash.c: 158: (const void*)(address),;internal_f
      +                          lash.c: 159: data_length;internal_flash.c: 160: );
 15065                           
 15066                           ;internal_flash.c: 150: {;internal_flash.c: 151: return 0;;	Return value of _internalFla
      +                          sh_read is never used
 15067  007944  C014  F001         	movff	internalFlash_read@buffer,memcpy@d1
 15068  007948  C015  F002         	movff	internalFlash_read@buffer+1,memcpy@d1+1
 15069  00794C  C00E  F003         	movff	internalFlash_read@address,memcpy@s1
 15070  007950  C00F  F004         	movff	internalFlash_read@address+1,memcpy@s1+1
 15071  007954  C010  F005         	movff	internalFlash_read@address+2,memcpy@s1+2
 15072  007958  C012  F006         	movff	internalFlash_read@data_length,memcpy@n
 15073  00795C  C013  F007         	movff	internalFlash_read@data_length+1,memcpy@n+1
 15074  007960  ECBE  F036         	call	_memcpy	;wreg free
 15075  007964  0012               	return	
 15076  007966                     l2433:
 15077  007966  0012               	return		;funcret
 15078  007968                     __end_of_internalFlash_read:
 15079                           	opt stack 0
 15080                           tblptru	equ	0xFF8
 15081                           tblptrh	equ	0xFF7
 15082                           tblptrl	equ	0xFF6
 15083                           tablat	equ	0xFF5
 15084                           prodh	equ	0xFF4
 15085                           prodl	equ	0xFF3
 15086                           intcon	equ	0xFF2
 15087                           intcon2	equ	0xFF1
 15088                           intcon3	equ	0xFF0
 15089                           postinc0	equ	0xFEE
 15090                           wreg	equ	0xFE8
 15091                           indf1	equ	0xFE7
 15092                           postdec1	equ	0xFE5
 15093                           plusw1	equ	0xFE3
 15094                           fsr1h	equ	0xFE2
 15095                           fsr1l	equ	0xFE1
 15096                           indf2	equ	0xFDF
 15097                           postinc2	equ	0xFDE
 15098                           postdec2	equ	0xFDD
 15099                           plusw2	equ	0xFDB
 15100                           fsr2h	equ	0xFDA
 15101                           fsr2l	equ	0xFD9
 15102                           status	equ	0xFD8
 15103                           
 15104 ;; *************** function _internalFlash_pageFromAddress *****************
 15105 ;; Defined at:
 15106 ;;		line 308 in file "internal_flash.c"
 15107 ;; Parameters:    Size  Location     Type
 15108 ;;  address         4    0[COMRAM] unsigned long 
 15109 ;; Auto vars:     Size  Location     Type
 15110 ;;		None
 15111 ;; Return value:  Size  Location     Type
 15112 ;;                  2    0[COMRAM] unsigned int 
 15113 ;; Registers used:
 15114 ;;		wreg, status,2, status,0
 15115 ;; Tracked objects:
 15116 ;;		On entry : 0/0
 15117 ;;		On exit  : 0/0
 15118 ;;		Unchanged: 0/0
 15119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15120 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15121 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15122 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15123 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15124 ;;Total ram usage:        5 bytes
 15125 ;; Hardware stack levels used:    1
 15126 ;; This function calls:
 15127 ;;		Nothing
 15128 ;; This function is called by:
 15129 ;;		__bootloader_program
 15130 ;; This function uses a non-reentrant model
 15131 ;;
 15132                           
 15133                           	psect	text61
 15134  007E50                     __ptext61:
 15135                           	opt stack 0
 15136  007E50                     _internalFlash_pageFromAddress:
 15137                           	opt stack 28
 15138                           
 15139                           ;internal_flash.c: 310: address >>= 10;
 15140                           
 15141                           ;incstack = 0
 15142  007E50  0E0A               	movlw	10
 15143  007E52  6E05               	movwf	??_internalFlash_pageFromAddress& (0+255),c
 15144  007E54                     u9885:
 15145  007E54  90D8               	bcf	status,0,c
 15146  007E56  3204               	rrcf	internalFlash_pageFromAddress@address+3,f,c
 15147  007E58  3203               	rrcf	internalFlash_pageFromAddress@address+2,f,c
 15148  007E5A  3202               	rrcf	internalFlash_pageFromAddress@address+1,f,c
 15149  007E5C  3201               	rrcf	internalFlash_pageFromAddress@address,f,c
 15150  007E5E  2E05               	decfsz	??_internalFlash_pageFromAddress& (0+255),f,c
 15151  007E60  D7F9               	goto	u9885
 15152                           
 15153                           ;internal_flash.c: 311: return (uint16_t) address;
 15154  007E62  C001  F001         	movff	internalFlash_pageFromAddress@address,?_internalFlash_pageFromAddress
 15155  007E66  C002  F002         	movff	internalFlash_pageFromAddress@address+1,?_internalFlash_pageFromAddress+1
 15156  007E6A  0012               	return	
 15157  007E6C                     __end_of_internalFlash_pageFromAddress:
 15158                           	opt stack 0
 15159                           tblptru	equ	0xFF8
 15160                           tblptrh	equ	0xFF7
 15161                           tblptrl	equ	0xFF6
 15162                           tablat	equ	0xFF5
 15163                           prodh	equ	0xFF4
 15164                           prodl	equ	0xFF3
 15165                           intcon	equ	0xFF2
 15166                           intcon2	equ	0xFF1
 15167                           intcon3	equ	0xFF0
 15168                           postinc0	equ	0xFEE
 15169                           wreg	equ	0xFE8
 15170                           indf1	equ	0xFE7
 15171                           postdec1	equ	0xFE5
 15172                           plusw1	equ	0xFE3
 15173                           fsr1h	equ	0xFE2
 15174                           fsr1l	equ	0xFE1
 15175                           indf2	equ	0xFDF
 15176                           postinc2	equ	0xFDE
 15177                           postdec2	equ	0xFDD
 15178                           plusw2	equ	0xFDB
 15179                           fsr2h	equ	0xFDA
 15180                           fsr2l	equ	0xFD9
 15181                           status	equ	0xFD8
 15182                           
 15183 ;; *************** function _internalFlash_getBuffer *****************
 15184 ;; Defined at:
 15185 ;;		line 32 in file "internal_flash.c"
 15186 ;; Parameters:    Size  Location     Type
 15187 ;;		None
 15188 ;; Auto vars:     Size  Location     Type
 15189 ;;		None
 15190 ;; Return value:  Size  Location     Type
 15191 ;;                  2    0[COMRAM] PTR unsigned char 
 15192 ;; Registers used:
 15193 ;;		wreg, status,2, status,0
 15194 ;; Tracked objects:
 15195 ;;		On entry : 0/0
 15196 ;;		On exit  : 0/0
 15197 ;;		Unchanged: 0/0
 15198 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15199 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15200 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15201 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15202 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15203 ;;Total ram usage:        2 bytes
 15204 ;; Hardware stack levels used:    1
 15205 ;; This function calls:
 15206 ;;		Nothing
 15207 ;; This function is called by:
 15208 ;;		__bootloader_program
 15209 ;; This function uses a non-reentrant model
 15210 ;;
 15211                           
 15212                           	psect	text62
 15213  007F8E                     __ptext62:
 15214                           	opt stack 0
 15215  007F8E                     _internalFlash_getBuffer:
 15216                           	opt stack 28
 15217                           
 15218                           ;internal_flash.c: 34: return pageBuffer;
 15219                           
 15220                           ;incstack = 0
 15221  007F8E  0E00               	movlw	low _pageBuffer
 15222  007F90  6E01               	movwf	?_internalFlash_getBuffer,c
 15223  007F92  0E08               	movlw	high _pageBuffer
 15224  007F94  6E02               	movwf	?_internalFlash_getBuffer+1,c
 15225  007F96  0012               	return	
 15226  007F98                     __end_of_internalFlash_getBuffer:
 15227                           	opt stack 0
 15228                           tblptru	equ	0xFF8
 15229                           tblptrh	equ	0xFF7
 15230                           tblptrl	equ	0xFF6
 15231                           tablat	equ	0xFF5
 15232                           prodh	equ	0xFF4
 15233                           prodl	equ	0xFF3
 15234                           intcon	equ	0xFF2
 15235                           intcon2	equ	0xFF1
 15236                           intcon3	equ	0xFF0
 15237                           postinc0	equ	0xFEE
 15238                           wreg	equ	0xFE8
 15239                           indf1	equ	0xFE7
 15240                           postdec1	equ	0xFE5
 15241                           plusw1	equ	0xFE3
 15242                           fsr1h	equ	0xFE2
 15243                           fsr1l	equ	0xFE1
 15244                           indf2	equ	0xFDF
 15245                           postinc2	equ	0xFDE
 15246                           postdec2	equ	0xFDD
 15247                           plusw2	equ	0xFDB
 15248                           fsr2h	equ	0xFDA
 15249                           fsr2l	equ	0xFD9
 15250                           status	equ	0xFD8
 15251                           
 15252 ;; *************** function _internalFlash_erasePage *****************
 15253 ;; Defined at:
 15254 ;;		line 44 in file "internal_flash.c"
 15255 ;; Parameters:    Size  Location     Type
 15256 ;;  page            2    2[COMRAM] unsigned int 
 15257 ;; Auto vars:     Size  Location     Type
 15258 ;;  address         4    4[COMRAM] unsigned long 
 15259 ;; Return value:  Size  Location     Type
 15260 ;;                  1    wreg      void 
 15261 ;; Registers used:
 15262 ;;		wreg, status,2, status,0, cstack
 15263 ;; Tracked objects:
 15264 ;;		On entry : 0/0
 15265 ;;		On exit  : 0/0
 15266 ;;		Unchanged: 0/0
 15267 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15268 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15269 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15270 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15271 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15272 ;;Total ram usage:        6 bytes
 15273 ;; Hardware stack levels used:    1
 15274 ;; Hardware stack levels required when called:    1
 15275 ;; This function calls:
 15276 ;;		__internalFlash_unlockAndActivate
 15277 ;; This function is called by:
 15278 ;;		__bootloader_program
 15279 ;; This function uses a non-reentrant model
 15280 ;;
 15281                           
 15282                           	psect	text63
 15283  00799C                     __ptext63:
 15284                           	opt stack 0
 15285  00799C                     _internalFlash_erasePage:
 15286                           	opt stack 27
 15287                           
 15288                           ;internal_flash.c: 46: uint32_t address;;internal_flash.c: 49: address = page;
 15289                           
 15290                           ;incstack = 0
 15291  00799C  C003  F005         	movff	internalFlash_erasePage@page,internalFlash_erasePage@address
 15292  0079A0  C004  F006         	movff	internalFlash_erasePage@page+1,internalFlash_erasePage@address+1
 15293  0079A4  6A07               	clrf	internalFlash_erasePage@address+2,c
 15294  0079A6  6A08               	clrf	internalFlash_erasePage@address+3,c
 15295                           
 15296                           ;internal_flash.c: 50: address <<= 10;
 15297  0079A8  0E0A               	movlw	10
 15298  0079AA                     u9895:
 15299  0079AA  90D8               	bcf	status,0,c
 15300  0079AC  3605               	rlcf	internalFlash_erasePage@address,f,c
 15301  0079AE  3606               	rlcf	internalFlash_erasePage@address+1,f,c
 15302  0079B0  3607               	rlcf	internalFlash_erasePage@address+2,f,c
 15303  0079B2  3608               	rlcf	internalFlash_erasePage@address+3,f,c
 15304  0079B4  2EE8               	decfsz	wreg,f,c
 15305  0079B6  D7F9               	goto	u9895
 15306                           
 15307                           ;internal_flash.c: 51: TBLPTR = address;
 15308  0079B8  C005  FFF6         	movff	internalFlash_erasePage@address,tblptrl	;volatile
 15309  0079BC  C006  FFF7         	movff	internalFlash_erasePage@address+1,tblptrh	;volatile
 15310  0079C0  C007  FFF8         	movff	internalFlash_erasePage@address+2,tblptru	;volatile
 15311                           
 15312                           ;internal_flash.c: 57: EECON1bits.WREN = 1;
 15313  0079C4  84A6               	bsf	4006,2,c	;volsfr
 15314                           
 15315                           ;internal_flash.c: 58: EECON1bits.FREE = 1;
 15316  0079C6  88A6               	bsf	4006,4,c	;volsfr
 15317                           
 15318                           ;internal_flash.c: 60: _internalFlash_unlockAndActivate((uint8_t)0xB5);
 15319  0079C8  0EB5               	movlw	181
 15320  0079CA  EC48  F03E         	call	__internalFlash_unlockAndActivate
 15321  0079CE  0012               	return		;funcret
 15322  0079D0                     __end_of_internalFlash_erasePage:
 15323                           	opt stack 0
 15324                           tblptru	equ	0xFF8
 15325                           tblptrh	equ	0xFF7
 15326                           tblptrl	equ	0xFF6
 15327                           tablat	equ	0xFF5
 15328                           prodh	equ	0xFF4
 15329                           prodl	equ	0xFF3
 15330                           intcon	equ	0xFF2
 15331                           intcon2	equ	0xFF1
 15332                           intcon3	equ	0xFF0
 15333                           postinc0	equ	0xFEE
 15334                           wreg	equ	0xFE8
 15335                           indf1	equ	0xFE7
 15336                           postdec1	equ	0xFE5
 15337                           plusw1	equ	0xFE3
 15338                           fsr1h	equ	0xFE2
 15339                           fsr1l	equ	0xFE1
 15340                           indf2	equ	0xFDF
 15341                           postinc2	equ	0xFDE
 15342                           postdec2	equ	0xFDD
 15343                           plusw2	equ	0xFDB
 15344                           fsr2h	equ	0xFDA
 15345                           fsr2l	equ	0xFD9
 15346                           status	equ	0xFD8
 15347                           
 15348 ;; *************** function __internalFlash_unlockAndActivate *****************
 15349 ;; Defined at:
 15350 ;;		line 106 in file "internal_flash.c"
 15351 ;; Parameters:    Size  Location     Type
 15352 ;;  UnlockKey       1    wreg     unsigned char 
 15353 ;; Auto vars:     Size  Location     Type
 15354 ;;  UnlockKey       1    0[COMRAM] unsigned char 
 15355 ;;  InterruptEna    1    1[COMRAM] unsigned char 
 15356 ;; Return value:  Size  Location     Type
 15357 ;;                  1    wreg      void 
 15358 ;; Registers used:
 15359 ;;		wreg, status,2, status,0
 15360 ;; Tracked objects:
 15361 ;;		On entry : 0/0
 15362 ;;		On exit  : 0/0
 15363 ;;		Unchanged: 0/0
 15364 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15365 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15366 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15367 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15368 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15369 ;;Total ram usage:        2 bytes
 15370 ;; Hardware stack levels used:    1
 15371 ;; This function calls:
 15372 ;;		Nothing
 15373 ;; This function is called by:
 15374 ;;		_internalFlash_erasePage
 15375 ;;		_internalFlash_writePage
 15376 ;;		_EraseBlock
 15377 ;; This function uses a non-reentrant model
 15378 ;;
 15379                           
 15380                           	psect	text64
 15381  007C90                     __ptext64:
 15382                           	opt stack 0
 15383  007C90                     __internalFlash_unlockAndActivate:
 15384                           	opt stack 27
 15385                           
 15386                           ;incstack = 0
 15387                           ;__internalFlash_unlockAndActivate@UnlockKey stored from wreg
 15388  007C90  6E01               	movwf	__internalFlash_unlockAndActivate@UnlockKey,c
 15389                           
 15390                           ;internal_flash.c: 108: uint8_t InterruptEnableSave;;internal_flash.c: 115: if(UnlockKey
      +                           != (uint8_t)0xB5)
 15391  007C92  0EB5               	movlw	181
 15392  007C94  1801               	xorwf	__internalFlash_unlockAndActivate@UnlockKey,w,c
 15393  007C96  B4D8               	btfsc	status,2,c
 15394  007C98  D002               	goto	l2424
 15395                           
 15396                           ;internal_flash.c: 116: {;internal_flash.c: 117: EECON1bits.WREN = 0;
 15397  007C9A  94A6               	bcf	4006,2,c	;volsfr
 15398                           
 15399                           ;internal_flash.c: 118: return;
 15400  007C9C  0012               	return	
 15401  007C9E                     l2424:
 15402                           
 15403                           ;internal_flash.c: 119: };internal_flash.c: 121: InterruptEnableSave = INTCON;
 15404  007C9E  CFF2 F002          	movff	intcon,__internalFlash_unlockAndActivate@InterruptEnableSave	;volatile
 15405                           
 15406                           ;internal_flash.c: 122: INTCONbits.GIEH = 0;
 15407  007CA2  9EF2               	bcf	intcon,7,c	;volatile
 15408                           
 15409                           ;internal_flash.c: 123: EECON2 = 0x55;
 15410  007CA4  0E55               	movlw	85
 15411  007CA6  6EA7               	movwf	4007,c	;volsfr
 15412                           
 15413                           ;internal_flash.c: 124: EECON2 = 0xAA;
 15414  007CA8  0EAA               	movlw	170
 15415  007CAA  6EA7               	movwf	4007,c	;volsfr
 15416                           
 15417                           ;internal_flash.c: 125: EECON1bits.WR = 1;
 15418  007CAC  82A6               	bsf	4006,1,c	;volsfr
 15419                           
 15420                           ;internal_flash.c: 126: EECON1bits.WREN = 0;
 15421  007CAE  94A6               	bcf	4006,2,c	;volsfr
 15422                           
 15423                           ;internal_flash.c: 128: if(InterruptEnableSave & 0x80)
 15424  007CB0  AE02               	btfss	__internalFlash_unlockAndActivate@InterruptEnableSave,7,c
 15425  007CB2  0012               	return	
 15426                           
 15427                           ;internal_flash.c: 129: {;internal_flash.c: 130: INTCONbits.GIEH = 1;
 15428  007CB4  8EF2               	bsf	intcon,7,c	;volatile
 15429  007CB6  0012               	return	
 15430  007CB8                     __end_of__internalFlash_unlockAndActivate:
 15431                           	opt stack 0
 15432                           tblptru	equ	0xFF8
 15433                           tblptrh	equ	0xFF7
 15434                           tblptrl	equ	0xFF6
 15435                           tablat	equ	0xFF5
 15436                           prodh	equ	0xFF4
 15437                           prodl	equ	0xFF3
 15438                           intcon	equ	0xFF2
 15439                           intcon2	equ	0xFF1
 15440                           intcon3	equ	0xFF0
 15441                           postinc0	equ	0xFEE
 15442                           wreg	equ	0xFE8
 15443                           indf1	equ	0xFE7
 15444                           postdec1	equ	0xFE5
 15445                           plusw1	equ	0xFE3
 15446                           fsr1h	equ	0xFE2
 15447                           fsr1l	equ	0xFE1
 15448                           indf2	equ	0xFDF
 15449                           postinc2	equ	0xFDE
 15450                           postdec2	equ	0xFDD
 15451                           plusw2	equ	0xFDB
 15452                           fsr2h	equ	0xFDA
 15453                           fsr2l	equ	0xFD9
 15454                           status	equ	0xFD8
 15455                           
 15456 ;; *************** function _internalFlash_addressWithinPage *****************
 15457 ;; Defined at:
 15458 ;;		line 322 in file "internal_flash.c"
 15459 ;; Parameters:    Size  Location     Type
 15460 ;;  address         4    8[COMRAM] unsigned long 
 15461 ;;  page            2   12[COMRAM] unsigned int 
 15462 ;; Auto vars:     Size  Location     Type
 15463 ;;  page_start_a    4   18[COMRAM] unsigned long 
 15464 ;; Return value:  Size  Location     Type
 15465 ;;                  2    8[COMRAM] unsigned int 
 15466 ;; Registers used:
 15467 ;;		wreg, status,2, status,0, cstack
 15468 ;; Tracked objects:
 15469 ;;		On entry : 0/0
 15470 ;;		On exit  : 0/0
 15471 ;;		Unchanged: 0/0
 15472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15473 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15474 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15475 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15476 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15477 ;;Total ram usage:       14 bytes
 15478 ;; Hardware stack levels used:    1
 15479 ;; Hardware stack levels required when called:    1
 15480 ;; This function calls:
 15481 ;;		_internalFlash_addressFromPage
 15482 ;; This function is called by:
 15483 ;;		__bootloader_program
 15484 ;; This function uses a non-reentrant model
 15485 ;;
 15486                           
 15487                           	psect	text65
 15488  006EA6                     __ptext65:
 15489                           	opt stack 0
 15490  006EA6                     _internalFlash_addressWithinPage:
 15491                           	opt stack 27
 15492                           
 15493                           ;internal_flash.c: 324: uint32_t page_start_address;;internal_flash.c: 325: page_start_a
      +                          ddress = internalFlash_addressFromPage(page);
 15494                           
 15495                           ;incstack = 0
 15496  006EA6  C00D  F001         	movff	internalFlash_addressWithinPage@page,internalFlash_addressFromPage@page
 15497  006EAA  C00E  F002         	movff	internalFlash_addressWithinPage@page+1,internalFlash_addressFromPage@page+1
 15498  006EAE  ECB0  F03D         	call	_internalFlash_addressFromPage	;wreg free
 15499  006EB2  C001  F013         	movff	?_internalFlash_addressFromPage,internalFlash_addressWithinPage@page_start_addres
      +                          s
 15500  006EB6  C002  F014         	movff	?_internalFlash_addressFromPage+1,internalFlash_addressWithinPage@page_start_addr
      +                          ess+1
 15501  006EBA  C003  F015         	movff	?_internalFlash_addressFromPage+2,internalFlash_addressWithinPage@page_start_addr
      +                          ess+2
 15502  006EBE  C004  F016         	movff	?_internalFlash_addressFromPage+3,internalFlash_addressWithinPage@page_start_addr
      +                          ess+3
 15503                           
 15504                           ;internal_flash.c: 326: address = address - page_start_address;
 15505  006EC2  C013  F00F         	movff	internalFlash_addressWithinPage@page_start_address,??_internalFlash_addressWithin
      +                          Page
 15506  006EC6  C014  F010         	movff	internalFlash_addressWithinPage@page_start_address+1,??_internalFlash_addressWith
      +                          inPage+1
 15507  006ECA  C015  F011         	movff	internalFlash_addressWithinPage@page_start_address+2,??_internalFlash_addressWith
      +                          inPage+2
 15508  006ECE  C016  F012         	movff	internalFlash_addressWithinPage@page_start_address+3,??_internalFlash_addressWith
      +                          inPage+3
 15509  006ED2  1E0F               	comf	??_internalFlash_addressWithinPage,f,c
 15510  006ED4  1E10               	comf	??_internalFlash_addressWithinPage+1,f,c
 15511  006ED6  1E11               	comf	??_internalFlash_addressWithinPage+2,f,c
 15512  006ED8  1E12               	comf	??_internalFlash_addressWithinPage+3,f,c
 15513  006EDA  2A0F               	incf	??_internalFlash_addressWithinPage,f,c
 15514  006EDC  0E00               	movlw	0
 15515  006EDE  2210               	addwfc	??_internalFlash_addressWithinPage+1,f,c
 15516  006EE0  2211               	addwfc	??_internalFlash_addressWithinPage+2,f,c
 15517  006EE2  2212               	addwfc	??_internalFlash_addressWithinPage+3,f,c
 15518  006EE4  5009               	movf	internalFlash_addressWithinPage@address,w,c
 15519  006EE6  240F               	addwf	??_internalFlash_addressWithinPage,w,c
 15520  006EE8  6E09               	movwf	internalFlash_addressWithinPage@address,c
 15521  006EEA  500A               	movf	internalFlash_addressWithinPage@address+1,w,c
 15522  006EEC  2010               	addwfc	??_internalFlash_addressWithinPage+1,w,c
 15523  006EEE  6E0A               	movwf	internalFlash_addressWithinPage@address+1,c
 15524  006EF0  500B               	movf	internalFlash_addressWithinPage@address+2,w,c
 15525  006EF2  2011               	addwfc	??_internalFlash_addressWithinPage+2,w,c
 15526  006EF4  6E0B               	movwf	internalFlash_addressWithinPage@address+2,c
 15527  006EF6  500C               	movf	internalFlash_addressWithinPage@address+3,w,c
 15528  006EF8  2012               	addwfc	??_internalFlash_addressWithinPage+3,w,c
 15529  006EFA  6E0C               	movwf	internalFlash_addressWithinPage@address+3,c
 15530                           
 15531                           ;internal_flash.c: 327: return (uint16_t) address;
 15532  006EFC  C009  F009         	movff	internalFlash_addressWithinPage@address,?_internalFlash_addressWithinPage
 15533  006F00  C00A  F00A         	movff	internalFlash_addressWithinPage@address+1,?_internalFlash_addressWithinPage+1
 15534  006F04  0012               	return	
 15535  006F06                     __end_of_internalFlash_addressWithinPage:
 15536                           	opt stack 0
 15537                           tblptru	equ	0xFF8
 15538                           tblptrh	equ	0xFF7
 15539                           tblptrl	equ	0xFF6
 15540                           tablat	equ	0xFF5
 15541                           prodh	equ	0xFF4
 15542                           prodl	equ	0xFF3
 15543                           intcon	equ	0xFF2
 15544                           intcon2	equ	0xFF1
 15545                           intcon3	equ	0xFF0
 15546                           postinc0	equ	0xFEE
 15547                           wreg	equ	0xFE8
 15548                           indf1	equ	0xFE7
 15549                           postdec1	equ	0xFE5
 15550                           plusw1	equ	0xFE3
 15551                           fsr1h	equ	0xFE2
 15552                           fsr1l	equ	0xFE1
 15553                           indf2	equ	0xFDF
 15554                           postinc2	equ	0xFDE
 15555                           postdec2	equ	0xFDD
 15556                           plusw2	equ	0xFDB
 15557                           fsr2h	equ	0xFDA
 15558                           fsr2l	equ	0xFD9
 15559                           status	equ	0xFD8
 15560                           
 15561 ;; *************** function _internalFlash_addressFromPage *****************
 15562 ;; Defined at:
 15563 ;;		line 314 in file "internal_flash.c"
 15564 ;; Parameters:    Size  Location     Type
 15565 ;;  page            2    0[COMRAM] unsigned int 
 15566 ;; Auto vars:     Size  Location     Type
 15567 ;;  address         4    4[COMRAM] unsigned long 
 15568 ;; Return value:  Size  Location     Type
 15569 ;;                  4    0[COMRAM] unsigned long 
 15570 ;; Registers used:
 15571 ;;		wreg, status,2, status,0
 15572 ;; Tracked objects:
 15573 ;;		On entry : 0/0
 15574 ;;		On exit  : 0/0
 15575 ;;		Unchanged: 0/0
 15576 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15577 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15578 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15579 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15580 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15581 ;;Total ram usage:        8 bytes
 15582 ;; Hardware stack levels used:    1
 15583 ;; This function calls:
 15584 ;;		Nothing
 15585 ;; This function is called by:
 15586 ;;		_internalFlash_readPage
 15587 ;;		_internalFlash_addressWithinPage
 15588 ;; This function uses a non-reentrant model
 15589 ;;
 15590                           
 15591                           	psect	text66
 15592  007B60                     __ptext66:
 15593                           	opt stack 0
 15594  007B60                     _internalFlash_addressFromPage:
 15595                           	opt stack 27
 15596                           
 15597                           ;internal_flash.c: 316: uint32_t address;;internal_flash.c: 317: address = (uint32_t) pa
      +                          ge;
 15598                           
 15599                           ;incstack = 0
 15600  007B60  C001  F005         	movff	internalFlash_addressFromPage@page,internalFlash_addressFromPage@address
 15601  007B64  C002  F006         	movff	internalFlash_addressFromPage@page+1,internalFlash_addressFromPage@address+1
 15602  007B68  6A07               	clrf	internalFlash_addressFromPage@address+2,c
 15603  007B6A  6A08               	clrf	internalFlash_addressFromPage@address+3,c
 15604                           
 15605                           ;internal_flash.c: 318: address <<= 10;
 15606  007B6C  0E0A               	movlw	10
 15607  007B6E                     u9015:
 15608  007B6E  90D8               	bcf	status,0,c
 15609  007B70  3605               	rlcf	internalFlash_addressFromPage@address,f,c
 15610  007B72  3606               	rlcf	internalFlash_addressFromPage@address+1,f,c
 15611  007B74  3607               	rlcf	internalFlash_addressFromPage@address+2,f,c
 15612  007B76  3608               	rlcf	internalFlash_addressFromPage@address+3,f,c
 15613  007B78  2EE8               	decfsz	wreg,f,c
 15614  007B7A  D7F9               	goto	u9015
 15615                           
 15616                           ;internal_flash.c: 319: return address;
 15617  007B7C  C005  F001         	movff	internalFlash_addressFromPage@address,?_internalFlash_addressFromPage
 15618  007B80  C006  F002         	movff	internalFlash_addressFromPage@address+1,?_internalFlash_addressFromPage+1
 15619  007B84  C007  F003         	movff	internalFlash_addressFromPage@address+2,?_internalFlash_addressFromPage+2
 15620  007B88  C008  F004         	movff	internalFlash_addressFromPage@address+3,?_internalFlash_addressFromPage+3
 15621  007B8C  0012               	return	
 15622  007B8E                     __end_of_internalFlash_addressFromPage:
 15623                           	opt stack 0
 15624                           tblptru	equ	0xFF8
 15625                           tblptrh	equ	0xFF7
 15626                           tblptrl	equ	0xFF6
 15627                           tablat	equ	0xFF5
 15628                           prodh	equ	0xFF4
 15629                           prodl	equ	0xFF3
 15630                           intcon	equ	0xFF2
 15631                           intcon2	equ	0xFF1
 15632                           intcon3	equ	0xFF0
 15633                           postinc0	equ	0xFEE
 15634                           wreg	equ	0xFE8
 15635                           indf1	equ	0xFE7
 15636                           postdec1	equ	0xFE5
 15637                           plusw1	equ	0xFE3
 15638                           fsr1h	equ	0xFE2
 15639                           fsr1l	equ	0xFE1
 15640                           indf2	equ	0xFDF
 15641                           postinc2	equ	0xFDE
 15642                           postdec2	equ	0xFDD
 15643                           plusw2	equ	0xFDB
 15644                           fsr2h	equ	0xFDA
 15645                           fsr2l	equ	0xFD9
 15646                           status	equ	0xFD8
 15647                           
 15648 ;; *************** function __bootloader_check_address *****************
 15649 ;; Defined at:
 15650 ;;		line 100 in file "bootloader.c"
 15651 ;; Parameters:    Size  Location     Type
 15652 ;;  address         4    0[COMRAM] unsigned long 
 15653 ;;  dataLength      1    4[COMRAM] unsigned char 
 15654 ;; Auto vars:     Size  Location     Type
 15655 ;;  cntr            1   11[COMRAM] unsigned char 
 15656 ;;  byte_status     1   10[COMRAM] enum E6928
 15657 ;;  worst_case      1    9[COMRAM] enum E6928
 15658 ;; Return value:  Size  Location     Type
 15659 ;;                  1    wreg      enum E6928
 15660 ;; Registers used:
 15661 ;;		wreg, status,2, status,0
 15662 ;; Tracked objects:
 15663 ;;		On entry : 0/0
 15664 ;;		On exit  : 0/0
 15665 ;;		Unchanged: 0/0
 15666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15667 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15668 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15669 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15670 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15671 ;;Total ram usage:       12 bytes
 15672 ;; Hardware stack levels used:    1
 15673 ;; This function calls:
 15674 ;;		Nothing
 15675 ;; This function is called by:
 15676 ;;		__bootloader_verify_file
 15677 ;;		__bootloader_program
 15678 ;; This function uses a non-reentrant model
 15679 ;;
 15680                           
 15681                           	psect	text67
 15682  004DC2                     __ptext67:
 15683                           	opt stack 0
 15684  004DC2                     __bootloader_check_address:
 15685                           	opt stack 28
 15686                           
 15687                           ;bootloader.c: 102: addressCheckResult_t byte_status;;bootloader.c: 103: addressCheckRes
      +                          ult_t worst_case;;bootloader.c: 104: uint8_t cntr;;bootloader.c: 106: worst_case = ADDRE
      +                          SS_CHECK_RESULT_OK;
 15688                           
 15689                           ;incstack = 0
 15690  004DC2  0E00               	movlw	0
 15691  004DC4  6E0A               	movwf	__bootloader_check_address@worst_case,c
 15692                           
 15693                           ;bootloader.c: 109: for(cntr=0; cntr<dataLength; ++cntr)
 15694  004DC6  0E00               	movlw	0
 15695  004DC8  6E0C               	movwf	__bootloader_check_address@cntr,c
 15696  004DCA  D062               	goto	l2285
 15697  004DCC                     
 15698                           ;bootloader.c: 110: {;bootloader.c: 112: if(((address+cntr)>=0x09000) && ((address+cntr)
      +                          <=0x1FFF7))
 15699  004DCC  500C               	movf	__bootloader_check_address@cntr,w,c
 15700  004DCE  2401               	addwf	__bootloader_check_address@address,w,c
 15701  004DD0  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15702  004DD2  0E00               	movlw	0
 15703  004DD4  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15704  004DD6  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15705  004DD8  0E00               	movlw	0
 15706  004DDA  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15707  004DDC  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15708  004DDE  0E00               	movlw	0
 15709  004DE0  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15710  004DE2  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15711  004DE4  5009               	movf	??__bootloader_check_address+3,w,c
 15712  004DE6  1008               	iorwf	??__bootloader_check_address+2,w,c
 15713  004DE8  E104               	bnz	u9810
 15714  004DEA  0E90               	movlw	144
 15715  004DEC  5C07               	subwf	??__bootloader_check_address+1,w,c
 15716  004DEE  A0D8               	btfss	status,0,c
 15717  004DF0  D018               	goto	l2287
 15718  004DF2                     u9810:
 15719  004DF2  500C               	movf	__bootloader_check_address@cntr,w,c
 15720  004DF4  2401               	addwf	__bootloader_check_address@address,w,c
 15721  004DF6  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15722  004DF8  0E00               	movlw	0
 15723  004DFA  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15724  004DFC  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15725  004DFE  0E00               	movlw	0
 15726  004E00  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15727  004E02  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15728  004E04  0E00               	movlw	0
 15729  004E06  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15730  004E08  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15731  004E0A  5009               	movf	??__bootloader_check_address+3,w,c
 15732  004E0C  E10A               	bnz	l12851
 15733  004E0E  0EF8               	movlw	248
 15734  004E10  5C06               	subwf	??__bootloader_check_address,w,c
 15735  004E12  0EFF               	movlw	255
 15736  004E14  5807               	subwfb	??__bootloader_check_address+1,w,c
 15737  004E16  0E01               	movlw	1
 15738  004E18  5808               	subwfb	??__bootloader_check_address+2,w,c
 15739  004E1A  B0D8               	btfsc	status,0,c
 15740  004E1C  D002               	goto	l2287
 15741                           
 15742                           ;bootloader.c: 113: {;bootloader.c: 114: byte_status = ADDRESS_CHECK_RESULT_OK;
 15743  004E1E  0E00               	movlw	0
 15744  004E20  D029               	goto	L4
 15745  004E22                     l2287:
 15746  004E22                     l12851:
 15747                           
 15748                           ;bootloader.c: 118: else if(((address+cntr)>=0x1FFF8) && ((address+cntr)<=0x1FFFF))
 15749  004E22  500C               	movf	__bootloader_check_address@cntr,w,c
 15750  004E24  2401               	addwf	__bootloader_check_address@address,w,c
 15751  004E26  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15752  004E28  0E00               	movlw	0
 15753  004E2A  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15754  004E2C  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15755  004E2E  0E00               	movlw	0
 15756  004E30  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15757  004E32  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15758  004E34  0E00               	movlw	0
 15759  004E36  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15760  004E38  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15761  004E3A  5009               	movf	??__bootloader_check_address+3,w,c
 15762  004E3C  E108               	bnz	u9830
 15763  004E3E  0EF8               	movlw	248
 15764  004E40  5C06               	subwf	??__bootloader_check_address,w,c
 15765  004E42  0EFF               	movlw	255
 15766  004E44  5807               	subwfb	??__bootloader_check_address+1,w,c
 15767  004E46  0E01               	movlw	1
 15768  004E48  5808               	subwfb	??__bootloader_check_address+2,w,c
 15769  004E4A  A0D8               	btfss	status,0,c
 15770  004E4C  D015               	goto	l2289
 15771  004E4E                     u9830:
 15772  004E4E  500C               	movf	__bootloader_check_address@cntr,w,c
 15773  004E50  2401               	addwf	__bootloader_check_address@address,w,c
 15774  004E52  6E06               	movwf	??__bootloader_check_address& (0+255),c
 15775  004E54  0E00               	movlw	0
 15776  004E56  2002               	addwfc	__bootloader_check_address@address+1,w,c
 15777  004E58  6E07               	movwf	(??__bootloader_check_address+1)& (0+255),c
 15778  004E5A  0E00               	movlw	0
 15779  004E5C  2003               	addwfc	__bootloader_check_address@address+2,w,c
 15780  004E5E  6E08               	movwf	(??__bootloader_check_address+2)& (0+255),c
 15781  004E60  0E00               	movlw	0
 15782  004E62  2004               	addwfc	__bootloader_check_address@address+3,w,c
 15783  004E64  6E09               	movwf	(??__bootloader_check_address+3)& (0+255),c
 15784  004E66  5009               	movf	??__bootloader_check_address+3,w,c
 15785  004E68  E107               	bnz	l2289
 15786  004E6A  0E02               	movlw	2
 15787  004E6C  5C08               	subwf	??__bootloader_check_address+2,w,c
 15788  004E6E  B0D8               	btfsc	status,0,c
 15789  004E70  D003               	goto	l2289
 15790                           
 15791                           ;bootloader.c: 119: {;bootloader.c: 120: byte_status = ADDRESS_CHECK_RESULT_CONFIGURATIO
      +                          N_BITS;
 15792  004E72  0E01               	movlw	1
 15793  004E74                     L4:
 15794  004E74  6E0B               	movwf	__bootloader_check_address@byte_status,c
 15795                           
 15796                           ;bootloader.c: 121: }
 15797  004E76  D001               	goto	l2290
 15798  004E78                     l2289:
 15799                           
 15800                           ;bootloader.c: 122: else;bootloader.c: 123: {;bootloader.c: 124: byte_status = ADDRESS_C
      +                          HECK_RESULT_ERROR;
 15801  004E78  680B               	setf	__bootloader_check_address@byte_status,c
 15802  004E7A                     l2290:
 15803                           
 15804                           ;bootloader.c: 125: };bootloader.c: 128: if(byte_status == ADDRESS_CHECK_RESULT_ERROR)
 15805  004E7A  280B               	incf	__bootloader_check_address@byte_status,w,c
 15806  004E7C  A4D8               	btfss	status,2,c
 15807  004E7E  D002               	goto	l2291
 15808                           
 15809                           ;bootloader.c: 129: {;bootloader.c: 130: return ADDRESS_CHECK_RESULT_ERROR;
 15810  004E80  0EFF               	movlw	255
 15811  004E82  0012               	return	
 15812  004E84                     l2291:
 15813                           
 15814                           ;bootloader.c: 131: };bootloader.c: 134: if(byte_status > worst_case)
 15815  004E84  500B               	movf	__bootloader_check_address@byte_status,w,c
 15816  004E86  5C0A               	subwf	__bootloader_check_address@worst_case,w,c
 15817  004E88  A0D8               	btfss	status,0,c
 15818                           
 15819                           ;bootloader.c: 135: {;bootloader.c: 136: worst_case = byte_status;
 15820  004E8A  C00B  F00A         	movff	__bootloader_check_address@byte_status,__bootloader_check_address@worst_case
 15821  004E8E  2A0C               	incf	__bootloader_check_address@cntr,f,c
 15822  004E90                     l2285:
 15823  004E90  5005               	movf	__bootloader_check_address@dataLength,w,c
 15824  004E92  5C0C               	subwf	__bootloader_check_address@cntr,w,c
 15825  004E94  A0D8               	btfss	status,0,c
 15826  004E96  D79A               	goto	l2286
 15827                           
 15828                           ;bootloader.c: 137: };bootloader.c: 138: };bootloader.c: 140: return worst_case;
 15829  004E98  500A               	movf	__bootloader_check_address@worst_case,w,c
 15830  004E9A  0012               	return	
 15831  004E9C                     __end_of__bootloader_check_address:
 15832                           	opt stack 0
 15833                           tblptru	equ	0xFF8
 15834                           tblptrh	equ	0xFF7
 15835                           tblptrl	equ	0xFF6
 15836                           tablat	equ	0xFF5
 15837                           prodh	equ	0xFF4
 15838                           prodl	equ	0xFF3
 15839                           intcon	equ	0xFF2
 15840                           intcon2	equ	0xFF1
 15841                           intcon3	equ	0xFF0
 15842                           postinc0	equ	0xFEE
 15843                           wreg	equ	0xFE8
 15844                           indf1	equ	0xFE7
 15845                           postdec1	equ	0xFE5
 15846                           plusw1	equ	0xFE3
 15847                           fsr1h	equ	0xFE2
 15848                           fsr1l	equ	0xFE1
 15849                           indf2	equ	0xFDF
 15850                           postinc2	equ	0xFDE
 15851                           postdec2	equ	0xFDD
 15852                           plusw2	equ	0xFDB
 15853                           fsr2h	equ	0xFDA
 15854                           fsr2l	equ	0xFD9
 15855                           status	equ	0xFD8
 15856                           
 15857 ;; *************** function __bootloader_find_file *****************
 15858 ;; Defined at:
 15859 ;;		line 143 in file "bootloader.c"
 15860 ;; Parameters:    Size  Location     Type
 15861 ;;		None
 15862 ;; Auto vars:     Size  Location     Type
 15863 ;;		None
 15864 ;; Return value:  Size  Location     Type
 15865 ;;                  1    wreg      void 
 15866 ;; Registers used:
 15867 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15868 ;; Tracked objects:
 15869 ;;		On entry : 0/0
 15870 ;;		On exit  : 0/0
 15871 ;;		Unchanged: 0/0
 15872 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 15873 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15874 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15875 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15876 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 15877 ;;Total ram usage:        0 bytes
 15878 ;; Hardware stack levels used:    1
 15879 ;; Hardware stack levels required when called:    6
 15880 ;; This function calls:
 15881 ;;		_fat_find_file
 15882 ;;		_fat_get_file_size
 15883 ;; This function is called by:
 15884 ;;		_bootloader_run
 15885 ;; This function uses a non-reentrant model
 15886 ;;
 15887                           
 15888                           	psect	text68
 15889  005A7A                     __ptext68:
 15890                           	opt stack 0
 15891  005A7A                     __bootloader_find_file:
 15892                           	opt stack 23
 15893                           
 15894                           ;bootloader.c: 146: file_number = fat_find_file(bootloader_filename, bootloader_extensio
      +                          n);
 15895                           
 15896                           ;incstack = 0
 15897  005A7A  0EB6               	movlw	low _bootloader_filename
 15898  005A7C  6E30               	movwf	fat_find_file@name,c
 15899  005A7E  0E8F               	movlw	high _bootloader_filename
 15900  005A80  6E31               	movwf	fat_find_file@name+1,c
 15901  005A82  0EC7               	movlw	low _bootloader_extension
 15902  005A84  6E32               	movwf	fat_find_file@extension,c
 15903  005A86  0E8F               	movlw	high _bootloader_extension
 15904  005A88  6E33               	movwf	fat_find_file@extension+1,c
 15905  005A8A  ECD1  F02A         	call	_fat_find_file	;wreg free
 15906  005A8E  0100               	movlb	0	; () banked
 15907  005A90  6FFE               	movwf	_file_number& (0+255),b
 15908                           
 15909                           ; BSR set to: 0
 15910                           ;bootloader.c: 149: if(file_number!=0xFF)
 15911  005A92  29FE               	incf	_file_number& (0+255),w,b
 15912  005A94  B4D8               	btfsc	status,2,c
 15913  005A96  D034               	goto	l2297
 15914                           
 15915                           ; BSR set to: 0
 15916                           ;bootloader.c: 150: {;bootloader.c: 152: hex_file_size = fat_get_file_size(file_number);
 15917  005A98  51FE               	movf	_file_number& (0+255),w,b
 15918  005A9A  EC6A  F034         	call	_fat_get_file_size
 15919  005A9E  C030  F078         	movff	?_fat_get_file_size,_hex_file_size
 15920  005AA2  C031  F079         	movff	?_fat_get_file_size+1,_hex_file_size+1
 15921  005AA6  C032  F07A         	movff	?_fat_get_file_size+2,_hex_file_size+2
 15922  005AAA  C033  F07B         	movff	?_fat_get_file_size+3,_hex_file_size+3
 15923                           
 15924                           ;bootloader.c: 154: hex_file_entries = 0;
 15925  005AAE  0E00               	movlw	0
 15926  005AB0  0101               	movlb	1	; () banked
 15927  005AB2  6F6B               	movwf	(_hex_file_entries+1)& (0+255),b
 15928  005AB4  0E00               	movlw	0
 15929  005AB6  6F6A               	movwf	_hex_file_entries& (0+255),b
 15930                           
 15931                           ; BSR set to: 1
 15932                           ;bootloader.c: 155: hex_file_offset = 0;
 15933  005AB8  0E00               	movlw	0
 15934  005ABA  0100               	movlb	0	; () banked
 15935  005ABC  6F7C               	movwf	_hex_file_offset& (0+255),b
 15936  005ABE  0E00               	movlw	0
 15937  005AC0  6F7D               	movwf	(_hex_file_offset+1)& (0+255),b
 15938  005AC2  0E00               	movlw	0
 15939  005AC4  6F7E               	movwf	(_hex_file_offset+2)& (0+255),b
 15940  005AC6  0E00               	movlw	0
 15941  005AC8  6F7F               	movwf	(_hex_file_offset+3)& (0+255),b
 15942                           
 15943                           ; BSR set to: 0
 15944                           ;bootloader.c: 156: file_minimum_address = 0xFFFFFFFF;
 15945  005ACA  0101               	movlb	1	; () banked
 15946  005ACC  6948               	setf	_file_minimum_address& (0+255),b
 15947  005ACE  6949               	setf	(_file_minimum_address+1)& (0+255),b
 15948  005AD0  694A               	setf	(_file_minimum_address+2)& (0+255),b
 15949  005AD2  694B               	setf	(_file_minimum_address+3)& (0+255),b
 15950                           
 15951                           ; BSR set to: 1
 15952                           ;bootloader.c: 157: file_maximum_address = 0x00000000;
 15953  005AD4  0E00               	movlw	0
 15954  005AD6  6F44               	movwf	_file_maximum_address& (0+255),b
 15955  005AD8  0E00               	movlw	0
 15956  005ADA  6F45               	movwf	(_file_maximum_address+1)& (0+255),b
 15957  005ADC  0E00               	movlw	0
 15958  005ADE  6F46               	movwf	(_file_maximum_address+2)& (0+255),b
 15959  005AE0  0E00               	movlw	0
 15960  005AE2  6F47               	movwf	(_file_maximum_address+3)& (0+255),b
 15961                           
 15962                           ; BSR set to: 1
 15963                           ;bootloader.c: 158: extended_linear_address = 0x00000000;
 15964  005AE4  0E00               	movlw	0
 15965  005AE6  6F40               	movwf	_extended_linear_address& (0+255),b
 15966  005AE8  0E00               	movlw	0
 15967  005AEA  6F41               	movwf	(_extended_linear_address+1)& (0+255),b
 15968  005AEC  0E00               	movlw	0
 15969  005AEE  6F42               	movwf	(_extended_linear_address+2)& (0+255),b
 15970  005AF0  0E00               	movlw	0
 15971  005AF2  6F43               	movwf	(_extended_linear_address+3)& (0+255),b
 15972                           
 15973                           ; BSR set to: 1
 15974                           ;bootloader.c: 159: os.bootloader_mode = BOOTLOADER_MODE_FILE_FOUND;
 15975  005AF4  0E20               	movlw	32
 15976  005AF6  0100               	movlb	0	; () banked
 15977  005AF8  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 15978                           
 15979                           ; BSR set to: 0
 15980                           ;bootloader.c: 160: os.display_mode = DISPLAY_MODE_BOOTLOADER_FILE_FOUND;
 15981  005AFA  0E20               	movlw	32
 15982  005AFC  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 15983                           
 15984                           ;bootloader.c: 161: }
 15985  005AFE  0012               	return	
 15986  005B00                     l2297:
 15987                           
 15988                           ; BSR set to: 0
 15989                           ;bootloader.c: 163: else;bootloader.c: 164: {;bootloader.c: 166: hex_file_size = 0;
 15990                           
 15991                           ; BSR set to: 0
 15992  005B00  0E00               	movlw	0
 15993  005B02  6F78               	movwf	_hex_file_size& (0+255),b
 15994  005B04  0E00               	movlw	0
 15995  005B06  6F79               	movwf	(_hex_file_size+1)& (0+255),b
 15996  005B08  0E00               	movlw	0
 15997  005B0A  6F7A               	movwf	(_hex_file_size+2)& (0+255),b
 15998  005B0C  0E00               	movlw	0
 15999  005B0E  6F7B               	movwf	(_hex_file_size+3)& (0+255),b
 16000                           
 16001                           ;bootloader.c: 168: os.bootloader_mode = BOOTLOADER_MODE_SEARCH;
 16002  005B10  0E10               	movlw	16
 16003  005B12  6F64               	movwf	(_os+4)& (0+255),b	;volatile
 16004                           
 16005                           ;bootloader.c: 169: if(os.display_mode != DISPLAY_MODE_BOOTLOADER_START)
 16006  005B14  5165               	movf	(_os+5)& (0+255),w,b	;volatile
 16007  005B16  B4D8               	btfsc	status,2,c
 16008  005B18  0012               	return	
 16009                           
 16010                           ; BSR set to: 0
 16011                           ;bootloader.c: 170: {;bootloader.c: 171: os.display_mode = DISPLAY_MODE_BOOTLOADER_SEARC
      +                          H;
 16012  005B1A  0E10               	movlw	16
 16013  005B1C  6F65               	movwf	(_os+5)& (0+255),b	;volatile
 16014                           
 16015                           ; BSR set to: 0
 16016  005B1E  0012               	return	
 16017  005B20                     __end_of__bootloader_find_file:
 16018                           	opt stack 0
 16019                           tblptru	equ	0xFF8
 16020                           tblptrh	equ	0xFF7
 16021                           tblptrl	equ	0xFF6
 16022                           tablat	equ	0xFF5
 16023                           prodh	equ	0xFF4
 16024                           prodl	equ	0xFF3
 16025                           intcon	equ	0xFF2
 16026                           intcon2	equ	0xFF1
 16027                           intcon3	equ	0xFF0
 16028                           postinc0	equ	0xFEE
 16029                           wreg	equ	0xFE8
 16030                           indf1	equ	0xFE7
 16031                           postdec1	equ	0xFE5
 16032                           plusw1	equ	0xFE3
 16033                           fsr1h	equ	0xFE2
 16034                           fsr1l	equ	0xFE1
 16035                           indf2	equ	0xFDF
 16036                           postinc2	equ	0xFDE
 16037                           postdec2	equ	0xFDD
 16038                           plusw2	equ	0xFDB
 16039                           fsr2h	equ	0xFDA
 16040                           fsr2l	equ	0xFD9
 16041                           status	equ	0xFD8
 16042                           
 16043 ;; *************** function __normal_mode *****************
 16044 ;; Defined at:
 16045 ;;		line 202 in file "main.c"
 16046 ;; Parameters:    Size  Location     Type
 16047 ;;		None
 16048 ;; Auto vars:     Size  Location     Type
 16049 ;;		None
 16050 ;; Return value:  Size  Location     Type
 16051 ;;                  1    wreg      unsigned char 
 16052 ;; Registers used:
 16053 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16054 ;; Tracked objects:
 16055 ;;		On entry : 0/0
 16056 ;;		On exit  : 0/0
 16057 ;;		Unchanged: 0/0
 16058 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16059 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16060 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16061 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16062 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16063 ;;Total ram usage:        0 bytes
 16064 ;; Hardware stack levels used:    1
 16065 ;; Hardware stack levels required when called:    3
 16066 ;; This function calls:
 16067 ;;		_i2c_eeprom_readByte
 16068 ;;		_i2c_eeprom_writeByte
 16069 ;; This function is called by:
 16070 ;;		_main
 16071 ;; This function uses a non-reentrant model
 16072 ;;
 16073                           
 16074                           	psect	text69
 16075  00701C                     __ptext69:
 16076                           	opt stack 0
 16077  00701C                     __normal_mode:
 16078                           	opt stack 27
 16079                           
 16080                           ;main.c: 204: if(i2c_eeprom_readByte(0x100)==0x94)
 16081                           
 16082                           ; BSR set to: 0
 16083                           ;incstack = 0
 16084  00701C  0E01               	movlw	1
 16085  00701E  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 16086  007020  0E00               	movlw	0
 16087  007022  6E12               	movwf	i2c_eeprom_readByte@address,c
 16088  007024  EC69  F03A         	call	_i2c_eeprom_readByte	;wreg free
 16089  007028  0A94               	xorlw	148
 16090  00702A  A4D8               	btfss	status,2,c
 16091  00702C  D00A               	goto	l907
 16092                           
 16093                           ;main.c: 205: {;main.c: 207: i2c_eeprom_writeByte(0x100, 0x00);
 16094  00702E  0E01               	movlw	1
 16095  007030  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 16096  007032  0E00               	movlw	0
 16097  007034  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 16098  007036  0E00               	movlw	0
 16099  007038  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 16100  00703A  ECAA  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 16101                           
 16102                           ;main.c: 209: return 0;
 16103  00703E  0E00               	movlw	0
 16104                           
 16105                           ;main.c: 210: }
 16106  007040  0012               	return	
 16107  007042                     l907:
 16108                           
 16109                           ;main.c: 211: else if(i2c_eeprom_readByte(0x100)==0x78)
 16110  007042  0E01               	movlw	1
 16111  007044  6E13               	movwf	i2c_eeprom_readByte@address+1,c
 16112  007046  0E00               	movlw	0
 16113  007048  6E12               	movwf	i2c_eeprom_readByte@address,c
 16114  00704A  EC69  F03A         	call	_i2c_eeprom_readByte	;wreg free
 16115  00704E  0A78               	xorlw	120
 16116  007050  A4D8               	btfss	status,2,c
 16117  007052  D00A               	goto	l910
 16118                           
 16119                           ;main.c: 212: {;main.c: 214: i2c_eeprom_writeByte(0x100, 0x00);
 16120  007054  0E01               	movlw	1
 16121  007056  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 16122  007058  0E00               	movlw	0
 16123  00705A  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 16124  00705C  0E00               	movlw	0
 16125  00705E  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 16126  007060  ECAA  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 16127                           
 16128                           ;main.c: 216: return 1;
 16129  007064  0E01               	movlw	1
 16130                           
 16131                           ;main.c: 217: }
 16132  007066  0012               	return	
 16133  007068                     l910:
 16134                           
 16135                           ;main.c: 218: else if(!PORTAbits.RA0)
 16136  007068  B080               	btfsc	3968,0,c	;volatile
 16137  00706A  D002               	goto	l912
 16138                           
 16139                           ;main.c: 219: {;main.c: 221: return 0;
 16140  00706C  0E00               	movlw	0
 16141                           
 16142                           ;main.c: 222: }
 16143  00706E  0012               	return	
 16144  007070                     l912:
 16145                           
 16146                           ;main.c: 223: else;main.c: 224: {;main.c: 226: return 1;
 16147  007070  0E01               	movlw	1
 16148  007072  0012               	return	
 16149  007074                     __end_of__normal_mode:
 16150                           	opt stack 0
 16151                           tblptru	equ	0xFF8
 16152                           tblptrh	equ	0xFF7
 16153                           tblptrl	equ	0xFF6
 16154                           tablat	equ	0xFF5
 16155                           prodh	equ	0xFF4
 16156                           prodl	equ	0xFF3
 16157                           intcon	equ	0xFF2
 16158                           intcon2	equ	0xFF1
 16159                           intcon3	equ	0xFF0
 16160                           postinc0	equ	0xFEE
 16161                           wreg	equ	0xFE8
 16162                           indf1	equ	0xFE7
 16163                           postdec1	equ	0xFE5
 16164                           plusw1	equ	0xFE3
 16165                           fsr1h	equ	0xFE2
 16166                           fsr1l	equ	0xFE1
 16167                           indf2	equ	0xFDF
 16168                           postinc2	equ	0xFDE
 16169                           postdec2	equ	0xFDD
 16170                           plusw2	equ	0xFDB
 16171                           fsr2h	equ	0xFDA
 16172                           fsr2l	equ	0xFD9
 16173                           status	equ	0xFD8
 16174                           
 16175 ;; *************** function _i2c_eeprom_readByte *****************
 16176 ;; Defined at:
 16177 ;;		line 359 in file "i2c.c"
 16178 ;; Parameters:    Size  Location     Type
 16179 ;;  address         2   17[COMRAM] unsigned int 
 16180 ;; Auto vars:     Size  Location     Type
 16181 ;;  addr            1   23[COMRAM] unsigned char 
 16182 ;;  slave_addres    1   22[COMRAM] unsigned char 
 16183 ;; Return value:  Size  Location     Type
 16184 ;;                  1    wreg      unsigned char 
 16185 ;; Registers used:
 16186 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16187 ;; Tracked objects:
 16188 ;;		On entry : 0/0
 16189 ;;		On exit  : 0/0
 16190 ;;		Unchanged: 0/0
 16191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16192 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16193 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16194 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16195 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16196 ;;Total ram usage:        7 bytes
 16197 ;; Hardware stack levels used:    1
 16198 ;; Hardware stack levels required when called:    2
 16199 ;; This function calls:
 16200 ;;		__i2c_read
 16201 ;;		__i2c_write
 16202 ;;		_i2c_set_frequency
 16203 ;; This function is called by:
 16204 ;;		__normal_mode
 16205 ;; This function uses a non-reentrant model
 16206 ;;
 16207                           
 16208                           	psect	text70
 16209  0074D2                     __ptext70:
 16210                           	opt stack 0
 16211  0074D2                     _i2c_eeprom_readByte:
 16212                           	opt stack 27
 16213                           
 16214                           ;i2c.c: 361: uint8_t slave_address;;i2c.c: 362: uint8_t addr;;i2c.c: 363: slave_address 
      +                          = 0b10100000 | ((address&0b0000011100000000)>>7);
 16215                           
 16216                           ;incstack = 0
 16217  0074D2  C012  F014         	movff	i2c_eeprom_readByte@address,??_i2c_eeprom_readByte
 16218  0074D6  C013  F015         	movff	i2c_eeprom_readByte@address+1,??_i2c_eeprom_readByte+1
 16219  0074DA  0E07               	movlw	7
 16220  0074DC  6E16               	movwf	(??_i2c_eeprom_readByte+2)& (0+255),c
 16221  0074DE                     u10465:
 16222  0074DE  90D8               	bcf	status,0,c
 16223  0074E0  3215               	rrcf	??_i2c_eeprom_readByte+1,f,c
 16224  0074E2  3214               	rrcf	??_i2c_eeprom_readByte,f,c
 16225  0074E4  2E16               	decfsz	(??_i2c_eeprom_readByte+2)& (0+255),f,c
 16226  0074E6  D7FB               	goto	u10465
 16227  0074E8  5014               	movf	??_i2c_eeprom_readByte,w,c
 16228  0074EA  0B0E               	andlw	14
 16229  0074EC  09A0               	iorlw	160
 16230  0074EE  6E17               	movwf	i2c_eeprom_readByte@slave_address,c
 16231                           
 16232                           ;i2c.c: 364: addr = address & 0xFF;
 16233  0074F0  C012  F018         	movff	i2c_eeprom_readByte@address,i2c_eeprom_readByte@addr
 16234                           
 16235                           ;i2c.c: 367: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 16236  0074F4  0E02               	movlw	2
 16237  0074F6  EC09  F03E         	call	_i2c_set_frequency
 16238                           
 16239                           ;i2c.c: 369: _i2c_write(slave_address, &addr, 1);
 16240  0074FA  0E18               	movlw	low i2c_eeprom_readByte@addr
 16241  0074FC  6E06               	movwf	__i2c_write@data,c
 16242  0074FE  0E00               	movlw	high i2c_eeprom_readByte@addr
 16243  007500  6E07               	movwf	__i2c_write@data+1,c
 16244  007502  0E01               	movlw	1
 16245  007504  6E08               	movwf	__i2c_write@length,c
 16246  007506  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 16247  007508  ECDD  F03A         	call	__i2c_write
 16248                           
 16249                           ;i2c.c: 370: _i2c_read(slave_address, &addr, 1);
 16250  00750C  0E18               	movlw	low i2c_eeprom_readByte@addr
 16251  00750E  6E06               	movwf	__i2c_read@data,c
 16252  007510  0E00               	movlw	high i2c_eeprom_readByte@addr
 16253  007512  6E07               	movwf	__i2c_read@data+1,c
 16254  007514  0E01               	movlw	1
 16255  007516  6E08               	movwf	__i2c_read@length,c
 16256  007518  5017               	movf	i2c_eeprom_readByte@slave_address,w,c
 16257  00751A  EC76  F031         	call	__i2c_read
 16258                           
 16259                           ;i2c.c: 371: return addr;
 16260  00751E  5018               	movf	i2c_eeprom_readByte@addr,w,c
 16261  007520  0012               	return	
 16262  007522                     __end_of_i2c_eeprom_readByte:
 16263                           	opt stack 0
 16264                           tblptru	equ	0xFF8
 16265                           tblptrh	equ	0xFF7
 16266                           tblptrl	equ	0xFF6
 16267                           tablat	equ	0xFF5
 16268                           prodh	equ	0xFF4
 16269                           prodl	equ	0xFF3
 16270                           intcon	equ	0xFF2
 16271                           intcon2	equ	0xFF1
 16272                           intcon3	equ	0xFF0
 16273                           postinc0	equ	0xFEE
 16274                           wreg	equ	0xFE8
 16275                           indf1	equ	0xFE7
 16276                           postdec1	equ	0xFE5
 16277                           plusw1	equ	0xFE3
 16278                           fsr1h	equ	0xFE2
 16279                           fsr1l	equ	0xFE1
 16280                           indf2	equ	0xFDF
 16281                           postinc2	equ	0xFDE
 16282                           postdec2	equ	0xFDD
 16283                           plusw2	equ	0xFDB
 16284                           fsr2h	equ	0xFDA
 16285                           fsr2l	equ	0xFD9
 16286                           status	equ	0xFD8
 16287                           
 16288 ;; *************** function __i2c_read *****************
 16289 ;; Defined at:
 16290 ;;		line 153 in file "i2c.c"
 16291 ;; Parameters:    Size  Location     Type
 16292 ;;  slave_addres    1    wreg     unsigned char 
 16293 ;;  data            2    5[COMRAM] PTR unsigned char 
 16294 ;;		 -> i2c_eeprom_readByte@addr(1), 
 16295 ;;  length          1    7[COMRAM] unsigned char 
 16296 ;; Auto vars:     Size  Location     Type
 16297 ;;  slave_addres    1   15[COMRAM] unsigned char 
 16298 ;;  cntr            1   16[COMRAM] unsigned char 
 16299 ;; Return value:  Size  Location     Type
 16300 ;;                  1    wreg      void 
 16301 ;; Registers used:
 16302 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 16303 ;; Tracked objects:
 16304 ;;		On entry : 0/0
 16305 ;;		On exit  : 0/0
 16306 ;;		Unchanged: 0/0
 16307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16308 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16309 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16310 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16311 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16312 ;;Total ram usage:       12 bytes
 16313 ;; Hardware stack levels used:    1
 16314 ;; Hardware stack levels required when called:    1
 16315 ;; This function calls:
 16316 ;;		__i2c_acknowledge
 16317 ;;		__i2c_get
 16318 ;;		__i2c_not_acknowledge
 16319 ;;		__i2c_send
 16320 ;;		__i2c_start
 16321 ;;		__i2c_stop
 16322 ;;		__i2c_wait_idle
 16323 ;; This function is called by:
 16324 ;;		_i2c_eeprom_readByte
 16325 ;;		_i2c_eeprom_read
 16326 ;; This function uses a non-reentrant model
 16327 ;;
 16328                           
 16329                           	psect	text71
 16330  0062EC                     __ptext71:
 16331                           	opt stack 0
 16332  0062EC                     __i2c_read:
 16333                           	opt stack 27
 16334                           
 16335                           ;incstack = 0
 16336                           ;__i2c_read@slave_address stored from wreg
 16337  0062EC  6E10               	movwf	__i2c_read@slave_address,c
 16338                           
 16339                           ;i2c.c: 155: uint8_t cntr;;i2c.c: 157: _i2c_wait_idle();
 16340  0062EE  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 16341                           
 16342                           ;i2c.c: 158: _i2c_start();
 16343  0062F2  EC0C  F040         	call	__i2c_start	;wreg free
 16344                           
 16345                           ;i2c.c: 159: _i2c_wait_idle();
 16346  0062F6  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 16347                           
 16348                           ;i2c.c: 160: _i2c_send(slave_address | 0x01);
 16349  0062FA  5010               	movf	__i2c_read@slave_address,w,c
 16350  0062FC  0901               	iorlw	1
 16351  0062FE  EC10  F040         	call	__i2c_send
 16352                           
 16353                           ;i2c.c: 161: _i2c_wait_idle();
 16354  006302  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 16355                           
 16356                           ;i2c.c: 163: for(cntr=0; cntr<length-1; ++cntr)
 16357  006306  0E00               	movlw	0
 16358  006308  6E11               	movwf	__i2c_read@cntr,c
 16359  00630A  D00E               	goto	l1201
 16360  00630C                     
 16361                           ;i2c.c: 164: {;i2c.c: 165: data[cntr] = _i2c_get();
 16362  00630C  5011               	movf	__i2c_read@cntr,w,c
 16363  00630E  0D01               	mullw	1
 16364  006310  50F3               	movf	prodl,w,c
 16365  006312  2406               	addwf	__i2c_read@data,w,c
 16366  006314  6ED9               	movwf	fsr2l,c
 16367  006316  50F4               	movf	prodh,w,c
 16368  006318  2007               	addwfc	__i2c_read@data+1,w,c
 16369  00631A  6EDA               	movwf	fsr2h,c
 16370  00631C  ECD1  F03F         	call	__i2c_get	;wreg free
 16371  006320  6EDF               	movwf	indf2,c
 16372                           
 16373                           ;i2c.c: 166: _i2c_acknowledge();
 16374  006322  ECD6  F03F         	call	__i2c_acknowledge	;wreg free
 16375  006326  2A11               	incf	__i2c_read@cntr,f,c
 16376  006328                     l1201:
 16377  006328  0EFF               	movlw	255
 16378  00632A  6E09               	movwf	??__i2c_read& (0+255),c
 16379  00632C  0EFF               	movlw	255
 16380  00632E  6E0A               	movwf	(??__i2c_read+1)& (0+255),c
 16381  006330  5008               	movf	__i2c_read@length,w,c
 16382  006332  6E0B               	movwf	(??__i2c_read+2)& (0+255),c
 16383  006334  6A0C               	clrf	(??__i2c_read+3)& (0+255),c
 16384  006336  5009               	movf	??__i2c_read,w,c
 16385  006338  260B               	addwf	??__i2c_read+2,f,c
 16386  00633A  500A               	movf	??__i2c_read+1,w,c
 16387  00633C  220C               	addwfc	??__i2c_read+3,f,c
 16388  00633E  5011               	movf	__i2c_read@cntr,w,c
 16389  006340  6E0D               	movwf	(??__i2c_read+4)& (0+255),c
 16390  006342  6A0E               	clrf	(??__i2c_read+5)& (0+255),c
 16391  006344  500B               	movf	??__i2c_read+2,w,c
 16392  006346  5C0D               	subwf	??__i2c_read+4,w,c
 16393  006348  500E               	movf	??__i2c_read+5,w,c
 16394  00634A  0A80               	xorlw	128
 16395  00634C  6E0F               	movwf	(??__i2c_read+6)& (0+255),c
 16396  00634E  500C               	movf	??__i2c_read+3,w,c
 16397  006350  0A80               	xorlw	128
 16398  006352  580F               	subwfb	(??__i2c_read+6)& (0+255),w,c
 16399  006354  A0D8               	btfss	status,0,c
 16400  006356  D7DA               	goto	l1202
 16401                           
 16402                           ;i2c.c: 167: };i2c.c: 168: data[cntr] = _i2c_get();
 16403  006358  5011               	movf	__i2c_read@cntr,w,c
 16404  00635A  0D01               	mullw	1
 16405  00635C  50F3               	movf	prodl,w,c
 16406  00635E  2406               	addwf	__i2c_read@data,w,c
 16407  006360  6ED9               	movwf	fsr2l,c
 16408  006362  50F4               	movf	prodh,w,c
 16409  006364  2007               	addwfc	__i2c_read@data+1,w,c
 16410  006366  6EDA               	movwf	fsr2h,c
 16411  006368  ECD1  F03F         	call	__i2c_get	;wreg free
 16412  00636C  6EDF               	movwf	indf2,c
 16413                           
 16414                           ;i2c.c: 169: _i2c_not_acknowledge();
 16415  00636E  ECCC  F03F         	call	__i2c_not_acknowledge	;wreg free
 16416                           
 16417                           ;i2c.c: 171: _i2c_stop();
 16418  006372  EC08  F040         	call	__i2c_stop	;wreg free
 16419  006376  0012               	return		;funcret
 16420  006378                     __end_of__i2c_read:
 16421                           	opt stack 0
 16422                           tblptru	equ	0xFF8
 16423                           tblptrh	equ	0xFF7
 16424                           tblptrl	equ	0xFF6
 16425                           tablat	equ	0xFF5
 16426                           prodh	equ	0xFF4
 16427                           prodl	equ	0xFF3
 16428                           intcon	equ	0xFF2
 16429                           intcon2	equ	0xFF1
 16430                           intcon3	equ	0xFF0
 16431                           postinc0	equ	0xFEE
 16432                           wreg	equ	0xFE8
 16433                           indf1	equ	0xFE7
 16434                           postdec1	equ	0xFE5
 16435                           plusw1	equ	0xFE3
 16436                           fsr1h	equ	0xFE2
 16437                           fsr1l	equ	0xFE1
 16438                           indf2	equ	0xFDF
 16439                           postinc2	equ	0xFDE
 16440                           postdec2	equ	0xFDD
 16441                           plusw2	equ	0xFDB
 16442                           fsr2h	equ	0xFDA
 16443                           fsr2l	equ	0xFD9
 16444                           status	equ	0xFD8
 16445                           
 16446 ;; *************** function __i2c_not_acknowledge *****************
 16447 ;; Defined at:
 16448 ;;		line 90 in file "i2c.c"
 16449 ;; Parameters:    Size  Location     Type
 16450 ;;		None
 16451 ;; Auto vars:     Size  Location     Type
 16452 ;;		None
 16453 ;; Return value:  Size  Location     Type
 16454 ;;                  1    wreg      void 
 16455 ;; Registers used:
 16456 ;;		None
 16457 ;; Tracked objects:
 16458 ;;		On entry : 0/0
 16459 ;;		On exit  : 0/0
 16460 ;;		Unchanged: 0/0
 16461 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16462 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16463 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16464 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16465 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16466 ;;Total ram usage:        0 bytes
 16467 ;; Hardware stack levels used:    1
 16468 ;; This function calls:
 16469 ;;		Nothing
 16470 ;; This function is called by:
 16471 ;;		__i2c_read
 16472 ;; This function uses a non-reentrant model
 16473 ;;
 16474                           
 16475                           	psect	text72
 16476  007F98                     __ptext72:
 16477                           	opt stack 0
 16478  007F98                     __i2c_not_acknowledge:
 16479                           	opt stack 27
 16480                           
 16481                           ;i2c.c: 92: SSP1CON2bits.ACKDT = 1;
 16482                           
 16483                           ;incstack = 0
 16484  007F98  8AC5               	bsf	4037,5,c	;volatile
 16485                           
 16486                           ;i2c.c: 93: SSP1CON2bits.ACKEN = 1;
 16487  007F9A  88C5               	bsf	4037,4,c	;volatile
 16488  007F9C  A8C5               	btfss	4037,4,c	;volatile
 16489  007F9E  0012               	return	
 16490  007FA0  D7FD               	goto	l1176
 16491  007FA2                     __end_of__i2c_not_acknowledge:
 16492                           	opt stack 0
 16493                           tblptru	equ	0xFF8
 16494                           tblptrh	equ	0xFF7
 16495                           tblptrl	equ	0xFF6
 16496                           tablat	equ	0xFF5
 16497                           prodh	equ	0xFF4
 16498                           prodl	equ	0xFF3
 16499                           intcon	equ	0xFF2
 16500                           intcon2	equ	0xFF1
 16501                           intcon3	equ	0xFF0
 16502                           postinc0	equ	0xFEE
 16503                           wreg	equ	0xFE8
 16504                           indf1	equ	0xFE7
 16505                           postdec1	equ	0xFE5
 16506                           plusw1	equ	0xFE3
 16507                           fsr1h	equ	0xFE2
 16508                           fsr1l	equ	0xFE1
 16509                           indf2	equ	0xFDF
 16510                           postinc2	equ	0xFDE
 16511                           postdec2	equ	0xFDD
 16512                           plusw2	equ	0xFDB
 16513                           fsr2h	equ	0xFDA
 16514                           fsr2l	equ	0xFD9
 16515                           status	equ	0xFD8
 16516                           
 16517 ;; *************** function __i2c_get *****************
 16518 ;; Defined at:
 16519 ;;		line 67 in file "i2c.c"
 16520 ;; Parameters:    Size  Location     Type
 16521 ;;		None
 16522 ;; Auto vars:     Size  Location     Type
 16523 ;;		None
 16524 ;; Return value:  Size  Location     Type
 16525 ;;                  1    wreg      unsigned char 
 16526 ;; Registers used:
 16527 ;;		wreg, status,2
 16528 ;; Tracked objects:
 16529 ;;		On entry : 0/0
 16530 ;;		On exit  : 0/0
 16531 ;;		Unchanged: 0/0
 16532 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16533 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16534 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16535 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16536 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16537 ;;Total ram usage:        0 bytes
 16538 ;; Hardware stack levels used:    1
 16539 ;; This function calls:
 16540 ;;		Nothing
 16541 ;; This function is called by:
 16542 ;;		__i2c_read
 16543 ;; This function uses a non-reentrant model
 16544 ;;
 16545                           
 16546                           	psect	text73
 16547  007FA2                     __ptext73:
 16548                           	opt stack 0
 16549  007FA2                     __i2c_get:
 16550                           	opt stack 27
 16551                           
 16552                           ;i2c.c: 69: SSP1CON2bits.RCEN = 1 ;
 16553                           
 16554                           ;incstack = 0
 16555  007FA2  86C5               	bsf	4037,3,c	;volatile
 16556  007FA4  B6C5               	btfsc	4037,3,c	;volatile
 16557  007FA6  D7FE               	goto	l1158
 16558                           
 16559                           ;i2c.c: 71: return SSP1BUF;
 16560  007FA8  50C9               	movf	4041,w,c	;volatile
 16561  007FAA  0012               	return	
 16562  007FAC                     __end_of__i2c_get:
 16563                           	opt stack 0
 16564                           tblptru	equ	0xFF8
 16565                           tblptrh	equ	0xFF7
 16566                           tblptrl	equ	0xFF6
 16567                           tablat	equ	0xFF5
 16568                           prodh	equ	0xFF4
 16569                           prodl	equ	0xFF3
 16570                           intcon	equ	0xFF2
 16571                           intcon2	equ	0xFF1
 16572                           intcon3	equ	0xFF0
 16573                           postinc0	equ	0xFEE
 16574                           wreg	equ	0xFE8
 16575                           indf1	equ	0xFE7
 16576                           postdec1	equ	0xFE5
 16577                           plusw1	equ	0xFE3
 16578                           fsr1h	equ	0xFE2
 16579                           fsr1l	equ	0xFE1
 16580                           indf2	equ	0xFDF
 16581                           postinc2	equ	0xFDE
 16582                           postdec2	equ	0xFDD
 16583                           plusw2	equ	0xFDB
 16584                           fsr2h	equ	0xFDA
 16585                           fsr2l	equ	0xFD9
 16586                           status	equ	0xFD8
 16587                           
 16588 ;; *************** function __i2c_acknowledge *****************
 16589 ;; Defined at:
 16590 ;;		line 82 in file "i2c.c"
 16591 ;; Parameters:    Size  Location     Type
 16592 ;;		None
 16593 ;; Auto vars:     Size  Location     Type
 16594 ;;		None
 16595 ;; Return value:  Size  Location     Type
 16596 ;;                  1    wreg      void 
 16597 ;; Registers used:
 16598 ;;		None
 16599 ;; Tracked objects:
 16600 ;;		On entry : 0/0
 16601 ;;		On exit  : 0/0
 16602 ;;		Unchanged: 0/0
 16603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16604 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16605 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16606 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16607 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16608 ;;Total ram usage:        0 bytes
 16609 ;; Hardware stack levels used:    1
 16610 ;; This function calls:
 16611 ;;		Nothing
 16612 ;; This function is called by:
 16613 ;;		__i2c_read
 16614 ;; This function uses a non-reentrant model
 16615 ;;
 16616                           
 16617                           	psect	text74
 16618  007FAC                     __ptext74:
 16619                           	opt stack 0
 16620  007FAC                     __i2c_acknowledge:
 16621                           	opt stack 27
 16622                           
 16623                           ;i2c.c: 84: SSP1CON2bits.ACKDT = 0;
 16624                           
 16625                           ;incstack = 0
 16626  007FAC  9AC5               	bcf	4037,5,c	;volatile
 16627                           
 16628                           ;i2c.c: 85: SSP1CON2bits.ACKEN = 1;
 16629  007FAE  88C5               	bsf	4037,4,c	;volatile
 16630  007FB0  A8C5               	btfss	4037,4,c	;volatile
 16631  007FB2  0012               	return	
 16632  007FB4  D7FD               	goto	l1170
 16633  007FB6                     __end_of__i2c_acknowledge:
 16634                           	opt stack 0
 16635                           tblptru	equ	0xFF8
 16636                           tblptrh	equ	0xFF7
 16637                           tblptrl	equ	0xFF6
 16638                           tablat	equ	0xFF5
 16639                           prodh	equ	0xFF4
 16640                           prodl	equ	0xFF3
 16641                           intcon	equ	0xFF2
 16642                           intcon2	equ	0xFF1
 16643                           intcon3	equ	0xFF0
 16644                           postinc0	equ	0xFEE
 16645                           wreg	equ	0xFE8
 16646                           indf1	equ	0xFE7
 16647                           postdec1	equ	0xFE5
 16648                           plusw1	equ	0xFE3
 16649                           fsr1h	equ	0xFE2
 16650                           fsr1l	equ	0xFE1
 16651                           indf2	equ	0xFDF
 16652                           postinc2	equ	0xFDE
 16653                           postdec2	equ	0xFDD
 16654                           plusw2	equ	0xFDB
 16655                           fsr2h	equ	0xFDA
 16656                           fsr2l	equ	0xFD9
 16657                           status	equ	0xFD8
 16658                           
 16659 ;; *************** function _USBDeviceTasks *****************
 16660 ;; Defined at:
 16661 ;;		line 477 in file "usb_device.c"
 16662 ;; Parameters:    Size  Location     Type
 16663 ;;		None
 16664 ;; Auto vars:     Size  Location     Type
 16665 ;;  i               1   31[COMRAM] unsigned char 
 16666 ;; Return value:  Size  Location     Type
 16667 ;;                  1    wreg      void 
 16668 ;; Registers used:
 16669 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 16670 ;; Tracked objects:
 16671 ;;		On entry : 0/0
 16672 ;;		On exit  : 0/0
 16673 ;;		Unchanged: 0/0
 16674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 16675 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16676 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16677 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16678 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 16679 ;;Total ram usage:        1 bytes
 16680 ;; Hardware stack levels used:    1
 16681 ;; Hardware stack levels required when called:    8
 16682 ;; This function calls:
 16683 ;;		_USBCtrlEPAllowStatusStage
 16684 ;;		_USBCtrlEPService
 16685 ;;		_USBDeviceInit
 16686 ;;		_USBIncrement1msInternalTimers
 16687 ;;		_USBStallHandler
 16688 ;;		_USBSuspend
 16689 ;;		_USBWakeFromSuspend
 16690 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 16691 ;; This function is called by:
 16692 ;;		_main
 16693 ;; This function uses a non-reentrant model
 16694 ;;
 16695                           
 16696                           	psect	text75
 16697  00340A                     __ptext75:
 16698                           	opt stack 0
 16699  00340A                     _USBDeviceTasks:
 16700                           	opt stack 22
 16701                           
 16702                           ;usb_device.c: 544: };usb_device.c: 566: if(USBDeviceState == DETACHED_STATE)
 16703                           
 16704                           ; BSR set to: 0
 16705                           
 16706                           ; BSR set to: 0
 16707                           ;usb_device.c: 543: return;
 16708                           
 16709                           ; BSR set to: 0
 16710                           ;usb_device.c: 542: {PIR2bits.USBIF = 0;};
 16711                           
 16712                           ;usb_device.c: 514: USBDeviceState = DETACHED_STATE;
 16713                           
 16714                           ;usb_device.c: 511: UIE = 0;
 16715                           
 16716                           ;usb_device.c: 506: {;usb_device.c: 508: UCON = 0;
 16717                           
 16718                           ;usb_device.c: 479: uint8_t i;;usb_device.c: 505: if (1 != 1)
 16719                           
 16720                           ;incstack = 0
 16721  00340A  0100               	movlb	0	; () banked
 16722  00340C  51B0               	movf	_USBDeviceState& (0+255),w,b
 16723  00340E  A4D8               	btfss	status,2,c
 16724  003410  D012               	goto	l150
 16725                           
 16726                           ; BSR set to: 0
 16727                           ;usb_device.c: 567: {;usb_device.c: 569: UCON = 0;
 16728  003412  0E00               	movlw	0
 16729  003414  6E65               	movwf	3941,c	;volatile
 16730                           
 16731                           ;usb_device.c: 572: UIE = 0;
 16732  003416  0E00               	movlw	0
 16733  003418  010F               	movlb	15	; () banked
 16734  00341A  6F36               	movwf	54,b	;volatile
 16735                           
 16736                           ;usb_device.c: 576: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 16737  00341C  0E16               	movlw	22
 16738  00341E  6F39               	movwf	57,b	;volatile
 16739  003420  0E9F               	movlw	159
 16740  003422  6F37               	movwf	55,b	;volatile
 16741  003424  0E7B               	movlw	123
 16742  003426  6F36               	movwf	54,b	;volatile
 16743                           
 16744                           ;usb_device.c: 579: while(!UCONbits.USBEN){UCONbits.USBEN = 1;}
 16745  003428  D001               	goto	l151
 16746  00342A                     l152:
 16747  00342A  8665               	bsf	3941,3,c	;volatile
 16748  00342C                     l151:
 16749  00342C  A665               	btfss	3941,3,c	;volatile
 16750  00342E  D7FD               	goto	l152
 16751                           
 16752                           ;usb_device.c: 582: USBDeviceState = ATTACHED_STATE;
 16753  003430  0E01               	movlw	1
 16754  003432  0100               	movlb	0	; () banked
 16755  003434  6FB0               	movwf	_USBDeviceState& (0+255),b
 16756  003436                     l150:
 16757                           
 16758                           ; BSR set to: 0
 16759                           ;usb_device.c: 587: };usb_device.c: 590: if(USBDeviceState == ATTACHED_STATE)
 16760                           
 16761                           ; BSR set to: 0
 16762  003436  05B0               	decf	_USBDeviceState& (0+255),w,b
 16763  003438  B4D8               	btfsc	status,2,c
 16764                           
 16765                           ; BSR set to: 0
 16766                           ;usb_device.c: 591: {;usb_device.c: 601: if(!UCONbits.SE0)
 16767  00343A  BA65               	btfsc	3941,5,c	;volatile
 16768  00343C  D00A               	goto	l155
 16769                           
 16770                           ; BSR set to: 0
 16771                           ;usb_device.c: 602: {;usb_device.c: 608: {UIR = 0;};
 16772  00343E  0E00               	movlw	0
 16773  003440  6E62               	movwf	3938,c	;volatile
 16774                           
 16775                           ;usb_device.c: 612: UIE=0;
 16776  003442  0E00               	movlw	0
 16777  003444  010F               	movlb	15	; () banked
 16778  003446  6F36               	movwf	54,b	;volatile
 16779                           
 16780                           ; BSR set to: 15
 16781                           ;usb_device.c: 614: UIEbits.URSTIE = 1;
 16782  003448  8136               	bsf	54,0,b	;volatile
 16783                           
 16784                           ; BSR set to: 15
 16785                           ;usb_device.c: 615: UIEbits.IDLEIE = 1;
 16786  00344A  8936               	bsf	54,4,b	;volatile
 16787                           
 16788                           ;usb_device.c: 616: USBDeviceState = POWERED_STATE;
 16789  00344C  0E02               	movlw	2
 16790  00344E  0100               	movlb	0	; () banked
 16791  003450  6FB0               	movwf	_USBDeviceState& (0+255),b
 16792  003452                     l155:
 16793                           
 16794                           ; BSR set to: 0
 16795                           ;usb_device.c: 617: };usb_device.c: 618: };usb_device.c: 634: if(UIRbits.ACTVIF && UIEbi
      +                          ts.ACTVIE)
 16796                           
 16797                           ; BSR set to: 0
 16798                           
 16799                           ; BSR set to: 0
 16800  003452  A462               	btfss	3938,2,c	;volatile
 16801  003454  D006               	goto	l156
 16802                           
 16803                           ; BSR set to: 0
 16804  003456  010F               	movlb	15	; () banked
 16805  003458  A536               	btfss	54,2,b	;volatile
 16806  00345A  D003               	goto	l156
 16807                           
 16808                           ; BSR set to: 15
 16809                           ;usb_device.c: 635: {;usb_device.c: 636: (UIR &= 0xFB);
 16810  00345C  9462               	bcf	3938,2,c	;volatile
 16811                           
 16812                           ; BSR set to: 15
 16813                           ;usb_device.c: 640: USBWakeFromSuspend();
 16814  00345E  EC7D  F03C         	call	_USBWakeFromSuspend	;wreg free
 16815  003462                     l156:
 16816                           
 16817                           ;usb_device.c: 642: };usb_device.c: 647: if(UCONbits.SUSPND==1)
 16818  003462  A265               	btfss	3941,1,c	;volatile
 16819  003464  D002               	goto	l157
 16820                           
 16821                           ;usb_device.c: 648: {;usb_device.c: 649: {PIR2bits.USBIF = 0;};
 16822  003466  98A1               	bcf	4001,4,c	;volatile
 16823                           
 16824                           ;usb_device.c: 650: return;
 16825  003468  0012               	return	
 16826  00346A                     l157:
 16827                           
 16828                           ;usb_device.c: 651: };usb_device.c: 663: if(UIRbits.URSTIF && UIEbits.URSTIE)
 16829  00346A  A062               	btfss	3938,0,c	;volatile
 16830  00346C  D009               	goto	l158
 16831  00346E  010F               	movlb	15	; () banked
 16832  003470  A136               	btfss	54,0,b	;volatile
 16833  003472  D006               	goto	l158
 16834                           
 16835                           ; BSR set to: 15
 16836                           ;usb_device.c: 664: {;usb_device.c: 665: USBDeviceInit();
 16837  003474  EC9F  F01D         	call	_USBDeviceInit	;wreg free
 16838                           
 16839                           ;usb_device.c: 669: ;;usb_device.c: 671: USBDeviceState = DEFAULT_STATE;
 16840  003478  0E04               	movlw	4
 16841  00347A  0100               	movlb	0	; () banked
 16842  00347C  6FB0               	movwf	_USBDeviceState& (0+255),b
 16843                           
 16844                           ; BSR set to: 0
 16845                           ;usb_device.c: 681: (UIR &= 0xFE);
 16846  00347E  9062               	bcf	3938,0,c	;volatile
 16847  003480                     l158:
 16848                           
 16849                           ;usb_device.c: 682: };usb_device.c: 687: if(UIRbits.IDLEIF && UIEbits.IDLEIE)
 16850                           
 16851                           ; BSR set to: 0
 16852  003480  A862               	btfss	3938,4,c	;volatile
 16853  003482  D004               	goto	l159
 16854  003484  010F               	movlb	15	; () banked
 16855  003486  B936               	btfsc	54,4,b	;volatile
 16856                           
 16857                           ; BSR set to: 15
 16858                           ;usb_device.c: 688: {;usb_device.c: 694: USBSuspend();
 16859  003488  EC98  F03D         	call	_USBSuspend	;wreg free
 16860  00348C                     l159:
 16861                           
 16862                           ;usb_device.c: 696: };usb_device.c: 708: if(UIRbits.SOFIF)
 16863  00348C  AC62               	btfss	3938,6,c	;volatile
 16864  00348E  D01C               	goto	l163
 16865                           
 16866                           ;usb_device.c: 709: {;usb_device.c: 711: if(UIEbits.SOFIE)
 16867  003490  010F               	movlb	15	; () banked
 16868  003492  AD36               	btfss	54,6,b	;volatile
 16869  003494  D00E               	goto	l161
 16870                           
 16871                           ; BSR set to: 15
 16872                           ;usb_device.c: 712: {;usb_device.c: 713: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SOF,0,1);
 16873  003496  0E00               	movlw	0
 16874  003498  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16875  00349A  0E73               	movlw	115
 16876  00349C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16877  00349E  0E00               	movlw	0
 16878  0034A0  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16879  0034A2  0E00               	movlw	0
 16880  0034A4  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16881  0034A6  0E00               	movlw	0
 16882  0034A8  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16883  0034AA  0E01               	movlw	1
 16884  0034AC  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16885  0034AE  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16886  0034B2                     l161:
 16887                           
 16888                           ;usb_device.c: 714: };usb_device.c: 715: (UIR &= 0xBF);
 16889  0034B2  9C62               	bcf	3938,6,c	;volatile
 16890                           
 16891                           ;usb_device.c: 718: USBIncrement1msInternalTimers();
 16892  0034B4  ECDA  F03E         	call	_USBIncrement1msInternalTimers	;wreg free
 16893                           
 16894                           ;usb_device.c: 735: if(USBStatusStageTimeoutCounter != 0u)
 16895  0034B8  0100               	movlb	0	; () banked
 16896  0034BA  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16897  0034BC  A4D8               	btfss	status,2,c
 16898                           
 16899                           ; BSR set to: 0
 16900                           ;usb_device.c: 736: {;usb_device.c: 737: USBStatusStageTimeoutCounter--;
 16901  0034BE  07A9               	decf	_USBStatusStageTimeoutCounter& (0+255),f,b
 16902                           
 16903                           ; BSR set to: 0
 16904                           ;usb_device.c: 738: };usb_device.c: 744: if(USBStatusStageTimeoutCounter == 0)
 16905                           
 16906                           ; BSR set to: 0
 16907  0034C0  51A9               	movf	_USBStatusStageTimeoutCounter& (0+255),w,b
 16908  0034C2  B4D8               	btfsc	status,2,c
 16909                           
 16910                           ; BSR set to: 0
 16911                           ;usb_device.c: 745: {;usb_device.c: 746: USBCtrlEPAllowStatusStage();
 16912  0034C4  ECAD  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 16913  0034C8                     l163:
 16914                           
 16915                           ;usb_device.c: 747: };usb_device.c: 749: };usb_device.c: 751: if(UIRbits.STALLIF && UIEb
      +                          its.STALLIE)
 16916  0034C8  AA62               	btfss	3938,5,c	;volatile
 16917  0034CA  D004               	goto	l164
 16918  0034CC  010F               	movlb	15	; () banked
 16919  0034CE  BB36               	btfsc	54,5,b	;volatile
 16920                           
 16921                           ; BSR set to: 15
 16922                           ;usb_device.c: 752: {;usb_device.c: 753: USBStallHandler();
 16923  0034D0  EC25  F03B         	call	_USBStallHandler	;wreg free
 16924  0034D4                     l164:
 16925                           
 16926                           ;usb_device.c: 754: };usb_device.c: 756: if(UIRbits.UERRIF && UIEbits.UERRIE)
 16927  0034D4  A262               	btfss	3938,1,c	;volatile
 16928  0034D6  D012               	goto	l165
 16929  0034D8  010F               	movlb	15	; () banked
 16930  0034DA  A336               	btfss	54,1,b	;volatile
 16931  0034DC  D00F               	goto	l165
 16932                           
 16933                           ; BSR set to: 15
 16934                           ;usb_device.c: 757: {;usb_device.c: 758: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_BUS_ERROR
      +                          ,0,1);
 16935  0034DE  0E7F               	movlw	127
 16936  0034E0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 16937  0034E2  6810               	setf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 16938  0034E4  0E00               	movlw	0
 16939  0034E6  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 16940  0034E8  0E00               	movlw	0
 16941  0034EA  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 16942  0034EC  0E00               	movlw	0
 16943  0034EE  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 16944  0034F0  0E01               	movlw	1
 16945  0034F2  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 16946  0034F4  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 16947                           
 16948                           ;usb_device.c: 759: {UEIR = 0;};
 16949  0034F8  0E00               	movlw	0
 16950  0034FA  6E63               	movwf	3939,c	;volatile
 16951  0034FC                     l165:
 16952                           
 16953                           ;usb_device.c: 767: };usb_device.c: 774: if(USBDeviceState < DEFAULT_STATE)
 16954  0034FC  0E04               	movlw	4
 16955  0034FE  0100               	movlb	0	; () banked
 16956  003500  61B0               	cpfslt	_USBDeviceState& (0+255),b
 16957  003502  D002               	goto	l166
 16958                           
 16959                           ; BSR set to: 0
 16960                           ;usb_device.c: 775: {;usb_device.c: 776: {PIR2bits.USBIF = 0;};
 16961  003504  98A1               	bcf	4001,4,c	;volatile
 16962                           
 16963                           ;usb_device.c: 777: return;
 16964  003506  0012               	return	
 16965  003508                     l166:
 16966                           
 16967                           ; BSR set to: 0
 16968                           ;usb_device.c: 778: };usb_device.c: 783: if(UIEbits.TRNIE)
 16969  003508  010F               	movlb	15	; () banked
 16970  00350A  A736               	btfss	54,3,b	;volatile
 16971  00350C  D03C               	goto	u11410
 16972                           
 16973                           ; BSR set to: 15
 16974                           ;usb_device.c: 784: {;usb_device.c: 785: for(i = 0; i < 4u; i++)
 16975  00350E  0E00               	movlw	0
 16976  003510  6E20               	movwf	USBDeviceTasks@i,c
 16977  003512                     l14319:
 16978                           
 16979                           ; BSR set to: 15
 16980  003512  0E03               	movlw	3
 16981  003514  6420               	cpfsgt	USBDeviceTasks@i,c
 16982  003516  D001               	goto	l168
 16983  003518  D036               	goto	u11410
 16984  00351A                     l168:
 16985                           
 16986                           ;usb_device.c: 786: {;usb_device.c: 787: if(UIRbits.TRNIF)
 16987  00351A  A662               	btfss	3938,3,c	;volatile
 16988  00351C  D034               	goto	u11410
 16989                           
 16990                           ;usb_device.c: 788: {;usb_device.c: 790: USTATcopy.Val = USTAT;
 16991  00351E  CF64 F0B3          	movff	3940,_USTATcopy	;volatile
 16992                           
 16993                           ;usb_device.c: 791: endpoint_number = USTATcopy.endpoint_number;
 16994  003522  0100               	movlb	0	; () banked
 16995  003524  31B3               	rrcf	_USTATcopy& (0+255),w,b
 16996  003526  32E8               	rrcf	wreg,f,c
 16997  003528  32E8               	rrcf	wreg,f,c
 16998  00352A  0B0F               	andlw	15
 16999  00352C  6FAB               	movwf	_endpoint_number& (0+255),b
 17000                           
 17001                           ; BSR set to: 0
 17002                           ;usb_device.c: 793: (UIR &= 0xF7);
 17003  00352E  9662               	bcf	3938,3,c	;volatile
 17004                           
 17005                           ; BSR set to: 0
 17006                           ;usb_device.c: 798: if(USTATcopy.direction == 0)
 17007  003530  B5B3               	btfsc	_USTATcopy& (0+255),2,b
 17008  003532  D007               	goto	l171
 17009                           
 17010                           ; BSR set to: 0
 17011                           ;usb_device.c: 799: {;usb_device.c: 800: ep_data_out[endpoint_number].bits.ping_pong_sta
      +                          te ^= 1;
 17012  003534  51AB               	movf	_endpoint_number& (0+255),w,b
 17013  003536  0D01               	mullw	1
 17014  003538  0E5E               	movlw	low _ep_data_out
 17015  00353A  24F3               	addwf	prodl,w,c
 17016  00353C  6ED9               	movwf	fsr2l,c
 17017  00353E  0E01               	movlw	high _ep_data_out
 17018  003540  D007               	goto	L5
 17019  003542                     l171:
 17020                           
 17021                           ;usb_device.c: 802: else;usb_device.c: 803: {;usb_device.c: 804: ep_data_in[endpoint_num
      +                          ber].bits.ping_pong_state ^= 1;
 17022                           
 17023                           ; BSR set to: 1
 17024  003542  0100               	movlb	0	; () banked
 17025  003544  51AB               	movf	_endpoint_number& (0+255),w,b
 17026  003546  0D01               	mullw	1
 17027  003548  0E61               	movlw	low _ep_data_in
 17028  00354A  24F3               	addwf	prodl,w,c
 17029  00354C  6ED9               	movwf	fsr2l,c
 17030  00354E  0E01               	movlw	high _ep_data_in
 17031  003550                     L5:
 17032  003550  20F4               	addwfc	prodh,w,c
 17033  003552  6EDA               	movwf	fsr2h,c
 17034  003554  0101               	movlb	1	; () banked
 17035  003556  70DF               	btg	indf2,0,c
 17036                           
 17037                           ; BSR set to: 1
 17038                           ;usb_device.c: 805: };usb_device.c: 810: if(endpoint_number == 0)
 17039                           
 17040                           ; BSR set to: 1
 17041  003558  0100               	movlb	0	; () banked
 17042  00355A  51AB               	movf	_endpoint_number& (0+255),w,b
 17043  00355C  A4D8               	btfss	status,2,c
 17044  00355E  D003               	goto	l173
 17045                           
 17046                           ; BSR set to: 0
 17047                           ;usb_device.c: 811: {;usb_device.c: 812: USBCtrlEPService();
 17048  003560  EC3D  F02C         	call	_USBCtrlEPService	;wreg free
 17049                           
 17050                           ;usb_device.c: 813: }
 17051  003564  D00E               	goto	l175
 17052  003566                     l173:
 17053                           
 17054                           ;usb_device.c: 814: else;usb_device.c: 815: {;usb_device.c: 816: USER_USB_CALLBACK_EVENT
      +                          _HANDLER(EVENT_TRANSFER,(uint8_t*)&USTATcopy.Val,0);
 17055  003566  0E00               	movlw	0
 17056  003568  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17057  00356A  0E72               	movlw	114
 17058  00356C  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17059  00356E  0EB3               	movlw	low _USTATcopy
 17060  003570  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17061  003572  0E00               	movlw	high _USTATcopy
 17062  003574  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17063  003576  0E00               	movlw	0
 17064  003578  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17065  00357A  0E00               	movlw	0
 17066  00357C  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17067  00357E  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17068  003582                     l175:
 17069  003582  2A20               	incf	USBDeviceTasks@i,f,c
 17070  003584  D7C6               	goto	l14319
 17071  003586                     u11410:
 17072                           
 17073                           ;usb_device.c: 822: };usb_device.c: 823: };usb_device.c: 824: };usb_device.c: 826: {PIR2
      +                          bits.USBIF = 0;};
 17074  003586  98A1               	bcf	4001,4,c	;volatile
 17075  003588  0012               	return		;funcret
 17076  00358A                     __end_of_USBDeviceTasks:
 17077                           	opt stack 0
 17078                           tblptru	equ	0xFF8
 17079                           tblptrh	equ	0xFF7
 17080                           tblptrl	equ	0xFF6
 17081                           tablat	equ	0xFF5
 17082                           prodh	equ	0xFF4
 17083                           prodl	equ	0xFF3
 17084                           intcon	equ	0xFF2
 17085                           intcon2	equ	0xFF1
 17086                           intcon3	equ	0xFF0
 17087                           postinc0	equ	0xFEE
 17088                           wreg	equ	0xFE8
 17089                           indf1	equ	0xFE7
 17090                           postdec1	equ	0xFE5
 17091                           plusw1	equ	0xFE3
 17092                           fsr1h	equ	0xFE2
 17093                           fsr1l	equ	0xFE1
 17094                           indf2	equ	0xFDF
 17095                           postinc2	equ	0xFDE
 17096                           postdec2	equ	0xFDD
 17097                           plusw2	equ	0xFDB
 17098                           fsr2h	equ	0xFDA
 17099                           fsr2l	equ	0xFD9
 17100                           status	equ	0xFD8
 17101                           
 17102 ;; *************** function _USBWakeFromSuspend *****************
 17103 ;; Defined at:
 17104 ;;		line 2305 in file "usb_device.c"
 17105 ;; Parameters:    Size  Location     Type
 17106 ;;		None
 17107 ;; Auto vars:     Size  Location     Type
 17108 ;;		None
 17109 ;; Return value:  Size  Location     Type
 17110 ;;                  1    wreg      void 
 17111 ;; Registers used:
 17112 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17113 ;; Tracked objects:
 17114 ;;		On entry : 0/0
 17115 ;;		On exit  : 0/0
 17116 ;;		Unchanged: 0/0
 17117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17118 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17119 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17120 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17121 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17122 ;;Total ram usage:        0 bytes
 17123 ;; Hardware stack levels used:    1
 17124 ;; Hardware stack levels required when called:    4
 17125 ;; This function calls:
 17126 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17127 ;; This function is called by:
 17128 ;;		_USBDeviceTasks
 17129 ;; This function uses a non-reentrant model
 17130 ;;
 17131                           
 17132                           	psect	text76
 17133  0078FA                     __ptext76:
 17134                           	opt stack 0
 17135  0078FA                     _USBWakeFromSuspend:
 17136                           	opt stack 25
 17137                           
 17138                           ;usb_device.c: 2307: USBBusIsSuspended = 0;
 17139                           
 17140                           ;incstack = 0
 17141  0078FA  0E00               	movlw	0
 17142  0078FC  0100               	movlb	0	; () banked
 17143  0078FE  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 17144                           
 17145                           ; BSR set to: 0
 17146                           ;usb_device.c: 2313: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_RESUME,0,0);
 17147  007900  0E00               	movlw	0
 17148  007902  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17149  007904  0E74               	movlw	116
 17150  007906  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17151  007908  0E00               	movlw	0
 17152  00790A  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17153  00790C  0E00               	movlw	0
 17154  00790E  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17155  007910  0E00               	movlw	0
 17156  007912  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17157  007914  0E00               	movlw	0
 17158  007916  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17159  007918  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17160                           
 17161                           ;usb_device.c: 2320: UCONbits.SUSPND = 0;
 17162  00791C  9265               	bcf	3941,1,c	;volatile
 17163                           
 17164                           ;usb_device.c: 2325: UIEbits.ACTVIE = 0;
 17165  00791E  010F               	movlb	15	; () banked
 17166  007920  9536               	bcf	54,2,b	;volatile
 17167                           
 17168                           ;usb_device.c: 2343: while(UIRbits.ACTVIF)
 17169  007922  D001               	goto	l303
 17170  007924                     
 17171                           ;usb_device.c: 2345: {;usb_device.c: 2346: (UIR &= 0xFB);
 17172                           
 17173                           ; BSR set to: 15
 17174  007924  9462               	bcf	3938,2,c	;volatile
 17175  007926                     l303:
 17176  007926  B462               	btfsc	3938,2,c	;volatile
 17177  007928  D7FD               	goto	l304
 17178                           
 17179                           ;usb_device.c: 2347: };usb_device.c: 2349: USBTicksSinceSuspendEnd = 0;
 17180  00792A  0E00               	movlw	0
 17181  00792C  0100               	movlb	0	; () banked
 17182  00792E  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 17183                           
 17184                           ; BSR set to: 0
 17185  007930  0012               	return		;funcret
 17186  007932                     __end_of_USBWakeFromSuspend:
 17187                           	opt stack 0
 17188                           tblptru	equ	0xFF8
 17189                           tblptrh	equ	0xFF7
 17190                           tblptrl	equ	0xFF6
 17191                           tablat	equ	0xFF5
 17192                           prodh	equ	0xFF4
 17193                           prodl	equ	0xFF3
 17194                           intcon	equ	0xFF2
 17195                           intcon2	equ	0xFF1
 17196                           intcon3	equ	0xFF0
 17197                           postinc0	equ	0xFEE
 17198                           wreg	equ	0xFE8
 17199                           indf1	equ	0xFE7
 17200                           postdec1	equ	0xFE5
 17201                           plusw1	equ	0xFE3
 17202                           fsr1h	equ	0xFE2
 17203                           fsr1l	equ	0xFE1
 17204                           indf2	equ	0xFDF
 17205                           postinc2	equ	0xFDE
 17206                           postdec2	equ	0xFDD
 17207                           plusw2	equ	0xFDB
 17208                           fsr2h	equ	0xFDA
 17209                           fsr2l	equ	0xFD9
 17210                           status	equ	0xFD8
 17211                           
 17212 ;; *************** function _USBSuspend *****************
 17213 ;; Defined at:
 17214 ;;		line 2247 in file "usb_device.c"
 17215 ;; Parameters:    Size  Location     Type
 17216 ;;		None
 17217 ;; Auto vars:     Size  Location     Type
 17218 ;;		None
 17219 ;; Return value:  Size  Location     Type
 17220 ;;                  1    wreg      void 
 17221 ;; Registers used:
 17222 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 17223 ;; Tracked objects:
 17224 ;;		On entry : 0/0
 17225 ;;		On exit  : 0/0
 17226 ;;		Unchanged: 0/0
 17227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17228 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17229 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17230 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17231 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17232 ;;Total ram usage:        0 bytes
 17233 ;; Hardware stack levels used:    1
 17234 ;; Hardware stack levels required when called:    4
 17235 ;; This function calls:
 17236 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 17237 ;; This function is called by:
 17238 ;;		_USBDeviceTasks
 17239 ;; This function uses a non-reentrant model
 17240 ;;
 17241                           
 17242                           	psect	text77
 17243  007B30                     __ptext77:
 17244                           	opt stack 0
 17245  007B30                     _USBSuspend:
 17246                           	opt stack 25
 17247                           
 17248                           ;usb_device.c: 2272: UIEbits.ACTVIE = 1;
 17249                           
 17250                           ; BSR set to: 0
 17251                           ;incstack = 0
 17252  007B30  010F               	movlb	15	; () banked
 17253  007B32  8536               	bsf	54,2,b	;volatile
 17254                           
 17255                           ; BSR set to: 15
 17256                           ;usb_device.c: 2273: (UIR &= 0xEF);
 17257  007B34  9862               	bcf	3938,4,c	;volatile
 17258                           
 17259                           ; BSR set to: 15
 17260                           ;usb_device.c: 2276: UCONbits.SUSPND = 1;
 17261  007B36  8265               	bsf	3941,1,c	;volatile
 17262                           
 17263                           ; BSR set to: 15
 17264                           ;usb_device.c: 2279: USBBusIsSuspended = 1;
 17265  007B38  0E01               	movlw	1
 17266  007B3A  0100               	movlb	0	; () banked
 17267  007B3C  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 17268                           
 17269                           ; BSR set to: 0
 17270                           ;usb_device.c: 2280: USBTicksSinceSuspendEnd = 0;
 17271  007B3E  0E00               	movlw	0
 17272  007B40  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 17273                           
 17274                           ; BSR set to: 0
 17275                           ;usb_device.c: 2287: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SUSPEND,0,0);
 17276  007B42  0E00               	movlw	0
 17277  007B44  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 17278  007B46  0E75               	movlw	117
 17279  007B48  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 17280  007B4A  0E00               	movlw	0
 17281  007B4C  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 17282  007B4E  0E00               	movlw	0
 17283  007B50  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 17284  007B52  0E00               	movlw	0
 17285  007B54  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 17286  007B56  0E00               	movlw	0
 17287  007B58  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 17288  007B5A  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 17289  007B5E  0012               	return		;funcret
 17290  007B60                     __end_of_USBSuspend:
 17291                           	opt stack 0
 17292                           tblptru	equ	0xFF8
 17293                           tblptrh	equ	0xFF7
 17294                           tblptrl	equ	0xFF6
 17295                           tablat	equ	0xFF5
 17296                           prodh	equ	0xFF4
 17297                           prodl	equ	0xFF3
 17298                           intcon	equ	0xFF2
 17299                           intcon2	equ	0xFF1
 17300                           intcon3	equ	0xFF0
 17301                           postinc0	equ	0xFEE
 17302                           wreg	equ	0xFE8
 17303                           indf1	equ	0xFE7
 17304                           postdec1	equ	0xFE5
 17305                           plusw1	equ	0xFE3
 17306                           fsr1h	equ	0xFE2
 17307                           fsr1l	equ	0xFE1
 17308                           indf2	equ	0xFDF
 17309                           postinc2	equ	0xFDE
 17310                           postdec2	equ	0xFDD
 17311                           plusw2	equ	0xFDB
 17312                           fsr2h	equ	0xFDA
 17313                           fsr2l	equ	0xFD9
 17314                           status	equ	0xFD8
 17315                           
 17316 ;; *************** function _USBStallHandler *****************
 17317 ;; Defined at:
 17318 ;;		line 2204 in file "usb_device.c"
 17319 ;; Parameters:    Size  Location     Type
 17320 ;;		None
 17321 ;; Auto vars:     Size  Location     Type
 17322 ;;		None
 17323 ;; Return value:  Size  Location     Type
 17324 ;;                  1    wreg      void 
 17325 ;; Registers used:
 17326 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17327 ;; Tracked objects:
 17328 ;;		On entry : 0/0
 17329 ;;		On exit  : 0/0
 17330 ;;		Unchanged: 0/0
 17331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17332 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17333 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17334 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17335 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17336 ;;Total ram usage:        1 bytes
 17337 ;; Hardware stack levels used:    1
 17338 ;; This function calls:
 17339 ;;		Nothing
 17340 ;; This function is called by:
 17341 ;;		_USBDeviceTasks
 17342 ;; This function uses a non-reentrant model
 17343 ;;
 17344                           
 17345                           	psect	text78
 17346  00764A                     __ptext78:
 17347                           	opt stack 0
 17348  00764A                     _USBStallHandler:
 17349                           	opt stack 29
 17350                           
 17351                           ;usb_device.c: 2216: if(UEP0bits.EPSTALL == 1)
 17352                           
 17353                           ;incstack = 0
 17354  00764A  010F               	movlb	15	; () banked
 17355  00764C  A126               	btfss	38,0,b	;volatile
 17356  00764E  D01D               	goto	l295
 17357                           
 17358                           ; BSR set to: 15
 17359                           ;usb_device.c: 2217: {;usb_device.c: 2219: if((pBDTEntryEP0OutCurrent->STAT.Val == 0x80)
      +                           && (pBDTEntryIn[0]->STAT.Val == (0x80|0x04)))
 17360  007650  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17361  007654  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17362  007658  0E80               	movlw	128
 17363  00765A  18DE               	xorwf	postinc2,w,c
 17364  00765C  A4D8               	btfss	status,2,c
 17365  00765E  D014               	goto	l296
 17366                           
 17367                           ; BSR set to: 15
 17368  007660  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 17369  007664  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 17370  007668  0E84               	movlw	132
 17371  00766A  18DE               	xorwf	postinc2,w,c
 17372  00766C  A4D8               	btfss	status,2,c
 17373  00766E  D00C               	goto	l296
 17374                           
 17375                           ; BSR set to: 15
 17376                           ;usb_device.c: 2220: {;usb_device.c: 2222: pBDTEntryEP0OutCurrent->STAT.Val = 0x00|(0x08
      +                           & 0x08)|0x04;
 17377  007670  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17378  007674  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17379  007678  0E0C               	movlw	12
 17380  00767A  6EDF               	movwf	indf2,c
 17381                           
 17382                           ; BSR set to: 15
 17383                           ;usb_device.c: 2223: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 17384  00767C  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17385  007680  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17386  007684  0E00               	movlw	0
 17387  007686  8EDB               	bsf	plusw2,7,c
 17388  007688                     l296:
 17389                           
 17390                           ; BSR set to: 15
 17391                           ;usb_device.c: 2224: };usb_device.c: 2225: UEP0bits.EPSTALL = 0;
 17392                           
 17393                           ; BSR set to: 15
 17394  007688  9126               	bcf	38,0,b	;volatile
 17395  00768A                     l295:
 17396                           
 17397                           ; BSR set to: 15
 17398                           ;usb_device.c: 2226: };usb_device.c: 2228: (UIR &= 0xDF);
 17399  00768A  9A62               	bcf	3938,5,c	;volatile
 17400                           
 17401                           ; BSR set to: 15
 17402  00768C  0012               	return		;funcret
 17403  00768E                     __end_of_USBStallHandler:
 17404                           	opt stack 0
 17405                           tblptru	equ	0xFF8
 17406                           tblptrh	equ	0xFF7
 17407                           tblptrl	equ	0xFF6
 17408                           tablat	equ	0xFF5
 17409                           prodh	equ	0xFF4
 17410                           prodl	equ	0xFF3
 17411                           intcon	equ	0xFF2
 17412                           intcon2	equ	0xFF1
 17413                           intcon3	equ	0xFF0
 17414                           postinc0	equ	0xFEE
 17415                           wreg	equ	0xFE8
 17416                           indf1	equ	0xFE7
 17417                           postdec1	equ	0xFE5
 17418                           plusw1	equ	0xFE3
 17419                           fsr1h	equ	0xFE2
 17420                           fsr1l	equ	0xFE1
 17421                           indf2	equ	0xFDF
 17422                           postinc2	equ	0xFDE
 17423                           postdec2	equ	0xFDD
 17424                           plusw2	equ	0xFDB
 17425                           fsr2h	equ	0xFDA
 17426                           fsr2l	equ	0xFD9
 17427                           status	equ	0xFD8
 17428                           
 17429 ;; *************** function _USBIncrement1msInternalTimers *****************
 17430 ;; Defined at:
 17431 ;;		line 3027 in file "usb_device.c"
 17432 ;; Parameters:    Size  Location     Type
 17433 ;;		None
 17434 ;; Auto vars:     Size  Location     Type
 17435 ;;		None
 17436 ;; Return value:  Size  Location     Type
 17437 ;;                  1    wreg      void 
 17438 ;; Registers used:
 17439 ;;		wreg, status,2, status,0
 17440 ;; Tracked objects:
 17441 ;;		On entry : 0/0
 17442 ;;		On exit  : 0/0
 17443 ;;		Unchanged: 0/0
 17444 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17445 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17446 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17447 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17448 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17449 ;;Total ram usage:        0 bytes
 17450 ;; Hardware stack levels used:    1
 17451 ;; This function calls:
 17452 ;;		Nothing
 17453 ;; This function is called by:
 17454 ;;		_USBDeviceTasks
 17455 ;; This function uses a non-reentrant model
 17456 ;;
 17457                           
 17458                           	psect	text79
 17459  007DB4                     __ptext79:
 17460                           	opt stack 0
 17461  007DB4                     _USBIncrement1msInternalTimers:
 17462                           	opt stack 29
 17463                           
 17464                           ;usb_device.c: 3035: USB1msTickCount++;
 17465                           
 17466                           ; BSR set to: 15
 17467                           ;incstack = 0
 17468  007DB4  0E01               	movlw	1
 17469  007DB6  0101               	movlb	1	; () banked
 17470  007DB8  2754               	addwf	_USB1msTickCount& (0+255),f,b
 17471  007DBA  0E00               	movlw	0
 17472  007DBC  2355               	addwfc	(_USB1msTickCount+1)& (0+255),f,b
 17473  007DBE  2356               	addwfc	(_USB1msTickCount+2)& (0+255),f,b
 17474  007DC0  2357               	addwfc	(_USB1msTickCount+3)& (0+255),f,b
 17475                           
 17476                           ; BSR set to: 1
 17477                           ;usb_device.c: 3036: if(USBBusIsSuspended == 0)
 17478  007DC2  0100               	movlb	0	; () banked
 17479  007DC4  51AC               	movf	_USBBusIsSuspended& (0+255),w,b
 17480  007DC6  A4D8               	btfss	status,2,c
 17481  007DC8  0012               	return	
 17482                           
 17483                           ; BSR set to: 0
 17484                           ;usb_device.c: 3037: {;usb_device.c: 3038: USBTicksSinceSuspendEnd++;
 17485  007DCA  2BA3               	incf	_USBTicksSinceSuspendEnd& (0+255),f,b
 17486                           
 17487                           ; BSR set to: 0
 17488                           ;usb_device.c: 3040: if(USBTicksSinceSuspendEnd == 0)
 17489  007DCC  51A3               	movf	_USBTicksSinceSuspendEnd& (0+255),w,b
 17490  007DCE  A4D8               	btfss	status,2,c
 17491  007DD0  0012               	return	
 17492                           
 17493                           ; BSR set to: 0
 17494                           ;usb_device.c: 3041: {;usb_device.c: 3042: USBTicksSinceSuspendEnd = 255;
 17495  007DD2  69A3               	setf	_USBTicksSinceSuspendEnd& (0+255),b
 17496                           
 17497                           ; BSR set to: 0
 17498  007DD4  0012               	return	
 17499  007DD6                     __end_of_USBIncrement1msInternalTimers:
 17500                           	opt stack 0
 17501                           tblptru	equ	0xFF8
 17502                           tblptrh	equ	0xFF7
 17503                           tblptrl	equ	0xFF6
 17504                           tablat	equ	0xFF5
 17505                           prodh	equ	0xFF4
 17506                           prodl	equ	0xFF3
 17507                           intcon	equ	0xFF2
 17508                           intcon2	equ	0xFF1
 17509                           intcon3	equ	0xFF0
 17510                           postinc0	equ	0xFEE
 17511                           wreg	equ	0xFE8
 17512                           indf1	equ	0xFE7
 17513                           postdec1	equ	0xFE5
 17514                           plusw1	equ	0xFE3
 17515                           fsr1h	equ	0xFE2
 17516                           fsr1l	equ	0xFE1
 17517                           indf2	equ	0xFDF
 17518                           postinc2	equ	0xFDE
 17519                           postdec2	equ	0xFDD
 17520                           plusw2	equ	0xFDB
 17521                           fsr2h	equ	0xFDA
 17522                           fsr2l	equ	0xFD9
 17523                           status	equ	0xFD8
 17524                           
 17525 ;; *************** function _USBDeviceInit *****************
 17526 ;; Defined at:
 17527 ;;		line 277 in file "usb_device.c"
 17528 ;; Parameters:    Size  Location     Type
 17529 ;;		None
 17530 ;; Auto vars:     Size  Location     Type
 17531 ;;  i               1    8[COMRAM] unsigned char 
 17532 ;; Return value:  Size  Location     Type
 17533 ;;                  1    wreg      void 
 17534 ;; Registers used:
 17535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 17536 ;; Tracked objects:
 17537 ;;		On entry : 0/0
 17538 ;;		On exit  : 0/0
 17539 ;;		Unchanged: 0/0
 17540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17541 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17542 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17544 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17545 ;;Total ram usage:        1 bytes
 17546 ;; Hardware stack levels used:    1
 17547 ;; Hardware stack levels required when called:    1
 17548 ;; This function calls:
 17549 ;;		_memset
 17550 ;; This function is called by:
 17551 ;;		_USBDeviceTasks
 17552 ;;		_main
 17553 ;; This function uses a non-reentrant model
 17554 ;;
 17555                           
 17556                           	psect	text80
 17557  003B3E                     __ptext80:
 17558                           	opt stack 0
 17559  003B3E                     _USBDeviceInit:
 17560                           	opt stack 28
 17561                           
 17562                           ;usb_device.c: 279: uint8_t i;;usb_device.c: 281: {PIE2bits.USBIE = 0;};
 17563                           
 17564                           ; BSR set to: 0
 17565                           ;incstack = 0
 17566  003B3E  98A0               	bcf	4000,4,c	;volatile
 17567                           
 17568                           ;usb_device.c: 285: ;;usb_device.c: 288: {UEIR = 0;};
 17569  003B40  0E00               	movlw	0
 17570  003B42  6E63               	movwf	3939,c	;volatile
 17571                           
 17572                           ;usb_device.c: 291: {UIR = 0;};
 17573  003B44  0E00               	movlw	0
 17574  003B46  6E62               	movwf	3938,c	;volatile
 17575                           
 17576                           ;usb_device.c: 294: UEP0 = 0;
 17577  003B48  0E00               	movlw	0
 17578  003B4A  010F               	movlb	15	; () banked
 17579  003B4C  6F26               	movwf	38,b	;volatile
 17580                           
 17581                           ; BSR set to: 15
 17582                           ;usb_device.c: 296: memset((void*)&UEP1,0x00,(2));;
 17583  003B4E  0E27               	movlw	39
 17584  003B50  6E01               	movwf	memset@p1,c
 17585  003B52  0E0F               	movlw	15
 17586  003B54  6E02               	movwf	memset@p1+1,c
 17587  003B56  0E00               	movlw	0
 17588  003B58  6E04               	movwf	memset@c+1,c
 17589  003B5A  0E00               	movlw	0
 17590  003B5C  6E03               	movwf	memset@c,c
 17591  003B5E  0E00               	movlw	0
 17592  003B60  6E06               	movwf	memset@n+1,c
 17593  003B62  0E02               	movlw	2
 17594  003B64  6E05               	movwf	memset@n,c
 17595  003B66  ECF3  F03D         	call	_memset	;wreg free
 17596                           
 17597                           ;usb_device.c: 298: { UCFG = 0x10 | 0x00 | 0x04 | 0x02; UEIE = 0x9F; UIE = 0x39 | 0x40 |
      +                           0x02; };
 17598  003B6A  0E16               	movlw	22
 17599  003B6C  010F               	movlb	15	; () banked
 17600  003B6E  6F39               	movwf	57,b	;volatile
 17601                           
 17602                           ; BSR set to: 15
 17603  003B70  0E9F               	movlw	159
 17604  003B72  6F37               	movwf	55,b	;volatile
 17605                           
 17606                           ; BSR set to: 15
 17607  003B74  0E7B               	movlw	123
 17608  003B76  6F36               	movwf	54,b	;volatile
 17609                           
 17610                           ; BSR set to: 15
 17611                           ;usb_device.c: 301: ;;usb_device.c: 304: ;;usb_device.c: 307: for(i = 0; i < (sizeof(BDT
      +                          )/sizeof(BDT_ENTRY)); i++)
 17612  003B78  0E00               	movlw	0
 17613  003B7A  6E09               	movwf	USBDeviceInit@i,c
 17614  003B7C                     l13241:
 17615                           
 17616                           ; BSR set to: 15
 17617  003B7C  0E0B               	movlw	11
 17618  003B7E  6409               	cpfsgt	USBDeviceInit@i,c
 17619  003B80  D001               	goto	l139
 17620  003B82  D00E               	goto	u10060
 17621  003B84                     l139:
 17622                           
 17623                           ;usb_device.c: 308: {;usb_device.c: 309: BDT[i].Val = 0x00;
 17624                           
 17625                           ; BSR set to: 15
 17626  003B84  5009               	movf	USBDeviceInit@i,w,c
 17627  003B86  0D04               	mullw	4
 17628  003B88  0E00               	movlw	0
 17629  003B8A  24F3               	addwf	prodl,w,c
 17630  003B8C  6ED9               	movwf	fsr2l,c
 17631  003B8E  0E0D               	movlw	13
 17632  003B90  20F4               	addwfc	prodh,w,c
 17633  003B92  6EDA               	movwf	fsr2h,c
 17634  003B94  6ADE               	clrf	postinc2,c
 17635  003B96  6ADE               	clrf	postinc2,c
 17636  003B98  6ADE               	clrf	postinc2,c
 17637  003B9A  6ADD               	clrf	postdec2,c
 17638  003B9C  2A09               	incf	USBDeviceInit@i,f,c
 17639  003B9E  D7EE               	goto	l13241
 17640  003BA0                     u10060:
 17641                           
 17642                           ;usb_device.c: 310: };usb_device.c: 313: UCONbits.PPBRST = 1;
 17643  003BA0  8C65               	bsf	3941,6,c	;volatile
 17644                           
 17645                           ;usb_device.c: 316: UADDR = 0x00;
 17646  003BA2  0E00               	movlw	0
 17647  003BA4  010F               	movlb	15	; () banked
 17648  003BA6  6F38               	movwf	56,b	;volatile
 17649                           
 17650                           ; BSR set to: 15
 17651                           ;usb_device.c: 319: UCONbits.PKTDIS = 0;
 17652  003BA8  9865               	bcf	3941,4,c	;volatile
 17653                           
 17654                           ; BSR set to: 15
 17655                           ;usb_device.c: 322: UCONbits.PPBRST = 0;
 17656  003BAA  9C65               	bcf	3941,6,c	;volatile
 17657  003BAC                     
 17658                           ;usb_device.c: 326: {;usb_device.c: 327: (UIR &= 0xF7);
 17659                           
 17660                           ; BSR set to: 15
 17661  003BAC  9662               	bcf	3938,3,c	;volatile
 17662                           
 17663                           ;usb_device.c: 329: inPipes[0].info.Val = 0;
 17664  003BAE  0E00               	movlw	0
 17665  003BB0  0100               	movlb	0	; () banked
 17666  003BB2  6F69               	movwf	(_inPipes+3)& (0+255),b
 17667                           
 17668                           ; BSR set to: 0
 17669                           ;usb_device.c: 330: outPipes[0].info.Val = 0;
 17670  003BB4  0E00               	movlw	0
 17671  003BB6  0101               	movlb	1	; () banked
 17672  003BB8  6F34               	movwf	(_outPipes+3)& (0+255),b
 17673                           
 17674                           ; BSR set to: 1
 17675                           ;usb_device.c: 331: outPipes[0].wCount.Val = 0;
 17676  003BBA  0E00               	movlw	0
 17677  003BBC  6F36               	movwf	(_outPipes+5)& (0+255),b
 17678  003BBE  0E00               	movlw	0
 17679  003BC0  6F35               	movwf	(_outPipes+4)& (0+255),b
 17680                           
 17681                           ; BSR set to: 1
 17682                           ;usb_device.c: 332: }while(UIRbits.TRNIF == 1);
 17683  003BC2  B662               	btfsc	3938,3,c	;volatile
 17684  003BC4  D7F3               	goto	l141
 17685                           
 17686                           ; BSR set to: 1
 17687                           ;usb_device.c: 336: USBStatusStageEnabledFlag1 = 1;
 17688                           
 17689                           ; BSR set to: 1
 17690  003BC6  0E01               	movlw	1
 17691  003BC8  0100               	movlb	0	; () banked
 17692  003BCA  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 17693                           
 17694                           ;usb_device.c: 337: USBStatusStageEnabledFlag2 = 1;
 17695  003BCC  0E01               	movlw	1
 17696  003BCE  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 17697                           
 17698                           ;usb_device.c: 339: USBDeferINDataStagePackets = 0;
 17699  003BD0  0E00               	movlw	0
 17700  003BD2  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 17701                           
 17702                           ;usb_device.c: 340: USBDeferOUTDataStagePackets = 0;
 17703  003BD4  0E00               	movlw	0
 17704  003BD6  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 17705                           
 17706                           ;usb_device.c: 341: USBBusIsSuspended = 0;
 17707  003BD8  0E00               	movlw	0
 17708  003BDA  6FAC               	movwf	_USBBusIsSuspended& (0+255),b
 17709                           
 17710                           ;usb_device.c: 345: for(i = 0; i < (uint8_t)(2+1u); i++)
 17711  003BDC  0E00               	movlw	0
 17712  003BDE  6E09               	movwf	USBDeviceInit@i,c
 17713  003BE0                     l13269:
 17714                           
 17715                           ; BSR set to: 0
 17716  003BE0  0E02               	movlw	2
 17717  003BE2  6409               	cpfsgt	USBDeviceInit@i,c
 17718  003BE4  D001               	goto	l143
 17719  003BE6  D02E               	goto	u10090
 17720  003BE8                     l143:
 17721                           
 17722                           ;usb_device.c: 346: {;usb_device.c: 347: pBDTEntryIn[i] = 0u;
 17723                           
 17724                           ; BSR set to: 0
 17725  003BE8  5009               	movf	USBDeviceInit@i,w,c
 17726  003BEA  0D02               	mullw	2
 17727  003BEC  0E6C               	movlw	low _pBDTEntryIn
 17728  003BEE  24F3               	addwf	prodl,w,c
 17729  003BF0  6ED9               	movwf	fsr2l,c
 17730  003BF2  0E00               	movlw	high _pBDTEntryIn
 17731  003BF4  20F4               	addwfc	prodh,w,c
 17732  003BF6  6EDA               	movwf	fsr2h,c
 17733  003BF8  0E00               	movlw	0
 17734  003BFA  6EDE               	movwf	postinc2,c
 17735  003BFC  0E00               	movlw	0
 17736  003BFE  6EDD               	movwf	postdec2,c
 17737                           
 17738                           ;usb_device.c: 348: pBDTEntryOut[i] = 0u;
 17739  003C00  5009               	movf	USBDeviceInit@i,w,c
 17740  003C02  0D02               	mullw	2
 17741  003C04  0E72               	movlw	low _pBDTEntryOut
 17742  003C06  24F3               	addwf	prodl,w,c
 17743  003C08  6ED9               	movwf	fsr2l,c
 17744  003C0A  0E00               	movlw	high _pBDTEntryOut
 17745  003C0C  20F4               	addwfc	prodh,w,c
 17746  003C0E  6EDA               	movwf	fsr2h,c
 17747  003C10  0E00               	movlw	0
 17748  003C12  6EDE               	movwf	postinc2,c
 17749  003C14  0E00               	movlw	0
 17750  003C16  6EDD               	movwf	postdec2,c
 17751                           
 17752                           ;usb_device.c: 349: ep_data_in[i].Val = 0u;
 17753  003C18  5009               	movf	USBDeviceInit@i,w,c
 17754  003C1A  0D01               	mullw	1
 17755  003C1C  0E61               	movlw	low _ep_data_in
 17756  003C1E  24F3               	addwf	prodl,w,c
 17757  003C20  6ED9               	movwf	fsr2l,c
 17758  003C22  0E01               	movlw	high _ep_data_in
 17759  003C24  20F4               	addwfc	prodh,w,c
 17760  003C26  6EDA               	movwf	fsr2h,c
 17761  003C28  0E00               	movlw	0
 17762  003C2A  6EDF               	movwf	indf2,c
 17763                           
 17764                           ;usb_device.c: 350: ep_data_out[i].Val = 0u;
 17765  003C2C  5009               	movf	USBDeviceInit@i,w,c
 17766  003C2E  0D01               	mullw	1
 17767  003C30  0E5E               	movlw	low _ep_data_out
 17768  003C32  24F3               	addwf	prodl,w,c
 17769  003C34  6ED9               	movwf	fsr2l,c
 17770  003C36  0E01               	movlw	high _ep_data_out
 17771  003C38  20F4               	addwfc	prodh,w,c
 17772  003C3A  6EDA               	movwf	fsr2h,c
 17773  003C3C  0E00               	movlw	0
 17774  003C3E  6EDF               	movwf	indf2,c
 17775  003C40  2A09               	incf	USBDeviceInit@i,f,c
 17776  003C42  D7CE               	goto	l13269
 17777  003C44                     u10090:
 17778                           
 17779                           ;usb_device.c: 351: };usb_device.c: 354: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 17780  003C44  0E08               	movlw	8
 17781  003C46  0100               	movlb	0	; () banked
 17782  003C48  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 17783  003C4A  0E0D               	movlw	13
 17784  003C4C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 17785                           
 17786                           ; BSR set to: 0
 17787                           ;usb_device.c: 356: UEP0 = 0x06|0x10;
 17788  003C4E  0E16               	movlw	22
 17789  003C50  010F               	movlb	15	; () banked
 17790  003C52  6F26               	movwf	38,b	;volatile
 17791                           
 17792                           ; BSR set to: 15
 17793                           ;usb_device.c: 358: BDT[0].ADR = ((uint16_t)(&SetupPkt));
 17794  003C54  0E0D               	movlw	13
 17795  003C56  010D               	movlb	13	; () banked
 17796  003C58  6F03               	movwf	3,b	;volatile
 17797  003C5A  0E30               	movlw	48
 17798  003C5C  6F02               	movwf	2,b	;volatile
 17799                           
 17800                           ; BSR set to: 13
 17801                           ;usb_device.c: 359: BDT[0].CNT = 8;
 17802  003C5E  0E08               	movlw	8
 17803  003C60  6F01               	movwf	1,b	;volatile
 17804                           
 17805                           ; BSR set to: 13
 17806                           ;usb_device.c: 360: BDT[0].STAT.Val = 0x00|0x04;
 17807  003C62  0E04               	movlw	4
 17808  003C64  6F00               	movwf	0,b	;volatile
 17809                           
 17810                           ; BSR set to: 13
 17811                           ;usb_device.c: 361: BDT[0].STAT.Val |= 0x80;
 17812  003C66  8F00               	bsf	0,7,b	;volatile
 17813                           
 17814                           ; BSR set to: 13
 17815                           ;usb_device.c: 364: USBActiveConfiguration = 0;
 17816  003C68  0E00               	movlw	0
 17817  003C6A  0100               	movlb	0	; () banked
 17818  003C6C  6FB4               	movwf	_USBActiveConfiguration& (0+255),b
 17819                           
 17820                           ; BSR set to: 0
 17821                           ;usb_device.c: 366: USB1msTickCount = 0;
 17822  003C6E  0E00               	movlw	0
 17823  003C70  0101               	movlb	1	; () banked
 17824  003C72  6F54               	movwf	_USB1msTickCount& (0+255),b
 17825  003C74  0E00               	movlw	0
 17826  003C76  6F55               	movwf	(_USB1msTickCount+1)& (0+255),b
 17827  003C78  0E00               	movlw	0
 17828  003C7A  6F56               	movwf	(_USB1msTickCount+2)& (0+255),b
 17829  003C7C  0E00               	movlw	0
 17830  003C7E  6F57               	movwf	(_USB1msTickCount+3)& (0+255),b
 17831                           
 17832                           ; BSR set to: 1
 17833                           ;usb_device.c: 367: USBTicksSinceSuspendEnd = 0;
 17834  003C80  0E00               	movlw	0
 17835  003C82  0100               	movlb	0	; () banked
 17836  003C84  6FA3               	movwf	_USBTicksSinceSuspendEnd& (0+255),b
 17837                           
 17838                           ; BSR set to: 0
 17839                           ;usb_device.c: 370: USBDeviceState = DETACHED_STATE;
 17840  003C86  0E00               	movlw	0
 17841  003C88  6FB0               	movwf	_USBDeviceState& (0+255),b
 17842                           
 17843                           ; BSR set to: 0
 17844  003C8A  0012               	return		;funcret
 17845  003C8C                     __end_of_USBDeviceInit:
 17846                           	opt stack 0
 17847                           tblptru	equ	0xFF8
 17848                           tblptrh	equ	0xFF7
 17849                           tblptrl	equ	0xFF6
 17850                           tablat	equ	0xFF5
 17851                           prodh	equ	0xFF4
 17852                           prodl	equ	0xFF3
 17853                           intcon	equ	0xFF2
 17854                           intcon2	equ	0xFF1
 17855                           intcon3	equ	0xFF0
 17856                           postinc0	equ	0xFEE
 17857                           wreg	equ	0xFE8
 17858                           indf1	equ	0xFE7
 17859                           postdec1	equ	0xFE5
 17860                           plusw1	equ	0xFE3
 17861                           fsr1h	equ	0xFE2
 17862                           fsr1l	equ	0xFE1
 17863                           indf2	equ	0xFDF
 17864                           postinc2	equ	0xFDE
 17865                           postdec2	equ	0xFDD
 17866                           plusw2	equ	0xFDB
 17867                           fsr2h	equ	0xFDA
 17868                           fsr2l	equ	0xFD9
 17869                           status	equ	0xFD8
 17870                           
 17871 ;; *************** function _USBCtrlEPService *****************
 17872 ;; Defined at:
 17873 ;;		line 2374 in file "usb_device.c"
 17874 ;; Parameters:    Size  Location     Type
 17875 ;;		None
 17876 ;; Auto vars:     Size  Location     Type
 17877 ;;		None
 17878 ;; Return value:  Size  Location     Type
 17879 ;;                  1    wreg      void 
 17880 ;; Registers used:
 17881 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 17882 ;; Tracked objects:
 17883 ;;		On entry : 0/0
 17884 ;;		On exit  : 0/0
 17885 ;;		Unchanged: 0/0
 17886 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 17887 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17888 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17889 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17890 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 17891 ;;Total ram usage:        2 bytes
 17892 ;; Hardware stack levels used:    1
 17893 ;; Hardware stack levels required when called:    7
 17894 ;; This function calls:
 17895 ;;		_USBCtrlTrfInHandler
 17896 ;;		_USBCtrlTrfOutHandler
 17897 ;;		_USBCtrlTrfSetupHandler
 17898 ;;		_memcpy
 17899 ;; This function is called by:
 17900 ;;		_USBDeviceTasks
 17901 ;; This function uses a non-reentrant model
 17902 ;;
 17903                           
 17904                           	psect	text81
 17905  00587A                     __ptext81:
 17906                           	opt stack 0
 17907  00587A                     _USBCtrlEPService:
 17908                           	opt stack 22
 17909                           
 17910                           ;usb_device.c: 2380: USBStatusStageTimeoutCounter = (uint8_t)45;
 17911                           
 17912                           ; BSR set to: 0
 17913                           ;incstack = 0
 17914  00587A  0E2D               	movlw	45
 17915  00587C  0100               	movlb	0	; () banked
 17916  00587E  6FA9               	movwf	_USBStatusStageTimeoutCounter& (0+255),b
 17917                           
 17918                           ; BSR set to: 0
 17919                           ;usb_device.c: 2384: if((USTATcopy.Val & ~0x02) == 0x00)
 17920  005880  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17921  005884  0EFD               	movlw	253
 17922  005886  161E               	andwf	??_USBCtrlEPService,f,c
 17923  005888  A4D8               	btfss	status,2,c
 17924  00588A  D044               	goto	l309
 17925                           
 17926                           ; BSR set to: 0
 17927                           ;usb_device.c: 2385: {;usb_device.c: 2388: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*
      +                          )&BDT[(USTATcopy.Val & 0x7E)>>1];
 17928  00588C  C0B3  F01E         	movff	_USTATcopy,??_USBCtrlEPService
 17929  005890  90D8               	bcf	status,0,c
 17930  005892  321E               	rrcf	??_USBCtrlEPService,f,c
 17931  005894  0E3F               	movlw	63
 17932  005896  161E               	andwf	??_USBCtrlEPService,f,c
 17933  005898  501E               	movf	??_USBCtrlEPService,w,c
 17934  00589A  0D04               	mullw	4
 17935  00589C  0E00               	movlw	0
 17936  00589E  24F3               	addwf	prodl,w,c
 17937  0058A0  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 17938  0058A2  0E0D               	movlw	13
 17939  0058A4  20F4               	addwfc	prodh,w,c
 17940  0058A6  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 17941                           
 17942                           ; BSR set to: 0
 17943                           ;usb_device.c: 2396: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 17944  0058A8  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 17945  0058AC  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 17946                           
 17947                           ; BSR set to: 0
 17948                           ;usb_device.c: 2398: pBDTEntryEP0OutNext = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryEP
      +                          0OutNext) ^ 0x0004);
 17949  0058B0  0E04               	movlw	4
 17950  0058B2  1990               	xorwf	_pBDTEntryEP0OutNext& (0+255),w,b
 17951  0058B4  6F90               	movwf	_pBDTEntryEP0OutNext& (0+255),b
 17952  0058B6  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 17953  0058B8  6F91               	movwf	(_pBDTEntryEP0OutNext+1)& (0+255),b
 17954                           
 17955                           ; BSR set to: 0
 17956                           ;usb_device.c: 2401: if(pBDTEntryEP0OutCurrent->STAT.PID == 0xD)
 17957  0058BA  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 17958  0058BE  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 17959  0058C2  30DF               	rrcf	223,w,c
 17960  0058C4  32E8               	rrcf	wreg,f,c
 17961  0058C6  0B0F               	andlw	15
 17962  0058C8  0A0D               	xorlw	13
 17963  0058CA  A4D8               	btfss	status,2,c
 17964  0058CC  D020               	goto	l310
 17965                           
 17966                           ; BSR set to: 0
 17967                           ;usb_device.c: 2402: {;usb_device.c: 2407: memcpy((uint8_t*)&SetupPkt, (uint8_t*)((void 
      +                          *)(pBDTEntryEP0OutCurrent->ADR)), 8);
 17968  0058CE  0E30               	movlw	48
 17969  0058D0  6E01               	movwf	memcpy@d1,c
 17970  0058D2  0E0D               	movlw	13
 17971  0058D4  6E02               	movwf	memcpy@d1+1,c
 17972  0058D6  EE20 F002          	lfsr	2,2
 17973  0058DA  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 17974  0058DC  26D9               	addwf	fsr2l,f,c
 17975  0058DE  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 17976  0058E0  22DA               	addwfc	fsr2h,f,c
 17977  0058E2  CFDE F01E          	movff	postinc2,??_USBCtrlEPService
 17978  0058E6  CFDD F01F          	movff	postdec2,??_USBCtrlEPService+1
 17979  0058EA  C01E  F003         	movff	??_USBCtrlEPService,memcpy@s1
 17980  0058EE  C01F  F004         	movff	??_USBCtrlEPService+1,memcpy@s1+1
 17981  0058F2  5003               	movf	memcpy@s1,w,c
 17982  0058F4  1004               	iorwf	memcpy@s1+1,w,c
 17983  0058F6  A4D8               	btfss	status,2,c
 17984  0058F8  0E20               	movlw	32
 17985  0058FA  6E05               	movwf	memcpy@s1+2,c
 17986  0058FC  0E00               	movlw	0
 17987  0058FE  6E07               	movwf	memcpy@n+1,c
 17988  005900  0E08               	movlw	8
 17989  005902  6E06               	movwf	memcpy@n,c
 17990  005904  ECBE  F036         	call	_memcpy	;wreg free
 17991                           
 17992                           ;usb_device.c: 2410: USBCtrlTrfSetupHandler();
 17993  005908  EC9F  F030         	call	_USBCtrlTrfSetupHandler	;wreg free
 17994                           
 17995                           ;usb_device.c: 2411: }
 17996  00590C  0012               	return	
 17997  00590E                     l310:
 17998                           
 17999                           ;usb_device.c: 2412: else;usb_device.c: 2413: {;usb_device.c: 2415: USBCtrlTrfOutHandler
      +                          ();
 18000  00590E  EC83  F037         	call	_USBCtrlTrfOutHandler	;wreg free
 18001                           
 18002                           ;usb_device.c: 2416: };usb_device.c: 2417: }
 18003  005912  0012               	return	
 18004  005914                     l309:
 18005                           
 18006                           ;usb_device.c: 2418: else if((USTATcopy.Val & ~0x02) == 0x04)
 18007  005914  0100               	movlb	0	; () banked
 18008  005916  51B3               	movf	_USTATcopy& (0+255),w,b
 18009  005918  0BFD               	andlw	253
 18010  00591A  0A04               	xorlw	4
 18011  00591C  A4D8               	btfss	status,2,c
 18012  00591E  0012               	return	
 18013                           
 18014                           ; BSR set to: 0
 18015                           ;usb_device.c: 2419: {;usb_device.c: 2422: USBCtrlTrfInHandler();
 18016  005920  EC84  F028         	call	_USBCtrlTrfInHandler	;wreg free
 18017  005924  0012               	return	
 18018  005926                     __end_of_USBCtrlEPService:
 18019                           	opt stack 0
 18020                           tblptru	equ	0xFF8
 18021                           tblptrh	equ	0xFF7
 18022                           tblptrl	equ	0xFF6
 18023                           tablat	equ	0xFF5
 18024                           prodh	equ	0xFF4
 18025                           prodl	equ	0xFF3
 18026                           intcon	equ	0xFF2
 18027                           intcon2	equ	0xFF1
 18028                           intcon3	equ	0xFF0
 18029                           postinc0	equ	0xFEE
 18030                           wreg	equ	0xFE8
 18031                           indf1	equ	0xFE7
 18032                           postdec1	equ	0xFE5
 18033                           plusw1	equ	0xFE3
 18034                           fsr1h	equ	0xFE2
 18035                           fsr1l	equ	0xFE1
 18036                           indf2	equ	0xFDF
 18037                           postinc2	equ	0xFDE
 18038                           postdec2	equ	0xFDD
 18039                           plusw2	equ	0xFDB
 18040                           fsr2h	equ	0xFDA
 18041                           fsr2l	equ	0xFD9
 18042                           status	equ	0xFD8
 18043                           
 18044 ;; *************** function _USBCtrlTrfSetupHandler *****************
 18045 ;; Defined at:
 18046 ;;		line 2467 in file "usb_device.c"
 18047 ;; Parameters:    Size  Location     Type
 18048 ;;		None
 18049 ;; Auto vars:     Size  Location     Type
 18050 ;;		None
 18051 ;; Return value:  Size  Location     Type
 18052 ;;                  1    wreg      void 
 18053 ;; Registers used:
 18054 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18055 ;; Tracked objects:
 18056 ;;		On entry : 0/0
 18057 ;;		On exit  : 0/0
 18058 ;;		Unchanged: 0/0
 18059 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18060 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18061 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18062 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18063 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18064 ;;Total ram usage:        0 bytes
 18065 ;; Hardware stack levels used:    1
 18066 ;; Hardware stack levels required when called:    6
 18067 ;; This function calls:
 18068 ;;		_USBCheckStdRequest
 18069 ;;		_USBCtrlEPServiceComplete
 18070 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18071 ;; This function is called by:
 18072 ;;		_USBCtrlEPService
 18073 ;; This function uses a non-reentrant model
 18074 ;;
 18075                           
 18076                           	psect	text82
 18077  00613E                     __ptext82:
 18078                           	opt stack 0
 18079  00613E                     _USBCtrlTrfSetupHandler:
 18080                           	opt stack 22
 18081                           
 18082                           ;usb_device.c: 2472: shortPacketStatus = 0;
 18083                           
 18084                           ;incstack = 0
 18085  00613E  0E00               	movlw	0
 18086  006140  0100               	movlb	0	; () banked
 18087  006142  6FAF               	movwf	_shortPacketStatus& (0+255),b
 18088                           
 18089                           ;usb_device.c: 2473: USBDeferStatusStagePacket = 0;
 18090  006144  0E00               	movlw	0
 18091  006146  6FA8               	movwf	_USBDeferStatusStagePacket& (0+255),b	;volatile
 18092                           
 18093                           ;usb_device.c: 2474: USBDeferINDataStagePackets = 0;
 18094  006148  0E00               	movlw	0
 18095  00614A  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18096                           
 18097                           ;usb_device.c: 2475: USBDeferOUTDataStagePackets = 0;
 18098  00614C  0E00               	movlw	0
 18099  00614E  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18100                           
 18101                           ;usb_device.c: 2476: BothEP0OutUOWNsSet = 0;
 18102  006150  0E00               	movlw	0
 18103  006152  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 18104                           
 18105                           ;usb_device.c: 2477: controlTransferState = 0;
 18106  006154  0E00               	movlw	0
 18107  006156  6FAE               	movwf	_controlTransferState& (0+255),b
 18108                           
 18109                           ; BSR set to: 0
 18110                           ;usb_device.c: 2486: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18111  006158  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18112  00615C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18113  006160  0E7F               	movlw	127
 18114  006162  16DF               	andwf	indf2,f,c
 18115                           
 18116                           ; BSR set to: 0
 18117                           ;usb_device.c: 2488: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18118  006164  0E04               	movlw	4
 18119  006166  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 18120  006168  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18121  00616A  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18122  00616C  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18123                           
 18124                           ; BSR set to: 0
 18125                           ;usb_device.c: 2489: pBDTEntryIn[0]->STAT.Val &= ~(0x80);
 18126  00616E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18127  006172  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18128  006176  0E7F               	movlw	127
 18129  006178  16DF               	andwf	indf2,f,c
 18130                           
 18131                           ; BSR set to: 0
 18132                           ;usb_device.c: 2490: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 18133  00617A  0E04               	movlw	4
 18134  00617C  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 18135  00617E  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 18136  006180  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18137  006182  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 18138                           
 18139                           ; BSR set to: 0
 18140                           ;usb_device.c: 2491: pBDTEntryEP0OutNext->STAT.Val &= ~(0x80);
 18141  006184  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18142  006188  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18143  00618C  0E7F               	movlw	127
 18144  00618E  16DF               	andwf	indf2,f,c
 18145                           
 18146                           ; BSR set to: 0
 18147                           ;usb_device.c: 2493: inPipes[0].info.Val = 0;
 18148  006190  0E00               	movlw	0
 18149  006192  6F69               	movwf	(_inPipes+3)& (0+255),b
 18150                           
 18151                           ; BSR set to: 0
 18152                           ;usb_device.c: 2494: inPipes[0].wCount.Val = 0;
 18153  006194  0E00               	movlw	0
 18154  006196  6F6B               	movwf	(_inPipes+5)& (0+255),b
 18155  006198  0E00               	movlw	0
 18156  00619A  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18157                           
 18158                           ; BSR set to: 0
 18159                           ;usb_device.c: 2495: outPipes[0].info.Val = 0;
 18160  00619C  0E00               	movlw	0
 18161  00619E  0101               	movlb	1	; () banked
 18162  0061A0  6F34               	movwf	(_outPipes+3)& (0+255),b
 18163                           
 18164                           ; BSR set to: 1
 18165                           ;usb_device.c: 2496: outPipes[0].wCount.Val = 0;
 18166  0061A2  0E00               	movlw	0
 18167  0061A4  6F36               	movwf	(_outPipes+5)& (0+255),b
 18168  0061A6  0E00               	movlw	0
 18169  0061A8  6F35               	movwf	(_outPipes+4)& (0+255),b
 18170                           
 18171                           ; BSR set to: 1
 18172                           ;usb_device.c: 2502: USBCheckStdRequest();
 18173  0061AA  ECAC  F024         	call	_USBCheckStdRequest	;wreg free
 18174                           
 18175                           ;usb_device.c: 2503: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_EP0_REQUEST,0,0);
 18176  0061AE  0E00               	movlw	0
 18177  0061B0  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18178  0061B2  0E03               	movlw	3
 18179  0061B4  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18180  0061B6  0E00               	movlw	0
 18181  0061B8  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18182  0061BA  0E00               	movlw	0
 18183  0061BC  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18184  0061BE  0E00               	movlw	0
 18185  0061C0  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18186  0061C2  0E00               	movlw	0
 18187  0061C4  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18188  0061C6  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18189                           
 18190                           ;usb_device.c: 2516: USBCtrlEPServiceComplete();
 18191  0061CA  ECAC  F023         	call	_USBCtrlEPServiceComplete	;wreg free
 18192  0061CE  0012               	return		;funcret
 18193  0061D0                     __end_of_USBCtrlTrfSetupHandler:
 18194                           	opt stack 0
 18195                           tblptru	equ	0xFF8
 18196                           tblptrh	equ	0xFF7
 18197                           tblptrl	equ	0xFF6
 18198                           tablat	equ	0xFF5
 18199                           prodh	equ	0xFF4
 18200                           prodl	equ	0xFF3
 18201                           intcon	equ	0xFF2
 18202                           intcon2	equ	0xFF1
 18203                           intcon3	equ	0xFF0
 18204                           postinc0	equ	0xFEE
 18205                           wreg	equ	0xFE8
 18206                           indf1	equ	0xFE7
 18207                           postdec1	equ	0xFE5
 18208                           plusw1	equ	0xFE3
 18209                           fsr1h	equ	0xFE2
 18210                           fsr1l	equ	0xFE1
 18211                           indf2	equ	0xFDF
 18212                           postinc2	equ	0xFDE
 18213                           postdec2	equ	0xFDD
 18214                           plusw2	equ	0xFDB
 18215                           fsr2h	equ	0xFDA
 18216                           fsr2l	equ	0xFD9
 18217                           status	equ	0xFD8
 18218                           
 18219 ;; *************** function _USBCtrlEPServiceComplete *****************
 18220 ;; Defined at:
 18221 ;;		line 1618 in file "usb_device.c"
 18222 ;; Parameters:    Size  Location     Type
 18223 ;;		None
 18224 ;; Auto vars:     Size  Location     Type
 18225 ;;		None
 18226 ;; Return value:  Size  Location     Type
 18227 ;;                  1    wreg      void 
 18228 ;; Registers used:
 18229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18230 ;; Tracked objects:
 18231 ;;		On entry : 0/0
 18232 ;;		On exit  : 0/0
 18233 ;;		Unchanged: 0/0
 18234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18235 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18236 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18237 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18238 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18239 ;;Total ram usage:        0 bytes
 18240 ;; Hardware stack levels used:    1
 18241 ;; Hardware stack levels required when called:    2
 18242 ;; This function calls:
 18243 ;;		_USBCtrlEPAllowDataStage
 18244 ;;		_USBCtrlEPAllowStatusStage
 18245 ;; This function is called by:
 18246 ;;		_USBCtrlTrfSetupHandler
 18247 ;; This function uses a non-reentrant model
 18248 ;;
 18249                           
 18250                           	psect	text83
 18251  004758                     __ptext83:
 18252                           	opt stack 0
 18253  004758                     _USBCtrlEPServiceComplete:
 18254                           	opt stack 25
 18255                           
 18256                           ;usb_device.c: 1624: UCONbits.PKTDIS = 0;
 18257                           
 18258                           ;incstack = 0
 18259  004758  9865               	bcf	3941,4,c	;volatile
 18260                           
 18261                           ;usb_device.c: 1630: if(inPipes[0].info.bits.busy == 0)
 18262  00475A  0100               	movlb	0	; () banked
 18263  00475C  BF69               	btfsc	(_inPipes+3)& (0+255),7,b
 18264  00475E  D03C               	goto	l219
 18265                           
 18266                           ; BSR set to: 0
 18267                           ;usb_device.c: 1631: {;usb_device.c: 1632: if(outPipes[0].info.bits.busy == 1)
 18268  004760  0101               	movlb	1	; () banked
 18269  004762  AF34               	btfss	(_outPipes+3)& (0+255),7,b
 18270  004764  D00D               	goto	l220
 18271                           
 18272                           ; BSR set to: 1
 18273                           ;usb_device.c: 1633: {;usb_device.c: 1634: controlTransferState = 2;
 18274  004766  0E02               	movlw	2
 18275  004768  0100               	movlb	0	; () banked
 18276  00476A  6FAE               	movwf	_controlTransferState& (0+255),b
 18277                           
 18278                           ;usb_device.c: 1645: if(USBDeferOUTDataStagePackets == 0)
 18279  00476C  51A4               	movf	_USBDeferOUTDataStagePackets& (0+255),w,b	;volatile
 18280  00476E  B4D8               	btfsc	status,2,c
 18281                           
 18282                           ; BSR set to: 0
 18283                           ;usb_device.c: 1646: {;usb_device.c: 1647: USBCtrlEPAllowDataStage();
 18284  004770  EC85  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 18285                           
 18286                           ;usb_device.c: 1648: };usb_device.c: 1652: USBStatusStageEnabledFlag2 = 0;
 18287  004774  0E00               	movlw	0
 18288  004776  0100               	movlb	0	; () banked
 18289  004778  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18290                           
 18291                           ; BSR set to: 0
 18292                           ;usb_device.c: 1653: USBStatusStageEnabledFlag1 = 0;
 18293  00477A  0E00               	movlw	0
 18294  00477C  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18295                           
 18296                           ;usb_device.c: 1654: }
 18297  00477E  0012               	return	
 18298  004780                     l220:
 18299                           
 18300                           ;usb_device.c: 1655: else;usb_device.c: 1656: {;usb_device.c: 1661: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 18301                           
 18302                           ; BSR set to: 0
 18303  004780  0100               	movlb	0	; () banked
 18304  004782  EE20 F001          	lfsr	2,1
 18305  004786  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18306  004788  26D9               	addwf	fsr2l,f,c
 18307  00478A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18308  00478C  22DA               	addwfc	fsr2h,f,c
 18309  00478E  0E08               	movlw	8
 18310  004790  6EDF               	movwf	indf2,c
 18311                           
 18312                           ;usb_device.c: 1662: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18313  004792  EE20 F002          	lfsr	2,2
 18314  004796  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18315  004798  26D9               	addwf	fsr2l,f,c
 18316  00479A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18317  00479C  22DA               	addwfc	fsr2h,f,c
 18318  00479E  0E30               	movlw	48
 18319  0047A0  6EDE               	movwf	postinc2,c
 18320  0047A2  0E0D               	movlw	13
 18321  0047A4  6EDD               	movwf	postdec2,c
 18322                           
 18323                           ; BSR set to: 0
 18324                           ;usb_device.c: 1663: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 18325  0047A6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18326  0047AA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18327  0047AE  0E0C               	movlw	12
 18328  0047B0  6EDF               	movwf	indf2,c
 18329                           
 18330                           ; BSR set to: 0
 18331                           ;usb_device.c: 1664: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18332  0047B2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18333  0047B6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18334  0047BA  0E00               	movlw	0
 18335  0047BC  8EDB               	bsf	plusw2,7,c
 18336                           
 18337                           ;usb_device.c: 1665: pBDTEntryIn[0]->STAT.Val = 0x04;
 18338  0047BE  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18339  0047C2  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18340  0047C6  0E04               	movlw	4
 18341  0047C8  6EDF               	movwf	indf2,c
 18342                           
 18343                           ; BSR set to: 0
 18344                           ;usb_device.c: 1666: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18345  0047CA  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18346  0047CE  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18347  0047D2  0E00               	movlw	0
 18348  0047D4  8EDB               	bsf	plusw2,7,c
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;usb_device.c: 1667: };usb_device.c: 1668: }
 18352  0047D6  0012               	return	
 18353  0047D8                     l219:
 18354                           
 18355                           ; BSR set to: 0
 18356                           ;usb_device.c: 1669: else;usb_device.c: 1670: {;usb_device.c: 1671: if(SetupPkt.DataDir 
      +                          == (0x80>>7))
 18357  0047D8  010D               	movlb	13	; () banked
 18358  0047DA  AF30               	btfss	48,7,b	;volatile
 18359  0047DC  D012               	goto	l224
 18360                           
 18361                           ; BSR set to: 13
 18362                           ;usb_device.c: 1672: {;usb_device.c: 1673: controlTransferState = 1;
 18363  0047DE  0E01               	movlw	1
 18364  0047E0  0100               	movlb	0	; () banked
 18365  0047E2  6FAE               	movwf	_controlTransferState& (0+255),b
 18366                           
 18367                           ;usb_device.c: 1687: if(USBDeferINDataStagePackets == 0)
 18368  0047E4  51A5               	movf	_USBDeferINDataStagePackets& (0+255),w,b	;volatile
 18369  0047E6  B4D8               	btfsc	status,2,c
 18370                           
 18371                           ; BSR set to: 0
 18372                           ;usb_device.c: 1688: {;usb_device.c: 1689: USBCtrlEPAllowDataStage();
 18373  0047E8  EC85  F02E         	call	_USBCtrlEPAllowDataStage	;wreg free
 18374                           
 18375                           ;usb_device.c: 1690: };usb_device.c: 1712: USBStatusStageEnabledFlag2 = 0;
 18376  0047EC  0E00               	movlw	0
 18377  0047EE  0100               	movlb	0	; () banked
 18378  0047F0  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18379                           
 18380                           ; BSR set to: 0
 18381                           ;usb_device.c: 1713: USBStatusStageEnabledFlag1 = 0;
 18382  0047F2  0E00               	movlw	0
 18383  0047F4  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18384                           
 18385                           ; BSR set to: 0
 18386                           ;usb_device.c: 1714: if(USBDeferStatusStagePacket == 0)
 18387  0047F6  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 18388  0047F8  A4D8               	btfss	status,2,c
 18389  0047FA  0012               	return	
 18390                           
 18391                           ; BSR set to: 0
 18392                           ;usb_device.c: 1715: {;usb_device.c: 1716: USBCtrlEPAllowStatusStage();
 18393  0047FC  ECAD  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18394                           
 18395                           ;usb_device.c: 1717: };usb_device.c: 1718: }
 18396  004800  0012               	return	
 18397  004802                     l224:
 18398                           
 18399                           ;usb_device.c: 1719: else;usb_device.c: 1720: {;usb_device.c: 1731: controlTransferState
      +                           = 2;
 18400  004802  0E02               	movlw	2
 18401  004804  0100               	movlb	0	; () banked
 18402  004806  6FAE               	movwf	_controlTransferState& (0+255),b
 18403                           
 18404                           ; BSR set to: 0
 18405                           ;usb_device.c: 1734: pBDTEntryEP0OutNext->CNT = 8;
 18406  004808  EE20 F001          	lfsr	2,1
 18407  00480C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18408  00480E  26D9               	addwf	fsr2l,f,c
 18409  004810  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18410  004812  22DA               	addwfc	fsr2h,f,c
 18411  004814  0E08               	movlw	8
 18412  004816  6EDF               	movwf	indf2,c
 18413                           
 18414                           ; BSR set to: 0
 18415                           ;usb_device.c: 1735: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 18416  004818  EE20 F002          	lfsr	2,2
 18417  00481C  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18418  00481E  26D9               	addwf	fsr2l,f,c
 18419  004820  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18420  004822  22DA               	addwfc	fsr2h,f,c
 18421  004824  0E30               	movlw	48
 18422  004826  6EDE               	movwf	postinc2,c
 18423  004828  0E0D               	movlw	13
 18424  00482A  6EDD               	movwf	postdec2,c
 18425                           
 18426                           ; BSR set to: 0
 18427                           ;usb_device.c: 1736: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 18428  00482C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18429  004830  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18430  004834  0E04               	movlw	4
 18431  004836  6EDF               	movwf	indf2,c
 18432                           
 18433                           ; BSR set to: 0
 18434                           ;usb_device.c: 1737: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18435  004838  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18436  00483C  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18437  004840  0E00               	movlw	0
 18438  004842  8EDB               	bsf	plusw2,7,c
 18439                           
 18440                           ; BSR set to: 0
 18441                           ;usb_device.c: 1740: USBStatusStageEnabledFlag2 = 0;
 18442  004844  0E00               	movlw	0
 18443  004846  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 18444                           
 18445                           ; BSR set to: 0
 18446                           ;usb_device.c: 1741: USBStatusStageEnabledFlag1 = 0;
 18447  004848  0E00               	movlw	0
 18448  00484A  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 18449                           
 18450                           ; BSR set to: 0
 18451                           ;usb_device.c: 1742: if(USBDeferStatusStagePacket == 0)
 18452  00484C  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 18453  00484E  A4D8               	btfss	status,2,c
 18454  004850  0012               	return	
 18455                           
 18456                           ; BSR set to: 0
 18457                           ;usb_device.c: 1743: {;usb_device.c: 1744: USBCtrlEPAllowStatusStage();
 18458  004852  ECAD  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 18459  004856  0012               	return	
 18460  004858                     __end_of_USBCtrlEPServiceComplete:
 18461                           	opt stack 0
 18462                           tblptru	equ	0xFF8
 18463                           tblptrh	equ	0xFF7
 18464                           tblptrl	equ	0xFF6
 18465                           tablat	equ	0xFF5
 18466                           prodh	equ	0xFF4
 18467                           prodl	equ	0xFF3
 18468                           intcon	equ	0xFF2
 18469                           intcon2	equ	0xFF1
 18470                           intcon3	equ	0xFF0
 18471                           postinc0	equ	0xFEE
 18472                           wreg	equ	0xFE8
 18473                           indf1	equ	0xFE7
 18474                           postdec1	equ	0xFE5
 18475                           plusw1	equ	0xFE3
 18476                           fsr1h	equ	0xFE2
 18477                           fsr1l	equ	0xFE1
 18478                           indf2	equ	0xFDF
 18479                           postinc2	equ	0xFDE
 18480                           postdec2	equ	0xFDD
 18481                           plusw2	equ	0xFDB
 18482                           fsr2h	equ	0xFDA
 18483                           fsr2l	equ	0xFD9
 18484                           status	equ	0xFD8
 18485                           
 18486 ;; *************** function _USBCtrlEPAllowDataStage *****************
 18487 ;; Defined at:
 18488 ;;		line 1490 in file "usb_device.c"
 18489 ;; Parameters:    Size  Location     Type
 18490 ;;		None
 18491 ;; Auto vars:     Size  Location     Type
 18492 ;;		None
 18493 ;; Return value:  Size  Location     Type
 18494 ;;                  1    wreg      void 
 18495 ;; Registers used:
 18496 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18497 ;; Tracked objects:
 18498 ;;		On entry : 0/0
 18499 ;;		On exit  : 0/0
 18500 ;;		Unchanged: 0/0
 18501 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18502 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18503 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18504 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18505 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18506 ;;Total ram usage:        0 bytes
 18507 ;; Hardware stack levels used:    1
 18508 ;; Hardware stack levels required when called:    1
 18509 ;; This function calls:
 18510 ;;		_USBCtrlTrfTxService
 18511 ;; This function is called by:
 18512 ;;		_USBCtrlEPServiceComplete
 18513 ;; This function uses a non-reentrant model
 18514 ;;
 18515                           
 18516                           	psect	text84
 18517  005D0A                     __ptext84:
 18518                           	opt stack 0
 18519  005D0A                     _USBCtrlEPAllowDataStage:
 18520                           	opt stack 25
 18521                           
 18522                           ;usb_device.c: 1492: USBDeferINDataStagePackets = 0;
 18523                           
 18524                           ;incstack = 0
 18525  005D0A  0E00               	movlw	0
 18526  005D0C  0100               	movlb	0	; () banked
 18527  005D0E  6FA5               	movwf	_USBDeferINDataStagePackets& (0+255),b	;volatile
 18528                           
 18529                           ;usb_device.c: 1493: USBDeferOUTDataStagePackets = 0;
 18530  005D10  0E00               	movlw	0
 18531  005D12  6FA4               	movwf	_USBDeferOUTDataStagePackets& (0+255),b	;volatile
 18532                           
 18533                           ; BSR set to: 0
 18534                           ;usb_device.c: 1495: if(controlTransferState == 2)
 18535  005D14  0E02               	movlw	2
 18536  005D16  19AE               	xorwf	_controlTransferState& (0+255),w,b
 18537  005D18  A4D8               	btfss	status,2,c
 18538  005D1A  D01F               	goto	l208
 18539                           
 18540                           ; BSR set to: 0
 18541                           ;usb_device.c: 1496: {;usb_device.c: 1498: pBDTEntryEP0OutNext->CNT = 8;
 18542  005D1C  EE20 F001          	lfsr	2,1
 18543  005D20  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18544  005D22  26D9               	addwf	fsr2l,f,c
 18545  005D24  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18546  005D26  22DA               	addwfc	fsr2h,f,c
 18547  005D28  0E08               	movlw	8
 18548  005D2A  6EDF               	movwf	indf2,c
 18549                           
 18550                           ;usb_device.c: 1499: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 18551  005D2C  EE20 F002          	lfsr	2,2
 18552  005D30  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 18553  005D32  26D9               	addwf	fsr2l,f,c
 18554  005D34  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 18555  005D36  22DA               	addwfc	fsr2h,f,c
 18556  005D38  0E38               	movlw	56
 18557  005D3A  6EDE               	movwf	postinc2,c
 18558  005D3C  0E0D               	movlw	13
 18559  005D3E  6EDD               	movwf	postdec2,c
 18560                           
 18561                           ; BSR set to: 0
 18562                           ;usb_device.c: 1500: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 0x08);
 18563  005D40  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18564  005D44  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18565  005D48  0E48               	movlw	72
 18566  005D4A  6EDF               	movwf	indf2,c
 18567                           
 18568                           ; BSR set to: 0
 18569                           ;usb_device.c: 1501: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 18570  005D4C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 18571  005D50  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 18572  005D54  0E00               	movlw	0
 18573  005D56  8EDB               	bsf	plusw2,7,c
 18574                           
 18575                           ;usb_device.c: 1502: }
 18576  005D58  0012               	return	
 18577  005D5A                     l208:
 18578                           
 18579                           ; BSR set to: 0
 18580                           ;usb_device.c: 1503: else;usb_device.c: 1504: {;usb_device.c: 1507: if(SetupPkt.wLength 
      +                          < inPipes[0].wCount.Val)
 18581                           
 18582                           ; BSR set to: 0
 18583  005D5A  516A               	movf	(_inPipes+4)& (0+255),w,b
 18584  005D5C  010D               	movlb	13	; () banked
 18585  005D5E  5D36               	subwf	54,w,b	;volatile
 18586  005D60  0100               	movlb	0	; () banked
 18587  005D62  516B               	movf	(_inPipes+5)& (0+255),w,b
 18588  005D64  010D               	movlb	13	; () banked
 18589  005D66  5937               	subwfb	55,w,b	;volatile
 18590  005D68  B0D8               	btfsc	status,0,c
 18591  005D6A  D004               	goto	l210
 18592                           
 18593                           ; BSR set to: 13
 18594                           ;usb_device.c: 1508: {;usb_device.c: 1509: inPipes[0].wCount.Val = SetupPkt.wLength;
 18595  005D6C  CD36 F06A          	movff	3382,_inPipes+4	;volatile
 18596  005D70  CD37 F06B          	movff	3383,_inPipes+5	;volatile
 18597  005D74                     l210:
 18598                           
 18599                           ; BSR set to: 13
 18600                           ;usb_device.c: 1510: };usb_device.c: 1511: USBCtrlTrfTxService();
 18601                           
 18602                           ; BSR set to: 13
 18603  005D74  EC1E  F028         	call	_USBCtrlTrfTxService	;wreg free
 18604                           
 18605                           ;usb_device.c: 1516: pBDTEntryIn[0]->ADR = ((uint16_t)(&CtrlTrfData));
 18606  005D78  0100               	movlb	0	; () banked
 18607  005D7A  EE20 F002          	lfsr	2,2
 18608  005D7E  516C               	movf	_pBDTEntryIn& (0+255),w,b
 18609  005D80  26D9               	addwf	fsr2l,f,c
 18610  005D82  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 18611  005D84  22DA               	addwfc	fsr2h,f,c
 18612  005D86  0E38               	movlw	56
 18613  005D88  6EDE               	movwf	postinc2,c
 18614  005D8A  0E0D               	movlw	13
 18615  005D8C  6EDD               	movwf	postdec2,c
 18616                           
 18617                           ; BSR set to: 0
 18618                           ;usb_device.c: 1517: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 18619  005D8E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18620  005D92  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18621  005D96  0E48               	movlw	72
 18622  005D98  6EDF               	movwf	indf2,c
 18623                           
 18624                           ; BSR set to: 0
 18625                           ;usb_device.c: 1518: pBDTEntryIn[0]->STAT.Val |= 0x80;
 18626  005D9A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 18627  005D9E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 18628  005DA2  0E00               	movlw	0
 18629  005DA4  8EDB               	bsf	plusw2,7,c
 18630  005DA6  0012               	return	
 18631  005DA8                     __end_of_USBCtrlEPAllowDataStage:
 18632                           	opt stack 0
 18633                           tblptru	equ	0xFF8
 18634                           tblptrh	equ	0xFF7
 18635                           tblptrl	equ	0xFF6
 18636                           tablat	equ	0xFF5
 18637                           prodh	equ	0xFF4
 18638                           prodl	equ	0xFF3
 18639                           intcon	equ	0xFF2
 18640                           intcon2	equ	0xFF1
 18641                           intcon3	equ	0xFF0
 18642                           postinc0	equ	0xFEE
 18643                           wreg	equ	0xFE8
 18644                           indf1	equ	0xFE7
 18645                           postdec1	equ	0xFE5
 18646                           plusw1	equ	0xFE3
 18647                           fsr1h	equ	0xFE2
 18648                           fsr1l	equ	0xFE1
 18649                           indf2	equ	0xFDF
 18650                           postinc2	equ	0xFDE
 18651                           postdec2	equ	0xFDD
 18652                           plusw2	equ	0xFDB
 18653                           fsr2h	equ	0xFDA
 18654                           fsr2l	equ	0xFD9
 18655                           status	equ	0xFD8
 18656                           
 18657 ;; *************** function _USBCheckStdRequest *****************
 18658 ;; Defined at:
 18659 ;;		line 2688 in file "usb_device.c"
 18660 ;; Parameters:    Size  Location     Type
 18661 ;;		None
 18662 ;; Auto vars:     Size  Location     Type
 18663 ;;		None
 18664 ;; Return value:  Size  Location     Type
 18665 ;;                  1    wreg      void 
 18666 ;; Registers used:
 18667 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 18668 ;; Tracked objects:
 18669 ;;		On entry : 0/0
 18670 ;;		On exit  : 0/0
 18671 ;;		Unchanged: 0/0
 18672 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18673 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18674 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18675 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18676 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18677 ;;Total ram usage:        0 bytes
 18678 ;; Hardware stack levels used:    1
 18679 ;; Hardware stack levels required when called:    5
 18680 ;; This function calls:
 18681 ;;		_USBStdFeatureReqHandler
 18682 ;;		_USBStdGetDscHandler
 18683 ;;		_USBStdGetStatusHandler
 18684 ;;		_USBStdSetCfgHandler
 18685 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18686 ;; This function is called by:
 18687 ;;		_USBCtrlTrfSetupHandler
 18688 ;; This function uses a non-reentrant model
 18689 ;;
 18690                           
 18691                           	psect	text85
 18692  004958                     __ptext85:
 18693                           	opt stack 0
 18694  004958                     _USBCheckStdRequest:
 18695                           	opt stack 22
 18696                           
 18697                           ;usb_device.c: 2690: if(SetupPkt.RequestType != (0x00>>5)) return;
 18698                           
 18699                           ; BSR set to: 0
 18700                           ;incstack = 0
 18701  004958  010D               	movlb	13	; () banked
 18702  00495A  3930               	swapf	48,w,b	;volatile
 18703  00495C  32E8               	rrcf	wreg,f,c
 18704  00495E  0B03               	andlw	3
 18705  004960  0900               	iorlw	0
 18706  004962  A4D8               	btfss	status,2,c
 18707  004964  0012               	return	
 18708  004966  D047               	goto	l343
 18709  004968                     l344:
 18710                           
 18711                           ; BSR set to: 13
 18712                           ;usb_device.c: 2695: inPipes[0].info.bits.busy = 1;
 18713  004968  0100               	movlb	0	; () banked
 18714  00496A  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18715                           
 18716                           ; BSR set to: 0
 18717                           ;usb_device.c: 2696: USBDeviceState = ADR_PENDING_STATE;
 18718  00496C  0E08               	movlw	8
 18719  00496E  6FB0               	movwf	_USBDeviceState& (0+255),b
 18720                           
 18721                           ;usb_device.c: 2698: break;
 18722  004970  0012               	return	
 18723  004972                     
 18724                           ;usb_device.c: 2700: USBStdGetDscHandler();
 18725                           
 18726                           ; BSR set to: 0
 18727  004972  EC46  F01E         	call	_USBStdGetDscHandler	;wreg free
 18728                           
 18729                           ;usb_device.c: 2701: break;
 18730  004976  0012               	return	
 18731  004978                     
 18732                           ;usb_device.c: 2703: USBStdSetCfgHandler();
 18733  004978  EC1D  F025         	call	_USBStdSetCfgHandler	;wreg free
 18734                           
 18735                           ;usb_device.c: 2704: break;
 18736  00497C  0012               	return	
 18737  00497E                     
 18738                           ;usb_device.c: 2706: inPipes[0].pSrc.bRam = (uint8_t*)&USBActiveConfiguration;
 18739  00497E  0EB4               	movlw	low _USBActiveConfiguration
 18740  004980  0100               	movlb	0	; () banked
 18741  004982  6F66               	movwf	_inPipes& (0+255),b
 18742  004984  0E00               	movlw	high _USBActiveConfiguration
 18743  004986  6F67               	movwf	(_inPipes+1)& (0+255),b
 18744                           
 18745                           ; BSR set to: 0
 18746                           ;usb_device.c: 2707: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18747  004988  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18748                           
 18749                           ; BSR set to: 0
 18750                           ;usb_device.c: 2708: inPipes[0].wCount.v[0] = 1;
 18751  00498A  0E01               	movlw	1
 18752  00498C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18753                           
 18754                           ; BSR set to: 0
 18755                           ;usb_device.c: 2709: inPipes[0].info.bits.busy = 1;
 18756  00498E  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18757                           
 18758                           ;usb_device.c: 2710: break;
 18759  004990  0012               	return	
 18760  004992                     
 18761                           ;usb_device.c: 2712: USBStdGetStatusHandler();
 18762                           
 18763                           ; BSR set to: 0
 18764  004992  EC93  F02C         	call	_USBStdGetStatusHandler	;wreg free
 18765                           
 18766                           ;usb_device.c: 2713: break;
 18767  004996  0012               	return	
 18768  004998                     
 18769                           ;usb_device.c: 2715: case 3:;usb_device.c: 2716: USBStdFeatureReqHandler();
 18770  004998  ECDA  F00B         	call	_USBStdFeatureReqHandler	;wreg free
 18771                           
 18772                           ;usb_device.c: 2717: break;
 18773  00499C  0012               	return	
 18774  00499E                     
 18775                           ;usb_device.c: 2719: inPipes[0].pSrc.bRam = (uint8_t*)&USBAlternateInterface[SetupPkt.bI
      +                          ntfID];
 18776  00499E  010D               	movlb	13	; () banked
 18777  0049A0  5134               	movf	52,w,b	;volatile
 18778  0049A2  0D01               	mullw	1
 18779  0049A4  0EE2               	movlw	low _USBAlternateInterface
 18780  0049A6  24F3               	addwf	prodl,w,c
 18781  0049A8  0100               	movlb	0	; () banked
 18782  0049AA  6F66               	movwf	_inPipes& (0+255),b
 18783  0049AC  0E01               	movlw	high _USBAlternateInterface
 18784  0049AE  20F4               	addwfc	prodh,w,c
 18785  0049B0  6F67               	movwf	(_inPipes+1)& (0+255),b
 18786                           
 18787                           ; BSR set to: 0
 18788                           ;usb_device.c: 2720: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 18789  0049B2  8169               	bsf	(_inPipes+3)& (0+255),0,b
 18790                           
 18791                           ; BSR set to: 0
 18792                           ;usb_device.c: 2721: inPipes[0].wCount.v[0] = 1;
 18793  0049B4  0E01               	movlw	1
 18794  0049B6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 18795                           
 18796                           ; BSR set to: 0
 18797                           ;usb_device.c: 2722: inPipes[0].info.bits.busy = 1;
 18798  0049B8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18799                           
 18800                           ;usb_device.c: 2723: break;
 18801  0049BA  0012               	return	
 18802  0049BC                     l353:
 18803                           
 18804                           ; BSR set to: 13
 18805                           ;usb_device.c: 2725: inPipes[0].info.bits.busy = 1;
 18806  0049BC  0100               	movlb	0	; () banked
 18807  0049BE  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18808                           
 18809                           ; BSR set to: 0
 18810                           ;usb_device.c: 2726: USBAlternateInterface[SetupPkt.bIntfID] = SetupPkt.bAltID;
 18811  0049C0  010D               	movlb	13	; () banked
 18812  0049C2  5134               	movf	52,w,b	;volatile
 18813  0049C4  0D01               	mullw	1
 18814  0049C6  0EE2               	movlw	low _USBAlternateInterface
 18815  0049C8  24F3               	addwf	prodl,w,c
 18816  0049CA  6ED9               	movwf	fsr2l,c
 18817  0049CC  0E01               	movlw	high _USBAlternateInterface
 18818  0049CE  20F4               	addwfc	prodh,w,c
 18819  0049D0  6EDA               	movwf	fsr2h,c
 18820  0049D2  CD32 FFDF          	movff	3378,indf2	;volatile
 18821                           
 18822                           ;usb_device.c: 2727: break;
 18823  0049D6  0012               	return	
 18824  0049D8                     
 18825                           ; BSR set to: 13
 18826                           ;usb_device.c: 2729: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_SET_DESCRIPTOR,0,0);
 18827                           
 18828                           ; BSR set to: 13
 18829  0049D8  0E00               	movlw	0
 18830  0049DA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 18831  0049DC  0E02               	movlw	2
 18832  0049DE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 18833  0049E0  0E00               	movlw	0
 18834  0049E2  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 18835  0049E4  0E00               	movlw	0
 18836  0049E6  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 18837  0049E8  0E00               	movlw	0
 18838  0049EA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 18839  0049EC  0E00               	movlw	0
 18840  0049EE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 18841  0049F0  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 18842                           
 18843                           ;usb_device.c: 2734: }
 18844                           
 18845                           ;usb_device.c: 2733: break;
 18846                           
 18847                           ;usb_device.c: 2732: default:
 18848                           
 18849                           ;usb_device.c: 2731: case 12:
 18850                           
 18851                           ;usb_device.c: 2730: break;
 18852  0049F4  0012               	return	
 18853  0049F6                     l343:
 18854  0049F6  010D               	movlb	13	; () banked
 18855  0049F8  5131               	movf	49,w,b	;volatile
 18856                           
 18857                           ; Switch size 1, requested type "space"
 18858                           ; Number of cases is 11, Range of values is 0 to 12
 18859                           ; switch strategies available:
 18860                           ; Name         Instructions Cycles
 18861                           ; simple_byte           34    18 (average)
 18862                           ;	Chosen strategy is simple_byte
 18863  0049FA  0A00               	xorlw	0	; case 0
 18864  0049FC  B4D8               	btfsc	status,2,c
 18865  0049FE  D7C9               	goto	l349
 18866  004A00  0A01               	xorlw	1	; case 1
 18867  004A02  B4D8               	btfsc	status,2,c
 18868  004A04  D7C9               	goto	l350
 18869  004A06  0A02               	xorlw	2	; case 3
 18870  004A08  B4D8               	btfsc	status,2,c
 18871  004A0A  D7C6               	goto	l350
 18872  004A0C  0A06               	xorlw	6	; case 5
 18873  004A0E  B4D8               	btfsc	status,2,c
 18874  004A10  D7AB               	goto	l344
 18875  004A12  0A03               	xorlw	3	; case 6
 18876  004A14  B4D8               	btfsc	status,2,c
 18877  004A16  D7AD               	goto	l346
 18878  004A18  0A01               	xorlw	1	; case 7
 18879  004A1A  B4D8               	btfsc	status,2,c
 18880  004A1C  D7DD               	goto	l354
 18881  004A1E  0A0F               	xorlw	15	; case 8
 18882  004A20  B4D8               	btfsc	status,2,c
 18883  004A22  D7AD               	goto	l348
 18884  004A24  0A01               	xorlw	1	; case 9
 18885  004A26  B4D8               	btfsc	status,2,c
 18886  004A28  D7A7               	goto	l347
 18887  004A2A  0A03               	xorlw	3	; case 10
 18888  004A2C  B4D8               	btfsc	status,2,c
 18889  004A2E  D7B7               	goto	l352
 18890  004A30  0A01               	xorlw	1	; case 11
 18891  004A32  B4D8               	btfsc	status,2,c
 18892  004A34  D7C3               	goto	l353
 18893  004A36  0A07               	xorlw	7	; case 12
 18894  004A38  0012               	return	
 18895  004A3A                     __end_of_USBCheckStdRequest:
 18896                           	opt stack 0
 18897                           tblptru	equ	0xFF8
 18898                           tblptrh	equ	0xFF7
 18899                           tblptrl	equ	0xFF6
 18900                           tablat	equ	0xFF5
 18901                           prodh	equ	0xFF4
 18902                           prodl	equ	0xFF3
 18903                           intcon	equ	0xFF2
 18904                           intcon2	equ	0xFF1
 18905                           intcon3	equ	0xFF0
 18906                           postinc0	equ	0xFEE
 18907                           wreg	equ	0xFE8
 18908                           indf1	equ	0xFE7
 18909                           postdec1	equ	0xFE5
 18910                           plusw1	equ	0xFE3
 18911                           fsr1h	equ	0xFE2
 18912                           fsr1l	equ	0xFE1
 18913                           indf2	equ	0xFDF
 18914                           postinc2	equ	0xFDE
 18915                           postdec2	equ	0xFDD
 18916                           plusw2	equ	0xFDB
 18917                           fsr2h	equ	0xFDA
 18918                           fsr2l	equ	0xFD9
 18919                           status	equ	0xFD8
 18920                           
 18921 ;; *************** function _USBStdSetCfgHandler *****************
 18922 ;; Defined at:
 18923 ;;		line 1970 in file "usb_device.c"
 18924 ;; Parameters:    Size  Location     Type
 18925 ;;		None
 18926 ;; Auto vars:     Size  Location     Type
 18927 ;;  i               1   23[COMRAM] unsigned char 
 18928 ;; Return value:  Size  Location     Type
 18929 ;;                  1    wreg      void 
 18930 ;; Registers used:
 18931 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 18932 ;; Tracked objects:
 18933 ;;		On entry : 0/0
 18934 ;;		On exit  : 0/0
 18935 ;;		Unchanged: 0/0
 18936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 18937 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18938 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18939 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18940 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 18941 ;;Total ram usage:        1 bytes
 18942 ;; Hardware stack levels used:    1
 18943 ;; Hardware stack levels required when called:    4
 18944 ;; This function calls:
 18945 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 18946 ;;		_memset
 18947 ;; This function is called by:
 18948 ;;		_USBCheckStdRequest
 18949 ;; This function uses a non-reentrant model
 18950 ;;
 18951                           
 18952                           	psect	text86
 18953  004A3A                     __ptext86:
 18954                           	opt stack 0
 18955  004A3A                     _USBStdSetCfgHandler:
 18956                           	opt stack 22
 18957                           
 18958                           ;usb_device.c: 1972: uint8_t i;;usb_device.c: 1975: inPipes[0].info.bits.busy = 1;
 18959                           
 18960                           ;incstack = 0
 18961  004A3A  0100               	movlb	0	; () banked
 18962  004A3C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 18963                           
 18964                           ; BSR set to: 0
 18965                           ;usb_device.c: 1978: memset((void*)&UEP1,0x00,(2));;
 18966  004A3E  0E27               	movlw	39
 18967  004A40  6E01               	movwf	memset@p1,c
 18968  004A42  0E0F               	movlw	15
 18969  004A44  6E02               	movwf	memset@p1+1,c
 18970  004A46  0E00               	movlw	0
 18971  004A48  6E04               	movwf	memset@c+1,c
 18972  004A4A  0E00               	movlw	0
 18973  004A4C  6E03               	movwf	memset@c,c
 18974  004A4E  0E00               	movlw	0
 18975  004A50  6E06               	movwf	memset@n+1,c
 18976  004A52  0E02               	movlw	2
 18977  004A54  6E05               	movwf	memset@n,c
 18978  004A56  ECF3  F03D         	call	_memset	;wreg free
 18979                           
 18980                           ;usb_device.c: 1981: memset((void*)&BDT[0], 0x00, sizeof(BDT));
 18981  004A5A  0E00               	movlw	0
 18982  004A5C  6E01               	movwf	memset@p1,c
 18983  004A5E  0E0D               	movlw	13
 18984  004A60  6E02               	movwf	memset@p1+1,c
 18985  004A62  0E00               	movlw	0
 18986  004A64  6E04               	movwf	memset@c+1,c
 18987  004A66  0E00               	movlw	0
 18988  004A68  6E03               	movwf	memset@c,c
 18989  004A6A  0E00               	movlw	0
 18990  004A6C  6E06               	movwf	memset@n+1,c
 18991  004A6E  0E30               	movlw	48
 18992  004A70  6E05               	movwf	memset@n,c
 18993  004A72  ECF3  F03D         	call	_memset	;wreg free
 18994                           
 18995                           ;usb_device.c: 1984: UCONbits.PPBRST = 1;
 18996  004A76  8C65               	bsf	3941,6,c	;volatile
 18997                           
 18998                           ;usb_device.c: 1989: for(i = 0; i < (uint8_t)(2+1u); i++)
 18999  004A78  0E00               	movlw	0
 19000  004A7A  6E18               	movwf	USBStdSetCfgHandler@i,c
 19001  004A7C                     l10835:
 19002  004A7C  0E02               	movlw	2
 19003  004A7E  6418               	cpfsgt	USBStdSetCfgHandler@i,c
 19004  004A80  D001               	goto	l260
 19005  004A82  D016               	goto	u7880
 19006  004A84                     l260:
 19007                           
 19008                           ;usb_device.c: 1990: {;usb_device.c: 1991: ep_data_in[i].Val = 0u;
 19009  004A84  5018               	movf	USBStdSetCfgHandler@i,w,c
 19010  004A86  0D01               	mullw	1
 19011  004A88  0E61               	movlw	low _ep_data_in
 19012  004A8A  24F3               	addwf	prodl,w,c
 19013  004A8C  6ED9               	movwf	fsr2l,c
 19014  004A8E  0E01               	movlw	high _ep_data_in
 19015  004A90  20F4               	addwfc	prodh,w,c
 19016  004A92  6EDA               	movwf	fsr2h,c
 19017  004A94  0E00               	movlw	0
 19018  004A96  6EDF               	movwf	indf2,c
 19019                           
 19020                           ;usb_device.c: 1992: ep_data_out[i].Val = 0u;
 19021  004A98  5018               	movf	USBStdSetCfgHandler@i,w,c
 19022  004A9A  0D01               	mullw	1
 19023  004A9C  0E5E               	movlw	low _ep_data_out
 19024  004A9E  24F3               	addwf	prodl,w,c
 19025  004AA0  6ED9               	movwf	fsr2l,c
 19026  004AA2  0E01               	movlw	high _ep_data_out
 19027  004AA4  20F4               	addwfc	prodh,w,c
 19028  004AA6  6EDA               	movwf	fsr2h,c
 19029  004AA8  0E00               	movlw	0
 19030  004AAA  6EDF               	movwf	indf2,c
 19031  004AAC  2A18               	incf	USBStdSetCfgHandler@i,f,c
 19032  004AAE  D7E6               	goto	l10835
 19033  004AB0                     u7880:
 19034                           
 19035                           ;usb_device.c: 1993: };usb_device.c: 1996: memset((void*)&USBAlternateInterface,0x00,2);
 19036  004AB0  0EE2               	movlw	low _USBAlternateInterface
 19037  004AB2  6E01               	movwf	memset@p1,c
 19038  004AB4  0E01               	movlw	high _USBAlternateInterface
 19039  004AB6  6E02               	movwf	memset@p1+1,c
 19040  004AB8  0E00               	movlw	0
 19041  004ABA  6E04               	movwf	memset@c+1,c
 19042  004ABC  0E00               	movlw	0
 19043  004ABE  6E03               	movwf	memset@c,c
 19044  004AC0  0E00               	movlw	0
 19045  004AC2  6E06               	movwf	memset@n+1,c
 19046  004AC4  0E02               	movlw	2
 19047  004AC6  6E05               	movwf	memset@n,c
 19048  004AC8  ECF3  F03D         	call	_memset	;wreg free
 19049                           
 19050                           ;usb_device.c: 1999: UCONbits.PPBRST = 0;
 19051  004ACC  9C65               	bcf	3941,6,c	;volatile
 19052                           
 19053                           ;usb_device.c: 2001: pBDTEntryIn[0] = (volatile BDT_ENTRY*)&BDT[2];
 19054  004ACE  0E08               	movlw	8
 19055  004AD0  0100               	movlb	0	; () banked
 19056  004AD2  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 19057  004AD4  0E0D               	movlw	13
 19058  004AD6  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 19059                           
 19060                           ; BSR set to: 0
 19061                           ;usb_device.c: 2004: pBDTEntryEP0OutCurrent = (volatile BDT_ENTRY*)&BDT[0];
 19062  004AD8  0E00               	movlw	0
 19063  004ADA  6F92               	movwf	_pBDTEntryEP0OutCurrent& (0+255),b
 19064  004ADC  0E0D               	movlw	13
 19065  004ADE  6F93               	movwf	(_pBDTEntryEP0OutCurrent+1)& (0+255),b
 19066                           
 19067                           ; BSR set to: 0
 19068                           ;usb_device.c: 2005: pBDTEntryEP0OutNext = pBDTEntryEP0OutCurrent;
 19069  004AE0  C092  F090         	movff	_pBDTEntryEP0OutCurrent,_pBDTEntryEP0OutNext
 19070  004AE4  C093  F091         	movff	_pBDTEntryEP0OutCurrent+1,_pBDTEntryEP0OutNext+1
 19071                           
 19072                           ; BSR set to: 0
 19073                           ;usb_device.c: 2008: USBActiveConfiguration = SetupPkt.bConfigurationValue;
 19074  004AE8  CD32 F0B4          	movff	3378,_USBActiveConfiguration	;volatile
 19075                           
 19076                           ; BSR set to: 0
 19077                           ;usb_device.c: 2011: if(USBActiveConfiguration == 0)
 19078  004AEC  51B4               	movf	_USBActiveConfiguration& (0+255),w,b
 19079  004AEE  A4D8               	btfss	status,2,c
 19080  004AF0  D003               	goto	l262
 19081                           
 19082                           ; BSR set to: 0
 19083                           ;usb_device.c: 2012: {;usb_device.c: 2014: USBDeviceState = ADDRESS_STATE;
 19084  004AF2  0E10               	movlw	16
 19085  004AF4  6FB0               	movwf	_USBDeviceState& (0+255),b
 19086                           
 19087                           ;usb_device.c: 2015: }
 19088  004AF6  0012               	return	
 19089  004AF8                     l262:
 19090                           
 19091                           ; BSR set to: 0
 19092                           ;usb_device.c: 2016: else;usb_device.c: 2017: {;usb_device.c: 2019: USER_USB_CALLBACK_EV
      +                          ENT_HANDLER(EVENT_CONFIGURED,(void*)&USBActiveConfiguration,1);
 19093                           
 19094                           ; BSR set to: 0
 19095  004AF8  0E00               	movlw	0
 19096  004AFA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 19097  004AFC  0E01               	movlw	1
 19098  004AFE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 19099  004B00  0EB4               	movlw	low _USBActiveConfiguration
 19100  004B02  6E12               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata,c
 19101  004B04  0E00               	movlw	high _USBActiveConfiguration
 19102  004B06  6E13               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,c
 19103  004B08  0E00               	movlw	0
 19104  004B0A  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 19105  004B0C  0E01               	movlw	1
 19106  004B0E  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 19107  004B10  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 19108                           
 19109                           ;usb_device.c: 2024: USBDeviceState = CONFIGURED_STATE;
 19110  004B14  0E20               	movlw	32
 19111  004B16  0100               	movlb	0	; () banked
 19112  004B18  6FB0               	movwf	_USBDeviceState& (0+255),b
 19113  004B1A  0012               	return	
 19114  004B1C                     __end_of_USBStdSetCfgHandler:
 19115                           	opt stack 0
 19116                           tblptru	equ	0xFF8
 19117                           tblptrh	equ	0xFF7
 19118                           tblptrl	equ	0xFF6
 19119                           tablat	equ	0xFF5
 19120                           prodh	equ	0xFF4
 19121                           prodl	equ	0xFF3
 19122                           intcon	equ	0xFF2
 19123                           intcon2	equ	0xFF1
 19124                           intcon3	equ	0xFF0
 19125                           postinc0	equ	0xFEE
 19126                           wreg	equ	0xFE8
 19127                           indf1	equ	0xFE7
 19128                           postdec1	equ	0xFE5
 19129                           plusw1	equ	0xFE3
 19130                           fsr1h	equ	0xFE2
 19131                           fsr1l	equ	0xFE1
 19132                           indf2	equ	0xFDF
 19133                           postinc2	equ	0xFDE
 19134                           postdec2	equ	0xFDD
 19135                           plusw2	equ	0xFDB
 19136                           fsr2h	equ	0xFDA
 19137                           fsr2l	equ	0xFD9
 19138                           status	equ	0xFD8
 19139                           
 19140 ;; *************** function _memset *****************
 19141 ;; Defined at:
 19142 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memset.c"
 19143 ;; Parameters:    Size  Location     Type
 19144 ;;  p1              2    0[COMRAM] PTR void 
 19145 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19146 ;;  c               2    2[COMRAM] int 
 19147 ;;  n               2    4[COMRAM] unsigned int 
 19148 ;; Auto vars:     Size  Location     Type
 19149 ;;  p               2    6[COMRAM] PTR unsigned char 
 19150 ;;		 -> USBAlternateInterface(2), BDT(48), UEP1(1), 
 19151 ;; Return value:  Size  Location     Type
 19152 ;;                  2    0[COMRAM] PTR void 
 19153 ;; Registers used:
 19154 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19155 ;; Tracked objects:
 19156 ;;		On entry : 0/0
 19157 ;;		On exit  : 0/0
 19158 ;;		Unchanged: 0/0
 19159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19160 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19161 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19162 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19163 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19164 ;;Total ram usage:        8 bytes
 19165 ;; Hardware stack levels used:    1
 19166 ;; This function calls:
 19167 ;;		Nothing
 19168 ;; This function is called by:
 19169 ;;		_USBDeviceInit
 19170 ;;		_USBStdSetCfgHandler
 19171 ;; This function uses a non-reentrant model
 19172 ;;
 19173                           
 19174                           	psect	text87
 19175  007BE6                     __ptext87:
 19176                           	opt stack 0
 19177  007BE6                     _memset:
 19178                           	opt stack 28
 19179                           
 19180                           ; BSR set to: 0
 19181                           ;incstack = 0
 19182  007BE6  C001  F007         	movff	memset@p1,memset@p
 19183  007BEA  C002  F008         	movff	memset@p1+1,memset@p+1
 19184  007BEE  D008               	goto	l3491
 19185  007BF0                     l10263:
 19186  007BF0  C007  FFD9         	movff	memset@p,fsr2l
 19187  007BF4  C008  FFDA         	movff	memset@p+1,fsr2h
 19188  007BF8  C003  FFDF         	movff	memset@c,indf2
 19189  007BFC  4A07               	infsnz	memset@p,f,c
 19190  007BFE  2A08               	incf	memset@p+1,f,c
 19191  007C00                     l3491:
 19192  007C00  0605               	decf	memset@n,f,c
 19193  007C02  A0D8               	btfss	status,0,c
 19194  007C04  0606               	decf	memset@n+1,f,c
 19195  007C06  2805               	incf	memset@n,w,c
 19196  007C08  E1F3               	bnz	l10263
 19197  007C0A  2806               	incf	memset@n+1,w,c
 19198  007C0C  B4D8               	btfsc	status,2,c
 19199  007C0E  0012               	return	
 19200  007C10  D7EF               	goto	l3492
 19201  007C12                     __end_of_memset:
 19202                           	opt stack 0
 19203                           tblptru	equ	0xFF8
 19204                           tblptrh	equ	0xFF7
 19205                           tblptrl	equ	0xFF6
 19206                           tablat	equ	0xFF5
 19207                           prodh	equ	0xFF4
 19208                           prodl	equ	0xFF3
 19209                           intcon	equ	0xFF2
 19210                           intcon2	equ	0xFF1
 19211                           intcon3	equ	0xFF0
 19212                           postinc0	equ	0xFEE
 19213                           wreg	equ	0xFE8
 19214                           indf1	equ	0xFE7
 19215                           postdec1	equ	0xFE5
 19216                           plusw1	equ	0xFE3
 19217                           fsr1h	equ	0xFE2
 19218                           fsr1l	equ	0xFE1
 19219                           indf2	equ	0xFDF
 19220                           postinc2	equ	0xFDE
 19221                           postdec2	equ	0xFDD
 19222                           plusw2	equ	0xFDB
 19223                           fsr2h	equ	0xFDA
 19224                           fsr2l	equ	0xFD9
 19225                           status	equ	0xFD8
 19226                           
 19227 ;; *************** function _USBStdGetStatusHandler *****************
 19228 ;; Defined at:
 19229 ;;		line 2131 in file "usb_device.c"
 19230 ;; Parameters:    Size  Location     Type
 19231 ;;		None
 19232 ;; Auto vars:     Size  Location     Type
 19233 ;;  p               2    1[COMRAM] PTR struct __BDT
 19234 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 19235 ;; Return value:  Size  Location     Type
 19236 ;;                  1    wreg      void 
 19237 ;; Registers used:
 19238 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 19239 ;; Tracked objects:
 19240 ;;		On entry : 0/0
 19241 ;;		On exit  : 0/0
 19242 ;;		Unchanged: 0/0
 19243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19244 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19245 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19246 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19247 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19248 ;;Total ram usage:        3 bytes
 19249 ;; Hardware stack levels used:    1
 19250 ;; This function calls:
 19251 ;;		Nothing
 19252 ;; This function is called by:
 19253 ;;		_USBCheckStdRequest
 19254 ;; This function uses a non-reentrant model
 19255 ;;
 19256                           
 19257                           	psect	text88
 19258  005926                     __ptext88:
 19259                           	opt stack 0
 19260  005926                     _USBStdGetStatusHandler:
 19261                           	opt stack 26
 19262                           
 19263                           ;usb_device.c: 2133: CtrlTrfData[0] = 0;
 19264                           
 19265                           ;incstack = 0
 19266  005926  0E00               	movlw	0
 19267  005928  010D               	movlb	13	; () banked
 19268  00592A  6F38               	movwf	56,b	;volatile
 19269                           
 19270                           ;usb_device.c: 2134: CtrlTrfData[1] = 0;
 19271  00592C  0E00               	movlw	0
 19272  00592E  6F39               	movwf	57,b	;volatile
 19273                           
 19274                           ;usb_device.c: 2136: switch(SetupPkt.Recipient)
 19275  005930  D039               	goto	l281
 19276  005932                     l282:
 19277                           
 19278                           ; BSR set to: 13
 19279                           ;usb_device.c: 2139: inPipes[0].info.bits.busy = 1;
 19280  005932  0100               	movlb	0	; () banked
 19281  005934  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19282                           
 19283                           ;usb_device.c: 2147: };usb_device.c: 2149: if(RemoteWakeup == 1)
 19284                           
 19285                           ; BSR set to: 13
 19286                           
 19287                           ; BSR set to: 0
 19288                           ;usb_device.c: 2145: {;usb_device.c: 2146: CtrlTrfData[0]|=0x01;
 19289                           
 19290                           ;usb_device.c: 2144: if(0 == 1)
 19291  005936  0100               	movlb	0	; () banked
 19292  005938  05AD               	decf	_RemoteWakeup& (0+255),w,b
 19293  00593A  A4D8               	btfss	status,2,c
 19294  00593C  D03E               	goto	l285
 19295                           
 19296                           ; BSR set to: 0
 19297                           ;usb_device.c: 2150: {;usb_device.c: 2151: CtrlTrfData[0]|=0x02;
 19298  00593E  010D               	movlb	13	; () banked
 19299  005940  8338               	bsf	56,1,b	;volatile
 19300                           
 19301                           ; BSR set to: 13
 19302                           ;usb_device.c: 2152: };usb_device.c: 2153: break;
 19303  005942  D03B               	goto	l285
 19304  005944                     l286:
 19305                           
 19306                           ; BSR set to: 13
 19307                           ;usb_device.c: 2155: inPipes[0].info.bits.busy = 1;
 19308  005944  0100               	movlb	0	; () banked
 19309  005946  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19310                           
 19311                           ;usb_device.c: 2156: break;
 19312  005948  D038               	goto	l285
 19313  00594A                     l287:
 19314                           
 19315                           ; BSR set to: 13
 19316                           ;usb_device.c: 2158: inPipes[0].info.bits.busy = 1;
 19317  00594A  0100               	movlb	0	; () banked
 19318  00594C  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19319                           
 19320                           ;usb_device.c: 2162: {;usb_device.c: 2163: BDT_ENTRY *p;;usb_device.c: 2165: if(SetupPkt
      +                          .EPDir == 0)
 19321  00594E  010D               	movlb	13	; () banked
 19322  005950  BF34               	btfsc	52,7,b	;volatile
 19323  005952  D00A               	goto	l288
 19324                           
 19325                           ; BSR set to: 13
 19326                           ;usb_device.c: 2166: {;usb_device.c: 2167: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19327  005954  5134               	movf	52,w,b	;volatile
 19328  005956  0B0F               	andlw	15
 19329  005958  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 19330  00595A  5001               	movf	??_USBStdGetStatusHandler,w,c
 19331  00595C  0D02               	mullw	2
 19332  00595E  0E72               	movlw	low _pBDTEntryOut
 19333  005960  24F3               	addwf	prodl,w,c
 19334  005962  6ED9               	movwf	fsr2l,c
 19335  005964  0E00               	movlw	high _pBDTEntryOut
 19336  005966  D009               	goto	L6
 19337  005968                     l288:
 19338                           
 19339                           ; BSR set to: 13
 19340                           ;usb_device.c: 2169: else;usb_device.c: 2170: {;usb_device.c: 2171: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19341                           
 19342                           ; BSR set to: 13
 19343  005968  5134               	movf	52,w,b	;volatile
 19344  00596A  0B0F               	andlw	15
 19345  00596C  6E01               	movwf	??_USBStdGetStatusHandler& (0+255),c
 19346  00596E  5001               	movf	??_USBStdGetStatusHandler,w,c
 19347  005970  0D02               	mullw	2
 19348  005972  0E6C               	movlw	low _pBDTEntryIn
 19349  005974  24F3               	addwf	prodl,w,c
 19350  005976  6ED9               	movwf	fsr2l,c
 19351  005978  0E00               	movlw	high _pBDTEntryIn
 19352  00597A                     L6:
 19353  00597A  20F4               	addwfc	prodh,w,c
 19354  00597C  6EDA               	movwf	fsr2h,c
 19355  00597E  CFDE F002          	movff	postinc2,USBStdGetStatusHandler@p
 19356  005982  CFDD F003          	movff	postdec2,USBStdGetStatusHandler@p+1
 19357                           
 19358                           ; BSR set to: 13
 19359                           ;usb_device.c: 2172: };usb_device.c: 2174: if((p->STAT.UOWN == 1) && (p->STAT.BSTALL == 
      +                          1))
 19360                           
 19361                           ; BSR set to: 13
 19362  005986  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19363  00598A  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19364  00598E  AEDF               	btfss	indf2,7,c
 19365  005990  D014               	goto	l285
 19366                           
 19367                           ; BSR set to: 13
 19368  005992  C002  FFD9         	movff	USBStdGetStatusHandler@p,fsr2l
 19369  005996  C003  FFDA         	movff	USBStdGetStatusHandler@p+1,fsr2h
 19370  00599A  A4DF               	btfss	indf2,2,c
 19371  00599C  D00E               	goto	l285
 19372                           
 19373                           ; BSR set to: 13
 19374                           ;usb_device.c: 2175: CtrlTrfData[0]=0x01;
 19375  00599E  0E01               	movlw	1
 19376  0059A0  6F38               	movwf	56,b	;volatile
 19377                           
 19378                           ; BSR set to: 13
 19379                           ;usb_device.c: 2177: };usb_device.c: 2178: }
 19380                           
 19381                           ; BSR set to: 13
 19382                           ;usb_device.c: 2176: break;
 19383  0059A2  D00B               	goto	l285
 19384  0059A4                     l281:
 19385                           
 19386                           ; BSR set to: 13
 19387                           
 19388                           ; BSR set to: 13
 19389  0059A4  5130               	movf	48,w,b	;volatile
 19390  0059A6  0B1F               	andlw	31
 19391                           
 19392                           ; Switch size 1, requested type "space"
 19393                           ; Number of cases is 3, Range of values is 0 to 2
 19394                           ; switch strategies available:
 19395                           ; Name         Instructions Cycles
 19396                           ; simple_byte           10     6 (average)
 19397                           ;	Chosen strategy is simple_byte
 19398  0059A8  0A00               	xorlw	0	; case 0
 19399  0059AA  B4D8               	btfsc	status,2,c
 19400  0059AC  D7C2               	goto	l282
 19401  0059AE  0A01               	xorlw	1	; case 1
 19402  0059B0  B4D8               	btfsc	status,2,c
 19403  0059B2  D7C8               	goto	l286
 19404  0059B4  0A03               	xorlw	3	; case 2
 19405  0059B6  B4D8               	btfsc	status,2,c
 19406  0059B8  D7C8               	goto	l287
 19407  0059BA                     l285:
 19408                           
 19409                           ;usb_device.c: 2180: if(inPipes[0].info.bits.busy == 1)
 19410  0059BA  0100               	movlb	0	; () banked
 19411  0059BC  AF69               	btfss	(_inPipes+3)& (0+255),7,b
 19412  0059BE  0012               	return	
 19413                           
 19414                           ; BSR set to: 0
 19415                           ;usb_device.c: 2181: {;usb_device.c: 2182: inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData
      +                          ;
 19416  0059C0  0E38               	movlw	56
 19417  0059C2  6F66               	movwf	_inPipes& (0+255),b
 19418  0059C4  0E0D               	movlw	13
 19419  0059C6  6F67               	movwf	(_inPipes+1)& (0+255),b
 19420                           
 19421                           ; BSR set to: 0
 19422                           ;usb_device.c: 2183: inPipes[0].info.bits.ctrl_trf_mem = 0x01;
 19423  0059C8  8169               	bsf	(_inPipes+3)& (0+255),0,b
 19424                           
 19425                           ; BSR set to: 0
 19426                           ;usb_device.c: 2184: inPipes[0].wCount.v[0] = 2;
 19427  0059CA  0E02               	movlw	2
 19428  0059CC  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19429  0059CE  0012               	return	
 19430  0059D0                     __end_of_USBStdGetStatusHandler:
 19431                           	opt stack 0
 19432                           tblptru	equ	0xFF8
 19433                           tblptrh	equ	0xFF7
 19434                           tblptrl	equ	0xFF6
 19435                           tablat	equ	0xFF5
 19436                           prodh	equ	0xFF4
 19437                           prodl	equ	0xFF3
 19438                           intcon	equ	0xFF2
 19439                           intcon2	equ	0xFF1
 19440                           intcon3	equ	0xFF0
 19441                           postinc0	equ	0xFEE
 19442                           wreg	equ	0xFE8
 19443                           indf1	equ	0xFE7
 19444                           postdec1	equ	0xFE5
 19445                           plusw1	equ	0xFE3
 19446                           fsr1h	equ	0xFE2
 19447                           fsr1l	equ	0xFE1
 19448                           indf2	equ	0xFDF
 19449                           postinc2	equ	0xFDE
 19450                           postdec2	equ	0xFDD
 19451                           plusw2	equ	0xFDB
 19452                           fsr2h	equ	0xFDA
 19453                           fsr2l	equ	0xFD9
 19454                           status	equ	0xFD8
 19455                           
 19456 ;; *************** function _USBStdGetDscHandler *****************
 19457 ;; Defined at:
 19458 ;;		line 2045 in file "usb_device.c"
 19459 ;; Parameters:    Size  Location     Type
 19460 ;;		None
 19461 ;; Auto vars:     Size  Location     Type
 19462 ;;		None
 19463 ;; Return value:  Size  Location     Type
 19464 ;;                  1    wreg      void 
 19465 ;; Registers used:
 19466 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh
 19467 ;; Tracked objects:
 19468 ;;		On entry : 0/0
 19469 ;;		On exit  : 0/0
 19470 ;;		Unchanged: 0/0
 19471 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19472 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19473 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19474 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19475 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19476 ;;Total ram usage:        2 bytes
 19477 ;; Hardware stack levels used:    1
 19478 ;; This function calls:
 19479 ;;		Nothing
 19480 ;; This function is called by:
 19481 ;;		_USBCheckStdRequest
 19482 ;; This function uses a non-reentrant model
 19483 ;;
 19484                           
 19485                           	psect	text89
 19486  003C8C                     __ptext89:
 19487                           	opt stack 0
 19488  003C8C                     _USBStdGetDscHandler:
 19489                           	opt stack 26
 19490                           
 19491                           ;usb_device.c: 2047: if(SetupPkt.bmRequestType == 0x80)
 19492                           
 19493                           ; BSR set to: 0
 19494                           ;incstack = 0
 19495  003C8C  0E80               	movlw	128
 19496  003C8E  010D               	movlb	13	; () banked
 19497  003C90  1930               	xorwf	48,w,b	;volatile
 19498  003C92  A4D8               	btfss	status,2,c
 19499  003C94  0012               	return	
 19500                           
 19501                           ; BSR set to: 13
 19502                           ;usb_device.c: 2048: {;usb_device.c: 2049: inPipes[0].info.Val = 0x00 | 0x80 | 0x40;
 19503  003C96  0EC0               	movlw	192
 19504  003C98  0100               	movlb	0	; () banked
 19505  003C9A  6F69               	movwf	(_inPipes+3)& (0+255),b
 19506                           
 19507                           ;usb_device.c: 2051: switch(SetupPkt.bDescriptorType)
 19508  003C9C  D088               	goto	l268
 19509  003C9E                     
 19510                           ;usb_device.c: 2057: inPipes[0].pSrc.bRom = (const uint8_t*)&device_dsc;
 19511                           
 19512                           ; BSR set to: 0
 19513  003C9E  0EA4               	movlw	low _device_dsc
 19514  003CA0  0100               	movlb	0	; () banked
 19515  003CA2  6F66               	movwf	_inPipes& (0+255),b
 19516  003CA4  0E8F               	movlw	high _device_dsc
 19517  003CA6  6F67               	movwf	(_inPipes+1)& (0+255),b
 19518                           
 19519                           ; BSR set to: 0
 19520                           ;usb_device.c: 2059: inPipes[0].wCount.Val = sizeof(device_dsc);
 19521  003CA8  0E00               	movlw	0
 19522  003CAA  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19523  003CAC  0E12               	movlw	18
 19524  003CAE  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19525                           
 19526                           ;usb_device.c: 2060: break;
 19527  003CB0  0012               	return	
 19528  003CB2                     
 19529                           ;usb_device.c: 2065: if(SetupPkt.bDscIndex < 1)
 19530                           
 19531                           ; BSR set to: 0
 19532  003CB2  010D               	movlb	13	; () banked
 19533  003CB4  5132               	movf	50,w,b	;volatile
 19534  003CB6  A4D8               	btfss	status,2,c
 19535  003CB8  D043               	goto	l272
 19536                           
 19537                           ; BSR set to: 13
 19538                           ;usb_device.c: 2066: {;usb_device.c: 2070: inPipes[0].pSrc.bRom = *(USB_CD_Ptr+SetupPkt.
      +                          bDscIndex);
 19539  003CBA  5132               	movf	50,w,b	;volatile
 19540  003CBC  0D02               	mullw	2
 19541  003CBE  0EA4               	movlw	low _USB_CD_Ptr
 19542  003CC0  24F3               	addwf	prodl,w,c
 19543  003CC2  6EF6               	movwf	tblptrl,c
 19544  003CC4  0E8E               	movlw	high _USB_CD_Ptr
 19545  003CC6  20F4               	addwfc	prodh,w,c
 19546  003CC8  6EF7               	movwf	tblptrh,c
 19547  003CCA                     	if	1	;There are 3 active tblptr bytes
 19548  003CCA  6AF8               	clrf	tblptru,c
 19549  003CCC  0E00               	movlw	low (__mediumconst shr (0+16))
 19550  003CCE  22F8               	addwfc	tblptru,f,c
 19551  003CD0                     	endif
 19552  003CD0  0009               	tblrd		*+
 19553  003CD2  CFF5 F066          	movff	tablat,_inPipes
 19554  003CD6  000A               	tblrd		*-
 19555  003CD8  CFF5 F067          	movff	tablat,_inPipes+1
 19556                           
 19557                           ; BSR set to: 13
 19558                           ;usb_device.c: 2076: inPipes[0].wCount.byte.LB = *(inPipes[0].pSrc.bRom+2);
 19559  003CDC  0E02               	movlw	2
 19560  003CDE  0100               	movlb	0	; () banked
 19561  003CE0  2566               	addwf	_inPipes& (0+255),w,b
 19562  003CE2  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19563  003CE4  0E00               	movlw	0
 19564  003CE6  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19565  003CE8  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19566  003CEA  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19567  003CEE  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19568  003CF2  6AF8               	clrf	tblptru,c
 19569  003CF4  0E0E               	movlw	(high __ramtop+-1)
 19570  003CF6  64F7               	cpfsgt	tblptrh,c
 19571  003CF8  D003               	bra	u7927
 19572  003CFA  0008               	tblrd		*
 19573  003CFC  50F5               	movf	tablat,w,c
 19574  003CFE  D005               	bra	u7920
 19575  003D00                     u7927:
 19576  003D00  CFF6 FFE9          	movff	tblptrl,fsr0l
 19577  003D04  CFF7 FFEA          	movff	tblptrh,fsr0h
 19578  003D08  50EF               	movf	indf0,w,c
 19579  003D0A                     u7920:
 19580  003D0A  0100               	movlb	0	; () banked
 19581  003D0C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19582                           
 19583                           ; BSR set to: 0
 19584                           ;usb_device.c: 2077: inPipes[0].wCount.byte.HB = *(inPipes[0].pSrc.bRom+3);
 19585  003D0E  0E03               	movlw	3
 19586  003D10  2566               	addwf	_inPipes& (0+255),w,b
 19587  003D12  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19588  003D14  0E00               	movlw	0
 19589  003D16  2167               	addwfc	(_inPipes+1)& (0+255),w,b
 19590  003D18  6E02               	movwf	(??_USBStdGetDscHandler+1)& (0+255),c
 19591  003D1A  C001  FFF6         	movff	??_USBStdGetDscHandler,tblptrl
 19592  003D1E  C002  FFF7         	movff	??_USBStdGetDscHandler+1,tblptrh
 19593  003D22  6AF8               	clrf	tblptru,c
 19594  003D24  0E0E               	movlw	(high __ramtop+-1)
 19595  003D26  64F7               	cpfsgt	tblptrh,c
 19596  003D28  D003               	bra	u7937
 19597  003D2A  0008               	tblrd		*
 19598  003D2C  50F5               	movf	tablat,w,c
 19599  003D2E  D005               	bra	u7930
 19600  003D30                     u7937:
 19601  003D30  CFF6 FFE9          	movff	tblptrl,fsr0l
 19602  003D34  CFF7 FFEA          	movff	tblptrh,fsr0h
 19603  003D38  50EF               	movf	indf0,w,c
 19604  003D3A                     u7930:
 19605  003D3A  0100               	movlb	0	; () banked
 19606  003D3C  6F6B               	movwf	(_inPipes+5)& (0+255),b
 19607                           
 19608                           ;usb_device.c: 2078: }
 19609  003D3E  0012               	return	
 19610  003D40                     l272:
 19611                           
 19612                           ;usb_device.c: 2079: else;usb_device.c: 2080: {;usb_device.c: 2081: inPipes[0].info.Val 
      +                          = 0;
 19613                           
 19614                           ; BSR set to: 0
 19615  003D40  0E00               	movlw	0
 19616  003D42  0100               	movlb	0	; () banked
 19617  003D44  6F69               	movwf	(_inPipes+3)& (0+255),b
 19618                           
 19619                           ; BSR set to: 0
 19620                           ;usb_device.c: 2082: };usb_device.c: 2083: break;
 19621  003D46  0012               	return	
 19622  003D48                     
 19623                           ;usb_device.c: 2088: if(SetupPkt.bDscIndex<4)
 19624                           
 19625                           ; BSR set to: 0
 19626  003D48  0E04               	movlw	4
 19627  003D4A  010D               	movlb	13	; () banked
 19628  003D4C  6132               	cpfslt	50,b	;volatile
 19629  003D4E  D027               	goto	l275
 19630                           
 19631                           ; BSR set to: 13
 19632                           ;usb_device.c: 2089: {;usb_device.c: 2091: inPipes[0].pSrc.bRom = *(USB_SD_Ptr+SetupPkt.
      +                          bDscIndex);
 19633  003D50  5132               	movf	50,w,b	;volatile
 19634  003D52  0D02               	mullw	2
 19635  003D54  0E7A               	movlw	low _USB_SD_Ptr
 19636  003D56  24F3               	addwf	prodl,w,c
 19637  003D58  6EF6               	movwf	tblptrl,c
 19638  003D5A  0E8E               	movlw	high _USB_SD_Ptr
 19639  003D5C  20F4               	addwfc	prodh,w,c
 19640  003D5E  6EF7               	movwf	tblptrh,c
 19641  003D60                     	if	1	;There are 3 active tblptr bytes
 19642  003D60  6AF8               	clrf	tblptru,c
 19643  003D62  0E00               	movlw	low (__mediumconst shr (0+16))
 19644  003D64  22F8               	addwfc	tblptru,f,c
 19645  003D66                     	endif
 19646  003D66  0009               	tblrd		*+
 19647  003D68  CFF5 F066          	movff	tablat,_inPipes
 19648  003D6C  000A               	tblrd		*-
 19649  003D6E  CFF5 F067          	movff	tablat,_inPipes+1
 19650                           
 19651                           ; BSR set to: 13
 19652                           ;usb_device.c: 2093: inPipes[0].wCount.Val = *inPipes[0].pSrc.bRom;
 19653  003D72  C066  FFF6         	movff	_inPipes,tblptrl
 19654  003D76  C067  FFF7         	movff	_inPipes+1,tblptrh
 19655  003D7A  6AF8               	clrf	tblptru,c
 19656  003D7C  0E0E               	movlw	(high __ramtop+-1)
 19657  003D7E  64F7               	cpfsgt	tblptrh,c
 19658  003D80  D003               	bra	u7957
 19659  003D82  0008               	tblrd		*
 19660  003D84  50F5               	movf	tablat,w,c
 19661  003D86  D005               	bra	u7950
 19662  003D88                     u7957:
 19663  003D88  CFF6 FFE9          	movff	tblptrl,fsr0l
 19664  003D8C  CFF7 FFEA          	movff	tblptrh,fsr0h
 19665  003D90  50EF               	movf	indf0,w,c
 19666  003D92                     u7950:
 19667  003D92  6E01               	movwf	??_USBStdGetDscHandler& (0+255),c
 19668  003D94  5001               	movf	??_USBStdGetDscHandler,w,c
 19669  003D96  0100               	movlb	0	; () banked
 19670  003D98  6F6A               	movwf	(_inPipes+4)& (0+255),b
 19671  003D9A  6B6B               	clrf	(_inPipes+5)& (0+255),b
 19672                           
 19673                           ;usb_device.c: 2094: }
 19674  003D9C  0012               	return	
 19675  003D9E                     l275:
 19676                           
 19677                           ;usb_device.c: 2104: else;usb_device.c: 2105: {;usb_device.c: 2106: inPipes[0].info.Val 
      +                          = 0;
 19678                           
 19679                           ; BSR set to: 0
 19680  003D9E  0E00               	movlw	0
 19681  003DA0  0100               	movlb	0	; () banked
 19682  003DA2  6F69               	movwf	(_inPipes+3)& (0+255),b
 19683                           
 19684                           ; BSR set to: 0
 19685                           ;usb_device.c: 2107: };usb_device.c: 2108: break;
 19686  003DA4  0012               	return	
 19687  003DA6                     
 19688                           ;usb_device.c: 2110: inPipes[0].info.Val = 0;
 19689                           
 19690                           ; BSR set to: 0
 19691  003DA6  0E00               	movlw	0
 19692  003DA8  0100               	movlb	0	; () banked
 19693  003DAA  6F69               	movwf	(_inPipes+3)& (0+255),b
 19694                           
 19695                           ; BSR set to: 0
 19696                           ;usb_device.c: 2112: }
 19697                           
 19698                           ;usb_device.c: 2111: break;
 19699  003DAC  0012               	return	
 19700  003DAE                     l268:
 19701                           
 19702                           ; BSR set to: 0
 19703                           
 19704                           ; BSR set to: 0
 19705  003DAE  010D               	movlb	13	; () banked
 19706  003DB0  5133               	movf	51,w,b	;volatile
 19707                           
 19708                           ; Switch size 1, requested type "space"
 19709                           ; Number of cases is 3, Range of values is 1 to 3
 19710                           ; switch strategies available:
 19711                           ; Name         Instructions Cycles
 19712                           ; simple_byte           10     6 (average)
 19713                           ;	Chosen strategy is simple_byte
 19714  003DB2  0A01               	xorlw	1	; case 1
 19715  003DB4  B4D8               	btfsc	status,2,c
 19716  003DB6  D773               	goto	l269
 19717  003DB8  0A03               	xorlw	3	; case 2
 19718  003DBA  B4D8               	btfsc	status,2,c
 19719  003DBC  D77A               	goto	l271
 19720  003DBE  0A01               	xorlw	1	; case 3
 19721  003DC0  B4D8               	btfsc	status,2,c
 19722  003DC2  D7C2               	goto	l274
 19723  003DC4  D7F0               	goto	l277
 19724  003DC6                     __end_of_USBStdGetDscHandler:
 19725                           	opt stack 0
 19726                           tblptru	equ	0xFF8
 19727                           tblptrh	equ	0xFF7
 19728                           tblptrl	equ	0xFF6
 19729                           tablat	equ	0xFF5
 19730                           prodh	equ	0xFF4
 19731                           prodl	equ	0xFF3
 19732                           intcon	equ	0xFF2
 19733                           intcon2	equ	0xFF1
 19734                           intcon3	equ	0xFF0
 19735                           indf0	equ	0xFEF
 19736                           postinc0	equ	0xFEE
 19737                           fsr0h	equ	0xFEA
 19738                           fsr0l	equ	0xFE9
 19739                           wreg	equ	0xFE8
 19740                           indf1	equ	0xFE7
 19741                           postdec1	equ	0xFE5
 19742                           plusw1	equ	0xFE3
 19743                           fsr1h	equ	0xFE2
 19744                           fsr1l	equ	0xFE1
 19745                           indf2	equ	0xFDF
 19746                           postinc2	equ	0xFDE
 19747                           postdec2	equ	0xFDD
 19748                           plusw2	equ	0xFDB
 19749                           fsr2h	equ	0xFDA
 19750                           fsr2l	equ	0xFD9
 19751                           status	equ	0xFD8
 19752                           
 19753 ;; *************** function _USBStdFeatureReqHandler *****************
 19754 ;; Defined at:
 19755 ;;		line 2756 in file "usb_device.c"
 19756 ;; Parameters:    Size  Location     Type
 19757 ;;		None
 19758 ;; Auto vars:     Size  Location     Type
 19759 ;;  p               2   27[COMRAM] PTR struct __BDT
 19760 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 19761 ;;  pUEP            2   24[COMRAM] PTR unsigned char 
 19762 ;;		 -> UEP0(1), 
 19763 ;;  current_ep_d    1   26[COMRAM] struct .
 19764 ;; Return value:  Size  Location     Type
 19765 ;;                  1    wreg      void 
 19766 ;; Registers used:
 19767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 19768 ;; Tracked objects:
 19769 ;;		On entry : 0/0
 19770 ;;		On exit  : 0/0
 19771 ;;		Unchanged: 0/0
 19772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 19773 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19774 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19775 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19776 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 19777 ;;Total ram usage:        6 bytes
 19778 ;; Hardware stack levels used:    1
 19779 ;; Hardware stack levels required when called:    4
 19780 ;; This function calls:
 19781 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 19782 ;; This function is called by:
 19783 ;;		_USBCheckStdRequest
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           	psect	text90
 19788  0017B4                     __ptext90:
 19789                           	opt stack 0
 19790  0017B4                     _USBStdFeatureReqHandler:
 19791                           	opt stack 22
 19792                           
 19793                           ;usb_device.c: 2758: BDT_ENTRY *p;;usb_device.c: 2759: EP_STATUS current_ep_data;;usb_de
      +                          vice.c: 2763: unsigned char* pUEP;;usb_device.c: 2801: if((SetupPkt.bFeature == 1)&&;usb
      +                          _device.c: 2802: (SetupPkt.Recipient == (0x00)))
 19794                           
 19795                           ;incstack = 0
 19796  0017B4  010D               	movlb	13	; () banked
 19797  0017B6  0532               	decf	50,w,b	;volatile
 19798  0017B8  A4D8               	btfss	status,2,c
 19799  0017BA  D011               	goto	l361
 19800                           
 19801                           ; BSR set to: 13
 19802  0017BC  5130               	movf	48,w,b	;volatile
 19803  0017BE  0B1F               	andlw	31
 19804  0017C0  0900               	iorlw	0
 19805  0017C2  A4D8               	btfss	status,2,c
 19806  0017C4  D00C               	goto	l361
 19807                           
 19808                           ; BSR set to: 13
 19809                           ;usb_device.c: 2803: {;usb_device.c: 2804: inPipes[0].info.bits.busy = 1;
 19810  0017C6  0100               	movlb	0	; () banked
 19811  0017C8  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19812                           
 19813                           ; BSR set to: 0
 19814                           ;usb_device.c: 2805: if(SetupPkt.bRequest == 3)
 19815  0017CA  0E03               	movlw	3
 19816  0017CC  010D               	movlb	13	; () banked
 19817  0017CE  1931               	xorwf	49,w,b	;volatile
 19818  0017D0  A4D8               	btfss	status,2,c
 19819  0017D2  D002               	goto	l360
 19820                           
 19821                           ; BSR set to: 13
 19822                           ;usb_device.c: 2806: RemoteWakeup = 1;
 19823  0017D4  0E01               	movlw	1
 19824  0017D6  D001               	goto	L7
 19825  0017D8                     l360:
 19826                           
 19827                           ;usb_device.c: 2807: else;usb_device.c: 2808: RemoteWakeup = 0;
 19828                           
 19829                           ; BSR set to: 0
 19830  0017D8  0E00               	movlw	0
 19831  0017DA                     L7:
 19832  0017DA  0100               	movlb	0	; () banked
 19833  0017DC  6FAD               	movwf	_RemoteWakeup& (0+255),b
 19834  0017DE                     l361:
 19835                           
 19836                           ;usb_device.c: 2809: };usb_device.c: 2812: if((SetupPkt.bFeature == 0)&&;usb_device.c: 2
      +                          813: (SetupPkt.Recipient == (0x02))&&;usb_device.c: 2814: (SetupPkt.EPNum != 0) && (Setu
      +                          pPkt.EPNum <= 2)&&;usb_device.c: 2815: (USBDeviceState == CONFIGURED_STATE))
 19837                           
 19838                           ; BSR set to: 0
 19839  0017DE  010D               	movlb	13	; () banked
 19840  0017E0  5132               	movf	50,w,b	;volatile
 19841  0017E2  A4D8               	btfss	status,2,c
 19842  0017E4  0012               	return	
 19843                           
 19844                           ; BSR set to: 13
 19845  0017E6  5130               	movf	48,w,b	;volatile
 19846  0017E8  0B1F               	andlw	31
 19847  0017EA  0A02               	xorlw	2
 19848  0017EC  A4D8               	btfss	status,2,c
 19849  0017EE  0012               	return	
 19850                           
 19851                           ; BSR set to: 13
 19852  0017F0  5134               	movf	52,w,b	;volatile
 19853  0017F2  0B0F               	andlw	15
 19854  0017F4  0900               	iorlw	0
 19855  0017F6  B4D8               	btfsc	status,2,c
 19856  0017F8  0012               	return	
 19857                           
 19858                           ; BSR set to: 13
 19859  0017FA  5134               	movf	52,w,b	;volatile
 19860  0017FC  0B0F               	andlw	15
 19861  0017FE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19862  001800  0E03               	movlw	3
 19863  001802  6018               	cpfslt	??_USBStdFeatureReqHandler,c
 19864  001804  0012               	return	
 19865                           
 19866                           ; BSR set to: 13
 19867  001806  0E20               	movlw	32
 19868  001808  0100               	movlb	0	; () banked
 19869  00180A  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 19870  00180C  A4D8               	btfss	status,2,c
 19871  00180E  0012               	return	
 19872                           
 19873                           ; BSR set to: 0
 19874                           ;usb_device.c: 2816: {;usb_device.c: 2819: inPipes[0].info.bits.busy = 1;
 19875  001810  8F69               	bsf	(_inPipes+3)& (0+255),7,b
 19876                           
 19877                           ;usb_device.c: 2822: if(SetupPkt.EPDir == 0)
 19878  001812  010D               	movlb	13	; () banked
 19879  001814  BF34               	btfsc	52,7,b	;volatile
 19880  001816  D019               	goto	l363
 19881                           
 19882                           ; BSR set to: 13
 19883                           ;usb_device.c: 2823: {;usb_device.c: 2824: p = (BDT_ENTRY*)pBDTEntryOut[SetupPkt.EPNum];
 19884  001818  5134               	movf	52,w,b	;volatile
 19885  00181A  0B0F               	andlw	15
 19886  00181C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19887  00181E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19888  001820  0D02               	mullw	2
 19889  001822  0E72               	movlw	low _pBDTEntryOut
 19890  001824  24F3               	addwf	prodl,w,c
 19891  001826  6ED9               	movwf	fsr2l,c
 19892  001828  0E00               	movlw	high _pBDTEntryOut
 19893  00182A  20F4               	addwfc	prodh,w,c
 19894  00182C  6EDA               	movwf	fsr2h,c
 19895  00182E  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19896  001832  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19897                           
 19898                           ;usb_device.c: 2825: current_ep_data.Val = ep_data_out[SetupPkt.EPNum].Val;
 19899  001836  5134               	movf	52,w,b	;volatile
 19900  001838  0B0F               	andlw	15
 19901  00183A  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19902  00183C  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19903  00183E  0D01               	mullw	1
 19904  001840  0E5E               	movlw	low _ep_data_out
 19905  001842  24F3               	addwf	prodl,w,c
 19906  001844  6ED9               	movwf	fsr2l,c
 19907  001846  0E01               	movlw	high _ep_data_out
 19908  001848  D018               	goto	L8
 19909  00184A                     l363:
 19910                           
 19911                           ; BSR set to: 13
 19912                           ;usb_device.c: 2827: else;usb_device.c: 2828: {;usb_device.c: 2829: p = (BDT_ENTRY*)pBDT
      +                          EntryIn[SetupPkt.EPNum];
 19913                           
 19914                           ; BSR set to: 13
 19915  00184A  5134               	movf	52,w,b	;volatile
 19916  00184C  0B0F               	andlw	15
 19917  00184E  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19918  001850  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19919  001852  0D02               	mullw	2
 19920  001854  0E6C               	movlw	low _pBDTEntryIn
 19921  001856  24F3               	addwf	prodl,w,c
 19922  001858  6ED9               	movwf	fsr2l,c
 19923  00185A  0E00               	movlw	high _pBDTEntryIn
 19924  00185C  20F4               	addwfc	prodh,w,c
 19925  00185E  6EDA               	movwf	fsr2h,c
 19926  001860  CFDE F01C          	movff	postinc2,USBStdFeatureReqHandler@p
 19927  001864  CFDD F01D          	movff	postdec2,USBStdFeatureReqHandler@p+1
 19928                           
 19929                           ;usb_device.c: 2830: current_ep_data.Val = ep_data_in[SetupPkt.EPNum].Val;
 19930  001868  5134               	movf	52,w,b	;volatile
 19931  00186A  0B0F               	andlw	15
 19932  00186C  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19933  00186E  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19934  001870  0D01               	mullw	1
 19935  001872  0E61               	movlw	low _ep_data_in
 19936  001874  24F3               	addwf	prodl,w,c
 19937  001876  6ED9               	movwf	fsr2l,c
 19938  001878  0E01               	movlw	high _ep_data_in
 19939  00187A                     L8:
 19940  00187A  20F4               	addwfc	prodh,w,c
 19941  00187C  6EDA               	movwf	fsr2h,c
 19942  00187E  50DF               	movf	indf2,w,c
 19943  001880  6E1B               	movwf	USBStdFeatureReqHandler@current_ep_data,c
 19944                           
 19945                           ; BSR set to: 13
 19946                           ;usb_device.c: 2831: };usb_device.c: 2837: if(current_ep_data.bits.ping_pong_state == 0)
 19947                           
 19948                           ; BSR set to: 13
 19949  001882  B01B               	btfsc	USBStdFeatureReqHandler@current_ep_data,0,c
 19950  001884  D006               	goto	l365
 19951                           
 19952                           ; BSR set to: 13
 19953                           ;usb_device.c: 2838: {;usb_device.c: 2839: p = (BDT_ENTRY*)(((uintptr_t)p) & (~0x0004));
 19954  001886  0EFB               	movlw	251
 19955  001888  141C               	andwf	USBStdFeatureReqHandler@p,w,c
 19956  00188A  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19957  00188C  0EFF               	movlw	255
 19958  00188E  141D               	andwf	USBStdFeatureReqHandler@p+1,w,c
 19959  001890  D004               	goto	L9
 19960  001892                     l365:
 19961                           
 19962                           ; BSR set to: 13
 19963                           ;usb_device.c: 2841: else;usb_device.c: 2842: {;usb_device.c: 2843: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) | 0x0004);
 19964                           
 19965                           ; BSR set to: 13
 19966  001892  0E04               	movlw	4
 19967  001894  101C               	iorwf	USBStdFeatureReqHandler@p,w,c
 19968  001896  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 19969  001898  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 19970  00189A                     L9:
 19971  00189A  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 19972                           
 19973                           ; BSR set to: 13
 19974                           ;usb_device.c: 2844: };usb_device.c: 2849: if(SetupPkt.EPDir == 0)
 19975                           
 19976                           ; BSR set to: 13
 19977  00189C  BF34               	btfsc	52,7,b	;volatile
 19978  00189E  D00A               	goto	l367
 19979                           
 19980                           ; BSR set to: 13
 19981                           ;usb_device.c: 2850: {;usb_device.c: 2851: pBDTEntryOut[SetupPkt.EPNum] = (volatile BDT_
      +                          ENTRY *)p;
 19982  0018A0  5134               	movf	52,w,b	;volatile
 19983  0018A2  0B0F               	andlw	15
 19984  0018A4  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 19985  0018A6  5018               	movf	??_USBStdFeatureReqHandler,w,c
 19986  0018A8  0D02               	mullw	2
 19987  0018AA  0E72               	movlw	low _pBDTEntryOut
 19988  0018AC  24F3               	addwf	prodl,w,c
 19989  0018AE  6ED9               	movwf	fsr2l,c
 19990  0018B0  0E00               	movlw	high _pBDTEntryOut
 19991  0018B2  D009               	goto	L10
 19992  0018B4                     l367:
 19993                           
 19994                           ; BSR set to: 13
 19995                           ;usb_device.c: 2853: else;usb_device.c: 2854: {;usb_device.c: 2855: pBDTEntryIn[SetupPkt
      +                          .EPNum] = (volatile BDT_ENTRY *)p;
 19996                           
 19997                           ; BSR set to: 13
 19998  0018B4  5134               	movf	52,w,b	;volatile
 19999  0018B6  0B0F               	andlw	15
 20000  0018B8  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20001  0018BA  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20002  0018BC  0D02               	mullw	2
 20003  0018BE  0E6C               	movlw	low _pBDTEntryIn
 20004  0018C0  24F3               	addwf	prodl,w,c
 20005  0018C2  6ED9               	movwf	fsr2l,c
 20006  0018C4  0E00               	movlw	high _pBDTEntryIn
 20007  0018C6                     L10:
 20008  0018C6  20F4               	addwfc	prodh,w,c
 20009  0018C8  6EDA               	movwf	fsr2h,c
 20010  0018CA  C01C  FFDE         	movff	USBStdFeatureReqHandler@p,postinc2
 20011  0018CE  C01D  FFDD         	movff	USBStdFeatureReqHandler@p+1,postdec2
 20012                           
 20013                           ; BSR set to: 13
 20014                           ;usb_device.c: 2856: };usb_device.c: 2859: if(SetupPkt.bRequest == 3)
 20015                           
 20016                           ; BSR set to: 13
 20017  0018D2  0E03               	movlw	3
 20018  0018D4  1931               	xorwf	49,w,b	;volatile
 20019  0018D6  A4D8               	btfss	status,2,c
 20020  0018D8  D02D               	goto	l369
 20021                           
 20022                           ; BSR set to: 13
 20023                           ;usb_device.c: 2860: {;usb_device.c: 2861: if(p->STAT.UOWN == 1)
 20024  0018DA  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20025  0018DE  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20026  0018E2  AEDF               	btfss	indf2,7,c
 20027  0018E4  D01A               	goto	l372
 20028                           
 20029                           ; BSR set to: 13
 20030                           ;usb_device.c: 2862: {;usb_device.c: 2865: if(SetupPkt.EPDir == 0)
 20031  0018E6  BF34               	btfsc	52,7,b	;volatile
 20032  0018E8  D00A               	goto	l371
 20033                           
 20034                           ; BSR set to: 13
 20035                           ;usb_device.c: 2866: {;usb_device.c: 2867: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 1;
 20036  0018EA  5134               	movf	52,w,b	;volatile
 20037  0018EC  0B0F               	andlw	15
 20038  0018EE  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20039  0018F0  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20040  0018F2  0D01               	mullw	1
 20041  0018F4  0E5E               	movlw	low _ep_data_out
 20042  0018F6  24F3               	addwf	prodl,w,c
 20043  0018F8  6ED9               	movwf	fsr2l,c
 20044  0018FA  0E01               	movlw	high _ep_data_out
 20045  0018FC  D00A               	goto	L11
 20046  0018FE                     l371:
 20047                           
 20048                           ;usb_device.c: 2869: else;usb_device.c: 2870: {;usb_device.c: 2871: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 1;
 20049                           
 20050                           ; BSR set to: 1
 20051  0018FE  010D               	movlb	13	; () banked
 20052  001900  5134               	movf	52,w,b	;volatile
 20053  001902  0B0F               	andlw	15
 20054  001904  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20055  001906  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20056  001908  0D01               	mullw	1
 20057  00190A  0E61               	movlw	low _ep_data_in
 20058  00190C  24F3               	addwf	prodl,w,c
 20059  00190E  6ED9               	movwf	fsr2l,c
 20060  001910  0E01               	movlw	high _ep_data_in
 20061  001912                     L11:
 20062  001912  20F4               	addwfc	prodh,w,c
 20063  001914  6EDA               	movwf	fsr2h,c
 20064  001916  0101               	movlb	1	; () banked
 20065  001918  82DF               	bsf	indf2,1,c
 20066  00191A                     l372:
 20067                           
 20068                           ;usb_device.c: 2872: };usb_device.c: 2873: };usb_device.c: 2876: p->STAT.Val |= 0x04;
 20069                           
 20070                           ; BSR set to: 1
 20071                           
 20072                           ; BSR set to: 1
 20073  00191A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20074  00191E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20075  001922  0E00               	movlw	0
 20076  001924  84DB               	bsf	plusw2,2,c
 20077                           
 20078                           ;usb_device.c: 2877: p->STAT.Val |= 0x80;
 20079  001926  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20080  00192A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20081  00192E  0E00               	movlw	0
 20082  001930  8EDB               	bsf	plusw2,7,c
 20083                           
 20084                           ;usb_device.c: 2878: }
 20085  001932  0012               	return	
 20086  001934                     l369:
 20087                           
 20088                           ;usb_device.c: 2879: else;usb_device.c: 2880: {;usb_device.c: 2884: p = (BDT_ENTRY*)(((u
      +                          intptr_t)p) ^ 0x0004);
 20089  001934  0E04               	movlw	4
 20090  001936  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 20091  001938  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 20092  00193A  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 20093  00193C  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 20094                           
 20095                           ;usb_device.c: 2886: if(p->STAT.UOWN == 1)
 20096  00193E  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20097  001942  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20098  001946  AEDF               	btfss	indf2,7,c
 20099  001948  D01B               	goto	l374
 20100                           
 20101                           ;usb_device.c: 2887: {;usb_device.c: 2890: p->STAT.Val &= (~0x80);
 20102  00194A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20103  00194E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20104  001952  0E7F               	movlw	127
 20105  001954  16DF               	andwf	indf2,f,c
 20106                           
 20107                           ;usb_device.c: 2891: p->STAT.Val |= 0x40;
 20108  001956  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20109  00195A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20110  00195E  0E00               	movlw	0
 20111  001960  8CDB               	bsf	plusw2,6,c
 20112                           
 20113                           ;usb_device.c: 2892: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20114  001962  0E00               	movlw	0
 20115  001964  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20116  001966  0E05               	movlw	5
 20117  001968  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20118  00196A  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20119  00196E  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20120  001972  0E00               	movlw	0
 20121  001974  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20122  001976  0E02               	movlw	2
 20123  001978  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20124  00197A  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20125                           
 20126                           ;usb_device.c: 2893: }
 20127  00197E  D006               	goto	l375
 20128  001980                     l374:
 20129                           
 20130                           ;usb_device.c: 2894: else;usb_device.c: 2895: {;usb_device.c: 2897: p->STAT.Val |= 0x40;
 20131  001980  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20132  001984  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20133  001988  0E00               	movlw	0
 20134  00198A  8CDB               	bsf	plusw2,6,c
 20135  00198C                     l375:
 20136                           
 20137                           ;usb_device.c: 2898: };usb_device.c: 2902: p = (BDT_ENTRY*)(((uintptr_t)p) ^ 0x0004);
 20138  00198C  0E04               	movlw	4
 20139  00198E  181C               	xorwf	USBStdFeatureReqHandler@p,w,c
 20140  001990  6E1C               	movwf	USBStdFeatureReqHandler@p,c
 20141  001992  501D               	movf	USBStdFeatureReqHandler@p+1,w,c
 20142  001994  6E1D               	movwf	USBStdFeatureReqHandler@p+1,c
 20143                           
 20144                           ;usb_device.c: 2908: if((current_ep_data.bits.transfer_terminated != 0) || (p->STAT.UOWN
      +                           == 1))
 20145  001996  B21B               	btfsc	USBStdFeatureReqHandler@current_ep_data,1,c
 20146  001998  D006               	goto	u8170
 20147  00199A  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20148  00199E  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20149  0019A2  AEDF               	btfss	indf2,7,c
 20150  0019A4  D030               	goto	l376
 20151  0019A6                     u8170:
 20152                           
 20153                           ;usb_device.c: 2909: {;usb_device.c: 2910: if(SetupPkt.EPDir == 0)
 20154  0019A6  010D               	movlb	13	; () banked
 20155  0019A8  BF34               	btfsc	52,7,b	;volatile
 20156  0019AA  D00A               	goto	l379
 20157                           
 20158                           ; BSR set to: 13
 20159                           ;usb_device.c: 2911: {;usb_device.c: 2912: ep_data_out[SetupPkt.EPNum].bits.transfer_ter
      +                          minated = 0;
 20160  0019AC  5134               	movf	52,w,b	;volatile
 20161  0019AE  0B0F               	andlw	15
 20162  0019B0  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20163  0019B2  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20164  0019B4  0D01               	mullw	1
 20165  0019B6  0E5E               	movlw	low _ep_data_out
 20166  0019B8  24F3               	addwf	prodl,w,c
 20167  0019BA  6ED9               	movwf	fsr2l,c
 20168  0019BC  0E01               	movlw	high _ep_data_out
 20169  0019BE  D00A               	goto	L12
 20170  0019C0                     l379:
 20171                           
 20172                           ;usb_device.c: 2914: else;usb_device.c: 2915: {;usb_device.c: 2916: ep_data_in[SetupPkt.
      +                          EPNum].bits.transfer_terminated = 0;
 20173                           
 20174                           ; BSR set to: 1
 20175  0019C0  010D               	movlb	13	; () banked
 20176  0019C2  5134               	movf	52,w,b	;volatile
 20177  0019C4  0B0F               	andlw	15
 20178  0019C6  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20179  0019C8  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20180  0019CA  0D01               	mullw	1
 20181  0019CC  0E61               	movlw	low _ep_data_in
 20182  0019CE  24F3               	addwf	prodl,w,c
 20183  0019D0  6ED9               	movwf	fsr2l,c
 20184  0019D2  0E01               	movlw	high _ep_data_in
 20185  0019D4                     L12:
 20186  0019D4  20F4               	addwfc	prodh,w,c
 20187  0019D6  6EDA               	movwf	fsr2h,c
 20188  0019D8  0101               	movlb	1	; () banked
 20189  0019DA  92DF               	bcf	indf2,1,c
 20190                           
 20191                           ; BSR set to: 1
 20192                           ;usb_device.c: 2917: };usb_device.c: 2919: p->STAT.Val &= ~(0x80 | 0x40 | 0x04);
 20193                           
 20194                           ; BSR set to: 1
 20195  0019DC  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20196  0019E0  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20197  0019E4  0E3B               	movlw	59
 20198  0019E6  16DF               	andwf	indf2,f,c
 20199                           
 20200                           ; BSR set to: 1
 20201                           ;usb_device.c: 2922: USER_USB_CALLBACK_EVENT_HANDLER(EVENT_TRANSFER_TERMINATED,p,sizeof(
      +                          p));
 20202  0019E8  0E00               	movlw	0
 20203  0019EA  6E11               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event+1,c
 20204  0019EC  0E05               	movlw	5
 20205  0019EE  6E10               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@event,c
 20206  0019F0  C01C  F012         	movff	USBStdFeatureReqHandler@p,USER_USB_CALLBACK_EVENT_HANDLER@pdata
 20207  0019F4  C01D  F013         	movff	USBStdFeatureReqHandler@p+1,USER_USB_CALLBACK_EVENT_HANDLER@pdata+1
 20208  0019F8  0E00               	movlw	0
 20209  0019FA  6E15               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size+1,c
 20210  0019FC  0E02               	movlw	2
 20211  0019FE  6E14               	movwf	USER_USB_CALLBACK_EVENT_HANDLER@size,c
 20212  001A00  EC02  F032         	call	_USER_USB_CALLBACK_EVENT_HANDLER	;wreg free
 20213                           
 20214                           ;usb_device.c: 2923: }
 20215  001A04  D006               	goto	l381
 20216  001A06                     l376:
 20217                           
 20218                           ;usb_device.c: 2924: else;usb_device.c: 2925: {;usb_device.c: 2927: p->STAT.Val &= ~(0x8
      +                          0 | 0x40 | 0x04);
 20219  001A06  C01C  FFD9         	movff	USBStdFeatureReqHandler@p,fsr2l
 20220  001A0A  C01D  FFDA         	movff	USBStdFeatureReqHandler@p+1,fsr2h
 20221  001A0E  0E3B               	movlw	59
 20222  001A10  16DF               	andwf	indf2,f,c
 20223  001A12                     l381:
 20224                           
 20225                           ;usb_device.c: 2928: };usb_device.c: 2975: pUEP = (unsigned char*)(&UEP0+SetupPkt.EPNum)
      +                          ;
 20226  001A12  010D               	movlb	13	; () banked
 20227  001A14  5134               	movf	52,w,b	;volatile
 20228  001A16  0B0F               	andlw	15
 20229  001A18  6E18               	movwf	??_USBStdFeatureReqHandler& (0+255),c
 20230  001A1A  5018               	movf	??_USBStdFeatureReqHandler,w,c
 20231  001A1C  0D01               	mullw	1
 20232  001A1E  0E26               	movlw	38
 20233  001A20  24F3               	addwf	prodl,w,c
 20234  001A22  6E19               	movwf	USBStdFeatureReqHandler@pUEP,c
 20235  001A24  0E0F               	movlw	15
 20236  001A26  20F4               	addwfc	prodh,w,c
 20237  001A28  6E1A               	movwf	USBStdFeatureReqHandler@pUEP+1,c
 20238                           
 20239                           ; BSR set to: 13
 20240                           ;usb_device.c: 2979: *pUEP &= ~0x0001;
 20241  001A2A  C019  FFD9         	movff	USBStdFeatureReqHandler@pUEP,fsr2l
 20242  001A2E  C01A  FFDA         	movff	USBStdFeatureReqHandler@pUEP+1,fsr2h
 20243  001A32  0EFE               	movlw	254
 20244  001A34  16DF               	andwf	indf2,f,c
 20245                           
 20246                           ; BSR set to: 13
 20247  001A36  0012               	return	
 20248  001A38                     __end_of_USBStdFeatureReqHandler:
 20249                           	opt stack 0
 20250                           tblptru	equ	0xFF8
 20251                           tblptrh	equ	0xFF7
 20252                           tblptrl	equ	0xFF6
 20253                           tablat	equ	0xFF5
 20254                           prodh	equ	0xFF4
 20255                           prodl	equ	0xFF3
 20256                           intcon	equ	0xFF2
 20257                           intcon2	equ	0xFF1
 20258                           intcon3	equ	0xFF0
 20259                           indf0	equ	0xFEF
 20260                           postinc0	equ	0xFEE
 20261                           fsr0h	equ	0xFEA
 20262                           fsr0l	equ	0xFE9
 20263                           wreg	equ	0xFE8
 20264                           indf1	equ	0xFE7
 20265                           postdec1	equ	0xFE5
 20266                           plusw1	equ	0xFE3
 20267                           fsr1h	equ	0xFE2
 20268                           fsr1l	equ	0xFE1
 20269                           indf2	equ	0xFDF
 20270                           postinc2	equ	0xFDE
 20271                           postdec2	equ	0xFDD
 20272                           plusw2	equ	0xFDB
 20273                           fsr2h	equ	0xFDA
 20274                           fsr2l	equ	0xFD9
 20275                           status	equ	0xFD8
 20276                           
 20277 ;; *************** function _USER_USB_CALLBACK_EVENT_HANDLER *****************
 20278 ;; Defined at:
 20279 ;;		line 54 in file "usb_events.c"
 20280 ;; Parameters:    Size  Location     Type
 20281 ;;  event           2   15[COMRAM] enum E6832
 20282 ;;  pdata           2   17[COMRAM] PTR void 
 20283 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 20284 ;;		 -> BDT(48), 
 20285 ;;  size            2   19[COMRAM] unsigned int 
 20286 ;; Auto vars:     Size  Location     Type
 20287 ;;		None
 20288 ;; Return value:  Size  Location     Type
 20289 ;;                  1    wreg      unsigned char 
 20290 ;; Registers used:
 20291 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 20292 ;; Tracked objects:
 20293 ;;		On entry : 0/0
 20294 ;;		On exit  : 0/0
 20295 ;;		Unchanged: 0/0
 20296 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20297 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20298 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20299 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20300 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20301 ;;Total ram usage:        8 bytes
 20302 ;; Hardware stack levels used:    1
 20303 ;; Hardware stack levels required when called:    3
 20304 ;; This function calls:
 20305 ;;		_APP_DeviceCustomHIDInitialize
 20306 ;;		_APP_DeviceMSDInitialize
 20307 ;;		_MSDTransferTerminated
 20308 ;;		_SYSTEM_Initialize
 20309 ;;		_USBCheckHIDRequest
 20310 ;;		_USBCheckMSDRequest
 20311 ;; This function is called by:
 20312 ;;		_USBDeviceTasks
 20313 ;;		_USBStdSetCfgHandler
 20314 ;;		_USBSuspend
 20315 ;;		_USBWakeFromSuspend
 20316 ;;		_USBCtrlTrfSetupHandler
 20317 ;;		_USBCheckStdRequest
 20318 ;;		_USBStdFeatureReqHandler
 20319 ;; This function uses a non-reentrant model
 20320 ;;
 20321                           
 20322                           	psect	text91
 20323  006404                     __ptext91:
 20324                           	opt stack 0
 20325  006404                     _USER_USB_CALLBACK_EVENT_HANDLER:
 20326                           	opt stack 26
 20327                           
 20328                           ;usb_events.c: 56: switch((int)event)
 20329                           
 20330                           ;incstack = 0
 20331  006404  D019               	goto	l800
 20332  006406                     
 20333                           ;usb_events.c: 78: SYSTEM_Initialize(SYSTEM_STATE_USB_SUSPEND);
 20334  006406  0E01               	movlw	1
 20335  006408  ECED  F039         	call	_SYSTEM_Initialize
 20336                           
 20337                           ;usb_events.c: 79: break;
 20338  00640C  0012               	return	
 20339  00640E                     
 20340                           ;usb_events.c: 89: SYSTEM_Initialize(SYSTEM_STATE_USB_RESUME);
 20341  00640E  0E02               	movlw	2
 20342  006410  ECED  F039         	call	_SYSTEM_Initialize
 20343                           
 20344                           ;usb_events.c: 90: break;
 20345  006414  0012               	return	
 20346  006416                     
 20347                           ;usb_events.c: 95: APP_DeviceCustomHIDInitialize();
 20348  006416  ECE8  F03C         	call	_APP_DeviceCustomHIDInitialize	;wreg free
 20349                           
 20350                           ;usb_events.c: 96: APP_DeviceMSDInitialize();
 20351  00641A  ECA8  F03F         	call	_APP_DeviceMSDInitialize	;wreg free
 20352                           
 20353                           ;usb_events.c: 100: break;
 20354                           
 20355                           ;usb_events.c: 99: case EVENT_SET_DESCRIPTOR:
 20356                           
 20357                           ;usb_events.c: 97: break;
 20358  00641E  0012               	return	
 20359  006420                     
 20360                           ;usb_events.c: 105: USBCheckHIDRequest();
 20361  006420  EC8E  F025         	call	_USBCheckHIDRequest	;wreg free
 20362                           
 20363                           ;usb_events.c: 108: USBCheckMSDRequest();
 20364  006424  EC0F  F02A         	call	_USBCheckMSDRequest	;wreg free
 20365                           
 20366                           ;usb_events.c: 112: break;
 20367                           
 20368                           ;usb_events.c: 111: case EVENT_BUS_ERROR:
 20369                           
 20370                           ;usb_events.c: 109: break;
 20371  006428  0012               	return	
 20372  00642A                     
 20373                           ;usb_events.c: 124: MSDTransferTerminated(pdata);
 20374  00642A  C012  F00C         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata,MSDTransferTerminated@handle
 20375  00642E  C013  F00D         	movff	USER_USB_CALLBACK_EVENT_HANDLER@pdata+1,MSDTransferTerminated@handle+1
 20376  006432  EC6C  F039         	call	_MSDTransferTerminated	;wreg free
 20377                           
 20378                           ;usb_events.c: 129: }
 20379                           
 20380                           ;usb_events.c: 128: break;
 20381                           
 20382                           ;usb_events.c: 127: default:
 20383                           
 20384                           ;usb_events.c: 125: break;
 20385  006436  0012               	return	
 20386  006438                     l800:
 20387  006438  C010  F016         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event,??_USER_USB_CALLBACK_EVENT_HANDLER
 20388  00643C  C011  F017         	movff	USER_USB_CALLBACK_EVENT_HANDLER@event+1,??_USER_USB_CALLBACK_EVENT_HANDLER+1
 20389                           
 20390                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 2 sub-sw
      +                          itches
 20391                           ; Switch size 1, requested type "space"
 20392                           ; Number of cases is 2, Range of values is 0 to 127
 20393                           ; switch strategies available:
 20394                           ; Name         Instructions Cycles
 20395                           ; simple_byte            7     4 (average)
 20396                           ;	Chosen strategy is simple_byte
 20397  006440  5017               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER+1,w,c
 20398  006442  0A00               	xorlw	0	; case 0
 20399  006444  B4D8               	btfsc	status,2,c
 20400  006446  D004               	goto	l15101
 20401  006448  0A7F               	xorlw	127	; case 127
 20402  00644A  A4D8               	btfss	status,2,c
 20403  00644C  0012               	return	
 20404  00644E  D01A               	goto	l15103
 20405  006450                     l15101:
 20406                           
 20407                           ; Switch size 1, requested type "space"
 20408                           ; Number of cases is 8, Range of values is 1 to 117
 20409                           ; switch strategies available:
 20410                           ; Name         Instructions Cycles
 20411                           ; simple_byte           25    13 (average)
 20412                           ;	Chosen strategy is simple_byte
 20413  006450  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20414  006452  0A01               	xorlw	1	; case 1
 20415  006454  B4D8               	btfsc	status,2,c
 20416  006456  D7DF               	goto	l806
 20417  006458  0A03               	xorlw	3	; case 2
 20418  00645A  B4D8               	btfsc	status,2,c
 20419  00645C  0012               	return	
 20420  00645E  0A01               	xorlw	1	; case 3
 20421  006460  B4D8               	btfsc	status,2,c
 20422  006462  D7DE               	goto	l808
 20423  006464  0A06               	xorlw	6	; case 5
 20424  006466  B4D8               	btfsc	status,2,c
 20425  006468  D7E0               	goto	l810
 20426  00646A  0A77               	xorlw	119	; case 114
 20427  00646C  B4D8               	btfsc	status,2,c
 20428  00646E  0012               	return	
 20429  006470  0A01               	xorlw	1	; case 115
 20430  006472  B4D8               	btfsc	status,2,c
 20431  006474  0012               	return	
 20432  006476  0A07               	xorlw	7	; case 116
 20433  006478  B4D8               	btfsc	status,2,c
 20434  00647A  D7C9               	goto	l805
 20435  00647C  0A01               	xorlw	1	; case 117
 20436  00647E  A4D8               	btfss	status,2,c
 20437  006480  0012               	return	
 20438  006482  D7C1               	goto	l804
 20439  006484                     l15103:
 20440                           
 20441                           ; Switch size 1, requested type "space"
 20442                           ; Number of cases is 1, Range of values is 255 to 255
 20443                           ; switch strategies available:
 20444                           ; Name         Instructions Cycles
 20445                           ; simple_byte            4     3 (average)
 20446                           ;	Chosen strategy is simple_byte
 20447  006484  5016               	movf	??_USER_USB_CALLBACK_EVENT_HANDLER,w,c
 20448  006486  0AFF               	xorlw	255	; case 255
 20449  006488  0012               	return	
 20450  00648A                     __end_of_USER_USB_CALLBACK_EVENT_HANDLER:
 20451                           	opt stack 0
 20452                           tblptru	equ	0xFF8
 20453                           tblptrh	equ	0xFF7
 20454                           tblptrl	equ	0xFF6
 20455                           tablat	equ	0xFF5
 20456                           prodh	equ	0xFF4
 20457                           prodl	equ	0xFF3
 20458                           intcon	equ	0xFF2
 20459                           intcon2	equ	0xFF1
 20460                           intcon3	equ	0xFF0
 20461                           indf0	equ	0xFEF
 20462                           postinc0	equ	0xFEE
 20463                           fsr0h	equ	0xFEA
 20464                           fsr0l	equ	0xFE9
 20465                           wreg	equ	0xFE8
 20466                           indf1	equ	0xFE7
 20467                           postdec1	equ	0xFE5
 20468                           plusw1	equ	0xFE3
 20469                           fsr1h	equ	0xFE2
 20470                           fsr1l	equ	0xFE1
 20471                           indf2	equ	0xFDF
 20472                           postinc2	equ	0xFDE
 20473                           postdec2	equ	0xFDD
 20474                           plusw2	equ	0xFDB
 20475                           fsr2h	equ	0xFDA
 20476                           fsr2l	equ	0xFD9
 20477                           status	equ	0xFD8
 20478                           
 20479 ;; *************** function _USBCheckMSDRequest *****************
 20480 ;; Defined at:
 20481 ;;		line 218 in file "usb_device_msd.c"
 20482 ;; Parameters:    Size  Location     Type
 20483 ;;		None
 20484 ;; Auto vars:     Size  Location     Type
 20485 ;;		None
 20486 ;; Return value:  Size  Location     Type
 20487 ;;                  1    wreg      void 
 20488 ;; Registers used:
 20489 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 20490 ;; Tracked objects:
 20491 ;;		On entry : 0/0
 20492 ;;		On exit  : 0/0
 20493 ;;		Unchanged: 0/0
 20494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20495 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20496 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20497 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20498 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20499 ;;Total ram usage:        4 bytes
 20500 ;; Hardware stack levels used:    1
 20501 ;; Hardware stack levels required when called:    1
 20502 ;; This function calls:
 20503 ;;		_USBTransferOnePacket
 20504 ;; This function is called by:
 20505 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20506 ;; This function uses a non-reentrant model
 20507 ;;
 20508                           
 20509                           	psect	text92
 20510  00541E                     __ptext92:
 20511                           	opt stack 0
 20512  00541E                     _USBCheckMSDRequest:
 20513                           	opt stack 27
 20514                           
 20515                           ;usb_device_msd.c: 220: if(SetupPkt.Recipient != (0x01))
 20516                           
 20517                           ;incstack = 0
 20518  00541E  010D               	movlb	13	; () banked
 20519  005420  5130               	movf	48,w,b	;volatile
 20520  005422  0B1F               	andlw	31
 20521  005424  06E8               	decf	wreg,f,c
 20522  005426  A4D8               	btfss	status,2,c
 20523  005428  0012               	return	
 20524                           
 20525                           ; BSR set to: 13
 20526                           ;usb_device_msd.c: 223: };usb_device_msd.c: 225: if(SetupPkt.bIntfID != 0x00)
 20527                           
 20528                           ; BSR set to: 13
 20529                           
 20530                           ; BSR set to: 13
 20531                           ;usb_device_msd.c: 221: {;usb_device_msd.c: 222: return;
 20532  00542A  5134               	movf	52,w,b	;volatile
 20533  00542C  A4D8               	btfss	status,2,c
 20534  00542E  0012               	return	
 20535  005430  D04E               	goto	l529
 20536  005432                     
 20537                           ; BSR set to: 13
 20538                           ;usb_device_msd.c: 235: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 0))
 20539                           
 20540                           ; BSR set to: 13
 20541  005432  5132               	movf	50,w,b	;volatile
 20542  005434  1133               	iorwf	51,w,b	;volatile
 20543  005436  A4D8               	btfss	status,2,c
 20544  005438  0012               	return	
 20545                           
 20546                           ; BSR set to: 13
 20547  00543A  5136               	movf	54,w,b	;volatile
 20548  00543C  1137               	iorwf	55,w,b	;volatile
 20549  00543E  A4D8               	btfss	status,2,c
 20550  005440  0012               	return	
 20551                           
 20552                           ; BSR set to: 13
 20553                           ;usb_device_msd.c: 238: };usb_device_msd.c: 246: MSD_State = 0x00;
 20554                           
 20555                           ; BSR set to: 13
 20556                           
 20557                           ; BSR set to: 13
 20558                           ;usb_device_msd.c: 236: {;usb_device_msd.c: 237: return;
 20559  005442  0E00               	movlw	0
 20560  005444  0100               	movlb	0	; () banked
 20561  005446  6FA2               	movwf	_MSD_State& (0+255),b
 20562                           
 20563                           ; BSR set to: 0
 20564                           ;usb_device_msd.c: 247: MSDCommandState = 0xFF;
 20565  005448  69A1               	setf	_MSDCommandState& (0+255),b
 20566                           
 20567                           ;usb_device_msd.c: 248: MSDReadState = 0x00;
 20568  00544A  0E00               	movlw	0
 20569  00544C  6FA0               	movwf	_MSDReadState& (0+255),b
 20570                           
 20571                           ;usb_device_msd.c: 249: MSDWriteState = 0x00;
 20572  00544E  0E00               	movlw	0
 20573  005450  6F9F               	movwf	_MSDWriteState& (0+255),b
 20574                           
 20575                           ;usb_device_msd.c: 250: MSDCBWValid = 1;
 20576  005452  0E01               	movlw	1
 20577  005454  6F9A               	movwf	_MSDCBWValid& (0+255),b
 20578                           
 20579                           ; BSR set to: 0
 20580                           
 20581                           ; BSR set to: 0
 20582                           
 20583                           ; BSR set to: 0
 20584                           
 20585                           ;usb_device_msd.c: 255: if(!((((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDTEntryIn[2u
      +                          ])) != 0x0000) && ((*(volatile uint8_t*)((0 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBDT
      +                          EntryIn[2u])) & 0x80) != 0x00)))
 20586  005456  C076  F00C         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2319
 20587  00545A  C077  F00D         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2319+1
 20588                           
 20589                           ; BSR set to: 0
 20590  00545E  500C               	movf	_USBCheckMSDRequest$2319,w,c
 20591  005460  100D               	iorwf	_USBCheckMSDRequest$2319+1,w,c
 20592  005462  B4D8               	btfsc	status,2,c
 20593  005464  D00A               	goto	u6590
 20594                           
 20595                           ; BSR set to: 0
 20596                           
 20597                           ; BSR set to: 0
 20598                           
 20599                           ; BSR set to: 0
 20600                           
 20601                           ; BSR set to: 0
 20602  005466  C076  F00E         	movff	_pBDTEntryOut+4,_USBCheckMSDRequest$2320
 20603  00546A  C077  F00F         	movff	_pBDTEntryOut+5,_USBCheckMSDRequest$2320+1
 20604                           
 20605                           ; BSR set to: 0
 20606                           
 20607                           ; BSR set to: 0
 20608  00546E  C00E  FFD9         	movff	_USBCheckMSDRequest$2320,fsr2l
 20609  005472  C00F  FFDA         	movff	_USBCheckMSDRequest$2320+1,fsr2h
 20610  005476  BEDF               	btfsc	indf2,7,c
 20611  005478  D00F               	goto	l534
 20612  00547A                     u6590:
 20613                           
 20614                           ; BSR set to: 0
 20615                           ;usb_device_msd.c: 256: {;usb_device_msd.c: 257: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 20616                           
 20617                           ; BSR set to: 0
 20618  00547A  0E00               	movlw	0
 20619  00547C  6E01               	movwf	USBTransferOnePacket@dir,c
 20620  00547E  0E40               	movlw	64
 20621  005480  6E02               	movwf	USBTransferOnePacket@data,c
 20622  005482  0E0D               	movlw	13
 20623  005484  6E03               	movwf	USBTransferOnePacket@data+1,c
 20624  005486  0E40               	movlw	64
 20625  005488  6E04               	movwf	USBTransferOnePacket@len,c
 20626  00548A  0E02               	movlw	2
 20627  00548C  EC2B  F023         	call	_USBTransferOnePacket
 20628  005490  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 20629  005494  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 20630  005498                     l534:
 20631                           
 20632                           ;usb_device_msd.c: 258: };usb_device_msd.c: 262: inPipes[0].info.Val = 0x00 | 0x80;
 20633  005498  0E80               	movlw	128
 20634  00549A  0100               	movlb	0	; () banked
 20635  00549C  6F69               	movwf	(_inPipes+3)& (0+255),b
 20636                           
 20637                           ;usb_device_msd.c: 263: break;
 20638  00549E  0012               	return	
 20639  0054A0                     
 20640                           ;usb_device_msd.c: 268: if((SetupPkt.wValue != 0) || (SetupPkt.wLength != 1))
 20641                           
 20642                           ; BSR set to: 0
 20643  0054A0  010D               	movlb	13	; () banked
 20644  0054A2  5132               	movf	50,w,b	;volatile
 20645  0054A4  1133               	iorwf	51,w,b	;volatile
 20646  0054A6  A4D8               	btfss	status,2,c
 20647  0054A8  0012               	return	
 20648                           
 20649                           ; BSR set to: 13
 20650  0054AA  0536               	decf	54,w,b	;volatile
 20651  0054AC  1137               	iorwf	55,w,b	;volatile
 20652  0054AE  A4D8               	btfss	status,2,c
 20653  0054B0  0012               	return	
 20654                           
 20655                           ; BSR set to: 13
 20656                           ;usb_device_msd.c: 271: };usb_device_msd.c: 275: CtrlTrfData[0] = 0u;
 20657                           
 20658                           ; BSR set to: 13
 20659                           
 20660                           ; BSR set to: 13
 20661                           ;usb_device_msd.c: 269: {;usb_device_msd.c: 270: break;
 20662  0054B2  0E00               	movlw	0
 20663  0054B4  6F38               	movwf	56,b	;volatile
 20664                           
 20665                           ; BSR set to: 13
 20666                           ;usb_device_msd.c: 276: { inPipes[0].pSrc.bRam = (uint8_t*)&CtrlTrfData[0]; inPipes[0].w
      +                          Count.Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20667  0054B6  0E38               	movlw	56
 20668  0054B8  0100               	movlb	0	; () banked
 20669  0054BA  6F66               	movwf	_inPipes& (0+255),b
 20670  0054BC  0E0D               	movlw	13
 20671  0054BE  6F67               	movwf	(_inPipes+1)& (0+255),b
 20672                           
 20673                           ; BSR set to: 0
 20674  0054C0  0E00               	movlw	0
 20675  0054C2  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20676  0054C4  0E01               	movlw	1
 20677  0054C6  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20678                           
 20679                           ; BSR set to: 0
 20680  0054C8  0EC1               	movlw	193
 20681  0054CA  6F69               	movwf	(_inPipes+3)& (0+255),b
 20682                           
 20683                           ; BSR set to: 0
 20684                           ;usb_device_msd.c: 278: }
 20685                           
 20686                           ;usb_device_msd.c: 277: break;
 20687  0054CC  0012               	return	
 20688  0054CE                     l529:
 20689                           
 20690                           ; BSR set to: 0
 20691  0054CE  010D               	movlb	13	; () banked
 20692  0054D0  5131               	movf	49,w,b	;volatile
 20693                           
 20694                           ; Switch size 1, requested type "space"
 20695                           ; Number of cases is 2, Range of values is 254 to 255
 20696                           ; switch strategies available:
 20697                           ; Name         Instructions Cycles
 20698                           ; simple_byte            7     4 (average)
 20699                           ;	Chosen strategy is simple_byte
 20700  0054D2  0AFE               	xorlw	254	; case 254
 20701  0054D4  B4D8               	btfsc	status,2,c
 20702  0054D6  D7E4               	goto	l546
 20703  0054D8  0A01               	xorlw	1	; case 255
 20704  0054DA  A4D8               	btfss	status,2,c
 20705  0054DC  0012               	return	
 20706  0054DE  D7A9               	goto	l530
 20707  0054E0                     __end_of_USBCheckMSDRequest:
 20708                           	opt stack 0
 20709                           tblptru	equ	0xFF8
 20710                           tblptrh	equ	0xFF7
 20711                           tblptrl	equ	0xFF6
 20712                           tablat	equ	0xFF5
 20713                           prodh	equ	0xFF4
 20714                           prodl	equ	0xFF3
 20715                           intcon	equ	0xFF2
 20716                           intcon2	equ	0xFF1
 20717                           intcon3	equ	0xFF0
 20718                           indf0	equ	0xFEF
 20719                           postinc0	equ	0xFEE
 20720                           fsr0h	equ	0xFEA
 20721                           fsr0l	equ	0xFE9
 20722                           wreg	equ	0xFE8
 20723                           indf1	equ	0xFE7
 20724                           postdec1	equ	0xFE5
 20725                           plusw1	equ	0xFE3
 20726                           fsr1h	equ	0xFE2
 20727                           fsr1l	equ	0xFE1
 20728                           indf2	equ	0xFDF
 20729                           postinc2	equ	0xFDE
 20730                           postdec2	equ	0xFDD
 20731                           plusw2	equ	0xFDB
 20732                           fsr2h	equ	0xFDA
 20733                           fsr2l	equ	0xFD9
 20734                           status	equ	0xFD8
 20735                           
 20736 ;; *************** function _USBCheckHIDRequest *****************
 20737 ;; Defined at:
 20738 ;;		line 153 in file "usb_device_hid.c"
 20739 ;; Parameters:    Size  Location     Type
 20740 ;;		None
 20741 ;; Auto vars:     Size  Location     Type
 20742 ;;		None
 20743 ;; Return value:  Size  Location     Type
 20744 ;;                  1    wreg      void 
 20745 ;; Registers used:
 20746 ;;		wreg, status,2, status,0
 20747 ;; Tracked objects:
 20748 ;;		On entry : 0/0
 20749 ;;		On exit  : 0/0
 20750 ;;		Unchanged: 0/0
 20751 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 20752 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20753 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20754 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20755 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 20756 ;;Total ram usage:        0 bytes
 20757 ;; Hardware stack levels used:    1
 20758 ;; This function calls:
 20759 ;;		Nothing
 20760 ;; This function is called by:
 20761 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 20762 ;; This function uses a non-reentrant model
 20763 ;;
 20764                           
 20765                           	psect	text93
 20766  004B1C                     __ptext93:
 20767                           	opt stack 0
 20768  004B1C                     _USBCheckHIDRequest:
 20769                           	opt stack 28
 20770                           
 20771                           ;usb_device_hid.c: 155: if(SetupPkt.Recipient != (0x01)) return;
 20772                           
 20773                           ;incstack = 0
 20774  004B1C  010D               	movlb	13	; () banked
 20775  004B1E  5130               	movf	48,w,b	;volatile
 20776  004B20  0B1F               	andlw	31
 20777  004B22  06E8               	decf	wreg,f,c
 20778  004B24  A4D8               	btfss	status,2,c
 20779  004B26  0012               	return	
 20780                           
 20781                           ; BSR set to: 13
 20782                           ;usb_device_hid.c: 156: if(SetupPkt.bIntfID != 0x00) return;
 20783                           
 20784                           ; BSR set to: 13
 20785                           
 20786                           ; BSR set to: 13
 20787  004B28  5134               	movf	52,w,b	;volatile
 20788  004B2A  A4D8               	btfss	status,2,c
 20789  004B2C  0012               	return	
 20790                           
 20791                           ; BSR set to: 13
 20792                           ;usb_device_hid.c: 163: if(SetupPkt.bRequest == 6)
 20793                           
 20794                           ; BSR set to: 13
 20795                           
 20796                           ; BSR set to: 13
 20797  004B2E  0E06               	movlw	6
 20798  004B30  1931               	xorwf	49,w,b	;volatile
 20799  004B32  B4D8               	btfsc	status,2,c
 20800  004B34  D01A               	goto	l411
 20801  004B36  D022               	goto	l414
 20802  004B38                     
 20803                           ; BSR set to: 13
 20804                           ;usb_device_hid.c: 168: if(USBActiveConfiguration == 1)
 20805                           
 20806                           ; BSR set to: 13
 20807  004B38  0100               	movlb	0	; () banked
 20808  004B3A  05B4               	decf	_USBActiveConfiguration& (0+255),w,b
 20809  004B3C  A4D8               	btfss	status,2,c
 20810  004B3E  D01E               	goto	l414
 20811                           
 20812                           ; BSR set to: 0
 20813                           ;usb_device_hid.c: 169: {;usb_device_hid.c: 170: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&configDescriptor1 + 18; inPipes[0].wCount.Val = sizeof(USB_HID_DSC)+3; inPipes[0].inf
      +                          o.Val = 0x40 | 0x80 | 0x00; };
 20814  004B40  0EB9               	movlw	low (_configDescriptor1+18)
 20815  004B42  6F66               	movwf	_inPipes& (0+255),b
 20816  004B44  0E8E               	movlw	high (_configDescriptor1+18)
 20817  004B46  6F67               	movwf	(_inPipes+1)& (0+255),b
 20818                           
 20819                           ; BSR set to: 0
 20820  004B48  0E00               	movlw	0
 20821  004B4A  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20822  004B4C  0E09               	movlw	9
 20823  004B4E  D00B               	goto	L13
 20824  004B50                     l9929:
 20825                           
 20826                           ; BSR set to: 0
 20827  004B50  0EC0               	movlw	192
 20828  004B52  6F69               	movwf	(_inPipes+3)& (0+255),b
 20829                           
 20830                           ; BSR set to: 0
 20831                           ;usb_device_hid.c: 174: };usb_device_hid.c: 175: break;
 20832  004B54  D013               	goto	l414
 20833  004B56                     
 20834                           ;usb_device_hid.c: 178: {;usb_device_hid.c: 179: { inPipes[0].pSrc.bRom = (const uint8_t
      +                          *)&hid_rpt01; inPipes[0].wCount.Val = 29; inPipes[0].info.Val = 0x40 | 0x80 | 0x00; };
 20835                           
 20836                           ; BSR set to: 0
 20837  004B56  0E6D               	movlw	low _hid_rpt01
 20838  004B58  0100               	movlb	0	; () banked
 20839  004B5A  6F66               	movwf	_inPipes& (0+255),b
 20840  004B5C  0E8F               	movlw	high _hid_rpt01
 20841  004B5E  6F67               	movwf	(_inPipes+1)& (0+255),b
 20842                           
 20843                           ; BSR set to: 0
 20844  004B60  0E00               	movlw	0
 20845  004B62  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20846  004B64  0E1D               	movlw	29
 20847  004B66                     L13:
 20848  004B66  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20849  004B68  D7F3               	goto	l9929
 20850  004B6A                     l411:
 20851                           
 20852                           ; BSR set to: 0
 20853  004B6A  010D               	movlb	13	; () banked
 20854  004B6C  5133               	movf	51,w,b	;volatile
 20855                           
 20856                           ; Switch size 1, requested type "space"
 20857                           ; Number of cases is 3, Range of values is 33 to 35
 20858                           ; switch strategies available:
 20859                           ; Name         Instructions Cycles
 20860                           ; simple_byte           10     6 (average)
 20861                           ;	Chosen strategy is simple_byte
 20862  004B6E  0A21               	xorlw	33	; case 33
 20863  004B70  B4D8               	btfsc	status,2,c
 20864  004B72  D7E2               	goto	l412
 20865  004B74  0A03               	xorlw	3	; case 34
 20866  004B76  B4D8               	btfsc	status,2,c
 20867  004B78  D7EE               	goto	l415
 20868  004B7A  0A01               	xorlw	1	; case 35
 20869  004B7C                     l414:
 20870                           
 20871                           ;usb_device_hid.c: 199: };usb_device_hid.c: 201: if(SetupPkt.RequestType != (0x20>>5))
 20872                           
 20873                           ; BSR set to: 13
 20874                           
 20875                           ; BSR set to: 13
 20876  004B7C  010D               	movlb	13	; () banked
 20877  004B7E  3930               	swapf	48,w,b	;volatile
 20878  004B80  32E8               	rrcf	wreg,f,c
 20879  004B82  0B03               	andlw	3
 20880  004B84  06E8               	decf	wreg,f,c
 20881  004B86  A4D8               	btfss	status,2,c
 20882  004B88  0012               	return	
 20883  004B8A  D024               	goto	l418
 20884  004B8C                     
 20885                           ; BSR set to: 13
 20886                           ;usb_device_hid.c: 219: { inPipes[0].pSrc.bRam = (uint8_t*)&idle_rate; inPipes[0].wCount
      +                          .Val = 1; inPipes[0].info.Val = 0x40 | 0x80 | 0x01; };
 20887                           
 20888                           ; BSR set to: 13
 20889  004B8C  0EB2               	movlw	low _idle_rate
 20890  004B8E  0100               	movlb	0	; () banked
 20891  004B90  6F66               	movwf	_inPipes& (0+255),b
 20892  004B92  0E00               	movlw	high _idle_rate
 20893  004B94  6F67               	movwf	(_inPipes+1)& (0+255),b
 20894                           
 20895                           ; BSR set to: 0
 20896  004B96  0E00               	movlw	0
 20897  004B98  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20898  004B9A  0E01               	movlw	1
 20899  004B9C  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20900                           
 20901                           ; BSR set to: 0
 20902  004B9E  0EC1               	movlw	193
 20903  004BA0  6F69               	movwf	(_inPipes+3)& (0+255),b
 20904                           
 20905                           ;usb_device_hid.c: 223: break;
 20906  004BA2  0012               	return	
 20907  004BA4                     
 20908                           ;usb_device_hid.c: 225: inPipes[0].info.Val = 0x00 | 0x80;
 20909                           
 20910                           ; BSR set to: 0
 20911  004BA4  0E80               	movlw	128
 20912  004BA6  0100               	movlb	0	; () banked
 20913  004BA8  6F69               	movwf	(_inPipes+3)& (0+255),b
 20914                           
 20915                           ; BSR set to: 0
 20916                           ;usb_device_hid.c: 226: idle_rate = SetupPkt.W_Value.byte.HB;
 20917  004BAA  CD33 F0B2          	movff	3379,_idle_rate	;volatile
 20918                           
 20919                           ;usb_device_hid.c: 227: ;;usb_device_hid.c: 228: break;
 20920  004BAE  0012               	return	
 20921  004BB0                     
 20922                           ;usb_device_hid.c: 230: { inPipes[0].pSrc.bRam = (uint8_t*)&active_protocol; inPipes[0].
      +                          wCount.Val = 1; inPipes[0].info.Val = 0x00 | 0x80 | 0x01; };
 20923                           
 20924                           ; BSR set to: 0
 20925  004BB0  0EB1               	movlw	low _active_protocol
 20926  004BB2  0100               	movlb	0	; () banked
 20927  004BB4  6F66               	movwf	_inPipes& (0+255),b
 20928  004BB6  0E00               	movlw	high _active_protocol
 20929  004BB8  6F67               	movwf	(_inPipes+1)& (0+255),b
 20930                           
 20931                           ; BSR set to: 0
 20932  004BBA  0E00               	movlw	0
 20933  004BBC  6F6B               	movwf	(_inPipes+5)& (0+255),b
 20934  004BBE  0E01               	movlw	1
 20935  004BC0  6F6A               	movwf	(_inPipes+4)& (0+255),b
 20936                           
 20937                           ; BSR set to: 0
 20938  004BC2  0E81               	movlw	129
 20939  004BC4  6F69               	movwf	(_inPipes+3)& (0+255),b
 20940                           
 20941                           ;usb_device_hid.c: 234: break;
 20942  004BC6  0012               	return	
 20943  004BC8                     
 20944                           ;usb_device_hid.c: 236: inPipes[0].info.Val = 0x00 | 0x80;
 20945                           
 20946                           ; BSR set to: 0
 20947  004BC8  0E80               	movlw	128
 20948  004BCA  0100               	movlb	0	; () banked
 20949  004BCC  6F69               	movwf	(_inPipes+3)& (0+255),b
 20950                           
 20951                           ; BSR set to: 0
 20952                           ;usb_device_hid.c: 237: active_protocol = SetupPkt.W_Value.byte.LB;
 20953  004BCE  CD32 F0B1          	movff	3378,_active_protocol	;volatile
 20954                           
 20955                           ; BSR set to: 0
 20956                           ;usb_device_hid.c: 239: }
 20957                           
 20958                           ;usb_device_hid.c: 238: break;
 20959  004BD2  0012               	return	
 20960  004BD4                     l418:
 20961                           
 20962                           ; BSR set to: 0
 20963  004BD4  010D               	movlb	13	; () banked
 20964  004BD6  5131               	movf	49,w,b	;volatile
 20965                           
 20966                           ; Switch size 1, requested type "space"
 20967                           ; Number of cases is 6, Range of values is 1 to 11
 20968                           ; switch strategies available:
 20969                           ; Name         Instructions Cycles
 20970                           ; simple_byte           19    10 (average)
 20971                           ;	Chosen strategy is simple_byte
 20972  004BD8  0A01               	xorlw	1	; case 1
 20973  004BDA  B4D8               	btfsc	status,2,c
 20974  004BDC  0012               	return	
 20975  004BDE  0A03               	xorlw	3	; case 2
 20976  004BE0  B4D8               	btfsc	status,2,c
 20977  004BE2  D7D4               	goto	l422
 20978  004BE4  0A01               	xorlw	1	; case 3
 20979  004BE6  B4D8               	btfsc	status,2,c
 20980  004BE8  D7E3               	goto	l424
 20981  004BEA  0A0A               	xorlw	10	; case 9
 20982  004BEC  B4D8               	btfsc	status,2,c
 20983  004BEE  0012               	return	
 20984  004BF0  0A03               	xorlw	3	; case 10
 20985  004BF2  B4D8               	btfsc	status,2,c
 20986  004BF4  D7D7               	goto	l423
 20987  004BF6  0A01               	xorlw	1	; case 11
 20988  004BF8  A4D8               	btfss	status,2,c
 20989  004BFA  0012               	return	
 20990  004BFC  D7E5               	goto	l425
 20991  004BFE                     __end_of_USBCheckHIDRequest:
 20992                           	opt stack 0
 20993                           tblptru	equ	0xFF8
 20994                           tblptrh	equ	0xFF7
 20995                           tblptrl	equ	0xFF6
 20996                           tablat	equ	0xFF5
 20997                           prodh	equ	0xFF4
 20998                           prodl	equ	0xFF3
 20999                           intcon	equ	0xFF2
 21000                           intcon2	equ	0xFF1
 21001                           intcon3	equ	0xFF0
 21002                           indf0	equ	0xFEF
 21003                           postinc0	equ	0xFEE
 21004                           fsr0h	equ	0xFEA
 21005                           fsr0l	equ	0xFE9
 21006                           wreg	equ	0xFE8
 21007                           indf1	equ	0xFE7
 21008                           postdec1	equ	0xFE5
 21009                           plusw1	equ	0xFE3
 21010                           fsr1h	equ	0xFE2
 21011                           fsr1l	equ	0xFE1
 21012                           indf2	equ	0xFDF
 21013                           postinc2	equ	0xFDE
 21014                           postdec2	equ	0xFDD
 21015                           plusw2	equ	0xFDB
 21016                           fsr2h	equ	0xFDA
 21017                           fsr2l	equ	0xFD9
 21018                           status	equ	0xFD8
 21019                           
 21020 ;; *************** function _SYSTEM_Initialize *****************
 21021 ;; Defined at:
 21022 ;;		line 80 in file "system.c"
 21023 ;; Parameters:    Size  Location     Type
 21024 ;;  state           1    wreg     enum E6623
 21025 ;; Auto vars:     Size  Location     Type
 21026 ;;  state           1    4[COMRAM] enum E6623
 21027 ;;  pll_startup_    2    2[COMRAM] unsigned int 
 21028 ;;  pll_startup_    2    0[COMRAM] unsigned int 
 21029 ;; Return value:  Size  Location     Type
 21030 ;;                  1    wreg      void 
 21031 ;; Registers used:
 21032 ;;		wreg, status,2, status,0
 21033 ;; Tracked objects:
 21034 ;;		On entry : 0/0
 21035 ;;		On exit  : 0/0
 21036 ;;		Unchanged: 0/0
 21037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21038 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21039 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21040 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21041 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21042 ;;Total ram usage:        5 bytes
 21043 ;; Hardware stack levels used:    1
 21044 ;; This function calls:
 21045 ;;		Nothing
 21046 ;; This function is called by:
 21047 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21048 ;;		_main
 21049 ;; This function uses a non-reentrant model
 21050 ;;
 21051                           
 21052                           	psect	text94
 21053  0073DA                     __ptext94:
 21054                           	opt stack 0
 21055  0073DA                     _SYSTEM_Initialize:
 21056                           	opt stack 28
 21057                           
 21058                           ;incstack = 0
 21059                           ;SYSTEM_Initialize@state stored from wreg
 21060  0073DA  6E05               	movwf	SYSTEM_Initialize@state,c
 21061                           
 21062                           ;system.c: 82: switch(state)
 21063  0073DC  D01D               	goto	l920
 21064  0073DE                     
 21065                           ;system.c: 91: {;system.c: 92: unsigned int pll_startup_counter = 600;
 21066  0073DE  0E02               	movlw	2
 21067  0073E0  6E02               	movwf	SYSTEM_Initialize@pll_startup_counter+1,c
 21068  0073E2  0E58               	movlw	88
 21069  0073E4  6E01               	movwf	SYSTEM_Initialize@pll_startup_counter,c
 21070                           
 21071                           ;system.c: 93: OSCTUNEbits.PLLEN = 1;
 21072  0073E6  8C9B               	bsf	3995,6,c	;volatile
 21073  0073E8                     l10115:
 21074  0073E8  0601               	decf	SYSTEM_Initialize@pll_startup_counter,f,c
 21075  0073EA  A0D8               	btfss	status,0,c
 21076  0073EC  0602               	decf	SYSTEM_Initialize@pll_startup_counter+1,f,c
 21077  0073EE  2801               	incf	SYSTEM_Initialize@pll_startup_counter,w,c
 21078  0073F0  E1FB               	bnz	l10115
 21079  0073F2  2802               	incf	SYSTEM_Initialize@pll_startup_counter+1,w,c
 21080  0073F4  B4D8               	btfsc	status,2,c
 21081  0073F6  0012               	return	
 21082  0073F8  D7F7               	goto	l923
 21083  0073FA                     
 21084                           ;system.c: 119: OSCCON = 0x70;
 21085  0073FA  0E70               	movlw	112
 21086  0073FC  6ED3               	movwf	4051,c	;volatile
 21087                           
 21088                           ;system.c: 125: {;system.c: 126: unsigned int pll_startup_counter = 800;
 21089  0073FE  0E03               	movlw	3
 21090  007400  6E04               	movwf	SYSTEM_Initialize@pll_startup_counter_3027+1,c
 21091  007402  0E20               	movlw	32
 21092  007404  6E03               	movwf	SYSTEM_Initialize@pll_startup_counter_3027,c
 21093  007406                     l10119:
 21094  007406  0603               	decf	SYSTEM_Initialize@pll_startup_counter_3027,f,c
 21095  007408  A0D8               	btfss	status,0,c
 21096  00740A  0604               	decf	SYSTEM_Initialize@pll_startup_counter_3027+1,f,c
 21097  00740C  2803               	incf	SYSTEM_Initialize@pll_startup_counter_3027,w,c
 21098  00740E  E1FB               	bnz	l10119
 21099  007410  2804               	incf	SYSTEM_Initialize@pll_startup_counter_3027+1,w,c
 21100  007412  B4D8               	btfsc	status,2,c
 21101  007414  0012               	return	
 21102  007416  D7F7               	goto	l929
 21103  007418                     l920:
 21104  007418  5005               	movf	SYSTEM_Initialize@state,w,c
 21105                           
 21106                           ; Switch size 1, requested type "space"
 21107                           ; Number of cases is 3, Range of values is 0 to 2
 21108                           ; switch strategies available:
 21109                           ; Name         Instructions Cycles
 21110                           ; simple_byte           10     6 (average)
 21111                           ;	Chosen strategy is simple_byte
 21112  00741A  0A00               	xorlw	0	; case 0
 21113  00741C  B4D8               	btfsc	status,2,c
 21114  00741E  D7DF               	goto	l921
 21115  007420  0A01               	xorlw	1	; case 1
 21116  007422  B4D8               	btfsc	status,2,c
 21117  007424  0012               	return	
 21118  007426  0A03               	xorlw	3	; case 2
 21119  007428  A4D8               	btfss	status,2,c
 21120  00742A  0012               	return	
 21121  00742C  D7E6               	goto	l927
 21122  00742E                     __end_of_SYSTEM_Initialize:
 21123                           	opt stack 0
 21124                           tblptru	equ	0xFF8
 21125                           tblptrh	equ	0xFF7
 21126                           tblptrl	equ	0xFF6
 21127                           tablat	equ	0xFF5
 21128                           prodh	equ	0xFF4
 21129                           prodl	equ	0xFF3
 21130                           intcon	equ	0xFF2
 21131                           intcon2	equ	0xFF1
 21132                           intcon3	equ	0xFF0
 21133                           indf0	equ	0xFEF
 21134                           postinc0	equ	0xFEE
 21135                           fsr0h	equ	0xFEA
 21136                           fsr0l	equ	0xFE9
 21137                           wreg	equ	0xFE8
 21138                           indf1	equ	0xFE7
 21139                           postdec1	equ	0xFE5
 21140                           plusw1	equ	0xFE3
 21141                           fsr1h	equ	0xFE2
 21142                           fsr1l	equ	0xFE1
 21143                           indf2	equ	0xFDF
 21144                           postinc2	equ	0xFDE
 21145                           postdec2	equ	0xFDD
 21146                           plusw2	equ	0xFDB
 21147                           fsr2h	equ	0xFDA
 21148                           fsr2l	equ	0xFD9
 21149                           status	equ	0xFD8
 21150                           
 21151 ;; *************** function _MSDTransferTerminated *****************
 21152 ;; Defined at:
 21153 ;;		line 1674 in file "usb_device_msd.c"
 21154 ;; Parameters:    Size  Location     Type
 21155 ;;  handle          2   11[COMRAM] PTR void 
 21156 ;;		 -> RAM(3759), USTATcopy(1), USBActiveConfiguration(1), NULL(0), 
 21157 ;;		 -> BDT(48), 
 21158 ;; Auto vars:     Size  Location     Type
 21159 ;;		None
 21160 ;; Return value:  Size  Location     Type
 21161 ;;                  1    wreg      void 
 21162 ;; Registers used:
 21163 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21164 ;; Tracked objects:
 21165 ;;		On entry : 0/0
 21166 ;;		On exit  : 0/0
 21167 ;;		Unchanged: 0/0
 21168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21169 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21170 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21171 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21172 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21173 ;;Total ram usage:        4 bytes
 21174 ;; Hardware stack levels used:    1
 21175 ;; Hardware stack levels required when called:    1
 21176 ;; This function calls:
 21177 ;;		_USBStallEndpoint
 21178 ;;		_USBTransferOnePacket
 21179 ;; This function is called by:
 21180 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21181 ;; This function uses a non-reentrant model
 21182 ;;
 21183                           
 21184                           	psect	text95
 21185  0072D8                     __ptext95:
 21186                           	opt stack 0
 21187  0072D8                     _MSDTransferTerminated:
 21188                           	opt stack 27
 21189                           
 21190                           ;usb_device_msd.c: 1676: if((MSDCBWValid) == 0)
 21191                           
 21192                           ;incstack = 0
 21193  0072D8  0100               	movlb	0	; () banked
 21194  0072DA  519A               	movf	_MSDCBWValid& (0+255),w,b
 21195  0072DC  A4D8               	btfss	status,2,c
 21196  0072DE  D00B               	goto	l764
 21197                           
 21198                           ; BSR set to: 0
 21199                           ;usb_device_msd.c: 1677: {;usb_device_msd.c: 1679: USBStallEndpoint(2u, 1);
 21200  0072E0  0E01               	movlw	1
 21201  0072E2  6E01               	movwf	USBStallEndpoint@dir,c
 21202  0072E4  0E02               	movlw	2
 21203  0072E6  EC1E  F021         	call	_USBStallEndpoint
 21204                           
 21205                           ;usb_device_msd.c: 1680: USBStallEndpoint(2u, 0);
 21206  0072EA  0E00               	movlw	0
 21207  0072EC  6E01               	movwf	USBStallEndpoint@dir,c
 21208  0072EE  0E02               	movlw	2
 21209  0072F0  EC1E  F021         	call	_USBStallEndpoint
 21210                           
 21211                           ;usb_device_msd.c: 1681: }
 21212  0072F4  0012               	return	
 21213  0072F6                     l764:
 21214  0072F6  C076  F00E         	movff	_pBDTEntryOut+4,_MSDTransferTerminated$2407
 21215  0072FA  C077  F00F         	movff	_pBDTEntryOut+5,_MSDTransferTerminated$2407+1
 21216  0072FE  500E               	movf	_MSDTransferTerminated$2407,w,c
 21217  007300  180C               	xorwf	MSDTransferTerminated@handle,w,c
 21218  007302  E114               	bnz	l767
 21219  007304  500F               	movf	_MSDTransferTerminated$2407+1,w,c
 21220  007306  180D               	xorwf	MSDTransferTerminated@handle+1,w,c
 21221  007308  A4D8               	btfss	status,2,c
 21222  00730A  0012               	return	
 21223                           
 21224                           ;usb_device_msd.c: 1687: {;usb_device_msd.c: 1688: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,(uint8_t*)&msd_cbw,64u);
 21225  00730C  0E00               	movlw	0
 21226  00730E  6E01               	movwf	USBTransferOnePacket@dir,c
 21227  007310  0E40               	movlw	64
 21228  007312  6E02               	movwf	USBTransferOnePacket@data,c
 21229  007314  0E0D               	movlw	13
 21230  007316  6E03               	movwf	USBTransferOnePacket@data+1,c
 21231  007318  0E40               	movlw	64
 21232  00731A  6E04               	movwf	USBTransferOnePacket@len,c
 21233  00731C  0E02               	movlw	2
 21234  00731E  EC2B  F023         	call	_USBTransferOnePacket
 21235  007322  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 21236  007326  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 21237  00732A  0012               	return	
 21238  00732C                     l767:
 21239  00732C  0012               	return		;funcret
 21240  00732E                     __end_of_MSDTransferTerminated:
 21241                           	opt stack 0
 21242                           tblptru	equ	0xFF8
 21243                           tblptrh	equ	0xFF7
 21244                           tblptrl	equ	0xFF6
 21245                           tablat	equ	0xFF5
 21246                           prodh	equ	0xFF4
 21247                           prodl	equ	0xFF3
 21248                           intcon	equ	0xFF2
 21249                           intcon2	equ	0xFF1
 21250                           intcon3	equ	0xFF0
 21251                           indf0	equ	0xFEF
 21252                           postinc0	equ	0xFEE
 21253                           fsr0h	equ	0xFEA
 21254                           fsr0l	equ	0xFE9
 21255                           wreg	equ	0xFE8
 21256                           indf1	equ	0xFE7
 21257                           postdec1	equ	0xFE5
 21258                           plusw1	equ	0xFE3
 21259                           fsr1h	equ	0xFE2
 21260                           fsr1l	equ	0xFE1
 21261                           indf2	equ	0xFDF
 21262                           postinc2	equ	0xFDE
 21263                           postdec2	equ	0xFDD
 21264                           plusw2	equ	0xFDB
 21265                           fsr2h	equ	0xFDA
 21266                           fsr2l	equ	0xFD9
 21267                           status	equ	0xFD8
 21268                           
 21269 ;; *************** function _APP_DeviceMSDInitialize *****************
 21270 ;; Defined at:
 21271 ;;		line 84 in file "app_device_msd.c"
 21272 ;; Parameters:    Size  Location     Type
 21273 ;;		None
 21274 ;; Auto vars:     Size  Location     Type
 21275 ;;		None
 21276 ;; Return value:  Size  Location     Type
 21277 ;;                  1    wreg      void 
 21278 ;; Registers used:
 21279 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21280 ;; Tracked objects:
 21281 ;;		On entry : 0/0
 21282 ;;		On exit  : 0/0
 21283 ;;		Unchanged: 0/0
 21284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21285 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21286 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21287 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21288 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21289 ;;Total ram usage:        0 bytes
 21290 ;; Hardware stack levels used:    1
 21291 ;; Hardware stack levels required when called:    2
 21292 ;; This function calls:
 21293 ;;		_USBEnableEndpoint
 21294 ;;		_USBMSDInit
 21295 ;; This function is called by:
 21296 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21297 ;; This function uses a non-reentrant model
 21298 ;;
 21299                           
 21300                           	psect	text96
 21301  007F50                     __ptext96:
 21302                           	opt stack 0
 21303  007F50                     _APP_DeviceMSDInitialize:
 21304                           	opt stack 26
 21305                           
 21306                           ;app_device_msd.c: 87: USBEnableEndpoint(2u,0x02|0x04|0x10|0x08);
 21307                           
 21308                           ;incstack = 0
 21309  007F50  0E1E               	movlw	30
 21310  007F52  6E09               	movwf	USBEnableEndpoint@options,c
 21311  007F54  0E02               	movlw	2
 21312  007F56  EC08  F03C         	call	_USBEnableEndpoint
 21313                           
 21314                           ;app_device_msd.c: 93: USBMSDInit();
 21315  007F5A  EC25  F022         	call	_USBMSDInit	;wreg free
 21316  007F5E  0012               	return		;funcret
 21317  007F60                     __end_of_APP_DeviceMSDInitialize:
 21318                           	opt stack 0
 21319                           tblptru	equ	0xFF8
 21320                           tblptrh	equ	0xFF7
 21321                           tblptrl	equ	0xFF6
 21322                           tablat	equ	0xFF5
 21323                           prodh	equ	0xFF4
 21324                           prodl	equ	0xFF3
 21325                           intcon	equ	0xFF2
 21326                           intcon2	equ	0xFF1
 21327                           intcon3	equ	0xFF0
 21328                           indf0	equ	0xFEF
 21329                           postinc0	equ	0xFEE
 21330                           fsr0h	equ	0xFEA
 21331                           fsr0l	equ	0xFE9
 21332                           wreg	equ	0xFE8
 21333                           indf1	equ	0xFE7
 21334                           postdec1	equ	0xFE5
 21335                           plusw1	equ	0xFE3
 21336                           fsr1h	equ	0xFE2
 21337                           fsr1l	equ	0xFE1
 21338                           indf2	equ	0xFDF
 21339                           postinc2	equ	0xFDE
 21340                           postdec2	equ	0xFDD
 21341                           plusw2	equ	0xFDB
 21342                           fsr2h	equ	0xFDA
 21343                           fsr2l	equ	0xFD9
 21344                           status	equ	0xFD8
 21345                           
 21346 ;; *************** function _USBMSDInit *****************
 21347 ;; Defined at:
 21348 ;;		line 142 in file "usb_device_msd.c"
 21349 ;; Parameters:    Size  Location     Type
 21350 ;;		None
 21351 ;; Auto vars:     Size  Location     Type
 21352 ;;		None
 21353 ;; Return value:  Size  Location     Type
 21354 ;;                  1    wreg      void 
 21355 ;; Registers used:
 21356 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 21357 ;; Tracked objects:
 21358 ;;		On entry : 0/0
 21359 ;;		On exit  : 0/0
 21360 ;;		Unchanged: 0/0
 21361 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21362 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21363 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21364 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21365 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21366 ;;Total ram usage:        3 bytes
 21367 ;; Hardware stack levels used:    1
 21368 ;; Hardware stack levels required when called:    1
 21369 ;; This function calls:
 21370 ;;		_ExternalFlash_MediaDetect
 21371 ;;		_ExternalFlash_MediaInitialize
 21372 ;;		_ResetSenseData
 21373 ;;		_USBTransferOnePacket
 21374 ;; This function is called by:
 21375 ;;		_APP_DeviceMSDInitialize
 21376 ;; This function uses a non-reentrant model
 21377 ;;
 21378                           
 21379                           	psect	text97
 21380  00444A                     __ptext97:
 21381                           	opt stack 0
 21382  00444A                     _USBMSDInit:
 21383                           	opt stack 26
 21384                           
 21385                           ;usb_device_msd.c: 147: USBMSDInHandle = ((1 == 0)?((void*)pBDTEntryOut[2u]):((void*)pBD
      +                          TEntryIn[2u]));
 21386                           
 21387                           ;incstack = 0
 21388  00444A  0E00               	movlw	0
 21389  00444C  6E01               	movwf	USBTransferOnePacket@dir,c
 21390  00444E  0E40               	movlw	64
 21391  004450  6E02               	movwf	USBTransferOnePacket@data,c
 21392  004452  0E0D               	movlw	13
 21393  004454  6E03               	movwf	USBTransferOnePacket@data+1,c
 21394  004456  0E40               	movlw	64
 21395  004458  6E04               	movwf	USBTransferOnePacket@len,c
 21396  00445A  0E02               	movlw	2
 21397  00445C  EC2B  F023         	call	_USBTransferOnePacket
 21398  004460  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 21399  004464  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 21400  004468  C070  F088         	movff	_pBDTEntryIn+4,_USBMSDInHandle
 21401  00446C  C071  F089         	movff	_pBDTEntryIn+5,_USBMSDInHandle+1
 21402                           
 21403                           ;usb_device_msd.c: 148: MSD_State = 0x00;
 21404  004470  0E00               	movlw	0
 21405  004472  0100               	movlb	0	; () banked
 21406  004474  6FA2               	movwf	_MSD_State& (0+255),b
 21407                           
 21408                           ; BSR set to: 0
 21409                           ;usb_device_msd.c: 149: MSDCommandState = 0xFF;
 21410  004476  69A1               	setf	_MSDCommandState& (0+255),b
 21411                           
 21412                           ; BSR set to: 0
 21413                           ;usb_device_msd.c: 150: MSDReadState = 0x00;
 21414  004478  0E00               	movlw	0
 21415  00447A  6FA0               	movwf	_MSDReadState& (0+255),b
 21416                           
 21417                           ; BSR set to: 0
 21418                           ;usb_device_msd.c: 151: MSDWriteState = 0x00;
 21419  00447C  0E00               	movlw	0
 21420  00447E  6F9F               	movwf	_MSDWriteState& (0+255),b
 21421                           
 21422                           ; BSR set to: 0
 21423                           ;usb_device_msd.c: 152: MSDHostNoData = 0;
 21424  004480  0E00               	movlw	0
 21425  004482  6F9B               	movwf	_MSDHostNoData& (0+255),b
 21426                           
 21427                           ; BSR set to: 0
 21428                           ;usb_device_msd.c: 153: gblNumBLKS.Val = 0;
 21429  004484  0E00               	movlw	0
 21430  004486  0101               	movlb	1	; () banked
 21431  004488  6F50               	movwf	_gblNumBLKS& (0+255),b
 21432  00448A  0E00               	movlw	0
 21433  00448C  6F51               	movwf	(_gblNumBLKS+1)& (0+255),b
 21434  00448E  0E00               	movlw	0
 21435  004490  6F52               	movwf	(_gblNumBLKS+2)& (0+255),b
 21436  004492  0E00               	movlw	0
 21437  004494  6F53               	movwf	(_gblNumBLKS+3)& (0+255),b
 21438                           
 21439                           ; BSR set to: 1
 21440                           ;usb_device_msd.c: 154: gblBLKLen.Val = 0;
 21441  004496  0E00               	movlw	0
 21442  004498  6F4C               	movwf	_gblBLKLen& (0+255),b
 21443  00449A  0E00               	movlw	0
 21444  00449C  6F4D               	movwf	(_gblBLKLen+1)& (0+255),b
 21445  00449E  0E00               	movlw	0
 21446  0044A0  6F4E               	movwf	(_gblBLKLen+2)& (0+255),b
 21447  0044A2  0E00               	movlw	0
 21448  0044A4  6F4F               	movwf	(_gblBLKLen+3)& (0+255),b
 21449                           
 21450                           ; BSR set to: 1
 21451                           ;usb_device_msd.c: 155: MSDCBWValid = 1;
 21452  0044A6  0E01               	movlw	1
 21453  0044A8  0100               	movlb	0	; () banked
 21454  0044AA  6F9A               	movwf	_MSDCBWValid& (0+255),b
 21455                           
 21456                           ; BSR set to: 0
 21457                           ;usb_device_msd.c: 157: gblMediaPresent = 0;
 21458  0044AC  0E00               	movlw	0
 21459  0044AE  0101               	movlb	1	; () banked
 21460  0044B0  6F73               	movwf	(_gblMediaPresent+1)& (0+255),b
 21461  0044B2  0E00               	movlw	0
 21462  0044B4  6F72               	movwf	_gblMediaPresent& (0+255),b
 21463                           
 21464                           ; BSR set to: 1
 21465                           ;usb_device_msd.c: 160: for(gblCBW.bCBWLUN=0;gblCBW.bCBWLUN<(0u + 1);gblCBW.bCBWLUN++)
 21466  0044B6  0E00               	movlw	0
 21467  0044B8  6F0D               	movwf	(_gblCBW+13)& (0+255),b
 21468  0044BA  D046               	goto	l518
 21469  0044BC                     
 21470                           ; BSR set to: 1
 21471                           ;usb_device_msd.c: 161: {;usb_device_msd.c: 163: SoftDetach[gblCBW.bCBWLUN] = 0;
 21472                           
 21473                           ; BSR set to: 1
 21474  0044BC  510D               	movf	(_gblCBW+13)& (0+255),w,b
 21475  0044BE  0D01               	mullw	1
 21476  0044C0  0E9C               	movlw	low _SoftDetach
 21477  0044C2  24F3               	addwf	prodl,w,c
 21478  0044C4  6ED9               	movwf	fsr2l,c
 21479  0044C6  0E00               	movlw	high _SoftDetach
 21480  0044C8  20F4               	addwfc	prodh,w,c
 21481  0044CA  6EDA               	movwf	fsr2h,c
 21482  0044CC  0E00               	movlw	0
 21483  0044CE  6EDF               	movwf	indf2,c
 21484                           
 21485                           ; BSR set to: 1
 21486                           ;usb_device_msd.c: 166: if(LUN[0].MediaDetect(LUN[0].mediaParameters))
 21487  0044D0  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 21488  0044D4  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 21489  0044D8  D801               	call	u6328
 21490  0044DA  D009               	goto	u6329
 21491  0044DC                     u6328:
 21492  0044DC  0005               	push	
 21493  0044DE  6EFA               	movwf	pclath,c
 21494  0044E0  51EA               	movf	(_LUN+6)& (0+255),w,b
 21495  0044E2  6EFD               	movwf	tosl,c
 21496  0044E4  51EB               	movf	(_LUN+7)& (0+255),w,b
 21497  0044E6  6EFE               	movwf	tosh,c
 21498  0044E8  6AFF               	clrf	tosu,c
 21499  0044EA  50FA               	movf	pclath,w,c
 21500  0044EC  0012               	return		;indir
 21501  0044EE                     u6329:
 21502  0044EE  0900               	iorlw	0
 21503  0044F0  B4D8               	btfsc	status,2,c
 21504  0044F2  D026               	goto	l521
 21505                           
 21506                           ;usb_device_msd.c: 167: {;usb_device_msd.c: 169: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 21507  0044F4  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 21508  0044F8  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 21509  0044FC  D801               	call	u6348
 21510  0044FE  D00A               	goto	u6349
 21511  004500                     u6348:
 21512  004500  0005               	push	
 21513  004502  6EFA               	movwf	pclath,c
 21514  004504  0101               	movlb	1	; () banked
 21515  004506  51E4               	movf	_LUN& (0+255),w,b
 21516  004508  6EFD               	movwf	tosl,c
 21517  00450A  51E5               	movf	(_LUN+1)& (0+255),w,b
 21518  00450C  6EFE               	movwf	tosh,c
 21519  00450E  6AFF               	clrf	tosu,c
 21520  004510  50FA               	movf	pclath,w,c
 21521  004512  0012               	return		;indir
 21522  004514                     u6349:
 21523  004514  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 21524  004516  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 21525  004518  B4D8               	btfsc	status,2,c
 21526  00451A  D012               	goto	l521
 21527                           
 21528                           ;usb_device_msd.c: 170: {;usb_device_msd.c: 173: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 21529  00451C  C10D  F00C         	movff	_gblCBW+13,??_USBMSDInit
 21530  004520  0E01               	movlw	1
 21531  004522  6E0D               	movwf	(??_USBMSDInit+1)& (0+255),c
 21532  004524  0E00               	movlw	0
 21533  004526  6E0E               	movwf	(??_USBMSDInit+2)& (0+255),c
 21534  004528  2A0C               	incf	??_USBMSDInit,f,c
 21535  00452A  D003               	goto	u6364
 21536  00452C                     u6365:
 21537  00452C  90D8               	bcf	status,0,c
 21538  00452E  360D               	rlcf	??_USBMSDInit+1,f,c
 21539  004530  360E               	rlcf	??_USBMSDInit+2,f,c
 21540  004532                     u6364:
 21541  004532  2E0C               	decfsz	??_USBMSDInit,f,c
 21542  004534  D7FB               	goto	u6365
 21543  004536  500D               	movf	??_USBMSDInit+1,w,c
 21544  004538  0101               	movlb	1	; () banked
 21545  00453A  1372               	iorwf	_gblMediaPresent& (0+255),f,b
 21546  00453C  500E               	movf	??_USBMSDInit+2,w,c
 21547  00453E  1373               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 21548  004540                     l521:
 21549                           
 21550                           ;usb_device_msd.c: 174: };usb_device_msd.c: 175: };usb_device_msd.c: 176: ResetSenseData
      +                          ();
 21551                           
 21552                           ; BSR set to: 1
 21553                           
 21554                           ; BSR set to: 1
 21555  004540  EC22  F037         	call	_ResetSenseData	;wreg free
 21556  004544  0101               	movlb	1	; () banked
 21557  004546  2B0D               	incf	(_gblCBW+13)& (0+255),f,b
 21558  004548                     l518:
 21559                           
 21560                           ; BSR set to: 1
 21561                           
 21562                           ; BSR set to: 1
 21563  004548  510D               	movf	(_gblCBW+13)& (0+255),w,b
 21564  00454A  A4D8               	btfss	status,2,c
 21565  00454C  0012               	return	
 21566  00454E  D7B6               	goto	l519
 21567  004550                     __end_of_USBMSDInit:
 21568                           	opt stack 0
 21569                           tosu	equ	0xFFF
 21570                           tosh	equ	0xFFE
 21571                           tosl	equ	0xFFD
 21572                           pclath	equ	0xFFA
 21573                           tblptru	equ	0xFF8
 21574                           tblptrh	equ	0xFF7
 21575                           tblptrl	equ	0xFF6
 21576                           tablat	equ	0xFF5
 21577                           prodh	equ	0xFF4
 21578                           prodl	equ	0xFF3
 21579                           intcon	equ	0xFF2
 21580                           intcon2	equ	0xFF1
 21581                           intcon3	equ	0xFF0
 21582                           indf0	equ	0xFEF
 21583                           postinc0	equ	0xFEE
 21584                           fsr0h	equ	0xFEA
 21585                           fsr0l	equ	0xFE9
 21586                           wreg	equ	0xFE8
 21587                           indf1	equ	0xFE7
 21588                           postdec1	equ	0xFE5
 21589                           plusw1	equ	0xFE3
 21590                           fsr1h	equ	0xFE2
 21591                           fsr1l	equ	0xFE1
 21592                           indf2	equ	0xFDF
 21593                           postinc2	equ	0xFDE
 21594                           postdec2	equ	0xFDD
 21595                           plusw2	equ	0xFDB
 21596                           fsr2h	equ	0xFDA
 21597                           fsr2l	equ	0xFD9
 21598                           status	equ	0xFD8
 21599                           
 21600 ;; *************** function _APP_DeviceCustomHIDInitialize *****************
 21601 ;; Defined at:
 21602 ;;		line 47 in file "app_device_custom_hid.c"
 21603 ;; Parameters:    Size  Location     Type
 21604 ;;		None
 21605 ;; Auto vars:     Size  Location     Type
 21606 ;;		None
 21607 ;; Return value:  Size  Location     Type
 21608 ;;                  1    wreg      void 
 21609 ;; Registers used:
 21610 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21611 ;; Tracked objects:
 21612 ;;		On entry : 0/0
 21613 ;;		On exit  : 0/0
 21614 ;;		Unchanged: 0/0
 21615 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21616 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21617 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21618 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21619 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21620 ;;Total ram usage:        0 bytes
 21621 ;; Hardware stack levels used:    1
 21622 ;; Hardware stack levels required when called:    2
 21623 ;; This function calls:
 21624 ;;		_USBEnableEndpoint
 21625 ;;		_USBTransferOnePacket
 21626 ;; This function is called by:
 21627 ;;		_USER_USB_CALLBACK_EVENT_HANDLER
 21628 ;; This function uses a non-reentrant model
 21629 ;;
 21630                           
 21631                           	psect	text98
 21632  0079D0                     __ptext98:
 21633                           	opt stack 0
 21634  0079D0                     _APP_DeviceCustomHIDInitialize:
 21635                           	opt stack 26
 21636                           
 21637                           ;app_device_custom_hid.c: 51: USBInHandle = 0;
 21638                           
 21639                           ; BSR set to: 1
 21640                           ;incstack = 0
 21641  0079D0  0E00               	movlw	0
 21642  0079D2  0101               	movlb	1	; () banked
 21643  0079D4  6F70               	movwf	_USBInHandle& (0+255),b
 21644  0079D6  0E00               	movlw	0
 21645  0079D8  6F71               	movwf	(_USBInHandle+1)& (0+255),b
 21646                           
 21647                           ; BSR set to: 1
 21648                           ;app_device_custom_hid.c: 54: USBEnableEndpoint(1, 0x02|0x04|0x10|0x08);
 21649  0079DA  0E1E               	movlw	30
 21650  0079DC  6E09               	movwf	USBEnableEndpoint@options,c
 21651  0079DE  0E01               	movlw	1
 21652  0079E0  EC08  F03C         	call	_USBEnableEndpoint
 21653                           
 21654                           ;app_device_custom_hid.c: 57: USBOutHandle = (volatile void*)USBTransferOnePacket(1,0,(u
      +                          int8_t*)&ReceivedDataBuffer,64);
 21655  0079E4  0E00               	movlw	0
 21656  0079E6  6E01               	movwf	USBTransferOnePacket@dir,c
 21657  0079E8  0E80               	movlw	low _ReceivedDataBuffer
 21658  0079EA  6E02               	movwf	USBTransferOnePacket@data,c
 21659  0079EC  0E02               	movlw	high _ReceivedDataBuffer
 21660  0079EE  6E03               	movwf	USBTransferOnePacket@data+1,c
 21661  0079F0  0E40               	movlw	64
 21662  0079F2  6E04               	movwf	USBTransferOnePacket@len,c
 21663  0079F4  0E01               	movlw	1
 21664  0079F6  EC2B  F023         	call	_USBTransferOnePacket
 21665  0079FA  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 21666  0079FE  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 21667  007A02  0012               	return		;funcret
 21668  007A04                     __end_of_APP_DeviceCustomHIDInitialize:
 21669                           	opt stack 0
 21670                           tosu	equ	0xFFF
 21671                           tosh	equ	0xFFE
 21672                           tosl	equ	0xFFD
 21673                           pclath	equ	0xFFA
 21674                           tblptru	equ	0xFF8
 21675                           tblptrh	equ	0xFF7
 21676                           tblptrl	equ	0xFF6
 21677                           tablat	equ	0xFF5
 21678                           prodh	equ	0xFF4
 21679                           prodl	equ	0xFF3
 21680                           intcon	equ	0xFF2
 21681                           intcon2	equ	0xFF1
 21682                           intcon3	equ	0xFF0
 21683                           indf0	equ	0xFEF
 21684                           postinc0	equ	0xFEE
 21685                           fsr0h	equ	0xFEA
 21686                           fsr0l	equ	0xFE9
 21687                           wreg	equ	0xFE8
 21688                           indf1	equ	0xFE7
 21689                           postdec1	equ	0xFE5
 21690                           plusw1	equ	0xFE3
 21691                           fsr1h	equ	0xFE2
 21692                           fsr1l	equ	0xFE1
 21693                           indf2	equ	0xFDF
 21694                           postinc2	equ	0xFDE
 21695                           postdec2	equ	0xFDD
 21696                           plusw2	equ	0xFDB
 21697                           fsr2h	equ	0xFDA
 21698                           fsr2l	equ	0xFD9
 21699                           status	equ	0xFD8
 21700                           
 21701 ;; *************** function _USBEnableEndpoint *****************
 21702 ;; Defined at:
 21703 ;;		line 878 in file "usb_device.c"
 21704 ;; Parameters:    Size  Location     Type
 21705 ;;  ep              1    wreg     unsigned char 
 21706 ;;  options         1    8[COMRAM] unsigned char 
 21707 ;; Auto vars:     Size  Location     Type
 21708 ;;  ep              1   11[COMRAM] unsigned char 
 21709 ;;  p               2    9[COMRAM] PTR unsigned char 
 21710 ;;		 -> UEP0(1), 
 21711 ;; Return value:  Size  Location     Type
 21712 ;;                  1    wreg      void 
 21713 ;; Registers used:
 21714 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21715 ;; Tracked objects:
 21716 ;;		On entry : 0/0
 21717 ;;		On exit  : 0/0
 21718 ;;		Unchanged: 0/0
 21719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21720 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21721 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21723 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21724 ;;Total ram usage:        4 bytes
 21725 ;; Hardware stack levels used:    1
 21726 ;; Hardware stack levels required when called:    1
 21727 ;; This function calls:
 21728 ;;		_USBConfigureEndpoint
 21729 ;; This function is called by:
 21730 ;;		_APP_DeviceCustomHIDInitialize
 21731 ;;		_APP_DeviceMSDInitialize
 21732 ;; This function uses a non-reentrant model
 21733 ;;
 21734                           
 21735                           	psect	text99
 21736  007810                     __ptext99:
 21737                           	opt stack 0
 21738  007810                     _USBEnableEndpoint:
 21739                           	opt stack 26
 21740                           
 21741                           ;incstack = 0
 21742                           ;USBEnableEndpoint@ep stored from wreg
 21743  007810  6E0C               	movwf	USBEnableEndpoint@ep,c
 21744                           
 21745                           ;usb_device.c: 880: unsigned char* p;;usb_device.c: 884: if(options & 0x04)
 21746  007812  A409               	btfss	USBEnableEndpoint@options,2,c
 21747  007814  D005               	goto	l178
 21748                           
 21749                           ;usb_device.c: 885: {;usb_device.c: 886: USBConfigureEndpoint(ep, 0);
 21750  007816  0E00               	movlw	0
 21751  007818  6E01               	movwf	USBConfigureEndpoint@direction,c
 21752  00781A  500C               	movf	USBEnableEndpoint@ep,w,c
 21753  00781C  EC0B  F030         	call	_USBConfigureEndpoint
 21754  007820                     l178:
 21755                           
 21756                           ;usb_device.c: 887: };usb_device.c: 888: if(options & 0x02)
 21757  007820  A209               	btfss	USBEnableEndpoint@options,1,c
 21758  007822  D005               	goto	l179
 21759                           
 21760                           ;usb_device.c: 889: {;usb_device.c: 890: USBConfigureEndpoint(ep, 1);
 21761  007824  0E01               	movlw	1
 21762  007826  6E01               	movwf	USBConfigureEndpoint@direction,c
 21763  007828  500C               	movf	USBEnableEndpoint@ep,w,c
 21764  00782A  EC0B  F030         	call	_USBConfigureEndpoint
 21765  00782E                     l179:
 21766                           
 21767                           ;usb_device.c: 891: };usb_device.c: 899: p = (unsigned char*)(&UEP0+ep);
 21768  00782E  500C               	movf	USBEnableEndpoint@ep,w,c
 21769  007830  0D01               	mullw	1
 21770  007832  0E26               	movlw	38
 21771  007834  24F3               	addwf	prodl,w,c
 21772  007836  6E0A               	movwf	USBEnableEndpoint@p,c
 21773  007838  0E0F               	movlw	15
 21774  00783A  20F4               	addwfc	prodh,w,c
 21775  00783C  6E0B               	movwf	USBEnableEndpoint@p+1,c
 21776                           
 21777                           ;usb_device.c: 901: *p = options;
 21778  00783E  C00A  FFD9         	movff	USBEnableEndpoint@p,fsr2l
 21779  007842  C00B  FFDA         	movff	USBEnableEndpoint@p+1,fsr2h
 21780  007846  C009  FFDF         	movff	USBEnableEndpoint@options,indf2
 21781  00784A  0012               	return		;funcret
 21782  00784C                     __end_of_USBEnableEndpoint:
 21783                           	opt stack 0
 21784                           tosu	equ	0xFFF
 21785                           tosh	equ	0xFFE
 21786                           tosl	equ	0xFFD
 21787                           pclath	equ	0xFFA
 21788                           tblptru	equ	0xFF8
 21789                           tblptrh	equ	0xFF7
 21790                           tblptrl	equ	0xFF6
 21791                           tablat	equ	0xFF5
 21792                           prodh	equ	0xFF4
 21793                           prodl	equ	0xFF3
 21794                           intcon	equ	0xFF2
 21795                           intcon2	equ	0xFF1
 21796                           intcon3	equ	0xFF0
 21797                           indf0	equ	0xFEF
 21798                           postinc0	equ	0xFEE
 21799                           fsr0h	equ	0xFEA
 21800                           fsr0l	equ	0xFE9
 21801                           wreg	equ	0xFE8
 21802                           indf1	equ	0xFE7
 21803                           postdec1	equ	0xFE5
 21804                           plusw1	equ	0xFE3
 21805                           fsr1h	equ	0xFE2
 21806                           fsr1l	equ	0xFE1
 21807                           indf2	equ	0xFDF
 21808                           postinc2	equ	0xFDE
 21809                           postdec2	equ	0xFDD
 21810                           plusw2	equ	0xFDB
 21811                           fsr2h	equ	0xFDA
 21812                           fsr2l	equ	0xFD9
 21813                           status	equ	0xFD8
 21814                           
 21815 ;; *************** function _USBConfigureEndpoint *****************
 21816 ;; Defined at:
 21817 ;;		line 1545 in file "usb_device.c"
 21818 ;; Parameters:    Size  Location     Type
 21819 ;;  EPNum           1    wreg     unsigned char 
 21820 ;;  direction       1    0[COMRAM] unsigned char 
 21821 ;; Auto vars:     Size  Location     Type
 21822 ;;  EPNum           1    5[COMRAM] unsigned char 
 21823 ;;  handle          2    6[COMRAM] PTR volatile struct __BD
 21824 ;;		 -> BDT(48), 
 21825 ;; Return value:  Size  Location     Type
 21826 ;;                  1    wreg      void 
 21827 ;; Registers used:
 21828 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 21829 ;; Tracked objects:
 21830 ;;		On entry : 0/0
 21831 ;;		On exit  : 0/0
 21832 ;;		Unchanged: 0/0
 21833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21834 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21835 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21836 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21837 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21838 ;;Total ram usage:        8 bytes
 21839 ;; Hardware stack levels used:    1
 21840 ;; This function calls:
 21841 ;;		Nothing
 21842 ;; This function is called by:
 21843 ;;		_USBEnableEndpoint
 21844 ;; This function uses a non-reentrant model
 21845 ;;
 21846                           
 21847                           	psect	text100
 21848  006016                     __ptext100:
 21849                           	opt stack 0
 21850  006016                     _USBConfigureEndpoint:
 21851                           	opt stack 26
 21852                           
 21853                           ;incstack = 0
 21854                           ;USBConfigureEndpoint@EPNum stored from wreg
 21855  006016  6E06               	movwf	USBConfigureEndpoint@EPNum,c
 21856                           
 21857                           ;usb_device.c: 1547: volatile BDT_ENTRY* handle;;usb_device.c: 1551: handle = (volatile 
      +                          BDT_ENTRY*)&BDT[0];
 21858  006018  0E00               	movlw	0
 21859  00601A  6E07               	movwf	USBConfigureEndpoint@handle,c
 21860  00601C  0E0D               	movlw	13
 21861  00601E  6E08               	movwf	USBConfigureEndpoint@handle+1,c
 21862                           
 21863                           ;usb_device.c: 1552: handle += (4*EPNum+2*direction+0u);
 21864  006020  5001               	movf	USBConfigureEndpoint@direction,w,c
 21865  006022  6E02               	movwf	??_USBConfigureEndpoint& (0+255),c
 21866  006024  6A03               	clrf	(??_USBConfigureEndpoint+1)& (0+255),c
 21867  006026  90D8               	bcf	status,0,c
 21868  006028  3602               	rlcf	??_USBConfigureEndpoint,f,c
 21869  00602A  3603               	rlcf	??_USBConfigureEndpoint+1,f,c
 21870  00602C  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21871  00602E  6E04               	movwf	(??_USBConfigureEndpoint+2)& (0+255),c
 21872  006030  6A05               	clrf	(??_USBConfigureEndpoint+3)& (0+255),c
 21873  006032  90D8               	bcf	status,0,c
 21874  006034  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21875  006036  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21876  006038  90D8               	bcf	status,0,c
 21877  00603A  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21878  00603C  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21879  00603E  5002               	movf	??_USBConfigureEndpoint,w,c
 21880  006040  2604               	addwf	??_USBConfigureEndpoint+2,f,c
 21881  006042  5003               	movf	??_USBConfigureEndpoint+1,w,c
 21882  006044  2205               	addwfc	??_USBConfigureEndpoint+3,f,c
 21883  006046  90D8               	bcf	status,0,c
 21884  006048  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21885  00604A  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21886  00604C  90D8               	bcf	status,0,c
 21887  00604E  3604               	rlcf	??_USBConfigureEndpoint+2,f,c
 21888  006050  3605               	rlcf	??_USBConfigureEndpoint+3,f,c
 21889  006052  5004               	movf	??_USBConfigureEndpoint+2,w,c
 21890  006054  2607               	addwf	USBConfigureEndpoint@handle,f,c
 21891  006056  5005               	movf	??_USBConfigureEndpoint+3,w,c
 21892  006058  2208               	addwfc	USBConfigureEndpoint@handle+1,f,c
 21893                           
 21894                           ;usb_device.c: 1554: handle->STAT.UOWN = 0;
 21895  00605A  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21896  00605E  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21897  006062  9EDF               	bcf	indf2,7,c
 21898                           
 21899                           ;usb_device.c: 1559: if(direction == 0)
 21900  006064  5001               	movf	USBConfigureEndpoint@direction,w,c
 21901  006066  A4D8               	btfss	status,2,c
 21902  006068  D007               	goto	l214
 21903                           
 21904                           ;usb_device.c: 1560: {;usb_device.c: 1561: pBDTEntryOut[EPNum] = handle;
 21905  00606A  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21906  00606C  0D02               	mullw	2
 21907  00606E  0E72               	movlw	low _pBDTEntryOut
 21908  006070  24F3               	addwf	prodl,w,c
 21909  006072  6ED9               	movwf	fsr2l,c
 21910  006074  0E00               	movlw	high _pBDTEntryOut
 21911  006076  D006               	goto	L14
 21912  006078                     l214:
 21913                           
 21914                           ;usb_device.c: 1563: else;usb_device.c: 1564: {;usb_device.c: 1565: pBDTEntryIn[EPNum] =
      +                           handle;
 21915  006078  5006               	movf	USBConfigureEndpoint@EPNum,w,c
 21916  00607A  0D02               	mullw	2
 21917  00607C  0E6C               	movlw	low _pBDTEntryIn
 21918  00607E  24F3               	addwf	prodl,w,c
 21919  006080  6ED9               	movwf	fsr2l,c
 21920  006082  0E00               	movlw	high _pBDTEntryIn
 21921  006084                     L14:
 21922  006084  20F4               	addwfc	prodh,w,c
 21923  006086  6EDA               	movwf	fsr2h,c
 21924  006088  C007  FFDE         	movff	USBConfigureEndpoint@handle,postinc2
 21925  00608C  C008  FFDD         	movff	USBConfigureEndpoint@handle+1,postdec2
 21926                           
 21927                           ;usb_device.c: 1566: };usb_device.c: 1569: handle->STAT.DTS = 0;
 21928  006090  C007  FFD9         	movff	USBConfigureEndpoint@handle,fsr2l
 21929  006094  C008  FFDA         	movff	USBConfigureEndpoint@handle+1,fsr2h
 21930  006098  9CDF               	bcf	indf2,6,c
 21931                           
 21932                           ;usb_device.c: 1570: (handle+1)->STAT.DTS = 1;
 21933  00609A  EE20 F004          	lfsr	2,4
 21934  00609E  5007               	movf	USBConfigureEndpoint@handle,w,c
 21935  0060A0  26D9               	addwf	fsr2l,f,c
 21936  0060A2  5008               	movf	USBConfigureEndpoint@handle+1,w,c
 21937  0060A4  22DA               	addwfc	fsr2h,f,c
 21938  0060A6  8CDF               	bsf	indf2,6,c
 21939  0060A8  0012               	return		;funcret
 21940  0060AA                     __end_of_USBConfigureEndpoint:
 21941                           	opt stack 0
 21942                           tosu	equ	0xFFF
 21943                           tosh	equ	0xFFE
 21944                           tosl	equ	0xFFD
 21945                           pclath	equ	0xFFA
 21946                           tblptru	equ	0xFF8
 21947                           tblptrh	equ	0xFF7
 21948                           tblptrl	equ	0xFF6
 21949                           tablat	equ	0xFF5
 21950                           prodh	equ	0xFF4
 21951                           prodl	equ	0xFF3
 21952                           intcon	equ	0xFF2
 21953                           intcon2	equ	0xFF1
 21954                           intcon3	equ	0xFF0
 21955                           indf0	equ	0xFEF
 21956                           postinc0	equ	0xFEE
 21957                           fsr0h	equ	0xFEA
 21958                           fsr0l	equ	0xFE9
 21959                           wreg	equ	0xFE8
 21960                           indf1	equ	0xFE7
 21961                           postdec1	equ	0xFE5
 21962                           plusw1	equ	0xFE3
 21963                           fsr1h	equ	0xFE2
 21964                           fsr1l	equ	0xFE1
 21965                           indf2	equ	0xFDF
 21966                           postinc2	equ	0xFDE
 21967                           postdec2	equ	0xFDD
 21968                           plusw2	equ	0xFDB
 21969                           fsr2h	equ	0xFDA
 21970                           fsr2l	equ	0xFD9
 21971                           status	equ	0xFD8
 21972                           
 21973 ;; *************** function _USBCtrlTrfOutHandler *****************
 21974 ;; Defined at:
 21975 ;;		line 2540 in file "usb_device.c"
 21976 ;; Parameters:    Size  Location     Type
 21977 ;;		None
 21978 ;; Auto vars:     Size  Location     Type
 21979 ;;		None
 21980 ;; Return value:  Size  Location     Type
 21981 ;;                  1    wreg      void 
 21982 ;; Registers used:
 21983 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 21984 ;; Tracked objects:
 21985 ;;		On entry : 0/0
 21986 ;;		On exit  : 0/0
 21987 ;;		Unchanged: 0/0
 21988 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 21989 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21990 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21991 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21992 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 21993 ;;Total ram usage:        0 bytes
 21994 ;; Hardware stack levels used:    1
 21995 ;; Hardware stack levels required when called:    2
 21996 ;; This function calls:
 21997 ;;		_USBCtrlTrfRxService
 21998 ;; This function is called by:
 21999 ;;		_USBCtrlEPService
 22000 ;; This function uses a non-reentrant model
 22001 ;;
 22002                           
 22003                           	psect	text101
 22004  006F06                     __ptext101:
 22005                           	opt stack 0
 22006  006F06                     _USBCtrlTrfOutHandler:
 22007                           	opt stack 26
 22008                           
 22009                           ;usb_device.c: 2542: if(controlTransferState == 2)
 22010                           
 22011                           ;incstack = 0
 22012  006F06  0E02               	movlw	2
 22013  006F08  0100               	movlb	0	; () banked
 22014  006F0A  19AE               	xorwf	_controlTransferState& (0+255),w,b
 22015  006F0C  A4D8               	btfss	status,2,c
 22016  006F0E  D003               	goto	l320
 22017                           
 22018                           ; BSR set to: 0
 22019                           ;usb_device.c: 2543: {;usb_device.c: 2544: USBCtrlTrfRxService();
 22020  006F10  EC09  F020         	call	_USBCtrlTrfRxService	;wreg free
 22021                           
 22022                           ;usb_device.c: 2545: }
 22023  006F14  0012               	return	
 22024  006F16                     l320:
 22025                           
 22026                           ;usb_device.c: 2546: else;usb_device.c: 2547: {;usb_device.c: 2550: controlTransferState
      +                           = 0;
 22027  006F16  0E00               	movlw	0
 22028  006F18  0100               	movlb	0	; () banked
 22029  006F1A  6FAE               	movwf	_controlTransferState& (0+255),b
 22030                           
 22031                           ;usb_device.c: 2557: if(BothEP0OutUOWNsSet == 0)
 22032  006F1C  51AA               	movf	_BothEP0OutUOWNsSet& (0+255),w,b
 22033  006F1E  A4D8               	btfss	status,2,c
 22034  006F20  D01F               	goto	l322
 22035                           
 22036                           ; BSR set to: 0
 22037                           ;usb_device.c: 2558: {;usb_device.c: 2559: pBDTEntryEP0OutNext->CNT = 8;
 22038  006F22  EE20 F001          	lfsr	2,1
 22039  006F26  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22040  006F28  26D9               	addwf	fsr2l,f,c
 22041  006F2A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22042  006F2C  22DA               	addwfc	fsr2h,f,c
 22043  006F2E  0E08               	movlw	8
 22044  006F30  6EDF               	movwf	indf2,c
 22045                           
 22046                           ;usb_device.c: 2560: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22047  006F32  EE20 F002          	lfsr	2,2
 22048  006F36  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22049  006F38  26D9               	addwf	fsr2l,f,c
 22050  006F3A  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22051  006F3C  22DA               	addwfc	fsr2h,f,c
 22052  006F3E  0E30               	movlw	48
 22053  006F40  6EDE               	movwf	postinc2,c
 22054  006F42  0E0D               	movlw	13
 22055  006F44  6EDD               	movwf	postdec2,c
 22056                           
 22057                           ; BSR set to: 0
 22058                           ;usb_device.c: 2561: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 22059  006F46  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22060  006F4A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22061  006F4E  0E0C               	movlw	12
 22062  006F50  6EDF               	movwf	indf2,c
 22063                           
 22064                           ; BSR set to: 0
 22065                           ;usb_device.c: 2562: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22066  006F52  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22067  006F56  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22068  006F5A  0E00               	movlw	0
 22069  006F5C  8EDB               	bsf	plusw2,7,c
 22070                           
 22071                           ;usb_device.c: 2563: }
 22072  006F5E  0012               	return	
 22073  006F60                     l322:
 22074                           
 22075                           ; BSR set to: 0
 22076                           ;usb_device.c: 2564: else;usb_device.c: 2565: {;usb_device.c: 2566: BothEP0OutUOWNsSet =
      +                           0;
 22077                           
 22078                           ; BSR set to: 0
 22079  006F60  0E00               	movlw	0
 22080  006F62  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22081                           
 22082                           ; BSR set to: 0
 22083  006F64  0012               	return	
 22084  006F66                     __end_of_USBCtrlTrfOutHandler:
 22085                           	opt stack 0
 22086                           tosu	equ	0xFFF
 22087                           tosh	equ	0xFFE
 22088                           tosl	equ	0xFFD
 22089                           pclath	equ	0xFFA
 22090                           tblptru	equ	0xFF8
 22091                           tblptrh	equ	0xFF7
 22092                           tblptrl	equ	0xFF6
 22093                           tablat	equ	0xFF5
 22094                           prodh	equ	0xFF4
 22095                           prodl	equ	0xFF3
 22096                           intcon	equ	0xFF2
 22097                           intcon2	equ	0xFF1
 22098                           intcon3	equ	0xFF0
 22099                           indf0	equ	0xFEF
 22100                           postinc0	equ	0xFEE
 22101                           fsr0h	equ	0xFEA
 22102                           fsr0l	equ	0xFE9
 22103                           wreg	equ	0xFE8
 22104                           indf1	equ	0xFE7
 22105                           postdec1	equ	0xFE5
 22106                           plusw1	equ	0xFE3
 22107                           fsr1h	equ	0xFE2
 22108                           fsr1l	equ	0xFE1
 22109                           indf2	equ	0xFDF
 22110                           postinc2	equ	0xFDE
 22111                           postdec2	equ	0xFDD
 22112                           plusw2	equ	0xFDB
 22113                           fsr2h	equ	0xFDA
 22114                           fsr2l	equ	0xFD9
 22115                           status	equ	0xFD8
 22116                           
 22117 ;; *************** function _USBCtrlTrfRxService *****************
 22118 ;; Defined at:
 22119 ;;		line 1854 in file "usb_device.c"
 22120 ;; Parameters:    Size  Location     Type
 22121 ;;		None
 22122 ;; Auto vars:     Size  Location     Type
 22123 ;;  byteToRead      1    1[COMRAM] unsigned char 
 22124 ;;  i               1    0[COMRAM] unsigned char 
 22125 ;; Return value:  Size  Location     Type
 22126 ;;                  1    wreg      void 
 22127 ;; Registers used:
 22128 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 22129 ;; Tracked objects:
 22130 ;;		On entry : 0/0
 22131 ;;		On exit  : 0/0
 22132 ;;		Unchanged: 0/0
 22133 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22134 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22135 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22136 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22137 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22138 ;;Total ram usage:        2 bytes
 22139 ;; Hardware stack levels used:    1
 22140 ;; Hardware stack levels required when called:    1
 22141 ;; This function calls:
 22142 ;;		_USBCtrlEPAllowStatusStage
 22143 ;; This function is called by:
 22144 ;;		_USBCtrlTrfOutHandler
 22145 ;; This function uses a non-reentrant model
 22146 ;;
 22147                           
 22148                           	psect	text102
 22149  004012                     __ptext102:
 22150                           	opt stack 0
 22151  004012                     _USBCtrlTrfRxService:
 22152                           	opt stack 26
 22153                           
 22154                           ;usb_device.c: 1856: uint8_t byteToRead;;usb_device.c: 1857: uint8_t i;;usb_device.c: 18
      +                          61: byteToRead = pBDTEntryEP0OutCurrent->CNT;
 22155                           
 22156                           ;incstack = 0
 22157  004012  0100               	movlb	0	; () banked
 22158  004014  EE20 F001          	lfsr	2,1
 22159  004018  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22160  00401A  26D9               	addwf	fsr2l,f,c
 22161  00401C  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22162  00401E  22DA               	addwfc	fsr2h,f,c
 22163  004020  50DF               	movf	indf2,w,c
 22164  004022  6E02               	movwf	USBCtrlTrfRxService@byteToRead,c
 22165                           
 22166                           ; BSR set to: 0
 22167                           ;usb_device.c: 1867: if(byteToRead > outPipes[0].wCount.Val)
 22168  004024  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22169  004026  0101               	movlb	1	; () banked
 22170  004028  5D35               	subwf	(_outPipes+4)& (0+255),w,b
 22171  00402A  0E00               	movlw	0
 22172  00402C  5936               	subwfb	(_outPipes+5)& (0+255),w,b
 22173  00402E  A0D8               	btfss	status,0,c
 22174                           
 22175                           ; BSR set to: 1
 22176                           ;usb_device.c: 1868: {;usb_device.c: 1869: byteToRead = outPipes[0].wCount.Val;
 22177  004030  C135  F002         	movff	_outPipes+4,USBCtrlTrfRxService@byteToRead
 22178                           
 22179                           ; BSR set to: 1
 22180                           ;usb_device.c: 1870: };usb_device.c: 1872: outPipes[0].wCount.Val -= byteToRead;
 22181                           
 22182                           ; BSR set to: 1
 22183  004034  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22184  004036  5F35               	subwf	(_outPipes+4)& (0+255),f,b
 22185  004038  0E00               	movlw	0
 22186  00403A  5B36               	subwfb	(_outPipes+5)& (0+255),f,b
 22187                           
 22188                           ; BSR set to: 1
 22189                           ;usb_device.c: 1876: for(i=0;i<byteToRead;i++)
 22190  00403C  0E00               	movlw	0
 22191  00403E  6E01               	movwf	USBCtrlTrfRxService@i,c
 22192  004040  D011               	goto	l248
 22193  004042                     
 22194                           ; BSR set to: 1
 22195                           ;usb_device.c: 1877: {;usb_device.c: 1878: *outPipes[0].pDst.bRam++ = CtrlTrfData[i];
 22196                           
 22197                           ; BSR set to: 1
 22198  004042  5001               	movf	USBCtrlTrfRxService@i,w,c
 22199  004044  0D01               	mullw	1
 22200  004046  0E38               	movlw	56
 22201  004048  24F3               	addwf	prodl,w,c
 22202  00404A  6ED9               	movwf	fsr2l,c
 22203  00404C  0E0D               	movlw	13
 22204  00404E  20F4               	addwfc	prodh,w,c
 22205  004050  6EDA               	movwf	fsr2h,c
 22206  004052  C131  FFE1         	movff	_outPipes,fsr1l
 22207  004056  C132  FFE2         	movff	_outPipes+1,fsr1h
 22208  00405A  CFDF FFE7          	movff	indf2,indf1
 22209                           
 22210                           ; BSR set to: 1
 22211  00405E  4B31               	infsnz	_outPipes& (0+255),f,b
 22212  004060  2B32               	incf	(_outPipes+1)& (0+255),f,b
 22213                           
 22214                           ; BSR set to: 1
 22215  004062  2A01               	incf	USBCtrlTrfRxService@i,f,c
 22216  004064                     l248:
 22217                           
 22218                           ; BSR set to: 1
 22219                           
 22220                           ; BSR set to: 1
 22221  004064  5002               	movf	USBCtrlTrfRxService@byteToRead,w,c
 22222  004066  5C01               	subwf	USBCtrlTrfRxService@i,w,c
 22223  004068  A0D8               	btfss	status,0,c
 22224  00406A  D7EB               	goto	l249
 22225                           
 22226                           ; BSR set to: 1
 22227                           ;usb_device.c: 1879: };usb_device.c: 1883: if(outPipes[0].wCount.Val > 0)
 22228                           
 22229                           ; BSR set to: 1
 22230  00406C  5135               	movf	(_outPipes+4)& (0+255),w,b
 22231  00406E  1136               	iorwf	(_outPipes+5)& (0+255),w,b
 22232  004070  B4D8               	btfsc	status,2,c
 22233  004072  D033               	goto	l251
 22234                           
 22235                           ; BSR set to: 1
 22236                           ;usb_device.c: 1884: {;usb_device.c: 1885: pBDTEntryEP0OutNext->CNT = 8;
 22237  004074  0100               	movlb	0	; () banked
 22238  004076  EE20 F001          	lfsr	2,1
 22239  00407A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22240  00407C  26D9               	addwf	fsr2l,f,c
 22241  00407E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22242  004080  22DA               	addwfc	fsr2h,f,c
 22243  004082  0E08               	movlw	8
 22244  004084  6EDF               	movwf	indf2,c
 22245                           
 22246                           ;usb_device.c: 1886: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&CtrlTrfData));
 22247  004086  EE20 F002          	lfsr	2,2
 22248  00408A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22249  00408C  26D9               	addwf	fsr2l,f,c
 22250  00408E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22251  004090  22DA               	addwfc	fsr2h,f,c
 22252  004092  0E38               	movlw	56
 22253  004094  6EDE               	movwf	postinc2,c
 22254  004096  0E0D               	movlw	13
 22255  004098  6EDD               	movwf	postdec2,c
 22256                           
 22257                           ; BSR set to: 0
 22258                           ;usb_device.c: 1887: if(pBDTEntryEP0OutCurrent->STAT.DTS == 0)
 22259  00409A  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22260  00409E  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22261  0040A2  BCDF               	btfsc	indf2,6,c
 22262  0040A4  D00D               	goto	l252
 22263                           
 22264                           ; BSR set to: 0
 22265                           ;usb_device.c: 1888: {;usb_device.c: 1889: pBDTEntryEP0OutNext->STAT.Val = 0x40|(0x08 & 
      +                          0x08);
 22266  0040A6  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22267  0040AA  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22268  0040AE  0E48               	movlw	72
 22269  0040B0  6EDF               	movwf	indf2,c
 22270                           
 22271                           ; BSR set to: 0
 22272                           ;usb_device.c: 1890: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22273  0040B2  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22274  0040B6  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22275  0040BA  0E00               	movlw	0
 22276  0040BC  8EDB               	bsf	plusw2,7,c
 22277                           
 22278                           ;usb_device.c: 1891: }
 22279  0040BE  0012               	return	
 22280  0040C0                     l252:
 22281                           
 22282                           ; BSR set to: 0
 22283                           ;usb_device.c: 1892: else;usb_device.c: 1893: {;usb_device.c: 1894: pBDTEntryEP0OutNext-
      +                          >STAT.Val = 0x00|(0x08 & 0x08);
 22284                           
 22285                           ; BSR set to: 0
 22286  0040C0  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22287  0040C4  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22288  0040C8  0E08               	movlw	8
 22289  0040CA  6EDF               	movwf	indf2,c
 22290                           
 22291                           ; BSR set to: 0
 22292                           ;usb_device.c: 1895: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22293  0040CC  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22294  0040D0  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22295  0040D4  0E00               	movlw	0
 22296  0040D6  8EDB               	bsf	plusw2,7,c
 22297                           
 22298                           ; BSR set to: 0
 22299                           ;usb_device.c: 1896: };usb_device.c: 1897: }
 22300  0040D8  0012               	return	
 22301  0040DA                     l251:
 22302                           
 22303                           ;usb_device.c: 1898: else;usb_device.c: 1899: {;usb_device.c: 1903: pBDTEntryEP0OutNext-
      +                          >CNT = 8;
 22304                           
 22305                           ; BSR set to: 0
 22306  0040DA  0100               	movlb	0	; () banked
 22307  0040DC  EE20 F001          	lfsr	2,1
 22308  0040E0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22309  0040E2  26D9               	addwf	fsr2l,f,c
 22310  0040E4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22311  0040E6  22DA               	addwfc	fsr2h,f,c
 22312  0040E8  0E08               	movlw	8
 22313  0040EA  6EDF               	movwf	indf2,c
 22314                           
 22315                           ;usb_device.c: 1904: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22316  0040EC  EE20 F002          	lfsr	2,2
 22317  0040F0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22318  0040F2  26D9               	addwf	fsr2l,f,c
 22319  0040F4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22320  0040F6  22DA               	addwfc	fsr2h,f,c
 22321  0040F8  0E30               	movlw	48
 22322  0040FA  6EDE               	movwf	postinc2,c
 22323  0040FC  0E0D               	movlw	13
 22324  0040FE  6EDD               	movwf	postdec2,c
 22325                           
 22326                           ; BSR set to: 0
 22327                           ;usb_device.c: 1908: pBDTEntryEP0OutNext->STAT.Val = 0x04;
 22328  004100  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22329  004104  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22330  004108  0E04               	movlw	4
 22331  00410A  6EDF               	movwf	indf2,c
 22332                           
 22333                           ; BSR set to: 0
 22334                           ;usb_device.c: 1909: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 22335  00410C  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22336  004110  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22337  004114  0E00               	movlw	0
 22338  004116  8EDB               	bsf	plusw2,7,c
 22339                           
 22340                           ; BSR set to: 0
 22341                           ;usb_device.c: 1928: };usb_device.c: 1929: outPipes[0].info.bits.busy = 0;
 22342                           
 22343                           ; BSR set to: 0
 22344  004118  0101               	movlb	1	; () banked
 22345  00411A  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 22346                           
 22347                           ; BSR set to: 1
 22348                           ;usb_device.c: 1943: if(USBDeferStatusStagePacket == 0)
 22349  00411C  0100               	movlb	0	; () banked
 22350  00411E  51A8               	movf	_USBDeferStatusStagePacket& (0+255),w,b	;volatile
 22351  004120  A4D8               	btfss	status,2,c
 22352  004122  0012               	return	
 22353                           
 22354                           ; BSR set to: 0
 22355                           ;usb_device.c: 1944: {;usb_device.c: 1945: USBCtrlEPAllowStatusStage();
 22356  004124  ECAD  F029         	call	_USBCtrlEPAllowStatusStage	;wreg free
 22357  004128  0012               	return	
 22358  00412A                     __end_of_USBCtrlTrfRxService:
 22359                           	opt stack 0
 22360                           tosu	equ	0xFFF
 22361                           tosh	equ	0xFFE
 22362                           tosl	equ	0xFFD
 22363                           pclath	equ	0xFFA
 22364                           tblptru	equ	0xFF8
 22365                           tblptrh	equ	0xFF7
 22366                           tblptrl	equ	0xFF6
 22367                           tablat	equ	0xFF5
 22368                           prodh	equ	0xFF4
 22369                           prodl	equ	0xFF3
 22370                           intcon	equ	0xFF2
 22371                           intcon2	equ	0xFF1
 22372                           intcon3	equ	0xFF0
 22373                           indf0	equ	0xFEF
 22374                           postinc0	equ	0xFEE
 22375                           fsr0h	equ	0xFEA
 22376                           fsr0l	equ	0xFE9
 22377                           wreg	equ	0xFE8
 22378                           indf1	equ	0xFE7
 22379                           postdec1	equ	0xFE5
 22380                           plusw1	equ	0xFE3
 22381                           fsr1h	equ	0xFE2
 22382                           fsr1l	equ	0xFE1
 22383                           indf2	equ	0xFDF
 22384                           postinc2	equ	0xFDE
 22385                           postdec2	equ	0xFDD
 22386                           plusw2	equ	0xFDB
 22387                           fsr2h	equ	0xFDA
 22388                           fsr2l	equ	0xFD9
 22389                           status	equ	0xFD8
 22390                           
 22391 ;; *************** function _USBCtrlEPAllowStatusStage *****************
 22392 ;; Defined at:
 22393 ;;		line 1418 in file "usb_device.c"
 22394 ;; Parameters:    Size  Location     Type
 22395 ;;		None
 22396 ;; Auto vars:     Size  Location     Type
 22397 ;;		None
 22398 ;; Return value:  Size  Location     Type
 22399 ;;                  1    wreg      void 
 22400 ;; Registers used:
 22401 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 22402 ;; Tracked objects:
 22403 ;;		On entry : 0/0
 22404 ;;		On exit  : 0/0
 22405 ;;		Unchanged: 0/0
 22406 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22407 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22408 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22409 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22410 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22411 ;;Total ram usage:        0 bytes
 22412 ;; Hardware stack levels used:    1
 22413 ;; This function calls:
 22414 ;;		Nothing
 22415 ;; This function is called by:
 22416 ;;		_USBDeviceTasks
 22417 ;;		_USBCtrlEPServiceComplete
 22418 ;;		_USBCtrlTrfRxService
 22419 ;; This function uses a non-reentrant model
 22420 ;;
 22421                           
 22422                           	psect	text103
 22423  00535A                     __ptext103:
 22424                           	opt stack 0
 22425  00535A                     _USBCtrlEPAllowStatusStage:
 22426                           	opt stack 26
 22427                           
 22428                           ;usb_device.c: 1425: if(USBStatusStageEnabledFlag1 == 0)
 22429                           
 22430                           ;incstack = 0
 22431  00535A  0100               	movlb	0	; () banked
 22432  00535C  51A7               	movf	_USBStatusStageEnabledFlag1& (0+255),w,b	;volatile
 22433  00535E  A4D8               	btfss	status,2,c
 22434  005360  0012               	return	
 22435                           
 22436                           ; BSR set to: 0
 22437                           ;usb_device.c: 1426: {;usb_device.c: 1427: USBStatusStageEnabledFlag1 = 1;
 22438  005362  0E01               	movlw	1
 22439  005364  6FA7               	movwf	_USBStatusStageEnabledFlag1& (0+255),b	;volatile
 22440                           
 22441                           ;usb_device.c: 1428: if(USBStatusStageEnabledFlag2 == 0)
 22442  005366  51A6               	movf	_USBStatusStageEnabledFlag2& (0+255),w,b	;volatile
 22443  005368  A4D8               	btfss	status,2,c
 22444  00536A  0012               	return	
 22445                           
 22446                           ; BSR set to: 0
 22447                           ;usb_device.c: 1429: {;usb_device.c: 1430: USBStatusStageEnabledFlag2 = 1;
 22448  00536C  0E01               	movlw	1
 22449  00536E  6FA6               	movwf	_USBStatusStageEnabledFlag2& (0+255),b	;volatile
 22450                           
 22451                           ; BSR set to: 0
 22452                           ;usb_device.c: 1434: if(controlTransferState == 2)
 22453  005370  0E02               	movlw	2
 22454  005372  19AE               	xorwf	_controlTransferState& (0+255),w,b
 22455  005374  A4D8               	btfss	status,2,c
 22456  005376  D015               	goto	l202
 22457                           
 22458                           ; BSR set to: 0
 22459                           ;usb_device.c: 1435: {;usb_device.c: 1436: pBDTEntryIn[0]->CNT = 0;
 22460  005378  EE20 F001          	lfsr	2,1
 22461  00537C  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22462  00537E  26D9               	addwf	fsr2l,f,c
 22463  005380  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22464  005382  22DA               	addwfc	fsr2h,f,c
 22465  005384  0E00               	movlw	0
 22466  005386  6EDF               	movwf	indf2,c
 22467                           
 22468                           ; BSR set to: 0
 22469                           ;usb_device.c: 1437: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08);
 22470  005388  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22471  00538C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22472  005390  0E48               	movlw	72
 22473  005392  6EDF               	movwf	indf2,c
 22474                           
 22475                           ; BSR set to: 0
 22476                           ;usb_device.c: 1438: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22477  005394  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22478  005398  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22479  00539C  0E00               	movlw	0
 22480  00539E  8EDB               	bsf	plusw2,7,c
 22481                           
 22482                           ;usb_device.c: 1439: }
 22483  0053A0  0012               	return	
 22484  0053A2                     l202:
 22485                           
 22486                           ; BSR set to: 0
 22487                           ;usb_device.c: 1440: else if(controlTransferState == 1)
 22488                           
 22489                           ; BSR set to: 0
 22490  0053A2  05AE               	decf	_controlTransferState& (0+255),w,b
 22491  0053A4  A4D8               	btfss	status,2,c
 22492  0053A6  0012               	return	
 22493                           
 22494                           ; BSR set to: 0
 22495                           ;usb_device.c: 1441: {;usb_device.c: 1442: BothEP0OutUOWNsSet = 0;
 22496  0053A8  0E00               	movlw	0
 22497  0053AA  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22498                           
 22499                           ; BSR set to: 0
 22500                           ;usb_device.c: 1447: pBDTEntryEP0OutCurrent->CNT = 8;
 22501  0053AC  EE20 F001          	lfsr	2,1
 22502  0053B0  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22503  0053B2  26D9               	addwf	fsr2l,f,c
 22504  0053B4  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22505  0053B6  22DA               	addwfc	fsr2h,f,c
 22506  0053B8  0E08               	movlw	8
 22507  0053BA  6EDF               	movwf	indf2,c
 22508                           
 22509                           ; BSR set to: 0
 22510                           ;usb_device.c: 1448: pBDTEntryEP0OutCurrent->ADR = ((uint16_t)(&SetupPkt));
 22511  0053BC  EE20 F002          	lfsr	2,2
 22512  0053C0  5192               	movf	_pBDTEntryEP0OutCurrent& (0+255),w,b
 22513  0053C2  26D9               	addwf	fsr2l,f,c
 22514  0053C4  5193               	movf	(_pBDTEntryEP0OutCurrent+1)& (0+255),w,b
 22515  0053C6  22DA               	addwfc	fsr2h,f,c
 22516  0053C8  0E30               	movlw	48
 22517  0053CA  6EDE               	movwf	postinc2,c
 22518  0053CC  0E0D               	movlw	13
 22519  0053CE  6EDD               	movwf	postdec2,c
 22520                           
 22521                           ; BSR set to: 0
 22522                           ;usb_device.c: 1449: pBDTEntryEP0OutCurrent->STAT.Val = 0x04;
 22523  0053D0  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22524  0053D4  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22525  0053D8  0E04               	movlw	4
 22526  0053DA  6EDF               	movwf	indf2,c
 22527                           
 22528                           ; BSR set to: 0
 22529                           ;usb_device.c: 1450: pBDTEntryEP0OutCurrent->STAT.Val |= 0x80;
 22530  0053DC  C092  FFD9         	movff	_pBDTEntryEP0OutCurrent,fsr2l
 22531  0053E0  C093  FFDA         	movff	_pBDTEntryEP0OutCurrent+1,fsr2h
 22532  0053E4  0E00               	movlw	0
 22533  0053E6  8EDB               	bsf	plusw2,7,c
 22534                           
 22535                           ; BSR set to: 0
 22536                           ;usb_device.c: 1451: BothEP0OutUOWNsSet = 1;
 22537  0053E8  0E01               	movlw	1
 22538  0053EA  6FAA               	movwf	_BothEP0OutUOWNsSet& (0+255),b
 22539                           
 22540                           ; BSR set to: 0
 22541                           ;usb_device.c: 1455: pBDTEntryEP0OutNext->CNT = 8;
 22542  0053EC  EE20 F001          	lfsr	2,1
 22543  0053F0  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22544  0053F2  26D9               	addwf	fsr2l,f,c
 22545  0053F4  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22546  0053F6  22DA               	addwfc	fsr2h,f,c
 22547  0053F8  0E08               	movlw	8
 22548  0053FA  6EDF               	movwf	indf2,c
 22549                           
 22550                           ; BSR set to: 0
 22551                           ;usb_device.c: 1456: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 22552  0053FC  EE20 F002          	lfsr	2,2
 22553  005400  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 22554  005402  26D9               	addwf	fsr2l,f,c
 22555  005404  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 22556  005406  22DA               	addwfc	fsr2h,f,c
 22557  005408  0E30               	movlw	48
 22558  00540A  6EDE               	movwf	postinc2,c
 22559  00540C  0E0D               	movlw	13
 22560  00540E  6EDD               	movwf	postdec2,c
 22561                           
 22562                           ; BSR set to: 0
 22563                           ;usb_device.c: 1457: pBDTEntryEP0OutNext->STAT.Val = 0x80;
 22564  005410  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 22565  005414  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 22566  005418  0E80               	movlw	128
 22567  00541A  6EDF               	movwf	indf2,c
 22568                           
 22569                           ; BSR set to: 0
 22570                           
 22571                           ; BSR set to: 0
 22572                           
 22573                           ; BSR set to: 0
 22574  00541C  0012               	return	
 22575  00541E                     __end_of_USBCtrlEPAllowStatusStage:
 22576                           	opt stack 0
 22577                           tosu	equ	0xFFF
 22578                           tosh	equ	0xFFE
 22579                           tosl	equ	0xFFD
 22580                           pclath	equ	0xFFA
 22581                           tblptru	equ	0xFF8
 22582                           tblptrh	equ	0xFF7
 22583                           tblptrl	equ	0xFF6
 22584                           tablat	equ	0xFF5
 22585                           prodh	equ	0xFF4
 22586                           prodl	equ	0xFF3
 22587                           intcon	equ	0xFF2
 22588                           intcon2	equ	0xFF1
 22589                           intcon3	equ	0xFF0
 22590                           indf0	equ	0xFEF
 22591                           postinc0	equ	0xFEE
 22592                           fsr0h	equ	0xFEA
 22593                           fsr0l	equ	0xFE9
 22594                           wreg	equ	0xFE8
 22595                           indf1	equ	0xFE7
 22596                           postdec1	equ	0xFE5
 22597                           plusw1	equ	0xFE3
 22598                           fsr1h	equ	0xFE2
 22599                           fsr1l	equ	0xFE1
 22600                           indf2	equ	0xFDF
 22601                           postinc2	equ	0xFDE
 22602                           postdec2	equ	0xFDD
 22603                           plusw2	equ	0xFDB
 22604                           fsr2h	equ	0xFDA
 22605                           fsr2l	equ	0xFD9
 22606                           status	equ	0xFD8
 22607                           
 22608 ;; *************** function _USBCtrlTrfInHandler *****************
 22609 ;; Defined at:
 22610 ;;		line 2594 in file "usb_device.c"
 22611 ;; Parameters:    Size  Location     Type
 22612 ;;		None
 22613 ;; Auto vars:     Size  Location     Type
 22614 ;;  lastDTS         1    1[COMRAM] unsigned char 
 22615 ;; Return value:  Size  Location     Type
 22616 ;;                  1    wreg      void 
 22617 ;; Registers used:
 22618 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 22619 ;; Tracked objects:
 22620 ;;		On entry : 0/0
 22621 ;;		On exit  : 0/0
 22622 ;;		Unchanged: 0/0
 22623 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22624 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22625 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22626 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22627 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22628 ;;Total ram usage:        1 bytes
 22629 ;; Hardware stack levels used:    1
 22630 ;; Hardware stack levels required when called:    1
 22631 ;; This function calls:
 22632 ;;		_USBCtrlTrfTxService
 22633 ;; This function is called by:
 22634 ;;		_USBCtrlEPService
 22635 ;; This function uses a non-reentrant model
 22636 ;;
 22637                           
 22638                           	psect	text104
 22639  005108                     __ptext104:
 22640                           	opt stack 0
 22641  005108                     _USBCtrlTrfInHandler:
 22642                           	opt stack 27
 22643                           
 22644                           ;usb_device.c: 2596: uint8_t lastDTS;;usb_device.c: 2598: lastDTS = pBDTEntryIn[0]->STAT
      +                          .DTS;
 22645                           
 22646                           ; BSR set to: 0
 22647                           ;incstack = 0
 22648  005108  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22649  00510C  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22650  005110  0100               	movlb	0	; () banked
 22651  005112  0E00               	movlw	0
 22652  005114  BCDF               	btfsc	indf2,6,c
 22653  005116  0E01               	movlw	1
 22654  005118  6E02               	movwf	USBCtrlTrfInHandler@lastDTS,c
 22655                           
 22656                           ; BSR set to: 0
 22657                           ;usb_device.c: 2601: pBDTEntryIn[0] = (volatile BDT_ENTRY*)(((uintptr_t)pBDTEntryIn[0]) 
      +                          ^ 0x0004);
 22658  00511A  0E04               	movlw	4
 22659  00511C  196C               	xorwf	_pBDTEntryIn& (0+255),w,b
 22660  00511E  6F6C               	movwf	_pBDTEntryIn& (0+255),b
 22661  005120  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22662  005122  6F6D               	movwf	(_pBDTEntryIn+1)& (0+255),b
 22663                           
 22664                           ; BSR set to: 0
 22665                           ;usb_device.c: 2606: if(USBDeviceState == ADR_PENDING_STATE)
 22666  005124  0E08               	movlw	8
 22667  005126  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 22668  005128  A4D8               	btfss	status,2,c
 22669  00512A  D00D               	goto	l329
 22670                           
 22671                           ; BSR set to: 0
 22672                           ;usb_device.c: 2607: {;usb_device.c: 2608: UADDR = (SetupPkt.bDevADR & 0x7F);
 22673  00512C  010D               	movlb	13	; () banked
 22674  00512E  5132               	movf	50,w,b	;volatile
 22675  005130  0B7F               	andlw	127
 22676  005132  010F               	movlb	15	; () banked
 22677  005134  6F38               	movwf	56,b	;volatile
 22678                           
 22679                           ; BSR set to: 15
 22680                           ;usb_device.c: 2609: if(UADDR != 0u)
 22681  005136  5138               	movf	56,w,b	;volatile
 22682  005138  B4D8               	btfsc	status,2,c
 22683  00513A  D002               	goto	l328
 22684                           
 22685                           ; BSR set to: 15
 22686                           ;usb_device.c: 2610: {;usb_device.c: 2611: USBDeviceState=ADDRESS_STATE;
 22687  00513C  0E10               	movlw	16
 22688  00513E  D001               	goto	L15
 22689  005140                     l328:
 22690                           
 22691                           ;usb_device.c: 2613: else;usb_device.c: 2614: {;usb_device.c: 2615: USBDeviceState=DEFAU
      +                          LT_STATE;
 22692                           
 22693                           ; BSR set to: 0
 22694  005140  0E04               	movlw	4
 22695  005142                     L15:
 22696  005142  0100               	movlb	0	; () banked
 22697  005144  6FB0               	movwf	_USBDeviceState& (0+255),b
 22698  005146                     l329:
 22699                           
 22700                           ; BSR set to: 0
 22701                           ;usb_device.c: 2616: };usb_device.c: 2617: };usb_device.c: 2620: if(controlTransferState
      +                           == 1)
 22702                           
 22703                           ; BSR set to: 0
 22704                           
 22705                           ; BSR set to: 0
 22706  005146  05AE               	decf	_controlTransferState& (0+255),w,b
 22707  005148  A4D8               	btfss	status,2,c
 22708  00514A  D03B               	goto	l330
 22709                           
 22710                           ; BSR set to: 0
 22711                           ;usb_device.c: 2621: {;usb_device.c: 2622: pBDTEntryIn[0]->ADR = ((uint16_t)(CtrlTrfData
      +                          ));
 22712  00514C  EE20 F002          	lfsr	2,2
 22713  005150  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22714  005152  26D9               	addwf	fsr2l,f,c
 22715  005154  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22716  005156  22DA               	addwfc	fsr2h,f,c
 22717  005158  0E38               	movlw	56
 22718  00515A  6EDE               	movwf	postinc2,c
 22719  00515C  0E0D               	movlw	13
 22720  00515E  6EDD               	movwf	postdec2,c
 22721                           
 22722                           ; BSR set to: 0
 22723                           ;usb_device.c: 2623: USBCtrlTrfTxService();
 22724  005160  EC1E  F028         	call	_USBCtrlTrfTxService	;wreg free
 22725                           
 22726                           ;usb_device.c: 2629: if(shortPacketStatus == 2)
 22727  005164  0E02               	movlw	2
 22728  005166  0100               	movlb	0	; () banked
 22729  005168  19AF               	xorwf	_shortPacketStatus& (0+255),w,b
 22730  00516A  A4D8               	btfss	status,2,c
 22731  00516C  D00D               	goto	l331
 22732                           
 22733                           ; BSR set to: 0
 22734                           ;usb_device.c: 2630: {;usb_device.c: 2633: pBDTEntryIn[0]->STAT.Val = 0x04;
 22735  00516E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22736  005172  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22737  005176  0E04               	movlw	4
 22738  005178  6EDF               	movwf	indf2,c
 22739                           
 22740                           ; BSR set to: 0
 22741                           ;usb_device.c: 2634: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22742  00517A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22743  00517E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22744  005182  0E00               	movlw	0
 22745  005184  8EDB               	bsf	plusw2,7,c
 22746                           
 22747                           ;usb_device.c: 2635: }
 22748  005186  0012               	return	
 22749  005188                     l331:
 22750                           
 22751                           ; BSR set to: 0
 22752                           ;usb_device.c: 2636: else;usb_device.c: 2637: {;usb_device.c: 2638: if(lastDTS == 0)
 22753                           
 22754                           ; BSR set to: 0
 22755  005188  5002               	movf	USBCtrlTrfInHandler@lastDTS,w,c
 22756  00518A  A4D8               	btfss	status,2,c
 22757  00518C  D00D               	goto	l333
 22758                           
 22759                           ; BSR set to: 0
 22760                           ;usb_device.c: 2639: {;usb_device.c: 2640: pBDTEntryIn[0]->STAT.Val = 0x40|(0x08 & 0x08)
      +                          ;
 22761  00518E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22762  005192  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22763  005196  0E48               	movlw	72
 22764  005198  6EDF               	movwf	indf2,c
 22765                           
 22766                           ; BSR set to: 0
 22767                           ;usb_device.c: 2641: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22768  00519A  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22769  00519E  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22770  0051A2  0E00               	movlw	0
 22771  0051A4  8EDB               	bsf	plusw2,7,c
 22772                           
 22773                           ;usb_device.c: 2642: }
 22774  0051A6  0012               	return	
 22775  0051A8                     l333:
 22776                           
 22777                           ; BSR set to: 0
 22778                           ;usb_device.c: 2643: else;usb_device.c: 2644: {;usb_device.c: 2645: pBDTEntryIn[0]->STAT
      +                          .Val = 0x00|(0x08 & 0x08);
 22779                           
 22780                           ; BSR set to: 0
 22781  0051A8  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22782  0051AC  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22783  0051B0  0E08               	movlw	8
 22784  0051B2  6EDF               	movwf	indf2,c
 22785                           
 22786                           ; BSR set to: 0
 22787                           ;usb_device.c: 2646: pBDTEntryIn[0]->STAT.Val |= 0x80;
 22788  0051B4  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 22789  0051B8  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 22790  0051BC  0E00               	movlw	0
 22791  0051BE  8EDB               	bsf	plusw2,7,c
 22792                           
 22793                           ; BSR set to: 0
 22794                           ;usb_device.c: 2647: };usb_device.c: 2648: };usb_device.c: 2649: }
 22795                           
 22796                           ; BSR set to: 0
 22797  0051C0  0012               	return	
 22798  0051C2                     l330:
 22799                           
 22800                           ; BSR set to: 0
 22801                           ;usb_device.c: 2650: else;usb_device.c: 2651: {;usb_device.c: 2655: if(outPipes[0].info.
      +                          bits.busy == 1)
 22802  0051C2  0101               	movlb	1	; () banked
 22803  0051C4  BF34               	btfsc	(_outPipes+3)& (0+255),7,b
 22804                           
 22805                           ; BSR set to: 1
 22806                           ;usb_device.c: 2660: };usb_device.c: 2661: outPipes[0].info.bits.busy = 0;
 22807                           
 22808                           ; BSR set to: 1
 22809  0051C6  9F34               	bcf	(_outPipes+3)& (0+255),7,b
 22810                           
 22811                           ; BSR set to: 1
 22812                           ;usb_device.c: 2662: };usb_device.c: 2664: controlTransferState = 0;
 22813                           
 22814                           ; BSR set to: 1
 22815  0051C8  0E00               	movlw	0
 22816  0051CA  0100               	movlb	0	; () banked
 22817  0051CC  6FAE               	movwf	_controlTransferState& (0+255),b
 22818  0051CE  0012               	return	
 22819  0051D0                     __end_of_USBCtrlTrfInHandler:
 22820                           	opt stack 0
 22821                           tosu	equ	0xFFF
 22822                           tosh	equ	0xFFE
 22823                           tosl	equ	0xFFD
 22824                           pclath	equ	0xFFA
 22825                           tblptru	equ	0xFF8
 22826                           tblptrh	equ	0xFF7
 22827                           tblptrl	equ	0xFF6
 22828                           tablat	equ	0xFF5
 22829                           prodh	equ	0xFF4
 22830                           prodl	equ	0xFF3
 22831                           intcon	equ	0xFF2
 22832                           intcon2	equ	0xFF1
 22833                           intcon3	equ	0xFF0
 22834                           indf0	equ	0xFEF
 22835                           postinc0	equ	0xFEE
 22836                           fsr0h	equ	0xFEA
 22837                           fsr0l	equ	0xFE9
 22838                           wreg	equ	0xFE8
 22839                           indf1	equ	0xFE7
 22840                           postdec1	equ	0xFE5
 22841                           plusw1	equ	0xFE3
 22842                           fsr1h	equ	0xFE2
 22843                           fsr1l	equ	0xFE1
 22844                           indf2	equ	0xFDF
 22845                           postinc2	equ	0xFDE
 22846                           postdec2	equ	0xFDD
 22847                           plusw2	equ	0xFDB
 22848                           fsr2h	equ	0xFDA
 22849                           fsr2l	equ	0xFD9
 22850                           status	equ	0xFD8
 22851                           
 22852 ;; *************** function _USBCtrlTrfTxService *****************
 22853 ;; Defined at:
 22854 ;;		line 1773 in file "usb_device.c"
 22855 ;; Parameters:    Size  Location     Type
 22856 ;;		None
 22857 ;; Auto vars:     Size  Location     Type
 22858 ;;  byteToSend      1    0[COMRAM] unsigned char 
 22859 ;; Return value:  Size  Location     Type
 22860 ;;                  1    wreg      void 
 22861 ;; Registers used:
 22862 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 22863 ;; Tracked objects:
 22864 ;;		On entry : 0/0
 22865 ;;		On exit  : 0/0
 22866 ;;		Unchanged: 0/0
 22867 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 22868 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22869 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22870 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22871 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 22872 ;;Total ram usage:        1 bytes
 22873 ;; Hardware stack levels used:    1
 22874 ;; This function calls:
 22875 ;;		Nothing
 22876 ;; This function is called by:
 22877 ;;		_USBCtrlEPAllowDataStage
 22878 ;;		_USBCtrlTrfInHandler
 22879 ;; This function uses a non-reentrant model
 22880 ;;
 22881                           
 22882                           	psect	text105
 22883  00503C                     __ptext105:
 22884                           	opt stack 0
 22885  00503C                     _USBCtrlTrfTxService:
 22886                           	opt stack 25
 22887                           
 22888                           ;usb_device.c: 1775: uint8_t byteToSend;;usb_device.c: 1779: byteToSend = 8;
 22889                           
 22890                           ; BSR set to: 0
 22891                           ;incstack = 0
 22892  00503C  0E08               	movlw	8
 22893  00503E  6E01               	movwf	USBCtrlTrfTxService@byteToSend,c
 22894                           
 22895                           ;usb_device.c: 1780: if(inPipes[0].wCount.Val < (uint8_t)8)
 22896  005040  0100               	movlb	0	; () banked
 22897  005042  516B               	movf	(_inPipes+5)& (0+255),w,b
 22898  005044  E110               	bnz	l10311
 22899  005046  0E08               	movlw	8
 22900  005048  5D6A               	subwf	(_inPipes+4)& (0+255),w,b
 22901  00504A  B0D8               	btfsc	status,0,c
 22902  00504C  D00C               	goto	l235
 22903                           
 22904                           ; BSR set to: 0
 22905                           ;usb_device.c: 1781: {;usb_device.c: 1782: byteToSend = inPipes[0].wCount.Val;
 22906  00504E  C06A  F001         	movff	_inPipes+4,USBCtrlTrfTxService@byteToSend
 22907                           
 22908                           ; BSR set to: 0
 22909                           ;usb_device.c: 1789: if(shortPacketStatus == 0)
 22910  005052  51AF               	movf	_shortPacketStatus& (0+255),w,b
 22911  005054  A4D8               	btfss	status,2,c
 22912  005056  D002               	goto	l233
 22913                           
 22914                           ; BSR set to: 0
 22915                           ;usb_device.c: 1790: {;usb_device.c: 1791: shortPacketStatus = 1;
 22916  005058  0E01               	movlw	1
 22917  00505A  D004               	goto	L16
 22918  00505C                     l233:
 22919                           
 22920                           ; BSR set to: 0
 22921                           ;usb_device.c: 1793: else if(shortPacketStatus == 1)
 22922                           
 22923                           ; BSR set to: 0
 22924  00505C  05AF               	decf	_shortPacketStatus& (0+255),w,b
 22925  00505E  A4D8               	btfss	status,2,c
 22926  005060  D002               	goto	l235
 22927                           
 22928                           ; BSR set to: 0
 22929                           ;usb_device.c: 1794: {;usb_device.c: 1795: shortPacketStatus = 2;
 22930  005062  0E02               	movlw	2
 22931  005064                     L16:
 22932  005064  6FAF               	movwf	_shortPacketStatus& (0+255),b
 22933  005066                     l235:
 22934  005066                     l10311:
 22935                           
 22936                           ; BSR set to: 0
 22937                           ;usb_device.c: 1796: };usb_device.c: 1797: };usb_device.c: 1801: inPipes[0].wCount.Val -
      +                          = byteToSend;
 22938  005066  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 22939  005068  5F6A               	subwf	(_inPipes+4)& (0+255),f,b
 22940  00506A  0E00               	movlw	0
 22941  00506C  5B6B               	subwfb	(_inPipes+5)& (0+255),f,b
 22942                           
 22943                           ; BSR set to: 0
 22944                           ;usb_device.c: 1806: pBDTEntryIn[0]->CNT = byteToSend;
 22945  00506E  EE20 F001          	lfsr	2,1
 22946  005072  516C               	movf	_pBDTEntryIn& (0+255),w,b
 22947  005074  26D9               	addwf	fsr2l,f,c
 22948  005076  516D               	movf	(_pBDTEntryIn+1)& (0+255),w,b
 22949  005078  22DA               	addwfc	fsr2h,f,c
 22950  00507A  C001  FFDF         	movff	USBCtrlTrfTxService@byteToSend,indf2
 22951                           
 22952                           ; BSR set to: 0
 22953                           ;usb_device.c: 1810: pDst = ( uint8_t*)CtrlTrfData;
 22954  00507E  0E38               	movlw	56
 22955  005080  6F8E               	movwf	_pDst& (0+255),b
 22956  005082  0E0D               	movlw	13
 22957  005084  6F8F               	movwf	(_pDst+1)& (0+255),b
 22958                           
 22959                           ; BSR set to: 0
 22960                           ;usb_device.c: 1811: if(inPipes[0].info.bits.ctrl_trf_mem == 0x00)
 22961  005086  A169               	btfss	(_inPipes+3)& (0+255),0,b
 22962  005088  D01C               	goto	l237
 22963  00508A  D03A               	goto	l241
 22964  00508C                     
 22965                           ; BSR set to: 0
 22966                           ;usb_device.c: 1814: {;usb_device.c: 1815: *pDst++ = *inPipes[0].pSrc.bRom++;
 22967                           
 22968                           ; BSR set to: 0
 22969  00508C  C066  FFF6         	movff	_inPipes,tblptrl
 22970  005090  C067  FFF7         	movff	_inPipes+1,tblptrh
 22971  005094  6AF8               	clrf	tblptru,c
 22972  005096  C08E  FFD9         	movff	_pDst,fsr2l
 22973  00509A  C08F  FFDA         	movff	_pDst+1,fsr2h
 22974  00509E  0E0E               	movlw	(high __ramtop+-1)
 22975  0050A0  64F7               	cpfsgt	tblptrh,c
 22976  0050A2  D003               	bra	u7087
 22977  0050A4  0008               	tblrd		*
 22978  0050A6  50F5               	movf	tablat,w,c
 22979  0050A8  D005               	bra	u7080
 22980  0050AA                     u7087:
 22981  0050AA  CFF6 FFE9          	movff	tblptrl,fsr0l
 22982  0050AE  CFF7 FFEA          	movff	tblptrh,fsr0h
 22983  0050B2  50EF               	movf	indf0,w,c
 22984  0050B4                     u7080:
 22985  0050B4  6EDF               	movwf	indf2,c
 22986  0050B6  0100               	movlb	0	; () banked
 22987  0050B8  4B66               	infsnz	_inPipes& (0+255),f,b
 22988  0050BA  2B67               	incf	(_inPipes+1)& (0+255),f,b
 22989                           
 22990                           ; BSR set to: 0
 22991  0050BC  4B8E               	infsnz	_pDst& (0+255),f,b
 22992  0050BE  2B8F               	incf	(_pDst+1)& (0+255),f,b
 22993                           
 22994                           ; BSR set to: 0
 22995                           ;usb_device.c: 1816: byteToSend--;
 22996  0050C0  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 22997  0050C2                     l237:
 22998                           
 22999                           ; BSR set to: 0
 23000                           
 23001                           ; BSR set to: 0
 23002  0050C2  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23003  0050C4  B4D8               	btfsc	status,2,c
 23004  0050C6  0012               	return	
 23005  0050C8  D7E1               	goto	l238
 23006  0050CA                     
 23007                           ; BSR set to: 0
 23008                           ;usb_device.c: 1822: {;usb_device.c: 1823: *pDst++ = *inPipes[0].pSrc.bRam++;
 23009                           
 23010                           ; BSR set to: 0
 23011  0050CA  C066  FFF6         	movff	_inPipes,tblptrl
 23012  0050CE  C067  FFF7         	movff	_inPipes+1,tblptrh
 23013  0050D2  6AF8               	clrf	tblptru,c
 23014  0050D4  C08E  FFD9         	movff	_pDst,fsr2l
 23015  0050D8  C08F  FFDA         	movff	_pDst+1,fsr2h
 23016  0050DC  0E0E               	movlw	(high __ramtop+-1)
 23017  0050DE  64F7               	cpfsgt	tblptrh,c
 23018  0050E0  D003               	bra	u7107
 23019  0050E2  0008               	tblrd		*
 23020  0050E4  50F5               	movf	tablat,w,c
 23021  0050E6  D005               	bra	u7100
 23022  0050E8                     u7107:
 23023  0050E8  CFF6 FFE9          	movff	tblptrl,fsr0l
 23024  0050EC  CFF7 FFEA          	movff	tblptrh,fsr0h
 23025  0050F0  50EF               	movf	indf0,w,c
 23026  0050F2                     u7100:
 23027  0050F2  6EDF               	movwf	indf2,c
 23028  0050F4  0100               	movlb	0	; () banked
 23029  0050F6  4B66               	infsnz	_inPipes& (0+255),f,b
 23030  0050F8  2B67               	incf	(_inPipes+1)& (0+255),f,b
 23031                           
 23032                           ; BSR set to: 0
 23033  0050FA  4B8E               	infsnz	_pDst& (0+255),f,b
 23034  0050FC  2B8F               	incf	(_pDst+1)& (0+255),f,b
 23035                           
 23036                           ; BSR set to: 0
 23037                           ;usb_device.c: 1824: byteToSend--;
 23038  0050FE  0601               	decf	USBCtrlTrfTxService@byteToSend,f,c
 23039  005100                     l241:
 23040                           
 23041                           ; BSR set to: 0
 23042                           
 23043                           ; BSR set to: 0
 23044  005100  5001               	movf	USBCtrlTrfTxService@byteToSend,w,c
 23045  005102  B4D8               	btfsc	status,2,c
 23046  005104  0012               	return	
 23047  005106  D7E1               	goto	l242
 23048  005108                     __end_of_USBCtrlTrfTxService:
 23049                           	opt stack 0
 23050                           tosu	equ	0xFFF
 23051                           tosh	equ	0xFFE
 23052                           tosl	equ	0xFFD
 23053                           pclath	equ	0xFFA
 23054                           tblptru	equ	0xFF8
 23055                           tblptrh	equ	0xFF7
 23056                           tblptrl	equ	0xFF6
 23057                           tablat	equ	0xFF5
 23058                           prodh	equ	0xFF4
 23059                           prodl	equ	0xFF3
 23060                           intcon	equ	0xFF2
 23061                           intcon2	equ	0xFF1
 23062                           intcon3	equ	0xFF0
 23063                           indf0	equ	0xFEF
 23064                           postinc0	equ	0xFEE
 23065                           fsr0h	equ	0xFEA
 23066                           fsr0l	equ	0xFE9
 23067                           wreg	equ	0xFE8
 23068                           indf1	equ	0xFE7
 23069                           postdec1	equ	0xFE5
 23070                           plusw1	equ	0xFE3
 23071                           fsr1h	equ	0xFE2
 23072                           fsr1l	equ	0xFE1
 23073                           indf2	equ	0xFDF
 23074                           postinc2	equ	0xFDE
 23075                           postdec2	equ	0xFDD
 23076                           plusw2	equ	0xFDB
 23077                           fsr2h	equ	0xFDA
 23078                           fsr2l	equ	0xFD9
 23079                           status	equ	0xFD8
 23080                           
 23081 ;; *************** function _APP_DeviceMSDTasks *****************
 23082 ;; Defined at:
 23083 ;;		line 110 in file "app_device_msd.c"
 23084 ;; Parameters:    Size  Location     Type
 23085 ;;		None
 23086 ;; Auto vars:     Size  Location     Type
 23087 ;;		None
 23088 ;; Return value:  Size  Location     Type
 23089 ;;                  1    wreg      void 
 23090 ;; Registers used:
 23091 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23092 ;; Tracked objects:
 23093 ;;		On entry : 0/0
 23094 ;;		On exit  : 0/0
 23095 ;;		Unchanged: 0/0
 23096 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23097 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23098 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23099 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23100 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23101 ;;Total ram usage:        0 bytes
 23102 ;; Hardware stack levels used:    1
 23103 ;; Hardware stack levels required when called:   11
 23104 ;; This function calls:
 23105 ;;		_MSDTasks
 23106 ;; This function is called by:
 23107 ;;		_main
 23108 ;; This function uses a non-reentrant model
 23109 ;;
 23110                           
 23111                           	psect	text106
 23112  007EF8                     __ptext106:
 23113                           	opt stack 0
 23114  007EF8                     _APP_DeviceMSDTasks:
 23115                           	opt stack 19
 23116                           
 23117                           ;app_device_msd.c: 115: if( USBDeviceState < CONFIGURED_STATE )
 23118                           
 23119                           ; BSR set to: 0
 23120                           ;incstack = 0
 23121  007EF8  0E20               	movlw	32
 23122  007EFA  0100               	movlb	0	; () banked
 23123  007EFC  61B0               	cpfslt	_USBDeviceState& (0+255),b
 23124  007EFE  D001               	goto	l1002
 23125  007F00  0012               	return	
 23126  007F02                     l1002:
 23127                           
 23128                           ; BSR set to: 0
 23129                           ;app_device_msd.c: 118: };app_device_msd.c: 124: if( UCONbits.SUSPND== 1 )
 23130  007F02  B265               	btfsc	3941,1,c	;volatile
 23131  007F04  0012               	return	
 23132                           
 23133                           ; BSR set to: 0
 23134                           ;app_device_msd.c: 127: };app_device_msd.c: 129: MSDTasks();
 23135                           
 23136                           ; BSR set to: 0
 23137                           
 23138                           ; BSR set to: 0
 23139                           ;app_device_msd.c: 125: {;app_device_msd.c: 126: return;
 23140  007F06  EC4E  F00E         	call	_MSDTasks	;wreg free
 23141  007F0A  0012               	return		;funcret
 23142  007F0C                     __end_of_APP_DeviceMSDTasks:
 23143                           	opt stack 0
 23144                           tosu	equ	0xFFF
 23145                           tosh	equ	0xFFE
 23146                           tosl	equ	0xFFD
 23147                           pclath	equ	0xFFA
 23148                           tblptru	equ	0xFF8
 23149                           tblptrh	equ	0xFF7
 23150                           tblptrl	equ	0xFF6
 23151                           tablat	equ	0xFF5
 23152                           prodh	equ	0xFF4
 23153                           prodl	equ	0xFF3
 23154                           intcon	equ	0xFF2
 23155                           intcon2	equ	0xFF1
 23156                           intcon3	equ	0xFF0
 23157                           indf0	equ	0xFEF
 23158                           postinc0	equ	0xFEE
 23159                           fsr0h	equ	0xFEA
 23160                           fsr0l	equ	0xFE9
 23161                           wreg	equ	0xFE8
 23162                           indf1	equ	0xFE7
 23163                           postdec1	equ	0xFE5
 23164                           plusw1	equ	0xFE3
 23165                           fsr1h	equ	0xFE2
 23166                           fsr1l	equ	0xFE1
 23167                           indf2	equ	0xFDF
 23168                           postinc2	equ	0xFDE
 23169                           postdec2	equ	0xFDD
 23170                           plusw2	equ	0xFDB
 23171                           fsr2h	equ	0xFDA
 23172                           fsr2l	equ	0xFD9
 23173                           status	equ	0xFD8
 23174                           
 23175 ;; *************** function _MSDTasks *****************
 23176 ;; Defined at:
 23177 ;;		line 335 in file "usb_device_msd.c"
 23178 ;; Parameters:    Size  Location     Type
 23179 ;;		None
 23180 ;; Auto vars:     Size  Location     Type
 23181 ;;  i               1   81[COMRAM] unsigned char 
 23182 ;; Return value:  Size  Location     Type
 23183 ;;                  1    wreg      unsigned char 
 23184 ;; Registers used:
 23185 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23186 ;; Tracked objects:
 23187 ;;		On entry : 0/0
 23188 ;;		On exit  : 0/0
 23189 ;;		Unchanged: 0/0
 23190 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23191 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23192 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23193 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23194 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23195 ;;Total ram usage:        6 bytes
 23196 ;; Hardware stack levels used:    1
 23197 ;; Hardware stack levels required when called:   10
 23198 ;; This function calls:
 23199 ;;		_MSDProcessCommand
 23200 ;;		_USBStallEndpoint
 23201 ;;		_USBTransferOnePacket
 23202 ;; This function is called by:
 23203 ;;		_APP_DeviceMSDTasks
 23204 ;; This function uses a non-reentrant model
 23205 ;;
 23206                           
 23207                           	psect	text107
 23208  001C9C                     __ptext107:
 23209                           	opt stack 0
 23210  001C9C                     _MSDTasks:
 23211                           	opt stack 19
 23212                           
 23213                           ;usb_device_msd.c: 337: uint8_t i;;usb_device_msd.c: 342: if(USBDeviceState != CONFIGURE
      +                          D_STATE)
 23214                           
 23215                           ;incstack = 0
 23216  001C9C  0E20               	movlw	32
 23217  001C9E  0100               	movlb	0	; () banked
 23218  001CA0  19B0               	xorwf	_USBDeviceState& (0+255),w,b
 23219  001CA2  A4D8               	btfss	status,2,c
 23220  001CA4  0012               	return	
 23221  001CA6  D117               	goto	l554
 23222  001CA8                     
 23223                           ; BSR set to: 0
 23224                           ;usb_device_msd.c: 360: {;usb_device_msd.c: 362: if(!((USBMSDOutHandle != 0x0000) && ((*
      +                          (volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)))
 23225                           
 23226                           ; BSR set to: 0
 23227  001CA8  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 23228  001CAA  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23229  001CAC  B4D8               	btfsc	status,2,c
 23230  001CAE  D006               	goto	u10210
 23231                           
 23232                           ; BSR set to: 0
 23233  001CB0  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23234  001CB4  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23235  001CB8  BEDF               	btfsc	indf2,7,c
 23236  001CBA  0012               	return	
 23237  001CBC                     u10210:
 23238                           
 23239                           ; BSR set to: 0
 23240                           ;usb_device_msd.c: 363: {;usb_device_msd.c: 371: for(i = 0; i < 0x1f; i++)
 23241                           
 23242                           ; BSR set to: 0
 23243  001CBC  0E00               	movlw	0
 23244  001CBE  6E52               	movwf	MSDTasks@i,c
 23245  001CC0                     l13379:
 23246                           
 23247                           ; BSR set to: 0
 23248  001CC0  0E1E               	movlw	30
 23249  001CC2  6452               	cpfsgt	MSDTasks@i,c
 23250  001CC4  D001               	goto	l559
 23251  001CC6  D014               	goto	u10230
 23252  001CC8                     l559:
 23253                           
 23254                           ;usb_device_msd.c: 372: {;usb_device_msd.c: 373: *((uint8_t*)&gblCBW.dCBWSignature + i) 
      +                          = *((uint8_t*)&msd_cbw.dCBWSignature + i);
 23255                           
 23256                           ; BSR set to: 0
 23257  001CC8  5052               	movf	MSDTasks@i,w,c
 23258  001CCA  0D01               	mullw	1
 23259  001CCC  0E40               	movlw	64
 23260  001CCE  24F3               	addwf	prodl,w,c
 23261  001CD0  6ED9               	movwf	fsr2l,c
 23262  001CD2  0E0D               	movlw	13
 23263  001CD4  20F4               	addwfc	prodh,w,c
 23264  001CD6  6EDA               	movwf	fsr2h,c
 23265  001CD8  5052               	movf	MSDTasks@i,w,c
 23266  001CDA  0D01               	mullw	1
 23267  001CDC  0E00               	movlw	low _gblCBW
 23268  001CDE  24F3               	addwf	prodl,w,c
 23269  001CE0  6EE1               	movwf	fsr1l,c
 23270  001CE2  0E01               	movlw	high _gblCBW
 23271  001CE4  20F4               	addwfc	prodh,w,c
 23272  001CE6  6EE2               	movwf	fsr1h,c
 23273  001CE8  CFDF FFE7          	movff	indf2,indf1
 23274  001CEC  2A52               	incf	MSDTasks@i,f,c
 23275  001CEE  D7E8               	goto	l13379
 23276  001CF0                     u10230:
 23277                           
 23278                           ;usb_device_msd.c: 374: };usb_device_msd.c: 377: if(((((volatile BDT_ENTRY*)USBMSDOutHan
      +                          dle)->CNT) == 0x1f) && (gblCBW.dCBWSignature == (uint32_t)0x43425355))
 23279  001CF0  0100               	movlb	0	; () banked
 23280  001CF2  EE20 F001          	lfsr	2,1
 23281  001CF6  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 23282  001CF8  26D9               	addwf	fsr2l,f,c
 23283  001CFA  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 23284  001CFC  22DA               	addwfc	fsr2h,f,c
 23285  001CFE  0E1F               	movlw	31
 23286  001D00  18DE               	xorwf	postinc2,w,c
 23287  001D02  A4D8               	btfss	status,2,c
 23288  001D04  D072               	goto	l561
 23289                           
 23290                           ; BSR set to: 0
 23291  001D06  0E55               	movlw	85
 23292  001D08  0101               	movlb	1	; () banked
 23293  001D0A  1900               	xorwf	_gblCBW& (0+255),w,b
 23294  001D0C  E16E               	bnz	l561
 23295  001D0E  0E53               	movlw	83
 23296  001D10  1901               	xorwf	(_gblCBW+1)& (0+255),w,b
 23297  001D12  E16B               	bnz	l561
 23298  001D14  0E42               	movlw	66
 23299  001D16  1902               	xorwf	(_gblCBW+2)& (0+255),w,b
 23300  001D18  E168               	bnz	l561
 23301  001D1A  0E43               	movlw	67
 23302  001D1C  1903               	xorwf	(_gblCBW+3)& (0+255),w,b
 23303  001D1E  A4D8               	btfss	status,2,c
 23304  001D20  D064               	goto	l561
 23305                           
 23306                           ; BSR set to: 1
 23307                           ;usb_device_msd.c: 378: {;usb_device_msd.c: 381: MSDCBWValid = 1;
 23308  001D22  0E01               	movlw	1
 23309  001D24  0100               	movlb	0	; () banked
 23310  001D26  6F9A               	movwf	_MSDCBWValid& (0+255),b
 23311                           
 23312                           ;usb_device_msd.c: 384: if((gblCBW.bCBWLUN <= 0u);usb_device_msd.c: 385: &&(gblCBW.bCBWC
      +                          BLength <= 0x10);usb_device_msd.c: 386: &&(gblCBW.bCBWCBLength >= 0x01);usb_device_msd.c
      +                          : 387: &&((gblCBW.bCBWFlags & 0x3F) == 0x00))
 23313  001D28  0101               	movlb	1	; () banked
 23314  001D2A  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23315  001D2C  A4D8               	btfss	status,2,c
 23316  001D2E  D052               	goto	l562
 23317                           
 23318                           ; BSR set to: 1
 23319  001D30  0E11               	movlw	17
 23320  001D32  610E               	cpfslt	(_gblCBW+14)& (0+255),b
 23321  001D34  D04F               	goto	l562
 23322                           
 23323                           ; BSR set to: 1
 23324  001D36  510E               	movf	(_gblCBW+14)& (0+255),w,b
 23325  001D38  B4D8               	btfsc	status,2,c
 23326  001D3A  D04C               	goto	l562
 23327                           
 23328                           ; BSR set to: 1
 23329  001D3C  C10C  F04D         	movff	_gblCBW+12,??_MSDTasks
 23330  001D40  0E3F               	movlw	63
 23331  001D42  164D               	andwf	??_MSDTasks,f,c
 23332  001D44  A4D8               	btfss	status,2,c
 23333  001D46  D046               	goto	l562
 23334                           
 23335                           ; BSR set to: 1
 23336                           ;usb_device_msd.c: 388: {;usb_device_msd.c: 395: msd_csw.dCSWSignature = (uint32_t)0x534
      +                          25355;
 23337  001D48  0E55               	movlw	85
 23338  001D4A  010D               	movlb	13	; () banked
 23339  001D4C  6F80               	movwf	128,b	;volatile
 23340  001D4E  0E53               	movlw	83
 23341  001D50  6F81               	movwf	129,b	;volatile
 23342  001D52  0E42               	movlw	66
 23343  001D54  6F82               	movwf	130,b	;volatile
 23344  001D56  0E53               	movlw	83
 23345  001D58  6F83               	movwf	131,b	;volatile
 23346                           
 23347                           ; BSR set to: 13
 23348                           ;usb_device_msd.c: 396: msd_csw.dCSWTag = gblCBW.dCBWTag;
 23349  001D5A  C104  FD84         	movff	_gblCBW+4,3460	;volatile
 23350  001D5E  C105  FD85         	movff	_gblCBW+5,3461	;volatile
 23351  001D62  C106  FD86         	movff	_gblCBW+6,3462	;volatile
 23352  001D66  C107  FD87         	movff	_gblCBW+7,3463	;volatile
 23353                           
 23354                           ;usb_device_msd.c: 397: msd_csw.dCSWDataResidue = 0x0;
 23355  001D6A  0E00               	movlw	0
 23356  001D6C  6F88               	movwf	136,b	;volatile
 23357  001D6E  0E00               	movlw	0
 23358  001D70  6F89               	movwf	137,b	;volatile
 23359  001D72  0E00               	movlw	0
 23360  001D74  6F8A               	movwf	138,b	;volatile
 23361  001D76  0E00               	movlw	0
 23362  001D78  6F8B               	movwf	139,b	;volatile
 23363                           
 23364                           ;usb_device_msd.c: 398: msd_csw.bCSWStatus = 0x00;
 23365  001D7A  0E00               	movlw	0
 23366  001D7C  6F8C               	movwf	140,b	;volatile
 23367                           
 23368                           ; BSR set to: 13
 23369                           ;usb_device_msd.c: 405: MSDCommandState = 0xFF;
 23370  001D7E  0100               	movlb	0	; () banked
 23371  001D80  69A1               	setf	_MSDCommandState& (0+255),b
 23372                           
 23373                           ;usb_device_msd.c: 406: MSDReadState = 0x00;
 23374  001D82  0E00               	movlw	0
 23375  001D84  6FA0               	movwf	_MSDReadState& (0+255),b
 23376                           
 23377                           ;usb_device_msd.c: 407: MSDWriteState = 0x00;
 23378  001D86  0E00               	movlw	0
 23379  001D88  6F9F               	movwf	_MSDWriteState& (0+255),b
 23380                           
 23381                           ;usb_device_msd.c: 411: MSDRetryAttempt = 0;
 23382  001D8A  0E00               	movlw	0
 23383  001D8C  6F9E               	movwf	_MSDRetryAttempt& (0+255),b
 23384                           
 23385                           ; BSR set to: 0
 23386                           ;usb_device_msd.c: 420: if(gblCBW.CBWCB[0] != 0x03)
 23387  001D8E  0E03               	movlw	3
 23388  001D90  0101               	movlb	1	; () banked
 23389  001D92  190F               	xorwf	(_gblCBW+15)& (0+255),w,b
 23390  001D94  B4D8               	btfsc	status,2,c
 23391  001D96  D008               	goto	l563
 23392                           
 23393                           ; BSR set to: 1
 23394                           ;usb_device_msd.c: 421: {;usb_device_msd.c: 422: gblSenseData[0].SenseKey=0x0;
 23395  001D98  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 23396  001D9A  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 23397  001D9C  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 23398  001D9E  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 23399                           
 23400                           ; BSR set to: 1
 23401                           ;usb_device_msd.c: 423: gblSenseData[0].ASC=0x00;
 23402  001DA0  0E00               	movlw	0
 23403  001DA2  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23404                           
 23405                           ;usb_device_msd.c: 424: gblSenseData[0].ASCQ=0x00;
 23406  001DA4  0E00               	movlw	0
 23407  001DA6  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23408  001DA8                     l563:
 23409                           
 23410                           ; BSR set to: 1
 23411                           ;usb_device_msd.c: 425: };usb_device_msd.c: 431: if (gblCBW.bCBWFlags & 0x80)
 23412                           
 23413                           ; BSR set to: 1
 23414  001DA8  AF0C               	btfss	(_gblCBW+12)& (0+255),7,b
 23415  001DAA  D002               	goto	l564
 23416                           
 23417                           ; BSR set to: 1
 23418                           ;usb_device_msd.c: 432: {;usb_device_msd.c: 433: MSD_State = 0x01;
 23419  001DAC  0E01               	movlw	1
 23420  001DAE  D001               	goto	L17
 23421  001DB0                     l564:
 23422                           
 23423                           ;usb_device_msd.c: 435: else;usb_device_msd.c: 436: {;usb_device_msd.c: 437: MSD_State =
      +                           0x02;
 23424                           
 23425                           ; BSR set to: 0
 23426  001DB0  0E02               	movlw	2
 23427  001DB2                     L17:
 23428  001DB2  0100               	movlb	0	; () banked
 23429  001DB4  6FA2               	movwf	_MSD_State& (0+255),b
 23430                           
 23431                           ; BSR set to: 0
 23432                           ;usb_device_msd.c: 438: };usb_device_msd.c: 442: if(gblCBW.dCBWDataTransferLength != 0)
 23433                           
 23434                           ; BSR set to: 0
 23435  001DB6  0101               	movlb	1	; () banked
 23436  001DB8  5108               	movf	(_gblCBW+8)& (0+255),w,b
 23437  001DBA  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 23438  001DBC  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 23439  001DBE  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 23440  001DC0  B4D8               	btfsc	status,2,c
 23441  001DC2  D002               	goto	l566
 23442                           
 23443                           ; BSR set to: 1
 23444                           ;usb_device_msd.c: 443: {;usb_device_msd.c: 444: MSDHostNoData = 0;
 23445  001DC4  0E00               	movlw	0
 23446  001DC6  D001               	goto	L18
 23447  001DC8                     l566:
 23448                           
 23449                           ;usb_device_msd.c: 446: else;usb_device_msd.c: 447: {;usb_device_msd.c: 448: MSDHostNoDa
      +                          ta = 1;
 23450                           
 23451                           ; BSR set to: 0
 23452  001DC8  0E01               	movlw	1
 23453  001DCA                     L18:
 23454  001DCA  0100               	movlb	0	; () banked
 23455  001DCC  6F9B               	movwf	_MSDHostNoData& (0+255),b
 23456                           
 23457                           ; BSR set to: 0
 23458                           ;usb_device_msd.c: 449: };usb_device_msd.c: 453: MSDCommandState = gblCBW.CBWCB[0];
 23459                           
 23460                           ; BSR set to: 0
 23461  001DCE  C10F  F0A1         	movff	_gblCBW+15,_MSDCommandState
 23462                           
 23463                           ;usb_device_msd.c: 454: }
 23464  001DD2  0012               	return	
 23465  001DD4                     l562:
 23466                           
 23467                           ;usb_device_msd.c: 455: else;usb_device_msd.c: 456: {;usb_device_msd.c: 460: USBStallEnd
      +                          point(2u, 1);
 23468                           
 23469                           ; BSR set to: 0
 23470  001DD4  0E01               	movlw	1
 23471  001DD6  6E01               	movwf	USBStallEndpoint@dir,c
 23472  001DD8  0E02               	movlw	2
 23473  001DDA  EC1E  F021         	call	_USBStallEndpoint
 23474                           
 23475                           ;usb_device_msd.c: 461: USBStallEndpoint(2u, 0);
 23476  001DDE  0E00               	movlw	0
 23477  001DE0  6E01               	movwf	USBStallEndpoint@dir,c
 23478  001DE2  0E02               	movlw	2
 23479  001DE4  EC1E  F021         	call	_USBStallEndpoint
 23480                           
 23481                           ;usb_device_msd.c: 462: };usb_device_msd.c: 463: }
 23482  001DE8  0012               	return	
 23483  001DEA                     l561:
 23484                           
 23485                           ;usb_device_msd.c: 464: else;usb_device_msd.c: 465: {;usb_device_msd.c: 469: USBStallEnd
      +                          point(2u, 1);
 23486  001DEA  0E01               	movlw	1
 23487  001DEC  6E01               	movwf	USBStallEndpoint@dir,c
 23488  001DEE  0E02               	movlw	2
 23489  001DF0  EC1E  F021         	call	_USBStallEndpoint
 23490                           
 23491                           ;usb_device_msd.c: 470: USBStallEndpoint(2u, 0);
 23492  001DF4  0E00               	movlw	0
 23493  001DF6  6E01               	movwf	USBStallEndpoint@dir,c
 23494  001DF8  0E02               	movlw	2
 23495  001DFA  EC1E  F021         	call	_USBStallEndpoint
 23496                           
 23497                           ;usb_device_msd.c: 471: MSDCBWValid = 0;
 23498  001DFE  0E00               	movlw	0
 23499  001E00  0100               	movlb	0	; () banked
 23500  001E02  6F9A               	movwf	_MSDCBWValid& (0+255),b
 23501                           
 23502                           ; BSR set to: 0
 23503                           ;usb_device_msd.c: 474: };usb_device_msd.c: 475: };usb_device_msd.c: 476: break;
 23504                           
 23505                           ; BSR set to: 0
 23506  001E04  0012               	return	
 23507  001E06                     
 23508                           ; BSR set to: 0
 23509                           ;usb_device_msd.c: 479: if(MSDProcessCommand() == 0xFF)
 23510                           
 23511                           ; BSR set to: 0
 23512  001E06  EC95  F020         	call	_MSDProcessCommand	;wreg free
 23513  001E0A  0AFF               	xorlw	255
 23514  001E0C  A4D8               	btfss	status,2,c
 23515  001E0E  0012               	return	
 23516                           
 23517                           ;usb_device_msd.c: 480: {;usb_device_msd.c: 482: MSD_State = 0x03;
 23518  001E10  0E03               	movlw	3
 23519  001E12  0100               	movlb	0	; () banked
 23520  001E14  6FA2               	movwf	_MSD_State& (0+255),b
 23521                           
 23522                           ; BSR set to: 0
 23523                           ;usb_device_msd.c: 483: };usb_device_msd.c: 484: break;
 23524  001E16  0012               	return	
 23525  001E18                     
 23526                           ; BSR set to: 0
 23527                           ;usb_device_msd.c: 486: if(MSDProcessCommand() == 0xFF)
 23528                           
 23529                           ; BSR set to: 0
 23530  001E18  EC95  F020         	call	_MSDProcessCommand	;wreg free
 23531  001E1C  0AFF               	xorlw	255
 23532  001E1E  A4D8               	btfss	status,2,c
 23533  001E20  0012               	return	
 23534                           
 23535                           ;usb_device_msd.c: 487: {;usb_device_msd.c: 489: if ((msd_csw.bCSWStatus == 0x00)&&(msd_
      +                          csw.dCSWDataResidue!=0))
 23536  001E22  010D               	movlb	13	; () banked
 23537  001E24  518C               	movf	140,w,b	;volatile
 23538  001E26  A4D8               	btfss	status,2,c
 23539  001E28  D008               	goto	l575
 23540                           
 23541                           ; BSR set to: 13
 23542  001E2A  5188               	movf	136,w,b	;volatile
 23543  001E2C  1189               	iorwf	137,w,b	;volatile
 23544  001E2E  118A               	iorwf	138,w,b	;volatile
 23545  001E30  118B               	iorwf	139,w,b	;volatile
 23546  001E32  B4D8               	btfsc	status,2,c
 23547  001E34  D002               	goto	l575
 23548                           
 23549                           ; BSR set to: 13
 23550                           ;usb_device_msd.c: 490: {;usb_device_msd.c: 491: msd_csw.bCSWStatus = 0x02;
 23551  001E36  0E02               	movlw	2
 23552  001E38  6F8C               	movwf	140,b	;volatile
 23553  001E3A                     l575:
 23554                           
 23555                           ; BSR set to: 13
 23556                           ;usb_device_msd.c: 492: };usb_device_msd.c: 493: MSD_State = 0x03;
 23557  001E3A  0E03               	movlw	3
 23558  001E3C  0100               	movlb	0	; () banked
 23559  001E3E  6FA2               	movwf	_MSD_State& (0+255),b
 23560                           
 23561                           ; BSR set to: 0
 23562                           ;usb_device_msd.c: 494: };usb_device_msd.c: 495: break;
 23563  001E40  0012               	return	
 23564  001E42                     
 23565                           ; BSR set to: 0
 23566                           
 23567                           ; BSR set to: 0
 23568  001E42  C070  F04E         	movff	_pBDTEntryIn+4,_MSDTasks$2372
 23569  001E46  C071  F04F         	movff	_pBDTEntryIn+5,_MSDTasks$2372+1
 23570                           
 23571                           ; BSR set to: 0
 23572                           
 23573                           ; BSR set to: 0
 23574                           
 23575                           ; BSR set to: 0
 23576  001E4A  504E               	movf	_MSDTasks$2372,w,c
 23577  001E4C  104F               	iorwf	_MSDTasks$2372+1,w,c
 23578  001E4E  B4D8               	btfsc	status,2,c
 23579  001E50  D00A               	goto	l577
 23580                           
 23581                           ; BSR set to: 0
 23582  001E52  C070  F050         	movff	_pBDTEntryIn+4,_MSDTasks$2373
 23583  001E56  C071  F051         	movff	_pBDTEntryIn+5,_MSDTasks$2373+1
 23584                           
 23585                           ; BSR set to: 0
 23586                           
 23587                           ; BSR set to: 0
 23588                           
 23589                           ; BSR set to: 0
 23590                           
 23591                           ; BSR set to: 0
 23592  001E5A  C050  FFD9         	movff	_MSDTasks$2373,fsr2l
 23593  001E5E  C051  FFDA         	movff	_MSDTasks$2373+1,fsr2h
 23594  001E62  BEDF               	btfsc	indf2,7,c
 23595  001E64  0012               	return	
 23596  001E66                     l577:
 23597                           
 23598                           ; BSR set to: 0
 23599                           ;usb_device_msd.c: 502: };usb_device_msd.c: 505: USBMSDInHandle = USBTransferOnePacket(2
      +                          u,1,(uint8_t*)&msd_csw,0x0d);
 23600                           
 23601                           ; BSR set to: 0
 23602  001E66  0E01               	movlw	1
 23603  001E68  6E01               	movwf	USBTransferOnePacket@dir,c
 23604  001E6A  0E80               	movlw	128
 23605  001E6C  6E02               	movwf	USBTransferOnePacket@data,c
 23606  001E6E  0E0D               	movlw	13
 23607  001E70  6E03               	movwf	USBTransferOnePacket@data+1,c
 23608  001E72  0E0D               	movlw	13
 23609  001E74  6E04               	movwf	USBTransferOnePacket@len,c
 23610  001E76  0E02               	movlw	2
 23611  001E78  EC2B  F023         	call	_USBTransferOnePacket
 23612  001E7C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 23613  001E80  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 23614                           
 23615                           ;usb_device_msd.c: 508: if(!((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)))
 23616  001E84  0100               	movlb	0	; () banked
 23617  001E86  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 23618  001E88  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 23619  001E8A  B4D8               	btfsc	status,2,c
 23620  001E8C  D006               	goto	u10400
 23621                           
 23622                           ; BSR set to: 0
 23623  001E8E  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 23624  001E92  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 23625  001E96  BEDF               	btfsc	indf2,7,c
 23626  001E98  D00F               	goto	l586
 23627  001E9A                     u10400:
 23628                           
 23629                           ; BSR set to: 0
 23630                           ;usb_device_msd.c: 509: {;usb_device_msd.c: 510: USBMSDOutHandle = USBTransferOnePacket(
      +                          2u,0,(uint8_t*)&msd_cbw,64u);
 23631                           
 23632                           ; BSR set to: 0
 23633  001E9A  0E00               	movlw	0
 23634  001E9C  6E01               	movwf	USBTransferOnePacket@dir,c
 23635  001E9E  0E40               	movlw	64
 23636  001EA0  6E02               	movwf	USBTransferOnePacket@data,c
 23637  001EA2  0E0D               	movlw	13
 23638  001EA4  6E03               	movwf	USBTransferOnePacket@data+1,c
 23639  001EA6  0E40               	movlw	64
 23640  001EA8  6E04               	movwf	USBTransferOnePacket@len,c
 23641  001EAA  0E02               	movlw	2
 23642  001EAC  EC2B  F023         	call	_USBTransferOnePacket
 23643  001EB0  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 23644  001EB4  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 23645  001EB8                     l586:
 23646                           
 23647                           ;usb_device_msd.c: 511: };usb_device_msd.c: 512: MSD_State=0x00;
 23648  001EB8  0E00               	movlw	0
 23649  001EBA  0100               	movlb	0	; () banked
 23650  001EBC  6FA2               	movwf	_MSD_State& (0+255),b
 23651                           
 23652                           ;usb_device_msd.c: 513: break;
 23653  001EBE  0012               	return	
 23654  001EC0                     
 23655                           ; BSR set to: 0
 23656                           ;usb_device_msd.c: 518: MSD_State=0x00;
 23657                           
 23658                           ; BSR set to: 0
 23659  001EC0  0E00               	movlw	0
 23660  001EC2  6FA2               	movwf	_MSD_State& (0+255),b
 23661                           
 23662                           ;usb_device_msd.c: 519: msd_csw.bCSWStatus = 0x02;
 23663  001EC4  0E02               	movlw	2
 23664  001EC6  010D               	movlb	13	; () banked
 23665  001EC8  6F8C               	movwf	140,b	;volatile
 23666                           
 23667                           ; BSR set to: 13
 23668                           ;usb_device_msd.c: 520: USBStallEndpoint(2u, 0);
 23669  001ECA  0E00               	movlw	0
 23670  001ECC  6E01               	movwf	USBStallEndpoint@dir,c
 23671  001ECE  0E02               	movlw	2
 23672  001ED0  EC1E  F021         	call	_USBStallEndpoint
 23673                           
 23674                           ;usb_device_msd.c: 521: }
 23675  001ED4  0012               	return	
 23676  001ED6                     l554:
 23677  001ED6  0100               	movlb	0	; () banked
 23678  001ED8  51A2               	movf	_MSD_State& (0+255),w,b
 23679                           
 23680                           ; Switch size 1, requested type "space"
 23681                           ; Number of cases is 4, Range of values is 0 to 3
 23682                           ; switch strategies available:
 23683                           ; Name         Instructions Cycles
 23684                           ; simple_byte           13     7 (average)
 23685                           ;	Chosen strategy is simple_byte
 23686  001EDA  0A00               	xorlw	0	; case 0
 23687  001EDC  B4D8               	btfsc	status,2,c
 23688  001EDE  D6E4               	goto	l555
 23689  001EE0  0A01               	xorlw	1	; case 1
 23690  001EE2  B4D8               	btfsc	status,2,c
 23691  001EE4  D790               	goto	l571
 23692  001EE6  0A03               	xorlw	3	; case 2
 23693  001EE8  B4D8               	btfsc	status,2,c
 23694  001EEA  D796               	goto	l573
 23695  001EEC  0A01               	xorlw	1	; case 3
 23696  001EEE  B4D8               	btfsc	status,2,c
 23697  001EF0  D7A8               	goto	l576
 23698  001EF2  D7E6               	goto	l589
 23699  001EF4                     __end_of_MSDTasks:
 23700                           	opt stack 0
 23701                           tosu	equ	0xFFF
 23702                           tosh	equ	0xFFE
 23703                           tosl	equ	0xFFD
 23704                           pclath	equ	0xFFA
 23705                           tblptru	equ	0xFF8
 23706                           tblptrh	equ	0xFF7
 23707                           tblptrl	equ	0xFF6
 23708                           tablat	equ	0xFF5
 23709                           prodh	equ	0xFF4
 23710                           prodl	equ	0xFF3
 23711                           intcon	equ	0xFF2
 23712                           intcon2	equ	0xFF1
 23713                           intcon3	equ	0xFF0
 23714                           indf0	equ	0xFEF
 23715                           postinc0	equ	0xFEE
 23716                           fsr0h	equ	0xFEA
 23717                           fsr0l	equ	0xFE9
 23718                           wreg	equ	0xFE8
 23719                           indf1	equ	0xFE7
 23720                           postdec1	equ	0xFE5
 23721                           plusw1	equ	0xFE3
 23722                           fsr1h	equ	0xFE2
 23723                           fsr1l	equ	0xFE1
 23724                           indf2	equ	0xFDF
 23725                           postinc2	equ	0xFDE
 23726                           postdec2	equ	0xFDD
 23727                           plusw2	equ	0xFDB
 23728                           fsr2h	equ	0xFDA
 23729                           fsr2l	equ	0xFD9
 23730                           status	equ	0xFD8
 23731                           
 23732 ;; *************** function _MSDProcessCommand *****************
 23733 ;; Defined at:
 23734 ;;		line 553 in file "usb_device_msd.c"
 23735 ;; Parameters:    Size  Location     Type
 23736 ;;		None
 23737 ;; Auto vars:     Size  Location     Type
 23738 ;;		None
 23739 ;; Return value:  Size  Location     Type
 23740 ;;                  1    wreg      unsigned char 
 23741 ;; Registers used:
 23742 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 23743 ;; Tracked objects:
 23744 ;;		On entry : 0/0
 23745 ;;		On exit  : 0/0
 23746 ;;		Unchanged: 0/0
 23747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 23748 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23749 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23750 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23751 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 23752 ;;Total ram usage:        5 bytes
 23753 ;; Hardware stack levels used:    1
 23754 ;; Hardware stack levels required when called:    9
 23755 ;; This function calls:
 23756 ;;		_ExternalFlash_MediaDetect
 23757 ;;		_ExternalFlash_MediaInitialize
 23758 ;;		_MSDProcessCommandMediaAbsent
 23759 ;;		_MSDProcessCommandMediaPresent
 23760 ;; This function is called by:
 23761 ;;		_MSDTasks
 23762 ;; This function uses a non-reentrant model
 23763 ;;
 23764                           
 23765                           	psect	text108
 23766  00412A                     __ptext108:
 23767                           	opt stack 0
 23768  00412A                     _MSDProcessCommand:
 23769                           	opt stack 19
 23770                           
 23771                           ;usb_device_msd.c: 557: if((LUN[0].MediaDetect(LUN[0].mediaParameters) == 0) || (SoftDet
      +                          ach[gblCBW.bCBWLUN] == 1))
 23772                           
 23773                           ;incstack = 0
 23774  00412A  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaDetect@config
 23775  00412E  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaDetect@config+1
 23776  004132  D801               	call	u9308
 23777  004134  D00A               	goto	u9309
 23778  004136                     u9308:
 23779  004136  0005               	push	
 23780  004138  6EFA               	movwf	pclath,c
 23781  00413A  0101               	movlb	1	; () banked
 23782  00413C  51EA               	movf	(_LUN+6)& (0+255),w,b
 23783  00413E  6EFD               	movwf	tosl,c
 23784  004140  51EB               	movf	(_LUN+7)& (0+255),w,b
 23785  004142  6EFE               	movwf	tosh,c
 23786  004144  6AFF               	clrf	tosu,c
 23787  004146  50FA               	movf	pclath,w,c
 23788  004148  0012               	return		;indir
 23789  00414A                     u9309:
 23790  00414A  0900               	iorlw	0
 23791  00414C  B4D8               	btfsc	status,2,c
 23792  00414E  D00C               	goto	u9320
 23793  004150  0101               	movlb	1	; () banked
 23794  004152  510D               	movf	(_gblCBW+13)& (0+255),w,b
 23795  004154  0D01               	mullw	1
 23796  004156  0E9C               	movlw	low _SoftDetach
 23797  004158  24F3               	addwf	prodl,w,c
 23798  00415A  6ED9               	movwf	fsr2l,c
 23799  00415C  0E00               	movlw	high _SoftDetach
 23800  00415E  20F4               	addwfc	prodh,w,c
 23801  004160  6EDA               	movwf	fsr2h,c
 23802  004162  04DE               	decf	postinc2,w,c
 23803  004164  A4D8               	btfss	status,2,c
 23804  004166  D019               	goto	l592
 23805  004168                     u9320:
 23806                           
 23807                           ;usb_device_msd.c: 558: {;usb_device_msd.c: 561: gblMediaPresent &= ~((uint16_t)1<<gblCB
      +                          W.bCBWLUN);
 23808                           
 23809                           ; BSR set to: 1
 23810  004168  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23811  00416C  0E01               	movlw	1
 23812  00416E  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23813  004170  0E00               	movlw	0
 23814  004172  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23815  004174  2A48               	incf	??_MSDProcessCommand,f,c
 23816  004176  D003               	goto	u9334
 23817  004178                     u9335:
 23818  004178  90D8               	bcf	status,0,c
 23819  00417A  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23820  00417C  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23821  00417E                     u9334:
 23822  00417E  2E48               	decfsz	??_MSDProcessCommand,f,c
 23823  004180  D7FB               	goto	u9335
 23824  004182  1C49               	comf	??_MSDProcessCommand+1,w,c
 23825  004184  6E4B               	movwf	(??_MSDProcessCommand+3)& (0+255),c
 23826  004186  1C4A               	comf	??_MSDProcessCommand+2,w,c
 23827  004188  6E4C               	movwf	(??_MSDProcessCommand+4)& (0+255),c
 23828  00418A  504B               	movf	??_MSDProcessCommand+3,w,c
 23829  00418C  0101               	movlb	1	; () banked
 23830  00418E  1772               	andwf	_gblMediaPresent& (0+255),f,b
 23831  004190  504C               	movf	??_MSDProcessCommand+4,w,c
 23832  004192  1773               	andwf	(_gblMediaPresent+1)& (0+255),f,b
 23833                           
 23834                           ; BSR set to: 1
 23835                           ;usb_device_msd.c: 562: MSDProcessCommandMediaAbsent();
 23836  004194  ECF1  F036         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23837                           
 23838                           ;usb_device_msd.c: 563: }
 23839  004198  D04E               	goto	l599
 23840  00419A                     l592:
 23841                           
 23842                           ;usb_device_msd.c: 564: else;usb_device_msd.c: 565: {;usb_device_msd.c: 567: if((gblMedi
      +                          aPresent & ((uint16_t)1<<gblCBW.bCBWLUN)) == 0)
 23843  00419A  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23844  00419E  0E01               	movlw	1
 23845  0041A0  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23846  0041A2  0E00               	movlw	0
 23847  0041A4  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23848  0041A6  2A48               	incf	??_MSDProcessCommand,f,c
 23849  0041A8  D003               	goto	u9344
 23850  0041AA                     u9345:
 23851  0041AA  90D8               	bcf	status,0,c
 23852  0041AC  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23853  0041AE  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23854  0041B0                     u9344:
 23855  0041B0  2E48               	decfsz	??_MSDProcessCommand,f,c
 23856  0041B2  D7FB               	goto	u9345
 23857  0041B4  0101               	movlb	1	; () banked
 23858  0041B6  5172               	movf	_gblMediaPresent& (0+255),w,b
 23859  0041B8  1649               	andwf	??_MSDProcessCommand+1,f,c
 23860  0041BA  5173               	movf	(_gblMediaPresent+1)& (0+255),w,b
 23861  0041BC  164A               	andwf	??_MSDProcessCommand+2,f,c
 23862  0041BE  5049               	movf	??_MSDProcessCommand+1,w,c
 23863  0041C0  104A               	iorwf	??_MSDProcessCommand+2,w,c
 23864  0041C2  A4D8               	btfss	status,2,c
 23865  0041C4  D036               	goto	l596
 23866                           
 23867                           ; BSR set to: 1
 23868                           ;usb_device_msd.c: 568: {;usb_device_msd.c: 570: if(LUN[0].MediaInitialize(LUN[0].mediaP
      +                          arameters))
 23869  0041C6  C1F2  F001         	movff	_LUN+14,ExternalFlash_MediaInitialize@config
 23870  0041CA  C1F3  F002         	movff	_LUN+15,ExternalFlash_MediaInitialize@config+1
 23871  0041CE  D801               	call	u9368
 23872  0041D0  D009               	goto	u9369
 23873  0041D2                     u9368:
 23874  0041D2  0005               	push	
 23875  0041D4  6EFA               	movwf	pclath,c
 23876  0041D6  51E4               	movf	_LUN& (0+255),w,b
 23877  0041D8  6EFD               	movwf	tosl,c
 23878  0041DA  51E5               	movf	(_LUN+1)& (0+255),w,b
 23879  0041DC  6EFE               	movwf	tosh,c
 23880  0041DE  6AFF               	clrf	tosu,c
 23881  0041E0  50FA               	movf	pclath,w,c
 23882  0041E2  0012               	return		;indir
 23883  0041E4                     u9369:
 23884  0041E4  5001               	movf	?_ExternalFlash_MediaInitialize,w,c
 23885  0041E6  1002               	iorwf	?_ExternalFlash_MediaInitialize+1,w,c
 23886  0041E8  B4D8               	btfsc	status,2,c
 23887  0041EA  D020               	goto	l597
 23888                           
 23889                           ;usb_device_msd.c: 571: {;usb_device_msd.c: 575: gblMediaPresent |= ((uint16_t)1<<gblCBW
      +                          .bCBWLUN);
 23890  0041EC  C10D  F048         	movff	_gblCBW+13,??_MSDProcessCommand
 23891  0041F0  0E01               	movlw	1
 23892  0041F2  6E49               	movwf	(??_MSDProcessCommand+1)& (0+255),c
 23893  0041F4  0E00               	movlw	0
 23894  0041F6  6E4A               	movwf	(??_MSDProcessCommand+2)& (0+255),c
 23895  0041F8  2A48               	incf	??_MSDProcessCommand,f,c
 23896  0041FA  D003               	goto	u9384
 23897  0041FC                     u9385:
 23898  0041FC  90D8               	bcf	status,0,c
 23899  0041FE  3649               	rlcf	??_MSDProcessCommand+1,f,c
 23900  004200  364A               	rlcf	??_MSDProcessCommand+2,f,c
 23901  004202                     u9384:
 23902  004202  2E48               	decfsz	??_MSDProcessCommand,f,c
 23903  004204  D7FB               	goto	u9385
 23904  004206  5049               	movf	??_MSDProcessCommand+1,w,c
 23905  004208  0101               	movlb	1	; () banked
 23906  00420A  1372               	iorwf	_gblMediaPresent& (0+255),f,b
 23907  00420C  504A               	movf	??_MSDProcessCommand+2,w,c
 23908  00420E  1373               	iorwf	(_gblMediaPresent+1)& (0+255),f,b
 23909                           
 23910                           ; BSR set to: 1
 23911                           ;usb_device_msd.c: 581: gblSenseData[0].SenseKey = 0x6;
 23912  004210  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 23913  004212  0BF0               	andlw	-16
 23914  004214  0906               	iorlw	6
 23915  004216  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 23916                           
 23917                           ; BSR set to: 1
 23918                           ;usb_device_msd.c: 582: gblSenseData[0].ASC = 0x28;
 23919  004218  0E28               	movlw	40
 23920  00421A  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 23921                           
 23922                           ; BSR set to: 1
 23923                           ;usb_device_msd.c: 583: gblSenseData[0].ASCQ = 0x00;
 23924  00421C  0E00               	movlw	0
 23925  00421E  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 23926                           
 23927                           ; BSR set to: 1
 23928                           ;usb_device_msd.c: 586: msd_csw.bCSWStatus = 0x01;
 23929  004220  0E01               	movlw	1
 23930  004222  010D               	movlb	13	; () banked
 23931  004224  6F8C               	movwf	140,b	;volatile
 23932                           
 23933                           ; BSR set to: 13
 23934                           ;usb_device_msd.c: 588: MSDProcessCommandMediaPresent();
 23935  004226  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23936                           
 23937                           ;usb_device_msd.c: 589: }
 23938  00422A  D005               	goto	l599
 23939  00422C                     l597:
 23940                           
 23941                           ;usb_device_msd.c: 590: else;usb_device_msd.c: 591: {;usb_device_msd.c: 593: MSDProcessC
      +                          ommandMediaAbsent();
 23942  00422C  ECF1  F036         	call	_MSDProcessCommandMediaAbsent	;wreg free
 23943                           
 23944                           ;usb_device_msd.c: 594: };usb_device_msd.c: 595: }
 23945  004230  D002               	goto	l599
 23946  004232                     l596:
 23947                           
 23948                           ;usb_device_msd.c: 596: else;usb_device_msd.c: 597: {;usb_device_msd.c: 600: MSDProcessC
      +                          ommandMediaPresent();
 23949  004232  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 23950  004236                     l599:
 23951                           
 23952                           ;usb_device_msd.c: 601: };usb_device_msd.c: 602: };usb_device_msd.c: 604: return MSDComm
      +                          andState;
 23953  004236  0100               	movlb	0	; () banked
 23954  004238  51A1               	movf	_MSDCommandState& (0+255),w,b
 23955  00423A  0012               	return	
 23956  00423C                     __end_of_MSDProcessCommand:
 23957                           	opt stack 0
 23958                           tosu	equ	0xFFF
 23959                           tosh	equ	0xFFE
 23960                           tosl	equ	0xFFD
 23961                           pclath	equ	0xFFA
 23962                           tblptru	equ	0xFF8
 23963                           tblptrh	equ	0xFF7
 23964                           tblptrl	equ	0xFF6
 23965                           tablat	equ	0xFF5
 23966                           prodh	equ	0xFF4
 23967                           prodl	equ	0xFF3
 23968                           intcon	equ	0xFF2
 23969                           intcon2	equ	0xFF1
 23970                           intcon3	equ	0xFF0
 23971                           indf0	equ	0xFEF
 23972                           postinc0	equ	0xFEE
 23973                           fsr0h	equ	0xFEA
 23974                           fsr0l	equ	0xFE9
 23975                           wreg	equ	0xFE8
 23976                           indf1	equ	0xFE7
 23977                           postdec1	equ	0xFE5
 23978                           plusw1	equ	0xFE3
 23979                           fsr1h	equ	0xFE2
 23980                           fsr1l	equ	0xFE1
 23981                           indf2	equ	0xFDF
 23982                           postinc2	equ	0xFDE
 23983                           postdec2	equ	0xFDD
 23984                           plusw2	equ	0xFDB
 23985                           fsr2h	equ	0xFDA
 23986                           fsr2l	equ	0xFD9
 23987                           status	equ	0xFD8
 23988                           
 23989 ;; *************** function _MSDProcessCommandMediaAbsent *****************
 23990 ;; Defined at:
 23991 ;;		line 635 in file "usb_device_msd.c"
 23992 ;; Parameters:    Size  Location     Type
 23993 ;;		None
 23994 ;; Auto vars:     Size  Location     Type
 23995 ;;		None
 23996 ;; Return value:  Size  Location     Type
 23997 ;;                  1    wreg      void 
 23998 ;; Registers used:
 23999 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24000 ;; Tracked objects:
 24001 ;;		On entry : 0/0
 24002 ;;		On exit  : 0/0
 24003 ;;		Unchanged: 0/0
 24004 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24005 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24006 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24007 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24008 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24009 ;;Total ram usage:        0 bytes
 24010 ;; Hardware stack levels used:    1
 24011 ;; Hardware stack levels required when called:    8
 24012 ;; This function calls:
 24013 ;;		_MSDErrorHandler
 24014 ;;		_MSDProcessCommandMediaPresent
 24015 ;;		_ResetSenseData
 24016 ;; This function is called by:
 24017 ;;		_MSDProcessCommand
 24018 ;; This function uses a non-reentrant model
 24019 ;;
 24020                           
 24021                           	psect	text109
 24022  006DE2                     __ptext109:
 24023                           	opt stack 0
 24024  006DE2                     _MSDProcessCommandMediaAbsent:
 24025                           	opt stack 19
 24026                           
 24027                           ;usb_device_msd.c: 638: switch(MSDCommandState)
 24028                           
 24029                           ; BSR set to: 0
 24030                           ;incstack = 0
 24031  006DE2  D01E               	goto	l603
 24032  006DE4                     
 24033                           ;usb_device_msd.c: 646: ResetSenseData();
 24034  006DE4  EC22  F037         	call	_ResetSenseData	;wreg free
 24035                           
 24036                           ;usb_device_msd.c: 647: gblSenseData[0].SenseKey=0x2;
 24037  006DE8  0101               	movlb	1	; () banked
 24038  006DEA  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24039  006DEC  0BF0               	andlw	-16
 24040  006DEE  0902               	iorlw	2
 24041  006DF0  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24042                           
 24043                           ; BSR set to: 1
 24044                           ;usb_device_msd.c: 648: gblSenseData[0].ASC=0x3a;
 24045  006DF2  0E3A               	movlw	58
 24046  006DF4  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24047                           
 24048                           ; BSR set to: 1
 24049                           ;usb_device_msd.c: 649: gblSenseData[0].ASCQ=0x00;
 24050  006DF6  0E00               	movlw	0
 24051  006DF8  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24052                           
 24053                           ; BSR set to: 1
 24054                           ;usb_device_msd.c: 654: MSDProcessCommandMediaPresent();
 24055  006DFA  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 24056                           
 24057                           ;usb_device_msd.c: 655: break;
 24058  006DFE  0012               	return	
 24059  006E00                     
 24060                           ;usb_device_msd.c: 658: case 0x00:;usb_device_msd.c: 663: msd_csw.bCSWStatus = 0x01;
 24061  006E00  0E01               	movlw	1
 24062  006E02  010D               	movlb	13	; () banked
 24063  006E04  6F8C               	movwf	140,b	;volatile
 24064                           
 24065                           ; BSR set to: 13
 24066                           ;usb_device_msd.c: 664: MSDCommandState = 0xFF;
 24067  006E06  0100               	movlb	0	; () banked
 24068  006E08  69A1               	setf	_MSDCommandState& (0+255),b
 24069                           
 24070                           ;usb_device_msd.c: 665: break;
 24071  006E0A  0012               	return	
 24072  006E0C                     
 24073                           ; BSR set to: 0
 24074                           ;usb_device_msd.c: 670: MSDProcessCommandMediaPresent();
 24075                           
 24076                           ; BSR set to: 0
 24077  006E0C  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 24078                           
 24079                           ;usb_device_msd.c: 671: break;
 24080  006E10  0012               	return	
 24081  006E12                     
 24082                           ;usb_device_msd.c: 676: MSDProcessCommandMediaPresent();
 24083  006E12  EC4E  F002         	call	_MSDProcessCommandMediaPresent	;wreg free
 24084                           
 24085                           ;usb_device_msd.c: 677: break;
 24086  006E16  0012               	return	
 24087  006E18                     
 24088                           ;usb_device_msd.c: 683: MSDErrorHandler(0x7F);
 24089  006E18  0E7F               	movlw	127
 24090  006E1A  ECA8  F022         	call	_MSDErrorHandler
 24091                           
 24092                           ;usb_device_msd.c: 685: }
 24093                           
 24094                           ;usb_device_msd.c: 684: break;
 24095  006E1E  0012               	return	
 24096  006E20                     l603:
 24097  006E20  0100               	movlb	0	; () banked
 24098  006E22  51A1               	movf	_MSDCommandState& (0+255),w,b
 24099                           
 24100                           ; Switch size 1, requested type "space"
 24101                           ; Number of cases is 5, Range of values is 0 to 253
 24102                           ; switch strategies available:
 24103                           ; Name         Instructions Cycles
 24104                           ; simple_byte           16     9 (average)
 24105                           ;	Chosen strategy is simple_byte
 24106  006E24  0A00               	xorlw	0	; case 0
 24107  006E26  B4D8               	btfsc	status,2,c
 24108  006E28  D7EB               	goto	l606
 24109  006E2A  0A03               	xorlw	3	; case 3
 24110  006E2C  B4D8               	btfsc	status,2,c
 24111  006E2E  D7DA               	goto	l604
 24112  006E30  0A11               	xorlw	17	; case 18
 24113  006E32  B4D8               	btfsc	status,2,c
 24114  006E34  D7EB               	goto	l608
 24115  006E36  0A0C               	xorlw	12	; case 30
 24116  006E38  B4D8               	btfsc	status,2,c
 24117  006E3A  D7E2               	goto	l606
 24118  006E3C  0AE3               	xorlw	227	; case 253
 24119  006E3E  B4D8               	btfsc	status,2,c
 24120  006E40  D7E8               	goto	l609
 24121  006E42  D7EA               	goto	l610
 24122  006E44                     __end_of_MSDProcessCommandMediaAbsent:
 24123                           	opt stack 0
 24124                           tosu	equ	0xFFF
 24125                           tosh	equ	0xFFE
 24126                           tosl	equ	0xFFD
 24127                           pclath	equ	0xFFA
 24128                           tblptru	equ	0xFF8
 24129                           tblptrh	equ	0xFF7
 24130                           tblptrl	equ	0xFF6
 24131                           tablat	equ	0xFF5
 24132                           prodh	equ	0xFF4
 24133                           prodl	equ	0xFF3
 24134                           intcon	equ	0xFF2
 24135                           intcon2	equ	0xFF1
 24136                           intcon3	equ	0xFF0
 24137                           indf0	equ	0xFEF
 24138                           postinc0	equ	0xFEE
 24139                           fsr0h	equ	0xFEA
 24140                           fsr0l	equ	0xFE9
 24141                           wreg	equ	0xFE8
 24142                           indf1	equ	0xFE7
 24143                           postdec1	equ	0xFE5
 24144                           plusw1	equ	0xFE3
 24145                           fsr1h	equ	0xFE2
 24146                           fsr1l	equ	0xFE1
 24147                           indf2	equ	0xFDF
 24148                           postinc2	equ	0xFDE
 24149                           postdec2	equ	0xFDD
 24150                           plusw2	equ	0xFDB
 24151                           fsr2h	equ	0xFDA
 24152                           fsr2l	equ	0xFD9
 24153                           status	equ	0xFD8
 24154                           
 24155 ;; *************** function _MSDProcessCommandMediaPresent *****************
 24156 ;; Defined at:
 24157 ;;		line 712 in file "usb_device_msd.c"
 24158 ;; Parameters:    Size  Location     Type
 24159 ;;		None
 24160 ;; Auto vars:     Size  Location     Type
 24161 ;;  capacity        4   66[COMRAM] struct .
 24162 ;;  sectorSize      4   62[COMRAM] struct .
 24163 ;;  i               1   70[COMRAM] unsigned char 
 24164 ;;  NumBytesInPa    1   61[COMRAM] unsigned char 
 24165 ;; Return value:  Size  Location     Type
 24166 ;;                  1    wreg      void 
 24167 ;; Registers used:
 24168 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, pclath, tosl, tblptrl, tblptrh, tblptru, prodl, 
      +prodh, cstack
 24169 ;; Tracked objects:
 24170 ;;		On entry : 0/0
 24171 ;;		On exit  : 0/0
 24172 ;;		Unchanged: 0/0
 24173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24174 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24175 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24176 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24177 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24178 ;;Total ram usage:       14 bytes
 24179 ;; Hardware stack levels used:    1
 24180 ;; Hardware stack levels required when called:    7
 24181 ;; This function calls:
 24182 ;;		_ExternalFlash_CapacityRead
 24183 ;;		_ExternalFlash_SectorSizeRead
 24184 ;;		_ExternalFlash_WriteProtectStateGet
 24185 ;;		_MSDCheckForErrorCases
 24186 ;;		_MSDComputeDeviceInAndResidue
 24187 ;;		_MSDErrorHandler
 24188 ;;		_MSDReadHandler
 24189 ;;		_MSDWriteHandler
 24190 ;;		_ResetSenseData
 24191 ;;		_USBTransferOnePacket
 24192 ;;		_memcpy
 24193 ;; This function is called by:
 24194 ;;		_MSDProcessCommand
 24195 ;;		_MSDProcessCommandMediaAbsent
 24196 ;; This function uses a non-reentrant model
 24197 ;;
 24198                           
 24199                           	psect	text110
 24200  00049C                     __ptext110:
 24201                           	opt stack 0
 24202  00049C                     _MSDProcessCommandMediaPresent:
 24203                           	opt stack 20
 24204                           
 24205                           ;usb_device_msd.c: 714: uint8_t i;;usb_device_msd.c: 715: uint8_t NumBytesInPacket;;usb_
      +                          device_msd.c: 718: switch(MSDCommandState)
 24206                           
 24207                           ;incstack = 0
 24208  00049C  D1B9               	goto	l614
 24209  00049E                     
 24210                           ;usb_device_msd.c: 725: if(MSDReadHandler() == 0x00)
 24211  00049E  EC85  F016         	call	_MSDReadHandler	;wreg free
 24212  0004A2  0900               	iorlw	0
 24213  0004A4  A4D8               	btfss	status,2,c
 24214  0004A6  0012               	return	
 24215                           
 24216                           ;usb_device_msd.c: 726: {;usb_device_msd.c: 727: MSDCommandState = 0xFF;
 24217  0004A8  0100               	movlb	0	; () banked
 24218  0004AA  69A1               	setf	_MSDCommandState& (0+255),b
 24219                           
 24220                           ; BSR set to: 0
 24221                           ;usb_device_msd.c: 728: };usb_device_msd.c: 729: break;
 24222  0004AC  0012               	return	
 24223  0004AE                     
 24224                           ; BSR set to: 0
 24225                           ;usb_device_msd.c: 736: if(MSDWriteHandler() == 0x00)
 24226                           
 24227                           ; BSR set to: 0
 24228  0004AE  EC80  F00A         	call	_MSDWriteHandler	;wreg free
 24229  0004B2  0900               	iorlw	0
 24230  0004B4  A4D8               	btfss	status,2,c
 24231  0004B6  0012               	return	
 24232                           
 24233                           ;usb_device_msd.c: 737: {;usb_device_msd.c: 738: MSDCommandState = 0xFF;
 24234  0004B8  0100               	movlb	0	; () banked
 24235  0004BA  69A1               	setf	_MSDCommandState& (0+255),b
 24236                           
 24237                           ; BSR set to: 0
 24238                           ;usb_device_msd.c: 739: };usb_device_msd.c: 740: break;
 24239  0004BC  0012               	return	
 24240  0004BE                     
 24241                           ; BSR set to: 0
 24242                           ;usb_device_msd.c: 743: {;usb_device_msd.c: 748: if(MSDHostNoData == 1)
 24243                           
 24244                           ; BSR set to: 0
 24245  0004BE  059B               	decf	_MSDHostNoData& (0+255),w,b
 24246  0004C0  A4D8               	btfss	status,2,c
 24247  0004C2  D002               	goto	l621
 24248                           
 24249                           ; BSR set to: 0
 24250                           ;usb_device_msd.c: 749: {;usb_device_msd.c: 750: MSDCommandState = 0xFF;
 24251  0004C4  69A1               	setf	_MSDCommandState& (0+255),b
 24252                           
 24253                           ;usb_device_msd.c: 751: break;
 24254  0004C6  0012               	return	
 24255  0004C8                     l621:
 24256                           
 24257                           ; BSR set to: 0
 24258                           ;usb_device_msd.c: 752: };usb_device_msd.c: 756: TransferLength.byte.HB = gblCBW.CBWCB[3
      +                          ];
 24259  0004C8  C112  F087         	movff	_gblCBW+18,_TransferLength+1
 24260                           
 24261                           ;usb_device_msd.c: 757: TransferLength.byte.LB = gblCBW.CBWCB[4];
 24262  0004CC  C113  F086         	movff	_gblCBW+19,_TransferLength
 24263                           
 24264                           ; BSR set to: 0
 24265                           ;usb_device_msd.c: 759: if(MSDCheckForErrorCases(TransferLength.Val) != 0x00)
 24266  0004D0  C086  F00B         	movff	_TransferLength,MSDCheckForErrorCases@DeviceBytes
 24267  0004D4  C087  F00C         	movff	_TransferLength+1,MSDCheckForErrorCases@DeviceBytes+1
 24268  0004D8  6A0D               	clrf	MSDCheckForErrorCases@DeviceBytes+2,c
 24269  0004DA  6A0E               	clrf	MSDCheckForErrorCases@DeviceBytes+3,c
 24270  0004DC  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 24271  0004E0  0900               	iorlw	0
 24272  0004E2  A4D8               	btfss	status,2,c
 24273  0004E4  0012               	return	
 24274                           
 24275                           ;usb_device_msd.c: 762: };usb_device_msd.c: 765: MSDComputeDeviceInAndResidue(sizeof(Inq
      +                          uiryResponse));
 24276                           
 24277                           ;usb_device_msd.c: 760: {;usb_device_msd.c: 761: break;
 24278  0004E6  0E00               	movlw	0
 24279  0004E8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24280  0004EA  0E24               	movlw	36
 24281  0004EC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24282  0004EE  EC72  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24283                           
 24284                           ;usb_device_msd.c: 771: memcpy((void *)&msd_buffer[0], (const void*)&inq_resp, sizeof(In
      +                          quiryResponse));
 24285  0004F2  0E00               	movlw	0
 24286  0004F4  6E01               	movwf	memcpy@d1,c
 24287  0004F6  0E06               	movlw	6
 24288  0004F8  6E02               	movwf	memcpy@d1+1,c
 24289  0004FA  0E49               	movlw	low _inq_resp
 24290  0004FC  6E03               	movwf	memcpy@s1,c
 24291  0004FE  0E8F               	movlw	high _inq_resp
 24292  000500  6E04               	movwf	memcpy@s1+1,c
 24293  000502  5003               	movf	memcpy@s1,w,c
 24294  000504  1004               	iorwf	memcpy@s1+1,w,c
 24295  000506  A4D8               	btfss	status,2,c
 24296  000508  0E00               	movlw	low (__mediumconst shr (0+16))
 24297  00050A  6E05               	movwf	memcpy@s1+2,c
 24298  00050C  0E00               	movlw	0
 24299  00050E  6E07               	movwf	memcpy@n+1,c
 24300  000510  0E24               	movlw	36
 24301  000512  6E06               	movwf	memcpy@n,c
 24302  000514  ECBE  F036         	call	_memcpy	;wreg free
 24303                           
 24304                           ;usb_device_msd.c: 772: MSDCommandState = 0xFD;
 24305  000518  0EFD               	movlw	253
 24306  00051A  0100               	movlb	0	; () banked
 24307  00051C  6FA1               	movwf	_MSDCommandState& (0+255),b
 24308                           
 24309                           ;usb_device_msd.c: 773: break;
 24310  00051E  0012               	return	
 24311  000520                     
 24312                           ; BSR set to: 0
 24313                           ;usb_device_msd.c: 776: {;usb_device_msd.c: 779: USB_MSD_SECTOR_SIZE sectorSize;;usb_dev
      +                          ice_msd.c: 780: USB_MSD_CAPACITY capacity;;usb_device_msd.c: 783: capacity.Val = LUN[0].
      +                          ReadCapacity(LUN[0].mediaParameters);
 24314                           
 24315                           ; BSR set to: 0
 24316  000520  C1F2  F001         	movff	_LUN+14,ExternalFlash_CapacityRead@config
 24317  000524  C1F3  F002         	movff	_LUN+15,ExternalFlash_CapacityRead@config+1
 24318  000528  D801               	call	u8238
 24319  00052A  D00A               	goto	u8239
 24320  00052C                     u8238:
 24321  00052C  0005               	push	
 24322  00052E  6EFA               	movwf	pclath,c
 24323  000530  0101               	movlb	1	; () banked
 24324  000532  51E6               	movf	(_LUN+2)& (0+255),w,b
 24325  000534  6EFD               	movwf	tosl,c
 24326  000536  51E7               	movf	(_LUN+3)& (0+255),w,b
 24327  000538  6EFE               	movwf	tosh,c
 24328  00053A  6AFF               	clrf	tosu,c
 24329  00053C  50FA               	movf	pclath,w,c
 24330  00053E  0012               	return		;indir
 24331  000540                     u8239:
 24332  000540  C001  F043         	movff	?_ExternalFlash_CapacityRead,MSDProcessCommandMediaPresent@capacity
 24333  000544  C002  F044         	movff	?_ExternalFlash_CapacityRead+1,MSDProcessCommandMediaPresent@capacity+1
 24334  000548  C003  F045         	movff	?_ExternalFlash_CapacityRead+2,MSDProcessCommandMediaPresent@capacity+2
 24335  00054C  C004  F046         	movff	?_ExternalFlash_CapacityRead+3,MSDProcessCommandMediaPresent@capacity+3
 24336                           
 24337                           ;usb_device_msd.c: 784: sectorSize.Val = LUN[0].ReadSectorSize(LUN[0].mediaParameters);
 24338  000550  C1F2  F001         	movff	_LUN+14,ExternalFlash_SectorSizeRead@config
 24339  000554  C1F3  F002         	movff	_LUN+15,ExternalFlash_SectorSizeRead@config+1
 24340  000558  D801               	call	u8248
 24341  00055A  D00A               	goto	u8249
 24342  00055C                     u8248:
 24343  00055C  0005               	push	
 24344  00055E  6EFA               	movwf	pclath,c
 24345  000560  0101               	movlb	1	; () banked
 24346  000562  51E8               	movf	(_LUN+4)& (0+255),w,b
 24347  000564  6EFD               	movwf	tosl,c
 24348  000566  51E9               	movf	(_LUN+5)& (0+255),w,b
 24349  000568  6EFE               	movwf	tosh,c
 24350  00056A  6AFF               	clrf	tosu,c
 24351  00056C  50FA               	movf	pclath,w,c
 24352  00056E  0012               	return		;indir
 24353  000570                     u8249:
 24354  000570  C001  F03F         	movff	?_ExternalFlash_SectorSizeRead,MSDProcessCommandMediaPresent@sectorSize
 24355  000574  C002  F040         	movff	?_ExternalFlash_SectorSizeRead+1,MSDProcessCommandMediaPresent@sectorSize+1
 24356  000578  6A41               	clrf	MSDProcessCommandMediaPresent@sectorSize+2,c
 24357  00057A  6A42               	clrf	MSDProcessCommandMediaPresent@sectorSize+3,c
 24358                           
 24359                           ;usb_device_msd.c: 787: msd_buffer[0]=capacity.v[3];
 24360  00057C  EE26 F000          	lfsr	2,1536
 24361  000580  C046  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+3,indf2
 24362                           
 24363                           ;usb_device_msd.c: 788: msd_buffer[1]=capacity.v[2];
 24364  000584  EE26 F001          	lfsr	2,1537	;volatile
 24365  000588  C045  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+2,indf2
 24366                           
 24367                           ;usb_device_msd.c: 789: msd_buffer[2]=capacity.v[1];
 24368  00058C  EE26 F002          	lfsr	2,1538	;volatile
 24369  000590  C044  FFDF         	movff	MSDProcessCommandMediaPresent@capacity+1,indf2
 24370                           
 24371                           ;usb_device_msd.c: 790: msd_buffer[3]=capacity.v[0];
 24372  000594  EE26 F003          	lfsr	2,1539	;volatile
 24373  000598  C043  FFDF         	movff	MSDProcessCommandMediaPresent@capacity,indf2
 24374                           
 24375                           ;usb_device_msd.c: 792: msd_buffer[4]=sectorSize.v[3];
 24376  00059C  EE26 F004          	lfsr	2,1540	;volatile
 24377  0005A0  C042  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+3,indf2
 24378                           
 24379                           ;usb_device_msd.c: 793: msd_buffer[5]=sectorSize.v[2];
 24380  0005A4  EE26 F005          	lfsr	2,1541	;volatile
 24381  0005A8  C041  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+2,indf2
 24382                           
 24383                           ;usb_device_msd.c: 794: msd_buffer[6]=sectorSize.v[1];
 24384  0005AC  EE26 F006          	lfsr	2,1542	;volatile
 24385  0005B0  C040  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize+1,indf2
 24386                           
 24387                           ;usb_device_msd.c: 795: msd_buffer[7]=sectorSize.v[0];
 24388  0005B4  EE26 F007          	lfsr	2,1543	;volatile
 24389  0005B8  C03F  FFDF         	movff	MSDProcessCommandMediaPresent@sectorSize,indf2
 24390                           
 24391                           ;usb_device_msd.c: 798: TransferLength.Val = 0x08;
 24392  0005BC  0E00               	movlw	0
 24393  0005BE  0100               	movlb	0	; () banked
 24394  0005C0  6F87               	movwf	(_TransferLength+1)& (0+255),b
 24395  0005C2  0E08               	movlw	8
 24396  0005C4  6F86               	movwf	_TransferLength& (0+255),b
 24397                           
 24398                           ; BSR set to: 0
 24399                           ;usb_device_msd.c: 799: MSDComputeDeviceInAndResidue(0x08);
 24400  0005C6  0E00               	movlw	0
 24401  0005C8  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24402  0005CA  0E08               	movlw	8
 24403  0005CC  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24404  0005CE  EC72  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24405                           
 24406                           ;usb_device_msd.c: 801: MSDCommandState = 0xFD;
 24407  0005D2  0EFD               	movlw	253
 24408  0005D4  0100               	movlb	0	; () banked
 24409  0005D6  6FA1               	movwf	_MSDCommandState& (0+255),b
 24410                           
 24411                           ;usb_device_msd.c: 802: break;
 24412  0005D8  0012               	return	
 24413  0005DA                     
 24414                           ; BSR set to: 0
 24415                           ;usb_device_msd.c: 811: if(MSDHostNoData == 1)
 24416                           
 24417                           ; BSR set to: 0
 24418  0005DA  059B               	decf	_MSDHostNoData& (0+255),w,b
 24419  0005DC  A4D8               	btfss	status,2,c
 24420  0005DE  D002               	goto	l625
 24421                           
 24422                           ; BSR set to: 0
 24423                           ;usb_device_msd.c: 812: {;usb_device_msd.c: 813: MSDCommandState = 0xFF;
 24424  0005E0  69A1               	setf	_MSDCommandState& (0+255),b
 24425                           
 24426                           ;usb_device_msd.c: 814: break;
 24427  0005E2  0012               	return	
 24428  0005E4                     l625:
 24429                           
 24430                           ; BSR set to: 0
 24431                           ;usb_device_msd.c: 815: };usb_device_msd.c: 818: TransferLength.Val = sizeof(RequestSens
      +                          eResponse);
 24432                           
 24433                           ; BSR set to: 0
 24434  0005E4  0E00               	movlw	0
 24435  0005E6  6F87               	movwf	(_TransferLength+1)& (0+255),b
 24436  0005E8  0E12               	movlw	18
 24437  0005EA  6F86               	movwf	_TransferLength& (0+255),b
 24438                           
 24439                           ; BSR set to: 0
 24440                           ;usb_device_msd.c: 819: MSDComputeDeviceInAndResidue(sizeof(RequestSenseResponse));
 24441  0005EC  0E00               	movlw	0
 24442  0005EE  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24443  0005F0  0E12               	movlw	18
 24444  0005F2  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24445  0005F4  EC72  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24446                           
 24447                           ;usb_device_msd.c: 822: for(i=0;i<sizeof(RequestSenseResponse);i++)
 24448  0005F8  0E00               	movlw	0
 24449  0005FA  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 24450  0005FC                     l11067:
 24451  0005FC  0E11               	movlw	17
 24452  0005FE  6447               	cpfsgt	MSDProcessCommandMediaPresent@i,c
 24453  000600  D001               	goto	l626
 24454  000602  D014               	goto	u8270
 24455  000604                     l626:
 24456                           
 24457                           ;usb_device_msd.c: 823: {;usb_device_msd.c: 824: msd_buffer[i]=gblSenseData[0]._byte[i];
 24458  000604  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 24459  000606  0D01               	mullw	1
 24460  000608  0E1F               	movlw	low _gblSenseData
 24461  00060A  24F3               	addwf	prodl,w,c
 24462  00060C  6ED9               	movwf	fsr2l,c
 24463  00060E  0E01               	movlw	high _gblSenseData
 24464  000610  20F4               	addwfc	prodh,w,c
 24465  000612  6EDA               	movwf	fsr2h,c
 24466  000614  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 24467  000616  0D01               	mullw	1
 24468  000618  0E00               	movlw	0
 24469  00061A  24F3               	addwf	prodl,w,c
 24470  00061C  6EE1               	movwf	fsr1l,c
 24471  00061E  0E06               	movlw	6
 24472  000620  20F4               	addwfc	prodh,w,c
 24473  000622  6EE2               	movwf	fsr1h,c
 24474  000624  CFDF FFE7          	movff	indf2,indf1
 24475  000628  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 24476  00062A  D7E8               	goto	l11067
 24477  00062C                     u8270:
 24478                           
 24479                           ;usb_device_msd.c: 825: };usb_device_msd.c: 826: MSDCommandState = 0xFD;
 24480  00062C  0EFD               	movlw	253
 24481  00062E  0100               	movlb	0	; () banked
 24482  000630  6FA1               	movwf	_MSDCommandState& (0+255),b
 24483                           
 24484                           ;usb_device_msd.c: 827: break;
 24485  000632  0012               	return	
 24486  000634                     l628:
 24487                           
 24488                           ; BSR set to: 0
 24489                           ;usb_device_msd.c: 830: msd_buffer[0]=0x03;
 24490  000634  0E03               	movlw	3
 24491  000636  CFE8 F600          	movff	wreg,1536
 24492                           
 24493                           ;usb_device_msd.c: 831: msd_buffer[1]=0x00;
 24494  00063A  0E00               	movlw	0
 24495  00063C  CFE8 F601          	movff	wreg,1537	;volatile
 24496                           
 24497                           ; BSR set to: 0
 24498                           ;usb_device_msd.c: 832: msd_buffer[2]=(LUN[0].WriteProtectState(LUN[0].mediaParameters))
      +                           ? 0x80 : 0x00;
 24499  000640  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 24500  000644  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 24501  000648  D801               	call	u8288
 24502  00064A  D00A               	goto	u8289
 24503  00064C                     u8288:
 24504  00064C  0005               	push	
 24505  00064E  6EFA               	movwf	pclath,c
 24506  000650  0101               	movlb	1	; () banked
 24507  000652  51EE               	movf	(_LUN+10)& (0+255),w,b
 24508  000654  6EFD               	movwf	tosl,c
 24509  000656  51EF               	movf	(_LUN+11)& (0+255),w,b
 24510  000658  6EFE               	movwf	tosh,c
 24511  00065A  6AFF               	clrf	tosu,c
 24512  00065C  50FA               	movf	pclath,w,c
 24513  00065E  0012               	return		;indir
 24514  000660                     u8289:
 24515  000660  0900               	iorlw	0
 24516  000662  A4D8               	btfss	status,2,c
 24517  000664  D004               	goto	l630
 24518  000666  0E00               	movlw	0
 24519  000668  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24520  00066A  0E00               	movlw	0
 24521  00066C  D003               	goto	L19
 24522  00066E                     l630:
 24523  00066E  0E00               	movlw	0
 24524  000670  6E3D               	movwf	_MSDProcessCommandMediaPresent$2390+1,c
 24525  000672  0E80               	movlw	128
 24526  000674                     L19:
 24527  000674  6E3C               	movwf	_MSDProcessCommandMediaPresent$2390,c
 24528  000676  EE26 F002          	lfsr	2,1538	;volatile
 24529  00067A  C03C  FFDF         	movff	_MSDProcessCommandMediaPresent$2390,indf2
 24530                           
 24531                           ;usb_device_msd.c: 833: msd_buffer[3]= 0x00;
 24532  00067E  0E00               	movlw	0
 24533  000680  CFE8 F603          	movff	wreg,1539	;volatile
 24534                           
 24535                           ;usb_device_msd.c: 836: TransferLength.Val = 0x04;
 24536  000684  0E00               	movlw	0
 24537  000686  0100               	movlb	0	; () banked
 24538  000688  6F87               	movwf	(_TransferLength+1)& (0+255),b
 24539  00068A  0E04               	movlw	4
 24540  00068C  6F86               	movwf	_TransferLength& (0+255),b
 24541                           
 24542                           ; BSR set to: 0
 24543                           ;usb_device_msd.c: 837: MSDComputeDeviceInAndResidue(0x04);
 24544  00068E  0E00               	movlw	0
 24545  000690  6E02               	movwf	MSDComputeDeviceInAndResidue@DiExpected+1,c
 24546  000692  0E04               	movlw	4
 24547  000694  6E01               	movwf	MSDComputeDeviceInAndResidue@DiExpected,c
 24548  000696  EC72  F02F         	call	_MSDComputeDeviceInAndResidue	;wreg free
 24549                           
 24550                           ;usb_device_msd.c: 838: MSDCommandState = 0xFD;
 24551  00069A  0EFD               	movlw	253
 24552  00069C  0100               	movlb	0	; () banked
 24553  00069E  6FA1               	movwf	_MSDCommandState& (0+255),b
 24554                           
 24555                           ;usb_device_msd.c: 839: break;
 24556  0006A0  0012               	return	
 24557  0006A2                     
 24558                           ; BSR set to: 0
 24559                           ;usb_device_msd.c: 842: gblSenseData[0].SenseKey=0x5;
 24560                           
 24561                           ; BSR set to: 0
 24562  0006A2  0101               	movlb	1	; () banked
 24563  0006A4  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24564  0006A6  0BF0               	andlw	-16
 24565  0006A8  0905               	iorlw	5
 24566  0006AA  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 24567                           
 24568                           ;usb_device_msd.c: 843: gblSenseData[0].ASC=0x20;
 24569  0006AC  0E20               	movlw	32
 24570  0006AE  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 24571                           
 24572                           ;usb_device_msd.c: 844: gblSenseData[0].ASCQ=0x00;
 24573  0006B0  0E00               	movlw	0
 24574  0006B2  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 24575                           
 24576                           ;usb_device_msd.c: 845: msd_csw.bCSWStatus = 0x01;
 24577  0006B4  0E01               	movlw	1
 24578  0006B6  010D               	movlb	13	; () banked
 24579  0006B8  6F8C               	movwf	140,b	;volatile
 24580                           
 24581                           ;usb_device_msd.c: 846: msd_csw.dCSWDataResidue = 0x00;
 24582  0006BA  0E00               	movlw	0
 24583  0006BC  6F88               	movwf	136,b	;volatile
 24584  0006BE  0E00               	movlw	0
 24585  0006C0  6F89               	movwf	137,b	;volatile
 24586  0006C2  0E00               	movlw	0
 24587  0006C4  6F8A               	movwf	138,b	;volatile
 24588  0006C6  0E00               	movlw	0
 24589  0006C8  6F8B               	movwf	139,b	;volatile
 24590                           
 24591                           ; BSR set to: 13
 24592                           ;usb_device_msd.c: 847: MSDCommandState = 0xFF;
 24593  0006CA  0100               	movlb	0	; () banked
 24594  0006CC  69A1               	setf	_MSDCommandState& (0+255),b
 24595                           
 24596                           ;usb_device_msd.c: 848: break;
 24597  0006CE  0012               	return	
 24598  0006D0                     
 24599                           ; BSR set to: 0
 24600                           ;usb_device_msd.c: 858: if(MSDCheckForErrorCases(0) != 0x00)
 24601                           
 24602                           ; BSR set to: 0
 24603  0006D0  0E00               	movlw	0
 24604  0006D2  6E0B               	movwf	MSDCheckForErrorCases@DeviceBytes,c
 24605  0006D4  0E00               	movlw	0
 24606  0006D6  6E0C               	movwf	MSDCheckForErrorCases@DeviceBytes+1,c
 24607  0006D8  0E00               	movlw	0
 24608  0006DA  6E0D               	movwf	MSDCheckForErrorCases@DeviceBytes+2,c
 24609  0006DC  0E00               	movlw	0
 24610  0006DE  6E0E               	movwf	MSDCheckForErrorCases@DeviceBytes+3,c
 24611  0006E0  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 24612  0006E4  0900               	iorlw	0
 24613  0006E6  A4D8               	btfss	status,2,c
 24614  0006E8  0012               	return	
 24615                           
 24616                           ;usb_device_msd.c: 861: };usb_device_msd.c: 867: if((gblSenseData[0].SenseKey==0x6) && (
      +                          msd_csw.bCSWStatus==0x01))
 24617                           
 24618                           ;usb_device_msd.c: 859: {;usb_device_msd.c: 860: break;
 24619  0006EA  0101               	movlb	1	; () banked
 24620  0006EC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 24621  0006EE  0B0F               	andlw	15
 24622  0006F0  0A06               	xorlw	6
 24623  0006F2  A4D8               	btfss	status,2,c
 24624  0006F4  D007               	goto	l636
 24625                           
 24626                           ; BSR set to: 1
 24627  0006F6  010D               	movlb	13	; () banked
 24628  0006F8  058C               	decf	140,w,b	;volatile
 24629  0006FA  A4D8               	btfss	status,2,c
 24630  0006FC  D003               	goto	l636
 24631                           
 24632                           ; BSR set to: 13
 24633                           ;usb_device_msd.c: 868: {;usb_device_msd.c: 869: MSDCommandState = 0xFF;
 24634  0006FE  0100               	movlb	0	; () banked
 24635  000700  69A1               	setf	_MSDCommandState& (0+255),b
 24636                           
 24637                           ;usb_device_msd.c: 870: }
 24638  000702  0012               	return	
 24639  000704                     l636:
 24640                           
 24641                           ;usb_device_msd.c: 871: else;usb_device_msd.c: 872: {;usb_device_msd.c: 873: ResetSenseD
      +                          ata();
 24642                           
 24643                           ; BSR set to: 0
 24644  000704  EC22  F037         	call	_ResetSenseData	;wreg free
 24645                           
 24646                           ;usb_device_msd.c: 874: msd_csw.dCSWDataResidue=0x00;
 24647  000708  0E00               	movlw	0
 24648  00070A  010D               	movlb	13	; () banked
 24649  00070C  6F88               	movwf	136,b	;volatile
 24650  00070E  0E00               	movlw	0
 24651  000710  6F89               	movwf	137,b	;volatile
 24652  000712  0E00               	movlw	0
 24653  000714  6F8A               	movwf	138,b	;volatile
 24654  000716  0E00               	movlw	0
 24655  000718  6F8B               	movwf	139,b	;volatile
 24656                           
 24657                           ; BSR set to: 13
 24658                           ;usb_device_msd.c: 875: MSDCommandState = 0xFF;
 24659  00071A  0100               	movlb	0	; () banked
 24660  00071C  69A1               	setf	_MSDCommandState& (0+255),b
 24661                           
 24662                           ; BSR set to: 0
 24663                           ;usb_device_msd.c: 876: };usb_device_msd.c: 877: break;
 24664  00071E  0012               	return	
 24665  000720                     
 24666                           ; BSR set to: 0
 24667                           ;usb_device_msd.c: 882: case 0x1b:;usb_device_msd.c: 883: msd_csw.dCSWDataResidue=0x00;
 24668                           
 24669                           ; BSR set to: 0
 24670                           
 24671                           ; BSR set to: 0
 24672  000720  0E00               	movlw	0
 24673  000722  010D               	movlb	13	; () banked
 24674  000724  6F88               	movwf	136,b	;volatile
 24675  000726  0E00               	movlw	0
 24676  000728  6F89               	movwf	137,b	;volatile
 24677  00072A  0E00               	movlw	0
 24678  00072C  6F8A               	movwf	138,b	;volatile
 24679  00072E  0E00               	movlw	0
 24680  000730  6F8B               	movwf	139,b	;volatile
 24681                           
 24682                           ; BSR set to: 13
 24683                           ;usb_device_msd.c: 884: MSDCommandState = 0xFF;
 24684  000732  0100               	movlb	0	; () banked
 24685  000734  69A1               	setf	_MSDCommandState& (0+255),b
 24686                           
 24687                           ;usb_device_msd.c: 885: break;
 24688  000736  0012               	return	
 24689  000738                     
 24690                           ; BSR set to: 0
 24691                           ;usb_device_msd.c: 892: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDIn
      +                          Handle & 0x80) != 0x00)) == 0)
 24692                           
 24693                           ; BSR set to: 0
 24694  000738  5188               	movf	_USBMSDInHandle& (0+255),w,b
 24695  00073A  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 24696  00073C  B4D8               	btfsc	status,2,c
 24697  00073E  D006               	goto	u8340
 24698                           
 24699                           ; BSR set to: 0
 24700  000740  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 24701  000744  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 24702  000748  BEDF               	btfsc	indf2,7,c
 24703  00074A  0012               	return	
 24704  00074C                     u8340:
 24705                           
 24706                           ; BSR set to: 0
 24707                           ;usb_device_msd.c: 893: {;usb_device_msd.c: 896: if(gblCBW.dCBWDataTransferLength >= 64u
      +                          )
 24708                           
 24709                           ; BSR set to: 0
 24710  00074C  0101               	movlb	1	; () banked
 24711  00074E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 24712  000750  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24713  000752  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24714  000754  E104               	bnz	u8350
 24715  000756  0E40               	movlw	64
 24716  000758  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 24717  00075A  A0D8               	btfss	status,0,c
 24718  00075C  D009               	goto	l644
 24719  00075E                     u8350:
 24720                           
 24721                           ; BSR set to: 1
 24722                           ;usb_device_msd.c: 897: {;usb_device_msd.c: 898: NumBytesInPacket = 64u;
 24723  00075E  0E40               	movlw	64
 24724  000760  6E3E               	movwf	MSDProcessCommandMediaPresent@NumBytesInPacket,c
 24725                           
 24726                           ; BSR set to: 1
 24727                           ;usb_device_msd.c: 899: gblCBW.dCBWDataTransferLength -= 64u;
 24728  000762  0E40               	movlw	64
 24729  000764  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 24730  000766  0E00               	movlw	0
 24731  000768  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 24732  00076A  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 24733  00076C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 24734                           
 24735                           ;usb_device_msd.c: 900: }
 24736  00076E  D00A               	goto	l645
 24737  000770                     l644:
 24738                           
 24739                           ; BSR set to: 1
 24740                           ;usb_device_msd.c: 901: else;usb_device_msd.c: 902: {;usb_device_msd.c: 905: NumBytesInP
      +                          acket = gblCBW.dCBWDataTransferLength;
 24741  000770  C108  F03E         	movff	_gblCBW+8,MSDProcessCommandMediaPresent@NumBytesInPacket
 24742                           
 24743                           ; BSR set to: 1
 24744                           ;usb_device_msd.c: 906: gblCBW.dCBWDataTransferLength = 0;
 24745  000774  0E00               	movlw	0
 24746  000776  6F08               	movwf	(_gblCBW+8)& (0+255),b
 24747  000778  0E00               	movlw	0
 24748  00077A  6F09               	movwf	(_gblCBW+9)& (0+255),b
 24749  00077C  0E00               	movlw	0
 24750  00077E  6F0A               	movwf	(_gblCBW+10)& (0+255),b
 24751  000780  0E00               	movlw	0
 24752  000782  6F0B               	movwf	(_gblCBW+11)& (0+255),b
 24753  000784                     l645:
 24754                           
 24755                           ; BSR set to: 1
 24756                           ;usb_device_msd.c: 907: };usb_device_msd.c: 914: if(TransferLength.Val >= NumBytesInPack
      +                          et)
 24757                           
 24758                           ; BSR set to: 1
 24759  000784  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24760  000786  6E3A               	movwf	??_MSDProcessCommandMediaPresent& (0+255),c
 24761  000788  6A3B               	clrf	(??_MSDProcessCommandMediaPresent+1)& (0+255),c
 24762  00078A  503A               	movf	??_MSDProcessCommandMediaPresent,w,c
 24763  00078C  0100               	movlb	0	; () banked
 24764  00078E  5D86               	subwf	_TransferLength& (0+255),w,b
 24765  000790  503B               	movf	??_MSDProcessCommandMediaPresent+1,w,c
 24766  000792  5987               	subwfb	(_TransferLength+1)& (0+255),w,b
 24767  000794  A0D8               	btfss	status,0,c
 24768  000796  D005               	goto	l646
 24769                           
 24770                           ; BSR set to: 0
 24771                           ;usb_device_msd.c: 915: {;usb_device_msd.c: 917: TransferLength.Val -= NumBytesInPacket;
 24772  000798  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24773  00079A  5F86               	subwf	_TransferLength& (0+255),f,b
 24774  00079C  0E00               	movlw	0
 24775  00079E  5B87               	subwfb	(_TransferLength+1)& (0+255),f,b
 24776                           
 24777                           ;usb_device_msd.c: 918: }
 24778  0007A0  D01A               	goto	u8380
 24779  0007A2                     l646:
 24780                           
 24781                           ; BSR set to: 0
 24782                           ;usb_device_msd.c: 919: else;usb_device_msd.c: 920: {;usb_device_msd.c: 927: for(i = 0; 
      +                          i < NumBytesInPacket; i++)
 24783                           
 24784                           ; BSR set to: 0
 24785  0007A2  0E00               	movlw	0
 24786  0007A4  6E47               	movwf	MSDProcessCommandMediaPresent@i,c
 24787  0007A6  D013               	goto	l648
 24788  0007A8                     
 24789                           ; BSR set to: 0
 24790                           ;usb_device_msd.c: 928: {;usb_device_msd.c: 929: if(TransferLength.Val != 0)
 24791                           
 24792                           ; BSR set to: 0
 24793  0007A8  5186               	movf	_TransferLength& (0+255),w,b
 24794  0007AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 24795  0007AC  B4D8               	btfsc	status,2,c
 24796  0007AE  D004               	goto	l650
 24797                           
 24798                           ; BSR set to: 0
 24799                           ;usb_device_msd.c: 930: {;usb_device_msd.c: 931: TransferLength.Val--;
 24800  0007B0  0786               	decf	_TransferLength& (0+255),f,b
 24801  0007B2  A0D8               	btfss	status,0,c
 24802  0007B4  0787               	decf	(_TransferLength+1)& (0+255),f,b
 24803                           
 24804                           ;usb_device_msd.c: 932: }
 24805  0007B6  D00A               	goto	l651
 24806  0007B8                     l650:
 24807                           
 24808                           ; BSR set to: 0
 24809                           ;usb_device_msd.c: 933: else;usb_device_msd.c: 934: {;usb_device_msd.c: 935: msd_buffer[
      +                          i] = 0x00;
 24810                           
 24811                           ; BSR set to: 0
 24812  0007B8  5047               	movf	MSDProcessCommandMediaPresent@i,w,c
 24813  0007BA  0D01               	mullw	1
 24814  0007BC  0E00               	movlw	0
 24815  0007BE  24F3               	addwf	prodl,w,c
 24816  0007C0  6ED9               	movwf	fsr2l,c
 24817  0007C2  0E06               	movlw	6
 24818  0007C4  20F4               	addwfc	prodh,w,c
 24819  0007C6  6EDA               	movwf	fsr2h,c
 24820  0007C8  0E00               	movlw	0
 24821  0007CA  6EDF               	movwf	indf2,c
 24822  0007CC                     l651:
 24823                           
 24824                           ; BSR set to: 0
 24825                           
 24826                           ; BSR set to: 0
 24827  0007CC  2A47               	incf	MSDProcessCommandMediaPresent@i,f,c
 24828  0007CE                     l648:
 24829                           
 24830                           ; BSR set to: 0
 24831                           
 24832                           ; BSR set to: 0
 24833  0007CE  503E               	movf	MSDProcessCommandMediaPresent@NumBytesInPacket,w,c
 24834  0007D0  5C47               	subwf	MSDProcessCommandMediaPresent@i,w,c
 24835  0007D2  A0D8               	btfss	status,0,c
 24836  0007D4  D7E9               	goto	l649
 24837  0007D6                     u8380:
 24838                           
 24839                           ; BSR set to: 0
 24840                           ;usb_device_msd.c: 936: };usb_device_msd.c: 937: };usb_device_msd.c: 938: };usb_device_m
      +                          sd.c: 941: USBMSDInHandle = USBTransferOnePacket(2u,1,(uint8_t*)&msd_buffer[0],NumBytesI
      +                          nPacket);
 24841                           
 24842                           ; BSR set to: 0
 24843                           
 24844                           ; BSR set to: 0
 24845  0007D6  0E01               	movlw	1
 24846  0007D8  6E01               	movwf	USBTransferOnePacket@dir,c
 24847  0007DA  0E00               	movlw	0
 24848  0007DC  6E02               	movwf	USBTransferOnePacket@data,c
 24849  0007DE  0E06               	movlw	6
 24850  0007E0  6E03               	movwf	USBTransferOnePacket@data+1,c
 24851  0007E2  C03E  F004         	movff	MSDProcessCommandMediaPresent@NumBytesInPacket,USBTransferOnePacket@len
 24852  0007E6  0E02               	movlw	2
 24853  0007E8  EC2B  F023         	call	_USBTransferOnePacket
 24854  0007EC  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 24855  0007F0  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 24856                           
 24857                           ;usb_device_msd.c: 944: if(gblCBW.dCBWDataTransferLength == 0)
 24858  0007F4  0101               	movlb	1	; () banked
 24859  0007F6  5108               	movf	(_gblCBW+8)& (0+255),w,b
 24860  0007F8  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 24861  0007FA  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 24862  0007FC  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 24863  0007FE  A4D8               	btfss	status,2,c
 24864  000800  0012               	return	
 24865                           
 24866                           ; BSR set to: 1
 24867                           ;usb_device_msd.c: 945: {;usb_device_msd.c: 948: MSDCommandState = 0xFF;
 24868  000802  0100               	movlb	0	; () banked
 24869  000804  69A1               	setf	_MSDCommandState& (0+255),b
 24870                           
 24871                           ; BSR set to: 0
 24872                           ;usb_device_msd.c: 950: };usb_device_msd.c: 951: };usb_device_msd.c: 952: break;
 24873                           
 24874                           ; BSR set to: 0
 24875                           
 24876                           ;usb_device_msd.c: 949: break;
 24877  000806  0012               	return	
 24878  000808                     
 24879                           ; BSR set to: 0
 24880                           ;usb_device_msd.c: 958: MSDErrorHandler(0x7F);
 24881                           
 24882                           ; BSR set to: 0
 24883                           
 24884                           ;usb_device_msd.c: 954: default:
 24885                           
 24886                           ; BSR set to: 0
 24887  000808  0E7F               	movlw	127
 24888  00080A  ECA8  F022         	call	_MSDErrorHandler
 24889                           
 24890                           ;usb_device_msd.c: 960: }
 24891                           
 24892                           ;usb_device_msd.c: 959: break;
 24893  00080E  0012               	return	
 24894  000810                     l614:
 24895  000810  0100               	movlb	0	; () banked
 24896  000812  51A1               	movf	_MSDCommandState& (0+255),w,b
 24897                           
 24898                           ; Switch size 1, requested type "space"
 24899                           ; Number of cases is 12, Range of values is 0 to 254
 24900                           ; switch strategies available:
 24901                           ; Name         Instructions Cycles
 24902                           ; simple_byte           37    19 (average)
 24903                           ;	Chosen strategy is simple_byte
 24904  000814  0A00               	xorlw	0	; case 0
 24905  000816  B4D8               	btfsc	status,2,c
 24906  000818  D75B               	goto	l634
 24907  00081A  0A03               	xorlw	3	; case 3
 24908  00081C  B4D8               	btfsc	status,2,c
 24909  00081E  D6DD               	goto	l624
 24910  000820  0A11               	xorlw	17	; case 18
 24911  000822  B4D8               	btfsc	status,2,c
 24912  000824  D64C               	goto	l620
 24913  000826  0A08               	xorlw	8	; case 26
 24914  000828  B4D8               	btfsc	status,2,c
 24915  00082A  D704               	goto	l628
 24916  00082C  0A01               	xorlw	1	; case 27
 24917  00082E  B4D8               	btfsc	status,2,c
 24918  000830  D777               	goto	l638
 24919  000832  0A05               	xorlw	5	; case 30
 24920  000834  B4D8               	btfsc	status,2,c
 24921  000836  D735               	goto	l633
 24922  000838  0A3B               	xorlw	59	; case 37
 24923  00083A  B4D8               	btfsc	status,2,c
 24924  00083C  D671               	goto	l623
 24925  00083E  0A0D               	xorlw	13	; case 40
 24926  000840  B4D8               	btfsc	status,2,c
 24927  000842  D62D               	goto	l615
 24928  000844  0A02               	xorlw	2	; case 42
 24929  000846  B4D8               	btfsc	status,2,c
 24930  000848  D632               	goto	l618
 24931  00084A  0A05               	xorlw	5	; case 47
 24932  00084C  B4D8               	btfsc	status,2,c
 24933  00084E  D768               	goto	l638
 24934  000850  0AD2               	xorlw	210	; case 253
 24935  000852  B4D8               	btfsc	status,2,c
 24936  000854  D771               	goto	l640
 24937  000856  0A03               	xorlw	3	; case 254
 24938  000858  D7D7               	goto	l654
 24939  00085A                     __end_of_MSDProcessCommandMediaPresent:
 24940                           	opt stack 0
 24941                           tosu	equ	0xFFF
 24942                           tosh	equ	0xFFE
 24943                           tosl	equ	0xFFD
 24944                           pclath	equ	0xFFA
 24945                           tblptru	equ	0xFF8
 24946                           tblptrh	equ	0xFF7
 24947                           tblptrl	equ	0xFF6
 24948                           tablat	equ	0xFF5
 24949                           prodh	equ	0xFF4
 24950                           prodl	equ	0xFF3
 24951                           intcon	equ	0xFF2
 24952                           intcon2	equ	0xFF1
 24953                           intcon3	equ	0xFF0
 24954                           indf0	equ	0xFEF
 24955                           postinc0	equ	0xFEE
 24956                           fsr0h	equ	0xFEA
 24957                           fsr0l	equ	0xFE9
 24958                           wreg	equ	0xFE8
 24959                           indf1	equ	0xFE7
 24960                           postdec1	equ	0xFE5
 24961                           plusw1	equ	0xFE3
 24962                           fsr1h	equ	0xFE2
 24963                           fsr1l	equ	0xFE1
 24964                           indf2	equ	0xFDF
 24965                           postinc2	equ	0xFDE
 24966                           postdec2	equ	0xFDD
 24967                           plusw2	equ	0xFDB
 24968                           fsr2h	equ	0xFDA
 24969                           fsr2l	equ	0xFD9
 24970                           status	equ	0xFD8
 24971                           
 24972 ;; *************** function _MSDWriteHandler *****************
 24973 ;; Defined at:
 24974 ;;		line 1188 in file "usb_device_msd.c"
 24975 ;; Parameters:    Size  Location     Type
 24976 ;;		None
 24977 ;; Auto vars:     Size  Location     Type
 24978 ;;		None
 24979 ;; Return value:  Size  Location     Type
 24980 ;;                  1    wreg      unsigned char 
 24981 ;; Registers used:
 24982 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 24983 ;; Tracked objects:
 24984 ;;		On entry : 0/0
 24985 ;;		On exit  : 0/0
 24986 ;;		Unchanged: 0/0
 24987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 24988 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24989 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24990 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24991 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 24992 ;;Total ram usage:        5 bytes
 24993 ;; Hardware stack levels used:    1
 24994 ;; Hardware stack levels required when called:    6
 24995 ;; This function calls:
 24996 ;;		_ExternalFlash_SectorWrite
 24997 ;;		_ExternalFlash_WriteProtectStateGet
 24998 ;;		_MSDCheckForErrorCases
 24999 ;;		_USBStallEndpoint
 25000 ;;		_USBTransferOnePacket
 25001 ;; This function is called by:
 25002 ;;		_MSDProcessCommandMediaPresent
 25003 ;; This function uses a non-reentrant model
 25004 ;;
 25005                           
 25006                           	psect	text111
 25007  001500                     __ptext111:
 25008                           	opt stack 0
 25009  001500                     _MSDWriteHandler:
 25010                           	opt stack 20
 25011                           
 25012                           ;usb_device_msd.c: 1190: switch(MSDWriteState)
 25013                           
 25014                           ;incstack = 0
 25015  001500  D144               	goto	l684
 25016  001502                     l685:
 25017                           
 25018                           ; BSR set to: 0
 25019                           ;usb_device_msd.c: 1195: LBA.v[3]=gblCBW.CBWCB[2];
 25020  001502  C111  F083         	movff	_gblCBW+17,_LBA+3
 25021                           
 25022                           ;usb_device_msd.c: 1196: LBA.v[2]=gblCBW.CBWCB[3];
 25023  001506  C112  F082         	movff	_gblCBW+18,_LBA+2
 25024                           
 25025                           ;usb_device_msd.c: 1197: LBA.v[1]=gblCBW.CBWCB[4];
 25026  00150A  C113  F081         	movff	_gblCBW+19,_LBA+1
 25027                           
 25028                           ;usb_device_msd.c: 1198: LBA.v[0]=gblCBW.CBWCB[5];
 25029  00150E  C114  F080         	movff	_gblCBW+20,_LBA
 25030                           
 25031                           ;usb_device_msd.c: 1199: TransferLength.v[1]=gblCBW.CBWCB[7];
 25032  001512  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 25033                           
 25034                           ;usb_device_msd.c: 1200: TransferLength.v[0]=gblCBW.CBWCB[8];
 25035  001516  C117  F086         	movff	_gblCBW+23,_TransferLength
 25036                           
 25037                           ; BSR set to: 0
 25038                           ;usb_device_msd.c: 1203: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25039  00151A  5186               	movf	_TransferLength& (0+255),w,b
 25040  00151C  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 25041  00151E  5187               	movf	(_TransferLength+1)& (0+255),w,b
 25042  001520  6E31               	movwf	(??_MSDWriteHandler+1)& (0+255),c
 25043  001522  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 25044  001524  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 25045  001526  0E09               	movlw	9
 25046  001528                     u7255:
 25047  001528  90D8               	bcf	status,0,c
 25048  00152A  3630               	rlcf	??_MSDWriteHandler,f,c
 25049  00152C  3631               	rlcf	??_MSDWriteHandler+1,f,c
 25050  00152E  3632               	rlcf	??_MSDWriteHandler+2,f,c
 25051  001530  3633               	rlcf	??_MSDWriteHandler+3,f,c
 25052  001532  2EE8               	decfsz	wreg,f,c
 25053  001534  D7F9               	goto	u7255
 25054  001536  C030  F00B         	movff	??_MSDWriteHandler,MSDCheckForErrorCases@DeviceBytes
 25055  00153A  C031  F00C         	movff	??_MSDWriteHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25056  00153E  C032  F00D         	movff	??_MSDWriteHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25057  001542  C033  F00E         	movff	??_MSDWriteHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25058  001546  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 25059  00154A  0900               	iorlw	0
 25060  00154C  A4D8               	btfss	status,2,c
 25061  00154E  D12F               	goto	l687
 25062                           
 25063                           ;usb_device_msd.c: 1208: };usb_device_msd.c: 1212: if(LUN[0].WriteProtectState(LUN[0].me
      +                          diaParameters))
 25064                           
 25065                           ;usb_device_msd.c: 1204: {;usb_device_msd.c: 1207: break;
 25066  001550  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 25067  001554  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 25068  001558  D801               	call	u7278
 25069  00155A  D00A               	goto	u7279
 25070  00155C                     u7278:
 25071  00155C  0005               	push	
 25072  00155E  6EFA               	movwf	pclath,c
 25073  001560  0101               	movlb	1	; () banked
 25074  001562  51EE               	movf	(_LUN+10)& (0+255),w,b
 25075  001564  6EFD               	movwf	tosl,c
 25076  001566  51EF               	movf	(_LUN+11)& (0+255),w,b
 25077  001568  6EFE               	movwf	tosh,c
 25078  00156A  6AFF               	clrf	tosu,c
 25079  00156C  50FA               	movf	pclath,w,c
 25080  00156E  0012               	return		;indir
 25081  001570                     u7279:
 25082  001570  0900               	iorlw	0
 25083  001572  B4D8               	btfsc	status,2,c
 25084  001574  D016               	goto	l688
 25085                           
 25086                           ;usb_device_msd.c: 1213: {;usb_device_msd.c: 1217: msd_csw.bCSWStatus = 0x01;
 25087  001576  0E01               	movlw	1
 25088  001578  010D               	movlb	13	; () banked
 25089  00157A  6F8C               	movwf	140,b	;volatile
 25090                           
 25091                           ;usb_device_msd.c: 1220: gblSenseData[0].SenseKey=0x7;
 25092  00157C  0101               	movlb	1	; () banked
 25093  00157E  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25094  001580  0BF0               	andlw	-16
 25095  001582  0907               	iorlw	7
 25096  001584  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25097                           
 25098                           ;usb_device_msd.c: 1221: gblSenseData[0].ASC=0x27;
 25099  001586  0E27               	movlw	39
 25100  001588  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25101                           
 25102                           ;usb_device_msd.c: 1222: gblSenseData[0].ASCQ=0x00;
 25103  00158A  0E00               	movlw	0
 25104  00158C  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25105                           
 25106                           ; BSR set to: 1
 25107                           ;usb_device_msd.c: 1226: USBStallEndpoint(2u, 0);
 25108  00158E  0E00               	movlw	0
 25109  001590  6E01               	movwf	USBStallEndpoint@dir,c
 25110  001592  0E02               	movlw	2
 25111  001594  EC1E  F021         	call	_USBStallEndpoint
 25112                           
 25113                           ;usb_device_msd.c: 1227: MSDWriteState = 0x00;
 25114  001598  0E00               	movlw	0
 25115  00159A  0100               	movlb	0	; () banked
 25116  00159C  6F9F               	movwf	_MSDWriteState& (0+255),b
 25117                           
 25118                           ; BSR set to: 0
 25119                           ;usb_device_msd.c: 1228: return MSDWriteState;
 25120  00159E  519F               	movf	_MSDWriteState& (0+255),w,b
 25121                           
 25122                           ; BSR set to: 0
 25123  0015A0  0012               	return	
 25124  0015A2                     l688:
 25125                           
 25126                           ;usb_device_msd.c: 1229: };usb_device_msd.c: 1231: MSD_State = 0x01;
 25127                           
 25128                           ; BSR set to: 0
 25129  0015A2  0E01               	movlw	1
 25130  0015A4  0100               	movlb	0	; () banked
 25131  0015A6  6FA2               	movwf	_MSD_State& (0+255),b
 25132  0015A8                     
 25133                           ; BSR set to: 0
 25134                           ;usb_device_msd.c: 1235: if(TransferLength.Val == 0)
 25135                           
 25136                           ; BSR set to: 0
 25137  0015A8  5186               	movf	_TransferLength& (0+255),w,b
 25138  0015AA  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 25139  0015AC  A4D8               	btfss	status,2,c
 25140  0015AE  D002               	goto	l691
 25141                           
 25142                           ; BSR set to: 0
 25143                           ;usb_device_msd.c: 1236: {;usb_device_msd.c: 1237: MSDWriteState = 0x00;
 25144  0015B0  0E00               	movlw	0
 25145  0015B2  D0E9               	goto	L23
 25146  0015B4                     l691:
 25147                           
 25148                           ; BSR set to: 0
 25149                           ;usb_device_msd.c: 1239: };usb_device_msd.c: 1241: MSDWriteState = 0x03;
 25150                           
 25151                           ; BSR set to: 0
 25152  0015B4  0E03               	movlw	3
 25153  0015B6  6F9F               	movwf	_MSDWriteState& (0+255),b
 25154                           
 25155                           ; BSR set to: 0
 25156                           ;usb_device_msd.c: 1242: ptrNextData=(uint8_t *)&msd_buffer[0];
 25157  0015B8  0E00               	movlw	0
 25158  0015BA  6F8C               	movwf	_ptrNextData& (0+255),b
 25159  0015BC  0E06               	movlw	6
 25160  0015BE  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 25161                           
 25162                           ; BSR set to: 0
 25163                           ;usb_device_msd.c: 1244: msd_csw.dCSWDataResidue=0x0200;
 25164  0015C0  0E00               	movlw	0
 25165  0015C2  010D               	movlb	13	; () banked
 25166  0015C4  6F88               	movwf	136,b	;volatile
 25167  0015C6  0E02               	movlw	2
 25168  0015C8  6F89               	movwf	137,b	;volatile
 25169  0015CA  0E00               	movlw	0
 25170  0015CC  6F8A               	movwf	138,b	;volatile
 25171  0015CE  0E00               	movlw	0
 25172  0015D0  6F8B               	movwf	139,b	;volatile
 25173  0015D2                     l692:
 25174                           
 25175                           ;usb_device_msd.c: 1248: {;usb_device_msd.c: 1250: if(msd_csw.dCSWDataResidue>0)
 25176  0015D2  010D               	movlb	13	; () banked
 25177  0015D4  5188               	movf	136,w,b	;volatile
 25178  0015D6  1189               	iorwf	137,w,b	;volatile
 25179  0015D8  118A               	iorwf	138,w,b	;volatile
 25180  0015DA  118B               	iorwf	139,w,b	;volatile
 25181  0015DC  B4D8               	btfsc	status,2,c
 25182  0015DE  D01E               	goto	l693
 25183                           
 25184                           ; BSR set to: 13
 25185                           ;usb_device_msd.c: 1251: {;usb_device_msd.c: 1252: if(((USBMSDOutHandle != 0x0000) && ((
      +                          *(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00)) == 1)
 25186  0015E0  0100               	movlb	0	; () banked
 25187  0015E2  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 25188  0015E4  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25189  0015E6  B4D8               	btfsc	status,2,c
 25190  0015E8  D006               	goto	l694
 25191                           
 25192                           ; BSR set to: 0
 25193  0015EA  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25194  0015EE  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25195  0015F2  BEDF               	btfsc	indf2,7,c
 25196  0015F4  D0DC               	goto	l687
 25197  0015F6                     l694:
 25198                           
 25199                           ; BSR set to: 0
 25200                           ;usb_device_msd.c: 1255: };usb_device_msd.c: 1257: USBMSDOutHandle = USBTransferOnePacke
      +                          t(2u,0,ptrNextData,64u);
 25201                           
 25202                           ; BSR set to: 0
 25203  0015F6  0E00               	movlw	0
 25204  0015F8  6E01               	movwf	USBTransferOnePacket@dir,c
 25205  0015FA  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 25206  0015FE  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 25207  001602  0E40               	movlw	64
 25208  001604  6E04               	movwf	USBTransferOnePacket@len,c
 25209  001606  0E02               	movlw	2
 25210  001608  EC2B  F023         	call	_USBTransferOnePacket
 25211  00160C  C001  F08A         	movff	?_USBTransferOnePacket,_USBMSDOutHandle
 25212  001610  C002  F08B         	movff	?_USBTransferOnePacket+1,_USBMSDOutHandle+1
 25213                           
 25214                           ;usb_device_msd.c: 1258: MSDWriteState = 0x04;
 25215  001614  0E04               	movlw	4
 25216  001616  0100               	movlb	0	; () banked
 25217  001618  6F9F               	movwf	_MSDWriteState& (0+255),b
 25218                           
 25219                           ;usb_device_msd.c: 1260: }
 25220  00161A  D021               	goto	l695
 25221  00161C                     l693:
 25222                           
 25223                           ;usb_device_msd.c: 1261: else;usb_device_msd.c: 1262: {;usb_device_msd.c: 1266: if(LUN[0
      +                          ].WriteProtectState(LUN[0].mediaParameters))
 25224                           
 25225                           ; BSR set to: 0
 25226  00161C  C1F2  F001         	movff	_LUN+14,ExternalFlash_WriteProtectStateGet@config
 25227  001620  C1F3  F002         	movff	_LUN+15,ExternalFlash_WriteProtectStateGet@config+1
 25228  001624  D801               	call	u7338
 25229  001626  D00A               	goto	u7339
 25230  001628                     u7338:
 25231  001628  0005               	push	
 25232  00162A  6EFA               	movwf	pclath,c
 25233  00162C  0101               	movlb	1	; () banked
 25234  00162E  51EE               	movf	(_LUN+10)& (0+255),w,b
 25235  001630  6EFD               	movwf	tosl,c
 25236  001632  51EF               	movf	(_LUN+11)& (0+255),w,b
 25237  001634  6EFE               	movwf	tosh,c
 25238  001636  6AFF               	clrf	tosu,c
 25239  001638  50FA               	movf	pclath,w,c
 25240  00163A  0012               	return		;indir
 25241  00163C                     u7339:
 25242  00163C  0900               	iorlw	0
 25243  00163E  B4D8               	btfsc	status,2,c
 25244  001640  D00C               	goto	l696
 25245                           
 25246                           ;usb_device_msd.c: 1267: {;usb_device_msd.c: 1271: msd_csw.bCSWStatus=0x01;
 25247  001642  0E01               	movlw	1
 25248  001644  010D               	movlb	13	; () banked
 25249  001646  6F8C               	movwf	140,b	;volatile
 25250                           
 25251                           ;usb_device_msd.c: 1274: gblSenseData[0].SenseKey=0x2;
 25252  001648  0101               	movlb	1	; () banked
 25253  00164A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25254  00164C  0BF0               	andlw	-16
 25255  00164E  0902               	iorlw	2
 25256  001650  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25257                           
 25258                           ;usb_device_msd.c: 1275: gblSenseData[0].ASC=0x27;
 25259  001652  0E27               	movlw	39
 25260  001654  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25261                           
 25262                           ;usb_device_msd.c: 1276: gblSenseData[0].ASCQ=0x00;
 25263  001656  0E00               	movlw	0
 25264  001658  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25265  00165A                     l696:
 25266                           
 25267                           ;usb_device_msd.c: 1277: };usb_device_msd.c: 1279: MSDWriteState = 0x02;
 25268  00165A  0E02               	movlw	2
 25269  00165C  D093               	goto	L43
 25270  00165E                     l695:
 25271                           
 25272                           ; BSR set to: 0
 25273                           ;usb_device_msd.c: 1285: if(((USBMSDOutHandle != 0x0000) && ((*(volatile uint8_t*)USBMSD
      +                          OutHandle & 0x80) != 0x00)) == 1)
 25274                           
 25275                           ; BSR set to: 0
 25276                           
 25277                           ;usb_device_msd.c: 1281: };usb_device_msd.c: 1282: };usb_device_msd.c: 1284: case 0x04:
 25278                           
 25279                           ; BSR set to: 0
 25280  00165E  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 25281  001660  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 25282  001662  B4D8               	btfsc	status,2,c
 25283  001664  D006               	goto	l698
 25284                           
 25285                           ; BSR set to: 0
 25286  001666  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 25287  00166A  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 25288  00166E  BEDF               	btfsc	indf2,7,c
 25289  001670  D09E               	goto	l687
 25290  001672                     l698:
 25291                           
 25292                           ; BSR set to: 0
 25293                           ;usb_device_msd.c: 1288: };usb_device_msd.c: 1290: gblCBW.dCBWDataTransferLength-=(((vol
      +                          atile BDT_ENTRY*)USBMSDOutHandle)->CNT);
 25294                           
 25295                           ; BSR set to: 0
 25296  001672  EE20 F001          	lfsr	2,1
 25297  001676  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 25298  001678  26D9               	addwf	fsr2l,f,c
 25299  00167A  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 25300  00167C  22DA               	addwfc	fsr2h,f,c
 25301  00167E  50DF               	movf	indf2,w,c
 25302  001680  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 25303  001682  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 25304  001686  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 25305  001688  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 25306  00168A  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 25307  00168C  5031               	movf	??_MSDWriteHandler+1,w,c
 25308  00168E  0101               	movlb	1	; () banked
 25309  001690  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 25310  001692  5032               	movf	??_MSDWriteHandler+2,w,c
 25311  001694  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 25312  001696  5033               	movf	??_MSDWriteHandler+3,w,c
 25313  001698  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 25314  00169A  5034               	movf	??_MSDWriteHandler+4,w,c
 25315  00169C  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 25316                           
 25317                           ;usb_device_msd.c: 1291: msd_csw.dCSWDataResidue-=(((volatile BDT_ENTRY*)USBMSDOutHandle
      +                          )->CNT);
 25318  00169E  0100               	movlb	0	; () banked
 25319  0016A0  EE20 F001          	lfsr	2,1
 25320  0016A4  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 25321  0016A6  26D9               	addwf	fsr2l,f,c
 25322  0016A8  518B               	movf	(_USBMSDOutHandle+1)& (0+255),w,b
 25323  0016AA  22DA               	addwfc	fsr2h,f,c
 25324  0016AC  50DF               	movf	indf2,w,c
 25325  0016AE  6E30               	movwf	??_MSDWriteHandler& (0+255),c
 25326  0016B0  C030  F031         	movff	??_MSDWriteHandler,??_MSDWriteHandler+1
 25327  0016B4  6A32               	clrf	(??_MSDWriteHandler+2)& (0+255),c
 25328  0016B6  6A33               	clrf	(??_MSDWriteHandler+3)& (0+255),c
 25329  0016B8  6A34               	clrf	(??_MSDWriteHandler+4)& (0+255),c
 25330  0016BA  5031               	movf	??_MSDWriteHandler+1,w,c
 25331  0016BC  010D               	movlb	13	; () banked
 25332  0016BE  5F88               	subwf	136,f,b	;volatile
 25333  0016C0  5032               	movf	??_MSDWriteHandler+2,w,c
 25334  0016C2  5B89               	subwfb	137,f,b	;volatile
 25335  0016C4  5033               	movf	??_MSDWriteHandler+3,w,c
 25336  0016C6  5B8A               	subwfb	138,f,b	;volatile
 25337  0016C8  5034               	movf	??_MSDWriteHandler+4,w,c
 25338  0016CA  5B8B               	subwfb	139,f,b	;volatile
 25339                           
 25340                           ; BSR set to: 13
 25341                           ;usb_device_msd.c: 1292: ptrNextData += 64u;
 25342  0016CC  0E40               	movlw	64
 25343  0016CE  0100               	movlb	0	; () banked
 25344  0016D0  278C               	addwf	_ptrNextData& (0+255),f,b
 25345  0016D2  0E00               	movlw	0
 25346  0016D4  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 25347                           
 25348                           ; BSR set to: 0
 25349                           ;usb_device_msd.c: 1294: MSDWriteState = 0x03;
 25350  0016D6  0E03               	movlw	3
 25351  0016D8  D056               	goto	L23
 25352  0016DA                     
 25353                           ; BSR set to: 0
 25354                           ;usb_device_msd.c: 1298: {;usb_device_msd.c: 1305: if(msd_csw.bCSWStatus == 0x00)
 25355                           
 25356                           ; BSR set to: 0
 25357  0016DA  010D               	movlb	13	; () banked
 25358  0016DC  518C               	movf	140,w,b	;volatile
 25359  0016DE  A4D8               	btfss	status,2,c
 25360  0016E0  D03C               	goto	l703
 25361                           
 25362                           ; BSR set to: 13
 25363                           ;usb_device_msd.c: 1306: {;usb_device_msd.c: 1307: if(LUN[0].SectorWrite(LUN[0].mediaPar
      +                          ameters, LBA.Val, (uint8_t*)&msd_buffer[0], (LBA.Val==0)?1:0) != 1)
 25364  0016E2  C1F2  F025         	movff	_LUN+14,ExternalFlash_SectorWrite@config
 25365  0016E6  C1F3  F026         	movff	_LUN+15,ExternalFlash_SectorWrite@config+1
 25366  0016EA  C080  F027         	movff	_LBA,ExternalFlash_SectorWrite@sector_addr
 25367  0016EE  C081  F028         	movff	_LBA+1,ExternalFlash_SectorWrite@sector_addr+1
 25368  0016F2  C082  F029         	movff	_LBA+2,ExternalFlash_SectorWrite@sector_addr+2
 25369  0016F6  C083  F02A         	movff	_LBA+3,ExternalFlash_SectorWrite@sector_addr+3
 25370  0016FA  0E00               	movlw	0
 25371  0016FC  6E2B               	movwf	ExternalFlash_SectorWrite@buffer,c
 25372  0016FE  0E06               	movlw	6
 25373  001700  6E2C               	movwf	ExternalFlash_SectorWrite@buffer+1,c
 25374  001702  0100               	movlb	0	; () banked
 25375  001704  5180               	movf	_LBA& (0+255),w,b
 25376  001706  1181               	iorwf	(_LBA+1)& (0+255),w,b
 25377  001708  1182               	iorwf	(_LBA+2)& (0+255),w,b
 25378  00170A  1183               	iorwf	(_LBA+3)& (0+255),w,b
 25379  00170C  A4D8               	btfss	status,2,c
 25380  00170E  D002               	goto	u7380
 25381  001710  0E01               	movlw	1
 25382  001712  D001               	goto	u7390
 25383  001714                     u7380:
 25384  001714  0E00               	movlw	0
 25385  001716                     u7390:
 25386  001716  6E2D               	movwf	ExternalFlash_SectorWrite@allowWriteToZero,c
 25387  001718  D801               	call	u7408
 25388  00171A  D00A               	goto	u7409
 25389  00171C                     u7408:
 25390  00171C  0005               	push	
 25391  00171E  6EFA               	movwf	pclath,c
 25392  001720  0101               	movlb	1	; () banked
 25393  001722  51F0               	movf	(_LUN+12)& (0+255),w,b
 25394  001724  6EFD               	movwf	tosl,c
 25395  001726  51F1               	movf	(_LUN+13)& (0+255),w,b
 25396  001728  6EFE               	movwf	tosh,c
 25397  00172A  6AFF               	clrf	tosu,c
 25398  00172C  50FA               	movf	pclath,w,c
 25399  00172E  0012               	return		;indir
 25400  001730                     u7409:
 25401  001730  06E8               	decf	wreg,f,c
 25402  001732  B4D8               	btfsc	status,2,c
 25403  001734  D012               	goto	l703
 25404                           
 25405                           ;usb_device_msd.c: 1308: {;usb_device_msd.c: 1311: if(MSDRetryAttempt < (uint8_t)100u)
 25406  001736  0E64               	movlw	100
 25407  001738  0100               	movlb	0	; () banked
 25408  00173A  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 25409  00173C  D002               	goto	l702
 25410                           
 25411                           ; BSR set to: 0
 25412                           ;usb_device_msd.c: 1312: {;usb_device_msd.c: 1313: MSDRetryAttempt++;
 25413  00173E  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 25414                           
 25415                           ;usb_device_msd.c: 1314: break;
 25416  001740  D036               	goto	l687
 25417  001742                     l702:
 25418                           
 25419                           ; BSR set to: 0
 25420                           ;usb_device_msd.c: 1316: else;usb_device_msd.c: 1317: {;usb_device_msd.c: 1320: msd_csw.
      +                          bCSWStatus = 0x01;
 25421                           
 25422                           ; BSR set to: 0
 25423  001742  0E01               	movlw	1
 25424  001744  010D               	movlb	13	; () banked
 25425  001746  6F8C               	movwf	140,b	;volatile
 25426                           
 25427                           ;usb_device_msd.c: 1323: gblSenseData[0].SenseKey=0x3;
 25428  001748  0101               	movlb	1	; () banked
 25429  00174A  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 25430  00174C  0BF0               	andlw	-16
 25431  00174E  0903               	iorlw	3
 25432  001750  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 25433                           
 25434                           ;usb_device_msd.c: 1324: gblSenseData[0].ASC=0x00;
 25435  001752  0E00               	movlw	0
 25436  001754  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 25437                           
 25438                           ;usb_device_msd.c: 1325: gblSenseData[0].ASCQ=0x00;
 25439  001756  0E00               	movlw	0
 25440  001758  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 25441  00175A                     l703:
 25442                           
 25443                           ;usb_device_msd.c: 1326: };usb_device_msd.c: 1327: };usb_device_msd.c: 1328: };usb_devic
      +                          e_msd.c: 1332: LBA.Val++;
 25444                           
 25445                           ; BSR set to: 1
 25446                           
 25447                           ; BSR set to: 1
 25448                           
 25449                           ; BSR set to: 1
 25450  00175A  0E01               	movlw	1
 25451  00175C  0100               	movlb	0	; () banked
 25452  00175E  2780               	addwf	_LBA& (0+255),f,b
 25453  001760  0E00               	movlw	0
 25454  001762  2381               	addwfc	(_LBA+1)& (0+255),f,b
 25455  001764  2382               	addwfc	(_LBA+2)& (0+255),f,b
 25456  001766  2383               	addwfc	(_LBA+3)& (0+255),f,b
 25457                           
 25458                           ; BSR set to: 0
 25459                           ;usb_device_msd.c: 1333: TransferLength.Val--;
 25460  001768  0786               	decf	_TransferLength& (0+255),f,b
 25461  00176A  A0D8               	btfss	status,0,c
 25462  00176C  0787               	decf	(_TransferLength+1)& (0+255),f,b
 25463                           
 25464                           ; BSR set to: 0
 25465                           ;usb_device_msd.c: 1334: MSDWriteState = 0x01;
 25466  00176E  0E01               	movlw	1
 25467  001770  D00A               	goto	L23
 25468  001772                     
 25469                           ; BSR set to: 0
 25470                           ;usb_device_msd.c: 1341: msd_csw.bCSWStatus=0x02;
 25471                           
 25472                           ; BSR set to: 0
 25473  001772  0E02               	movlw	2
 25474  001774  010D               	movlb	13	; () banked
 25475  001776  6F8C               	movwf	140,b	;volatile
 25476                           
 25477                           ; BSR set to: 13
 25478                           ;usb_device_msd.c: 1342: USBStallEndpoint(2u, 0);
 25479  001778  0E00               	movlw	0
 25480  00177A  6E01               	movwf	USBStallEndpoint@dir,c
 25481  00177C  0E02               	movlw	2
 25482  00177E  EC1E  F021         	call	_USBStallEndpoint
 25483                           
 25484                           ;usb_device_msd.c: 1343: MSDWriteState = 0x00;
 25485  001782  0E00               	movlw	0
 25486  001784                     L43:
 25487  001784  0100               	movlb	0	; () banked
 25488  001786                     L23:
 25489  001786  6F9F               	movwf	_MSDWriteState& (0+255),b
 25490                           
 25491                           ; BSR set to: 0
 25492                           ;usb_device_msd.c: 1345: }
 25493                           
 25494                           ;usb_device_msd.c: 1344: break;
 25495  001788  D012               	goto	l687
 25496  00178A                     l684:
 25497                           
 25498                           ; BSR set to: 0
 25499  00178A  0100               	movlb	0	; () banked
 25500  00178C  519F               	movf	_MSDWriteState& (0+255),w,b
 25501                           
 25502                           ; Switch size 1, requested type "space"
 25503                           ; Number of cases is 5, Range of values is 0 to 4
 25504                           ; switch strategies available:
 25505                           ; Name         Instructions Cycles
 25506                           ; simple_byte           16     9 (average)
 25507                           ;	Chosen strategy is simple_byte
 25508  00178E  0A00               	xorlw	0	; case 0
 25509  001790  B4D8               	btfsc	status,2,c
 25510  001792  D6B7               	goto	l685
 25511  001794  0A01               	xorlw	1	; case 1
 25512  001796  B4D8               	btfsc	status,2,c
 25513  001798  D707               	goto	l690
 25514  00179A  0A03               	xorlw	3	; case 2
 25515  00179C  B4D8               	btfsc	status,2,c
 25516  00179E  D79D               	goto	l699
 25517  0017A0  0A01               	xorlw	1	; case 3
 25518  0017A2  B4D8               	btfsc	status,2,c
 25519  0017A4  D716               	goto	l692
 25520  0017A6  0A07               	xorlw	7	; case 4
 25521  0017A8  B4D8               	btfsc	status,2,c
 25522  0017AA  D759               	goto	l695
 25523  0017AC  D7E2               	goto	l704
 25524  0017AE                     l687:
 25525                           
 25526                           ;usb_device_msd.c: 1347: return MSDWriteState;
 25527                           
 25528                           ; BSR set to: 0
 25529  0017AE  0100               	movlb	0	; () banked
 25530  0017B0  519F               	movf	_MSDWriteState& (0+255),w,b
 25531  0017B2  0012               	return	
 25532  0017B4                     __end_of_MSDWriteHandler:
 25533                           	opt stack 0
 25534                           tosu	equ	0xFFF
 25535                           tosh	equ	0xFFE
 25536                           tosl	equ	0xFFD
 25537                           pclath	equ	0xFFA
 25538                           tblptru	equ	0xFF8
 25539                           tblptrh	equ	0xFF7
 25540                           tblptrl	equ	0xFF6
 25541                           tablat	equ	0xFF5
 25542                           prodh	equ	0xFF4
 25543                           prodl	equ	0xFF3
 25544                           intcon	equ	0xFF2
 25545                           intcon2	equ	0xFF1
 25546                           intcon3	equ	0xFF0
 25547                           indf0	equ	0xFEF
 25548                           postinc0	equ	0xFEE
 25549                           fsr0h	equ	0xFEA
 25550                           fsr0l	equ	0xFE9
 25551                           wreg	equ	0xFE8
 25552                           indf1	equ	0xFE7
 25553                           postdec1	equ	0xFE5
 25554                           plusw1	equ	0xFE3
 25555                           fsr1h	equ	0xFE2
 25556                           fsr1l	equ	0xFE1
 25557                           indf2	equ	0xFDF
 25558                           postinc2	equ	0xFDE
 25559                           postdec2	equ	0xFDD
 25560                           plusw2	equ	0xFDB
 25561                           fsr2h	equ	0xFDA
 25562                           fsr2l	equ	0xFD9
 25563                           status	equ	0xFD8
 25564                           
 25565 ;; *************** function _ExternalFlash_WriteProtectStateGet *****************
 25566 ;; Defined at:
 25567 ;;		line 34 in file "external_flash.c"
 25568 ;; Parameters:    Size  Location     Type
 25569 ;;  config          2    0[COMRAM] PTR void 
 25570 ;;		 -> NULL(0), 
 25571 ;; Auto vars:     Size  Location     Type
 25572 ;;		None
 25573 ;; Return value:  Size  Location     Type
 25574 ;;                  1    wreg      unsigned char 
 25575 ;; Registers used:
 25576 ;;		wreg
 25577 ;; Tracked objects:
 25578 ;;		On entry : 0/0
 25579 ;;		On exit  : 0/0
 25580 ;;		Unchanged: 0/0
 25581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25582 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25583 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25584 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25585 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25586 ;;Total ram usage:        2 bytes
 25587 ;; Hardware stack levels used:    1
 25588 ;; This function calls:
 25589 ;;		Nothing
 25590 ;; This function is called by:
 25591 ;;		_MSDWriteHandler
 25592 ;;		_MSDProcessCommandMediaPresent
 25593 ;; This function uses a non-reentrant model
 25594 ;;
 25595                           
 25596                           	psect	text112
 25597  008046                     __ptext112:
 25598                           	opt stack 0
 25599  008046                     _ExternalFlash_WriteProtectStateGet:
 25600                           	opt stack 25
 25601                           
 25602                           ;external_flash.c: 37: return 0;
 25603                           
 25604                           ; BSR set to: 0
 25605                           ;incstack = 0
 25606  008046  0E00               	movlw	0
 25607  008048  0012               	return	
 25608  00804A                     __end_of_ExternalFlash_WriteProtectStateGet:
 25609                           	opt stack 0
 25610                           tosu	equ	0xFFF
 25611                           tosh	equ	0xFFE
 25612                           tosl	equ	0xFFD
 25613                           pclath	equ	0xFFA
 25614                           tblptru	equ	0xFF8
 25615                           tblptrh	equ	0xFF7
 25616                           tblptrl	equ	0xFF6
 25617                           tablat	equ	0xFF5
 25618                           prodh	equ	0xFF4
 25619                           prodl	equ	0xFF3
 25620                           intcon	equ	0xFF2
 25621                           intcon2	equ	0xFF1
 25622                           intcon3	equ	0xFF0
 25623                           indf0	equ	0xFEF
 25624                           postinc0	equ	0xFEE
 25625                           fsr0h	equ	0xFEA
 25626                           fsr0l	equ	0xFE9
 25627                           wreg	equ	0xFE8
 25628                           indf1	equ	0xFE7
 25629                           postdec1	equ	0xFE5
 25630                           plusw1	equ	0xFE3
 25631                           fsr1h	equ	0xFE2
 25632                           fsr1l	equ	0xFE1
 25633                           indf2	equ	0xFDF
 25634                           postinc2	equ	0xFDE
 25635                           postdec2	equ	0xFDD
 25636                           plusw2	equ	0xFDB
 25637                           fsr2h	equ	0xFDA
 25638                           fsr2l	equ	0xFD9
 25639                           status	equ	0xFD8
 25640                           
 25641 ;; *************** function _ExternalFlash_SectorWrite *****************
 25642 ;; Defined at:
 25643 ;;		line 56 in file "external_flash.c"
 25644 ;; Parameters:    Size  Location     Type
 25645 ;;  config          2   36[COMRAM] PTR void 
 25646 ;;		 -> NULL(0), 
 25647 ;;  sector_addr     4   38[COMRAM] unsigned long 
 25648 ;;  buffer          2   42[COMRAM] PTR unsigned char 
 25649 ;;		 -> msd_buffer(512), 
 25650 ;;  allowWriteTo    1   44[COMRAM] unsigned char 
 25651 ;; Auto vars:     Size  Location     Type
 25652 ;;  page            2   45[COMRAM] unsigned int 
 25653 ;; Return value:  Size  Location     Type
 25654 ;;                  1    wreg      unsigned char 
 25655 ;; Registers used:
 25656 ;;		wreg, status,2, status,0, cstack
 25657 ;; Tracked objects:
 25658 ;;		On entry : 0/0
 25659 ;;		On exit  : 0/0
 25660 ;;		Unchanged: 0/0
 25661 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25662 ;;      Params:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25663 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25664 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25665 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25666 ;;Total ram usage:       11 bytes
 25667 ;; Hardware stack levels used:    1
 25668 ;; Hardware stack levels required when called:    5
 25669 ;; This function calls:
 25670 ;;		_flash_page_write
 25671 ;; This function is called by:
 25672 ;;		_MSDWriteHandler
 25673 ;; This function uses a non-reentrant model
 25674 ;;
 25675                           
 25676                           	psect	text113
 25677  007A04                     __ptext113:
 25678                           	opt stack 0
 25679  007A04                     _ExternalFlash_SectorWrite:
 25680                           	opt stack 20
 25681                           
 25682                           ;external_flash.c: 58: uint16_t page = (uint16_t) sector_addr;
 25683                           
 25684                           ;incstack = 0
 25685  007A04  C027  F02E         	movff	ExternalFlash_SectorWrite@sector_addr,ExternalFlash_SectorWrite@page
 25686  007A08  C028  F02F         	movff	ExternalFlash_SectorWrite@sector_addr+1,ExternalFlash_SectorWrite@page+1
 25687                           
 25688                           ;external_flash.c: 61: if(sector_addr >= 8192)
 25689  007A0C  502A               	movf	ExternalFlash_SectorWrite@sector_addr+3,w,c
 25690  007A0E  1029               	iorwf	ExternalFlash_SectorWrite@sector_addr+2,w,c
 25691  007A10  E104               	bnz	u6870
 25692  007A12  0E20               	movlw	32
 25693  007A14  5C28               	subwf	ExternalFlash_SectorWrite@sector_addr+1,w,c
 25694  007A16  A0D8               	btfss	status,0,c
 25695  007A18  D002               	goto	l1855
 25696  007A1A                     u6870:
 25697                           
 25698                           ;external_flash.c: 62: {;external_flash.c: 63: return 0;
 25699  007A1A  0E00               	movlw	0
 25700  007A1C  0012               	return	
 25701  007A1E                     l1855:
 25702                           
 25703                           ;external_flash.c: 64: };external_flash.c: 67: flash_page_write(page, buffer);
 25704  007A1E  C02E  F020         	movff	ExternalFlash_SectorWrite@page,flash_page_write@page
 25705  007A22  C02F  F021         	movff	ExternalFlash_SectorWrite@page+1,flash_page_write@page+1
 25706  007A26  C02B  F022         	movff	ExternalFlash_SectorWrite@buffer,flash_page_write@data
 25707  007A2A  C02C  F023         	movff	ExternalFlash_SectorWrite@buffer+1,flash_page_write@data+1
 25708  007A2E  EC97  F039         	call	_flash_page_write	;wreg free
 25709                           
 25710                           ;external_flash.c: 69: return 1;
 25711  007A32  0E01               	movlw	1
 25712  007A34  0012               	return	
 25713  007A36                     __end_of_ExternalFlash_SectorWrite:
 25714                           	opt stack 0
 25715                           tosu	equ	0xFFF
 25716                           tosh	equ	0xFFE
 25717                           tosl	equ	0xFFD
 25718                           pclath	equ	0xFFA
 25719                           tblptru	equ	0xFF8
 25720                           tblptrh	equ	0xFF7
 25721                           tblptrl	equ	0xFF6
 25722                           tablat	equ	0xFF5
 25723                           prodh	equ	0xFF4
 25724                           prodl	equ	0xFF3
 25725                           intcon	equ	0xFF2
 25726                           intcon2	equ	0xFF1
 25727                           intcon3	equ	0xFF0
 25728                           indf0	equ	0xFEF
 25729                           postinc0	equ	0xFEE
 25730                           fsr0h	equ	0xFEA
 25731                           fsr0l	equ	0xFE9
 25732                           wreg	equ	0xFE8
 25733                           indf1	equ	0xFE7
 25734                           postdec1	equ	0xFE5
 25735                           plusw1	equ	0xFE3
 25736                           fsr1h	equ	0xFE2
 25737                           fsr1l	equ	0xFE1
 25738                           indf2	equ	0xFDF
 25739                           postinc2	equ	0xFDE
 25740                           postdec2	equ	0xFDD
 25741                           plusw2	equ	0xFDB
 25742                           fsr2h	equ	0xFDA
 25743                           fsr2l	equ	0xFD9
 25744                           status	equ	0xFD8
 25745                           
 25746 ;; *************** function _flash_page_write *****************
 25747 ;; Defined at:
 25748 ;;		line 433 in file "flash.c"
 25749 ;; Parameters:    Size  Location     Type
 25750 ;;  page            2   31[COMRAM] unsigned int 
 25751 ;;  data            2   33[COMRAM] PTR unsigned char 
 25752 ;;		 -> buffer(512), msd_buffer(512), 
 25753 ;; Auto vars:     Size  Location     Type
 25754 ;;  match           1   35[COMRAM] enum E6887
 25755 ;; Return value:  Size  Location     Type
 25756 ;;                  1    wreg      void 
 25757 ;; Registers used:
 25758 ;;		wreg, status,2, status,0, cstack
 25759 ;; Tracked objects:
 25760 ;;		On entry : 0/0
 25761 ;;		On exit  : 0/0
 25762 ;;		Unchanged: 0/0
 25763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25764 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25765 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25766 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25767 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25768 ;;Total ram usage:        5 bytes
 25769 ;; Hardware stack levels used:    1
 25770 ;; Hardware stack levels required when called:    4
 25771 ;; This function calls:
 25772 ;;		__flash_compare_page_to_buffer
 25773 ;;		__flash_write_page_from_buffer
 25774 ;;		__flash_write_to_buffer
 25775 ;;		_spi_set_configuration
 25776 ;; This function is called by:
 25777 ;;		_ExternalFlash_SectorWrite
 25778 ;;		_fat_format
 25779 ;; This function uses a non-reentrant model
 25780 ;;
 25781                           
 25782                           	psect	text114
 25783  00732E                     __ptext114:
 25784                           	opt stack 0
 25785  00732E                     _flash_page_write:
 25786                           	opt stack 23
 25787                           
 25788                           ;flash.c: 435: flashMatchResult_t match;;flash.c: 438: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 25789                           
 25790                           ;incstack = 0
 25791  00732E  0E00               	movlw	0
 25792  007330  EC2C  F024         	call	_spi_set_configuration
 25793                           
 25794                           ;flash.c: 441: _flash_write_to_buffer(0, data, 512, FLASH_BUFFER_1);
 25795  007334  0E00               	movlw	0
 25796  007336  6E15               	movwf	__flash_write_to_buffer@start+1,c
 25797  007338  0E00               	movlw	0
 25798  00733A  6E14               	movwf	__flash_write_to_buffer@start,c
 25799  00733C  C022  F016         	movff	flash_page_write@data,__flash_write_to_buffer@data
 25800  007340  C023  F017         	movff	flash_page_write@data+1,__flash_write_to_buffer@data+1
 25801  007344  0E02               	movlw	2
 25802  007346  6E19               	movwf	__flash_write_to_buffer@data_length+1,c
 25803  007348  0E00               	movlw	0
 25804  00734A  6E18               	movwf	__flash_write_to_buffer@data_length,c
 25805  00734C  0E00               	movlw	0
 25806  00734E  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 25807  007350  EC91  F03A         	call	__flash_write_to_buffer	;wreg free
 25808                           
 25809                           ;flash.c: 444: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 25810  007354  C020  F014         	movff	flash_page_write@page,__flash_compare_page_to_buffer@page
 25811  007358  C021  F015         	movff	flash_page_write@page+1,__flash_compare_page_to_buffer@page+1
 25812  00735C  0E00               	movlw	0
 25813  00735E  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 25814  007360  EC43  F033         	call	__flash_compare_page_to_buffer	;wreg free
 25815  007364  6E24               	movwf	flash_page_write@match,c
 25816                           
 25817                           ;flash.c: 447: if(match==DATA_DOES_NOT_MATCH)
 25818  007366  0424               	decf	flash_page_write@match,w,c
 25819  007368  A4D8               	btfss	status,2,c
 25820  00736A  D008               	goto	l1812
 25821                           
 25822                           ;flash.c: 448: {;flash.c: 449: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 25823  00736C  C020  F014         	movff	flash_page_write@page,__flash_write_page_from_buffer@page
 25824  007370  C021  F015         	movff	flash_page_write@page+1,__flash_write_page_from_buffer@page+1
 25825  007374  0E00               	movlw	0
 25826  007376  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 25827  007378  EC92  F038         	call	__flash_write_page_from_buffer	;wreg free
 25828  00737C                     l1812:
 25829                           
 25830                           ;flash.c: 450: };flash.c: 453: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 25831  00737C  0E01               	movlw	1
 25832  00737E  EC2C  F024         	call	_spi_set_configuration
 25833  007382  0012               	return		;funcret
 25834  007384                     __end_of_flash_page_write:
 25835                           	opt stack 0
 25836                           tosu	equ	0xFFF
 25837                           tosh	equ	0xFFE
 25838                           tosl	equ	0xFFD
 25839                           pclath	equ	0xFFA
 25840                           tblptru	equ	0xFF8
 25841                           tblptrh	equ	0xFF7
 25842                           tblptrl	equ	0xFF6
 25843                           tablat	equ	0xFF5
 25844                           prodh	equ	0xFF4
 25845                           prodl	equ	0xFF3
 25846                           intcon	equ	0xFF2
 25847                           intcon2	equ	0xFF1
 25848                           intcon3	equ	0xFF0
 25849                           indf0	equ	0xFEF
 25850                           postinc0	equ	0xFEE
 25851                           fsr0h	equ	0xFEA
 25852                           fsr0l	equ	0xFE9
 25853                           wreg	equ	0xFE8
 25854                           indf1	equ	0xFE7
 25855                           postdec1	equ	0xFE5
 25856                           plusw1	equ	0xFE3
 25857                           fsr1h	equ	0xFE2
 25858                           fsr1l	equ	0xFE1
 25859                           indf2	equ	0xFDF
 25860                           postinc2	equ	0xFDE
 25861                           postdec2	equ	0xFDD
 25862                           plusw2	equ	0xFDB
 25863                           fsr2h	equ	0xFDA
 25864                           fsr2l	equ	0xFD9
 25865                           status	equ	0xFD8
 25866                           
 25867 ;; *************** function _MSDReadHandler *****************
 25868 ;; Defined at:
 25869 ;;		line 1038 in file "usb_device_msd.c"
 25870 ;; Parameters:    Size  Location     Type
 25871 ;;		None
 25872 ;; Auto vars:     Size  Location     Type
 25873 ;;		None
 25874 ;; Return value:  Size  Location     Type
 25875 ;;                  1    wreg      unsigned char 
 25876 ;; Registers used:
 25877 ;;		wreg, fsr2l, fsr2h, status,2, status,0, pclath, tosl, prodl, prodh, cstack
 25878 ;; Tracked objects:
 25879 ;;		On entry : 0/0
 25880 ;;		On exit  : 0/0
 25881 ;;		Unchanged: 0/0
 25882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 25883 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25884 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25885 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25886 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 25887 ;;Total ram usage:        4 bytes
 25888 ;; Hardware stack levels used:    1
 25889 ;; Hardware stack levels required when called:    6
 25890 ;; This function calls:
 25891 ;;		_ExternalFlash_SectorRead
 25892 ;;		_MSDCheckForErrorCases
 25893 ;;		_USBStallEndpoint
 25894 ;;		_USBTransferOnePacket
 25895 ;; This function is called by:
 25896 ;;		_MSDProcessCommandMediaPresent
 25897 ;; This function uses a non-reentrant model
 25898 ;;
 25899                           
 25900                           	psect	text115
 25901  002D0A                     __ptext115:
 25902                           	opt stack 0
 25903  002D0A                     _MSDReadHandler:
 25904                           	opt stack 20
 25905                           
 25906                           ;usb_device_msd.c: 1040: switch(MSDReadState)
 25907                           
 25908                           ;incstack = 0
 25909  002D0A  D0D6               	goto	l665
 25910  002D0C                     l666:
 25911                           
 25912                           ; BSR set to: 0
 25913                           ;usb_device_msd.c: 1046: LBA.v[3]=gblCBW.CBWCB[2];
 25914  002D0C  C111  F083         	movff	_gblCBW+17,_LBA+3
 25915                           
 25916                           ;usb_device_msd.c: 1047: LBA.v[2]=gblCBW.CBWCB[3];
 25917  002D10  C112  F082         	movff	_gblCBW+18,_LBA+2
 25918                           
 25919                           ;usb_device_msd.c: 1048: LBA.v[1]=gblCBW.CBWCB[4];
 25920  002D14  C113  F081         	movff	_gblCBW+19,_LBA+1
 25921                           
 25922                           ;usb_device_msd.c: 1049: LBA.v[0]=gblCBW.CBWCB[5];
 25923  002D18  C114  F080         	movff	_gblCBW+20,_LBA
 25924                           
 25925                           ;usb_device_msd.c: 1051: TransferLength.byte.HB = gblCBW.CBWCB[7];
 25926  002D1C  C116  F087         	movff	_gblCBW+22,_TransferLength+1
 25927                           
 25928                           ;usb_device_msd.c: 1052: TransferLength.byte.LB = gblCBW.CBWCB[8];
 25929  002D20  C117  F086         	movff	_gblCBW+23,_TransferLength
 25930                           
 25931                           ; BSR set to: 0
 25932                           ;usb_device_msd.c: 1055: if(MSDCheckForErrorCases(TransferLength.Val * (uint32_t)512) !=
      +                           0x00)
 25933  002D24  5186               	movf	_TransferLength& (0+255),w,b
 25934  002D26  6E36               	movwf	??_MSDReadHandler& (0+255),c
 25935  002D28  5187               	movf	(_TransferLength+1)& (0+255),w,b
 25936  002D2A  6E37               	movwf	(??_MSDReadHandler+1)& (0+255),c
 25937  002D2C  6A38               	clrf	(??_MSDReadHandler+2)& (0+255),c
 25938  002D2E  6A39               	clrf	(??_MSDReadHandler+3)& (0+255),c
 25939  002D30  0E09               	movlw	9
 25940  002D32                     u7145:
 25941  002D32  90D8               	bcf	status,0,c
 25942  002D34  3636               	rlcf	??_MSDReadHandler,f,c
 25943  002D36  3637               	rlcf	??_MSDReadHandler+1,f,c
 25944  002D38  3638               	rlcf	??_MSDReadHandler+2,f,c
 25945  002D3A  3639               	rlcf	??_MSDReadHandler+3,f,c
 25946  002D3C  2EE8               	decfsz	wreg,f,c
 25947  002D3E  D7F9               	goto	u7145
 25948  002D40  C036  F00B         	movff	??_MSDReadHandler,MSDCheckForErrorCases@DeviceBytes
 25949  002D44  C037  F00C         	movff	??_MSDReadHandler+1,MSDCheckForErrorCases@DeviceBytes+1
 25950  002D48  C038  F00D         	movff	??_MSDReadHandler+2,MSDCheckForErrorCases@DeviceBytes+2
 25951  002D4C  C039  F00E         	movff	??_MSDReadHandler+3,MSDCheckForErrorCases@DeviceBytes+3
 25952  002D50  ECFF  F025         	call	_MSDCheckForErrorCases	;wreg free
 25953  002D54  0900               	iorlw	0
 25954  002D56  A4D8               	btfss	status,2,c
 25955  002D58  D0C1               	goto	l668
 25956                           
 25957                           ;usb_device_msd.c: 1058: };usb_device_msd.c: 1060: MSDReadState = 0x01;
 25958                           
 25959                           ;usb_device_msd.c: 1056: {;usb_device_msd.c: 1057: break;
 25960  002D5A  0E01               	movlw	1
 25961  002D5C  0100               	movlb	0	; () banked
 25962  002D5E  6FA0               	movwf	_MSDReadState& (0+255),b
 25963  002D60                     
 25964                           ; BSR set to: 0
 25965                           ;usb_device_msd.c: 1064: if(TransferLength.Val == 0)
 25966                           
 25967                           ; BSR set to: 0
 25968  002D60  5186               	movf	_TransferLength& (0+255),w,b
 25969  002D62  1187               	iorwf	(_TransferLength+1)& (0+255),w,b
 25970  002D64  A4D8               	btfss	status,2,c
 25971  002D66  D002               	goto	l670
 25972                           
 25973                           ; BSR set to: 0
 25974                           ;usb_device_msd.c: 1065: {;usb_device_msd.c: 1066: MSDReadState = 0x00;
 25975  002D68  0E00               	movlw	0
 25976  002D6A  D046               	goto	L24
 25977  002D6C                     l670:
 25978                           
 25979                           ; BSR set to: 0
 25980                           ;usb_device_msd.c: 1068: };usb_device_msd.c: 1070: TransferLength.Val--;
 25981                           
 25982                           ; BSR set to: 0
 25983  002D6C  0786               	decf	_TransferLength& (0+255),f,b
 25984  002D6E  A0D8               	btfss	status,0,c
 25985  002D70  0787               	decf	(_TransferLength+1)& (0+255),f,b
 25986                           
 25987                           ; BSR set to: 0
 25988                           ;usb_device_msd.c: 1071: MSDReadState = 0x02;
 25989  002D72  0E02               	movlw	2
 25990  002D74  6FA0               	movwf	_MSDReadState& (0+255),b
 25991  002D76                     
 25992                           ; BSR set to: 0
 25993                           ;usb_device_msd.c: 1076: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)) != 0)
 25994                           
 25995                           ; BSR set to: 0
 25996  002D76  5188               	movf	_USBMSDInHandle& (0+255),w,b
 25997  002D78  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 25998  002D7A  B4D8               	btfsc	status,2,c
 25999  002D7C  D006               	goto	l672
 26000                           
 26001                           ; BSR set to: 0
 26002  002D7E  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 26003  002D82  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26004  002D86  BEDF               	btfsc	indf2,7,c
 26005  002D88  D0A9               	goto	l668
 26006  002D8A                     l672:
 26007                           
 26008                           ; BSR set to: 0
 26009                           ;usb_device_msd.c: 1079: };usb_device_msd.c: 1083: if(LUN[0].SectorRead(LUN[0].mediaPara
      +                          meters, LBA.Val, (uint8_t*)&msd_buffer[0]) != 1)
 26010                           
 26011                           ; BSR set to: 0
 26012  002D8A  C1F2  F02C         	movff	_LUN+14,ExternalFlash_SectorRead@config
 26013  002D8E  C1F3  F02D         	movff	_LUN+15,ExternalFlash_SectorRead@config+1
 26014  002D92  C080  F02E         	movff	_LBA,ExternalFlash_SectorRead@sector_addr
 26015  002D96  C081  F02F         	movff	_LBA+1,ExternalFlash_SectorRead@sector_addr+1
 26016  002D9A  C082  F030         	movff	_LBA+2,ExternalFlash_SectorRead@sector_addr+2
 26017  002D9E  C083  F031         	movff	_LBA+3,ExternalFlash_SectorRead@sector_addr+3
 26018  002DA2  0E00               	movlw	0
 26019  002DA4  6E32               	movwf	ExternalFlash_SectorRead@buffer,c
 26020  002DA6  0E06               	movlw	6
 26021  002DA8  6E33               	movwf	ExternalFlash_SectorRead@buffer+1,c
 26022  002DAA  D801               	call	u7198
 26023  002DAC  D00A               	goto	u7199
 26024  002DAE                     u7198:
 26025  002DAE  0005               	push	
 26026  002DB0  6EFA               	movwf	pclath,c
 26027  002DB2  0101               	movlb	1	; () banked
 26028  002DB4  51EC               	movf	(_LUN+8)& (0+255),w,b
 26029  002DB6  6EFD               	movwf	tosl,c
 26030  002DB8  51ED               	movf	(_LUN+9)& (0+255),w,b
 26031  002DBA  6EFE               	movwf	tosh,c
 26032  002DBC  6AFF               	clrf	tosu,c
 26033  002DBE  50FA               	movf	pclath,w,c
 26034  002DC0  0012               	return		;indir
 26035  002DC2                     u7199:
 26036  002DC2  06E8               	decf	wreg,f,c
 26037  002DC4  B4D8               	btfsc	status,2,c
 26038  002DC6  D01A               	goto	l675
 26039                           
 26040                           ;usb_device_msd.c: 1084: {;usb_device_msd.c: 1085: if(MSDRetryAttempt < (uint8_t)100u)
 26041  002DC8  0E64               	movlw	100
 26042  002DCA  0100               	movlb	0	; () banked
 26043  002DCC  619E               	cpfslt	_MSDRetryAttempt& (0+255),b
 26044  002DCE  D002               	goto	l674
 26045                           
 26046                           ; BSR set to: 0
 26047                           ;usb_device_msd.c: 1086: {;usb_device_msd.c: 1087: MSDRetryAttempt++;
 26048  002DD0  2B9E               	incf	_MSDRetryAttempt& (0+255),f,b
 26049                           
 26050                           ;usb_device_msd.c: 1088: break;
 26051  002DD2  D084               	goto	l668
 26052  002DD4                     l674:
 26053                           
 26054                           ; BSR set to: 0
 26055                           ;usb_device_msd.c: 1090: else;usb_device_msd.c: 1091: {;usb_device_msd.c: 1100: msd_csw.
      +                          bCSWStatus=0x02;
 26056                           
 26057                           ; BSR set to: 0
 26058  002DD4  0E02               	movlw	2
 26059  002DD6  010D               	movlb	13	; () banked
 26060  002DD8  6F8C               	movwf	140,b	;volatile
 26061                           
 26062                           ;usb_device_msd.c: 1104: gblSenseData[0].SenseKey=0x3;
 26063  002DDA  0101               	movlb	1	; () banked
 26064  002DDC  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26065  002DDE  0BF0               	andlw	-16
 26066  002DE0  0903               	iorlw	3
 26067  002DE2  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26068                           
 26069                           ;usb_device_msd.c: 1105: gblSenseData[0].ASC=0x00;
 26070  002DE4  0E00               	movlw	0
 26071  002DE6  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26072                           
 26073                           ;usb_device_msd.c: 1106: gblSenseData[0].ASCQ=0x00;
 26074  002DE8  0E00               	movlw	0
 26075  002DEA  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26076                           
 26077                           ; BSR set to: 1
 26078                           ;usb_device_msd.c: 1107: USBStallEndpoint(2u, 1);
 26079  002DEC  0E01               	movlw	1
 26080  002DEE  6E01               	movwf	USBStallEndpoint@dir,c
 26081  002DF0  0E02               	movlw	2
 26082  002DF2  EC1E  F021         	call	_USBStallEndpoint
 26083  002DF6  D05D               	goto	l10421
 26084  002DF8                     L24:
 26085  002DF8  6FA0               	movwf	_MSDReadState& (0+255),b
 26086                           
 26087                           ;usb_device_msd.c: 1109: break;
 26088  002DFA  D070               	goto	l668
 26089  002DFC                     l675:
 26090                           
 26091                           ;usb_device_msd.c: 1110: };usb_device_msd.c: 1111: };usb_device_msd.c: 1113: LBA.Val++;
 26092                           
 26093                           ; BSR set to: 0
 26094                           
 26095                           ; BSR set to: 0
 26096  002DFC  0E01               	movlw	1
 26097  002DFE  0100               	movlb	0	; () banked
 26098  002E00  2780               	addwf	_LBA& (0+255),f,b
 26099  002E02  0E00               	movlw	0
 26100  002E04  2381               	addwfc	(_LBA+1)& (0+255),f,b
 26101  002E06  2382               	addwfc	(_LBA+2)& (0+255),f,b
 26102  002E08  2383               	addwfc	(_LBA+3)& (0+255),f,b
 26103                           
 26104                           ; BSR set to: 0
 26105                           ;usb_device_msd.c: 1114: msd_csw.dCSWDataResidue=0x0200;
 26106  002E0A  0E00               	movlw	0
 26107  002E0C  010D               	movlb	13	; () banked
 26108  002E0E  6F88               	movwf	136,b	;volatile
 26109  002E10  0E02               	movlw	2
 26110  002E12  6F89               	movwf	137,b	;volatile
 26111  002E14  0E00               	movlw	0
 26112  002E16  6F8A               	movwf	138,b	;volatile
 26113  002E18  0E00               	movlw	0
 26114  002E1A  6F8B               	movwf	139,b	;volatile
 26115                           
 26116                           ; BSR set to: 13
 26117                           ;usb_device_msd.c: 1117: ptrNextData=(uint8_t *)&msd_buffer[0];
 26118  002E1C  0E00               	movlw	0
 26119  002E1E  0100               	movlb	0	; () banked
 26120  002E20  6F8C               	movwf	_ptrNextData& (0+255),b
 26121  002E22  0E06               	movlw	6
 26122  002E24  6F8D               	movwf	(_ptrNextData+1)& (0+255),b
 26123                           
 26124                           ;usb_device_msd.c: 1119: MSDReadState = 0x03;
 26125  002E26  0E03               	movlw	3
 26126  002E28  6FA0               	movwf	_MSDReadState& (0+255),b
 26127  002E2A                     
 26128                           ; BSR set to: 0
 26129                           ;usb_device_msd.c: 1123: if(msd_csw.dCSWDataResidue == 0)
 26130                           
 26131                           ; BSR set to: 0
 26132  002E2A  010D               	movlb	13	; () banked
 26133  002E2C  5188               	movf	136,w,b	;volatile
 26134  002E2E  1189               	iorwf	137,w,b	;volatile
 26135  002E30  118A               	iorwf	138,w,b	;volatile
 26136  002E32  118B               	iorwf	139,w,b	;volatile
 26137  002E34  A4D8               	btfss	status,2,c
 26138  002E36  D002               	goto	l677
 26139                           
 26140                           ; BSR set to: 13
 26141                           ;usb_device_msd.c: 1124: {;usb_device_msd.c: 1125: MSDReadState = 0x01;
 26142  002E38  0E01               	movlw	1
 26143  002E3A  D03C               	goto	L26
 26144  002E3C                     l677:
 26145                           
 26146                           ;usb_device_msd.c: 1127: };usb_device_msd.c: 1129: MSDReadState = 0x04;
 26147                           
 26148                           ; BSR set to: 0
 26149  002E3C  0E04               	movlw	4
 26150  002E3E  0100               	movlb	0	; () banked
 26151  002E40  6FA0               	movwf	_MSDReadState& (0+255),b
 26152  002E42                     
 26153                           ; BSR set to: 0
 26154                           ;usb_device_msd.c: 1136: if(((USBMSDInHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDI
      +                          nHandle & 0x80) != 0x00)))
 26155                           
 26156                           ; BSR set to: 0
 26157  002E42  5188               	movf	_USBMSDInHandle& (0+255),w,b
 26158  002E44  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26159  002E46  B4D8               	btfsc	status,2,c
 26160  002E48  D006               	goto	l679
 26161                           
 26162                           ; BSR set to: 0
 26163  002E4A  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 26164  002E4E  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26165  002E52  BEDF               	btfsc	indf2,7,c
 26166  002E54  D043               	goto	l668
 26167  002E56                     l679:
 26168                           
 26169                           ; BSR set to: 0
 26170                           ;usb_device_msd.c: 1139: };usb_device_msd.c: 1142: USBMSDInHandle = USBTransferOnePacket
      +                          (2u,1,ptrNextData,64u);
 26171                           
 26172                           ; BSR set to: 0
 26173  002E56  0E01               	movlw	1
 26174  002E58  6E01               	movwf	USBTransferOnePacket@dir,c
 26175  002E5A  C08C  F002         	movff	_ptrNextData,USBTransferOnePacket@data
 26176  002E5E  C08D  F003         	movff	_ptrNextData+1,USBTransferOnePacket@data+1
 26177  002E62  0E40               	movlw	64
 26178  002E64  6E04               	movwf	USBTransferOnePacket@len,c
 26179  002E66  0E02               	movlw	2
 26180  002E68  EC2B  F023         	call	_USBTransferOnePacket
 26181  002E6C  C001  F088         	movff	?_USBTransferOnePacket,_USBMSDInHandle
 26182  002E70  C002  F089         	movff	?_USBTransferOnePacket+1,_USBMSDInHandle+1
 26183                           
 26184                           ;usb_device_msd.c: 1144: MSDReadState = 0x03;
 26185  002E74  0E03               	movlw	3
 26186  002E76  0100               	movlb	0	; () banked
 26187  002E78  6FA0               	movwf	_MSDReadState& (0+255),b
 26188                           
 26189                           ; BSR set to: 0
 26190                           ;usb_device_msd.c: 1146: gblCBW.dCBWDataTransferLength-= 64u;
 26191  002E7A  0E40               	movlw	64
 26192  002E7C  0101               	movlb	1	; () banked
 26193  002E7E  5F08               	subwf	(_gblCBW+8)& (0+255),f,b
 26194  002E80  0E00               	movlw	0
 26195  002E82  5B09               	subwfb	(_gblCBW+9)& (0+255),f,b
 26196  002E84  5B0A               	subwfb	(_gblCBW+10)& (0+255),f,b
 26197  002E86  5B0B               	subwfb	(_gblCBW+11)& (0+255),f,b
 26198                           
 26199                           ; BSR set to: 1
 26200                           ;usb_device_msd.c: 1147: msd_csw.dCSWDataResidue-=64u;
 26201  002E88  0E40               	movlw	64
 26202  002E8A  010D               	movlb	13	; () banked
 26203  002E8C  5F88               	subwf	136,f,b	;volatile
 26204  002E8E  0E00               	movlw	0
 26205  002E90  5B89               	subwfb	137,f,b	;volatile
 26206  002E92  5B8A               	subwfb	138,f,b	;volatile
 26207  002E94  5B8B               	subwfb	139,f,b	;volatile
 26208                           
 26209                           ; BSR set to: 13
 26210                           ;usb_device_msd.c: 1148: ptrNextData+=64u;
 26211  002E96  0E40               	movlw	64
 26212  002E98  0100               	movlb	0	; () banked
 26213  002E9A  278C               	addwf	_ptrNextData& (0+255),f,b
 26214  002E9C  0E00               	movlw	0
 26215  002E9E  238D               	addwfc	(_ptrNextData+1)& (0+255),f,b
 26216                           
 26217                           ;usb_device_msd.c: 1149: break;
 26218  002EA0  D01D               	goto	l668
 26219  002EA2                     
 26220                           ; BSR set to: 0
 26221                           ;usb_device_msd.c: 1154: msd_csw.bCSWStatus=0x02;
 26222                           
 26223                           ; BSR set to: 0
 26224  002EA2  0E02               	movlw	2
 26225  002EA4  010D               	movlb	13	; () banked
 26226  002EA6  6F8C               	movwf	140,b	;volatile
 26227                           
 26228                           ; BSR set to: 13
 26229                           ;usb_device_msd.c: 1155: USBStallEndpoint(2u, 1);
 26230  002EA8  0E01               	movlw	1
 26231  002EAA  6E01               	movwf	USBStallEndpoint@dir,c
 26232  002EAC  0E02               	movlw	2
 26233  002EAE  EC1E  F021         	call	_USBStallEndpoint
 26234  002EB2                     l10421:
 26235                           
 26236                           ;usb_device_msd.c: 1157: MSDReadState = 0x00;
 26237  002EB2  0E00               	movlw	0
 26238  002EB4                     L26:
 26239  002EB4  0100               	movlb	0	; () banked
 26240  002EB6  D7A0               	goto	L24
 26241  002EB8                     l665:
 26242                           
 26243                           ; BSR set to: 0
 26244  002EB8  0100               	movlb	0	; () banked
 26245  002EBA  51A0               	movf	_MSDReadState& (0+255),w,b
 26246                           
 26247                           ; Switch size 1, requested type "space"
 26248                           ; Number of cases is 5, Range of values is 0 to 4
 26249                           ; switch strategies available:
 26250                           ; Name         Instructions Cycles
 26251                           ; simple_byte           16     9 (average)
 26252                           ;	Chosen strategy is simple_byte
 26253  002EBC  0A00               	xorlw	0	; case 0
 26254  002EBE  B4D8               	btfsc	status,2,c
 26255  002EC0  D725               	goto	l666
 26256  002EC2  0A01               	xorlw	1	; case 1
 26257  002EC4  B4D8               	btfsc	status,2,c
 26258  002EC6  D74C               	goto	l669
 26259  002EC8  0A03               	xorlw	3	; case 2
 26260  002ECA  B4D8               	btfsc	status,2,c
 26261  002ECC  D754               	goto	l671
 26262  002ECE  0A01               	xorlw	1	; case 3
 26263  002ED0  B4D8               	btfsc	status,2,c
 26264  002ED2  D7AB               	goto	l676
 26265  002ED4  0A07               	xorlw	7	; case 4
 26266  002ED6  B4D8               	btfsc	status,2,c
 26267  002ED8  D7B4               	goto	l678
 26268  002EDA  D7E3               	goto	l680
 26269  002EDC                     l668:
 26270                           
 26271                           ;usb_device_msd.c: 1161: return MSDReadState;
 26272                           
 26273                           ; BSR set to: 0
 26274  002EDC  0100               	movlb	0	; () banked
 26275  002EDE  51A0               	movf	_MSDReadState& (0+255),w,b
 26276  002EE0  0012               	return	
 26277  002EE2                     __end_of_MSDReadHandler:
 26278                           	opt stack 0
 26279                           tosu	equ	0xFFF
 26280                           tosh	equ	0xFFE
 26281                           tosl	equ	0xFFD
 26282                           pclath	equ	0xFFA
 26283                           tblptru	equ	0xFF8
 26284                           tblptrh	equ	0xFF7
 26285                           tblptrl	equ	0xFF6
 26286                           tablat	equ	0xFF5
 26287                           prodh	equ	0xFF4
 26288                           prodl	equ	0xFF3
 26289                           intcon	equ	0xFF2
 26290                           intcon2	equ	0xFF1
 26291                           intcon3	equ	0xFF0
 26292                           indf0	equ	0xFEF
 26293                           postinc0	equ	0xFEE
 26294                           fsr0h	equ	0xFEA
 26295                           fsr0l	equ	0xFE9
 26296                           wreg	equ	0xFE8
 26297                           indf1	equ	0xFE7
 26298                           postdec1	equ	0xFE5
 26299                           plusw1	equ	0xFE3
 26300                           fsr1h	equ	0xFE2
 26301                           fsr1l	equ	0xFE1
 26302                           indf2	equ	0xFDF
 26303                           postinc2	equ	0xFDE
 26304                           postdec2	equ	0xFDD
 26305                           plusw2	equ	0xFDB
 26306                           fsr2h	equ	0xFDA
 26307                           fsr2l	equ	0xFD9
 26308                           status	equ	0xFD8
 26309                           
 26310 ;; *************** function _MSDCheckForErrorCases *****************
 26311 ;; Defined at:
 26312 ;;		line 1434 in file "usb_device_msd.c"
 26313 ;; Parameters:    Size  Location     Type
 26314 ;;  DeviceBytes     4   10[COMRAM] unsigned long 
 26315 ;; Auto vars:     Size  Location     Type
 26316 ;;  DeviceNoData    1   16[COMRAM] unsigned char 
 26317 ;;  MSDErrorCase    1   15[COMRAM] unsigned char 
 26318 ;;  HostMoreData    1   14[COMRAM] unsigned char 
 26319 ;; Return value:  Size  Location     Type
 26320 ;;                  1    wreg      unsigned char 
 26321 ;; Registers used:
 26322 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26323 ;; Tracked objects:
 26324 ;;		On entry : 0/0
 26325 ;;		On exit  : 0/0
 26326 ;;		Unchanged: 0/0
 26327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26328 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26329 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26330 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26331 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26332 ;;Total ram usage:        7 bytes
 26333 ;; Hardware stack levels used:    1
 26334 ;; Hardware stack levels required when called:    2
 26335 ;; This function calls:
 26336 ;;		_MSDErrorHandler
 26337 ;; This function is called by:
 26338 ;;		_MSDProcessCommandMediaPresent
 26339 ;;		_MSDReadHandler
 26340 ;;		_MSDWriteHandler
 26341 ;; This function uses a non-reentrant model
 26342 ;;
 26343                           
 26344                           	psect	text116
 26345  004BFE                     __ptext116:
 26346                           	opt stack 0
 26347  004BFE                     _MSDCheckForErrorCases:
 26348                           	opt stack 23
 26349                           
 26350                           ;usb_device_msd.c: 1436: uint8_t MSDErrorCase;;usb_device_msd.c: 1437: bool HostMoreData
      +                          ThanDevice;;usb_device_msd.c: 1438: bool DeviceNoData;;usb_device_msd.c: 1441: if(Device
      +                          Bytes == 0)
 26351                           
 26352                           ; BSR set to: 0
 26353                           ;incstack = 0
 26354  004BFE  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 26355  004C00  100C               	iorwf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 26356  004C02  100D               	iorwf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 26357  004C04  100E               	iorwf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 26358  004C06  A4D8               	btfss	status,2,c
 26359  004C08  D002               	goto	l710
 26360                           
 26361                           ;usb_device_msd.c: 1442: {;usb_device_msd.c: 1443: DeviceNoData = 1;
 26362  004C0A  0E01               	movlw	1
 26363  004C0C  D001               	goto	L27
 26364  004C0E                     l710:
 26365                           
 26366                           ;usb_device_msd.c: 1445: else;usb_device_msd.c: 1446: {;usb_device_msd.c: 1447: DeviceNo
      +                          Data = 0;
 26367  004C0E  0E00               	movlw	0
 26368  004C10                     L27:
 26369  004C10  6E11               	movwf	MSDCheckForErrorCases@DeviceNoData,c
 26370                           
 26371                           ;usb_device_msd.c: 1448: };usb_device_msd.c: 1453: if((MSDHostNoData == 1) && (DeviceNoD
      +                          ata == 1))
 26372  004C12  0100               	movlb	0	; () banked
 26373  004C14  059B               	decf	_MSDHostNoData& (0+255),w,b
 26374  004C16  A4D8               	btfss	status,2,c
 26375  004C18  D005               	goto	l712
 26376                           
 26377                           ; BSR set to: 0
 26378  004C1A  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26379  004C1C  A4D8               	btfss	status,2,c
 26380  004C1E  D002               	goto	l712
 26381                           
 26382                           ; BSR set to: 0
 26383                           ;usb_device_msd.c: 1454: {;usb_device_msd.c: 1455: return 0x00;
 26384  004C20  0E00               	movlw	0
 26385                           
 26386                           ; BSR set to: 0
 26387  004C22  0012               	return	
 26388  004C24                     l712:
 26389                           
 26390                           ; BSR set to: 0
 26391                           ;usb_device_msd.c: 1456: };usb_device_msd.c: 1459: if(gblCBW.dCBWDataTransferLength == D
      +                          eviceBytes)
 26392                           
 26393                           ; BSR set to: 0
 26394  004C24  500B               	movf	MSDCheckForErrorCases@DeviceBytes,w,c
 26395  004C26  0101               	movlb	1	; () banked
 26396  004C28  1908               	xorwf	(_gblCBW+8)& (0+255),w,b
 26397  004C2A  E11A               	bnz	l10047
 26398  004C2C  500C               	movf	MSDCheckForErrorCases@DeviceBytes+1,w,c
 26399  004C2E  1909               	xorwf	(_gblCBW+9)& (0+255),w,b
 26400  004C30  E117               	bnz	l10047
 26401  004C32  500D               	movf	MSDCheckForErrorCases@DeviceBytes+2,w,c
 26402  004C34  190A               	xorwf	(_gblCBW+10)& (0+255),w,b
 26403  004C36  E114               	bnz	l10047
 26404  004C38  500E               	movf	MSDCheckForErrorCases@DeviceBytes+3,w,c
 26405  004C3A  190B               	xorwf	(_gblCBW+11)& (0+255),w,b
 26406  004C3C  A4D8               	btfss	status,2,c
 26407  004C3E  D010               	goto	l718
 26408                           
 26409                           ; BSR set to: 1
 26410                           ;usb_device_msd.c: 1460: {;usb_device_msd.c: 1462: if(MSD_State == 0x01)
 26411  004C40  0100               	movlb	0	; () banked
 26412  004C42  05A2               	decf	_MSD_State& (0+255),w,b
 26413  004C44  A4D8               	btfss	status,2,c
 26414  004C46  D006               	goto	l715
 26415                           
 26416                           ; BSR set to: 0
 26417                           ;usb_device_msd.c: 1463: {;usb_device_msd.c: 1465: if(MSDCommandState != 0x2a)
 26418  004C48  0E2A               	movlw	42
 26419  004C4A  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26420  004C4C  B4D8               	btfsc	status,2,c
 26421  004C4E  D008               	goto	l718
 26422                           
 26423                           ; BSR set to: 0
 26424                           ;usb_device_msd.c: 1466: {;usb_device_msd.c: 1467: return 0x00;
 26425  004C50  0E00               	movlw	0
 26426                           
 26427                           ; BSR set to: 0
 26428  004C52  0012               	return	
 26429  004C54                     l715:
 26430                           
 26431                           ; BSR set to: 0
 26432                           ;usb_device_msd.c: 1470: else;usb_device_msd.c: 1471: {;usb_device_msd.c: 1474: if(MSDCo
      +                          mmandState == 0x2a)
 26433                           
 26434                           ; BSR set to: 0
 26435  004C54  0E2A               	movlw	42
 26436  004C56  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26437  004C58  A4D8               	btfss	status,2,c
 26438  004C5A  D002               	goto	l718
 26439                           
 26440                           ; BSR set to: 0
 26441                           ;usb_device_msd.c: 1475: {;usb_device_msd.c: 1476: return 0x00;
 26442  004C5C  0E00               	movlw	0
 26443                           
 26444                           ; BSR set to: 0
 26445  004C5E  0012               	return	
 26446  004C60                     l718:
 26447  004C60                     l10047:
 26448                           
 26449                           ;usb_device_msd.c: 1477: };usb_device_msd.c: 1478: };usb_device_msd.c: 1479: };usb_devic
      +                          e_msd.c: 1485: if(gblCBW.dCBWDataTransferLength > DeviceBytes)
 26450  004C60  0101               	movlb	1	; () banked
 26451  004C62  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26452  004C64  5C0B               	subwf	MSDCheckForErrorCases@DeviceBytes,w,c
 26453  004C66  5109               	movf	(_gblCBW+9)& (0+255),w,b
 26454  004C68  580C               	subwfb	MSDCheckForErrorCases@DeviceBytes+1,w,c
 26455  004C6A  510A               	movf	(_gblCBW+10)& (0+255),w,b
 26456  004C6C  580D               	subwfb	MSDCheckForErrorCases@DeviceBytes+2,w,c
 26457  004C6E  510B               	movf	(_gblCBW+11)& (0+255),w,b
 26458  004C70  580E               	subwfb	MSDCheckForErrorCases@DeviceBytes+3,w,c
 26459  004C72  B0D8               	btfsc	status,0,c
 26460  004C74  D002               	goto	l719
 26461                           
 26462                           ; BSR set to: 1
 26463                           ;usb_device_msd.c: 1486: {;usb_device_msd.c: 1487: HostMoreDataThanDevice = 1;
 26464  004C76  0E01               	movlw	1
 26465  004C78  D001               	goto	L28
 26466  004C7A                     l719:
 26467                           
 26468                           ; BSR set to: 1
 26469                           ;usb_device_msd.c: 1489: else;usb_device_msd.c: 1490: {;usb_device_msd.c: 1491: HostMore
      +                          DataThanDevice = 0;
 26470                           
 26471                           ; BSR set to: 1
 26472  004C7A  0E00               	movlw	0
 26473  004C7C                     L28:
 26474  004C7C  6E0F               	movwf	MSDCheckForErrorCases@HostMoreDataThanDevice,c
 26475                           
 26476                           ; BSR set to: 1
 26477                           ;usb_device_msd.c: 1492: };usb_device_msd.c: 1495: if(MSD_State == 0x02)
 26478                           
 26479                           ; BSR set to: 1
 26480  004C7E  0E02               	movlw	2
 26481  004C80  0100               	movlb	0	; () banked
 26482  004C82  19A2               	xorwf	_MSD_State& (0+255),w,b
 26483  004C84  A4D8               	btfss	status,2,c
 26484  004C86  D014               	goto	l721
 26485                           
 26486                           ; BSR set to: 0
 26487                           ;usb_device_msd.c: 1496: {;usb_device_msd.c: 1498: if((MSDCommandState != 0x2a) && (Devi
      +                          ceNoData == 0))
 26488  004C88  0E2A               	movlw	42
 26489  004C8A  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26490  004C8C  B4D8               	btfsc	status,2,c
 26491  004C8E  D005               	goto	l722
 26492                           
 26493                           ; BSR set to: 0
 26494  004C90  5011               	movf	MSDCheckForErrorCases@DeviceNoData,w,c
 26495  004C92  A4D8               	btfss	status,2,c
 26496  004C94  D002               	goto	l722
 26497  004C96                     u6720:
 26498                           
 26499                           ; BSR set to: 0
 26500                           ;usb_device_msd.c: 1499: MSDErrorCase = 0x05;
 26501  004C96  0E05               	movlw	5
 26502  004C98  D01D               	goto	L31
 26503  004C9A                     l722:
 26504                           
 26505                           ; BSR set to: 0
 26506                           ;usb_device_msd.c: 1501: else if(MSDHostNoData == 1)
 26507                           
 26508                           ; BSR set to: 0
 26509  004C9A  059B               	decf	_MSDHostNoData& (0+255),w,b
 26510  004C9C  B4D8               	btfsc	status,2,c
 26511  004C9E  D00F               	goto	u6770
 26512                           
 26513                           ; BSR set to: 0
 26514                           ;usb_device_msd.c: 1504: else if(DeviceNoData == 1)
 26515                           
 26516                           ; BSR set to: 0
 26517                           
 26518                           ; BSR set to: 0
 26519                           ;usb_device_msd.c: 1502: MSDErrorCase = 0x01;
 26520  004CA0  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26521  004CA2  B4D8               	btfsc	status,2,c
 26522  004CA4  D003               	goto	u6750
 26523                           
 26524                           ; BSR set to: 0
 26525                           ;usb_device_msd.c: 1507: else if(HostMoreDataThanDevice == 1)
 26526                           
 26527                           ; BSR set to: 0
 26528                           
 26529                           ; BSR set to: 0
 26530                           ;usb_device_msd.c: 1505: MSDErrorCase = 0x04;
 26531  004CA6  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26532  004CA8  A4D8               	btfss	status,2,c
 26533  004CAA  D7F5               	goto	u6720
 26534  004CAC                     u6750:
 26535                           
 26536                           ; BSR set to: 0
 26537                           ;usb_device_msd.c: 1508: MSDErrorCase = 0x04;
 26538  004CAC  0E04               	movlw	4
 26539  004CAE  D012               	goto	L31
 26540  004CB0                     l721:
 26541                           
 26542                           ; BSR set to: 0
 26543                           ;usb_device_msd.c: 1513: else;usb_device_msd.c: 1514: {;usb_device_msd.c: 1516: if(MSDCo
      +                          mmandState == 0x2a)
 26544                           
 26545                           ; BSR set to: 0
 26546  004CB0  0E2A               	movlw	42
 26547  004CB2  19A1               	xorwf	_MSDCommandState& (0+255),w,b
 26548  004CB4  B4D8               	btfsc	status,2,c
 26549  004CB6  D00D               	goto	l737
 26550                           
 26551                           ; BSR set to: 0
 26552                           ;usb_device_msd.c: 1519: else if(MSDHostNoData == 1)
 26553                           
 26554                           ; BSR set to: 0
 26555                           
 26556                           ; BSR set to: 0
 26557                           ;usb_device_msd.c: 1517: MSDErrorCase = 0x03;
 26558  004CB8  059B               	decf	_MSDHostNoData& (0+255),w,b
 26559  004CBA  A4D8               	btfss	status,2,c
 26560  004CBC  D002               	goto	l733
 26561  004CBE                     u6770:
 26562                           
 26563                           ; BSR set to: 0
 26564                           ;usb_device_msd.c: 1520: MSDErrorCase = 0x01;
 26565  004CBE  0E01               	movlw	1
 26566  004CC0  D009               	goto	L31
 26567  004CC2                     l733:
 26568                           
 26569                           ; BSR set to: 0
 26570                           ;usb_device_msd.c: 1522: else if(DeviceNoData == 1)
 26571                           
 26572                           ; BSR set to: 0
 26573  004CC2  0411               	decf	MSDCheckForErrorCases@DeviceNoData,w,c
 26574  004CC4  B4D8               	btfsc	status,2,c
 26575  004CC6  D003               	goto	u6790
 26576                           
 26577                           ; BSR set to: 0
 26578                           ;usb_device_msd.c: 1525: else if(HostMoreDataThanDevice == 1)
 26579                           
 26580                           ; BSR set to: 0
 26581                           
 26582                           ; BSR set to: 0
 26583                           ;usb_device_msd.c: 1523: MSDErrorCase = 0x02;
 26584  004CC8  040F               	decf	MSDCheckForErrorCases@HostMoreDataThanDevice,w,c
 26585  004CCA  A4D8               	btfss	status,2,c
 26586  004CCC  D002               	goto	l737
 26587  004CCE                     u6790:
 26588                           
 26589                           ; BSR set to: 0
 26590                           ;usb_device_msd.c: 1526: MSDErrorCase = 0x02;
 26591  004CCE  0E02               	movlw	2
 26592  004CD0  D001               	goto	L31
 26593  004CD2                     l737:
 26594                           
 26595                           ; BSR set to: 0
 26596                           ;usb_device_msd.c: 1528: else;usb_device_msd.c: 1529: MSDErrorCase = 0x03;
 26597                           
 26598                           ; BSR set to: 0
 26599  004CD2  0E03               	movlw	3
 26600  004CD4                     L31:
 26601  004CD4  6E10               	movwf	MSDCheckForErrorCases@MSDErrorCase,c
 26602                           
 26603                           ; BSR set to: 0
 26604                           ;usb_device_msd.c: 1530: };usb_device_msd.c: 1532: MSDErrorHandler(MSDErrorCase);
 26605                           
 26606                           ; BSR set to: 0
 26607                           
 26608                           ; BSR set to: 0
 26609                           
 26610                           ; BSR set to: 0
 26611                           
 26612                           ; BSR set to: 0
 26613                           
 26614                           ; BSR set to: 0
 26615  004CD6  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26616  004CD8  ECA8  F022         	call	_MSDErrorHandler
 26617                           
 26618                           ;usb_device_msd.c: 1533: return MSDErrorCase;
 26619  004CDC  5010               	movf	MSDCheckForErrorCases@MSDErrorCase,w,c
 26620  004CDE  0012               	return	
 26621  004CE0                     __end_of_MSDCheckForErrorCases:
 26622                           	opt stack 0
 26623                           tosu	equ	0xFFF
 26624                           tosh	equ	0xFFE
 26625                           tosl	equ	0xFFD
 26626                           pclath	equ	0xFFA
 26627                           tblptru	equ	0xFF8
 26628                           tblptrh	equ	0xFF7
 26629                           tblptrl	equ	0xFF6
 26630                           tablat	equ	0xFF5
 26631                           prodh	equ	0xFF4
 26632                           prodl	equ	0xFF3
 26633                           intcon	equ	0xFF2
 26634                           intcon2	equ	0xFF1
 26635                           intcon3	equ	0xFF0
 26636                           indf0	equ	0xFEF
 26637                           postinc0	equ	0xFEE
 26638                           fsr0h	equ	0xFEA
 26639                           fsr0l	equ	0xFE9
 26640                           wreg	equ	0xFE8
 26641                           indf1	equ	0xFE7
 26642                           postdec1	equ	0xFE5
 26643                           plusw1	equ	0xFE3
 26644                           fsr1h	equ	0xFE2
 26645                           fsr1l	equ	0xFE1
 26646                           indf2	equ	0xFDF
 26647                           postinc2	equ	0xFDE
 26648                           postdec2	equ	0xFDD
 26649                           plusw2	equ	0xFDB
 26650                           fsr2h	equ	0xFDA
 26651                           fsr2l	equ	0xFD9
 26652                           status	equ	0xFD8
 26653                           
 26654 ;; *************** function _MSDErrorHandler *****************
 26655 ;; Defined at:
 26656 ;;		line 1577 in file "usb_device_msd.c"
 26657 ;; Parameters:    Size  Location     Type
 26658 ;;  ErrorCase       1    wreg     unsigned char 
 26659 ;; Auto vars:     Size  Location     Type
 26660 ;;  ErrorCase       1    8[COMRAM] unsigned char 
 26661 ;;  OldMSD_State    1    9[COMRAM] unsigned char 
 26662 ;; Return value:  Size  Location     Type
 26663 ;;                  1    wreg      void 
 26664 ;; Registers used:
 26665 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 26666 ;; Tracked objects:
 26667 ;;		On entry : 0/0
 26668 ;;		On exit  : 0/0
 26669 ;;		Unchanged: 0/0
 26670 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26671 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26672 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26673 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26674 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26675 ;;Total ram usage:        2 bytes
 26676 ;; Hardware stack levels used:    1
 26677 ;; Hardware stack levels required when called:    1
 26678 ;; This function calls:
 26679 ;;		_ResetSenseData
 26680 ;;		_USBStallEndpoint
 26681 ;; This function is called by:
 26682 ;;		_MSDProcessCommandMediaAbsent
 26683 ;;		_MSDProcessCommandMediaPresent
 26684 ;;		_MSDCheckForErrorCases
 26685 ;; This function uses a non-reentrant model
 26686 ;;
 26687                           
 26688                           	psect	text117
 26689  004550                     __ptext117:
 26690                           	opt stack 0
 26691  004550                     _MSDErrorHandler:
 26692                           	opt stack 23
 26693                           
 26694                           ;incstack = 0
 26695                           ;MSDErrorHandler@ErrorCase stored from wreg
 26696  004550  6E09               	movwf	MSDErrorHandler@ErrorCase,c
 26697                           
 26698                           ;usb_device_msd.c: 1579: uint8_t OldMSD_State;;usb_device_msd.c: 1583: if((((USBMSDInHan
      +                          dle != 0x0000) && ((*(volatile uint8_t*)USBMSDInHandle & 0x80) != 0x00))) || (((USBMSDOu
      +                          tHandle != 0x0000) && ((*(volatile uint8_t*)USBMSDOutHandle & 0x80) != 0x00))))
 26699  004552  0100               	movlb	0	; () banked
 26700  004554  5188               	movf	_USBMSDInHandle& (0+255),w,b
 26701  004556  1189               	iorwf	(_USBMSDInHandle+1)& (0+255),w,b
 26702  004558  B4D8               	btfsc	status,2,c
 26703  00455A  D006               	goto	u6390
 26704                           
 26705                           ; BSR set to: 0
 26706  00455C  C088  FFD9         	movff	_USBMSDInHandle,fsr2l
 26707  004560  C089  FFDA         	movff	_USBMSDInHandle+1,fsr2h
 26708  004564  BEDF               	btfsc	indf2,7,c
 26709  004566  0012               	return	
 26710  004568                     u6390:
 26711                           
 26712                           ; BSR set to: 0
 26713                           
 26714                           ; BSR set to: 0
 26715  004568  518A               	movf	_USBMSDOutHandle& (0+255),w,b
 26716  00456A  118B               	iorwf	(_USBMSDOutHandle+1)& (0+255),w,b
 26717  00456C  B4D8               	btfsc	status,2,c
 26718  00456E  D006               	goto	l741
 26719                           
 26720                           ; BSR set to: 0
 26721  004570  C08A  FFD9         	movff	_USBMSDOutHandle,fsr2l
 26722  004574  C08B  FFDA         	movff	_USBMSDOutHandle+1,fsr2h
 26723  004578  BEDF               	btfsc	indf2,7,c
 26724  00457A  0012               	return	
 26725  00457C                     l741:
 26726                           
 26727                           ; BSR set to: 0
 26728                           ;usb_device_msd.c: 1586: };usb_device_msd.c: 1590: OldMSD_State = MSD_State;
 26729  00457C  C0A2  F00A         	movff	_MSD_State,MSDErrorHandler@OldMSD_State
 26730                           
 26731                           ;usb_device_msd.c: 1593: MSDCommandState = 0xFF;
 26732  004580  69A1               	setf	_MSDCommandState& (0+255),b
 26733                           
 26734                           ; BSR set to: 0
 26735                           ;usb_device_msd.c: 1594: MSDReadState = 0x00;
 26736  004582  0E00               	movlw	0
 26737  004584  6FA0               	movwf	_MSDReadState& (0+255),b
 26738                           
 26739                           ;usb_device_msd.c: 1595: MSDWriteState = 0x00;
 26740  004586  0E00               	movlw	0
 26741  004588  6F9F               	movwf	_MSDWriteState& (0+255),b
 26742                           
 26743                           ; BSR set to: 0
 26744                           ;usb_device_msd.c: 1597: msd_csw.dCSWDataResidue = gblCBW.dCBWDataTransferLength;
 26745  00458A  C108  FD88         	movff	_gblCBW+8,3464	;volatile
 26746  00458E  C109  FD89         	movff	_gblCBW+9,3465	;volatile
 26747  004592  C10A  FD8A         	movff	_gblCBW+10,3466	;volatile
 26748  004596  C10B  FD8B         	movff	_gblCBW+11,3467	;volatile
 26749                           
 26750                           ;usb_device_msd.c: 1598: msd_csw.bCSWStatus = 0x01;
 26751  00459A  0E01               	movlw	1
 26752  00459C  010D               	movlb	13	; () banked
 26753  00459E  6F8C               	movwf	140,b	;volatile
 26754                           
 26755                           ;usb_device_msd.c: 1599: MSD_State = 0x03;
 26756  0045A0  0E03               	movlw	3
 26757  0045A2  0100               	movlb	0	; () banked
 26758  0045A4  6FA2               	movwf	_MSD_State& (0+255),b
 26759                           
 26760                           ;usb_device_msd.c: 1603: switch(ErrorCase)
 26761  0045A6  D043               	goto	l747
 26762  0045A8                     
 26763                           ;usb_device_msd.c: 1606: msd_csw.bCSWStatus = 0x02;
 26764                           
 26765                           ; BSR set to: 0
 26766  0045A8  0E02               	movlw	2
 26767  0045AA  010D               	movlb	13	; () banked
 26768  0045AC  6F8C               	movwf	140,b	;volatile
 26769                           
 26770                           ;usb_device_msd.c: 1607: break;
 26771  0045AE  0012               	return	
 26772  0045B0                     
 26773                           ;usb_device_msd.c: 1610: USBStallEndpoint(2u, 1);
 26774                           
 26775                           ; BSR set to: 13
 26776  0045B0  0E01               	movlw	1
 26777  0045B2  6E01               	movwf	USBStallEndpoint@dir,c
 26778  0045B4  0E02               	movlw	2
 26779  0045B6  EC1E  F021         	call	_USBStallEndpoint
 26780                           
 26781                           ;usb_device_msd.c: 1611: break;
 26782  0045BA  0012               	return	
 26783  0045BC                     
 26784                           ;usb_device_msd.c: 1614: msd_csw.bCSWStatus = 0x02;
 26785  0045BC  0E02               	movlw	2
 26786  0045BE  010D               	movlb	13	; () banked
 26787  0045C0  6F8C               	movwf	140,b	;volatile
 26788                           
 26789                           ; BSR set to: 13
 26790                           ;usb_device_msd.c: 1615: USBStallEndpoint(2u, 1);
 26791  0045C2  0E01               	movlw	1
 26792  0045C4  6E01               	movwf	USBStallEndpoint@dir,c
 26793  0045C6  0E02               	movlw	2
 26794  0045C8  EC1E  F021         	call	_USBStallEndpoint
 26795                           
 26796                           ;usb_device_msd.c: 1616: break;
 26797  0045CC  0012               	return	
 26798  0045CE                     
 26799                           ;usb_device_msd.c: 1619: USBStallEndpoint(2u, 0);
 26800  0045CE  0E00               	movlw	0
 26801  0045D0  6E01               	movwf	USBStallEndpoint@dir,c
 26802  0045D2  0E02               	movlw	2
 26803  0045D4  EC1E  F021         	call	_USBStallEndpoint
 26804                           
 26805                           ;usb_device_msd.c: 1620: break;
 26806  0045D8  0012               	return	
 26807  0045DA                     
 26808                           ;usb_device_msd.c: 1623: msd_csw.bCSWStatus = 0x02;
 26809  0045DA  0E02               	movlw	2
 26810  0045DC  010D               	movlb	13	; () banked
 26811  0045DE  6F8C               	movwf	140,b	;volatile
 26812                           
 26813                           ; BSR set to: 13
 26814                           ;usb_device_msd.c: 1624: USBStallEndpoint(2u, 0);
 26815  0045E0  0E00               	movlw	0
 26816  0045E2  6E01               	movwf	USBStallEndpoint@dir,c
 26817  0045E4  0E02               	movlw	2
 26818  0045E6  EC1E  F021         	call	_USBStallEndpoint
 26819                           
 26820                           ;usb_device_msd.c: 1625: break;
 26821  0045EA  0012               	return	
 26822  0045EC                     
 26823                           ;usb_device_msd.c: 1628: ResetSenseData();
 26824  0045EC  EC22  F037         	call	_ResetSenseData	;wreg free
 26825                           
 26826                           ;usb_device_msd.c: 1629: gblSenseData[0].SenseKey=0x5;
 26827  0045F0  0101               	movlb	1	; () banked
 26828  0045F2  5121               	movf	(_gblSenseData+2)& (0+255),w,b
 26829  0045F4  0BF0               	andlw	-16
 26830  0045F6  0905               	iorlw	5
 26831  0045F8  6F21               	movwf	(_gblSenseData+2)& (0+255),b
 26832                           
 26833                           ; BSR set to: 1
 26834                           ;usb_device_msd.c: 1630: gblSenseData[0].ASC=0x20;
 26835  0045FA  0E20               	movlw	32
 26836  0045FC  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 26837                           
 26838                           ; BSR set to: 1
 26839                           ;usb_device_msd.c: 1631: gblSenseData[0].ASCQ=0x00;
 26840  0045FE  0E00               	movlw	0
 26841  004600  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 26842                           
 26843                           ; BSR set to: 1
 26844                           ;usb_device_msd.c: 1633: if((OldMSD_State == 0x02) && (gblCBW.dCBWDataTransferLength != 
      +                          0))
 26845  004602  0E02               	movlw	2
 26846  004604  180A               	xorwf	MSDErrorHandler@OldMSD_State,w,c
 26847  004606  A4D8               	btfss	status,2,c
 26848  004608  D00C               	goto	l755
 26849                           
 26850                           ; BSR set to: 1
 26851  00460A  5108               	movf	(_gblCBW+8)& (0+255),w,b
 26852  00460C  1109               	iorwf	(_gblCBW+9)& (0+255),w,b
 26853  00460E  110A               	iorwf	(_gblCBW+10)& (0+255),w,b
 26854  004610  110B               	iorwf	(_gblCBW+11)& (0+255),w,b
 26855  004612  B4D8               	btfsc	status,2,c
 26856  004614  D006               	goto	l755
 26857                           
 26858                           ; BSR set to: 1
 26859                           ;usb_device_msd.c: 1634: {;usb_device_msd.c: 1635: USBStallEndpoint(2u, 0);
 26860  004616  0E00               	movlw	0
 26861  004618  6E01               	movwf	USBStallEndpoint@dir,c
 26862  00461A  0E02               	movlw	2
 26863  00461C  EC1E  F021         	call	_USBStallEndpoint
 26864                           
 26865                           ;usb_device_msd.c: 1636: }
 26866  004620  0012               	return	
 26867  004622                     l755:
 26868                           
 26869                           ;usb_device_msd.c: 1637: else;usb_device_msd.c: 1638: {;usb_device_msd.c: 1639: USBStall
      +                          Endpoint(2u, 1);
 26870  004622  0E01               	movlw	1
 26871  004624  6E01               	movwf	USBStallEndpoint@dir,c
 26872  004626  0E02               	movlw	2
 26873  004628  EC1E  F021         	call	_USBStallEndpoint
 26874                           
 26875                           ;usb_device_msd.c: 1644: }
 26876                           
 26877                           ;usb_device_msd.c: 1643: break;
 26878                           
 26879                           ;usb_device_msd.c: 1642: default:
 26880                           
 26881                           ;usb_device_msd.c: 1640: };usb_device_msd.c: 1641: break;
 26882  00462C  0012               	return	
 26883  00462E                     l747:
 26884  00462E  5009               	movf	MSDErrorHandler@ErrorCase,w,c
 26885                           
 26886                           ; Switch size 1, requested type "space"
 26887                           ; Number of cases is 6, Range of values is 1 to 127
 26888                           ; switch strategies available:
 26889                           ; Name         Instructions Cycles
 26890                           ; simple_byte           19    10 (average)
 26891                           ;	Chosen strategy is simple_byte
 26892  004630  0A01               	xorlw	1	; case 1
 26893  004632  B4D8               	btfsc	status,2,c
 26894  004634  D7B9               	goto	l748
 26895  004636  0A03               	xorlw	3	; case 2
 26896  004638  B4D8               	btfsc	status,2,c
 26897  00463A  D7BA               	goto	l750
 26898  00463C  0A01               	xorlw	1	; case 3
 26899  00463E  B4D8               	btfsc	status,2,c
 26900  004640  D7BD               	goto	l751
 26901  004642  0A07               	xorlw	7	; case 4
 26902  004644  B4D8               	btfsc	status,2,c
 26903  004646  D7C3               	goto	l752
 26904  004648  0A01               	xorlw	1	; case 5
 26905  00464A  B4D8               	btfsc	status,2,c
 26906  00464C  D7C6               	goto	l753
 26907  00464E  0A7A               	xorlw	122	; case 127
 26908  004650  A4D8               	btfss	status,2,c
 26909  004652  0012               	return	
 26910  004654  D7CB               	goto	l754
 26911  004656                     __end_of_MSDErrorHandler:
 26912                           	opt stack 0
 26913                           tosu	equ	0xFFF
 26914                           tosh	equ	0xFFE
 26915                           tosl	equ	0xFFD
 26916                           pclath	equ	0xFFA
 26917                           tblptru	equ	0xFF8
 26918                           tblptrh	equ	0xFF7
 26919                           tblptrl	equ	0xFF6
 26920                           tablat	equ	0xFF5
 26921                           prodh	equ	0xFF4
 26922                           prodl	equ	0xFF3
 26923                           intcon	equ	0xFF2
 26924                           intcon2	equ	0xFF1
 26925                           intcon3	equ	0xFF0
 26926                           indf0	equ	0xFEF
 26927                           postinc0	equ	0xFEE
 26928                           fsr0h	equ	0xFEA
 26929                           fsr0l	equ	0xFE9
 26930                           wreg	equ	0xFE8
 26931                           indf1	equ	0xFE7
 26932                           postdec1	equ	0xFE5
 26933                           plusw1	equ	0xFE3
 26934                           fsr1h	equ	0xFE2
 26935                           fsr1l	equ	0xFE1
 26936                           indf2	equ	0xFDF
 26937                           postinc2	equ	0xFDE
 26938                           postdec2	equ	0xFDD
 26939                           plusw2	equ	0xFDB
 26940                           fsr2h	equ	0xFDA
 26941                           fsr2l	equ	0xFD9
 26942                           status	equ	0xFD8
 26943                           
 26944 ;; *************** function _USBStallEndpoint *****************
 26945 ;; Defined at:
 26946 ;;		line 1073 in file "usb_device.c"
 26947 ;; Parameters:    Size  Location     Type
 26948 ;;  ep              1    wreg     unsigned char 
 26949 ;;  dir             1    0[COMRAM] unsigned char 
 26950 ;; Auto vars:     Size  Location     Type
 26951 ;;  ep              1    5[COMRAM] unsigned char 
 26952 ;;  p               2    6[COMRAM] PTR struct __BDT
 26953 ;;		 -> BDT(48), 
 26954 ;; Return value:  Size  Location     Type
 26955 ;;                  1    wreg      void 
 26956 ;; Registers used:
 26957 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 26958 ;; Tracked objects:
 26959 ;;		On entry : 0/0
 26960 ;;		On exit  : 0/0
 26961 ;;		Unchanged: 0/0
 26962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 26963 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26964 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26965 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26966 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 26967 ;;Total ram usage:        8 bytes
 26968 ;; Hardware stack levels used:    1
 26969 ;; This function calls:
 26970 ;;		Nothing
 26971 ;; This function is called by:
 26972 ;;		_MSDTasks
 26973 ;;		_MSDReadHandler
 26974 ;;		_MSDWriteHandler
 26975 ;;		_MSDErrorHandler
 26976 ;;		_MSDTransferTerminated
 26977 ;; This function uses a non-reentrant model
 26978 ;;
 26979                           
 26980                           	psect	text118
 26981  00423C                     __ptext118:
 26982                           	opt stack 0
 26983  00423C                     _USBStallEndpoint:
 26984                           	opt stack 27
 26985                           
 26986                           ;incstack = 0
 26987                           ;USBStallEndpoint@ep stored from wreg
 26988  00423C  6E06               	movwf	USBStallEndpoint@ep,c
 26989                           
 26990                           ;usb_device.c: 1075: BDT_ENTRY *p;;usb_device.c: 1077: if(ep == 0)
 26991  00423E  5006               	movf	USBStallEndpoint@ep,w,c
 26992  004240  A4D8               	btfss	status,2,c
 26993  004242  D02C               	goto	l191
 26994                           
 26995                           ;usb_device.c: 1078: {;usb_device.c: 1082: pBDTEntryEP0OutNext->CNT = 8;
 26996  004244  0100               	movlb	0	; () banked
 26997  004246  EE20 F001          	lfsr	2,1
 26998  00424A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 26999  00424C  26D9               	addwf	fsr2l,f,c
 27000  00424E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 27001  004250  22DA               	addwfc	fsr2h,f,c
 27002  004252  0E08               	movlw	8
 27003  004254  6EDF               	movwf	indf2,c
 27004                           
 27005                           ;usb_device.c: 1083: pBDTEntryEP0OutNext->ADR = ((uint16_t)(&SetupPkt));
 27006  004256  EE20 F002          	lfsr	2,2
 27007  00425A  5190               	movf	_pBDTEntryEP0OutNext& (0+255),w,b
 27008  00425C  26D9               	addwf	fsr2l,f,c
 27009  00425E  5191               	movf	(_pBDTEntryEP0OutNext+1)& (0+255),w,b
 27010  004260  22DA               	addwfc	fsr2h,f,c
 27011  004262  0E30               	movlw	48
 27012  004264  6EDE               	movwf	postinc2,c
 27013  004266  0E0D               	movlw	13
 27014  004268  6EDD               	movwf	postdec2,c
 27015                           
 27016                           ; BSR set to: 0
 27017                           ;usb_device.c: 1084: pBDTEntryEP0OutNext->STAT.Val = 0x00|(0x08 & 0x08)|0x04;
 27018  00426A  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27019  00426E  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27020  004272  0E0C               	movlw	12
 27021  004274  6EDF               	movwf	indf2,c
 27022                           
 27023                           ; BSR set to: 0
 27024                           ;usb_device.c: 1085: pBDTEntryEP0OutNext->STAT.Val |= 0x80;
 27025  004276  C090  FFD9         	movff	_pBDTEntryEP0OutNext,fsr2l
 27026  00427A  C091  FFDA         	movff	_pBDTEntryEP0OutNext+1,fsr2h
 27027  00427E  0E00               	movlw	0
 27028  004280  8EDB               	bsf	plusw2,7,c
 27029                           
 27030                           ;usb_device.c: 1086: pBDTEntryIn[0]->STAT.Val = 0x04;
 27031  004282  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27032  004286  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27033  00428A  0E04               	movlw	4
 27034  00428C  6EDF               	movwf	indf2,c
 27035                           
 27036                           ; BSR set to: 0
 27037                           ;usb_device.c: 1087: pBDTEntryIn[0]->STAT.Val |= 0x80;
 27038  00428E  C06C  FFD9         	movff	_pBDTEntryIn,fsr2l
 27039  004292  C06D  FFDA         	movff	_pBDTEntryIn+1,fsr2h
 27040  004296  0E00               	movlw	0
 27041  004298  8EDB               	bsf	plusw2,7,c
 27042                           
 27043                           ;usb_device.c: 1089: }
 27044  00429A  0012               	return	
 27045  00429C                     l191:
 27046                           
 27047                           ;usb_device.c: 1090: else;usb_device.c: 1091: {;usb_device.c: 1092: p = (BDT_ENTRY*)(&BD
      +                          T[(4*ep+2*dir+0)]);
 27048                           
 27049                           ; BSR set to: 0
 27050  00429C  5001               	movf	USBStallEndpoint@dir,w,c
 27051  00429E  6E02               	movwf	??_USBStallEndpoint& (0+255),c
 27052  0042A0  6A03               	clrf	(??_USBStallEndpoint+1)& (0+255),c
 27053  0042A2  90D8               	bcf	status,0,c
 27054  0042A4  3602               	rlcf	??_USBStallEndpoint,f,c
 27055  0042A6  3603               	rlcf	??_USBStallEndpoint+1,f,c
 27056  0042A8  5006               	movf	USBStallEndpoint@ep,w,c
 27057  0042AA  6E04               	movwf	(??_USBStallEndpoint+2)& (0+255),c
 27058  0042AC  6A05               	clrf	(??_USBStallEndpoint+3)& (0+255),c
 27059  0042AE  90D8               	bcf	status,0,c
 27060  0042B0  3604               	rlcf	??_USBStallEndpoint+2,f,c
 27061  0042B2  3605               	rlcf	??_USBStallEndpoint+3,f,c
 27062  0042B4  90D8               	bcf	status,0,c
 27063  0042B6  3604               	rlcf	??_USBStallEndpoint+2,f,c
 27064  0042B8  3605               	rlcf	??_USBStallEndpoint+3,f,c
 27065  0042BA  5002               	movf	??_USBStallEndpoint,w,c
 27066  0042BC  2604               	addwf	??_USBStallEndpoint+2,f,c
 27067  0042BE  5003               	movf	??_USBStallEndpoint+1,w,c
 27068  0042C0  2205               	addwfc	??_USBStallEndpoint+3,f,c
 27069  0042C2  90D8               	bcf	status,0,c
 27070  0042C4  3604               	rlcf	??_USBStallEndpoint+2,f,c
 27071  0042C6  3605               	rlcf	??_USBStallEndpoint+3,f,c
 27072  0042C8  90D8               	bcf	status,0,c
 27073  0042CA  3604               	rlcf	??_USBStallEndpoint+2,f,c
 27074  0042CC  3605               	rlcf	??_USBStallEndpoint+3,f,c
 27075  0042CE  0E00               	movlw	0
 27076  0042D0  2404               	addwf	??_USBStallEndpoint+2,w,c
 27077  0042D2  6E07               	movwf	USBStallEndpoint@p,c
 27078  0042D4  0E0D               	movlw	13
 27079  0042D6  2005               	addwfc	??_USBStallEndpoint+3,w,c
 27080  0042D8  6E08               	movwf	USBStallEndpoint@p+1,c
 27081                           
 27082                           ;usb_device.c: 1093: p->STAT.Val |= 0x04;
 27083  0042DA  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27084  0042DE  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27085  0042E2  0E00               	movlw	0
 27086  0042E4  84DB               	bsf	plusw2,2,c
 27087                           
 27088                           ;usb_device.c: 1094: p->STAT.Val |= 0x80;
 27089  0042E6  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27090  0042EA  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27091  0042EE  0E00               	movlw	0
 27092  0042F0  8EDB               	bsf	plusw2,7,c
 27093                           
 27094                           ;usb_device.c: 1099: p = (BDT_ENTRY*)(&BDT[(4*ep+2*dir+1)]);
 27095  0042F2  5006               	movf	USBStallEndpoint@ep,w,c
 27096  0042F4  0D04               	mullw	4
 27097  0042F6  CFF3 F002          	movff	prodl,??_USBStallEndpoint
 27098  0042FA  CFF4 F003          	movff	prodh,??_USBStallEndpoint+1
 27099  0042FE  5001               	movf	USBStallEndpoint@dir,w,c
 27100  004300  0D02               	mullw	2
 27101  004302  50F3               	movf	prodl,w,c
 27102  004304  2602               	addwf	??_USBStallEndpoint,f,c
 27103  004306  50F4               	movf	prodh,w,c
 27104  004308  2203               	addwfc	??_USBStallEndpoint+1,f,c
 27105  00430A  90D8               	bcf	status,0,c
 27106  00430C  3602               	rlcf	??_USBStallEndpoint,f,c
 27107  00430E  3603               	rlcf	??_USBStallEndpoint+1,f,c
 27108  004310  90D8               	bcf	status,0,c
 27109  004312  3602               	rlcf	??_USBStallEndpoint,f,c
 27110  004314  3603               	rlcf	??_USBStallEndpoint+1,f,c
 27111  004316  0E04               	movlw	4
 27112  004318  2602               	addwf	??_USBStallEndpoint,f,c
 27113  00431A  0E00               	movlw	0
 27114  00431C  2203               	addwfc	??_USBStallEndpoint+1,f,c
 27115  00431E  0E00               	movlw	0
 27116  004320  2402               	addwf	??_USBStallEndpoint,w,c
 27117  004322  6E07               	movwf	USBStallEndpoint@p,c
 27118  004324  0E0D               	movlw	13
 27119  004326  2003               	addwfc	??_USBStallEndpoint+1,w,c
 27120  004328  6E08               	movwf	USBStallEndpoint@p+1,c
 27121                           
 27122                           ;usb_device.c: 1100: p->STAT.Val |= 0x04;
 27123  00432A  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27124  00432E  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27125  004332  0E00               	movlw	0
 27126  004334  84DB               	bsf	plusw2,2,c
 27127                           
 27128                           ;usb_device.c: 1101: p->STAT.Val |= 0x80;
 27129  004336  C007  FFD9         	movff	USBStallEndpoint@p,fsr2l
 27130  00433A  C008  FFDA         	movff	USBStallEndpoint@p+1,fsr2h
 27131  00433E  0E00               	movlw	0
 27132  004340  8EDB               	bsf	plusw2,7,c
 27133  004342  0012               	return	
 27134  004344                     __end_of_USBStallEndpoint:
 27135                           	opt stack 0
 27136                           tosu	equ	0xFFF
 27137                           tosh	equ	0xFFE
 27138                           tosl	equ	0xFFD
 27139                           pclath	equ	0xFFA
 27140                           tblptru	equ	0xFF8
 27141                           tblptrh	equ	0xFF7
 27142                           tblptrl	equ	0xFF6
 27143                           tablat	equ	0xFF5
 27144                           prodh	equ	0xFF4
 27145                           prodl	equ	0xFF3
 27146                           intcon	equ	0xFF2
 27147                           intcon2	equ	0xFF1
 27148                           intcon3	equ	0xFF0
 27149                           indf0	equ	0xFEF
 27150                           postinc0	equ	0xFEE
 27151                           fsr0h	equ	0xFEA
 27152                           fsr0l	equ	0xFE9
 27153                           wreg	equ	0xFE8
 27154                           indf1	equ	0xFE7
 27155                           postdec1	equ	0xFE5
 27156                           plusw1	equ	0xFE3
 27157                           fsr1h	equ	0xFE2
 27158                           fsr1l	equ	0xFE1
 27159                           indf2	equ	0xFDF
 27160                           postinc2	equ	0xFDE
 27161                           postdec2	equ	0xFDD
 27162                           plusw2	equ	0xFDB
 27163                           fsr2h	equ	0xFDA
 27164                           fsr2l	equ	0xFD9
 27165                           status	equ	0xFD8
 27166                           
 27167 ;; *************** function _ResetSenseData *****************
 27168 ;; Defined at:
 27169 ;;		line 1373 in file "usb_device_msd.c"
 27170 ;; Parameters:    Size  Location     Type
 27171 ;;		None
 27172 ;; Auto vars:     Size  Location     Type
 27173 ;;		None
 27174 ;; Return value:  Size  Location     Type
 27175 ;;                  1    wreg      void 
 27176 ;; Registers used:
 27177 ;;		wreg, status,2
 27178 ;; Tracked objects:
 27179 ;;		On entry : 0/0
 27180 ;;		On exit  : 0/0
 27181 ;;		Unchanged: 0/0
 27182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27183 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27186 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27187 ;;Total ram usage:        0 bytes
 27188 ;; Hardware stack levels used:    1
 27189 ;; This function calls:
 27190 ;;		Nothing
 27191 ;; This function is called by:
 27192 ;;		_USBMSDInit
 27193 ;;		_MSDProcessCommandMediaAbsent
 27194 ;;		_MSDProcessCommandMediaPresent
 27195 ;;		_MSDErrorHandler
 27196 ;; This function uses a non-reentrant model
 27197 ;;
 27198                           
 27199                           	psect	text119
 27200  006E44                     __ptext119:
 27201                           	opt stack 0
 27202  006E44                     _ResetSenseData:
 27203                           	opt stack 26
 27204                           
 27205                           ;usb_device_msd.c: 1375: gblSenseData[0].ResponseCode=0x70;
 27206                           
 27207                           ;incstack = 0
 27208  006E44  0101               	movlb	1	; () banked
 27209  006E46  911F               	bcf	_gblSenseData& (0+255),0,b
 27210  006E48  931F               	bcf	_gblSenseData& (0+255),1,b
 27211  006E4A  951F               	bcf	_gblSenseData& (0+255),2,b
 27212  006E4C  971F               	bcf	_gblSenseData& (0+255),3,b
 27213  006E4E  891F               	bsf	_gblSenseData& (0+255),4,b
 27214  006E50  8B1F               	bsf	_gblSenseData& (0+255),5,b
 27215  006E52  8D1F               	bsf	_gblSenseData& (0+255),6,b
 27216                           
 27217                           ;usb_device_msd.c: 1376: gblSenseData[0].VALID=0;
 27218  006E54  9F1F               	bcf	_gblSenseData& (0+255),7,b
 27219                           
 27220                           ; BSR set to: 1
 27221                           ;usb_device_msd.c: 1377: gblSenseData[0].Obsolete=0x0;
 27222  006E56  0E00               	movlw	0
 27223  006E58  6F20               	movwf	(_gblSenseData+1)& (0+255),b
 27224                           
 27225                           ; BSR set to: 1
 27226                           ;usb_device_msd.c: 1378: gblSenseData[0].SenseKey=0x0;
 27227  006E5A  9121               	bcf	(_gblSenseData+2)& (0+255),0,b
 27228  006E5C  9321               	bcf	(_gblSenseData+2)& (0+255),1,b
 27229  006E5E  9521               	bcf	(_gblSenseData+2)& (0+255),2,b
 27230  006E60  9721               	bcf	(_gblSenseData+2)& (0+255),3,b
 27231                           
 27232                           ; BSR set to: 1
 27233                           ;usb_device_msd.c: 1380: gblSenseData[0].ILI=0;
 27234  006E62  9B21               	bcf	(_gblSenseData+2)& (0+255),5,b
 27235                           
 27236                           ; BSR set to: 1
 27237                           ;usb_device_msd.c: 1381: gblSenseData[0].EOM=0;
 27238  006E64  9D21               	bcf	(_gblSenseData+2)& (0+255),6,b
 27239                           
 27240                           ; BSR set to: 1
 27241                           ;usb_device_msd.c: 1382: gblSenseData[0].FILEMARK=0;
 27242  006E66  9F21               	bcf	(_gblSenseData+2)& (0+255),7,b
 27243                           
 27244                           ;usb_device_msd.c: 1383: gblSenseData[0].InformationB0=0x00;
 27245  006E68  0E00               	movlw	0
 27246  006E6A  6F22               	movwf	(_gblSenseData+3)& (0+255),b
 27247                           
 27248                           ;usb_device_msd.c: 1384: gblSenseData[0].InformationB1=0x00;
 27249  006E6C  0E00               	movlw	0
 27250  006E6E  6F23               	movwf	(_gblSenseData+4)& (0+255),b
 27251                           
 27252                           ;usb_device_msd.c: 1385: gblSenseData[0].InformationB2=0x00;
 27253  006E70  0E00               	movlw	0
 27254  006E72  6F24               	movwf	(_gblSenseData+5)& (0+255),b
 27255                           
 27256                           ;usb_device_msd.c: 1386: gblSenseData[0].InformationB3=0x00;
 27257  006E74  0E00               	movlw	0
 27258  006E76  6F25               	movwf	(_gblSenseData+6)& (0+255),b
 27259                           
 27260                           ;usb_device_msd.c: 1387: gblSenseData[0].AddSenseLen=0x0a;
 27261  006E78  0E0A               	movlw	10
 27262  006E7A  6F26               	movwf	(_gblSenseData+7)& (0+255),b
 27263                           
 27264                           ;usb_device_msd.c: 1388: gblSenseData[0].CmdSpecificInfo.Val=0x0;
 27265  006E7C  0E00               	movlw	0
 27266  006E7E  6F27               	movwf	(_gblSenseData+8)& (0+255),b
 27267  006E80  0E00               	movlw	0
 27268  006E82  6F28               	movwf	(_gblSenseData+9)& (0+255),b
 27269  006E84  0E00               	movlw	0
 27270  006E86  6F29               	movwf	(_gblSenseData+10)& (0+255),b
 27271  006E88  0E00               	movlw	0
 27272  006E8A  6F2A               	movwf	(_gblSenseData+11)& (0+255),b
 27273                           
 27274                           ;usb_device_msd.c: 1389: gblSenseData[0].ASC=0x0;
 27275  006E8C  0E00               	movlw	0
 27276  006E8E  6F2B               	movwf	(_gblSenseData+12)& (0+255),b
 27277                           
 27278                           ;usb_device_msd.c: 1390: gblSenseData[0].ASCQ=0x0;
 27279  006E90  0E00               	movlw	0
 27280  006E92  6F2C               	movwf	(_gblSenseData+13)& (0+255),b
 27281                           
 27282                           ;usb_device_msd.c: 1391: gblSenseData[0].FRUC=0x0;
 27283  006E94  0E00               	movlw	0
 27284  006E96  6F2D               	movwf	(_gblSenseData+14)& (0+255),b
 27285                           
 27286                           ;usb_device_msd.c: 1392: gblSenseData[0].SenseKeySpecific[0]=0x0;
 27287  006E98  0E00               	movlw	0
 27288  006E9A  6F2E               	movwf	(_gblSenseData+15)& (0+255),b
 27289                           
 27290                           ;usb_device_msd.c: 1393: gblSenseData[0].SenseKeySpecific[1]=0x0;
 27291  006E9C  0E00               	movlw	0
 27292  006E9E  6F2F               	movwf	(_gblSenseData+16)& (0+255),b
 27293                           
 27294                           ;usb_device_msd.c: 1394: gblSenseData[0].SenseKeySpecific[2]=0x0;
 27295  006EA0  0E00               	movlw	0
 27296  006EA2  6F30               	movwf	(_gblSenseData+17)& (0+255),b
 27297                           
 27298                           ; BSR set to: 1
 27299  006EA4  0012               	return		;funcret
 27300  006EA6                     __end_of_ResetSenseData:
 27301                           	opt stack 0
 27302                           tosu	equ	0xFFF
 27303                           tosh	equ	0xFFE
 27304                           tosl	equ	0xFFD
 27305                           pclath	equ	0xFFA
 27306                           tblptru	equ	0xFF8
 27307                           tblptrh	equ	0xFF7
 27308                           tblptrl	equ	0xFF6
 27309                           tablat	equ	0xFF5
 27310                           prodh	equ	0xFF4
 27311                           prodl	equ	0xFF3
 27312                           intcon	equ	0xFF2
 27313                           intcon2	equ	0xFF1
 27314                           intcon3	equ	0xFF0
 27315                           indf0	equ	0xFEF
 27316                           postinc0	equ	0xFEE
 27317                           fsr0h	equ	0xFEA
 27318                           fsr0l	equ	0xFE9
 27319                           wreg	equ	0xFE8
 27320                           indf1	equ	0xFE7
 27321                           postdec1	equ	0xFE5
 27322                           plusw1	equ	0xFE3
 27323                           fsr1h	equ	0xFE2
 27324                           fsr1l	equ	0xFE1
 27325                           indf2	equ	0xFDF
 27326                           postinc2	equ	0xFDE
 27327                           postdec2	equ	0xFDD
 27328                           plusw2	equ	0xFDB
 27329                           fsr2h	equ	0xFDA
 27330                           fsr2l	equ	0xFD9
 27331                           status	equ	0xFD8
 27332                           
 27333 ;; *************** function _ExternalFlash_SectorRead *****************
 27334 ;; Defined at:
 27335 ;;		line 40 in file "external_flash.c"
 27336 ;; Parameters:    Size  Location     Type
 27337 ;;  config          2   43[COMRAM] PTR void 
 27338 ;;		 -> NULL(0), 
 27339 ;;  sector_addr     4   45[COMRAM] unsigned long 
 27340 ;;  buffer          2   49[COMRAM] PTR unsigned char 
 27341 ;;		 -> msd_buffer(512), 
 27342 ;; Auto vars:     Size  Location     Type
 27343 ;;  page            2   51[COMRAM] unsigned int 
 27344 ;; Return value:  Size  Location     Type
 27345 ;;                  1    wreg      unsigned char 
 27346 ;; Registers used:
 27347 ;;		wreg, status,2, status,0, cstack
 27348 ;; Tracked objects:
 27349 ;;		On entry : 0/0
 27350 ;;		On exit  : 0/0
 27351 ;;		Unchanged: 0/0
 27352 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27353 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27354 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27355 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27356 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27357 ;;Total ram usage:       10 bytes
 27358 ;; Hardware stack levels used:    1
 27359 ;; Hardware stack levels required when called:    5
 27360 ;; This function calls:
 27361 ;;		_flash_page_read
 27362 ;; This function is called by:
 27363 ;;		_MSDReadHandler
 27364 ;; This function uses a non-reentrant model
 27365 ;;
 27366                           
 27367                           	psect	text120
 27368  007A36                     __ptext120:
 27369                           	opt stack 0
 27370  007A36                     _ExternalFlash_SectorRead:
 27371                           	opt stack 20
 27372                           
 27373                           ;external_flash.c: 42: uint16_t page = (uint16_t) sector_addr;
 27374                           
 27375                           ; BSR set to: 1
 27376                           ;incstack = 0
 27377  007A36  C02E  F034         	movff	ExternalFlash_SectorRead@sector_addr,ExternalFlash_SectorRead@page
 27378  007A3A  C02F  F035         	movff	ExternalFlash_SectorRead@sector_addr+1,ExternalFlash_SectorRead@page+1
 27379                           
 27380                           ;external_flash.c: 45: if(sector_addr >= 8192)
 27381  007A3E  5031               	movf	ExternalFlash_SectorRead@sector_addr+3,w,c
 27382  007A40  1030               	iorwf	ExternalFlash_SectorRead@sector_addr+2,w,c
 27383  007A42  E104               	bnz	u6860
 27384  007A44  0E20               	movlw	32
 27385  007A46  5C2F               	subwf	ExternalFlash_SectorRead@sector_addr+1,w,c
 27386  007A48  A0D8               	btfss	status,0,c
 27387  007A4A  D002               	goto	l1851
 27388  007A4C                     u6860:
 27389                           
 27390                           ;external_flash.c: 46: {;external_flash.c: 47: return 0;
 27391  007A4C  0E00               	movlw	0
 27392  007A4E  0012               	return	
 27393  007A50                     l1851:
 27394                           
 27395                           ;external_flash.c: 48: };external_flash.c: 51: flash_page_read(page, buffer);
 27396  007A50  C034  F028         	movff	ExternalFlash_SectorRead@page,flash_page_read@page
 27397  007A54  C035  F029         	movff	ExternalFlash_SectorRead@page+1,flash_page_read@page+1
 27398  007A58  C032  F02A         	movff	ExternalFlash_SectorRead@buffer,flash_page_read@data
 27399  007A5C  C033  F02B         	movff	ExternalFlash_SectorRead@buffer+1,flash_page_read@data+1
 27400  007A60  EC34  F03D         	call	_flash_page_read	;wreg free
 27401                           
 27402                           ;external_flash.c: 53: return 1;
 27403  007A64  0E01               	movlw	1
 27404  007A66  0012               	return	
 27405  007A68                     __end_of_ExternalFlash_SectorRead:
 27406                           	opt stack 0
 27407                           tosu	equ	0xFFF
 27408                           tosh	equ	0xFFE
 27409                           tosl	equ	0xFFD
 27410                           pclath	equ	0xFFA
 27411                           tblptru	equ	0xFF8
 27412                           tblptrh	equ	0xFF7
 27413                           tblptrl	equ	0xFF6
 27414                           tablat	equ	0xFF5
 27415                           prodh	equ	0xFF4
 27416                           prodl	equ	0xFF3
 27417                           intcon	equ	0xFF2
 27418                           intcon2	equ	0xFF1
 27419                           intcon3	equ	0xFF0
 27420                           indf0	equ	0xFEF
 27421                           postinc0	equ	0xFEE
 27422                           fsr0h	equ	0xFEA
 27423                           fsr0l	equ	0xFE9
 27424                           wreg	equ	0xFE8
 27425                           indf1	equ	0xFE7
 27426                           postdec1	equ	0xFE5
 27427                           plusw1	equ	0xFE3
 27428                           fsr1h	equ	0xFE2
 27429                           fsr1l	equ	0xFE1
 27430                           indf2	equ	0xFDF
 27431                           postinc2	equ	0xFDE
 27432                           postdec2	equ	0xFDD
 27433                           plusw2	equ	0xFDB
 27434                           fsr2h	equ	0xFDA
 27435                           fsr2l	equ	0xFD9
 27436                           status	equ	0xFD8
 27437                           
 27438 ;; *************** function _flash_page_read *****************
 27439 ;; Defined at:
 27440 ;;		line 419 in file "flash.c"
 27441 ;; Parameters:    Size  Location     Type
 27442 ;;  page            2   39[COMRAM] unsigned int 
 27443 ;;  data            2   41[COMRAM] PTR unsigned char 
 27444 ;;		 -> buffer(512), msd_buffer(512), 
 27445 ;; Auto vars:     Size  Location     Type
 27446 ;;		None
 27447 ;; Return value:  Size  Location     Type
 27448 ;;                  1    wreg      void 
 27449 ;; Registers used:
 27450 ;;		wreg, status,2, status,0, cstack
 27451 ;; Tracked objects:
 27452 ;;		On entry : 0/0
 27453 ;;		On exit  : 0/0
 27454 ;;		Unchanged: 0/0
 27455 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27456 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27457 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27458 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27459 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27460 ;;Total ram usage:        4 bytes
 27461 ;; Hardware stack levels used:    1
 27462 ;; Hardware stack levels required when called:    4
 27463 ;; This function calls:
 27464 ;;		__flash_partial_read
 27465 ;;		_spi_set_configuration
 27466 ;; This function is called by:
 27467 ;;		_ExternalFlash_SectorRead
 27468 ;;		_fat_get_format_status
 27469 ;; This function uses a non-reentrant model
 27470 ;;
 27471                           
 27472                           	psect	text121
 27473  007A68                     __ptext121:
 27474                           	opt stack 0
 27475  007A68                     _flash_page_read:
 27476                           	opt stack 23
 27477                           
 27478                           ;flash.c: 422: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 27479                           
 27480                           ;incstack = 0
 27481  007A68  0E00               	movlw	0
 27482  007A6A  EC2C  F024         	call	_spi_set_configuration
 27483                           
 27484                           ;flash.c: 425: _flash_partial_read(page, 0, 512, data);
 27485  007A6E  C028  F014         	movff	flash_page_read@page,__flash_partial_read@page
 27486  007A72  C029  F015         	movff	flash_page_read@page+1,__flash_partial_read@page+1
 27487  007A76  0E00               	movlw	0
 27488  007A78  6E17               	movwf	__flash_partial_read@start+1,c
 27489  007A7A  0E00               	movlw	0
 27490  007A7C  6E16               	movwf	__flash_partial_read@start,c
 27491  007A7E  0E02               	movlw	2
 27492  007A80  6E19               	movwf	__flash_partial_read@length+1,c
 27493  007A82  0E00               	movlw	0
 27494  007A84  6E18               	movwf	__flash_partial_read@length,c
 27495  007A86  C02A  F01A         	movff	flash_page_read@data,__flash_partial_read@data
 27496  007A8A  C02B  F01B         	movff	flash_page_read@data+1,__flash_partial_read@data+1
 27497  007A8E  EC7F  F033         	call	__flash_partial_read	;wreg free
 27498                           
 27499                           ;flash.c: 428: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 27500  007A92  0E01               	movlw	1
 27501  007A94  EC2C  F024         	call	_spi_set_configuration
 27502  007A98  0012               	return		;funcret
 27503  007A9A                     __end_of_flash_page_read:
 27504                           	opt stack 0
 27505                           tosu	equ	0xFFF
 27506                           tosh	equ	0xFFE
 27507                           tosl	equ	0xFFD
 27508                           pclath	equ	0xFFA
 27509                           tblptru	equ	0xFF8
 27510                           tblptrh	equ	0xFF7
 27511                           tblptrl	equ	0xFF6
 27512                           tablat	equ	0xFF5
 27513                           prodh	equ	0xFF4
 27514                           prodl	equ	0xFF3
 27515                           intcon	equ	0xFF2
 27516                           intcon2	equ	0xFF1
 27517                           intcon3	equ	0xFF0
 27518                           indf0	equ	0xFEF
 27519                           postinc0	equ	0xFEE
 27520                           fsr0h	equ	0xFEA
 27521                           fsr0l	equ	0xFE9
 27522                           wreg	equ	0xFE8
 27523                           indf1	equ	0xFE7
 27524                           postdec1	equ	0xFE5
 27525                           plusw1	equ	0xFE3
 27526                           fsr1h	equ	0xFE2
 27527                           fsr1l	equ	0xFE1
 27528                           indf2	equ	0xFDF
 27529                           postinc2	equ	0xFDE
 27530                           postdec2	equ	0xFDD
 27531                           plusw2	equ	0xFDB
 27532                           fsr2h	equ	0xFDA
 27533                           fsr2l	equ	0xFD9
 27534                           status	equ	0xFD8
 27535                           
 27536 ;; *************** function _MSDComputeDeviceInAndResidue *****************
 27537 ;; Defined at:
 27538 ;;		line 993 in file "usb_device_msd.c"
 27539 ;; Parameters:    Size  Location     Type
 27540 ;;  DiExpected      2    0[COMRAM] unsigned int 
 27541 ;; Auto vars:     Size  Location     Type
 27542 ;;		None
 27543 ;; Return value:  Size  Location     Type
 27544 ;;                  1    wreg      void 
 27545 ;; Registers used:
 27546 ;;		wreg, status,2, status,0
 27547 ;; Tracked objects:
 27548 ;;		On entry : 0/0
 27549 ;;		On exit  : 0/0
 27550 ;;		Unchanged: 0/0
 27551 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27552 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27553 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27554 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27555 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27556 ;;Total ram usage:        6 bytes
 27557 ;; Hardware stack levels used:    1
 27558 ;; This function calls:
 27559 ;;		Nothing
 27560 ;; This function is called by:
 27561 ;;		_MSDProcessCommandMediaPresent
 27562 ;; This function uses a non-reentrant model
 27563 ;;
 27564                           
 27565                           	psect	text122
 27566  005EE4                     __ptext122:
 27567                           	opt stack 0
 27568  005EE4                     _MSDComputeDeviceInAndResidue:
 27569                           	opt stack 26
 27570                           
 27571                           ;usb_device_msd.c: 996: if(gblCBW.dCBWDataTransferLength < DiExpected)
 27572                           
 27573                           ;incstack = 0
 27574  005EE4  5001               	movf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27575  005EE6  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27576  005EE8  5002               	movf	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27577  005EEA  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27578  005EEC  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27579  005EEE  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27580  005EF0  5003               	movf	??_MSDComputeDeviceInAndResidue,w,c
 27581  005EF2  0101               	movlb	1	; () banked
 27582  005EF4  5D08               	subwf	(_gblCBW+8)& (0+255),w,b
 27583  005EF6  5004               	movf	??_MSDComputeDeviceInAndResidue+1,w,c
 27584  005EF8  5909               	subwfb	(_gblCBW+9)& (0+255),w,b
 27585  005EFA  5005               	movf	??_MSDComputeDeviceInAndResidue+2,w,c
 27586  005EFC  590A               	subwfb	(_gblCBW+10)& (0+255),w,b
 27587  005EFE  5006               	movf	??_MSDComputeDeviceInAndResidue+3,w,c
 27588  005F00  590B               	subwfb	(_gblCBW+11)& (0+255),w,b
 27589  005F02  B0D8               	btfsc	status,0,c
 27590  005F04  D00E               	goto	l659
 27591                           
 27592                           ; BSR set to: 1
 27593                           ;usb_device_msd.c: 997: {;usb_device_msd.c: 1000: msd_csw.dCSWDataResidue = 0;
 27594  005F06  0E00               	movlw	0
 27595  005F08  010D               	movlb	13	; () banked
 27596  005F0A  6F88               	movwf	136,b	;volatile
 27597  005F0C  0E00               	movlw	0
 27598  005F0E  6F89               	movwf	137,b	;volatile
 27599  005F10  0E00               	movlw	0
 27600  005F12  6F8A               	movwf	138,b	;volatile
 27601  005F14  0E00               	movlw	0
 27602  005F16  6F8B               	movwf	139,b	;volatile
 27603                           
 27604                           ; BSR set to: 13
 27605                           ;usb_device_msd.c: 1001: TransferLength.Val = gblCBW.dCBWDataTransferLength;
 27606  005F18  C108  F086         	movff	_gblCBW+8,_TransferLength
 27607  005F1C  C109  F087         	movff	_gblCBW+9,_TransferLength+1
 27608                           
 27609                           ;usb_device_msd.c: 1002: }
 27610  005F20  0012               	return	
 27611  005F22                     l659:
 27612                           
 27613                           ;usb_device_msd.c: 1003: else;usb_device_msd.c: 1004: {;usb_device_msd.c: 1006: if(DiExp
      +                          ected < TransferLength.Val)
 27614                           
 27615                           ; BSR set to: 13
 27616  005F22  0100               	movlb	0	; () banked
 27617  005F24  5186               	movf	_TransferLength& (0+255),w,b
 27618  005F26  5C01               	subwf	MSDComputeDeviceInAndResidue@DiExpected,w,c
 27619  005F28  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27620  005F2A  5802               	subwfb	MSDComputeDeviceInAndResidue@DiExpected+1,w,c
 27621  005F2C  B0D8               	btfsc	status,0,c
 27622  005F2E  D004               	goto	l661
 27623                           
 27624                           ; BSR set to: 0
 27625                           ;usb_device_msd.c: 1007: {;usb_device_msd.c: 1008: TransferLength.Val = DiExpected;
 27626  005F30  C001  F086         	movff	MSDComputeDeviceInAndResidue@DiExpected,_TransferLength
 27627  005F34  C002  F087         	movff	MSDComputeDeviceInAndResidue@DiExpected+1,_TransferLength+1
 27628  005F38                     l661:
 27629                           
 27630                           ; BSR set to: 0
 27631                           ;usb_device_msd.c: 1009: };usb_device_msd.c: 1010: msd_csw.dCSWDataResidue = gblCBW.dCBW
      +                          DataTransferLength - TransferLength.Val;
 27632                           
 27633                           ; BSR set to: 0
 27634  005F38  5186               	movf	_TransferLength& (0+255),w,b
 27635  005F3A  6E03               	movwf	??_MSDComputeDeviceInAndResidue& (0+255),c
 27636  005F3C  5187               	movf	(_TransferLength+1)& (0+255),w,b
 27637  005F3E  6E04               	movwf	(??_MSDComputeDeviceInAndResidue+1)& (0+255),c
 27638  005F40  6A05               	clrf	(??_MSDComputeDeviceInAndResidue+2)& (0+255),c
 27639  005F42  6A06               	clrf	(??_MSDComputeDeviceInAndResidue+3)& (0+255),c
 27640  005F44  1E03               	comf	??_MSDComputeDeviceInAndResidue,f,c
 27641  005F46  1E04               	comf	??_MSDComputeDeviceInAndResidue+1,f,c
 27642  005F48  1E05               	comf	??_MSDComputeDeviceInAndResidue+2,f,c
 27643  005F4A  1E06               	comf	??_MSDComputeDeviceInAndResidue+3,f,c
 27644  005F4C  2A03               	incf	??_MSDComputeDeviceInAndResidue,f,c
 27645  005F4E  0E00               	movlw	0
 27646  005F50  2204               	addwfc	??_MSDComputeDeviceInAndResidue+1,f,c
 27647  005F52  2205               	addwfc	??_MSDComputeDeviceInAndResidue+2,f,c
 27648  005F54  2206               	addwfc	??_MSDComputeDeviceInAndResidue+3,f,c
 27649  005F56  0101               	movlb	1	; () banked
 27650  005F58  5108               	movf	(_gblCBW+8)& (0+255),w,b
 27651  005F5A  2403               	addwf	??_MSDComputeDeviceInAndResidue,w,c
 27652  005F5C  010D               	movlb	13	; () banked
 27653  005F5E  6F88               	movwf	136,b	;volatile
 27654  005F60  0101               	movlb	1	; () banked
 27655  005F62  5109               	movf	(_gblCBW+9)& (0+255),w,b
 27656  005F64  2004               	addwfc	??_MSDComputeDeviceInAndResidue+1,w,c
 27657  005F66  010D               	movlb	13	; () banked
 27658  005F68  6F89               	movwf	137,b	;volatile
 27659  005F6A  0101               	movlb	1	; () banked
 27660  005F6C  510A               	movf	(_gblCBW+10)& (0+255),w,b
 27661  005F6E  2005               	addwfc	??_MSDComputeDeviceInAndResidue+2,w,c
 27662  005F70  010D               	movlb	13	; () banked
 27663  005F72  6F8A               	movwf	138,b	;volatile
 27664  005F74  0101               	movlb	1	; () banked
 27665  005F76  510B               	movf	(_gblCBW+11)& (0+255),w,b
 27666  005F78  2006               	addwfc	??_MSDComputeDeviceInAndResidue+3,w,c
 27667  005F7A  010D               	movlb	13	; () banked
 27668  005F7C  6F8B               	movwf	139,b	;volatile
 27669  005F7E  0012               	return	
 27670  005F80                     __end_of_MSDComputeDeviceInAndResidue:
 27671                           	opt stack 0
 27672                           tosu	equ	0xFFF
 27673                           tosh	equ	0xFFE
 27674                           tosl	equ	0xFFD
 27675                           pclath	equ	0xFFA
 27676                           tblptru	equ	0xFF8
 27677                           tblptrh	equ	0xFF7
 27678                           tblptrl	equ	0xFF6
 27679                           tablat	equ	0xFF5
 27680                           prodh	equ	0xFF4
 27681                           prodl	equ	0xFF3
 27682                           intcon	equ	0xFF2
 27683                           intcon2	equ	0xFF1
 27684                           intcon3	equ	0xFF0
 27685                           indf0	equ	0xFEF
 27686                           postinc0	equ	0xFEE
 27687                           fsr0h	equ	0xFEA
 27688                           fsr0l	equ	0xFE9
 27689                           wreg	equ	0xFE8
 27690                           indf1	equ	0xFE7
 27691                           postdec1	equ	0xFE5
 27692                           plusw1	equ	0xFE3
 27693                           fsr1h	equ	0xFE2
 27694                           fsr1l	equ	0xFE1
 27695                           indf2	equ	0xFDF
 27696                           postinc2	equ	0xFDE
 27697                           postdec2	equ	0xFDD
 27698                           plusw2	equ	0xFDB
 27699                           fsr2h	equ	0xFDA
 27700                           fsr2l	equ	0xFD9
 27701                           status	equ	0xFD8
 27702                           
 27703 ;; *************** function _ExternalFlash_SectorSizeRead *****************
 27704 ;; Defined at:
 27705 ;;		line 18 in file "external_flash.c"
 27706 ;; Parameters:    Size  Location     Type
 27707 ;;  config          2    0[COMRAM] PTR void 
 27708 ;;		 -> NULL(0), 
 27709 ;; Auto vars:     Size  Location     Type
 27710 ;;		None
 27711 ;; Return value:  Size  Location     Type
 27712 ;;                  2    0[COMRAM] unsigned int 
 27713 ;; Registers used:
 27714 ;;		wreg, status,2
 27715 ;; Tracked objects:
 27716 ;;		On entry : 0/0
 27717 ;;		On exit  : 0/0
 27718 ;;		Unchanged: 0/0
 27719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27720 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27721 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27722 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27723 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27724 ;;Total ram usage:        2 bytes
 27725 ;; Hardware stack levels used:    1
 27726 ;; This function calls:
 27727 ;;		Nothing
 27728 ;; This function is called by:
 27729 ;;		_MSDProcessCommandMediaPresent
 27730 ;; This function uses a non-reentrant model
 27731 ;;
 27732                           
 27733                           	psect	text123
 27734  007FB6                     __ptext123:
 27735                           	opt stack 0
 27736  007FB6                     _ExternalFlash_SectorSizeRead:
 27737                           	opt stack 26
 27738                           
 27739                           ;external_flash.c: 20: return 512;
 27740                           
 27741                           ; BSR set to: 13
 27742                           ;incstack = 0
 27743  007FB6  0E02               	movlw	2
 27744  007FB8  6E02               	movwf	?_ExternalFlash_SectorSizeRead+1,c
 27745  007FBA  0E00               	movlw	0
 27746  007FBC  6E01               	movwf	?_ExternalFlash_SectorSizeRead,c
 27747  007FBE  0012               	return	
 27748  007FC0                     __end_of_ExternalFlash_SectorSizeRead:
 27749                           	opt stack 0
 27750                           tosu	equ	0xFFF
 27751                           tosh	equ	0xFFE
 27752                           tosl	equ	0xFFD
 27753                           pclath	equ	0xFFA
 27754                           tblptru	equ	0xFF8
 27755                           tblptrh	equ	0xFF7
 27756                           tblptrl	equ	0xFF6
 27757                           tablat	equ	0xFF5
 27758                           prodh	equ	0xFF4
 27759                           prodl	equ	0xFF3
 27760                           intcon	equ	0xFF2
 27761                           intcon2	equ	0xFF1
 27762                           intcon3	equ	0xFF0
 27763                           indf0	equ	0xFEF
 27764                           postinc0	equ	0xFEE
 27765                           fsr0h	equ	0xFEA
 27766                           fsr0l	equ	0xFE9
 27767                           wreg	equ	0xFE8
 27768                           indf1	equ	0xFE7
 27769                           postdec1	equ	0xFE5
 27770                           plusw1	equ	0xFE3
 27771                           fsr1h	equ	0xFE2
 27772                           fsr1l	equ	0xFE1
 27773                           indf2	equ	0xFDF
 27774                           postinc2	equ	0xFDE
 27775                           postdec2	equ	0xFDD
 27776                           plusw2	equ	0xFDB
 27777                           fsr2h	equ	0xFDA
 27778                           fsr2l	equ	0xFD9
 27779                           status	equ	0xFD8
 27780                           
 27781 ;; *************** function _ExternalFlash_CapacityRead *****************
 27782 ;; Defined at:
 27783 ;;		line 23 in file "external_flash.c"
 27784 ;; Parameters:    Size  Location     Type
 27785 ;;  config          2    0[COMRAM] PTR void 
 27786 ;;		 -> NULL(0), 
 27787 ;; Auto vars:     Size  Location     Type
 27788 ;;		None
 27789 ;; Return value:  Size  Location     Type
 27790 ;;                  4    0[COMRAM] unsigned long 
 27791 ;; Registers used:
 27792 ;;		wreg, status,2
 27793 ;; Tracked objects:
 27794 ;;		On entry : 0/0
 27795 ;;		On exit  : 0/0
 27796 ;;		Unchanged: 0/0
 27797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27798 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27800 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27801 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27802 ;;Total ram usage:        4 bytes
 27803 ;; Hardware stack levels used:    1
 27804 ;; This function calls:
 27805 ;;		Nothing
 27806 ;; This function is called by:
 27807 ;;		_MSDProcessCommandMediaPresent
 27808 ;; This function uses a non-reentrant model
 27809 ;;
 27810                           
 27811                           	psect	text124
 27812  007F0C                     __ptext124:
 27813                           	opt stack 0
 27814  007F0C                     _ExternalFlash_CapacityRead:
 27815                           	opt stack 26
 27816                           
 27817                           ;external_flash.c: 26: return ((uint32_t) 8192 - 1);
 27818                           
 27819                           ;incstack = 0
 27820  007F0C  0EFF               	movlw	255
 27821  007F0E  6E01               	movwf	?_ExternalFlash_CapacityRead,c
 27822  007F10  0E1F               	movlw	31
 27823  007F12  6E02               	movwf	?_ExternalFlash_CapacityRead+1,c
 27824  007F14  0E00               	movlw	0
 27825  007F16  6E03               	movwf	?_ExternalFlash_CapacityRead+2,c
 27826  007F18  0E00               	movlw	0
 27827  007F1A  6E04               	movwf	?_ExternalFlash_CapacityRead+3,c
 27828  007F1C  0012               	return	
 27829  007F1E                     __end_of_ExternalFlash_CapacityRead:
 27830                           	opt stack 0
 27831                           tosu	equ	0xFFF
 27832                           tosh	equ	0xFFE
 27833                           tosl	equ	0xFFD
 27834                           pclath	equ	0xFFA
 27835                           tblptru	equ	0xFF8
 27836                           tblptrh	equ	0xFF7
 27837                           tblptrl	equ	0xFF6
 27838                           tablat	equ	0xFF5
 27839                           prodh	equ	0xFF4
 27840                           prodl	equ	0xFF3
 27841                           intcon	equ	0xFF2
 27842                           intcon2	equ	0xFF1
 27843                           intcon3	equ	0xFF0
 27844                           indf0	equ	0xFEF
 27845                           postinc0	equ	0xFEE
 27846                           fsr0h	equ	0xFEA
 27847                           fsr0l	equ	0xFE9
 27848                           wreg	equ	0xFE8
 27849                           indf1	equ	0xFE7
 27850                           postdec1	equ	0xFE5
 27851                           plusw1	equ	0xFE3
 27852                           fsr1h	equ	0xFE2
 27853                           fsr1l	equ	0xFE1
 27854                           indf2	equ	0xFDF
 27855                           postinc2	equ	0xFDE
 27856                           postdec2	equ	0xFDD
 27857                           plusw2	equ	0xFDB
 27858                           fsr2h	equ	0xFDA
 27859                           fsr2l	equ	0xFD9
 27860                           status	equ	0xFD8
 27861                           
 27862 ;; *************** function _ExternalFlash_MediaInitialize *****************
 27863 ;; Defined at:
 27864 ;;		line 10 in file "external_flash.c"
 27865 ;; Parameters:    Size  Location     Type
 27866 ;;  config          2    0[COMRAM] PTR void 
 27867 ;;		 -> NULL(0), 
 27868 ;; Auto vars:     Size  Location     Type
 27869 ;;		None
 27870 ;; Return value:  Size  Location     Type
 27871 ;;                  2    0[COMRAM] PTR struct .
 27872 ;; Registers used:
 27873 ;;		wreg, status,2, status,0
 27874 ;; Tracked objects:
 27875 ;;		On entry : 0/0
 27876 ;;		On exit  : 0/0
 27877 ;;		Unchanged: 0/0
 27878 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27879 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27880 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27881 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27882 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27883 ;;Total ram usage:        2 bytes
 27884 ;; Hardware stack levels used:    1
 27885 ;; This function calls:
 27886 ;;		Nothing
 27887 ;; This function is called by:
 27888 ;;		_USBMSDInit
 27889 ;;		_MSDProcessCommand
 27890 ;; This function uses a non-reentrant model
 27891 ;;
 27892                           
 27893                           	psect	text125
 27894  007E86                     __ptext125:
 27895                           	opt stack 0
 27896  007E86                     _ExternalFlash_MediaInitialize:
 27897                           	opt stack 26
 27898                           
 27899                           ;external_flash.c: 12: mediaInformation.validityFlags.bits.sectorSize = 1;
 27900                           
 27901                           ;incstack = 0
 27902  007E86  0101               	movlb	1	; () banked
 27903  007E88  81DE               	bsf	(_mediaInformation+1)& (0+255),0,b
 27904                           
 27905                           ; BSR set to: 1
 27906                           ;external_flash.c: 13: mediaInformation.sectorSize = 512;
 27907  007E8A  0E02               	movlw	2
 27908  007E8C  6FE0               	movwf	(_mediaInformation+3)& (0+255),b
 27909  007E8E  0E00               	movlw	0
 27910  007E90  6FDF               	movwf	(_mediaInformation+2)& (0+255),b
 27911                           
 27912                           ;external_flash.c: 14: mediaInformation.errorCode = MEDIA_NO_ERROR;
 27913  007E92  0E00               	movlw	0
 27914  007E94  6FDD               	movwf	_mediaInformation& (0+255),b
 27915                           
 27916                           ; BSR set to: 1
 27917                           ;external_flash.c: 15: return &mediaInformation;
 27918  007E96  0EDD               	movlw	low _mediaInformation
 27919  007E98  6E01               	movwf	?_ExternalFlash_MediaInitialize,c
 27920  007E9A  0E01               	movlw	high _mediaInformation
 27921  007E9C  6E02               	movwf	?_ExternalFlash_MediaInitialize+1,c
 27922  007E9E  0012               	return	
 27923  007EA0                     __end_of_ExternalFlash_MediaInitialize:
 27924                           	opt stack 0
 27925                           tosu	equ	0xFFF
 27926                           tosh	equ	0xFFE
 27927                           tosl	equ	0xFFD
 27928                           pclath	equ	0xFFA
 27929                           tblptru	equ	0xFF8
 27930                           tblptrh	equ	0xFF7
 27931                           tblptrl	equ	0xFF6
 27932                           tablat	equ	0xFF5
 27933                           prodh	equ	0xFF4
 27934                           prodl	equ	0xFF3
 27935                           intcon	equ	0xFF2
 27936                           intcon2	equ	0xFF1
 27937                           intcon3	equ	0xFF0
 27938                           indf0	equ	0xFEF
 27939                           postinc0	equ	0xFEE
 27940                           fsr0h	equ	0xFEA
 27941                           fsr0l	equ	0xFE9
 27942                           wreg	equ	0xFE8
 27943                           indf1	equ	0xFE7
 27944                           postdec1	equ	0xFE5
 27945                           plusw1	equ	0xFE3
 27946                           fsr1h	equ	0xFE2
 27947                           fsr1l	equ	0xFE1
 27948                           indf2	equ	0xFDF
 27949                           postinc2	equ	0xFDE
 27950                           postdec2	equ	0xFDD
 27951                           plusw2	equ	0xFDB
 27952                           fsr2h	equ	0xFDA
 27953                           fsr2l	equ	0xFD9
 27954                           status	equ	0xFD8
 27955                           
 27956 ;; *************** function _ExternalFlash_MediaDetect *****************
 27957 ;; Defined at:
 27958 ;;		line 29 in file "external_flash.c"
 27959 ;; Parameters:    Size  Location     Type
 27960 ;;  config          2    0[COMRAM] PTR void 
 27961 ;;		 -> NULL(0), 
 27962 ;; Auto vars:     Size  Location     Type
 27963 ;;		None
 27964 ;; Return value:  Size  Location     Type
 27965 ;;                  1    wreg      unsigned char 
 27966 ;; Registers used:
 27967 ;;		wreg
 27968 ;; Tracked objects:
 27969 ;;		On entry : 0/0
 27970 ;;		On exit  : 0/0
 27971 ;;		Unchanged: 0/0
 27972 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 27973 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27974 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27975 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27976 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 27977 ;;Total ram usage:        2 bytes
 27978 ;; Hardware stack levels used:    1
 27979 ;; This function calls:
 27980 ;;		Nothing
 27981 ;; This function is called by:
 27982 ;;		_USBMSDInit
 27983 ;;		_MSDProcessCommand
 27984 ;; This function uses a non-reentrant model
 27985 ;;
 27986                           
 27987                           	psect	text126
 27988  00804A                     __ptext126:
 27989                           	opt stack 0
 27990  00804A                     _ExternalFlash_MediaDetect:
 27991                           	opt stack 26
 27992                           
 27993                           ;external_flash.c: 31: return 1;
 27994                           
 27995                           ; BSR set to: 1
 27996                           ;incstack = 0
 27997  00804A  0E01               	movlw	1
 27998  00804C  0012               	return	
 27999  00804E                     __end_of_ExternalFlash_MediaDetect:
 28000                           	opt stack 0
 28001                           tosu	equ	0xFFF
 28002                           tosh	equ	0xFFE
 28003                           tosl	equ	0xFFD
 28004                           pclath	equ	0xFFA
 28005                           tblptru	equ	0xFF8
 28006                           tblptrh	equ	0xFF7
 28007                           tblptrl	equ	0xFF6
 28008                           tablat	equ	0xFF5
 28009                           prodh	equ	0xFF4
 28010                           prodl	equ	0xFF3
 28011                           intcon	equ	0xFF2
 28012                           intcon2	equ	0xFF1
 28013                           intcon3	equ	0xFF0
 28014                           indf0	equ	0xFEF
 28015                           postinc0	equ	0xFEE
 28016                           fsr0h	equ	0xFEA
 28017                           fsr0l	equ	0xFE9
 28018                           wreg	equ	0xFE8
 28019                           indf1	equ	0xFE7
 28020                           postdec1	equ	0xFE5
 28021                           plusw1	equ	0xFE3
 28022                           fsr1h	equ	0xFE2
 28023                           fsr1l	equ	0xFE1
 28024                           indf2	equ	0xFDF
 28025                           postinc2	equ	0xFDE
 28026                           postdec2	equ	0xFDD
 28027                           plusw2	equ	0xFDB
 28028                           fsr2h	equ	0xFDA
 28029                           fsr2l	equ	0xFD9
 28030                           status	equ	0xFD8
 28031                           
 28032 ;; *************** function _APP_DeviceCustomHIDTasks *****************
 28033 ;; Defined at:
 28034 ;;		line 74 in file "app_device_custom_hid.c"
 28035 ;; Parameters:    Size  Location     Type
 28036 ;;		None
 28037 ;; Auto vars:     Size  Location     Type
 28038 ;;  idx             1    0        unsigned char 
 28039 ;; Return value:  Size  Location     Type
 28040 ;;                  1    wreg      void 
 28041 ;; Registers used:
 28042 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28043 ;; Tracked objects:
 28044 ;;		On entry : 0/0
 28045 ;;		On exit  : 0/0
 28046 ;;		Unchanged: 0/0
 28047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28048 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28049 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28050 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28051 ;;      Totals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28052 ;;Total ram usage:        4 bytes
 28053 ;; Hardware stack levels used:    1
 28054 ;; Hardware stack levels required when called:   11
 28055 ;; This function calls:
 28056 ;;		_USBTransferOnePacket
 28057 ;;		_api_parse
 28058 ;;		_api_prepare
 28059 ;; This function is called by:
 28060 ;;		_main
 28061 ;; This function uses a non-reentrant model
 28062 ;;
 28063                           
 28064                           	psect	text127
 28065  0059D0                     __ptext127:
 28066                           	opt stack 0
 28067  0059D0                     _APP_DeviceCustomHIDTasks:
 28068                           	opt stack 19
 28069                           
 28070                           ;app_device_custom_hid.c: 76: uint8_t idx;;app_device_custom_hid.c: 81: if( USBDeviceSta
      +                          te < CONFIGURED_STATE )
 28071                           
 28072                           ;incstack = 0
 28073  0059D0  0E20               	movlw	32
 28074  0059D2  0100               	movlb	0	; () banked
 28075  0059D4  61B0               	cpfslt	_USBDeviceState& (0+255),b
 28076  0059D6  D001               	goto	l960
 28077  0059D8  0012               	return	
 28078  0059DA                     l960:
 28079                           
 28080                           ; BSR set to: 0
 28081                           ;app_device_custom_hid.c: 84: };app_device_custom_hid.c: 90: if( UCONbits.SUSPND== 1 )
 28082  0059DA  B265               	btfsc	3941,1,c	;volatile
 28083  0059DC  0012               	return	
 28084                           
 28085                           ; BSR set to: 0
 28086                           ;app_device_custom_hid.c: 93: };app_device_custom_hid.c: 96: if(((USBOutHandle != 0x0000
      +                          ) && ((*(volatile uint8_t*)USBOutHandle & 0x80) != 0x00)) == 0)
 28087                           
 28088                           ; BSR set to: 0
 28089                           
 28090                           ; BSR set to: 0
 28091                           ;app_device_custom_hid.c: 91: {;app_device_custom_hid.c: 92: return;
 28092  0059DE  5184               	movf	_USBOutHandle& (0+255),w,b
 28093  0059E0  1185               	iorwf	(_USBOutHandle+1)& (0+255),w,b
 28094  0059E2  B4D8               	btfsc	status,2,c
 28095  0059E4  D006               	goto	u11500
 28096                           
 28097                           ; BSR set to: 0
 28098  0059E6  C084  FFD9         	movff	_USBOutHandle,fsr2l
 28099  0059EA  C085  FFDA         	movff	_USBOutHandle+1,fsr2h
 28100  0059EE  BEDF               	btfsc	indf2,7,c
 28101  0059F0  0012               	return	
 28102  0059F2                     u11500:
 28103                           
 28104                           ; BSR set to: 0
 28105                           ;app_device_custom_hid.c: 97: {;app_device_custom_hid.c: 102: if(!((USBInHandle != 0x000
      +                          0) && ((*(volatile uint8_t*)USBInHandle & 0x80) != 0x00)))
 28106                           
 28107                           ; BSR set to: 0
 28108  0059F2  0101               	movlb	1	; () banked
 28109  0059F4  5170               	movf	_USBInHandle& (0+255),w,b
 28110  0059F6  1171               	iorwf	(_USBInHandle+1)& (0+255),w,b
 28111  0059F8  B4D8               	btfsc	status,2,c
 28112  0059FA  D006               	goto	u11520
 28113                           
 28114                           ; BSR set to: 1
 28115  0059FC  C170  FFD9         	movff	_USBInHandle,fsr2l
 28116  005A00  C171  FFDA         	movff	_USBInHandle+1,fsr2h
 28117  005A04  BEDF               	btfsc	indf2,7,c
 28118  005A06  D020               	goto	l966
 28119  005A08                     u11520:
 28120                           
 28121                           ; BSR set to: 1
 28122                           ;app_device_custom_hid.c: 103: {;app_device_custom_hid.c: 105: api_prepare((uint8_t) Rec
      +                          eivedDataBuffer, (uint8_t) ToSendDataBuffer);
 28123                           
 28124                           ; BSR set to: 1
 28125  005A08  0E80               	movlw	_ReceivedDataBuffer& (0+255)
 28126  005A0A  0100               	movlb	0	; () banked
 28127  005A0C  6FF2               	movwf	??_APP_DeviceCustomHIDTasks& (0+255),b
 28128  005A0E  6BF3               	clrf	(??_APP_DeviceCustomHIDTasks+1)& (0+255),b
 28129  005A10  C0F2  F0EE         	movff	??_APP_DeviceCustomHIDTasks,api_prepare@inBuffer
 28130  005A14  C0F3  F0EF         	movff	??_APP_DeviceCustomHIDTasks+1,api_prepare@inBuffer+1
 28131  005A18  0E00               	movlw	_ToSendDataBuffer& (0+255)
 28132  005A1A  6FF4               	movwf	(??_APP_DeviceCustomHIDTasks+2)& (0+255),b
 28133  005A1C  6BF5               	clrf	(??_APP_DeviceCustomHIDTasks+3)& (0+255),b
 28134  005A1E  C0F4  F0F0         	movff	??_APP_DeviceCustomHIDTasks+2,api_prepare@outBuffer
 28135  005A22  C0F5  F0F1         	movff	??_APP_DeviceCustomHIDTasks+3,api_prepare@outBuffer+1
 28136  005A26  EC79  F01F         	call	_api_prepare	;wreg free
 28137                           
 28138                           ;app_device_custom_hid.c: 107: USBInHandle = USBTransferOnePacket(1,1,(uint8_t*)&ToSendD
      +                          ataBuffer[0],64);
 28139  005A2A  0E01               	movlw	1
 28140  005A2C  6E01               	movwf	USBTransferOnePacket@dir,c
 28141  005A2E  0E00               	movlw	low _ToSendDataBuffer
 28142  005A30  6E02               	movwf	USBTransferOnePacket@data,c
 28143  005A32  0E03               	movlw	high _ToSendDataBuffer
 28144  005A34  6E03               	movwf	USBTransferOnePacket@data+1,c
 28145  005A36  0E40               	movlw	64
 28146  005A38  6E04               	movwf	USBTransferOnePacket@len,c
 28147  005A3A  0E01               	movlw	1
 28148  005A3C  EC2B  F023         	call	_USBTransferOnePacket
 28149  005A40  C001  F170         	movff	?_USBTransferOnePacket,_USBInHandle
 28150  005A44  C002  F171         	movff	?_USBTransferOnePacket+1,_USBInHandle+1
 28151  005A48                     l966:
 28152                           
 28153                           ;app_device_custom_hid.c: 108: };app_device_custom_hid.c: 111: api_parse(ReceivedDataBuf
      +                          fer, 64);
 28154  005A48  0E80               	movlw	low _ReceivedDataBuffer
 28155  005A4A  0100               	movlb	0	; () banked
 28156  005A4C  6FE8               	movwf	api_parse@inBuffer& (0+255),b
 28157  005A4E  0E02               	movlw	high _ReceivedDataBuffer
 28158  005A50  6FE9               	movwf	(api_parse@inBuffer+1)& (0+255),b
 28159  005A52  0E40               	movlw	64
 28160  005A54  6FEA               	movwf	api_parse@receivedDataLength& (0+255),b
 28161  005A56  EC4E  F027         	call	_api_parse	;wreg free
 28162                           
 28163                           ;app_device_custom_hid.c: 115: USBOutHandle = USBTransferOnePacket(1,0,(uint8_t*)&Receiv
      +                          edDataBuffer,64);
 28164  005A5A  0E00               	movlw	0
 28165  005A5C  6E01               	movwf	USBTransferOnePacket@dir,c
 28166  005A5E  0E80               	movlw	low _ReceivedDataBuffer
 28167  005A60  6E02               	movwf	USBTransferOnePacket@data,c
 28168  005A62  0E02               	movlw	high _ReceivedDataBuffer
 28169  005A64  6E03               	movwf	USBTransferOnePacket@data+1,c
 28170  005A66  0E40               	movlw	64
 28171  005A68  6E04               	movwf	USBTransferOnePacket@len,c
 28172  005A6A  0E01               	movlw	1
 28173  005A6C  EC2B  F023         	call	_USBTransferOnePacket
 28174  005A70  C001  F084         	movff	?_USBTransferOnePacket,_USBOutHandle
 28175  005A74  C002  F085         	movff	?_USBTransferOnePacket+1,_USBOutHandle+1
 28176  005A78  0012               	return	
 28177  005A7A                     __end_of_APP_DeviceCustomHIDTasks:
 28178                           	opt stack 0
 28179                           tosu	equ	0xFFF
 28180                           tosh	equ	0xFFE
 28181                           tosl	equ	0xFFD
 28182                           pclath	equ	0xFFA
 28183                           tblptru	equ	0xFF8
 28184                           tblptrh	equ	0xFF7
 28185                           tblptrl	equ	0xFF6
 28186                           tablat	equ	0xFF5
 28187                           prodh	equ	0xFF4
 28188                           prodl	equ	0xFF3
 28189                           intcon	equ	0xFF2
 28190                           intcon2	equ	0xFF1
 28191                           intcon3	equ	0xFF0
 28192                           indf0	equ	0xFEF
 28193                           postinc0	equ	0xFEE
 28194                           fsr0h	equ	0xFEA
 28195                           fsr0l	equ	0xFE9
 28196                           wreg	equ	0xFE8
 28197                           indf1	equ	0xFE7
 28198                           postdec1	equ	0xFE5
 28199                           plusw1	equ	0xFE3
 28200                           fsr1h	equ	0xFE2
 28201                           fsr1l	equ	0xFE1
 28202                           indf2	equ	0xFDF
 28203                           postinc2	equ	0xFDE
 28204                           postdec2	equ	0xFDD
 28205                           plusw2	equ	0xFDB
 28206                           fsr2h	equ	0xFDA
 28207                           fsr2l	equ	0xFD9
 28208                           status	equ	0xFD8
 28209                           
 28210 ;; *************** function _api_prepare *****************
 28211 ;; Defined at:
 28212 ;;		line 52 in file "api.c"
 28213 ;; Parameters:    Size  Location     Type
 28214 ;;  inBuffer        2   57[BANK0 ] PTR unsigned char 
 28215 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 28216 ;;  outBuffer       2   59[BANK0 ] PTR unsigned char 
 28217 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 28218 ;; Auto vars:     Size  Location     Type
 28219 ;;  command         1   92[COMRAM] enum E6715
 28220 ;; Return value:  Size  Location     Type
 28221 ;;                  1    wreg      void 
 28222 ;; Registers used:
 28223 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 28224 ;; Tracked objects:
 28225 ;;		On entry : 0/0
 28226 ;;		On exit  : 0/0
 28227 ;;		Unchanged: 0/0
 28228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28229 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28230 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28232 ;;      Totals:         1       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28233 ;;Total ram usage:        5 bytes
 28234 ;; Hardware stack levels used:    1
 28235 ;; Hardware stack levels required when called:    9
 28236 ;; This function calls:
 28237 ;;		__fill_buffer_find_file
 28238 ;;		__fill_buffer_get_bootloader_details
 28239 ;;		__fill_buffer_get_configuration
 28240 ;;		__fill_buffer_get_display
 28241 ;;		__fill_buffer_get_file_details
 28242 ;;		__fill_buffer_get_status
 28243 ;;		__fill_buffer_read_file
 28244 ;;		_flash_is_busy
 28245 ;;		_memcpy
 28246 ;; This function is called by:
 28247 ;;		_main
 28248 ;;		_APP_DeviceCustomHIDTasks
 28249 ;; This function uses a non-reentrant model
 28250 ;;
 28251                           
 28252                           	psect	text128
 28253  003EF2                     __ptext128:
 28254                           	opt stack 0
 28255  003EF2                     _api_prepare:
 28256                           	opt stack 21
 28257                           
 28258                           ;api.c: 54: apiDataRequest_t command = (apiDataRequest_t) inBuffer[0];
 28259                           
 28260                           ;incstack = 0
 28261  003EF2  C0EE  FFD9         	movff	api_prepare@inBuffer,fsr2l
 28262  003EF6  C0EF  FFDA         	movff	api_prepare@inBuffer+1,fsr2h
 28263  003EFA  50DF               	movf	indf2,w,c
 28264  003EFC  6E5D               	movwf	api_prepare@command,c
 28265                           
 28266                           ;api.c: 56: if(command>0x7F)
 28267  003EFE  0E7F               	movlw	127
 28268  003F00  645D               	cpfsgt	api_prepare@command,c
 28269  003F02  D073               	goto	l2550
 28270                           
 28271                           ;api.c: 57: {;api.c: 61: if(flash_is_busy())
 28272  003F04  EC67  F03F         	call	_flash_is_busy	;wreg free
 28273  003F08  0900               	iorlw	0
 28274  003F0A  B4D8               	btfsc	status,2,c
 28275  003F0C  D028               	goto	l2544
 28276                           
 28277                           ;api.c: 62: {;api.c: 63: _fill_buffer_get_status(outBuffer);
 28278  003F0E  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 28279  003F12  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 28280  003F16  EC70  F026         	call	__fill_buffer_get_status	;wreg free
 28281                           
 28282                           ;api.c: 64: return;
 28283  003F1A  0012               	return	
 28284  003F1C                     
 28285                           ;api.c: 72: _fill_buffer_get_file_details(inBuffer, outBuffer);
 28286  003F1C  C0EE  F03F         	movff	api_prepare@inBuffer,__fill_buffer_get_file_details@inBuffer
 28287  003F20  C0EF  F040         	movff	api_prepare@inBuffer+1,__fill_buffer_get_file_details@inBuffer+1
 28288  003F24  C0F0  F041         	movff	api_prepare@outBuffer,__fill_buffer_get_file_details@outBuffer
 28289  003F28  C0F1  F042         	movff	api_prepare@outBuffer+1,__fill_buffer_get_file_details@outBuffer+1
 28290  003F2C  EC4A  F035         	call	__fill_buffer_get_file_details	;wreg free
 28291                           
 28292                           ;api.c: 73: break;
 28293  003F30  0012               	return	
 28294  003F32                     
 28295                           ;api.c: 77: _fill_buffer_find_file(inBuffer, outBuffer);
 28296  003F32  C0EE  F044         	movff	api_prepare@inBuffer,__fill_buffer_find_file@inBuffer
 28297  003F36  C0EF  F045         	movff	api_prepare@inBuffer+1,__fill_buffer_find_file@inBuffer+1
 28298  003F3A  C0F0  F046         	movff	api_prepare@outBuffer,__fill_buffer_find_file@outBuffer
 28299  003F3E  C0F1  F047         	movff	api_prepare@outBuffer+1,__fill_buffer_find_file@outBuffer+1
 28300  003F42  EC34  F02E         	call	__fill_buffer_find_file	;wreg free
 28301                           
 28302                           ;api.c: 78: break;
 28303  003F46  0012               	return	
 28304  003F48                     
 28305                           ;api.c: 82: _fill_buffer_read_file(inBuffer, outBuffer);
 28306  003F48  C0EE  F055         	movff	api_prepare@inBuffer,__fill_buffer_read_file@inBuffer
 28307  003F4C  C0EF  F056         	movff	api_prepare@inBuffer+1,__fill_buffer_read_file@inBuffer+1
 28308  003F50  C0F0  F057         	movff	api_prepare@outBuffer,__fill_buffer_read_file@outBuffer
 28309  003F54  C0F1  F058         	movff	api_prepare@outBuffer+1,__fill_buffer_read_file@outBuffer+1
 28310  003F58  EC9D  F011         	call	__fill_buffer_read_file	;wreg free
 28311                           
 28312                           ;api.c: 84: }
 28313                           
 28314                           ;api.c: 83: break;
 28315  003F5C  0012               	return	
 28316  003F5E                     l2544:
 28317  003F5E  505D               	movf	api_prepare@command,w,c
 28318                           
 28319                           ; Switch size 1, requested type "space"
 28320                           ; Number of cases is 3, Range of values is 128 to 130
 28321                           ; switch strategies available:
 28322                           ; Name         Instructions Cycles
 28323                           ; simple_byte           10     6 (average)
 28324                           ;	Chosen strategy is simple_byte
 28325  003F60  0A80               	xorlw	128	; case 128
 28326  003F62  B4D8               	btfsc	status,2,c
 28327  003F64  D7DB               	goto	l2545
 28328  003F66  0A01               	xorlw	1	; case 129
 28329  003F68  B4D8               	btfsc	status,2,c
 28330  003F6A  D7E3               	goto	l2547
 28331  003F6C  0A03               	xorlw	3	; case 130
 28332  003F6E  A4D8               	btfss	status,2,c
 28333                           
 28334                           ;api.c: 85: }
 28335  003F70  0012               	return	
 28336  003F72  D7EA               	goto	l2548
 28337  003F74                     
 28338                           ;api.c: 93: _fill_buffer_get_status(outBuffer);
 28339  003F74  C0F0  F015         	movff	api_prepare@outBuffer,__fill_buffer_get_status@outBuffer
 28340  003F78  C0F1  F016         	movff	api_prepare@outBuffer+1,__fill_buffer_get_status@outBuffer+1
 28341  003F7C  EC70  F026         	call	__fill_buffer_get_status	;wreg free
 28342                           
 28343                           ;api.c: 94: break;
 28344  003F80  0012               	return	
 28345  003F82                     
 28346                           ;api.c: 98: _fill_buffer_get_display(outBuffer, 0);
 28347  003F82  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 28348  003F86  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 28349  003F8A  0E00               	movlw	0
 28350  003F8C  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 28351  003F8E  EC8B  F02B         	call	__fill_buffer_get_display	;wreg free
 28352                           
 28353                           ;api.c: 99: break;
 28354  003F92  0012               	return	
 28355  003F94                     
 28356                           ;api.c: 103: _fill_buffer_get_display(outBuffer, 1);
 28357  003F94  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_display@outBuffer
 28358  003F98  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_display@outBuffer+1
 28359  003F9C  0E01               	movlw	1
 28360  003F9E  6E07               	movwf	__fill_buffer_get_display@secondHalf,c
 28361  003FA0  EC8B  F02B         	call	__fill_buffer_get_display	;wreg free
 28362                           
 28363                           ;api.c: 104: break;
 28364  003FA4  0012               	return	
 28365  003FA6                     
 28366                           ;api.c: 108: _fill_buffer_get_bootloader_details(outBuffer);
 28367  003FA6  C0F0  F005         	movff	api_prepare@outBuffer,__fill_buffer_get_bootloader_details@outBuffer
 28368  003FAA  C0F1  F006         	movff	api_prepare@outBuffer+1,__fill_buffer_get_bootloader_details@outBuffer+1
 28369  003FAE  EC9F  F014         	call	__fill_buffer_get_bootloader_details	;wreg free
 28370                           
 28371                           ;api.c: 109: break;
 28372  003FB2  0012               	return	
 28373  003FB4                     
 28374                           ;api.c: 113: _fill_buffer_get_configuration(outBuffer);
 28375  003FB4  C0F0  F001         	movff	api_prepare@outBuffer,__fill_buffer_get_configuration@outBuffer
 28376  003FB8  C0F1  F002         	movff	api_prepare@outBuffer+1,__fill_buffer_get_configuration@outBuffer+1
 28377  003FBC  ECD4  F02E         	call	__fill_buffer_get_configuration	;wreg free
 28378                           
 28379                           ;api.c: 114: break;
 28380  003FC0  0012               	return	
 28381  003FC2                     
 28382                           ;api.c: 118: memcpy(outBuffer, inBuffer, 64);
 28383  003FC2  C0F0  F001         	movff	api_prepare@outBuffer,memcpy@d1
 28384  003FC6  C0F1  F002         	movff	api_prepare@outBuffer+1,memcpy@d1+1
 28385  003FCA  C0EE  F003         	movff	api_prepare@inBuffer,memcpy@s1
 28386  003FCE  C0EF  F004         	movff	api_prepare@inBuffer+1,memcpy@s1+1
 28387  003FD2  5003               	movf	memcpy@s1,w,c
 28388  003FD4  1004               	iorwf	memcpy@s1+1,w,c
 28389  003FD6  A4D8               	btfss	status,2,c
 28390  003FD8  0E20               	movlw	32
 28391  003FDA  6E05               	movwf	memcpy@s1+2,c
 28392  003FDC  0E00               	movlw	0
 28393  003FDE  6E07               	movwf	memcpy@n+1,c
 28394  003FE0  0E40               	movlw	64
 28395  003FE2  6E06               	movwf	memcpy@n,c
 28396  003FE4  ECBE  F036         	call	_memcpy	;wreg free
 28397                           
 28398                           ;api.c: 120: }
 28399                           
 28400                           ;api.c: 119: break;
 28401  003FE8  0012               	return	
 28402  003FEA                     l2550:
 28403  003FEA  505D               	movf	api_prepare@command,w,c
 28404                           
 28405                           ; Switch size 1, requested type "space"
 28406                           ; Number of cases is 6, Range of values is 16 to 32
 28407                           ; switch strategies available:
 28408                           ; Name         Instructions Cycles
 28409                           ; simple_byte           19    10 (average)
 28410                           ;	Chosen strategy is simple_byte
 28411  003FEC  0A10               	xorlw	16	; case 16
 28412  003FEE  B4D8               	btfsc	status,2,c
 28413  003FF0  D7C1               	goto	l2551
 28414  003FF2  0A01               	xorlw	1	; case 17
 28415  003FF4  B4D8               	btfsc	status,2,c
 28416  003FF6  D7C5               	goto	l2553
 28417  003FF8  0A03               	xorlw	3	; case 18
 28418  003FFA  B4D8               	btfsc	status,2,c
 28419  003FFC  D7CB               	goto	l2554
 28420  003FFE  0A01               	xorlw	1	; case 19
 28421  004000  B4D8               	btfsc	status,2,c
 28422  004002  D7D1               	goto	l2555
 28423  004004  0A07               	xorlw	7	; case 20
 28424  004006  B4D8               	btfsc	status,2,c
 28425  004008  D7D5               	goto	l2556
 28426  00400A  0A34               	xorlw	52	; case 32
 28427  00400C  A4D8               	btfss	status,2,c
 28428  00400E  0012               	return	
 28429  004010  D7D8               	goto	l2557
 28430  004012                     __end_of_api_prepare:
 28431                           	opt stack 0
 28432                           tosu	equ	0xFFF
 28433                           tosh	equ	0xFFE
 28434                           tosl	equ	0xFFD
 28435                           pclath	equ	0xFFA
 28436                           tblptru	equ	0xFF8
 28437                           tblptrh	equ	0xFF7
 28438                           tblptrl	equ	0xFF6
 28439                           tablat	equ	0xFF5
 28440                           prodh	equ	0xFF4
 28441                           prodl	equ	0xFF3
 28442                           intcon	equ	0xFF2
 28443                           intcon2	equ	0xFF1
 28444                           intcon3	equ	0xFF0
 28445                           indf0	equ	0xFEF
 28446                           postinc0	equ	0xFEE
 28447                           fsr0h	equ	0xFEA
 28448                           fsr0l	equ	0xFE9
 28449                           wreg	equ	0xFE8
 28450                           indf1	equ	0xFE7
 28451                           postdec1	equ	0xFE5
 28452                           plusw1	equ	0xFE3
 28453                           fsr1h	equ	0xFE2
 28454                           fsr1l	equ	0xFE1
 28455                           indf2	equ	0xFDF
 28456                           postinc2	equ	0xFDE
 28457                           postdec2	equ	0xFDD
 28458                           plusw2	equ	0xFDB
 28459                           fsr2h	equ	0xFDA
 28460                           fsr2l	equ	0xFD9
 28461                           status	equ	0xFD8
 28462                           
 28463 ;; *************** function __fill_buffer_read_file *****************
 28464 ;; Defined at:
 28465 ;;		line 368 in file "api.c"
 28466 ;; Parameters:    Size  Location     Type
 28467 ;;  inBuffer        2   84[COMRAM] PTR unsigned char 
 28468 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 28469 ;;  outBuffer       2   86[COMRAM] PTR unsigned char 
 28470 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 28471 ;; Auto vars:     Size  Location     Type
 28472 ;;  start           4   53[BANK0 ] unsigned long 
 28473 ;;  data_length     4   49[BANK0 ] unsigned long 
 28474 ;;  file_size       4   45[BANK0 ] unsigned long 
 28475 ;; Return value:  Size  Location     Type
 28476 ;;                  1    wreg      void 
 28477 ;; Registers used:
 28478 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 28479 ;; Tracked objects:
 28480 ;;		On entry : 0/0
 28481 ;;		On exit  : 0/0
 28482 ;;		Unchanged: 0/0
 28483 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28484 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28485 ;;      Locals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28486 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28487 ;;      Totals:         8      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28488 ;;Total ram usage:       20 bytes
 28489 ;; Hardware stack levels used:    1
 28490 ;; Hardware stack levels required when called:    8
 28491 ;; This function calls:
 28492 ;;		_fat_get_file_size
 28493 ;;		_fat_read_from_file
 28494 ;; This function is called by:
 28495 ;;		_api_prepare
 28496 ;; This function uses a non-reentrant model
 28497 ;;
 28498                           
 28499                           	psect	text129
 28500  00233A                     __ptext129:
 28501                           	opt stack 0
 28502  00233A                     __fill_buffer_read_file:
 28503                           	opt stack 21
 28504                           
 28505                           ;api.c: 370: uint32_t start;;api.c: 371: uint32_t file_size;;api.c: 372: uint32_t data_l
      +                          ength;;api.c: 375: outBuffer[0] = DATAREQUEST_FIND_FILE;
 28506                           
 28507                           ;incstack = 0
 28508  00233A  C057  FFD9         	movff	__fill_buffer_read_file@outBuffer,fsr2l
 28509  00233E  C058  FFDA         	movff	__fill_buffer_read_file@outBuffer+1,fsr2h
 28510  002342  0E81               	movlw	129
 28511  002344  6EDF               	movwf	indf2,c
 28512                           
 28513                           ;api.c: 378: outBuffer[1] = 0xC125 >> 8;
 28514  002346  EE20 F001          	lfsr	2,1
 28515  00234A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28516  00234C  26D9               	addwf	fsr2l,f,c
 28517  00234E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28518  002350  22DA               	addwfc	fsr2h,f,c
 28519  002352  0EC1               	movlw	193
 28520  002354  6EDF               	movwf	indf2,c
 28521                           
 28522                           ;api.c: 379: outBuffer[2] = (uint8_t) 0xC125;
 28523  002356  EE20 F002          	lfsr	2,2
 28524  00235A  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28525  00235C  26D9               	addwf	fsr2l,f,c
 28526  00235E  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28527  002360  22DA               	addwfc	fsr2h,f,c
 28528  002362  0E25               	movlw	37
 28529  002364  6EDF               	movwf	indf2,c
 28530                           
 28531                           ;api.c: 382: outBuffer[3] = inBuffer[1];
 28532  002366  EE20 F001          	lfsr	2,1
 28533  00236A  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28534  00236C  26D9               	addwf	fsr2l,f,c
 28535  00236E  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28536  002370  22DA               	addwfc	fsr2h,f,c
 28537  002372  EE10 F003          	lfsr	1,3
 28538  002376  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28539  002378  26E1               	addwf	fsr1l,f,c
 28540  00237A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28541  00237C  22E2               	addwfc	fsr1h,f,c
 28542  00237E  CFDF FFE7          	movff	indf2,indf1
 28543                           
 28544                           ;api.c: 385: outBuffer[4] = inBuffer[1];
 28545  002382  EE20 F001          	lfsr	2,1
 28546  002386  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28547  002388  26D9               	addwf	fsr2l,f,c
 28548  00238A  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28549  00238C  22DA               	addwfc	fsr2h,f,c
 28550  00238E  EE10 F004          	lfsr	1,4
 28551  002392  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28552  002394  26E1               	addwf	fsr1l,f,c
 28553  002396  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28554  002398  22E2               	addwfc	fsr1h,f,c
 28555  00239A  CFDF FFE7          	movff	indf2,indf1
 28556                           
 28557                           ;api.c: 386: outBuffer[5] = inBuffer[2];
 28558  00239E  EE20 F002          	lfsr	2,2
 28559  0023A2  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28560  0023A4  26D9               	addwf	fsr2l,f,c
 28561  0023A6  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28562  0023A8  22DA               	addwfc	fsr2h,f,c
 28563  0023AA  EE10 F005          	lfsr	1,5
 28564  0023AE  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28565  0023B0  26E1               	addwf	fsr1l,f,c
 28566  0023B2  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28567  0023B4  22E2               	addwfc	fsr1h,f,c
 28568  0023B6  CFDF FFE7          	movff	indf2,indf1
 28569                           
 28570                           ;api.c: 387: outBuffer[6] = inBuffer[3];
 28571  0023BA  EE20 F003          	lfsr	2,3
 28572  0023BE  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28573  0023C0  26D9               	addwf	fsr2l,f,c
 28574  0023C2  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28575  0023C4  22DA               	addwfc	fsr2h,f,c
 28576  0023C6  EE10 F006          	lfsr	1,6
 28577  0023CA  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28578  0023CC  26E1               	addwf	fsr1l,f,c
 28579  0023CE  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28580  0023D0  22E2               	addwfc	fsr1h,f,c
 28581  0023D2  CFDF FFE7          	movff	indf2,indf1
 28582                           
 28583                           ;api.c: 388: outBuffer[7] = inBuffer[4];
 28584  0023D6  EE20 F004          	lfsr	2,4
 28585  0023DA  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28586  0023DC  26D9               	addwf	fsr2l,f,c
 28587  0023DE  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28588  0023E0  22DA               	addwfc	fsr2h,f,c
 28589  0023E2  EE10 F007          	lfsr	1,7
 28590  0023E6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28591  0023E8  26E1               	addwf	fsr1l,f,c
 28592  0023EA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28593  0023EC  22E2               	addwfc	fsr1h,f,c
 28594  0023EE  CFDF FFE7          	movff	indf2,indf1
 28595                           
 28596                           ;api.c: 391: start = inBuffer[4];
 28597  0023F2  EE20 F004          	lfsr	2,4
 28598  0023F6  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28599  0023F8  26D9               	addwf	fsr2l,f,c
 28600  0023FA  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28601  0023FC  22DA               	addwfc	fsr2h,f,c
 28602  0023FE  50DF               	movf	indf2,w,c
 28603  002400  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28604  002402  5059               	movf	??__fill_buffer_read_file,w,c
 28605  002404  0100               	movlb	0	; () banked
 28606  002406  6FEA               	movwf	__fill_buffer_read_file@start& (0+255),b
 28607  002408  6BEB               	clrf	(__fill_buffer_read_file@start+1)& (0+255),b
 28608  00240A  6BEC               	clrf	(__fill_buffer_read_file@start+2)& (0+255),b
 28609  00240C  6BED               	clrf	(__fill_buffer_read_file@start+3)& (0+255),b
 28610                           
 28611                           ; BSR set to: 0
 28612                           ;api.c: 392: start <<= 8;
 28613  00240E  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28614  002412  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28615  002416  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28616  00241A  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28617                           
 28618                           ; BSR set to: 0
 28619                           ;api.c: 393: start |= inBuffer[3];
 28620  00241C  EE20 F003          	lfsr	2,3
 28621  002420  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28622  002422  26D9               	addwf	fsr2l,f,c
 28623  002424  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28624  002426  22DA               	addwfc	fsr2h,f,c
 28625  002428  50DF               	movf	indf2,w,c
 28626  00242A  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28627  00242C  5059               	movf	??__fill_buffer_read_file,w,c
 28628  00242E  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28629                           
 28630                           ; BSR set to: 0
 28631                           ;api.c: 394: start <<= 8;
 28632  002430  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28633  002434  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28634  002438  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28635  00243C  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28636                           
 28637                           ; BSR set to: 0
 28638                           ;api.c: 395: start |= inBuffer[2];
 28639  00243E  EE20 F002          	lfsr	2,2
 28640  002442  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28641  002444  26D9               	addwf	fsr2l,f,c
 28642  002446  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28643  002448  22DA               	addwfc	fsr2h,f,c
 28644  00244A  50DF               	movf	indf2,w,c
 28645  00244C  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28646  00244E  5059               	movf	??__fill_buffer_read_file,w,c
 28647  002450  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28648                           
 28649                           ; BSR set to: 0
 28650                           ;api.c: 396: start <<= 8;
 28651  002452  C0EC  F0ED         	movff	__fill_buffer_read_file@start+2,__fill_buffer_read_file@start+3
 28652  002456  C0EB  F0EC         	movff	__fill_buffer_read_file@start+1,__fill_buffer_read_file@start+2
 28653  00245A  C0EA  F0EB         	movff	__fill_buffer_read_file@start,__fill_buffer_read_file@start+1
 28654  00245E  6BEA               	clrf	__fill_buffer_read_file@start& (0+255),b
 28655                           
 28656                           ; BSR set to: 0
 28657                           ;api.c: 397: start |= inBuffer[1];
 28658  002460  EE20 F001          	lfsr	2,1
 28659  002464  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28660  002466  26D9               	addwf	fsr2l,f,c
 28661  002468  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28662  00246A  22DA               	addwfc	fsr2h,f,c
 28663  00246C  50DF               	movf	indf2,w,c
 28664  00246E  6E59               	movwf	??__fill_buffer_read_file& (0+255),c
 28665  002470  5059               	movf	??__fill_buffer_read_file,w,c
 28666  002472  13EA               	iorwf	__fill_buffer_read_file@start& (0+255),f,b
 28667                           
 28668                           ; BSR set to: 0
 28669                           ;api.c: 400: file_size = fat_get_file_size(inBuffer[1]);
 28670  002474  EE20 F001          	lfsr	2,1
 28671  002478  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28672  00247A  26D9               	addwf	fsr2l,f,c
 28673  00247C  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28674  00247E  22DA               	addwfc	fsr2h,f,c
 28675  002480  50DF               	movf	indf2,w,c
 28676  002482  EC6A  F034         	call	_fat_get_file_size
 28677  002486  C030  F0E2         	movff	?_fat_get_file_size,__fill_buffer_read_file@file_size
 28678  00248A  C031  F0E3         	movff	?_fat_get_file_size+1,__fill_buffer_read_file@file_size+1
 28679  00248E  C032  F0E4         	movff	?_fat_get_file_size+2,__fill_buffer_read_file@file_size+2
 28680  002492  C033  F0E5         	movff	?_fat_get_file_size+3,__fill_buffer_read_file@file_size+3
 28681                           
 28682                           ;api.c: 401: data_length = file_size - start;
 28683  002496  C0EA  F059         	movff	__fill_buffer_read_file@start,??__fill_buffer_read_file
 28684  00249A  C0EB  F05A         	movff	__fill_buffer_read_file@start+1,??__fill_buffer_read_file+1
 28685  00249E  C0EC  F05B         	movff	__fill_buffer_read_file@start+2,??__fill_buffer_read_file+2
 28686  0024A2  C0ED  F05C         	movff	__fill_buffer_read_file@start+3,??__fill_buffer_read_file+3
 28687  0024A6  1E59               	comf	??__fill_buffer_read_file,f,c
 28688  0024A8  1E5A               	comf	??__fill_buffer_read_file+1,f,c
 28689  0024AA  1E5B               	comf	??__fill_buffer_read_file+2,f,c
 28690  0024AC  1E5C               	comf	??__fill_buffer_read_file+3,f,c
 28691  0024AE  2A59               	incf	??__fill_buffer_read_file,f,c
 28692  0024B0  0E00               	movlw	0
 28693  0024B2  225A               	addwfc	??__fill_buffer_read_file+1,f,c
 28694  0024B4  225B               	addwfc	??__fill_buffer_read_file+2,f,c
 28695  0024B6  225C               	addwfc	??__fill_buffer_read_file+3,f,c
 28696  0024B8  0100               	movlb	0	; () banked
 28697  0024BA  51E2               	movf	__fill_buffer_read_file@file_size& (0+255),w,b
 28698  0024BC  2459               	addwf	??__fill_buffer_read_file,w,c
 28699  0024BE  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28700  0024C0  51E3               	movf	(__fill_buffer_read_file@file_size+1)& (0+255),w,b
 28701  0024C2  205A               	addwfc	??__fill_buffer_read_file+1,w,c
 28702  0024C4  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28703  0024C6  51E4               	movf	(__fill_buffer_read_file@file_size+2)& (0+255),w,b
 28704  0024C8  205B               	addwfc	??__fill_buffer_read_file+2,w,c
 28705  0024CA  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28706  0024CC  51E5               	movf	(__fill_buffer_read_file@file_size+3)& (0+255),w,b
 28707  0024CE  205C               	addwfc	??__fill_buffer_read_file+3,w,c
 28708  0024D0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28709                           
 28710                           ; BSR set to: 0
 28711                           ;api.c: 402: if(data_length>54)
 28712  0024D2  51E9               	movf	(__fill_buffer_read_file@data_length+3)& (0+255),w,b
 28713  0024D4  11E8               	iorwf	(__fill_buffer_read_file@data_length+2)& (0+255),w,b
 28714  0024D6  11E7               	iorwf	(__fill_buffer_read_file@data_length+1)& (0+255),w,b
 28715  0024D8  E104               	bnz	u9970
 28716  0024DA  0E37               	movlw	55
 28717  0024DC  5DE6               	subwf	__fill_buffer_read_file@data_length& (0+255),w,b
 28718  0024DE  A0D8               	btfss	status,0,c
 28719  0024E0  D008               	goto	l2607
 28720  0024E2                     u9970:
 28721                           
 28722                           ; BSR set to: 0
 28723                           ;api.c: 403: {;api.c: 405: data_length = 54;
 28724  0024E2  0E36               	movlw	54
 28725  0024E4  6FE6               	movwf	__fill_buffer_read_file@data_length& (0+255),b
 28726  0024E6  0E00               	movlw	0
 28727  0024E8  6FE7               	movwf	(__fill_buffer_read_file@data_length+1)& (0+255),b
 28728  0024EA  0E00               	movlw	0
 28729  0024EC  6FE8               	movwf	(__fill_buffer_read_file@data_length+2)& (0+255),b
 28730  0024EE  0E00               	movlw	0
 28731  0024F0  6FE9               	movwf	(__fill_buffer_read_file@data_length+3)& (0+255),b
 28732  0024F2                     l2607:
 28733                           
 28734                           ; BSR set to: 0
 28735                           ;api.c: 406: };api.c: 409: outBuffer[8] = (uint8_t) data_length;
 28736                           
 28737                           ; BSR set to: 0
 28738  0024F2  EE20 F008          	lfsr	2,8
 28739  0024F6  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28740  0024F8  26D9               	addwf	fsr2l,f,c
 28741  0024FA  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28742  0024FC  22DA               	addwfc	fsr2h,f,c
 28743  0024FE  C0E6  FFDF         	movff	__fill_buffer_read_file@data_length,indf2
 28744                           
 28745                           ; BSR set to: 0
 28746                           ;api.c: 412: outBuffer[9] = fat_read_from_file(inBuffer[1], start, data_length, &outBuff
      +                          er[10]);
 28747  002502  EE20 F009          	lfsr	2,9
 28748  002506  5057               	movf	__fill_buffer_read_file@outBuffer,w,c
 28749  002508  26D9               	addwf	fsr2l,f,c
 28750  00250A  5058               	movf	__fill_buffer_read_file@outBuffer+1,w,c
 28751  00250C  22DA               	addwfc	fsr2h,f,c
 28752  00250E  C0EA  F03F         	movff	__fill_buffer_read_file@start,fat_read_from_file@start_byte
 28753  002512  C0EB  F040         	movff	__fill_buffer_read_file@start+1,fat_read_from_file@start_byte+1
 28754  002516  C0EC  F041         	movff	__fill_buffer_read_file@start+2,fat_read_from_file@start_byte+2
 28755  00251A  C0ED  F042         	movff	__fill_buffer_read_file@start+3,fat_read_from_file@start_byte+3
 28756  00251E  C0E6  F043         	movff	__fill_buffer_read_file@data_length,fat_read_from_file@length
 28757  002522  C0E7  F044         	movff	__fill_buffer_read_file@data_length+1,fat_read_from_file@length+1
 28758  002526  C0E8  F045         	movff	__fill_buffer_read_file@data_length+2,fat_read_from_file@length+2
 28759  00252A  C0E9  F046         	movff	__fill_buffer_read_file@data_length+3,fat_read_from_file@length+3
 28760  00252E  0E0A               	movlw	10
 28761  002530  2457               	addwf	__fill_buffer_read_file@outBuffer,w,c
 28762  002532  6E47               	movwf	fat_read_from_file@data,c
 28763  002534  0E00               	movlw	0
 28764  002536  2058               	addwfc	__fill_buffer_read_file@outBuffer+1,w,c
 28765  002538  6E48               	movwf	fat_read_from_file@data+1,c
 28766  00253A  EE10 F001          	lfsr	1,1
 28767  00253E  5055               	movf	__fill_buffer_read_file@inBuffer,w,c
 28768  002540  26E1               	addwf	fsr1l,f,c
 28769  002542  5056               	movf	__fill_buffer_read_file@inBuffer+1,w,c
 28770  002544  22E2               	addwfc	fsr1h,f,c
 28771  002546  50E7               	movf	indf1,w,c
 28772  002548  EC7A  F00F         	call	_fat_read_from_file
 28773  00254C  6EDF               	movwf	indf2,c
 28774  00254E  0012               	return		;funcret
 28775  002550                     __end_of__fill_buffer_read_file:
 28776                           	opt stack 0
 28777                           tosu	equ	0xFFF
 28778                           tosh	equ	0xFFE
 28779                           tosl	equ	0xFFD
 28780                           pclath	equ	0xFFA
 28781                           tblptru	equ	0xFF8
 28782                           tblptrh	equ	0xFF7
 28783                           tblptrl	equ	0xFF6
 28784                           tablat	equ	0xFF5
 28785                           prodh	equ	0xFF4
 28786                           prodl	equ	0xFF3
 28787                           intcon	equ	0xFF2
 28788                           intcon2	equ	0xFF1
 28789                           intcon3	equ	0xFF0
 28790                           indf0	equ	0xFEF
 28791                           postinc0	equ	0xFEE
 28792                           fsr0h	equ	0xFEA
 28793                           fsr0l	equ	0xFE9
 28794                           wreg	equ	0xFE8
 28795                           indf1	equ	0xFE7
 28796                           postdec1	equ	0xFE5
 28797                           plusw1	equ	0xFE3
 28798                           fsr1h	equ	0xFE2
 28799                           fsr1l	equ	0xFE1
 28800                           indf2	equ	0xFDF
 28801                           postinc2	equ	0xFDE
 28802                           postdec2	equ	0xFDD
 28803                           plusw2	equ	0xFDB
 28804                           fsr2h	equ	0xFDA
 28805                           fsr2l	equ	0xFD9
 28806                           status	equ	0xFD8
 28807                           
 28808 ;; *************** function _fat_read_from_file *****************
 28809 ;; Defined at:
 28810 ;;		line 559 in file "fat16.c"
 28811 ;; Parameters:    Size  Location     Type
 28812 ;;  file_number     1    wreg     unsigned char 
 28813 ;;  start_byte      4   62[COMRAM] unsigned long 
 28814 ;;  length          4   66[COMRAM] unsigned long 
 28815 ;;  data            2   70[COMRAM] PTR unsigned char 
 28816 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), RAM(3759), 
 28817 ;; Auto vars:     Size  Location     Type
 28818 ;;  file_number     1    2[BANK0 ] unsigned char 
 28819 ;;  root           32    3[BANK0 ] struct .
 28820 ;;  position        4   41[BANK0 ] unsigned long 
 28821 ;;  read_length     2   39[BANK0 ] unsigned int 
 28822 ;;  offset          2   37[BANK0 ] unsigned int 
 28823 ;;  cluster         2   35[BANK0 ] unsigned int 
 28824 ;;  sector          2    0[BANK0 ] unsigned int 
 28825 ;; Return value:  Size  Location     Type
 28826 ;;                  1    wreg      unsigned char 
 28827 ;; Registers used:
 28828 ;;		wreg, status,2, status,0, cstack
 28829 ;; Tracked objects:
 28830 ;;		On entry : 0/0
 28831 ;;		On exit  : 0/0
 28832 ;;		Unchanged: 0/0
 28833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 28834 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28835 ;;      Locals:         0      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28836 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28837 ;;      Totals:        22      45       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 28838 ;;Total ram usage:       67 bytes
 28839 ;; Hardware stack levels used:    1
 28840 ;; Hardware stack levels required when called:    7
 28841 ;; This function calls:
 28842 ;;		__read_fat
 28843 ;;		__sector_from_cluster
 28844 ;;		_fat_get_file_information
 28845 ;;		_flash_partial_read
 28846 ;; This function is called by:
 28847 ;;		__bootloader_verify_file
 28848 ;;		__bootloader_program
 28849 ;;		__fill_buffer_read_file
 28850 ;; This function uses a non-reentrant model
 28851 ;;
 28852                           
 28853                           	psect	text130
 28854  001EF4                     __ptext130:
 28855                           	opt stack 0
 28856  001EF4                     _fat_read_from_file:
 28857                           	opt stack 21
 28858                           
 28859                           ;incstack = 0
 28860                           ;fat_read_from_file@file_number stored from wreg
 28861  001EF4  0100               	movlb	0	; () banked
 28862  001EF6  6FB7               	movwf	fat_read_from_file@file_number& (0+255),b
 28863                           
 28864                           ;fat16.c: 561: rootEntry_t root;;fat16.c: 562: uint32_t position;;fat16.c: 563: uint16_t
      +                           cluster;;fat16.c: 564: uint16_t offset;;fat16.c: 565: uint16_t sector;;fat16.c: 566: ui
      +                          nt16_t read_length;;fat16.c: 569: fat_get_file_information(file_number, &root);
 28865  001EF8  0EB8               	movlw	low fat_read_from_file@root
 28866  001EFA  6E37               	movwf	fat_get_file_information@data,c
 28867  001EFC  0E00               	movlw	high fat_read_from_file@root
 28868  001EFE  6E38               	movwf	fat_get_file_information@data+1,c
 28869  001F00  0100               	movlb	0	; () banked
 28870  001F02  51B7               	movf	fat_read_from_file@file_number& (0+255),w,b
 28871  001F04  ECF6  F033         	call	_fat_get_file_information
 28872                           
 28873                           ;fat16.c: 570: cluster = root.firstCluster;
 28874  001F08  C0D2  F0D8         	movff	fat_read_from_file@root+26,fat_read_from_file@cluster
 28875  001F0C  C0D3  F0D9         	movff	fat_read_from_file@root+27,fat_read_from_file@cluster+1
 28876                           
 28877                           ;fat16.c: 573: if(start_byte+length > root.fileSize)
 28878  001F10  5043               	movf	fat_read_from_file@length,w,c
 28879  001F12  243F               	addwf	fat_read_from_file@start_byte,w,c
 28880  001F14  6E49               	movwf	??_fat_read_from_file& (0+255),c
 28881  001F16  5044               	movf	fat_read_from_file@length+1,w,c
 28882  001F18  2040               	addwfc	fat_read_from_file@start_byte+1,w,c
 28883  001F1A  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 28884  001F1C  5045               	movf	fat_read_from_file@length+2,w,c
 28885  001F1E  2041               	addwfc	fat_read_from_file@start_byte+2,w,c
 28886  001F20  6E4B               	movwf	(??_fat_read_from_file+2)& (0+255),c
 28887  001F22  5046               	movf	fat_read_from_file@length+3,w,c
 28888  001F24  2042               	addwfc	fat_read_from_file@start_byte+3,w,c
 28889  001F26  6E4C               	movwf	(??_fat_read_from_file+3)& (0+255),c
 28890  001F28  5049               	movf	??_fat_read_from_file,w,c
 28891  001F2A  0100               	movlb	0	; () banked
 28892  001F2C  5DD4               	subwf	(fat_read_from_file@root+28)& (0+255),w,b
 28893  001F2E  504A               	movf	??_fat_read_from_file+1,w,c
 28894  001F30  59D5               	subwfb	(fat_read_from_file@root+29)& (0+255),w,b
 28895  001F32  504B               	movf	??_fat_read_from_file+2,w,c
 28896  001F34  59D6               	subwfb	(fat_read_from_file@root+30)& (0+255),w,b
 28897  001F36  504C               	movf	??_fat_read_from_file+3,w,c
 28898  001F38  59D7               	subwfb	(fat_read_from_file@root+31)& (0+255),w,b
 28899  001F3A  B0D8               	btfsc	status,0,c
 28900  001F3C  D002               	goto	l1996
 28901                           
 28902                           ; BSR set to: 0
 28903                           ;fat16.c: 574: {;fat16.c: 576: return 0xFF;
 28904  001F3E  0EFF               	movlw	255
 28905                           
 28906                           ; BSR set to: 0
 28907  001F40  0012               	return	
 28908  001F42                     l1996:
 28909                           
 28910                           ; BSR set to: 0
 28911                           ;fat16.c: 577: };fat16.c: 580: position = 0;
 28912                           
 28913                           ; BSR set to: 0
 28914  001F42  0E00               	movlw	0
 28915  001F44  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 28916  001F46  0E00               	movlw	0
 28917  001F48  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 28918  001F4A  0E00               	movlw	0
 28919  001F4C  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 28920  001F4E  0E00               	movlw	0
 28921  001F50  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 28922                           
 28923                           ;fat16.c: 581: while((start_byte-position) >= 512)
 28924  001F52  D013               	goto	l1998
 28925  001F54                     l11677:
 28926                           
 28927                           ; BSR set to: 0
 28928                           ;fat16.c: 582: {;fat16.c: 583: cluster = _read_fat(cluster);
 28929  001F54  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 28930  001F58  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 28931  001F5C  EC01  F03B         	call	__read_fat	;wreg free
 28932  001F60  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 28933  001F64  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 28934                           
 28935                           ;fat16.c: 584: position += 512;
 28936  001F68  0E00               	movlw	0
 28937  001F6A  0100               	movlb	0	; () banked
 28938  001F6C  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 28939  001F6E  0E02               	movlw	2
 28940  001F70  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 28941  001F72  0E00               	movlw	0
 28942  001F74  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 28943  001F76  0E00               	movlw	0
 28944  001F78  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 28945  001F7A                     l1998:
 28946                           
 28947                           ; BSR set to: 0
 28948                           
 28949                           ; BSR set to: 0
 28950  001F7A  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28951  001F7E  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28952  001F82  C0E0  F04B         	movff	fat_read_from_file@position+2,??_fat_read_from_file+2
 28953  001F86  C0E1  F04C         	movff	fat_read_from_file@position+3,??_fat_read_from_file+3
 28954  001F8A  1E49               	comf	??_fat_read_from_file,f,c
 28955  001F8C  1E4A               	comf	??_fat_read_from_file+1,f,c
 28956  001F8E  1E4B               	comf	??_fat_read_from_file+2,f,c
 28957  001F90  1E4C               	comf	??_fat_read_from_file+3,f,c
 28958  001F92  2A49               	incf	??_fat_read_from_file,f,c
 28959  001F94  0E00               	movlw	0
 28960  001F96  224A               	addwfc	??_fat_read_from_file+1,f,c
 28961  001F98  224B               	addwfc	??_fat_read_from_file+2,f,c
 28962  001F9A  224C               	addwfc	??_fat_read_from_file+3,f,c
 28963  001F9C  503F               	movf	fat_read_from_file@start_byte,w,c
 28964  001F9E  2449               	addwf	??_fat_read_from_file,w,c
 28965  001FA0  6E4D               	movwf	(??_fat_read_from_file+4)& (0+255),c
 28966  001FA2  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28967  001FA4  204A               	addwfc	??_fat_read_from_file+1,w,c
 28968  001FA6  6E4E               	movwf	(??_fat_read_from_file+5)& (0+255),c
 28969  001FA8  5041               	movf	fat_read_from_file@start_byte+2,w,c
 28970  001FAA  204B               	addwfc	??_fat_read_from_file+2,w,c
 28971  001FAC  6E4F               	movwf	(??_fat_read_from_file+6)& (0+255),c
 28972  001FAE  5042               	movf	fat_read_from_file@start_byte+3,w,c
 28973  001FB0  204C               	addwfc	??_fat_read_from_file+3,w,c
 28974  001FB2  6E50               	movwf	(??_fat_read_from_file+7)& (0+255),c
 28975  001FB4  5050               	movf	??_fat_read_from_file+7,w,c
 28976  001FB6  104F               	iorwf	??_fat_read_from_file+6,w,c
 28977  001FB8  E1CD               	bnz	l11677
 28978  001FBA  0E02               	movlw	2
 28979  001FBC  5C4E               	subwf	??_fat_read_from_file+5,w,c
 28980  001FBE  B0D8               	btfsc	status,0,c
 28981  001FC0  D7C9               	goto	l1999
 28982                           
 28983                           ; BSR set to: 0
 28984                           ;fat16.c: 585: };fat16.c: 588: offset = start_byte - position;
 28985                           
 28986                           ; BSR set to: 0
 28987  001FC2  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 28988  001FC6  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 28989  001FCA  1E49               	comf	??_fat_read_from_file,f,c
 28990  001FCC  1E4A               	comf	??_fat_read_from_file+1,f,c
 28991  001FCE  4A49               	infsnz	??_fat_read_from_file,f,c
 28992  001FD0  2A4A               	incf	??_fat_read_from_file+1,f,c
 28993  001FD2  503F               	movf	fat_read_from_file@start_byte,w,c
 28994  001FD4  2449               	addwf	??_fat_read_from_file,w,c
 28995  001FD6  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 28996  001FD8  5040               	movf	fat_read_from_file@start_byte+1,w,c
 28997  001FDA  204A               	addwfc	??_fat_read_from_file+1,w,c
 28998  001FDC  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 28999                           
 29000                           ; BSR set to: 0
 29001                           ;fat16.c: 591: position = 0;
 29002  001FDE  0E00               	movlw	0
 29003  001FE0  6FDE               	movwf	fat_read_from_file@position& (0+255),b
 29004  001FE2  0E00               	movlw	0
 29005  001FE4  6FDF               	movwf	(fat_read_from_file@position+1)& (0+255),b
 29006  001FE6  0E00               	movlw	0
 29007  001FE8  6FE0               	movwf	(fat_read_from_file@position+2)& (0+255),b
 29008  001FEA  0E00               	movlw	0
 29009  001FEC  6FE1               	movwf	(fat_read_from_file@position+3)& (0+255),b
 29010                           
 29011                           ;fat16.c: 592: while(position < length)
 29012  001FEE  D089               	goto	l2001
 29013  001FF0                     
 29014                           ; BSR set to: 0
 29015                           ;fat16.c: 593: {;fat16.c: 595: if(offset==512)
 29016                           
 29017                           ; BSR set to: 0
 29018  001FF0  0E02               	movlw	2
 29019  001FF2  19DB               	xorwf	(fat_read_from_file@offset+1)& (0+255),w,b
 29020  001FF4  11DA               	iorwf	fat_read_from_file@offset& (0+255),w,b
 29021  001FF6  A4D8               	btfss	status,2,c
 29022  001FF8  D00F               	goto	l2003
 29023                           
 29024                           ; BSR set to: 0
 29025                           ;fat16.c: 596: {;fat16.c: 598: cluster = _read_fat(cluster);
 29026  001FFA  C0D8  F030         	movff	fat_read_from_file@cluster,__read_fat@cluster
 29027  001FFE  C0D9  F031         	movff	fat_read_from_file@cluster+1,__read_fat@cluster+1
 29028  002002  EC01  F03B         	call	__read_fat	;wreg free
 29029  002006  C030  F0D8         	movff	?__read_fat,fat_read_from_file@cluster
 29030  00200A  C031  F0D9         	movff	?__read_fat+1,fat_read_from_file@cluster+1
 29031                           
 29032                           ;fat16.c: 599: offset = 0;
 29033  00200E  0E00               	movlw	0
 29034  002010  0100               	movlb	0	; () banked
 29035  002012  6FDB               	movwf	(fat_read_from_file@offset+1)& (0+255),b
 29036  002014  0E00               	movlw	0
 29037  002016  6FDA               	movwf	fat_read_from_file@offset& (0+255),b
 29038  002018                     l2003:
 29039                           
 29040                           ; BSR set to: 0
 29041                           ;fat16.c: 600: };fat16.c: 603: sector = _sector_from_cluster(cluster);
 29042                           
 29043                           ; BSR set to: 0
 29044  002018  C0D8  F001         	movff	fat_read_from_file@cluster,__sector_from_cluster@fat_cluster
 29045  00201C  C0D9  F002         	movff	fat_read_from_file@cluster+1,__sector_from_cluster@fat_cluster+1
 29046  002020  ECB0  F03F         	call	__sector_from_cluster	;wreg free
 29047  002024  C001  F0B5         	movff	?__sector_from_cluster,fat_read_from_file@sector
 29048  002028  C002  F0B6         	movff	?__sector_from_cluster+1,fat_read_from_file@sector+1
 29049                           
 29050                           ;fat16.c: 606: read_length = 512 - offset;
 29051  00202C  C0DA  F049         	movff	fat_read_from_file@offset,??_fat_read_from_file
 29052  002030  C0DB  F04A         	movff	fat_read_from_file@offset+1,??_fat_read_from_file+1
 29053  002034  1E49               	comf	??_fat_read_from_file,f,c
 29054  002036  1E4A               	comf	??_fat_read_from_file+1,f,c
 29055  002038  4A49               	infsnz	??_fat_read_from_file,f,c
 29056  00203A  2A4A               	incf	??_fat_read_from_file+1,f,c
 29057  00203C  0E00               	movlw	0
 29058  00203E  2449               	addwf	??_fat_read_from_file,w,c
 29059  002040  0100               	movlb	0	; () banked
 29060  002042  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 29061  002044  0E02               	movlw	2
 29062  002046  204A               	addwfc	??_fat_read_from_file+1,w,c
 29063  002048  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 29064                           
 29065                           ; BSR set to: 0
 29066                           ;fat16.c: 607: if(read_length > (length-position))
 29067  00204A  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 29068  00204C  6E49               	movwf	??_fat_read_from_file& (0+255),c
 29069  00204E  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 29070  002050  6E4A               	movwf	(??_fat_read_from_file+1)& (0+255),c
 29071  002052  6A4B               	clrf	(??_fat_read_from_file+2)& (0+255),c
 29072  002054  6A4C               	clrf	(??_fat_read_from_file+3)& (0+255),c
 29073  002056  C0DE  F04D         	movff	fat_read_from_file@position,??_fat_read_from_file+4
 29074  00205A  C0DF  F04E         	movff	fat_read_from_file@position+1,??_fat_read_from_file+5
 29075  00205E  C0E0  F04F         	movff	fat_read_from_file@position+2,??_fat_read_from_file+6
 29076  002062  C0E1  F050         	movff	fat_read_from_file@position+3,??_fat_read_from_file+7
 29077  002066  1E4D               	comf	??_fat_read_from_file+4,f,c
 29078  002068  1E4E               	comf	??_fat_read_from_file+5,f,c
 29079  00206A  1E4F               	comf	??_fat_read_from_file+6,f,c
 29080  00206C  1E50               	comf	??_fat_read_from_file+7,f,c
 29081  00206E  2A4D               	incf	??_fat_read_from_file+4,f,c
 29082  002070  0E00               	movlw	0
 29083  002072  224E               	addwfc	??_fat_read_from_file+5,f,c
 29084  002074  224F               	addwfc	??_fat_read_from_file+6,f,c
 29085  002076  2250               	addwfc	??_fat_read_from_file+7,f,c
 29086  002078  5043               	movf	fat_read_from_file@length,w,c
 29087  00207A  244D               	addwf	??_fat_read_from_file+4,w,c
 29088  00207C  6E51               	movwf	(??_fat_read_from_file+8)& (0+255),c
 29089  00207E  5044               	movf	fat_read_from_file@length+1,w,c
 29090  002080  204E               	addwfc	??_fat_read_from_file+5,w,c
 29091  002082  6E52               	movwf	(??_fat_read_from_file+9)& (0+255),c
 29092  002084  5045               	movf	fat_read_from_file@length+2,w,c
 29093  002086  204F               	addwfc	??_fat_read_from_file+6,w,c
 29094  002088  6E53               	movwf	(??_fat_read_from_file+10)& (0+255),c
 29095  00208A  5046               	movf	fat_read_from_file@length+3,w,c
 29096  00208C  2050               	addwfc	??_fat_read_from_file+7,w,c
 29097  00208E  6E54               	movwf	(??_fat_read_from_file+11)& (0+255),c
 29098  002090  5049               	movf	??_fat_read_from_file,w,c
 29099  002092  5C51               	subwf	??_fat_read_from_file+8,w,c
 29100  002094  504A               	movf	??_fat_read_from_file+1,w,c
 29101  002096  5852               	subwfb	??_fat_read_from_file+9,w,c
 29102  002098  504B               	movf	??_fat_read_from_file+2,w,c
 29103  00209A  5853               	subwfb	??_fat_read_from_file+10,w,c
 29104  00209C  504C               	movf	??_fat_read_from_file+3,w,c
 29105  00209E  5854               	subwfb	??_fat_read_from_file+11,w,c
 29106  0020A0  B0D8               	btfsc	status,0,c
 29107  0020A2  D00E               	goto	l2004
 29108                           
 29109                           ; BSR set to: 0
 29110                           ;fat16.c: 608: {;fat16.c: 610: read_length = length - position;
 29111  0020A4  C0DE  F049         	movff	fat_read_from_file@position,??_fat_read_from_file
 29112  0020A8  C0DF  F04A         	movff	fat_read_from_file@position+1,??_fat_read_from_file+1
 29113  0020AC  1E49               	comf	??_fat_read_from_file,f,c
 29114  0020AE  1E4A               	comf	??_fat_read_from_file+1,f,c
 29115  0020B0  4A49               	infsnz	??_fat_read_from_file,f,c
 29116  0020B2  2A4A               	incf	??_fat_read_from_file+1,f,c
 29117  0020B4  5043               	movf	fat_read_from_file@length,w,c
 29118  0020B6  2449               	addwf	??_fat_read_from_file,w,c
 29119  0020B8  6FDC               	movwf	fat_read_from_file@read_length& (0+255),b
 29120  0020BA  5044               	movf	fat_read_from_file@length+1,w,c
 29121  0020BC  204A               	addwfc	??_fat_read_from_file+1,w,c
 29122  0020BE  6FDD               	movwf	(fat_read_from_file@read_length+1)& (0+255),b
 29123  0020C0                     l2004:
 29124                           
 29125                           ; BSR set to: 0
 29126                           ;fat16.c: 611: };fat16.c: 614: flash_partial_read(sector, offset, read_length, &data[pos
      +                          ition]);
 29127                           
 29128                           ; BSR set to: 0
 29129  0020C0  C0B5  F028         	movff	fat_read_from_file@sector,flash_partial_read@page
 29130  0020C4  C0B6  F029         	movff	fat_read_from_file@sector+1,flash_partial_read@page+1
 29131  0020C8  C0DA  F02A         	movff	fat_read_from_file@offset,flash_partial_read@start
 29132  0020CC  C0DB  F02B         	movff	fat_read_from_file@offset+1,flash_partial_read@start+1
 29133  0020D0  C0DC  F02C         	movff	fat_read_from_file@read_length,flash_partial_read@length
 29134  0020D4  C0DD  F02D         	movff	fat_read_from_file@read_length+1,flash_partial_read@length+1
 29135  0020D8  51DE               	movf	fat_read_from_file@position& (0+255),w,b
 29136  0020DA  2447               	addwf	fat_read_from_file@data,w,c
 29137  0020DC  6E2E               	movwf	flash_partial_read@data,c
 29138  0020DE  51DF               	movf	(fat_read_from_file@position+1)& (0+255),w,b
 29139  0020E0  2048               	addwfc	fat_read_from_file@data+1,w,c
 29140  0020E2  6E2F               	movwf	flash_partial_read@data+1,c
 29141  0020E4  EC66  F03D         	call	_flash_partial_read	;wreg free
 29142                           
 29143                           ;fat16.c: 617: position += read_length;
 29144  0020E8  0100               	movlb	0	; () banked
 29145  0020EA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 29146  0020EC  27DE               	addwf	fat_read_from_file@position& (0+255),f,b
 29147  0020EE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 29148  0020F0  23DF               	addwfc	(fat_read_from_file@position+1)& (0+255),f,b
 29149  0020F2  0E00               	movlw	0
 29150  0020F4  23E0               	addwfc	(fat_read_from_file@position+2)& (0+255),f,b
 29151  0020F6  0E00               	movlw	0
 29152  0020F8  23E1               	addwfc	(fat_read_from_file@position+3)& (0+255),f,b
 29153                           
 29154                           ; BSR set to: 0
 29155                           ;fat16.c: 618: offset += read_length;
 29156  0020FA  51DC               	movf	fat_read_from_file@read_length& (0+255),w,b
 29157  0020FC  27DA               	addwf	fat_read_from_file@offset& (0+255),f,b
 29158  0020FE  51DD               	movf	(fat_read_from_file@read_length+1)& (0+255),w,b
 29159  002100  23DB               	addwfc	(fat_read_from_file@offset+1)& (0+255),f,b
 29160  002102                     l2001:
 29161                           
 29162                           ; BSR set to: 0
 29163                           
 29164                           ; BSR set to: 0
 29165  002102  5043               	movf	fat_read_from_file@length,w,c
 29166  002104  5DDE               	subwf	fat_read_from_file@position& (0+255),w,b
 29167  002106  5044               	movf	fat_read_from_file@length+1,w,c
 29168  002108  59DF               	subwfb	(fat_read_from_file@position+1)& (0+255),w,b
 29169  00210A  5045               	movf	fat_read_from_file@length+2,w,c
 29170  00210C  59E0               	subwfb	(fat_read_from_file@position+2)& (0+255),w,b
 29171  00210E  5046               	movf	fat_read_from_file@length+3,w,c
 29172  002110  59E1               	subwfb	(fat_read_from_file@position+3)& (0+255),w,b
 29173  002112  A0D8               	btfss	status,0,c
 29174  002114  D76D               	goto	l2002
 29175                           
 29176                           ; BSR set to: 0
 29177                           ;fat16.c: 619: };fat16.c: 622: return 0x00;
 29178                           
 29179                           ; BSR set to: 0
 29180  002116  0E00               	movlw	0
 29181  002118  0012               	return	
 29182  00211A                     __end_of_fat_read_from_file:
 29183                           	opt stack 0
 29184                           tosu	equ	0xFFF
 29185                           tosh	equ	0xFFE
 29186                           tosl	equ	0xFFD
 29187                           pclath	equ	0xFFA
 29188                           tblptru	equ	0xFF8
 29189                           tblptrh	equ	0xFF7
 29190                           tblptrl	equ	0xFF6
 29191                           tablat	equ	0xFF5
 29192                           prodh	equ	0xFF4
 29193                           prodl	equ	0xFF3
 29194                           intcon	equ	0xFF2
 29195                           intcon2	equ	0xFF1
 29196                           intcon3	equ	0xFF0
 29197                           indf0	equ	0xFEF
 29198                           postinc0	equ	0xFEE
 29199                           fsr0h	equ	0xFEA
 29200                           fsr0l	equ	0xFE9
 29201                           wreg	equ	0xFE8
 29202                           indf1	equ	0xFE7
 29203                           postdec1	equ	0xFE5
 29204                           plusw1	equ	0xFE3
 29205                           fsr1h	equ	0xFE2
 29206                           fsr1l	equ	0xFE1
 29207                           indf2	equ	0xFDF
 29208                           postinc2	equ	0xFDE
 29209                           postdec2	equ	0xFDD
 29210                           plusw2	equ	0xFDB
 29211                           fsr2h	equ	0xFDA
 29212                           fsr2l	equ	0xFD9
 29213                           status	equ	0xFD8
 29214                           
 29215 ;; *************** function _fat_get_file_size *****************
 29216 ;; Defined at:
 29217 ;;		line 294 in file "fat16.c"
 29218 ;; Parameters:    Size  Location     Type
 29219 ;;  file_number     1    wreg     unsigned char 
 29220 ;; Auto vars:     Size  Location     Type
 29221 ;;  file_number     1   60[COMRAM] unsigned char 
 29222 ;;  file_size       4   54[COMRAM] unsigned long 
 29223 ;;  offset          2   58[COMRAM] unsigned int 
 29224 ;;  sector          2   52[COMRAM] unsigned int 
 29225 ;; Return value:  Size  Location     Type
 29226 ;;                  4   47[COMRAM] unsigned long 
 29227 ;; Registers used:
 29228 ;;		wreg, status,2, status,0, cstack
 29229 ;; Tracked objects:
 29230 ;;		On entry : 0/0
 29231 ;;		On exit  : 0/0
 29232 ;;		Unchanged: 0/0
 29233 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29234 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29235 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29236 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29237 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29238 ;;Total ram usage:       14 bytes
 29239 ;; Hardware stack levels used:    1
 29240 ;; Hardware stack levels required when called:    5
 29241 ;; This function calls:
 29242 ;;		_flash_partial_read
 29243 ;; This function is called by:
 29244 ;;		__bootloader_find_file
 29245 ;;		__bootloader_verify_file
 29246 ;;		__fill_buffer_read_file
 29247 ;; This function uses a non-reentrant model
 29248 ;;
 29249                           
 29250                           	psect	text131
 29251  0068D4                     __ptext131:
 29252                           	opt stack 0
 29253  0068D4                     _fat_get_file_size:
 29254                           	opt stack 23
 29255                           
 29256                           ; BSR set to: 0
 29257                           ;incstack = 0
 29258                           ;fat_get_file_size@file_number stored from wreg
 29259  0068D4  6E3D               	movwf	fat_get_file_size@file_number,c
 29260                           
 29261                           ;fat16.c: 296: uint16_t sector;;fat16.c: 297: uint16_t offset;;fat16.c: 298: uint32_t fi
      +                          le_size;;fat16.c: 299: sector = file_number >> 4;
 29262  0068D6  C03D  F034         	movff	fat_get_file_size@file_number,??_fat_get_file_size
 29263  0068DA  3A34               	swapf	??_fat_get_file_size,f,c
 29264  0068DC  0E0F               	movlw	15
 29265  0068DE  1634               	andwf	??_fat_get_file_size,f,c
 29266  0068E0  5034               	movf	??_fat_get_file_size,w,c
 29267  0068E2  6E35               	movwf	fat_get_file_size@sector,c
 29268  0068E4  6A36               	clrf	fat_get_file_size@sector+1,c
 29269                           
 29270                           ;fat16.c: 300: sector += 34;
 29271  0068E6  0E22               	movlw	34
 29272  0068E8  2635               	addwf	fat_get_file_size@sector,f,c
 29273  0068EA  0E00               	movlw	0
 29274  0068EC  2236               	addwfc	fat_get_file_size@sector+1,f,c
 29275                           
 29276                           ;fat16.c: 301: offset = file_number;
 29277  0068EE  C03D  F03B         	movff	fat_get_file_size@file_number,fat_get_file_size@offset
 29278  0068F2  6A3C               	clrf	fat_get_file_size@offset+1,c
 29279                           
 29280                           ;fat16.c: 302: offset <<= 5;
 29281  0068F4  0E05               	movlw	5
 29282  0068F6                     u8865:
 29283  0068F6  90D8               	bcf	status,0,c
 29284  0068F8  363B               	rlcf	fat_get_file_size@offset,f,c
 29285  0068FA  363C               	rlcf	fat_get_file_size@offset+1,f,c
 29286  0068FC  2EE8               	decfsz	wreg,f,c
 29287  0068FE  D7FB               	goto	u8865
 29288                           
 29289                           ;fat16.c: 303: offset &= 0b111111111;
 29290  006900  0EFF               	movlw	255
 29291  006902  163B               	andwf	fat_get_file_size@offset,f,c
 29292  006904  0E01               	movlw	1
 29293  006906  163C               	andwf	fat_get_file_size@offset+1,f,c
 29294                           
 29295                           ;fat16.c: 304: offset += 28;
 29296  006908  0E1C               	movlw	28
 29297  00690A  263B               	addwf	fat_get_file_size@offset,f,c
 29298  00690C  0E00               	movlw	0
 29299  00690E  223C               	addwfc	fat_get_file_size@offset+1,f,c
 29300                           
 29301                           ;fat16.c: 305: flash_partial_read(sector, offset, 4, &file_size);
 29302  006910  C035  F028         	movff	fat_get_file_size@sector,flash_partial_read@page
 29303  006914  C036  F029         	movff	fat_get_file_size@sector+1,flash_partial_read@page+1
 29304  006918  C03B  F02A         	movff	fat_get_file_size@offset,flash_partial_read@start
 29305  00691C  C03C  F02B         	movff	fat_get_file_size@offset+1,flash_partial_read@start+1
 29306  006920  0E00               	movlw	0
 29307  006922  6E2D               	movwf	flash_partial_read@length+1,c
 29308  006924  0E04               	movlw	4
 29309  006926  6E2C               	movwf	flash_partial_read@length,c
 29310  006928  0E37               	movlw	low fat_get_file_size@file_size
 29311  00692A  6E2E               	movwf	flash_partial_read@data,c
 29312  00692C  0E00               	movlw	high fat_get_file_size@file_size
 29313  00692E  6E2F               	movwf	flash_partial_read@data+1,c
 29314  006930  EC66  F03D         	call	_flash_partial_read	;wreg free
 29315                           
 29316                           ;fat16.c: 306: return file_size;
 29317  006934  C037  F030         	movff	fat_get_file_size@file_size,?_fat_get_file_size
 29318  006938  C038  F031         	movff	fat_get_file_size@file_size+1,?_fat_get_file_size+1
 29319  00693C  C039  F032         	movff	fat_get_file_size@file_size+2,?_fat_get_file_size+2
 29320  006940  C03A  F033         	movff	fat_get_file_size@file_size+3,?_fat_get_file_size+3
 29321  006944  0012               	return	
 29322  006946                     __end_of_fat_get_file_size:
 29323                           	opt stack 0
 29324                           tosu	equ	0xFFF
 29325                           tosh	equ	0xFFE
 29326                           tosl	equ	0xFFD
 29327                           pclath	equ	0xFFA
 29328                           tblptru	equ	0xFF8
 29329                           tblptrh	equ	0xFF7
 29330                           tblptrl	equ	0xFF6
 29331                           tablat	equ	0xFF5
 29332                           prodh	equ	0xFF4
 29333                           prodl	equ	0xFF3
 29334                           intcon	equ	0xFF2
 29335                           intcon2	equ	0xFF1
 29336                           intcon3	equ	0xFF0
 29337                           indf0	equ	0xFEF
 29338                           postinc0	equ	0xFEE
 29339                           fsr0h	equ	0xFEA
 29340                           fsr0l	equ	0xFE9
 29341                           wreg	equ	0xFE8
 29342                           indf1	equ	0xFE7
 29343                           postdec1	equ	0xFE5
 29344                           plusw1	equ	0xFE3
 29345                           fsr1h	equ	0xFE2
 29346                           fsr1l	equ	0xFE1
 29347                           indf2	equ	0xFDF
 29348                           postinc2	equ	0xFDE
 29349                           postdec2	equ	0xFDD
 29350                           plusw2	equ	0xFDB
 29351                           fsr2h	equ	0xFDA
 29352                           fsr2l	equ	0xFD9
 29353                           status	equ	0xFD8
 29354                           
 29355 ;; *************** function __fill_buffer_get_status *****************
 29356 ;; Defined at:
 29357 ;;		line 176 in file "api.c"
 29358 ;; Parameters:    Size  Location     Type
 29359 ;;  outBuffer       2   20[COMRAM] PTR unsigned char 
 29360 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29361 ;; Auto vars:     Size  Location     Type
 29362 ;;		None
 29363 ;; Return value:  Size  Location     Type
 29364 ;;                  1    wreg      void 
 29365 ;; Registers used:
 29366 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29367 ;; Tracked objects:
 29368 ;;		On entry : 0/0
 29369 ;;		On exit  : 0/0
 29370 ;;		Unchanged: 0/0
 29371 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29372 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29373 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29374 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29375 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29376 ;;Total ram usage:        2 bytes
 29377 ;; Hardware stack levels used:    1
 29378 ;; Hardware stack levels required when called:    4
 29379 ;; This function calls:
 29380 ;;		_flash_is_busy
 29381 ;;		_ui_get_status
 29382 ;; This function is called by:
 29383 ;;		_api_prepare
 29384 ;; This function uses a non-reentrant model
 29385 ;;
 29386                           
 29387                           	psect	text132
 29388  004CE0                     __ptext132:
 29389                           	opt stack 0
 29390  004CE0                     __fill_buffer_get_status:
 29391                           	opt stack 25
 29392                           
 29393                           ;api.c: 179: outBuffer[0] = DATAREQUEST_GET_STATUS;
 29394                           
 29395                           ;incstack = 0
 29396  004CE0  C015  FFD9         	movff	__fill_buffer_get_status@outBuffer,fsr2l
 29397  004CE4  C016  FFDA         	movff	__fill_buffer_get_status@outBuffer+1,fsr2h
 29398  004CE8  0E10               	movlw	16
 29399  004CEA  6EDF               	movwf	indf2,c
 29400                           
 29401                           ;api.c: 182: outBuffer[1] = 0xC125 >> 8;
 29402  004CEC  EE20 F001          	lfsr	2,1
 29403  004CF0  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29404  004CF2  26D9               	addwf	fsr2l,f,c
 29405  004CF4  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29406  004CF6  22DA               	addwfc	fsr2h,f,c
 29407  004CF8  0EC1               	movlw	193
 29408  004CFA  6EDF               	movwf	indf2,c
 29409                           
 29410                           ;api.c: 183: outBuffer[2] = (uint8_t) 0xC125;
 29411  004CFC  EE20 F002          	lfsr	2,2
 29412  004D00  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29413  004D02  26D9               	addwf	fsr2l,f,c
 29414  004D04  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29415  004D06  22DA               	addwfc	fsr2h,f,c
 29416  004D08  0E25               	movlw	37
 29417  004D0A  6EDF               	movwf	indf2,c
 29418                           
 29419                           ;api.c: 187: outBuffer[3] = (uint8_t) flash_is_busy();
 29420  004D0C  EE20 F003          	lfsr	2,3
 29421  004D10  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29422  004D12  26D9               	addwf	fsr2l,f,c
 29423  004D14  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29424  004D16  22DA               	addwfc	fsr2h,f,c
 29425  004D18  EC67  F03F         	call	_flash_is_busy	;wreg free
 29426  004D1C  6EDF               	movwf	indf2,c
 29427                           
 29428                           ;api.c: 190: outBuffer[4] = 0x00;
 29429  004D1E  EE20 F004          	lfsr	2,4
 29430  004D22  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29431  004D24  26D9               	addwf	fsr2l,f,c
 29432  004D26  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29433  004D28  22DA               	addwfc	fsr2h,f,c
 29434  004D2A  0E00               	movlw	0
 29435  004D2C  6EDF               	movwf	indf2,c
 29436                           
 29437                           ;api.c: 191: outBuffer[5] = 0x01;
 29438  004D2E  EE20 F005          	lfsr	2,5
 29439  004D32  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29440  004D34  26D9               	addwf	fsr2l,f,c
 29441  004D36  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29442  004D38  22DA               	addwfc	fsr2h,f,c
 29443  004D3A  0E01               	movlw	1
 29444  004D3C  6EDF               	movwf	indf2,c
 29445                           
 29446                           ;api.c: 192: outBuffer[6] = 0x00;
 29447  004D3E  EE20 F006          	lfsr	2,6
 29448  004D42  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29449  004D44  26D9               	addwf	fsr2l,f,c
 29450  004D46  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29451  004D48  22DA               	addwfc	fsr2h,f,c
 29452  004D4A  0E00               	movlw	0
 29453  004D4C  6EDF               	movwf	indf2,c
 29454                           
 29455                           ;api.c: 195: outBuffer[7] = ui_get_status();
 29456  004D4E  EE20 F007          	lfsr	2,7
 29457  004D52  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29458  004D54  26D9               	addwf	fsr2l,f,c
 29459  004D56  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29460  004D58  22DA               	addwfc	fsr2h,f,c
 29461  004D5A  EC14  F040         	call	_ui_get_status	;wreg free
 29462  004D5E  6EDF               	movwf	indf2,c
 29463                           
 29464                           ;api.c: 198: outBuffer[8] = os.encoderCount;
 29465  004D60  EE20 F008          	lfsr	2,8
 29466  004D64  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29467  004D66  26D9               	addwf	fsr2l,f,c
 29468  004D68  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29469  004D6A  22DA               	addwfc	fsr2h,f,c
 29470  004D6C  C060  FFDF         	movff	_os,indf2	;volatile
 29471                           
 29472                           ;api.c: 199: outBuffer[9] = os.buttonCount;
 29473  004D70  EE20 F009          	lfsr	2,9
 29474  004D74  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29475  004D76  26D9               	addwf	fsr2l,f,c
 29476  004D78  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29477  004D7A  22DA               	addwfc	fsr2h,f,c
 29478  004D7C  C061  FFDF         	movff	_os+1,indf2	;volatile
 29479                           
 29480                           ;api.c: 200: outBuffer[10] = os.timeSlot;
 29481  004D80  EE20 F00A          	lfsr	2,10
 29482  004D84  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29483  004D86  26D9               	addwf	fsr2l,f,c
 29484  004D88  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29485  004D8A  22DA               	addwfc	fsr2h,f,c
 29486  004D8C  C062  FFDF         	movff	_os+2,indf2	;volatile
 29487                           
 29488                           ;api.c: 201: outBuffer[11] = os.done;
 29489  004D90  EE20 F00B          	lfsr	2,11
 29490  004D94  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29491  004D96  26D9               	addwf	fsr2l,f,c
 29492  004D98  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29493  004D9A  22DA               	addwfc	fsr2h,f,c
 29494  004D9C  C063  FFDF         	movff	_os+3,indf2	;volatile
 29495                           
 29496                           ;api.c: 202: outBuffer[12] = os.bootloader_mode;
 29497  004DA0  EE20 F00C          	lfsr	2,12
 29498  004DA4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29499  004DA6  26D9               	addwf	fsr2l,f,c
 29500  004DA8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29501  004DAA  22DA               	addwfc	fsr2h,f,c
 29502  004DAC  C064  FFDF         	movff	_os+4,indf2	;volatile
 29503                           
 29504                           ;api.c: 203: outBuffer[13] = os.display_mode;
 29505  004DB0  EE20 F00D          	lfsr	2,13
 29506  004DB4  5015               	movf	__fill_buffer_get_status@outBuffer,w,c
 29507  004DB6  26D9               	addwf	fsr2l,f,c
 29508  004DB8  5016               	movf	__fill_buffer_get_status@outBuffer+1,w,c
 29509  004DBA  22DA               	addwfc	fsr2h,f,c
 29510  004DBC  C065  FFDF         	movff	_os+5,indf2	;volatile
 29511  004DC0  0012               	return		;funcret
 29512  004DC2                     __end_of__fill_buffer_get_status:
 29513                           	opt stack 0
 29514                           tosu	equ	0xFFF
 29515                           tosh	equ	0xFFE
 29516                           tosl	equ	0xFFD
 29517                           pclath	equ	0xFFA
 29518                           tblptru	equ	0xFF8
 29519                           tblptrh	equ	0xFF7
 29520                           tblptrl	equ	0xFF6
 29521                           tablat	equ	0xFF5
 29522                           prodh	equ	0xFF4
 29523                           prodl	equ	0xFF3
 29524                           intcon	equ	0xFF2
 29525                           intcon2	equ	0xFF1
 29526                           intcon3	equ	0xFF0
 29527                           indf0	equ	0xFEF
 29528                           postinc0	equ	0xFEE
 29529                           fsr0h	equ	0xFEA
 29530                           fsr0l	equ	0xFE9
 29531                           wreg	equ	0xFE8
 29532                           indf1	equ	0xFE7
 29533                           postdec1	equ	0xFE5
 29534                           plusw1	equ	0xFE3
 29535                           fsr1h	equ	0xFE2
 29536                           fsr1l	equ	0xFE1
 29537                           indf2	equ	0xFDF
 29538                           postinc2	equ	0xFDE
 29539                           postdec2	equ	0xFDD
 29540                           plusw2	equ	0xFDB
 29541                           fsr2h	equ	0xFDA
 29542                           fsr2l	equ	0xFD9
 29543                           status	equ	0xFD8
 29544                           
 29545 ;; *************** function _ui_get_status *****************
 29546 ;; Defined at:
 29547 ;;		line 86 in file "ui.c"
 29548 ;; Parameters:    Size  Location     Type
 29549 ;;		None
 29550 ;; Auto vars:     Size  Location     Type
 29551 ;;		None
 29552 ;; Return value:  Size  Location     Type
 29553 ;;                  1    wreg      enum E7921
 29554 ;; Registers used:
 29555 ;;		wreg, status,2
 29556 ;; Tracked objects:
 29557 ;;		On entry : 0/0
 29558 ;;		On exit  : 0/0
 29559 ;;		Unchanged: 0/0
 29560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29561 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29562 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29563 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29564 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29565 ;;Total ram usage:        0 bytes
 29566 ;; Hardware stack levels used:    1
 29567 ;; This function calls:
 29568 ;;		Nothing
 29569 ;; This function is called by:
 29570 ;;		_main
 29571 ;;		__fill_buffer_get_status
 29572 ;; This function uses a non-reentrant model
 29573 ;;
 29574                           
 29575                           	psect	text133
 29576  008028                     __ptext133:
 29577                           	opt stack 0
 29578  008028                     _ui_get_status:
 29579                           	opt stack 30
 29580                           
 29581                           ;ui.c: 88: return userInterfaceStatus;
 29582                           
 29583                           ;incstack = 0
 29584  008028  0100               	movlb	0	; () banked
 29585  00802A  5198               	movf	_userInterfaceStatus& (0+255),w,b
 29586  00802C  0012               	return	
 29587  00802E                     __end_of_ui_get_status:
 29588                           	opt stack 0
 29589                           tosu	equ	0xFFF
 29590                           tosh	equ	0xFFE
 29591                           tosl	equ	0xFFD
 29592                           pclath	equ	0xFFA
 29593                           tblptru	equ	0xFF8
 29594                           tblptrh	equ	0xFF7
 29595                           tblptrl	equ	0xFF6
 29596                           tablat	equ	0xFF5
 29597                           prodh	equ	0xFF4
 29598                           prodl	equ	0xFF3
 29599                           intcon	equ	0xFF2
 29600                           intcon2	equ	0xFF1
 29601                           intcon3	equ	0xFF0
 29602                           indf0	equ	0xFEF
 29603                           postinc0	equ	0xFEE
 29604                           fsr0h	equ	0xFEA
 29605                           fsr0l	equ	0xFE9
 29606                           wreg	equ	0xFE8
 29607                           indf1	equ	0xFE7
 29608                           postdec1	equ	0xFE5
 29609                           plusw1	equ	0xFE3
 29610                           fsr1h	equ	0xFE2
 29611                           fsr1l	equ	0xFE1
 29612                           indf2	equ	0xFDF
 29613                           postinc2	equ	0xFDE
 29614                           postdec2	equ	0xFDD
 29615                           plusw2	equ	0xFDB
 29616                           fsr2h	equ	0xFDA
 29617                           fsr2l	equ	0xFD9
 29618                           status	equ	0xFD8
 29619                           
 29620 ;; *************** function __fill_buffer_get_file_details *****************
 29621 ;; Defined at:
 29622 ;;		line 329 in file "api.c"
 29623 ;; Parameters:    Size  Location     Type
 29624 ;;  inBuffer        2   62[COMRAM] PTR unsigned char 
 29625 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 29626 ;;  outBuffer       2   64[COMRAM] PTR unsigned char 
 29627 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29628 ;; Auto vars:     Size  Location     Type
 29629 ;;  file_number     1   66[COMRAM] unsigned char 
 29630 ;; Return value:  Size  Location     Type
 29631 ;;                  1    wreg      void 
 29632 ;; Registers used:
 29633 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 29634 ;; Tracked objects:
 29635 ;;		On entry : 0/0
 29636 ;;		On exit  : 0/0
 29637 ;;		Unchanged: 0/0
 29638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29639 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29640 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29641 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29642 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29643 ;;Total ram usage:        5 bytes
 29644 ;; Hardware stack levels used:    1
 29645 ;; Hardware stack levels required when called:    7
 29646 ;; This function calls:
 29647 ;;		_fat_get_file_information
 29648 ;; This function is called by:
 29649 ;;		_api_prepare
 29650 ;; This function uses a non-reentrant model
 29651 ;;
 29652                           
 29653                           	psect	text134
 29654  006A94                     __ptext134:
 29655                           	opt stack 0
 29656  006A94                     __fill_buffer_get_file_details:
 29657                           	opt stack 22
 29658                           
 29659                           ;api.c: 331: uint8_t file_number = inBuffer[1];
 29660                           
 29661                           ; BSR set to: 0
 29662                           ;incstack = 0
 29663  006A94  EE20 F001          	lfsr	2,1
 29664  006A98  503F               	movf	__fill_buffer_get_file_details@inBuffer,w,c
 29665  006A9A  26D9               	addwf	fsr2l,f,c
 29666  006A9C  5040               	movf	__fill_buffer_get_file_details@inBuffer+1,w,c
 29667  006A9E  22DA               	addwfc	fsr2h,f,c
 29668  006AA0  50DF               	movf	indf2,w,c
 29669  006AA2  6E43               	movwf	__fill_buffer_get_file_details@file_number,c
 29670                           
 29671                           ;api.c: 334: outBuffer[0] = DATAREQUEST_GET_FILE_DETAILS;
 29672  006AA4  C041  FFD9         	movff	__fill_buffer_get_file_details@outBuffer,fsr2l
 29673  006AA8  C042  FFDA         	movff	__fill_buffer_get_file_details@outBuffer+1,fsr2h
 29674  006AAC  0E80               	movlw	128
 29675  006AAE  6EDF               	movwf	indf2,c
 29676                           
 29677                           ;api.c: 337: outBuffer[1] = 0xC125 >> 8;
 29678  006AB0  EE20 F001          	lfsr	2,1
 29679  006AB4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29680  006AB6  26D9               	addwf	fsr2l,f,c
 29681  006AB8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29682  006ABA  22DA               	addwfc	fsr2h,f,c
 29683  006ABC  0EC1               	movlw	193
 29684  006ABE  6EDF               	movwf	indf2,c
 29685                           
 29686                           ;api.c: 338: outBuffer[2] = (uint8_t) 0xC125;
 29687  006AC0  EE20 F002          	lfsr	2,2
 29688  006AC4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29689  006AC6  26D9               	addwf	fsr2l,f,c
 29690  006AC8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29691  006ACA  22DA               	addwfc	fsr2h,f,c
 29692  006ACC  0E25               	movlw	37
 29693  006ACE  6EDF               	movwf	indf2,c
 29694                           
 29695                           ;api.c: 341: outBuffer[3] = file_number;
 29696  006AD0  EE20 F003          	lfsr	2,3
 29697  006AD4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29698  006AD6  26D9               	addwf	fsr2l,f,c
 29699  006AD8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29700  006ADA  22DA               	addwfc	fsr2h,f,c
 29701  006ADC  C043  FFDF         	movff	__fill_buffer_get_file_details@file_number,indf2
 29702                           
 29703                           ;api.c: 344: outBuffer[4] = fat_get_file_information(file_number, (rootEntry_t*) &outBuf
      +                          fer[5]);
 29704  006AE0  EE20 F004          	lfsr	2,4
 29705  006AE4  5041               	movf	__fill_buffer_get_file_details@outBuffer,w,c
 29706  006AE6  26D9               	addwf	fsr2l,f,c
 29707  006AE8  5042               	movf	__fill_buffer_get_file_details@outBuffer+1,w,c
 29708  006AEA  22DA               	addwfc	fsr2h,f,c
 29709  006AEC  0E05               	movlw	5
 29710  006AEE  2441               	addwf	__fill_buffer_get_file_details@outBuffer,w,c
 29711  006AF0  6E37               	movwf	fat_get_file_information@data,c
 29712  006AF2  0E00               	movlw	0
 29713  006AF4  2042               	addwfc	__fill_buffer_get_file_details@outBuffer+1,w,c
 29714  006AF6  6E38               	movwf	fat_get_file_information@data+1,c
 29715  006AF8  5043               	movf	__fill_buffer_get_file_details@file_number,w,c
 29716  006AFA  ECF6  F033         	call	_fat_get_file_information
 29717  006AFE  6EDF               	movwf	indf2,c
 29718  006B00  0012               	return		;funcret
 29719  006B02                     __end_of__fill_buffer_get_file_details:
 29720                           	opt stack 0
 29721                           tosu	equ	0xFFF
 29722                           tosh	equ	0xFFE
 29723                           tosl	equ	0xFFD
 29724                           pclath	equ	0xFFA
 29725                           tblptru	equ	0xFF8
 29726                           tblptrh	equ	0xFF7
 29727                           tblptrl	equ	0xFF6
 29728                           tablat	equ	0xFF5
 29729                           prodh	equ	0xFF4
 29730                           prodl	equ	0xFF3
 29731                           intcon	equ	0xFF2
 29732                           intcon2	equ	0xFF1
 29733                           intcon3	equ	0xFF0
 29734                           indf0	equ	0xFEF
 29735                           postinc0	equ	0xFEE
 29736                           fsr0h	equ	0xFEA
 29737                           fsr0l	equ	0xFE9
 29738                           wreg	equ	0xFE8
 29739                           indf1	equ	0xFE7
 29740                           postdec1	equ	0xFE5
 29741                           plusw1	equ	0xFE3
 29742                           fsr1h	equ	0xFE2
 29743                           fsr1l	equ	0xFE1
 29744                           indf2	equ	0xFDF
 29745                           postinc2	equ	0xFDE
 29746                           postdec2	equ	0xFDD
 29747                           plusw2	equ	0xFDB
 29748                           fsr2h	equ	0xFDA
 29749                           fsr2l	equ	0xFD9
 29750                           status	equ	0xFD8
 29751                           
 29752 ;; *************** function __fill_buffer_get_display *****************
 29753 ;; Defined at:
 29754 ;;		line 207 in file "api.c"
 29755 ;; Parameters:    Size  Location     Type
 29756 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 29757 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 29758 ;;  secondHalf      1    6[COMRAM] unsigned char 
 29759 ;; Auto vars:     Size  Location     Type
 29760 ;;  position        1   15[COMRAM] unsigned char 
 29761 ;;  start_line      1   14[COMRAM] unsigned char 
 29762 ;;  line            1   13[COMRAM] unsigned char 
 29763 ;;  cntr            1   12[COMRAM] unsigned char 
 29764 ;; Return value:  Size  Location     Type
 29765 ;;                  1    wreg      void 
 29766 ;; Registers used:
 29767 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 29768 ;; Tracked objects:
 29769 ;;		On entry : 0/0
 29770 ;;		On exit  : 0/0
 29771 ;;		Unchanged: 0/0
 29772 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29773 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29774 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29775 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29776 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29777 ;;Total ram usage:       12 bytes
 29778 ;; Hardware stack levels used:    1
 29779 ;; Hardware stack levels required when called:    1
 29780 ;; This function calls:
 29781 ;;		_display_get_character
 29782 ;; This function is called by:
 29783 ;;		_api_prepare
 29784 ;; This function uses a non-reentrant model
 29785 ;;
 29786                           
 29787                           	psect	text135
 29788  005716                     __ptext135:
 29789                           	opt stack 0
 29790  005716                     __fill_buffer_get_display:
 29791                           	opt stack 28
 29792                           
 29793                           ;api.c: 209: uint8_t cntr;;api.c: 210: uint8_t line;;api.c: 211: uint8_t start_line;;api
      +                          .c: 212: uint8_t position;;api.c: 215: if(secondHalf)
 29794                           
 29795                           ;incstack = 0
 29796  005716  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29797  005718  B4D8               	btfsc	status,2,c
 29798  00571A  D006               	goto	l2577
 29799                           
 29800                           ;api.c: 216: {;api.c: 217: outBuffer[0] = DATAREQUEST_GET_DISPLAY_2;
 29801  00571C  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29802  005720  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29803  005724  0E12               	movlw	18
 29804  005726  D005               	goto	L32
 29805  005728                     l2577:
 29806                           
 29807                           ;api.c: 219: else;api.c: 220: {;api.c: 221: outBuffer[0] = DATAREQUEST_GET_DISPLAY_1;
 29808  005728  C005  FFD9         	movff	__fill_buffer_get_display@outBuffer,fsr2l
 29809  00572C  C006  FFDA         	movff	__fill_buffer_get_display@outBuffer+1,fsr2h
 29810  005730  0E11               	movlw	17
 29811  005732                     L32:
 29812  005732  6EDF               	movwf	indf2,c
 29813                           
 29814                           ;api.c: 222: };api.c: 225: outBuffer[1] = 0xC125 >> 8;
 29815  005734  EE20 F001          	lfsr	2,1
 29816  005738  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29817  00573A  26D9               	addwf	fsr2l,f,c
 29818  00573C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29819  00573E  22DA               	addwfc	fsr2h,f,c
 29820  005740  0EC1               	movlw	193
 29821  005742  6EDF               	movwf	indf2,c
 29822                           
 29823                           ;api.c: 226: outBuffer[2] = (uint8_t) 0xC125;
 29824  005744  EE20 F002          	lfsr	2,2
 29825  005748  5005               	movf	__fill_buffer_get_display@outBuffer,w,c
 29826  00574A  26D9               	addwf	fsr2l,f,c
 29827  00574C  5006               	movf	__fill_buffer_get_display@outBuffer+1,w,c
 29828  00574E  22DA               	addwfc	fsr2h,f,c
 29829  005750  0E25               	movlw	37
 29830  005752  6EDF               	movwf	indf2,c
 29831                           
 29832                           ;api.c: 229: cntr = 3;
 29833  005754  0E03               	movlw	3
 29834  005756  6E0D               	movwf	__fill_buffer_get_display@cntr,c
 29835                           
 29836                           ;api.c: 230: if(secondHalf)
 29837  005758  5007               	movf	__fill_buffer_get_display@secondHalf,w,c
 29838  00575A  B4D8               	btfsc	status,2,c
 29839  00575C  D002               	goto	l2579
 29840                           
 29841                           ;api.c: 231: {;api.c: 232: start_line = 2;
 29842  00575E  0E02               	movlw	2
 29843  005760  D001               	goto	L33
 29844  005762                     l2579:
 29845                           
 29846                           ;api.c: 234: else;api.c: 235: {;api.c: 236: start_line = 0;
 29847  005762  0E00               	movlw	0
 29848  005764                     L33:
 29849  005764  6E0F               	movwf	__fill_buffer_get_display@start_line,c
 29850                           
 29851                           ;api.c: 237: };api.c: 238: for(line=start_line; line<start_line+2; ++line)
 29852  005766  C00F  F00E         	movff	__fill_buffer_get_display@start_line,__fill_buffer_get_display@line
 29853  00576A  D01A               	goto	l2581
 29854  00576C                     
 29855                           ;api.c: 239: {;api.c: 240: for(position=0; position<20; ++position)
 29856  00576C  0E00               	movlw	0
 29857  00576E  6E10               	movwf	__fill_buffer_get_display@position,c
 29858  005770                     l13071:
 29859  005770  0E13               	movlw	19
 29860  005772  6410               	cpfsgt	__fill_buffer_get_display@position,c
 29861  005774  D001               	goto	l2583
 29862  005776  D013               	goto	u10010
 29863  005778                     l2583:
 29864                           
 29865                           ;api.c: 241: {;api.c: 242: outBuffer[cntr] = display_get_character(line, position);
 29866  005778  C010  F001         	movff	__fill_buffer_get_display@position,display_get_character@position
 29867  00577C  500E               	movf	__fill_buffer_get_display@line,w,c
 29868  00577E  EC1F  F03E         	call	_display_get_character
 29869  005782  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29870  005784  500D               	movf	__fill_buffer_get_display@cntr,w,c
 29871  005786  0D01               	mullw	1
 29872  005788  50F3               	movf	prodl,w,c
 29873  00578A  2405               	addwf	__fill_buffer_get_display@outBuffer,w,c
 29874  00578C  6ED9               	movwf	fsr2l,c
 29875  00578E  50F4               	movf	prodh,w,c
 29876  005790  2006               	addwfc	__fill_buffer_get_display@outBuffer+1,w,c
 29877  005792  6EDA               	movwf	fsr2h,c
 29878  005794  C008  FFDF         	movff	??__fill_buffer_get_display,indf2
 29879                           
 29880                           ;api.c: 243: ++cntr;
 29881  005798  2A0D               	incf	__fill_buffer_get_display@cntr,f,c
 29882  00579A  2A10               	incf	__fill_buffer_get_display@position,f,c
 29883  00579C  D7E9               	goto	l13071
 29884  00579E                     u10010:
 29885  00579E  2A0E               	incf	__fill_buffer_get_display@line,f,c
 29886  0057A0                     l2581:
 29887  0057A0  500F               	movf	__fill_buffer_get_display@start_line,w,c
 29888  0057A2  6E08               	movwf	??__fill_buffer_get_display& (0+255),c
 29889  0057A4  6A09               	clrf	(??__fill_buffer_get_display+1)& (0+255),c
 29890  0057A6  0E02               	movlw	2
 29891  0057A8  2608               	addwf	??__fill_buffer_get_display,f,c
 29892  0057AA  0E00               	movlw	0
 29893  0057AC  2209               	addwfc	??__fill_buffer_get_display+1,f,c
 29894  0057AE  500E               	movf	__fill_buffer_get_display@line,w,c
 29895  0057B0  6E0A               	movwf	(??__fill_buffer_get_display+2)& (0+255),c
 29896  0057B2  6A0B               	clrf	(??__fill_buffer_get_display+3)& (0+255),c
 29897  0057B4  5008               	movf	??__fill_buffer_get_display,w,c
 29898  0057B6  5C0A               	subwf	??__fill_buffer_get_display+2,w,c
 29899  0057B8  500B               	movf	??__fill_buffer_get_display+3,w,c
 29900  0057BA  0A80               	xorlw	128
 29901  0057BC  6E0C               	movwf	(??__fill_buffer_get_display+4)& (0+255),c
 29902  0057BE  5009               	movf	??__fill_buffer_get_display+1,w,c
 29903  0057C0  0A80               	xorlw	128
 29904  0057C2  580C               	subwfb	(??__fill_buffer_get_display+4)& (0+255),w,c
 29905  0057C4  B0D8               	btfsc	status,0,c
 29906  0057C6  0012               	return	
 29907  0057C8  D7D1               	goto	l2582
 29908  0057CA                     __end_of__fill_buffer_get_display:
 29909                           	opt stack 0
 29910                           tosu	equ	0xFFF
 29911                           tosh	equ	0xFFE
 29912                           tosl	equ	0xFFD
 29913                           pclath	equ	0xFFA
 29914                           tblptru	equ	0xFF8
 29915                           tblptrh	equ	0xFF7
 29916                           tblptrl	equ	0xFF6
 29917                           tablat	equ	0xFF5
 29918                           prodh	equ	0xFF4
 29919                           prodl	equ	0xFF3
 29920                           intcon	equ	0xFF2
 29921                           intcon2	equ	0xFF1
 29922                           intcon3	equ	0xFF0
 29923                           indf0	equ	0xFEF
 29924                           postinc0	equ	0xFEE
 29925                           fsr0h	equ	0xFEA
 29926                           fsr0l	equ	0xFE9
 29927                           wreg	equ	0xFE8
 29928                           indf1	equ	0xFE7
 29929                           postdec1	equ	0xFE5
 29930                           plusw1	equ	0xFE3
 29931                           fsr1h	equ	0xFE2
 29932                           fsr1l	equ	0xFE1
 29933                           indf2	equ	0xFDF
 29934                           postinc2	equ	0xFDE
 29935                           postdec2	equ	0xFDD
 29936                           plusw2	equ	0xFDB
 29937                           fsr2h	equ	0xFDA
 29938                           fsr2l	equ	0xFD9
 29939                           status	equ	0xFD8
 29940                           
 29941 ;; *************** function _display_get_character *****************
 29942 ;; Defined at:
 29943 ;;		line 67 in file "display.c"
 29944 ;; Parameters:    Size  Location     Type
 29945 ;;  line            1    wreg     unsigned char 
 29946 ;;  position        1    0[COMRAM] unsigned char 
 29947 ;; Auto vars:     Size  Location     Type
 29948 ;;  line            1    3[COMRAM] unsigned char 
 29949 ;; Return value:  Size  Location     Type
 29950 ;;                  1    wreg      unsigned char 
 29951 ;; Registers used:
 29952 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 29953 ;; Tracked objects:
 29954 ;;		On entry : 0/0
 29955 ;;		On exit  : 0/0
 29956 ;;		Unchanged: 0/0
 29957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 29958 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29959 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29960 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29961 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 29962 ;;Total ram usage:        4 bytes
 29963 ;; Hardware stack levels used:    1
 29964 ;; This function calls:
 29965 ;;		Nothing
 29966 ;; This function is called by:
 29967 ;;		__fill_buffer_get_display
 29968 ;; This function uses a non-reentrant model
 29969 ;;
 29970                           
 29971                           	psect	text136
 29972  007C3E                     __ptext136:
 29973                           	opt stack 0
 29974  007C3E                     _display_get_character:
 29975                           	opt stack 28
 29976                           
 29977                           ;incstack = 0
 29978                           ;display_get_character@line stored from wreg
 29979  007C3E  6E04               	movwf	display_get_character@line,c
 29980                           
 29981                           ;display.c: 69: return display_content[line][position];
 29982  007C40  5004               	movf	display_get_character@line,w,c
 29983  007C42  0D14               	mullw	20
 29984  007C44  0E76               	movlw	low _display_content
 29985  007C46  6E02               	movwf	??_display_get_character& (0+255),c
 29986  007C48  0E01               	movlw	high _display_content
 29987  007C4A  6E03               	movwf	(??_display_get_character+1)& (0+255),c
 29988  007C4C  50F3               	movf	prodl,w,c
 29989  007C4E  2602               	addwf	??_display_get_character,f,c
 29990  007C50  50F4               	movf	prodh,w,c
 29991  007C52  2203               	addwfc	??_display_get_character+1,f,c
 29992  007C54  5001               	movf	display_get_character@position,w,c
 29993  007C56  0D01               	mullw	1
 29994  007C58  50F3               	movf	prodl,w,c
 29995  007C5A  2402               	addwf	??_display_get_character,w,c
 29996  007C5C  6ED9               	movwf	fsr2l,c
 29997  007C5E  50F4               	movf	prodh,w,c
 29998  007C60  2003               	addwfc	??_display_get_character+1,w,c
 29999  007C62  6EDA               	movwf	fsr2h,c
 30000  007C64  50DF               	movf	indf2,w,c
 30001  007C66  0012               	return	
 30002  007C68                     __end_of_display_get_character:
 30003                           	opt stack 0
 30004                           tosu	equ	0xFFF
 30005                           tosh	equ	0xFFE
 30006                           tosl	equ	0xFFD
 30007                           pclath	equ	0xFFA
 30008                           tblptru	equ	0xFF8
 30009                           tblptrh	equ	0xFF7
 30010                           tblptrl	equ	0xFF6
 30011                           tablat	equ	0xFF5
 30012                           prodh	equ	0xFF4
 30013                           prodl	equ	0xFF3
 30014                           intcon	equ	0xFF2
 30015                           intcon2	equ	0xFF1
 30016                           intcon3	equ	0xFF0
 30017                           indf0	equ	0xFEF
 30018                           postinc0	equ	0xFEE
 30019                           fsr0h	equ	0xFEA
 30020                           fsr0l	equ	0xFE9
 30021                           wreg	equ	0xFE8
 30022                           indf1	equ	0xFE7
 30023                           postdec1	equ	0xFE5
 30024                           plusw1	equ	0xFE3
 30025                           fsr1h	equ	0xFE2
 30026                           fsr1l	equ	0xFE1
 30027                           indf2	equ	0xFDF
 30028                           postinc2	equ	0xFDE
 30029                           postdec2	equ	0xFDD
 30030                           plusw2	equ	0xFDB
 30031                           fsr2h	equ	0xFDA
 30032                           fsr2l	equ	0xFD9
 30033                           status	equ	0xFD8
 30034                           
 30035 ;; *************** function __fill_buffer_get_configuration *****************
 30036 ;; Defined at:
 30037 ;;		line 308 in file "api.c"
 30038 ;; Parameters:    Size  Location     Type
 30039 ;;  outBuffer       2    0[COMRAM] PTR unsigned char 
 30040 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 30041 ;; Auto vars:     Size  Location     Type
 30042 ;;		None
 30043 ;; Return value:  Size  Location     Type
 30044 ;;                  1    wreg      void 
 30045 ;; Registers used:
 30046 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 30047 ;; Tracked objects:
 30048 ;;		On entry : 0/0
 30049 ;;		On exit  : 0/0
 30050 ;;		Unchanged: 0/0
 30051 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30052 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30053 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30054 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30055 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30056 ;;Total ram usage:        2 bytes
 30057 ;; Hardware stack levels used:    1
 30058 ;; This function calls:
 30059 ;;		Nothing
 30060 ;; This function is called by:
 30061 ;;		_api_prepare
 30062 ;; This function uses a non-reentrant model
 30063 ;;
 30064                           
 30065                           	psect	text137
 30066  005DA8                     __ptext137:
 30067                           	opt stack 0
 30068  005DA8                     __fill_buffer_get_configuration:
 30069                           	opt stack 29
 30070                           
 30071                           ;api.c: 311: outBuffer[0] = DATAREQUEST_GET_STATUS;
 30072                           
 30073                           ;incstack = 0
 30074  005DA8  C001  FFD9         	movff	__fill_buffer_get_configuration@outBuffer,fsr2l
 30075  005DAC  C002  FFDA         	movff	__fill_buffer_get_configuration@outBuffer+1,fsr2h
 30076  005DB0  0E10               	movlw	16
 30077  005DB2  6EDF               	movwf	indf2,c
 30078                           
 30079                           ;api.c: 314: outBuffer[1] = 0xC125 >> 8;
 30080  005DB4  EE20 F001          	lfsr	2,1
 30081  005DB8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30082  005DBA  26D9               	addwf	fsr2l,f,c
 30083  005DBC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30084  005DBE  22DA               	addwfc	fsr2h,f,c
 30085  005DC0  0EC1               	movlw	193
 30086  005DC2  6EDF               	movwf	indf2,c
 30087                           
 30088                           ;api.c: 315: outBuffer[2] = (uint8_t) 0xC125;
 30089  005DC4  EE20 F002          	lfsr	2,2
 30090  005DC8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30091  005DCA  26D9               	addwf	fsr2l,f,c
 30092  005DCC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30093  005DCE  22DA               	addwfc	fsr2h,f,c
 30094  005DD0  0E25               	movlw	37
 30095  005DD2  6EDF               	movwf	indf2,c
 30096                           
 30097                           ;api.c: 318: outBuffer[3] = communicationSettings.spiMode;
 30098  005DD4  EE20 F003          	lfsr	2,3
 30099  005DD8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30100  005DDA  26D9               	addwf	fsr2l,f,c
 30101  005DDC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30102  005DDE  22DA               	addwfc	fsr2h,f,c
 30103  005DE0  C139  FFDF         	movff	_communicationSettings,indf2
 30104                           
 30105                           ;api.c: 319: outBuffer[4] = communicationSettings.spiFrequency;
 30106  005DE4  EE20 F004          	lfsr	2,4
 30107  005DE8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30108  005DEA  26D9               	addwf	fsr2l,f,c
 30109  005DEC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30110  005DEE  22DA               	addwfc	fsr2h,f,c
 30111  005DF0  C13A  FFDF         	movff	_communicationSettings+1,indf2
 30112                           
 30113                           ;api.c: 320: outBuffer[5] = communicationSettings.spiPolarity;
 30114  005DF4  EE20 F005          	lfsr	2,5
 30115  005DF8  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30116  005DFA  26D9               	addwf	fsr2l,f,c
 30117  005DFC  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30118  005DFE  22DA               	addwfc	fsr2h,f,c
 30119  005E00  C13B  FFDF         	movff	_communicationSettings+2,indf2
 30120                           
 30121                           ;api.c: 323: outBuffer[6] = communicationSettings.i2cMode;
 30122  005E04  EE20 F006          	lfsr	2,6
 30123  005E08  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30124  005E0A  26D9               	addwf	fsr2l,f,c
 30125  005E0C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30126  005E0E  22DA               	addwfc	fsr2h,f,c
 30127  005E10  C13C  FFDF         	movff	_communicationSettings+3,indf2
 30128                           
 30129                           ;api.c: 324: outBuffer[7] = communicationSettings.i2cFrequency;
 30130  005E14  EE20 F007          	lfsr	2,7
 30131  005E18  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30132  005E1A  26D9               	addwf	fsr2l,f,c
 30133  005E1C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30134  005E1E  22DA               	addwfc	fsr2h,f,c
 30135  005E20  C13D  FFDF         	movff	_communicationSettings+4,indf2
 30136                           
 30137                           ;api.c: 325: outBuffer[8] = communicationSettings.i2cSlaveModeSlaveAddress;
 30138  005E24  EE20 F008          	lfsr	2,8
 30139  005E28  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30140  005E2A  26D9               	addwf	fsr2l,f,c
 30141  005E2C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30142  005E2E  22DA               	addwfc	fsr2h,f,c
 30143  005E30  C13E  FFDF         	movff	_communicationSettings+5,indf2
 30144                           
 30145                           ;api.c: 326: outBuffer[9] = communicationSettings.i2cMasterModeSlaveAddress;
 30146  005E34  EE20 F009          	lfsr	2,9
 30147  005E38  5001               	movf	__fill_buffer_get_configuration@outBuffer,w,c
 30148  005E3A  26D9               	addwf	fsr2l,f,c
 30149  005E3C  5002               	movf	__fill_buffer_get_configuration@outBuffer+1,w,c
 30150  005E3E  22DA               	addwfc	fsr2h,f,c
 30151  005E40  C13F  FFDF         	movff	_communicationSettings+6,indf2
 30152  005E44  0012               	return		;funcret
 30153  005E46                     __end_of__fill_buffer_get_configuration:
 30154                           	opt stack 0
 30155                           tosu	equ	0xFFF
 30156                           tosh	equ	0xFFE
 30157                           tosl	equ	0xFFD
 30158                           pclath	equ	0xFFA
 30159                           tblptru	equ	0xFF8
 30160                           tblptrh	equ	0xFF7
 30161                           tblptrl	equ	0xFF6
 30162                           tablat	equ	0xFF5
 30163                           prodh	equ	0xFF4
 30164                           prodl	equ	0xFF3
 30165                           intcon	equ	0xFF2
 30166                           intcon2	equ	0xFF1
 30167                           intcon3	equ	0xFF0
 30168                           indf0	equ	0xFEF
 30169                           postinc0	equ	0xFEE
 30170                           fsr0h	equ	0xFEA
 30171                           fsr0l	equ	0xFE9
 30172                           wreg	equ	0xFE8
 30173                           indf1	equ	0xFE7
 30174                           postdec1	equ	0xFE5
 30175                           plusw1	equ	0xFE3
 30176                           fsr1h	equ	0xFE2
 30177                           fsr1l	equ	0xFE1
 30178                           indf2	equ	0xFDF
 30179                           postinc2	equ	0xFDE
 30180                           postdec2	equ	0xFDD
 30181                           plusw2	equ	0xFDB
 30182                           fsr2h	equ	0xFDA
 30183                           fsr2l	equ	0xFD9
 30184                           status	equ	0xFD8
 30185                           
 30186 ;; *************** function __fill_buffer_get_bootloader_details *****************
 30187 ;; Defined at:
 30188 ;;		line 248 in file "api.c"
 30189 ;; Parameters:    Size  Location     Type
 30190 ;;  outBuffer       2    4[COMRAM] PTR unsigned char 
 30191 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 30192 ;; Auto vars:     Size  Location     Type
 30193 ;;  buffer_large    4   11[COMRAM] unsigned long 
 30194 ;;  buffer_small    2   15[COMRAM] unsigned int 
 30195 ;;  cntr            1   10[COMRAM] unsigned char 
 30196 ;;  data_length     1    9[COMRAM] unsigned char 
 30197 ;; Return value:  Size  Location     Type
 30198 ;;                  1    wreg      void 
 30199 ;; Registers used:
 30200 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 30201 ;; Tracked objects:
 30202 ;;		On entry : 0/0
 30203 ;;		On exit  : 0/0
 30204 ;;		Unchanged: 0/0
 30205 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30206 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30207 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30208 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30209 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30210 ;;Total ram usage:       13 bytes
 30211 ;; Hardware stack levels used:    1
 30212 ;; Hardware stack levels required when called:    1
 30213 ;; This function calls:
 30214 ;;		_bootloader_get_entries
 30215 ;;		_bootloader_get_error
 30216 ;;		_bootloader_get_file_size
 30217 ;;		_bootloader_get_flashPagesWritten
 30218 ;;		_bootloader_get_rec_address
 30219 ;;		_bootloader_get_rec_checksum
 30220 ;;		_bootloader_get_rec_checksumCheck
 30221 ;;		_bootloader_get_rec_data
 30222 ;;		_bootloader_get_rec_dataLength
 30223 ;;		_bootloader_get_rec_recordType
 30224 ;;		_bootloader_get_total_entries
 30225 ;; This function is called by:
 30226 ;;		_api_prepare
 30227 ;; This function uses a non-reentrant model
 30228 ;;
 30229                           
 30230                           	psect	text138
 30231  00293E                     __ptext138:
 30232                           	opt stack 0
 30233  00293E                     __fill_buffer_get_bootloader_details:
 30234                           	opt stack 28
 30235                           
 30236                           ;api.c: 250: uint8_t cntr;;api.c: 251: uint8_t data_length;;api.c: 252: uint16_t buffer_
      +                          small;;api.c: 253: uint32_t buffer_large;;api.c: 256: outBuffer[0] = DATAREQUEST_GET_BOO
      +                          TLOADER_DETAILS;
 30237                           
 30238                           ;incstack = 0
 30239  00293E  C005  FFD9         	movff	__fill_buffer_get_bootloader_details@outBuffer,fsr2l
 30240  002942  C006  FFDA         	movff	__fill_buffer_get_bootloader_details@outBuffer+1,fsr2h
 30241  002946  0E13               	movlw	19
 30242  002948  6EDF               	movwf	indf2,c
 30243                           
 30244                           ;api.c: 259: outBuffer[1] = ((unsigned char)(((0xC125)>>8)&0xFF));
 30245  00294A  EE20 F001          	lfsr	2,1
 30246  00294E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30247  002950  26D9               	addwf	fsr2l,f,c
 30248  002952  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30249  002954  22DA               	addwfc	fsr2h,f,c
 30250  002956  0EC1               	movlw	193
 30251  002958  6EDF               	movwf	indf2,c
 30252                           
 30253                           ;api.c: 260: outBuffer[2] = ((unsigned char)((0xC125)&0xFF));
 30254  00295A  EE20 F002          	lfsr	2,2
 30255  00295E  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30256  002960  26D9               	addwf	fsr2l,f,c
 30257  002962  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30258  002964  22DA               	addwfc	fsr2h,f,c
 30259  002966  0E25               	movlw	37
 30260  002968  6EDF               	movwf	indf2,c
 30261                           
 30262                           ;api.c: 263: buffer_large = bootloader_get_file_size();
 30263  00296A  EC8F  F03F         	call	_bootloader_get_file_size	;wreg free
 30264  00296E  C001  F00C         	movff	?_bootloader_get_file_size,__fill_buffer_get_bootloader_details@buffer_large
 30265  002972  C002  F00D         	movff	?_bootloader_get_file_size+1,__fill_buffer_get_bootloader_details@buffer_large+1
 30266  002976  C003  F00E         	movff	?_bootloader_get_file_size+2,__fill_buffer_get_bootloader_details@buffer_large+2
 30267  00297A  C004  F00F         	movff	?_bootloader_get_file_size+3,__fill_buffer_get_bootloader_details@buffer_large+3
 30268                           
 30269                           ;api.c: 264: outBuffer[3] = ((unsigned char)(((((unsigned short)(((buffer_large)>>16)&0x
      +                          FFFF)))>>8)&0xFF));
 30270  00297E  EE20 F003          	lfsr	2,3
 30271  002982  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30272  002984  26D9               	addwf	fsr2l,f,c
 30273  002986  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30274  002988  22DA               	addwfc	fsr2h,f,c
 30275  00298A  500F               	movf	__fill_buffer_get_bootloader_details@buffer_large+3,w,c
 30276  00298C  6EDF               	movwf	indf2,c
 30277                           
 30278                           ;api.c: 265: outBuffer[4] = ((unsigned char)((((unsigned short)(((buffer_large)>>16)&0xF
      +                          FFF)))&0xFF));
 30279  00298E  EE20 F004          	lfsr	2,4
 30280  002992  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30281  002994  26D9               	addwf	fsr2l,f,c
 30282  002996  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30283  002998  22DA               	addwfc	fsr2h,f,c
 30284  00299A  C00E  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large+2,indf2
 30285                           
 30286                           ;api.c: 266: outBuffer[5] = ((unsigned char)(((((unsigned short)((buffer_large)&0xFFFF))
      +                          )>>8)&0xFF));
 30287  00299E  EE20 F005          	lfsr	2,5
 30288  0029A2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30289  0029A4  26D9               	addwf	fsr2l,f,c
 30290  0029A6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30291  0029A8  22DA               	addwfc	fsr2h,f,c
 30292  0029AA  500D               	movf	__fill_buffer_get_bootloader_details@buffer_large+1,w,c
 30293  0029AC  6EDF               	movwf	indf2,c
 30294                           
 30295                           ;api.c: 267: outBuffer[6] = ((unsigned char)((((unsigned short)((buffer_large)&0xFFFF)))
      +                          &0xFF));
 30296  0029AE  EE20 F006          	lfsr	2,6
 30297  0029B2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30298  0029B4  26D9               	addwf	fsr2l,f,c
 30299  0029B6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30300  0029B8  22DA               	addwfc	fsr2h,f,c
 30301  0029BA  C00C  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_large,indf2
 30302                           
 30303                           ;api.c: 269: buffer_small = bootloader_get_entries();
 30304  0029BE  ECF4  F03F         	call	_bootloader_get_entries	;wreg free
 30305  0029C2  C001  F010         	movff	?_bootloader_get_entries,__fill_buffer_get_bootloader_details@buffer_small
 30306  0029C6  C002  F011         	movff	?_bootloader_get_entries+1,__fill_buffer_get_bootloader_details@buffer_small+1
 30307                           
 30308                           ;api.c: 270: outBuffer[7] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 30309  0029CA  EE20 F007          	lfsr	2,7
 30310  0029CE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30311  0029D0  26D9               	addwf	fsr2l,f,c
 30312  0029D2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30313  0029D4  22DA               	addwfc	fsr2h,f,c
 30314  0029D6  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 30315  0029D8  6EDF               	movwf	indf2,c
 30316                           
 30317                           ;api.c: 271: outBuffer[8] = ((unsigned char)((buffer_small)&0xFF));
 30318  0029DA  EE20 F008          	lfsr	2,8
 30319  0029DE  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30320  0029E0  26D9               	addwf	fsr2l,f,c
 30321  0029E2  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30322  0029E4  22DA               	addwfc	fsr2h,f,c
 30323  0029E6  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 30324                           
 30325                           ;api.c: 273: buffer_small = bootloader_get_total_entries();
 30326  0029EA  ECE0  F03F         	call	_bootloader_get_total_entries	;wreg free
 30327  0029EE  C001  F010         	movff	?_bootloader_get_total_entries,__fill_buffer_get_bootloader_details@buffer_small
 30328  0029F2  C002  F011         	movff	?_bootloader_get_total_entries+1,__fill_buffer_get_bootloader_details@buffer_smal
      +                          l+1
 30329                           
 30330                           ;api.c: 274: outBuffer[9] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 30331  0029F6  EE20 F009          	lfsr	2,9
 30332  0029FA  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30333  0029FC  26D9               	addwf	fsr2l,f,c
 30334  0029FE  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30335  002A00  22DA               	addwfc	fsr2h,f,c
 30336  002A02  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 30337  002A04  6EDF               	movwf	indf2,c
 30338                           
 30339                           ;api.c: 275: outBuffer[10] = ((unsigned char)((buffer_small)&0xFF));
 30340  002A06  EE20 F00A          	lfsr	2,10
 30341  002A0A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30342  002A0C  26D9               	addwf	fsr2l,f,c
 30343  002A0E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30344  002A10  22DA               	addwfc	fsr2h,f,c
 30345  002A12  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 30346                           
 30347                           ;api.c: 277: outBuffer[11] = (uint8_t) bootloader_get_error();
 30348  002A16  EE20 F00B          	lfsr	2,11
 30349  002A1A  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30350  002A1C  26D9               	addwf	fsr2l,f,c
 30351  002A1E  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30352  002A20  22DA               	addwfc	fsr2h,f,c
 30353  002A22  EC20  F040         	call	_bootloader_get_error	;wreg free
 30354  002A26  6EDF               	movwf	indf2,c
 30355                           
 30356                           ;api.c: 279: buffer_small = bootloader_get_flashPagesWritten();
 30357  002A28  ECEF  F03F         	call	_bootloader_get_flashPagesWritten	;wreg free
 30358  002A2C  C001  F010         	movff	?_bootloader_get_flashPagesWritten,__fill_buffer_get_bootloader_details@buffer_sm
      +                          all
 30359  002A30  C002  F011         	movff	?_bootloader_get_flashPagesWritten+1,__fill_buffer_get_bootloader_details@buffer_
      +                          small+1
 30360                           
 30361                           ;api.c: 280: outBuffer[12] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 30362  002A34  EE20 F00C          	lfsr	2,12
 30363  002A38  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30364  002A3A  26D9               	addwf	fsr2l,f,c
 30365  002A3C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30366  002A3E  22DA               	addwfc	fsr2h,f,c
 30367  002A40  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 30368  002A42  6EDF               	movwf	indf2,c
 30369                           
 30370                           ;api.c: 281: outBuffer[13] = ((unsigned char)((buffer_small)&0xFF));
 30371  002A44  EE20 F00D          	lfsr	2,13
 30372  002A48  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30373  002A4A  26D9               	addwf	fsr2l,f,c
 30374  002A4C  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30375  002A4E  22DA               	addwfc	fsr2h,f,c
 30376  002A50  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 30377                           
 30378                           ;api.c: 284: buffer_small = bootloader_get_rec_dataLength();
 30379  002A54  ECE5  F03F         	call	_bootloader_get_rec_dataLength	;wreg free
 30380  002A58  C001  F010         	movff	?_bootloader_get_rec_dataLength,__fill_buffer_get_bootloader_details@buffer_small
 30381  002A5C  C002  F011         	movff	?_bootloader_get_rec_dataLength+1,__fill_buffer_get_bootloader_details@buffer_sma
      +                          ll+1
 30382                           
 30383                           ;api.c: 285: outBuffer[14] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 30384  002A60  EE20 F00E          	lfsr	2,14
 30385  002A64  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30386  002A66  26D9               	addwf	fsr2l,f,c
 30387  002A68  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30388  002A6A  22DA               	addwfc	fsr2h,f,c
 30389  002A6C  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 30390  002A6E  6EDF               	movwf	indf2,c
 30391                           
 30392                           ;api.c: 286: outBuffer[15] = ((unsigned char)((buffer_small)&0xFF));
 30393  002A70  EE20 F00F          	lfsr	2,15
 30394  002A74  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30395  002A76  26D9               	addwf	fsr2l,f,c
 30396  002A78  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30397  002A7A  22DA               	addwfc	fsr2h,f,c
 30398  002A7C  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 30399                           
 30400                           ;api.c: 288: buffer_small = bootloader_get_rec_address();
 30401  002A80  ECEA  F03F         	call	_bootloader_get_rec_address	;wreg free
 30402  002A84  C001  F010         	movff	?_bootloader_get_rec_address,__fill_buffer_get_bootloader_details@buffer_small
 30403  002A88  C002  F011         	movff	?_bootloader_get_rec_address+1,__fill_buffer_get_bootloader_details@buffer_small+
      +                          1
 30404                           
 30405                           ;api.c: 289: outBuffer[16] = ((unsigned char)(((buffer_small)>>8)&0xFF));
 30406  002A8C  EE20 F010          	lfsr	2,16
 30407  002A90  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30408  002A92  26D9               	addwf	fsr2l,f,c
 30409  002A94  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30410  002A96  22DA               	addwfc	fsr2h,f,c
 30411  002A98  5011               	movf	__fill_buffer_get_bootloader_details@buffer_small+1,w,c
 30412  002A9A  6EDF               	movwf	indf2,c
 30413                           
 30414                           ;api.c: 290: outBuffer[17] = ((unsigned char)((buffer_small)&0xFF));
 30415  002A9C  EE20 F011          	lfsr	2,17
 30416  002AA0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30417  002AA2  26D9               	addwf	fsr2l,f,c
 30418  002AA4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30419  002AA6  22DA               	addwfc	fsr2h,f,c
 30420  002AA8  C010  FFDF         	movff	__fill_buffer_get_bootloader_details@buffer_small,indf2
 30421                           
 30422                           ;api.c: 292: outBuffer[18] = (uint8_t) bootloader_get_rec_recordType();
 30423  002AAC  EE20 F012          	lfsr	2,18
 30424  002AB0  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30425  002AB2  26D9               	addwf	fsr2l,f,c
 30426  002AB4  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30427  002AB6  22DA               	addwfc	fsr2h,f,c
 30428  002AB8  EC17  F040         	call	_bootloader_get_rec_recordType	;wreg free
 30429  002ABC  6EDF               	movwf	indf2,c
 30430                           
 30431                           ;api.c: 293: outBuffer[19] = bootloader_get_rec_checksum();
 30432  002ABE  EE20 F013          	lfsr	2,19
 30433  002AC2  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30434  002AC4  26D9               	addwf	fsr2l,f,c
 30435  002AC6  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30436  002AC8  22DA               	addwfc	fsr2h,f,c
 30437  002ACA  EC1D  F040         	call	_bootloader_get_rec_checksum	;wreg free
 30438  002ACE  6EDF               	movwf	indf2,c
 30439                           
 30440                           ;api.c: 294: outBuffer[20] = bootloader_get_rec_checksumCheck();
 30441  002AD0  EE20 F014          	lfsr	2,20
 30442  002AD4  5005               	movf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30443  002AD6  26D9               	addwf	fsr2l,f,c
 30444  002AD8  5006               	movf	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30445  002ADA  22DA               	addwfc	fsr2h,f,c
 30446  002ADC  EC1A  F040         	call	_bootloader_get_rec_checksumCheck	;wreg free
 30447  002AE0  6EDF               	movwf	indf2,c
 30448                           
 30449                           ;api.c: 296: data_length = (uint8_t) bootloader_get_rec_dataLength();
 30450  002AE2  ECE5  F03F         	call	_bootloader_get_rec_dataLength	;wreg free
 30451  002AE6  5001               	movf	?_bootloader_get_rec_dataLength,w,c
 30452  002AE8  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 30453                           
 30454                           ;api.c: 297: if(data_length>43)
 30455  002AEA  0E2B               	movlw	43
 30456  002AEC  640A               	cpfsgt	__fill_buffer_get_bootloader_details@data_length,c
 30457  002AEE  D002               	goto	l2589
 30458                           
 30459                           ;api.c: 298: {;api.c: 300: data_length = 43;
 30460  002AF0  0E2B               	movlw	43
 30461  002AF2  6E0A               	movwf	__fill_buffer_get_bootloader_details@data_length,c
 30462  002AF4                     l2589:
 30463                           
 30464                           ;api.c: 301: };api.c: 302: for(cntr=0; cntr<data_length; ++cntr)
 30465  002AF4  0E00               	movlw	0
 30466  002AF6  6E0B               	movwf	__fill_buffer_get_bootloader_details@cntr,c
 30467  002AF8  D014               	goto	l2590
 30468  002AFA                     
 30469                           ;api.c: 303: {;api.c: 304: outBuffer[21+cntr] = bootloader_get_rec_data(cntr);
 30470  002AFA  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 30471  002AFC  EC5C  F03F         	call	_bootloader_get_rec_data
 30472  002B00  6E07               	movwf	??__fill_buffer_get_bootloader_details& (0+255),c
 30473  002B02  500B               	movf	__fill_buffer_get_bootloader_details@cntr,w,c
 30474  002B04  6E08               	movwf	(??__fill_buffer_get_bootloader_details+1)& (0+255),c
 30475  002B06  6A09               	clrf	(??__fill_buffer_get_bootloader_details+2)& (0+255),c
 30476  002B08  0E15               	movlw	21
 30477  002B0A  2608               	addwf	??__fill_buffer_get_bootloader_details+1,f,c
 30478  002B0C  0E00               	movlw	0
 30479  002B0E  2209               	addwfc	??__fill_buffer_get_bootloader_details+2,f,c
 30480  002B10  5008               	movf	??__fill_buffer_get_bootloader_details+1,w,c
 30481  002B12  2405               	addwf	__fill_buffer_get_bootloader_details@outBuffer,w,c
 30482  002B14  6ED9               	movwf	fsr2l,c
 30483  002B16  5009               	movf	??__fill_buffer_get_bootloader_details+2,w,c
 30484  002B18  2006               	addwfc	__fill_buffer_get_bootloader_details@outBuffer+1,w,c
 30485  002B1A  6EDA               	movwf	fsr2h,c
 30486  002B1C  C007  FFDF         	movff	??__fill_buffer_get_bootloader_details,indf2
 30487  002B20  2A0B               	incf	__fill_buffer_get_bootloader_details@cntr,f,c
 30488  002B22                     l2590:
 30489  002B22  500A               	movf	__fill_buffer_get_bootloader_details@data_length,w,c
 30490  002B24  5C0B               	subwf	__fill_buffer_get_bootloader_details@cntr,w,c
 30491  002B26  B0D8               	btfsc	status,0,c
 30492  002B28  0012               	return	
 30493  002B2A  D7E7               	goto	l2591
 30494  002B2C                     __end_of__fill_buffer_get_bootloader_details:
 30495                           	opt stack 0
 30496                           tosu	equ	0xFFF
 30497                           tosh	equ	0xFFE
 30498                           tosl	equ	0xFFD
 30499                           pclath	equ	0xFFA
 30500                           tblptru	equ	0xFF8
 30501                           tblptrh	equ	0xFF7
 30502                           tblptrl	equ	0xFF6
 30503                           tablat	equ	0xFF5
 30504                           prodh	equ	0xFF4
 30505                           prodl	equ	0xFF3
 30506                           intcon	equ	0xFF2
 30507                           intcon2	equ	0xFF1
 30508                           intcon3	equ	0xFF0
 30509                           indf0	equ	0xFEF
 30510                           postinc0	equ	0xFEE
 30511                           fsr0h	equ	0xFEA
 30512                           fsr0l	equ	0xFE9
 30513                           wreg	equ	0xFE8
 30514                           indf1	equ	0xFE7
 30515                           postdec1	equ	0xFE5
 30516                           plusw1	equ	0xFE3
 30517                           fsr1h	equ	0xFE2
 30518                           fsr1l	equ	0xFE1
 30519                           indf2	equ	0xFDF
 30520                           postinc2	equ	0xFDE
 30521                           postdec2	equ	0xFDD
 30522                           plusw2	equ	0xFDB
 30523                           fsr2h	equ	0xFDA
 30524                           fsr2l	equ	0xFD9
 30525                           status	equ	0xFD8
 30526                           
 30527 ;; *************** function _bootloader_get_total_entries *****************
 30528 ;; Defined at:
 30529 ;;		line 437 in file "bootloader.c"
 30530 ;; Parameters:    Size  Location     Type
 30531 ;;		None
 30532 ;; Auto vars:     Size  Location     Type
 30533 ;;		None
 30534 ;; Return value:  Size  Location     Type
 30535 ;;                  2    0[COMRAM] unsigned int 
 30536 ;; Registers used:
 30537 ;;		None
 30538 ;; Tracked objects:
 30539 ;;		On entry : 0/0
 30540 ;;		On exit  : 0/0
 30541 ;;		Unchanged: 0/0
 30542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30543 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30544 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30545 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30546 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30547 ;;Total ram usage:        2 bytes
 30548 ;; Hardware stack levels used:    1
 30549 ;; This function calls:
 30550 ;;		Nothing
 30551 ;; This function is called by:
 30552 ;;		__display_checked
 30553 ;;		__display_programming
 30554 ;;		__fill_buffer_get_bootloader_details
 30555 ;; This function uses a non-reentrant model
 30556 ;;
 30557                           
 30558                           	psect	text139
 30559  007FC0                     __ptext139:
 30560                           	opt stack 0
 30561  007FC0                     _bootloader_get_total_entries:
 30562                           	opt stack 28
 30563                           
 30564                           ;bootloader.c: 439: return total_hex_file_entries;
 30565                           
 30566                           ;incstack = 0
 30567  007FC0  C168  F001         	movff	_total_hex_file_entries,?_bootloader_get_total_entries
 30568  007FC4  C169  F002         	movff	_total_hex_file_entries+1,?_bootloader_get_total_entries+1
 30569  007FC8  0012               	return		;funcret
 30570  007FCA                     __end_of_bootloader_get_total_entries:
 30571                           	opt stack 0
 30572                           tosu	equ	0xFFF
 30573                           tosh	equ	0xFFE
 30574                           tosl	equ	0xFFD
 30575                           pclath	equ	0xFFA
 30576                           tblptru	equ	0xFF8
 30577                           tblptrh	equ	0xFF7
 30578                           tblptrl	equ	0xFF6
 30579                           tablat	equ	0xFF5
 30580                           prodh	equ	0xFF4
 30581                           prodl	equ	0xFF3
 30582                           intcon	equ	0xFF2
 30583                           intcon2	equ	0xFF1
 30584                           intcon3	equ	0xFF0
 30585                           indf0	equ	0xFEF
 30586                           postinc0	equ	0xFEE
 30587                           fsr0h	equ	0xFEA
 30588                           fsr0l	equ	0xFE9
 30589                           wreg	equ	0xFE8
 30590                           indf1	equ	0xFE7
 30591                           postdec1	equ	0xFE5
 30592                           plusw1	equ	0xFE3
 30593                           fsr1h	equ	0xFE2
 30594                           fsr1l	equ	0xFE1
 30595                           indf2	equ	0xFDF
 30596                           postinc2	equ	0xFDE
 30597                           postdec2	equ	0xFDD
 30598                           plusw2	equ	0xFDB
 30599                           fsr2h	equ	0xFDA
 30600                           fsr2l	equ	0xFD9
 30601                           status	equ	0xFD8
 30602                           
 30603 ;; *************** function _bootloader_get_rec_recordType *****************
 30604 ;; Defined at:
 30605 ;;		line 458 in file "bootloader.c"
 30606 ;; Parameters:    Size  Location     Type
 30607 ;;		None
 30608 ;; Auto vars:     Size  Location     Type
 30609 ;;		None
 30610 ;; Return value:  Size  Location     Type
 30611 ;;                  1    wreg      enum E6765
 30612 ;; Registers used:
 30613 ;;		wreg, status,2
 30614 ;; Tracked objects:
 30615 ;;		On entry : 0/0
 30616 ;;		On exit  : 0/0
 30617 ;;		Unchanged: 0/0
 30618 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30619 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30620 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30621 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30622 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30623 ;;Total ram usage:        0 bytes
 30624 ;; Hardware stack levels used:    1
 30625 ;; This function calls:
 30626 ;;		Nothing
 30627 ;; This function is called by:
 30628 ;;		__fill_buffer_get_bootloader_details
 30629 ;; This function uses a non-reentrant model
 30630 ;;
 30631                           
 30632                           	psect	text140
 30633  00802E                     __ptext140:
 30634                           	opt stack 0
 30635  00802E                     _bootloader_get_rec_recordType:
 30636                           	opt stack 28
 30637                           
 30638                           ;bootloader.c: 460: return hex_file_entry.recordType;
 30639                           
 30640                           ;incstack = 0
 30641  00802E  0101               	movlb	1	; () banked
 30642  008030  51CA               	movf	(_hex_file_entry+4)& (0+255),w,b
 30643  008032  0012               	return	
 30644  008034                     __end_of_bootloader_get_rec_recordType:
 30645                           	opt stack 0
 30646                           tosu	equ	0xFFF
 30647                           tosh	equ	0xFFE
 30648                           tosl	equ	0xFFD
 30649                           pclath	equ	0xFFA
 30650                           tblptru	equ	0xFF8
 30651                           tblptrh	equ	0xFF7
 30652                           tblptrl	equ	0xFF6
 30653                           tablat	equ	0xFF5
 30654                           prodh	equ	0xFF4
 30655                           prodl	equ	0xFF3
 30656                           intcon	equ	0xFF2
 30657                           intcon2	equ	0xFF1
 30658                           intcon3	equ	0xFF0
 30659                           indf0	equ	0xFEF
 30660                           postinc0	equ	0xFEE
 30661                           fsr0h	equ	0xFEA
 30662                           fsr0l	equ	0xFE9
 30663                           wreg	equ	0xFE8
 30664                           indf1	equ	0xFE7
 30665                           postdec1	equ	0xFE5
 30666                           plusw1	equ	0xFE3
 30667                           fsr1h	equ	0xFE2
 30668                           fsr1l	equ	0xFE1
 30669                           indf2	equ	0xFDF
 30670                           postinc2	equ	0xFDE
 30671                           postdec2	equ	0xFDD
 30672                           plusw2	equ	0xFDB
 30673                           fsr2h	equ	0xFDA
 30674                           fsr2l	equ	0xFD9
 30675                           status	equ	0xFD8
 30676                           
 30677 ;; *************** function _bootloader_get_rec_dataLength *****************
 30678 ;; Defined at:
 30679 ;;		line 447 in file "bootloader.c"
 30680 ;; Parameters:    Size  Location     Type
 30681 ;;		None
 30682 ;; Auto vars:     Size  Location     Type
 30683 ;;		None
 30684 ;; Return value:  Size  Location     Type
 30685 ;;                  2    0[COMRAM] unsigned int 
 30686 ;; Registers used:
 30687 ;;		None
 30688 ;; Tracked objects:
 30689 ;;		On entry : 0/0
 30690 ;;		On exit  : 0/0
 30691 ;;		Unchanged: 0/0
 30692 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30693 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30694 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30695 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30696 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30697 ;;Total ram usage:        2 bytes
 30698 ;; Hardware stack levels used:    1
 30699 ;; This function calls:
 30700 ;;		Nothing
 30701 ;; This function is called by:
 30702 ;;		__fill_buffer_get_bootloader_details
 30703 ;; This function uses a non-reentrant model
 30704 ;;
 30705                           
 30706                           	psect	text141
 30707  007FCA                     __ptext141:
 30708                           	opt stack 0
 30709  007FCA                     _bootloader_get_rec_dataLength:
 30710                           	opt stack 28
 30711                           
 30712                           ;bootloader.c: 449: return hex_file_entry.dataLength;
 30713                           
 30714                           ; BSR set to: 1
 30715                           ;incstack = 0
 30716  007FCA  C1C6  F001         	movff	_hex_file_entry,?_bootloader_get_rec_dataLength
 30717  007FCE  C1C7  F002         	movff	_hex_file_entry+1,?_bootloader_get_rec_dataLength+1
 30718  007FD2  0012               	return		;funcret
 30719  007FD4                     __end_of_bootloader_get_rec_dataLength:
 30720                           	opt stack 0
 30721                           tosu	equ	0xFFF
 30722                           tosh	equ	0xFFE
 30723                           tosl	equ	0xFFD
 30724                           pclath	equ	0xFFA
 30725                           tblptru	equ	0xFF8
 30726                           tblptrh	equ	0xFF7
 30727                           tblptrl	equ	0xFF6
 30728                           tablat	equ	0xFF5
 30729                           prodh	equ	0xFF4
 30730                           prodl	equ	0xFF3
 30731                           intcon	equ	0xFF2
 30732                           intcon2	equ	0xFF1
 30733                           intcon3	equ	0xFF0
 30734                           indf0	equ	0xFEF
 30735                           postinc0	equ	0xFEE
 30736                           fsr0h	equ	0xFEA
 30737                           fsr0l	equ	0xFE9
 30738                           wreg	equ	0xFE8
 30739                           indf1	equ	0xFE7
 30740                           postdec1	equ	0xFE5
 30741                           plusw1	equ	0xFE3
 30742                           fsr1h	equ	0xFE2
 30743                           fsr1l	equ	0xFE1
 30744                           indf2	equ	0xFDF
 30745                           postinc2	equ	0xFDE
 30746                           postdec2	equ	0xFDD
 30747                           plusw2	equ	0xFDB
 30748                           fsr2h	equ	0xFDA
 30749                           fsr2l	equ	0xFD9
 30750                           status	equ	0xFD8
 30751                           
 30752 ;; *************** function _bootloader_get_rec_data *****************
 30753 ;; Defined at:
 30754 ;;		line 463 in file "bootloader.c"
 30755 ;; Parameters:    Size  Location     Type
 30756 ;;  index           1    wreg     unsigned char 
 30757 ;; Auto vars:     Size  Location     Type
 30758 ;;  index           1    0[COMRAM] unsigned char 
 30759 ;; Return value:  Size  Location     Type
 30760 ;;                  1    wreg      unsigned char 
 30761 ;; Registers used:
 30762 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 30763 ;; Tracked objects:
 30764 ;;		On entry : 0/0
 30765 ;;		On exit  : 0/0
 30766 ;;		Unchanged: 0/0
 30767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30768 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30771 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30772 ;;Total ram usage:        1 bytes
 30773 ;; Hardware stack levels used:    1
 30774 ;; This function calls:
 30775 ;;		Nothing
 30776 ;; This function is called by:
 30777 ;;		__fill_buffer_get_bootloader_details
 30778 ;; This function uses a non-reentrant model
 30779 ;;
 30780                           
 30781                           	psect	text142
 30782  007EB8                     __ptext142:
 30783                           	opt stack 0
 30784  007EB8                     _bootloader_get_rec_data:
 30785                           	opt stack 28
 30786                           
 30787                           ;incstack = 0
 30788                           ;bootloader_get_rec_data@index stored from wreg
 30789  007EB8  6E01               	movwf	bootloader_get_rec_data@index,c
 30790                           
 30791                           ;bootloader.c: 465: return hex_file_entry.data[index];
 30792  007EBA  5001               	movf	bootloader_get_rec_data@index,w,c
 30793  007EBC  0D01               	mullw	1
 30794  007EBE  0ECB               	movlw	low (_hex_file_entry+5)
 30795  007EC0  24F3               	addwf	prodl,w,c
 30796  007EC2  6ED9               	movwf	fsr2l,c
 30797  007EC4  0E01               	movlw	high (_hex_file_entry+5)
 30798  007EC6  20F4               	addwfc	prodh,w,c
 30799  007EC8  6EDA               	movwf	fsr2h,c
 30800  007ECA  50DF               	movf	indf2,w,c
 30801  007ECC  0012               	return	
 30802  007ECE                     __end_of_bootloader_get_rec_data:
 30803                           	opt stack 0
 30804                           tosu	equ	0xFFF
 30805                           tosh	equ	0xFFE
 30806                           tosl	equ	0xFFD
 30807                           pclath	equ	0xFFA
 30808                           tblptru	equ	0xFF8
 30809                           tblptrh	equ	0xFF7
 30810                           tblptrl	equ	0xFF6
 30811                           tablat	equ	0xFF5
 30812                           prodh	equ	0xFF4
 30813                           prodl	equ	0xFF3
 30814                           intcon	equ	0xFF2
 30815                           intcon2	equ	0xFF1
 30816                           intcon3	equ	0xFF0
 30817                           indf0	equ	0xFEF
 30818                           postinc0	equ	0xFEE
 30819                           fsr0h	equ	0xFEA
 30820                           fsr0l	equ	0xFE9
 30821                           wreg	equ	0xFE8
 30822                           indf1	equ	0xFE7
 30823                           postdec1	equ	0xFE5
 30824                           plusw1	equ	0xFE3
 30825                           fsr1h	equ	0xFE2
 30826                           fsr1l	equ	0xFE1
 30827                           indf2	equ	0xFDF
 30828                           postinc2	equ	0xFDE
 30829                           postdec2	equ	0xFDD
 30830                           plusw2	equ	0xFDB
 30831                           fsr2h	equ	0xFDA
 30832                           fsr2l	equ	0xFD9
 30833                           status	equ	0xFD8
 30834                           
 30835 ;; *************** function _bootloader_get_rec_checksumCheck *****************
 30836 ;; Defined at:
 30837 ;;		line 473 in file "bootloader.c"
 30838 ;; Parameters:    Size  Location     Type
 30839 ;;		None
 30840 ;; Auto vars:     Size  Location     Type
 30841 ;;		None
 30842 ;; Return value:  Size  Location     Type
 30843 ;;                  1    wreg      unsigned char 
 30844 ;; Registers used:
 30845 ;;		wreg, status,2
 30846 ;; Tracked objects:
 30847 ;;		On entry : 0/0
 30848 ;;		On exit  : 0/0
 30849 ;;		Unchanged: 0/0
 30850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30851 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30852 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30853 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30854 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30855 ;;Total ram usage:        0 bytes
 30856 ;; Hardware stack levels used:    1
 30857 ;; This function calls:
 30858 ;;		Nothing
 30859 ;; This function is called by:
 30860 ;;		__fill_buffer_get_bootloader_details
 30861 ;; This function uses a non-reentrant model
 30862 ;;
 30863                           
 30864                           	psect	text143
 30865  008034                     __ptext143:
 30866                           	opt stack 0
 30867  008034                     _bootloader_get_rec_checksumCheck:
 30868                           	opt stack 28
 30869                           
 30870                           ;bootloader.c: 475: return hex_file_entry.checksumCheck;
 30871                           
 30872                           ;incstack = 0
 30873  008034  0101               	movlb	1	; () banked
 30874  008036  51DC               	movf	(_hex_file_entry+22)& (0+255),w,b
 30875  008038  0012               	return	
 30876  00803A                     __end_of_bootloader_get_rec_checksumCheck:
 30877                           	opt stack 0
 30878                           tosu	equ	0xFFF
 30879                           tosh	equ	0xFFE
 30880                           tosl	equ	0xFFD
 30881                           pclath	equ	0xFFA
 30882                           tblptru	equ	0xFF8
 30883                           tblptrh	equ	0xFF7
 30884                           tblptrl	equ	0xFF6
 30885                           tablat	equ	0xFF5
 30886                           prodh	equ	0xFF4
 30887                           prodl	equ	0xFF3
 30888                           intcon	equ	0xFF2
 30889                           intcon2	equ	0xFF1
 30890                           intcon3	equ	0xFF0
 30891                           indf0	equ	0xFEF
 30892                           postinc0	equ	0xFEE
 30893                           fsr0h	equ	0xFEA
 30894                           fsr0l	equ	0xFE9
 30895                           wreg	equ	0xFE8
 30896                           indf1	equ	0xFE7
 30897                           postdec1	equ	0xFE5
 30898                           plusw1	equ	0xFE3
 30899                           fsr1h	equ	0xFE2
 30900                           fsr1l	equ	0xFE1
 30901                           indf2	equ	0xFDF
 30902                           postinc2	equ	0xFDE
 30903                           postdec2	equ	0xFDD
 30904                           plusw2	equ	0xFDB
 30905                           fsr2h	equ	0xFDA
 30906                           fsr2l	equ	0xFD9
 30907                           status	equ	0xFD8
 30908                           
 30909 ;; *************** function _bootloader_get_rec_checksum *****************
 30910 ;; Defined at:
 30911 ;;		line 468 in file "bootloader.c"
 30912 ;; Parameters:    Size  Location     Type
 30913 ;;		None
 30914 ;; Auto vars:     Size  Location     Type
 30915 ;;		None
 30916 ;; Return value:  Size  Location     Type
 30917 ;;                  1    wreg      unsigned char 
 30918 ;; Registers used:
 30919 ;;		wreg, status,2
 30920 ;; Tracked objects:
 30921 ;;		On entry : 0/0
 30922 ;;		On exit  : 0/0
 30923 ;;		Unchanged: 0/0
 30924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 30925 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30926 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30927 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30928 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 30929 ;;Total ram usage:        0 bytes
 30930 ;; Hardware stack levels used:    1
 30931 ;; This function calls:
 30932 ;;		Nothing
 30933 ;; This function is called by:
 30934 ;;		__fill_buffer_get_bootloader_details
 30935 ;; This function uses a non-reentrant model
 30936 ;;
 30937                           
 30938                           	psect	text144
 30939  00803A                     __ptext144:
 30940                           	opt stack 0
 30941  00803A                     _bootloader_get_rec_checksum:
 30942                           	opt stack 28
 30943                           
 30944                           ;bootloader.c: 470: return hex_file_entry.checksum;
 30945                           
 30946                           ; BSR set to: 1
 30947                           ;incstack = 0
 30948  00803A  0101               	movlb	1	; () banked
 30949  00803C  51DB               	movf	(_hex_file_entry+21)& (0+255),w,b
 30950  00803E  0012               	return	
 30951  008040                     __end_of_bootloader_get_rec_checksum:
 30952                           	opt stack 0
 30953                           tosu	equ	0xFFF
 30954                           tosh	equ	0xFFE
 30955                           tosl	equ	0xFFD
 30956                           pclath	equ	0xFFA
 30957                           tblptru	equ	0xFF8
 30958                           tblptrh	equ	0xFF7
 30959                           tblptrl	equ	0xFF6
 30960                           tablat	equ	0xFF5
 30961                           prodh	equ	0xFF4
 30962                           prodl	equ	0xFF3
 30963                           intcon	equ	0xFF2
 30964                           intcon2	equ	0xFF1
 30965                           intcon3	equ	0xFF0
 30966                           indf0	equ	0xFEF
 30967                           postinc0	equ	0xFEE
 30968                           fsr0h	equ	0xFEA
 30969                           fsr0l	equ	0xFE9
 30970                           wreg	equ	0xFE8
 30971                           indf1	equ	0xFE7
 30972                           postdec1	equ	0xFE5
 30973                           plusw1	equ	0xFE3
 30974                           fsr1h	equ	0xFE2
 30975                           fsr1l	equ	0xFE1
 30976                           indf2	equ	0xFDF
 30977                           postinc2	equ	0xFDE
 30978                           postdec2	equ	0xFDD
 30979                           plusw2	equ	0xFDB
 30980                           fsr2h	equ	0xFDA
 30981                           fsr2l	equ	0xFD9
 30982                           status	equ	0xFD8
 30983                           
 30984 ;; *************** function _bootloader_get_rec_address *****************
 30985 ;; Defined at:
 30986 ;;		line 452 in file "bootloader.c"
 30987 ;; Parameters:    Size  Location     Type
 30988 ;;		None
 30989 ;; Auto vars:     Size  Location     Type
 30990 ;;		None
 30991 ;; Return value:  Size  Location     Type
 30992 ;;                  2    0[COMRAM] unsigned int 
 30993 ;; Registers used:
 30994 ;;		None
 30995 ;; Tracked objects:
 30996 ;;		On entry : 0/0
 30997 ;;		On exit  : 0/0
 30998 ;;		Unchanged: 0/0
 30999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31000 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31001 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31002 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31003 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31004 ;;Total ram usage:        2 bytes
 31005 ;; Hardware stack levels used:    1
 31006 ;; This function calls:
 31007 ;;		Nothing
 31008 ;; This function is called by:
 31009 ;;		__display_failed
 31010 ;;		__fill_buffer_get_bootloader_details
 31011 ;; This function uses a non-reentrant model
 31012 ;;
 31013                           
 31014                           	psect	text145
 31015  007FD4                     __ptext145:
 31016                           	opt stack 0
 31017  007FD4                     _bootloader_get_rec_address:
 31018                           	opt stack 28
 31019                           
 31020                           ;bootloader.c: 455: return hex_file_entry.address;
 31021                           
 31022                           ; BSR set to: 1
 31023                           ;incstack = 0
 31024  007FD4  C1C8  F001         	movff	_hex_file_entry+2,?_bootloader_get_rec_address
 31025  007FD8  C1C9  F002         	movff	_hex_file_entry+3,?_bootloader_get_rec_address+1
 31026  007FDC  0012               	return		;funcret
 31027  007FDE                     __end_of_bootloader_get_rec_address:
 31028                           	opt stack 0
 31029                           tosu	equ	0xFFF
 31030                           tosh	equ	0xFFE
 31031                           tosl	equ	0xFFD
 31032                           pclath	equ	0xFFA
 31033                           tblptru	equ	0xFF8
 31034                           tblptrh	equ	0xFF7
 31035                           tblptrl	equ	0xFF6
 31036                           tablat	equ	0xFF5
 31037                           prodh	equ	0xFF4
 31038                           prodl	equ	0xFF3
 31039                           intcon	equ	0xFF2
 31040                           intcon2	equ	0xFF1
 31041                           intcon3	equ	0xFF0
 31042                           indf0	equ	0xFEF
 31043                           postinc0	equ	0xFEE
 31044                           fsr0h	equ	0xFEA
 31045                           fsr0l	equ	0xFE9
 31046                           wreg	equ	0xFE8
 31047                           indf1	equ	0xFE7
 31048                           postdec1	equ	0xFE5
 31049                           plusw1	equ	0xFE3
 31050                           fsr1h	equ	0xFE2
 31051                           fsr1l	equ	0xFE1
 31052                           indf2	equ	0xFDF
 31053                           postinc2	equ	0xFDE
 31054                           postdec2	equ	0xFDD
 31055                           plusw2	equ	0xFDB
 31056                           fsr2h	equ	0xFDA
 31057                           fsr2l	equ	0xFD9
 31058                           status	equ	0xFD8
 31059                           
 31060 ;; *************** function _bootloader_get_flashPagesWritten *****************
 31061 ;; Defined at:
 31062 ;;		line 478 in file "bootloader.c"
 31063 ;; Parameters:    Size  Location     Type
 31064 ;;		None
 31065 ;; Auto vars:     Size  Location     Type
 31066 ;;		None
 31067 ;; Return value:  Size  Location     Type
 31068 ;;                  2    0[COMRAM] unsigned int 
 31069 ;; Registers used:
 31070 ;;		None
 31071 ;; Tracked objects:
 31072 ;;		On entry : 0/0
 31073 ;;		On exit  : 0/0
 31074 ;;		Unchanged: 0/0
 31075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31076 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31077 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31078 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31079 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31080 ;;Total ram usage:        2 bytes
 31081 ;; Hardware stack levels used:    1
 31082 ;; This function calls:
 31083 ;;		Nothing
 31084 ;; This function is called by:
 31085 ;;		__display_programming
 31086 ;;		__display_done
 31087 ;;		__fill_buffer_get_bootloader_details
 31088 ;; This function uses a non-reentrant model
 31089 ;;
 31090                           
 31091                           	psect	text146
 31092  007FDE                     __ptext146:
 31093                           	opt stack 0
 31094  007FDE                     _bootloader_get_flashPagesWritten:
 31095                           	opt stack 28
 31096                           
 31097                           ;bootloader.c: 480: return flash_pages_written;
 31098                           
 31099                           ;incstack = 0
 31100  007FDE  C166  F001         	movff	_flash_pages_written,?_bootloader_get_flashPagesWritten
 31101  007FE2  C167  F002         	movff	_flash_pages_written+1,?_bootloader_get_flashPagesWritten+1
 31102  007FE6  0012               	return		;funcret
 31103  007FE8                     __end_of_bootloader_get_flashPagesWritten:
 31104                           	opt stack 0
 31105                           tosu	equ	0xFFF
 31106                           tosh	equ	0xFFE
 31107                           tosl	equ	0xFFD
 31108                           pclath	equ	0xFFA
 31109                           tblptru	equ	0xFF8
 31110                           tblptrh	equ	0xFF7
 31111                           tblptrl	equ	0xFF6
 31112                           tablat	equ	0xFF5
 31113                           prodh	equ	0xFF4
 31114                           prodl	equ	0xFF3
 31115                           intcon	equ	0xFF2
 31116                           intcon2	equ	0xFF1
 31117                           intcon3	equ	0xFF0
 31118                           indf0	equ	0xFEF
 31119                           postinc0	equ	0xFEE
 31120                           fsr0h	equ	0xFEA
 31121                           fsr0l	equ	0xFE9
 31122                           wreg	equ	0xFE8
 31123                           indf1	equ	0xFE7
 31124                           postdec1	equ	0xFE5
 31125                           plusw1	equ	0xFE3
 31126                           fsr1h	equ	0xFE2
 31127                           fsr1l	equ	0xFE1
 31128                           indf2	equ	0xFDF
 31129                           postinc2	equ	0xFDE
 31130                           postdec2	equ	0xFDD
 31131                           plusw2	equ	0xFDB
 31132                           fsr2h	equ	0xFDA
 31133                           fsr2l	equ	0xFD9
 31134                           status	equ	0xFD8
 31135                           
 31136 ;; *************** function _bootloader_get_file_size *****************
 31137 ;; Defined at:
 31138 ;;		line 427 in file "bootloader.c"
 31139 ;; Parameters:    Size  Location     Type
 31140 ;;		None
 31141 ;; Auto vars:     Size  Location     Type
 31142 ;;		None
 31143 ;; Return value:  Size  Location     Type
 31144 ;;                  4    0[COMRAM] unsigned long 
 31145 ;; Registers used:
 31146 ;;		None
 31147 ;; Tracked objects:
 31148 ;;		On entry : 0/0
 31149 ;;		On exit  : 0/0
 31150 ;;		Unchanged: 0/0
 31151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31152 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31153 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31154 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31155 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31156 ;;Total ram usage:        4 bytes
 31157 ;; Hardware stack levels used:    1
 31158 ;; This function calls:
 31159 ;;		Nothing
 31160 ;; This function is called by:
 31161 ;;		__display_found
 31162 ;;		__fill_buffer_get_bootloader_details
 31163 ;; This function uses a non-reentrant model
 31164 ;;
 31165                           
 31166                           	psect	text147
 31167  007F1E                     __ptext147:
 31168                           	opt stack 0
 31169  007F1E                     _bootloader_get_file_size:
 31170                           	opt stack 28
 31171                           
 31172                           ;bootloader.c: 429: return hex_file_size;
 31173                           
 31174                           ;incstack = 0
 31175  007F1E  C078  F001         	movff	_hex_file_size,?_bootloader_get_file_size
 31176  007F22  C079  F002         	movff	_hex_file_size+1,?_bootloader_get_file_size+1
 31177  007F26  C07A  F003         	movff	_hex_file_size+2,?_bootloader_get_file_size+2
 31178  007F2A  C07B  F004         	movff	_hex_file_size+3,?_bootloader_get_file_size+3
 31179  007F2E  0012               	return		;funcret
 31180  007F30                     __end_of_bootloader_get_file_size:
 31181                           	opt stack 0
 31182                           tosu	equ	0xFFF
 31183                           tosh	equ	0xFFE
 31184                           tosl	equ	0xFFD
 31185                           pclath	equ	0xFFA
 31186                           tblptru	equ	0xFF8
 31187                           tblptrh	equ	0xFF7
 31188                           tblptrl	equ	0xFF6
 31189                           tablat	equ	0xFF5
 31190                           prodh	equ	0xFF4
 31191                           prodl	equ	0xFF3
 31192                           intcon	equ	0xFF2
 31193                           intcon2	equ	0xFF1
 31194                           intcon3	equ	0xFF0
 31195                           indf0	equ	0xFEF
 31196                           postinc0	equ	0xFEE
 31197                           fsr0h	equ	0xFEA
 31198                           fsr0l	equ	0xFE9
 31199                           wreg	equ	0xFE8
 31200                           indf1	equ	0xFE7
 31201                           postdec1	equ	0xFE5
 31202                           plusw1	equ	0xFE3
 31203                           fsr1h	equ	0xFE2
 31204                           fsr1l	equ	0xFE1
 31205                           indf2	equ	0xFDF
 31206                           postinc2	equ	0xFDE
 31207                           postdec2	equ	0xFDD
 31208                           plusw2	equ	0xFDB
 31209                           fsr2h	equ	0xFDA
 31210                           fsr2l	equ	0xFD9
 31211                           status	equ	0xFD8
 31212                           
 31213 ;; *************** function _bootloader_get_error *****************
 31214 ;; Defined at:
 31215 ;;		line 442 in file "bootloader.c"
 31216 ;; Parameters:    Size  Location     Type
 31217 ;;		None
 31218 ;; Auto vars:     Size  Location     Type
 31219 ;;		None
 31220 ;; Return value:  Size  Location     Type
 31221 ;;                  1    wreg      enum E7007
 31222 ;; Registers used:
 31223 ;;		wreg, status,2
 31224 ;; Tracked objects:
 31225 ;;		On entry : 0/0
 31226 ;;		On exit  : 0/0
 31227 ;;		Unchanged: 0/0
 31228 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31229 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31230 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31231 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31232 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31233 ;;Total ram usage:        0 bytes
 31234 ;; Hardware stack levels used:    1
 31235 ;; This function calls:
 31236 ;;		Nothing
 31237 ;; This function is called by:
 31238 ;;		__display_failed
 31239 ;;		__fill_buffer_get_bootloader_details
 31240 ;; This function uses a non-reentrant model
 31241 ;;
 31242                           
 31243                           	psect	text148
 31244  008040                     __ptext148:
 31245                           	opt stack 0
 31246  008040                     _bootloader_get_error:
 31247                           	opt stack 28
 31248                           
 31249                           ;bootloader.c: 444: return last_error;
 31250                           
 31251                           ;incstack = 0
 31252  008040  0100               	movlb	0	; () banked
 31253  008042  5196               	movf	_last_error& (0+255),w,b
 31254  008044  0012               	return	
 31255  008046                     __end_of_bootloader_get_error:
 31256                           	opt stack 0
 31257                           tosu	equ	0xFFF
 31258                           tosh	equ	0xFFE
 31259                           tosl	equ	0xFFD
 31260                           pclath	equ	0xFFA
 31261                           tblptru	equ	0xFF8
 31262                           tblptrh	equ	0xFF7
 31263                           tblptrl	equ	0xFF6
 31264                           tablat	equ	0xFF5
 31265                           prodh	equ	0xFF4
 31266                           prodl	equ	0xFF3
 31267                           intcon	equ	0xFF2
 31268                           intcon2	equ	0xFF1
 31269                           intcon3	equ	0xFF0
 31270                           indf0	equ	0xFEF
 31271                           postinc0	equ	0xFEE
 31272                           fsr0h	equ	0xFEA
 31273                           fsr0l	equ	0xFE9
 31274                           wreg	equ	0xFE8
 31275                           indf1	equ	0xFE7
 31276                           postdec1	equ	0xFE5
 31277                           plusw1	equ	0xFE3
 31278                           fsr1h	equ	0xFE2
 31279                           fsr1l	equ	0xFE1
 31280                           indf2	equ	0xFDF
 31281                           postinc2	equ	0xFDE
 31282                           postdec2	equ	0xFDD
 31283                           plusw2	equ	0xFDB
 31284                           fsr2h	equ	0xFDA
 31285                           fsr2l	equ	0xFD9
 31286                           status	equ	0xFD8
 31287                           
 31288 ;; *************** function _bootloader_get_entries *****************
 31289 ;; Defined at:
 31290 ;;		line 432 in file "bootloader.c"
 31291 ;; Parameters:    Size  Location     Type
 31292 ;;		None
 31293 ;; Auto vars:     Size  Location     Type
 31294 ;;		None
 31295 ;; Return value:  Size  Location     Type
 31296 ;;                  2    0[COMRAM] unsigned int 
 31297 ;; Registers used:
 31298 ;;		None
 31299 ;; Tracked objects:
 31300 ;;		On entry : 0/0
 31301 ;;		On exit  : 0/0
 31302 ;;		Unchanged: 0/0
 31303 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31304 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31305 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31306 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31307 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31308 ;;Total ram usage:        2 bytes
 31309 ;; Hardware stack levels used:    1
 31310 ;; This function calls:
 31311 ;;		Nothing
 31312 ;; This function is called by:
 31313 ;;		__display_verify
 31314 ;;		__display_failed
 31315 ;;		__display_programming
 31316 ;;		__fill_buffer_get_bootloader_details
 31317 ;; This function uses a non-reentrant model
 31318 ;;
 31319                           
 31320                           	psect	text149
 31321  007FE8                     __ptext149:
 31322                           	opt stack 0
 31323  007FE8                     _bootloader_get_entries:
 31324                           	opt stack 28
 31325                           
 31326                           ;bootloader.c: 434: return hex_file_entries;
 31327                           
 31328                           ; BSR set to: 0
 31329                           ;incstack = 0
 31330  007FE8  C16A  F001         	movff	_hex_file_entries,?_bootloader_get_entries
 31331  007FEC  C16B  F002         	movff	_hex_file_entries+1,?_bootloader_get_entries+1
 31332  007FF0  0012               	return		;funcret
 31333  007FF2                     __end_of_bootloader_get_entries:
 31334                           	opt stack 0
 31335                           tosu	equ	0xFFF
 31336                           tosh	equ	0xFFE
 31337                           tosl	equ	0xFFD
 31338                           pclath	equ	0xFFA
 31339                           tblptru	equ	0xFF8
 31340                           tblptrh	equ	0xFF7
 31341                           tblptrl	equ	0xFF6
 31342                           tablat	equ	0xFF5
 31343                           prodh	equ	0xFF4
 31344                           prodl	equ	0xFF3
 31345                           intcon	equ	0xFF2
 31346                           intcon2	equ	0xFF1
 31347                           intcon3	equ	0xFF0
 31348                           indf0	equ	0xFEF
 31349                           postinc0	equ	0xFEE
 31350                           fsr0h	equ	0xFEA
 31351                           fsr0l	equ	0xFE9
 31352                           wreg	equ	0xFE8
 31353                           indf1	equ	0xFE7
 31354                           postdec1	equ	0xFE5
 31355                           plusw1	equ	0xFE3
 31356                           fsr1h	equ	0xFE2
 31357                           fsr1l	equ	0xFE1
 31358                           indf2	equ	0xFDF
 31359                           postinc2	equ	0xFDE
 31360                           postdec2	equ	0xFDD
 31361                           plusw2	equ	0xFDB
 31362                           fsr2h	equ	0xFDA
 31363                           fsr2l	equ	0xFD9
 31364                           status	equ	0xFD8
 31365                           
 31366 ;; *************** function __fill_buffer_find_file *****************
 31367 ;; Defined at:
 31368 ;;		line 347 in file "api.c"
 31369 ;; Parameters:    Size  Location     Type
 31370 ;;  inBuffer        2   67[COMRAM] PTR unsigned char 
 31371 ;;		 -> _spi_external_rx_buffer(64), RAM(3759), 
 31372 ;;  outBuffer       2   69[COMRAM] PTR unsigned char 
 31373 ;;		 -> _spi_external_tx_buffer(64), RAM(3759), 
 31374 ;; Auto vars:     Size  Location     Type
 31375 ;;  cntr            1   75[COMRAM] unsigned char 
 31376 ;; Return value:  Size  Location     Type
 31377 ;;                  1    wreg      void 
 31378 ;; Registers used:
 31379 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 31380 ;; Tracked objects:
 31381 ;;		On entry : 0/0
 31382 ;;		On exit  : 0/0
 31383 ;;		Unchanged: 0/0
 31384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31385 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31387 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31388 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31389 ;;Total ram usage:        9 bytes
 31390 ;; Hardware stack levels used:    1
 31391 ;; Hardware stack levels required when called:    6
 31392 ;; This function calls:
 31393 ;;		_fat_find_file
 31394 ;; This function is called by:
 31395 ;;		_api_prepare
 31396 ;; This function uses a non-reentrant model
 31397 ;;
 31398                           
 31399                           	psect	text150
 31400  005C68                     __ptext150:
 31401                           	opt stack 0
 31402  005C68                     __fill_buffer_find_file:
 31403                           	opt stack 23
 31404                           
 31405                           ;api.c: 349: uint8_t cntr;;api.c: 352: outBuffer[0] = DATAREQUEST_FIND_FILE;
 31406                           
 31407                           ;incstack = 0
 31408  005C68  C046  FFD9         	movff	__fill_buffer_find_file@outBuffer,fsr2l
 31409  005C6C  C047  FFDA         	movff	__fill_buffer_find_file@outBuffer+1,fsr2h
 31410  005C70  0E81               	movlw	129
 31411  005C72  6EDF               	movwf	indf2,c
 31412                           
 31413                           ;api.c: 355: outBuffer[1] = 0xC125 >> 8;
 31414  005C74  EE20 F001          	lfsr	2,1
 31415  005C78  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 31416  005C7A  26D9               	addwf	fsr2l,f,c
 31417  005C7C  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 31418  005C7E  22DA               	addwfc	fsr2h,f,c
 31419  005C80  0EC1               	movlw	193
 31420  005C82  6EDF               	movwf	indf2,c
 31421                           
 31422                           ;api.c: 356: outBuffer[2] = (uint8_t) 0xC125;
 31423  005C84  EE20 F002          	lfsr	2,2
 31424  005C88  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 31425  005C8A  26D9               	addwf	fsr2l,f,c
 31426  005C8C  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 31427  005C8E  22DA               	addwfc	fsr2h,f,c
 31428  005C90  0E25               	movlw	37
 31429  005C92  6EDF               	movwf	indf2,c
 31430                           
 31431                           ;api.c: 359: outBuffer[3] = fat_find_file(&inBuffer[1], &inBuffer[9]);
 31432  005C94  0E01               	movlw	1
 31433  005C96  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 31434  005C98  6E30               	movwf	fat_find_file@name,c
 31435  005C9A  0E00               	movlw	0
 31436  005C9C  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 31437  005C9E  6E31               	movwf	fat_find_file@name+1,c
 31438  005CA0  0E09               	movlw	9
 31439  005CA2  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 31440  005CA4  6E32               	movwf	fat_find_file@extension,c
 31441  005CA6  0E00               	movlw	0
 31442  005CA8  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 31443  005CAA  6E33               	movwf	fat_find_file@extension+1,c
 31444  005CAC  ECD1  F02A         	call	_fat_find_file	;wreg free
 31445  005CB0  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 31446  005CB2  EE20 F003          	lfsr	2,3
 31447  005CB6  5046               	movf	__fill_buffer_find_file@outBuffer,w,c
 31448  005CB8  26D9               	addwf	fsr2l,f,c
 31449  005CBA  5047               	movf	__fill_buffer_find_file@outBuffer+1,w,c
 31450  005CBC  22DA               	addwfc	fsr2h,f,c
 31451  005CBE  C048  FFDF         	movff	??__fill_buffer_find_file,indf2
 31452                           
 31453                           ;api.c: 362: for(cntr=0; cntr<11; ++cntr)
 31454  005CC2  0E00               	movlw	0
 31455  005CC4  6E4C               	movwf	__fill_buffer_find_file@cntr,c
 31456  005CC6                     l12997:
 31457  005CC6  0E0A               	movlw	10
 31458  005CC8  644C               	cpfsgt	__fill_buffer_find_file@cntr,c
 31459  005CCA  D001               	goto	l2602
 31460  005CCC  0012               	return	
 31461  005CCE                     l2602:
 31462                           
 31463                           ;api.c: 363: {;api.c: 364: outBuffer[cntr+12] = inBuffer[cntr+1];
 31464  005CCE  504C               	movf	__fill_buffer_find_file@cntr,w,c
 31465  005CD0  6E48               	movwf	??__fill_buffer_find_file& (0+255),c
 31466  005CD2  6A49               	clrf	(??__fill_buffer_find_file+1)& (0+255),c
 31467  005CD4  0E01               	movlw	1
 31468  005CD6  2648               	addwf	??__fill_buffer_find_file,f,c
 31469  005CD8  0E00               	movlw	0
 31470  005CDA  2249               	addwfc	??__fill_buffer_find_file+1,f,c
 31471  005CDC  5048               	movf	??__fill_buffer_find_file,w,c
 31472  005CDE  2444               	addwf	__fill_buffer_find_file@inBuffer,w,c
 31473  005CE0  6ED9               	movwf	fsr2l,c
 31474  005CE2  5049               	movf	??__fill_buffer_find_file+1,w,c
 31475  005CE4  2045               	addwfc	__fill_buffer_find_file@inBuffer+1,w,c
 31476  005CE6  6EDA               	movwf	fsr2h,c
 31477  005CE8  504C               	movf	__fill_buffer_find_file@cntr,w,c
 31478  005CEA  6E4A               	movwf	(??__fill_buffer_find_file+2)& (0+255),c
 31479  005CEC  6A4B               	clrf	(??__fill_buffer_find_file+3)& (0+255),c
 31480  005CEE  0E0C               	movlw	12
 31481  005CF0  264A               	addwf	??__fill_buffer_find_file+2,f,c
 31482  005CF2  0E00               	movlw	0
 31483  005CF4  224B               	addwfc	??__fill_buffer_find_file+3,f,c
 31484  005CF6  504A               	movf	??__fill_buffer_find_file+2,w,c
 31485  005CF8  2446               	addwf	__fill_buffer_find_file@outBuffer,w,c
 31486  005CFA  6EE1               	movwf	fsr1l,c
 31487  005CFC  504B               	movf	??__fill_buffer_find_file+3,w,c
 31488  005CFE  2047               	addwfc	__fill_buffer_find_file@outBuffer+1,w,c
 31489  005D00  6EE2               	movwf	fsr1h,c
 31490  005D02  CFDF FFE7          	movff	indf2,indf1
 31491  005D06  2A4C               	incf	__fill_buffer_find_file@cntr,f,c
 31492  005D08  D7DE               	goto	l12997
 31493  005D0A                     __end_of__fill_buffer_find_file:
 31494                           	opt stack 0
 31495                           tosu	equ	0xFFF
 31496                           tosh	equ	0xFFE
 31497                           tosl	equ	0xFFD
 31498                           pclath	equ	0xFFA
 31499                           tblptru	equ	0xFF8
 31500                           tblptrh	equ	0xFF7
 31501                           tblptrl	equ	0xFF6
 31502                           tablat	equ	0xFF5
 31503                           prodh	equ	0xFF4
 31504                           prodl	equ	0xFF3
 31505                           intcon	equ	0xFF2
 31506                           intcon2	equ	0xFF1
 31507                           intcon3	equ	0xFF0
 31508                           indf0	equ	0xFEF
 31509                           postinc0	equ	0xFEE
 31510                           fsr0h	equ	0xFEA
 31511                           fsr0l	equ	0xFE9
 31512                           wreg	equ	0xFE8
 31513                           indf1	equ	0xFE7
 31514                           postdec1	equ	0xFE5
 31515                           plusw1	equ	0xFE3
 31516                           fsr1h	equ	0xFE2
 31517                           fsr1l	equ	0xFE1
 31518                           indf2	equ	0xFDF
 31519                           postinc2	equ	0xFDE
 31520                           postdec2	equ	0xFDD
 31521                           plusw2	equ	0xFDB
 31522                           fsr2h	equ	0xFDA
 31523                           fsr2l	equ	0xFD9
 31524                           status	equ	0xFD8
 31525                           
 31526 ;; *************** function _api_parse *****************
 31527 ;; Defined at:
 31528 ;;		line 124 in file "api.c"
 31529 ;; Parameters:    Size  Location     Type
 31530 ;;  inBuffer        2   51[BANK0 ] PTR unsigned char 
 31531 ;;		 -> _spi_external_rx_buffer(64), ReceivedDataBuffer(64), 
 31532 ;;  receivedData    1   53[BANK0 ] unsigned char 
 31533 ;; Auto vars:     Size  Location     Type
 31534 ;;  idx             1   87[COMRAM] unsigned char 
 31535 ;; Return value:  Size  Location     Type
 31536 ;;                  1    wreg      void 
 31537 ;; Registers used:
 31538 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 31539 ;; Tracked objects:
 31540 ;;		On entry : 0/0
 31541 ;;		On exit  : 0/0
 31542 ;;		Unchanged: 0/0
 31543 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31544 ;;      Params:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31545 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31546 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31547 ;;      Totals:         3       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31548 ;;Total ram usage:        6 bytes
 31549 ;; Hardware stack levels used:    1
 31550 ;; Hardware stack levels required when called:   10
 31551 ;; This function calls:
 31552 ;;		__parse_command_long
 31553 ;;		__parse_command_short
 31554 ;; This function is called by:
 31555 ;;		_main
 31556 ;;		_APP_DeviceCustomHIDTasks
 31557 ;; This function uses a non-reentrant model
 31558 ;;
 31559                           
 31560                           	psect	text151
 31561  004E9C                     __ptext151:
 31562                           	opt stack 0
 31563  004E9C                     _api_parse:
 31564                           	opt stack 20
 31565                           
 31566                           ;api.c: 128: uint8_t idx;;api.c: 130: if(inBuffer[0]>0x7F)
 31567                           
 31568                           ;incstack = 0
 31569  004E9C  C0E8  FFD9         	movff	api_parse@inBuffer,fsr2l
 31570  004EA0  C0E9  FFDA         	movff	api_parse@inBuffer+1,fsr2h
 31571  004EA4  0E7F               	movlw	127
 31572  004EA6  64DF               	cpfsgt	indf2,c
 31573  004EA8  D001               	goto	l2560
 31574  004EAA  0012               	return	
 31575  004EAC                     l2560:
 31576                           
 31577                           ;api.c: 135: };api.c: 137: idx = 1;
 31578  004EAC  0E01               	movlw	1
 31579  004EAE  6E58               	movwf	api_parse@idx,c
 31580                           
 31581                           ;api.c: 138: while(idx<receivedDataLength)
 31582  004EB0  D058               	goto	l2567
 31583  004EB2                     
 31584                           ;api.c: 139: {;api.c: 141: if(inBuffer[idx]==COMMAND_STOP_PARSING)
 31585  004EB2  5058               	movf	api_parse@idx,w,c
 31586  004EB4  0D01               	mullw	1
 31587  004EB6  50F3               	movf	prodl,w,c
 31588  004EB8  0100               	movlb	0	; () banked
 31589  004EBA  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31590  004EBC  6ED9               	movwf	fsr2l,c
 31591  004EBE  50F4               	movf	prodh,w,c
 31592  004EC0  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31593  004EC2  6EDA               	movwf	fsr2h,c
 31594  004EC4  0E99               	movlw	153
 31595  004EC6  18DE               	xorwf	postinc2,w,c
 31596  004EC8  B4D8               	btfsc	status,2,c
 31597  004ECA  0012               	return	
 31598  004ECC  D02E               	goto	l2565
 31599  004ECE                     
 31600                           ; BSR set to: 0
 31601                           ;api.c: 149: _parse_command_short(inBuffer[idx]);
 31602                           
 31603                           ; BSR set to: 0
 31604  004ECE  5058               	movf	api_parse@idx,w,c
 31605  004ED0  0D01               	mullw	1
 31606  004ED2  50F3               	movf	prodl,w,c
 31607  004ED4  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31608  004ED6  6ED9               	movwf	fsr2l,c
 31609  004ED8  50F4               	movf	prodh,w,c
 31610  004EDA  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31611  004EDC  6EDA               	movwf	fsr2h,c
 31612  004EDE  50DF               	movf	indf2,w,c
 31613  004EE0  EC23  F02F         	call	__parse_command_short
 31614  004EE4  D00C               	goto	l13525
 31615  004EE6                     
 31616                           ;api.c: 154: _parse_command_short(inBuffer[idx]);
 31617  004EE6  5058               	movf	api_parse@idx,w,c
 31618  004EE8  0D01               	mullw	1
 31619  004EEA  50F3               	movf	prodl,w,c
 31620  004EEC  0100               	movlb	0	; () banked
 31621  004EEE  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31622  004EF0  6ED9               	movwf	fsr2l,c
 31623  004EF2  50F4               	movf	prodh,w,c
 31624  004EF4  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31625  004EF6  6EDA               	movwf	fsr2h,c
 31626  004EF8  50DF               	movf	indf2,w,c
 31627  004EFA  EC23  F02F         	call	__parse_command_short
 31628  004EFE                     l13525:
 31629                           
 31630                           ;api.c: 155: ++idx;
 31631  004EFE  2A58               	incf	api_parse@idx,f,c
 31632                           
 31633                           ;api.c: 156: break;
 31634  004F00  D030               	goto	l2567
 31635  004F02                     
 31636                           ;api.c: 159: idx += _parse_command_long(inBuffer[idx]);
 31637  004F02  5058               	movf	api_parse@idx,w,c
 31638  004F04  0D01               	mullw	1
 31639  004F06  50F3               	movf	prodl,w,c
 31640  004F08  0100               	movlb	0	; () banked
 31641  004F0A  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31642  004F0C  6ED9               	movwf	fsr2l,c
 31643  004F0E  50F4               	movf	prodh,w,c
 31644  004F10  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31645  004F12  6EDA               	movwf	fsr2h,c
 31646  004F14  50DF               	movf	indf2,w,c
 31647  004F16  6E56               	movwf	??_api_parse& (0+255),c
 31648  004F18  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31649  004F1A  C056  F053         	movff	??_api_parse,__parse_command_long@data
 31650  004F1E  C057  F054         	movff	??_api_parse+1,__parse_command_long@data+1
 31651  004F22  ECE8  F030         	call	__parse_command_long	;wreg free
 31652  004F26  2658               	addwf	api_parse@idx,f,c
 31653                           
 31654                           ;api.c: 160: break;
 31655  004F28  D01C               	goto	l2567
 31656  004F2A                     l2565:
 31657  004F2A  5058               	movf	api_parse@idx,w,c
 31658  004F2C  0D01               	mullw	1
 31659  004F2E  50F3               	movf	prodl,w,c
 31660  004F30  0100               	movlb	0	; () banked
 31661  004F32  25E8               	addwf	api_parse@inBuffer& (0+255),w,b
 31662  004F34  6ED9               	movwf	fsr2l,c
 31663  004F36  50F4               	movf	prodh,w,c
 31664  004F38  21E9               	addwfc	(api_parse@inBuffer+1)& (0+255),w,b
 31665  004F3A  6EDA               	movwf	fsr2h,c
 31666  004F3C  50DF               	movf	indf2,w,c
 31667  004F3E  0BF0               	andlw	240
 31668  004F40  6E56               	movwf	??_api_parse& (0+255),c
 31669  004F42  6A57               	clrf	(??_api_parse+1)& (0+255),c
 31670                           
 31671                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 31672                           ; Switch size 1, requested type "space"
 31673                           ; Number of cases is 1, Range of values is 0 to 0
 31674                           ; switch strategies available:
 31675                           ; Name         Instructions Cycles
 31676                           ; simple_byte            4     3 (average)
 31677                           ;	Chosen strategy is simple_byte
 31678  004F44  5057               	movf	??_api_parse+1,w,c
 31679  004F46  0A00               	xorlw	0	; case 0
 31680  004F48  A4D8               	btfss	status,2,c
 31681  004F4A  0012               	return	
 31682                           
 31683                           ; BSR set to: 0
 31684                           ; Switch size 1, requested type "space"
 31685                           ; Number of cases is 3, Range of values is 32 to 80
 31686                           ; switch strategies available:
 31687                           ; Name         Instructions Cycles
 31688                           ; simple_byte           10     6 (average)
 31689                           ;	Chosen strategy is simple_byte
 31690  004F4C  5056               	movf	??_api_parse,w,c
 31691  004F4E  0A20               	xorlw	32	; case 32
 31692  004F50  B4D8               	btfsc	status,2,c
 31693  004F52  D7BD               	goto	l2566
 31694  004F54  0A10               	xorlw	16	; case 48
 31695  004F56  B4D8               	btfsc	status,2,c
 31696  004F58  D7C6               	goto	l2568
 31697  004F5A  0A60               	xorlw	96	; case 80
 31698  004F5C  A4D8               	btfss	status,2,c
 31699  004F5E  0012               	return	
 31700  004F60  D7D0               	goto	l2569
 31701  004F62                     l2567:
 31702                           
 31703                           ; BSR set to: 0
 31704                           
 31705                           ; BSR set to: 0
 31706  004F62  0100               	movlb	0	; () banked
 31707  004F64  51EA               	movf	api_parse@receivedDataLength& (0+255),w,b
 31708  004F66  5C58               	subwf	api_parse@idx,w,c
 31709  004F68  B0D8               	btfsc	status,0,c
 31710  004F6A  0012               	return	
 31711  004F6C  D7A2               	goto	l2563
 31712  004F6E                     __end_of_api_parse:
 31713                           	opt stack 0
 31714                           tosu	equ	0xFFF
 31715                           tosh	equ	0xFFE
 31716                           tosl	equ	0xFFD
 31717                           pclath	equ	0xFFA
 31718                           tblptru	equ	0xFF8
 31719                           tblptrh	equ	0xFF7
 31720                           tblptrl	equ	0xFF6
 31721                           tablat	equ	0xFF5
 31722                           prodh	equ	0xFF4
 31723                           prodl	equ	0xFF3
 31724                           intcon	equ	0xFF2
 31725                           intcon2	equ	0xFF1
 31726                           intcon3	equ	0xFF0
 31727                           indf0	equ	0xFEF
 31728                           postinc0	equ	0xFEE
 31729                           fsr0h	equ	0xFEA
 31730                           fsr0l	equ	0xFE9
 31731                           wreg	equ	0xFE8
 31732                           indf1	equ	0xFE7
 31733                           postdec1	equ	0xFE5
 31734                           plusw1	equ	0xFE3
 31735                           fsr1h	equ	0xFE2
 31736                           fsr1l	equ	0xFE1
 31737                           indf2	equ	0xFDF
 31738                           postinc2	equ	0xFDE
 31739                           postdec2	equ	0xFDD
 31740                           plusw2	equ	0xFDB
 31741                           fsr2h	equ	0xFDA
 31742                           fsr2l	equ	0xFD9
 31743                           status	equ	0xFD8
 31744                           
 31745 ;; *************** function __parse_command_short *****************
 31746 ;; Defined at:
 31747 ;;		line 416 in file "api.c"
 31748 ;; Parameters:    Size  Location     Type
 31749 ;;  cmd             1    wreg     unsigned char 
 31750 ;; Auto vars:     Size  Location     Type
 31751 ;;  cmd             1   19[COMRAM] unsigned char 
 31752 ;; Return value:  Size  Location     Type
 31753 ;;                  1    wreg      void 
 31754 ;; Registers used:
 31755 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 31756 ;; Tracked objects:
 31757 ;;		On entry : 0/0
 31758 ;;		On exit  : 0/0
 31759 ;;		Unchanged: 0/0
 31760 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31761 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31762 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31763 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31764 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31765 ;;Total ram usage:        1 bytes
 31766 ;; Hardware stack levels used:    1
 31767 ;; Hardware stack levels required when called:    3
 31768 ;; This function calls:
 31769 ;;		_i2c_eeprom_writeByte
 31770 ;;		_jump_to_main_program
 31771 ;;		_reboot
 31772 ;;		_system_delay_ms
 31773 ;; This function is called by:
 31774 ;;		_api_parse
 31775 ;; This function uses a non-reentrant model
 31776 ;;
 31777                           
 31778                           	psect	text152
 31779  005E46                     __ptext152:
 31780                           	opt stack 0
 31781  005E46                     __parse_command_short:
 31782                           	opt stack 26
 31783                           
 31784                           ;incstack = 0
 31785                           ;__parse_command_short@cmd stored from wreg
 31786  005E46  6E14               	movwf	__parse_command_short@cmd,c
 31787                           
 31788                           ;api.c: 418: switch(cmd)
 31789  005E48  D036               	goto	l2611
 31790  005E4A                     
 31791                           ;api.c: 421: i2c_eeprom_writeByte(0x100, 0x00);
 31792  005E4A  0E01               	movlw	1
 31793  005E4C  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31794  005E4E  0E00               	movlw	0
 31795  005E50  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31796  005E52  0E00               	movlw	0
 31797  005E54  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31798  005E56  ECAA  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 31799                           
 31800                           ;api.c: 422: system_delay_ms(10);
 31801  005E5A  0E0A               	movlw	10
 31802  005E5C  EC94  F03E         	call	_system_delay_ms
 31803                           
 31804                           ;api.c: 423: reboot();
 31805  005E60  EC2B  F040         	call	_reboot	;wreg free
 31806                           
 31807                           ;api.c: 424: break;
 31808  005E64  0012               	return	
 31809  005E66                     
 31810                           ;api.c: 427: i2c_eeprom_writeByte(0x100, 0x94);
 31811  005E66  0E01               	movlw	1
 31812  005E68  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31813  005E6A  0E00               	movlw	0
 31814  005E6C  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31815  005E6E  0E94               	movlw	148
 31816  005E70  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31817  005E72  ECAA  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 31818                           
 31819                           ;api.c: 428: system_delay_ms(10);
 31820  005E76  0E0A               	movlw	10
 31821  005E78  EC94  F03E         	call	_system_delay_ms
 31822                           
 31823                           ;api.c: 429: reboot();
 31824  005E7C  EC2B  F040         	call	_reboot	;wreg free
 31825                           
 31826                           ;api.c: 430: break;
 31827  005E80  0012               	return	
 31828  005E82                     
 31829                           ;api.c: 433: i2c_eeprom_writeByte(0x100, 0x78);
 31830  005E82  0E01               	movlw	1
 31831  005E84  6E0C               	movwf	i2c_eeprom_writeByte@address+1,c
 31832  005E86  0E00               	movlw	0
 31833  005E88  6E0B               	movwf	i2c_eeprom_writeByte@address,c
 31834  005E8A  0E78               	movlw	120
 31835  005E8C  6E0D               	movwf	i2c_eeprom_writeByte@data,c
 31836  005E8E  ECAA  F03B         	call	_i2c_eeprom_writeByte	;wreg free
 31837                           
 31838                           ;api.c: 434: system_delay_ms(10);
 31839  005E92  0E0A               	movlw	10
 31840  005E94  EC94  F03E         	call	_system_delay_ms
 31841                           
 31842                           ;api.c: 435: reboot();
 31843  005E98  EC2B  F040         	call	_reboot	;wreg free
 31844                           
 31845                           ;api.c: 436: break;
 31846  005E9C  0012               	return	
 31847  005E9E                     
 31848                           ;api.c: 439: jump_to_main_program();
 31849  005E9E  EC26  F03C         	call	_jump_to_main_program	;wreg free
 31850                           
 31851                           ;api.c: 440: break;
 31852  005EA2  0012               	return	
 31853  005EA4                     
 31854                           ;api.c: 443: --os.encoderCount;
 31855  005EA4  0100               	movlb	0	; () banked
 31856  005EA6  0760               	decf	_os& (0+255),f,b	;volatile
 31857                           
 31858                           ;api.c: 444: break;
 31859  005EA8  0012               	return	
 31860  005EAA                     
 31861                           ;api.c: 447: ++os.encoderCount;
 31862                           
 31863                           ; BSR set to: 0
 31864  005EAA  0100               	movlb	0	; () banked
 31865  005EAC  2B60               	incf	_os& (0+255),f,b	;volatile
 31866                           
 31867                           ;api.c: 448: break;
 31868  005EAE  0012               	return	
 31869  005EB0                     
 31870                           ;api.c: 451: ++os.buttonCount;
 31871                           
 31872                           ; BSR set to: 0
 31873  005EB0  0100               	movlb	0	; () banked
 31874  005EB2  2B61               	incf	(_os+1)& (0+255),f,b	;volatile
 31875                           
 31876                           ; BSR set to: 0
 31877                           ;api.c: 453: }
 31878                           
 31879                           ;api.c: 452: break;
 31880  005EB4  0012               	return	
 31881  005EB6                     l2611:
 31882                           
 31883                           ; BSR set to: 0
 31884  005EB6  5014               	movf	__parse_command_short@cmd,w,c
 31885                           
 31886                           ; Switch size 1, requested type "space"
 31887                           ; Number of cases is 7, Range of values is 32 to 62
 31888                           ; switch strategies available:
 31889                           ; Name         Instructions Cycles
 31890                           ; simple_byte           22    12 (average)
 31891                           ;	Chosen strategy is simple_byte
 31892  005EB8  0A20               	xorlw	32	; case 32
 31893  005EBA  B4D8               	btfsc	status,2,c
 31894  005EBC  D7C6               	goto	l2612
 31895  005EBE  0A01               	xorlw	1	; case 33
 31896  005EC0  B4D8               	btfsc	status,2,c
 31897  005EC2  D7D1               	goto	l2614
 31898  005EC4  0A03               	xorlw	3	; case 34
 31899  005EC6  B4D8               	btfsc	status,2,c
 31900  005EC8  D7DC               	goto	l2615
 31901  005ECA  0A01               	xorlw	1	; case 35
 31902  005ECC  B4D8               	btfsc	status,2,c
 31903  005ECE  D7E7               	goto	l2616
 31904  005ED0  0A1F               	xorlw	31	; case 60
 31905  005ED2  B4D8               	btfsc	status,2,c
 31906  005ED4  D7E7               	goto	l2617
 31907  005ED6  0A01               	xorlw	1	; case 61
 31908  005ED8  B4D8               	btfsc	status,2,c
 31909  005EDA  D7E7               	goto	l2618
 31910  005EDC  0A03               	xorlw	3	; case 62
 31911  005EDE  A4D8               	btfss	status,2,c
 31912  005EE0  0012               	return	
 31913  005EE2  D7E6               	goto	l2619
 31914  005EE4                     __end_of__parse_command_short:
 31915                           	opt stack 0
 31916                           tosu	equ	0xFFF
 31917                           tosh	equ	0xFFE
 31918                           tosl	equ	0xFFD
 31919                           pclath	equ	0xFFA
 31920                           tblptru	equ	0xFF8
 31921                           tblptrh	equ	0xFF7
 31922                           tblptrl	equ	0xFF6
 31923                           tablat	equ	0xFF5
 31924                           prodh	equ	0xFF4
 31925                           prodl	equ	0xFF3
 31926                           intcon	equ	0xFF2
 31927                           intcon2	equ	0xFF1
 31928                           intcon3	equ	0xFF0
 31929                           indf0	equ	0xFEF
 31930                           postinc0	equ	0xFEE
 31931                           fsr0h	equ	0xFEA
 31932                           fsr0l	equ	0xFE9
 31933                           wreg	equ	0xFE8
 31934                           indf1	equ	0xFE7
 31935                           postdec1	equ	0xFE5
 31936                           plusw1	equ	0xFE3
 31937                           fsr1h	equ	0xFE2
 31938                           fsr1l	equ	0xFE1
 31939                           indf2	equ	0xFDF
 31940                           postinc2	equ	0xFDE
 31941                           postdec2	equ	0xFDD
 31942                           plusw2	equ	0xFDB
 31943                           fsr2h	equ	0xFDA
 31944                           fsr2l	equ	0xFD9
 31945                           status	equ	0xFD8
 31946                           
 31947 ;; *************** function _system_delay_ms *****************
 31948 ;; Defined at:
 31949 ;;		line 62 in file "os.c"
 31950 ;; Parameters:    Size  Location     Type
 31951 ;;  ms              1    wreg     unsigned char 
 31952 ;; Auto vars:     Size  Location     Type
 31953 ;;  ms              1    1[COMRAM] unsigned char 
 31954 ;;  cntr            1    2[COMRAM] unsigned char 
 31955 ;; Return value:  Size  Location     Type
 31956 ;;                  1    wreg      void 
 31957 ;; Registers used:
 31958 ;;		wreg, status,2, status,0, cstack
 31959 ;; Tracked objects:
 31960 ;;		On entry : 0/0
 31961 ;;		On exit  : 0/0
 31962 ;;		Unchanged: 0/0
 31963 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 31964 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31965 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31966 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31967 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 31968 ;;Total ram usage:        3 bytes
 31969 ;; Hardware stack levels used:    1
 31970 ;; This function calls:
 31971 ;;		Nothing
 31972 ;; This function is called by:
 31973 ;;		__parse_command_short
 31974 ;; This function uses a non-reentrant model
 31975 ;;
 31976                           
 31977                           	psect	text153
 31978  007D28                     __ptext153:
 31979                           	opt stack 0
 31980  007D28                     _system_delay_ms:
 31981                           	opt stack 28
 31982                           
 31983                           ;incstack = 0
 31984                           ;system_delay_ms@ms stored from wreg
 31985  007D28  6E02               	movwf	system_delay_ms@ms,c
 31986                           
 31987                           ;os.c: 64: uint8_t cntr;;os.c: 65: for(cntr=0; cntr<ms; ++cntr)
 31988  007D2A  0E00               	movlw	0
 31989  007D2C  6E03               	movwf	system_delay_ms@cntr,c
 31990  007D2E  D009               	goto	l1094
 31991  007D30                     
 31992                           ;os.c: 66: {;os.c: 67: _delay((unsigned long)((6)*(8000000/4000.0)));
 31993  007D30  0E10               	movlw	16
 31994  007D32  6E01               	movwf	??_system_delay_ms& (0+255),c
 31995  007D34  0E94               	movlw	148
 31996  007D36                     u12037:
 31997  007D36  2EE8               	decfsz	wreg,f,c
 31998  007D38  D7FE               	bra	u12037
 31999  007D3A  2E01               	decfsz	??_system_delay_ms& (0+255),f,c
 32000  007D3C  D7FC               	bra	u12037
 32001  007D3E  D000               	nop2	
 32002  007D40  2A03               	incf	system_delay_ms@cntr,f,c
 32003  007D42                     l1094:
 32004  007D42  5002               	movf	system_delay_ms@ms,w,c
 32005  007D44  5C03               	subwf	system_delay_ms@cntr,w,c
 32006  007D46  B0D8               	btfsc	status,0,c
 32007  007D48  0012               	return	
 32008  007D4A  D7F2               	goto	l1095
 32009  007D4C                     __end_of_system_delay_ms:
 32010                           	opt stack 0
 32011                           tosu	equ	0xFFF
 32012                           tosh	equ	0xFFE
 32013                           tosl	equ	0xFFD
 32014                           pclath	equ	0xFFA
 32015                           tblptru	equ	0xFF8
 32016                           tblptrh	equ	0xFF7
 32017                           tblptrl	equ	0xFF6
 32018                           tablat	equ	0xFF5
 32019                           prodh	equ	0xFF4
 32020                           prodl	equ	0xFF3
 32021                           intcon	equ	0xFF2
 32022                           intcon2	equ	0xFF1
 32023                           intcon3	equ	0xFF0
 32024                           indf0	equ	0xFEF
 32025                           postinc0	equ	0xFEE
 32026                           fsr0h	equ	0xFEA
 32027                           fsr0l	equ	0xFE9
 32028                           wreg	equ	0xFE8
 32029                           indf1	equ	0xFE7
 32030                           postdec1	equ	0xFE5
 32031                           plusw1	equ	0xFE3
 32032                           fsr1h	equ	0xFE2
 32033                           fsr1l	equ	0xFE1
 32034                           indf2	equ	0xFDF
 32035                           postinc2	equ	0xFDE
 32036                           postdec2	equ	0xFDD
 32037                           plusw2	equ	0xFDB
 32038                           fsr2h	equ	0xFDA
 32039                           fsr2l	equ	0xFD9
 32040                           status	equ	0xFD8
 32041                           
 32042 ;; *************** function _reboot *****************
 32043 ;; Defined at:
 32044 ;;		line 247 in file "os.c"
 32045 ;; Parameters:    Size  Location     Type
 32046 ;;		None
 32047 ;; Auto vars:     Size  Location     Type
 32048 ;;		None
 32049 ;; Return value:  Size  Location     Type
 32050 ;;                  1    wreg      void 
 32051 ;; Registers used:
 32052 ;;		None
 32053 ;; Tracked objects:
 32054 ;;		On entry : 0/0
 32055 ;;		On exit  : 0/0
 32056 ;;		Unchanged: 0/0
 32057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32058 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32059 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32060 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32061 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32062 ;;Total ram usage:        0 bytes
 32063 ;; Hardware stack levels used:    1
 32064 ;; This function calls:
 32065 ;;		Nothing
 32066 ;; This function is called by:
 32067 ;;		__parse_command_short
 32068 ;; This function uses a non-reentrant model
 32069 ;;
 32070                           
 32071                           	psect	text154
 32072  008056                     __ptext154:
 32073                           	opt stack 0
 32074  008056                     _reboot:
 32075                           	opt stack 28
 32076                           
 32077                           ;incstack = 0
 32078                           ;os.c: 271: while(1);
 32079  008056  D7FF               	goto	_reboot
 32080  008058                     __end_of_reboot:
 32081                           	opt stack 0
 32082                           tosu	equ	0xFFF
 32083                           tosh	equ	0xFFE
 32084                           tosl	equ	0xFFD
 32085                           pclath	equ	0xFFA
 32086                           tblptru	equ	0xFF8
 32087                           tblptrh	equ	0xFF7
 32088                           tblptrl	equ	0xFF6
 32089                           tablat	equ	0xFF5
 32090                           prodh	equ	0xFF4
 32091                           prodl	equ	0xFF3
 32092                           intcon	equ	0xFF2
 32093                           intcon2	equ	0xFF1
 32094                           intcon3	equ	0xFF0
 32095                           indf0	equ	0xFEF
 32096                           postinc0	equ	0xFEE
 32097                           fsr0h	equ	0xFEA
 32098                           fsr0l	equ	0xFE9
 32099                           wreg	equ	0xFE8
 32100                           indf1	equ	0xFE7
 32101                           postdec1	equ	0xFE5
 32102                           plusw1	equ	0xFE3
 32103                           fsr1h	equ	0xFE2
 32104                           fsr1l	equ	0xFE1
 32105                           indf2	equ	0xFDF
 32106                           postinc2	equ	0xFDE
 32107                           postdec2	equ	0xFDD
 32108                           plusw2	equ	0xFDB
 32109                           fsr2h	equ	0xFDA
 32110                           fsr2l	equ	0xFD9
 32111                           status	equ	0xFD8
 32112                           
 32113 ;; *************** function _jump_to_main_program *****************
 32114 ;; Defined at:
 32115 ;;		line 226 in file "os.c"
 32116 ;; Parameters:    Size  Location     Type
 32117 ;;		None
 32118 ;; Auto vars:     Size  Location     Type
 32119 ;;		None
 32120 ;; Return value:  Size  Location     Type
 32121 ;;                  1    wreg      void 
 32122 ;; Registers used:
 32123 ;;		wreg, status,2
 32124 ;; Tracked objects:
 32125 ;;		On entry : 0/0
 32126 ;;		On exit  : 0/0
 32127 ;;		Unchanged: 0/0
 32128 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32129 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32130 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32131 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32132 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32133 ;;Total ram usage:        0 bytes
 32134 ;; Hardware stack levels used:    1
 32135 ;; This function calls:
 32136 ;;		Nothing
 32137 ;; This function is called by:
 32138 ;;		_main
 32139 ;;		__ui_encoder
 32140 ;;		__parse_command_short
 32141 ;; This function uses a non-reentrant model
 32142 ;;
 32143                           
 32144                           	psect	text155
 32145  00784C                     __ptext155:
 32146                           	opt stack 0
 32147  00784C                     _jump_to_main_program:
 32148                           	opt stack 28
 32149                           
 32150                           ;os.c: 229: DMACON1bits.DMAEN = 0;
 32151                           
 32152                           ;incstack = 0
 32153  00784C  9088               	bcf	3976,0,c	;volatile
 32154                           
 32155                           ;os.c: 230: SSP2CON1bits.SSPEN = 0;
 32156  00784E  9A72               	bcf	3954,5,c	;volatile
 32157                           
 32158                           ;os.c: 231: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 32159  007850  0E55               	movlw	85
 32160  007852  6EA7               	movwf	4007,c	;volsfr
 32161  007854  0EAA               	movlw	170
 32162  007856  6EA7               	movwf	4007,c	;volsfr
 32163  007858  010E               	movlb	14	; () banked
 32164  00785A  91BF               	bcf	191,0,b	;volatile
 32165                           
 32166                           ;os.c: 232: RPOR23 = 0b00000;
 32167  00785C  0E00               	movlw	0
 32168  00785E  6FD7               	movwf	215,b	;volatile
 32169                           
 32170                           ;os.c: 233: RPINR21 = 0b11111;
 32171  007860  0E1F               	movlw	31
 32172  007862  6FFC               	movwf	252,b	;volatile
 32173                           
 32174                           ;os.c: 234: RPINR23 = 0b11111;
 32175  007864  0E1F               	movlw	31
 32176  007866  6FFE               	movwf	254,b	;volatile
 32177                           
 32178                           ;os.c: 235: RPINR21 = 0b11111;
 32179  007868  0E1F               	movlw	31
 32180  00786A  6FFC               	movwf	252,b	;volatile
 32181                           
 32182                           ;os.c: 236: RPOR21 = 0b00000;
 32183  00786C  0E00               	movlw	0
 32184  00786E  6FD5               	movwf	213,b	;volatile
 32185                           
 32186                           ;os.c: 237: RPOR22 = 0b00000;
 32187  007870  0E00               	movlw	0
 32188  007872  6FD6               	movwf	214,b	;volatile
 32189                           
 32190                           ;os.c: 238: RPINR22 = 0b11111;
 32191  007874  0E1F               	movlw	31
 32192  007876  6FFD               	movwf	253,b	;volatile
 32193                           
 32194                           ;os.c: 239: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 32195  007878  0E55               	movlw	85
 32196  00787A  6EA7               	movwf	4007,c	;volsfr
 32197  00787C  0EAA               	movlw	170
 32198  00787E  6EA7               	movwf	4007,c	;volsfr
 32199                           
 32200                           ; BSR set to: 14
 32201  007880  81BF               	bsf	191,0,b	;volatile
 32202  007882  EF00 F048          	goto	36864	; ;# 
 32203  007886  0012               	return		;funcret
 32204  007888                     __end_of_jump_to_main_program:
 32205                           	opt stack 0
 32206                           tosu	equ	0xFFF
 32207                           tosh	equ	0xFFE
 32208                           tosl	equ	0xFFD
 32209                           pclath	equ	0xFFA
 32210                           tblptru	equ	0xFF8
 32211                           tblptrh	equ	0xFF7
 32212                           tblptrl	equ	0xFF6
 32213                           tablat	equ	0xFF5
 32214                           prodh	equ	0xFF4
 32215                           prodl	equ	0xFF3
 32216                           intcon	equ	0xFF2
 32217                           intcon2	equ	0xFF1
 32218                           intcon3	equ	0xFF0
 32219                           indf0	equ	0xFEF
 32220                           postinc0	equ	0xFEE
 32221                           fsr0h	equ	0xFEA
 32222                           fsr0l	equ	0xFE9
 32223                           wreg	equ	0xFE8
 32224                           indf1	equ	0xFE7
 32225                           postdec1	equ	0xFE5
 32226                           plusw1	equ	0xFE3
 32227                           fsr1h	equ	0xFE2
 32228                           fsr1l	equ	0xFE1
 32229                           indf2	equ	0xFDF
 32230                           postinc2	equ	0xFDE
 32231                           postdec2	equ	0xFDD
 32232                           plusw2	equ	0xFDB
 32233                           fsr2h	equ	0xFDA
 32234                           fsr2l	equ	0xFD9
 32235                           status	equ	0xFD8
 32236                           
 32237 ;; *************** function _i2c_eeprom_writeByte *****************
 32238 ;; Defined at:
 32239 ;;		line 344 in file "i2c.c"
 32240 ;; Parameters:    Size  Location     Type
 32241 ;;  address         2   10[COMRAM] unsigned int 
 32242 ;;  data            1   12[COMRAM] unsigned char 
 32243 ;; Auto vars:     Size  Location     Type
 32244 ;;  dat             2   16[COMRAM] unsigned char [2]
 32245 ;;  slave_addres    1   18[COMRAM] unsigned char 
 32246 ;; Return value:  Size  Location     Type
 32247 ;;                  1    wreg      void 
 32248 ;; Registers used:
 32249 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32250 ;; Tracked objects:
 32251 ;;		On entry : 0/0
 32252 ;;		On exit  : 0/0
 32253 ;;		Unchanged: 0/0
 32254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32255 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32256 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32257 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32258 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32259 ;;Total ram usage:        9 bytes
 32260 ;; Hardware stack levels used:    1
 32261 ;; Hardware stack levels required when called:    2
 32262 ;; This function calls:
 32263 ;;		__i2c_write
 32264 ;;		_i2c_set_frequency
 32265 ;; This function is called by:
 32266 ;;		__normal_mode
 32267 ;;		__parse_command_short
 32268 ;; This function uses a non-reentrant model
 32269 ;;
 32270                           
 32271                           	psect	text156
 32272  007754                     __ptext156:
 32273                           	opt stack 0
 32274  007754                     _i2c_eeprom_writeByte:
 32275                           	opt stack 26
 32276                           
 32277                           ;i2c.c: 346: uint8_t slave_address;;i2c.c: 347: uint8_t dat[2];;i2c.c: 349: slave_addres
      +                          s = 0b10100000 | ((address&0b0000011100000000)>>7);
 32278                           
 32279                           ;incstack = 0
 32280  007754  C00B  F00E         	movff	i2c_eeprom_writeByte@address,??_i2c_eeprom_writeByte
 32281  007758  C00C  F00F         	movff	i2c_eeprom_writeByte@address+1,??_i2c_eeprom_writeByte+1
 32282  00775C  0E07               	movlw	7
 32283  00775E  6E10               	movwf	(??_i2c_eeprom_writeByte+2)& (0+255),c
 32284  007760                     u8775:
 32285  007760  90D8               	bcf	status,0,c
 32286  007762  320F               	rrcf	??_i2c_eeprom_writeByte+1,f,c
 32287  007764  320E               	rrcf	??_i2c_eeprom_writeByte,f,c
 32288  007766  2E10               	decfsz	(??_i2c_eeprom_writeByte+2)& (0+255),f,c
 32289  007768  D7FB               	goto	u8775
 32290  00776A  500E               	movf	??_i2c_eeprom_writeByte,w,c
 32291  00776C  0B0E               	andlw	14
 32292  00776E  09A0               	iorlw	160
 32293  007770  6E13               	movwf	i2c_eeprom_writeByte@slave_address,c
 32294                           
 32295                           ;i2c.c: 350: dat[0] = address & 0xFF;
 32296  007772  C00B  F011         	movff	i2c_eeprom_writeByte@address,i2c_eeprom_writeByte@dat
 32297                           
 32298                           ;i2c.c: 351: dat[1] = data;
 32299  007776  C00D  F012         	movff	i2c_eeprom_writeByte@data,i2c_eeprom_writeByte@dat+1
 32300                           
 32301                           ;i2c.c: 354: i2c_set_frequency(I2C_FREQUENCY_400kHz);
 32302  00777A  0E02               	movlw	2
 32303  00777C  EC09  F03E         	call	_i2c_set_frequency
 32304                           
 32305                           ;i2c.c: 356: _i2c_write(slave_address, &dat[0], 2);
 32306  007780  0E11               	movlw	low i2c_eeprom_writeByte@dat
 32307  007782  6E06               	movwf	__i2c_write@data,c
 32308  007784  0E00               	movlw	high i2c_eeprom_writeByte@dat
 32309  007786  6E07               	movwf	__i2c_write@data+1,c
 32310  007788  0E02               	movlw	2
 32311  00778A  6E08               	movwf	__i2c_write@length,c
 32312  00778C  5013               	movf	i2c_eeprom_writeByte@slave_address,w,c
 32313  00778E  ECDD  F03A         	call	__i2c_write
 32314  007792  0012               	return		;funcret
 32315  007794                     __end_of_i2c_eeprom_writeByte:
 32316                           	opt stack 0
 32317                           tosu	equ	0xFFF
 32318                           tosh	equ	0xFFE
 32319                           tosl	equ	0xFFD
 32320                           pclath	equ	0xFFA
 32321                           tblptru	equ	0xFF8
 32322                           tblptrh	equ	0xFF7
 32323                           tblptrl	equ	0xFF6
 32324                           tablat	equ	0xFF5
 32325                           prodh	equ	0xFF4
 32326                           prodl	equ	0xFF3
 32327                           intcon	equ	0xFF2
 32328                           intcon2	equ	0xFF1
 32329                           intcon3	equ	0xFF0
 32330                           indf0	equ	0xFEF
 32331                           postinc0	equ	0xFEE
 32332                           fsr0h	equ	0xFEA
 32333                           fsr0l	equ	0xFE9
 32334                           wreg	equ	0xFE8
 32335                           indf1	equ	0xFE7
 32336                           postdec1	equ	0xFE5
 32337                           plusw1	equ	0xFE3
 32338                           fsr1h	equ	0xFE2
 32339                           fsr1l	equ	0xFE1
 32340                           indf2	equ	0xFDF
 32341                           postinc2	equ	0xFDE
 32342                           postdec2	equ	0xFDD
 32343                           plusw2	equ	0xFDB
 32344                           fsr2h	equ	0xFDA
 32345                           fsr2l	equ	0xFD9
 32346                           status	equ	0xFD8
 32347                           
 32348 ;; *************** function _i2c_set_frequency *****************
 32349 ;; Defined at:
 32350 ;;		line 115 in file "i2c.c"
 32351 ;; Parameters:    Size  Location     Type
 32352 ;;  frequency       1    wreg     enum E6622
 32353 ;; Auto vars:     Size  Location     Type
 32354 ;;  frequency       1    0[COMRAM] enum E6622
 32355 ;; Return value:  Size  Location     Type
 32356 ;;                  1    wreg      void 
 32357 ;; Registers used:
 32358 ;;		wreg, status,2, status,0
 32359 ;; Tracked objects:
 32360 ;;		On entry : 0/0
 32361 ;;		On exit  : 0/0
 32362 ;;		Unchanged: 0/0
 32363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32364 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32365 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32366 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32367 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32368 ;;Total ram usage:        1 bytes
 32369 ;; Hardware stack levels used:    1
 32370 ;; This function calls:
 32371 ;;		Nothing
 32372 ;; This function is called by:
 32373 ;;		_i2c_init
 32374 ;;		__ic2_display_set_address
 32375 ;;		_i2c_display_send_init_sequence
 32376 ;;		_i2c_display_cursor
 32377 ;;		_i2c_display_write_fixed
 32378 ;;		_i2c_digipot_reset_on
 32379 ;;		_i2c_digipot_reset_off
 32380 ;;		_i2c_digipot_backlight
 32381 ;;		_i2c_eeprom_writeByte
 32382 ;;		_i2c_eeprom_readByte
 32383 ;;		_i2c_display_write
 32384 ;;		_i2c_eeprom_write
 32385 ;;		_i2c_eeprom_read
 32386 ;; This function uses a non-reentrant model
 32387 ;;
 32388                           
 32389                           	psect	text157
 32390  007C12                     __ptext157:
 32391                           	opt stack 0
 32392  007C12                     _i2c_set_frequency:
 32393                           	opt stack 28
 32394                           
 32395                           ;incstack = 0
 32396                           ;i2c_set_frequency@frequency stored from wreg
 32397  007C12  6E01               	movwf	i2c_set_frequency@frequency,c
 32398                           
 32399                           ;i2c.c: 117: switch(frequency)
 32400  007C14  D007               	goto	l1187
 32401  007C16                     
 32402                           ;i2c.c: 120: SSP1ADD = 119;
 32403  007C16  0E77               	movlw	119
 32404  007C18  D003               	goto	L35
 32405  007C1A                     
 32406                           ;i2c.c: 123: SSP1ADD = 59;
 32407  007C1A  0E3B               	movlw	59
 32408  007C1C  D001               	goto	L35
 32409  007C1E                     
 32410                           ;i2c.c: 126: SSP1ADD = 29;
 32411  007C1E  0E1D               	movlw	29
 32412  007C20                     L35:
 32413  007C20  6EC8               	movwf	4040,c	;volatile
 32414                           
 32415                           ;i2c.c: 128: }
 32416                           
 32417                           ;i2c.c: 127: break;
 32418  007C22  D00A               	goto	l1189
 32419  007C24                     l1187:
 32420  007C24  5001               	movf	i2c_set_frequency@frequency,w,c
 32421                           
 32422                           ; Switch size 1, requested type "space"
 32423                           ; Number of cases is 3, Range of values is 0 to 2
 32424                           ; switch strategies available:
 32425                           ; Name         Instructions Cycles
 32426                           ; simple_byte           10     6 (average)
 32427                           ;	Chosen strategy is simple_byte
 32428  007C26  0A00               	xorlw	0	; case 0
 32429  007C28  B4D8               	btfsc	status,2,c
 32430  007C2A  D7F5               	goto	l1188
 32431  007C2C  0A01               	xorlw	1	; case 1
 32432  007C2E  B4D8               	btfsc	status,2,c
 32433  007C30  D7F4               	goto	l1190
 32434  007C32  0A03               	xorlw	3	; case 2
 32435  007C34  B4D8               	btfsc	status,2,c
 32436  007C36  D7F3               	goto	l1191
 32437  007C38                     l1189:
 32438                           
 32439                           ;i2c.c: 130: i2c_frequency = frequency;
 32440  007C38  C001  F099         	movff	i2c_set_frequency@frequency,_i2c_frequency
 32441  007C3C  0012               	return		;funcret
 32442  007C3E                     __end_of_i2c_set_frequency:
 32443                           	opt stack 0
 32444                           tosu	equ	0xFFF
 32445                           tosh	equ	0xFFE
 32446                           tosl	equ	0xFFD
 32447                           pclath	equ	0xFFA
 32448                           tblptru	equ	0xFF8
 32449                           tblptrh	equ	0xFF7
 32450                           tblptrl	equ	0xFF6
 32451                           tablat	equ	0xFF5
 32452                           prodh	equ	0xFF4
 32453                           prodl	equ	0xFF3
 32454                           intcon	equ	0xFF2
 32455                           intcon2	equ	0xFF1
 32456                           intcon3	equ	0xFF0
 32457                           indf0	equ	0xFEF
 32458                           postinc0	equ	0xFEE
 32459                           fsr0h	equ	0xFEA
 32460                           fsr0l	equ	0xFE9
 32461                           wreg	equ	0xFE8
 32462                           indf1	equ	0xFE7
 32463                           postdec1	equ	0xFE5
 32464                           plusw1	equ	0xFE3
 32465                           fsr1h	equ	0xFE2
 32466                           fsr1l	equ	0xFE1
 32467                           indf2	equ	0xFDF
 32468                           postinc2	equ	0xFDE
 32469                           postdec2	equ	0xFDD
 32470                           plusw2	equ	0xFDB
 32471                           fsr2h	equ	0xFDA
 32472                           fsr2l	equ	0xFD9
 32473                           status	equ	0xFD8
 32474                           
 32475 ;; *************** function __i2c_write *****************
 32476 ;; Defined at:
 32477 ;;		line 134 in file "i2c.c"
 32478 ;; Parameters:    Size  Location     Type
 32479 ;;  slave_addres    1    wreg     unsigned char 
 32480 ;;  data            2    5[COMRAM] PTR unsigned char 
 32481 ;;		 -> i2c_eeprom_read@addr(1), i2c_eeprom_write@dat(17), i2c_eeprom_readByte@addr(1), i2c_eeprom_writeByte@dat(2), 
 32482 ;;		 -> i2c_digipot_backlight@data_array(2), i2c_digipot_reset_off@data_array(2), i2c_digipot_reset_on@data_array(2), i2
      +c_display_send_init_sequence@init_sequence(9), 
 32483 ;;		 -> _ic2_display_set_address@data_array(2), 
 32484 ;;  length          1    7[COMRAM] unsigned char 
 32485 ;; Auto vars:     Size  Location     Type
 32486 ;;  slave_addres    1    8[COMRAM] unsigned char 
 32487 ;;  cntr            1    9[COMRAM] unsigned char 
 32488 ;; Return value:  Size  Location     Type
 32489 ;;                  1    wreg      void 
 32490 ;; Registers used:
 32491 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 32492 ;; Tracked objects:
 32493 ;;		On entry : 0/0
 32494 ;;		On exit  : 0/0
 32495 ;;		Unchanged: 0/0
 32496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32497 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32498 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32499 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32500 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32501 ;;Total ram usage:        5 bytes
 32502 ;; Hardware stack levels used:    1
 32503 ;; Hardware stack levels required when called:    1
 32504 ;; This function calls:
 32505 ;;		__i2c_send
 32506 ;;		__i2c_start
 32507 ;;		__i2c_stop
 32508 ;;		__i2c_wait_idle
 32509 ;; This function is called by:
 32510 ;;		__ic2_display_set_address
 32511 ;;		_i2c_display_send_init_sequence
 32512 ;;		_i2c_digipot_reset_on
 32513 ;;		_i2c_digipot_reset_off
 32514 ;;		_i2c_digipot_backlight
 32515 ;;		_i2c_eeprom_writeByte
 32516 ;;		_i2c_eeprom_readByte
 32517 ;;		_i2c_eeprom_write
 32518 ;;		_i2c_eeprom_read
 32519 ;; This function uses a non-reentrant model
 32520 ;;
 32521                           
 32522                           	psect	text158
 32523  0075BA                     __ptext158:
 32524                           	opt stack 0
 32525  0075BA                     __i2c_write:
 32526                           	opt stack 27
 32527                           
 32528                           ;incstack = 0
 32529                           ;__i2c_write@slave_address stored from wreg
 32530  0075BA  6E09               	movwf	__i2c_write@slave_address,c
 32531                           
 32532                           ;i2c.c: 136: uint8_t cntr;;i2c.c: 138: _i2c_wait_idle();
 32533  0075BC  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 32534                           
 32535                           ;i2c.c: 139: _i2c_start();
 32536  0075C0  EC0C  F040         	call	__i2c_start	;wreg free
 32537                           
 32538                           ;i2c.c: 140: _i2c_wait_idle();
 32539  0075C4  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 32540                           
 32541                           ;i2c.c: 141: _i2c_send(slave_address);
 32542  0075C8  5009               	movf	__i2c_write@slave_address,w,c
 32543  0075CA  EC10  F040         	call	__i2c_send
 32544                           
 32545                           ;i2c.c: 142: _i2c_wait_idle();
 32546  0075CE  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 32547                           
 32548                           ;i2c.c: 144: for(cntr=0; cntr<length; ++cntr)
 32549  0075D2  0E00               	movlw	0
 32550  0075D4  6E0A               	movwf	__i2c_write@cntr,c
 32551  0075D6  D00E               	goto	l1195
 32552  0075D8                     
 32553                           ;i2c.c: 145: {;i2c.c: 146: _i2c_send(data[cntr]);
 32554  0075D8  500A               	movf	__i2c_write@cntr,w,c
 32555  0075DA  0D01               	mullw	1
 32556  0075DC  50F3               	movf	prodl,w,c
 32557  0075DE  2406               	addwf	__i2c_write@data,w,c
 32558  0075E0  6ED9               	movwf	fsr2l,c
 32559  0075E2  50F4               	movf	prodh,w,c
 32560  0075E4  2007               	addwfc	__i2c_write@data+1,w,c
 32561  0075E6  6EDA               	movwf	fsr2h,c
 32562  0075E8  50DF               	movf	indf2,w,c
 32563  0075EA  EC10  F040         	call	__i2c_send
 32564                           
 32565                           ;i2c.c: 147: _i2c_wait_idle();
 32566  0075EE  EC3A  F038         	call	__i2c_wait_idle	;wreg free
 32567  0075F2  2A0A               	incf	__i2c_write@cntr,f,c
 32568  0075F4                     l1195:
 32569  0075F4  5008               	movf	__i2c_write@length,w,c
 32570  0075F6  5C0A               	subwf	__i2c_write@cntr,w,c
 32571  0075F8  A0D8               	btfss	status,0,c
 32572  0075FA  D7EE               	goto	l1196
 32573                           
 32574                           ;i2c.c: 148: };i2c.c: 150: _i2c_stop();
 32575  0075FC  EC08  F040         	call	__i2c_stop	;wreg free
 32576  007600  0012               	return		;funcret
 32577  007602                     __end_of__i2c_write:
 32578                           	opt stack 0
 32579                           tosu	equ	0xFFF
 32580                           tosh	equ	0xFFE
 32581                           tosl	equ	0xFFD
 32582                           pclath	equ	0xFFA
 32583                           tblptru	equ	0xFF8
 32584                           tblptrh	equ	0xFF7
 32585                           tblptrl	equ	0xFF6
 32586                           tablat	equ	0xFF5
 32587                           prodh	equ	0xFF4
 32588                           prodl	equ	0xFF3
 32589                           intcon	equ	0xFF2
 32590                           intcon2	equ	0xFF1
 32591                           intcon3	equ	0xFF0
 32592                           indf0	equ	0xFEF
 32593                           postinc0	equ	0xFEE
 32594                           fsr0h	equ	0xFEA
 32595                           fsr0l	equ	0xFE9
 32596                           wreg	equ	0xFE8
 32597                           indf1	equ	0xFE7
 32598                           postdec1	equ	0xFE5
 32599                           plusw1	equ	0xFE3
 32600                           fsr1h	equ	0xFE2
 32601                           fsr1l	equ	0xFE1
 32602                           indf2	equ	0xFDF
 32603                           postinc2	equ	0xFDE
 32604                           postdec2	equ	0xFDD
 32605                           plusw2	equ	0xFDB
 32606                           fsr2h	equ	0xFDA
 32607                           fsr2l	equ	0xFD9
 32608                           status	equ	0xFD8
 32609                           
 32610 ;; *************** function __i2c_wait_idle *****************
 32611 ;; Defined at:
 32612 ;;		line 48 in file "i2c.c"
 32613 ;; Parameters:    Size  Location     Type
 32614 ;;		None
 32615 ;; Auto vars:     Size  Location     Type
 32616 ;;		None
 32617 ;; Return value:  Size  Location     Type
 32618 ;;                  1    wreg      void 
 32619 ;; Registers used:
 32620 ;;		wreg, status,2, status,0
 32621 ;; Tracked objects:
 32622 ;;		On entry : 0/0
 32623 ;;		On exit  : 0/0
 32624 ;;		Unchanged: 0/0
 32625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32626 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32627 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32628 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32629 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32630 ;;Total ram usage:        5 bytes
 32631 ;; Hardware stack levels used:    1
 32632 ;; This function calls:
 32633 ;;		Nothing
 32634 ;; This function is called by:
 32635 ;;		__i2c_write
 32636 ;;		__i2c_read
 32637 ;;		_i2c_display_write_fixed
 32638 ;;		_i2c_display_write
 32639 ;; This function uses a non-reentrant model
 32640 ;;
 32641                           
 32642                           	psect	text159
 32643  007074                     __ptext159:
 32644                           	opt stack 0
 32645  007074                     __i2c_wait_idle:
 32646                           	opt stack 27
 32647                           
 32648                           ;i2c.c: 50: while(SSP1CON2bits.ACKEN | SSP1CON2bits.RCEN1 | SSP1CON2bits.PEN | SSP1CON2b
      +                          its.RSEN | SSP1CON2bits.SEN | SSP1STATbits.R_W ){}
 32649                           
 32650                           ;incstack = 0
 32651  007074  A4C7               	btfss	4039,2,c	;volatile
 32652  007076  D003               	goto	u7450
 32653  007078  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32654  00707A  2A01               	incf	??__i2c_wait_idle& (0+255),f,c
 32655  00707C  D001               	goto	u7458
 32656  00707E                     u7450:
 32657  00707E  6A01               	clrf	??__i2c_wait_idle& (0+255),c
 32658  007080                     u7458:
 32659  007080  A0C5               	btfss	4037,0,c	;volatile
 32660  007082  D003               	goto	u7460
 32661  007084  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32662  007086  2A02               	incf	(??__i2c_wait_idle+1)& (0+255),f,c
 32663  007088  D001               	goto	u7468
 32664  00708A                     u7460:
 32665  00708A  6A02               	clrf	(??__i2c_wait_idle+1)& (0+255),c
 32666  00708C                     u7468:
 32667  00708C  A2C5               	btfss	4037,1,c	;volatile
 32668  00708E  D003               	goto	u7470
 32669  007090  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32670  007092  2A03               	incf	(??__i2c_wait_idle+2)& (0+255),f,c
 32671  007094  D001               	goto	u7478
 32672  007096                     u7470:
 32673  007096  6A03               	clrf	(??__i2c_wait_idle+2)& (0+255),c
 32674  007098                     u7478:
 32675  007098  A4C5               	btfss	4037,2,c	;volatile
 32676  00709A  D003               	goto	u7480
 32677  00709C  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32678  00709E  2A04               	incf	(??__i2c_wait_idle+3)& (0+255),f,c
 32679  0070A0  D001               	goto	u7488
 32680  0070A2                     u7480:
 32681  0070A2  6A04               	clrf	(??__i2c_wait_idle+3)& (0+255),c
 32682  0070A4                     u7488:
 32683  0070A4  A6C5               	btfss	4037,3,c	;volatile
 32684  0070A6  D003               	goto	u7490
 32685  0070A8  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32686  0070AA  2A05               	incf	(??__i2c_wait_idle+4)& (0+255),f,c
 32687  0070AC  D001               	goto	u7498
 32688  0070AE                     u7490:
 32689  0070AE  6A05               	clrf	(??__i2c_wait_idle+4)& (0+255),c
 32690  0070B0                     u7498:
 32691  0070B0  A8C5               	btfss	4037,4,c	;volatile
 32692  0070B2  D002               	goto	u7500
 32693  0070B4  0E01               	movlw	1
 32694  0070B6  D001               	goto	u7506
 32695  0070B8                     u7500:
 32696  0070B8  0E00               	movlw	0
 32697  0070BA                     u7506:
 32698  0070BA  1005               	iorwf	??__i2c_wait_idle+4,w,c
 32699  0070BC  1004               	iorwf	??__i2c_wait_idle+3,w,c
 32700  0070BE  1003               	iorwf	??__i2c_wait_idle+2,w,c
 32701  0070C0  1002               	iorwf	??__i2c_wait_idle+1,w,c
 32702  0070C2  1001               	iorwf	??__i2c_wait_idle,w,c
 32703  0070C4  0900               	iorlw	0
 32704  0070C6  B4D8               	btfsc	status,2,c
 32705  0070C8  0012               	return	
 32706  0070CA  D7D4               	goto	__i2c_wait_idle
 32707  0070CC                     __end_of__i2c_wait_idle:
 32708                           	opt stack 0
 32709                           tosu	equ	0xFFF
 32710                           tosh	equ	0xFFE
 32711                           tosl	equ	0xFFD
 32712                           pclath	equ	0xFFA
 32713                           tblptru	equ	0xFF8
 32714                           tblptrh	equ	0xFF7
 32715                           tblptrl	equ	0xFF6
 32716                           tablat	equ	0xFF5
 32717                           prodh	equ	0xFF4
 32718                           prodl	equ	0xFF3
 32719                           intcon	equ	0xFF2
 32720                           intcon2	equ	0xFF1
 32721                           intcon3	equ	0xFF0
 32722                           indf0	equ	0xFEF
 32723                           postinc0	equ	0xFEE
 32724                           fsr0h	equ	0xFEA
 32725                           fsr0l	equ	0xFE9
 32726                           wreg	equ	0xFE8
 32727                           indf1	equ	0xFE7
 32728                           postdec1	equ	0xFE5
 32729                           plusw1	equ	0xFE3
 32730                           fsr1h	equ	0xFE2
 32731                           fsr1l	equ	0xFE1
 32732                           indf2	equ	0xFDF
 32733                           postinc2	equ	0xFDE
 32734                           postdec2	equ	0xFDD
 32735                           plusw2	equ	0xFDB
 32736                           fsr2h	equ	0xFDA
 32737                           fsr2l	equ	0xFD9
 32738                           status	equ	0xFD8
 32739                           
 32740 ;; *************** function __i2c_stop *****************
 32741 ;; Defined at:
 32742 ;;		line 75 in file "i2c.c"
 32743 ;; Parameters:    Size  Location     Type
 32744 ;;		None
 32745 ;; Auto vars:     Size  Location     Type
 32746 ;;		None
 32747 ;; Return value:  Size  Location     Type
 32748 ;;                  1    wreg      void 
 32749 ;; Registers used:
 32750 ;;		None
 32751 ;; Tracked objects:
 32752 ;;		On entry : 0/0
 32753 ;;		On exit  : 0/0
 32754 ;;		Unchanged: 0/0
 32755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32756 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32757 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32758 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32759 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32760 ;;Total ram usage:        0 bytes
 32761 ;; Hardware stack levels used:    1
 32762 ;; This function calls:
 32763 ;;		Nothing
 32764 ;; This function is called by:
 32765 ;;		__i2c_write
 32766 ;;		__i2c_read
 32767 ;;		_i2c_display_write_fixed
 32768 ;;		_i2c_display_write
 32769 ;; This function uses a non-reentrant model
 32770 ;;
 32771                           
 32772                           	psect	text160
 32773  008010                     __ptext160:
 32774                           	opt stack 0
 32775  008010                     __i2c_stop:
 32776                           	opt stack 27
 32777                           
 32778                           ;i2c.c: 77: SSP1CON2bits.PEN = 1;
 32779                           
 32780                           ;incstack = 0
 32781  008010  84C5               	bsf	4037,2,c	;volatile
 32782  008012  A4C5               	btfss	4037,2,c	;volatile
 32783  008014  0012               	return	
 32784  008016  D7FD               	goto	l1164
 32785  008018                     __end_of__i2c_stop:
 32786                           	opt stack 0
 32787                           tosu	equ	0xFFF
 32788                           tosh	equ	0xFFE
 32789                           tosl	equ	0xFFD
 32790                           pclath	equ	0xFFA
 32791                           tblptru	equ	0xFF8
 32792                           tblptrh	equ	0xFF7
 32793                           tblptrl	equ	0xFF6
 32794                           tablat	equ	0xFF5
 32795                           prodh	equ	0xFF4
 32796                           prodl	equ	0xFF3
 32797                           intcon	equ	0xFF2
 32798                           intcon2	equ	0xFF1
 32799                           intcon3	equ	0xFF0
 32800                           indf0	equ	0xFEF
 32801                           postinc0	equ	0xFEE
 32802                           fsr0h	equ	0xFEA
 32803                           fsr0l	equ	0xFE9
 32804                           wreg	equ	0xFE8
 32805                           indf1	equ	0xFE7
 32806                           postdec1	equ	0xFE5
 32807                           plusw1	equ	0xFE3
 32808                           fsr1h	equ	0xFE2
 32809                           fsr1l	equ	0xFE1
 32810                           indf2	equ	0xFDF
 32811                           postinc2	equ	0xFDE
 32812                           postdec2	equ	0xFDD
 32813                           plusw2	equ	0xFDB
 32814                           fsr2h	equ	0xFDA
 32815                           fsr2l	equ	0xFD9
 32816                           status	equ	0xFD8
 32817                           
 32818 ;; *************** function __i2c_start *****************
 32819 ;; Defined at:
 32820 ;;		line 54 in file "i2c.c"
 32821 ;; Parameters:    Size  Location     Type
 32822 ;;		None
 32823 ;; Auto vars:     Size  Location     Type
 32824 ;;		None
 32825 ;; Return value:  Size  Location     Type
 32826 ;;                  1    wreg      void 
 32827 ;; Registers used:
 32828 ;;		None
 32829 ;; Tracked objects:
 32830 ;;		On entry : 0/0
 32831 ;;		On exit  : 0/0
 32832 ;;		Unchanged: 0/0
 32833 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32834 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32835 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32836 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32837 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32838 ;;Total ram usage:        0 bytes
 32839 ;; Hardware stack levels used:    1
 32840 ;; This function calls:
 32841 ;;		Nothing
 32842 ;; This function is called by:
 32843 ;;		__i2c_write
 32844 ;;		__i2c_read
 32845 ;;		_i2c_display_write_fixed
 32846 ;;		_i2c_display_write
 32847 ;; This function uses a non-reentrant model
 32848 ;;
 32849                           
 32850                           	psect	text161
 32851  008018                     __ptext161:
 32852                           	opt stack 0
 32853  008018                     __i2c_start:
 32854                           	opt stack 27
 32855                           
 32856                           ;i2c.c: 56: SSP1CON2bits.SEN=1;
 32857                           
 32858                           ;incstack = 0
 32859  008018  80C5               	bsf	4037,0,c	;volatile
 32860  00801A  A0C5               	btfss	4037,0,c	;volatile
 32861  00801C  0012               	return	
 32862  00801E  D7FD               	goto	l1149
 32863  008020                     __end_of__i2c_start:
 32864                           	opt stack 0
 32865                           tosu	equ	0xFFF
 32866                           tosh	equ	0xFFE
 32867                           tosl	equ	0xFFD
 32868                           pclath	equ	0xFFA
 32869                           tblptru	equ	0xFF8
 32870                           tblptrh	equ	0xFF7
 32871                           tblptrl	equ	0xFF6
 32872                           tablat	equ	0xFF5
 32873                           prodh	equ	0xFF4
 32874                           prodl	equ	0xFF3
 32875                           intcon	equ	0xFF2
 32876                           intcon2	equ	0xFF1
 32877                           intcon3	equ	0xFF0
 32878                           indf0	equ	0xFEF
 32879                           postinc0	equ	0xFEE
 32880                           fsr0h	equ	0xFEA
 32881                           fsr0l	equ	0xFE9
 32882                           wreg	equ	0xFE8
 32883                           indf1	equ	0xFE7
 32884                           postdec1	equ	0xFE5
 32885                           plusw1	equ	0xFE3
 32886                           fsr1h	equ	0xFE2
 32887                           fsr1l	equ	0xFE1
 32888                           indf2	equ	0xFDF
 32889                           postinc2	equ	0xFDE
 32890                           postdec2	equ	0xFDD
 32891                           plusw2	equ	0xFDB
 32892                           fsr2h	equ	0xFDA
 32893                           fsr2l	equ	0xFD9
 32894                           status	equ	0xFD8
 32895                           
 32896 ;; *************** function __i2c_send *****************
 32897 ;; Defined at:
 32898 ;;		line 61 in file "i2c.c"
 32899 ;; Parameters:    Size  Location     Type
 32900 ;;  dat             1    wreg     unsigned char 
 32901 ;; Auto vars:     Size  Location     Type
 32902 ;;  dat             1    0[COMRAM] unsigned char 
 32903 ;; Return value:  Size  Location     Type
 32904 ;;                  1    wreg      void 
 32905 ;; Registers used:
 32906 ;;		wreg
 32907 ;; Tracked objects:
 32908 ;;		On entry : 0/0
 32909 ;;		On exit  : 0/0
 32910 ;;		Unchanged: 0/0
 32911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32912 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32913 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32914 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32915 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32916 ;;Total ram usage:        1 bytes
 32917 ;; Hardware stack levels used:    1
 32918 ;; This function calls:
 32919 ;;		Nothing
 32920 ;; This function is called by:
 32921 ;;		__i2c_write
 32922 ;;		__i2c_read
 32923 ;;		_i2c_display_write_fixed
 32924 ;;		_i2c_display_write
 32925 ;; This function uses a non-reentrant model
 32926 ;;
 32927                           
 32928                           	psect	text162
 32929  008020                     __ptext162:
 32930                           	opt stack 0
 32931  008020                     __i2c_send:
 32932                           	opt stack 27
 32933                           
 32934                           ;incstack = 0
 32935                           ;__i2c_send@dat stored from wreg
 32936  008020  6E01               	movwf	__i2c_send@dat,c
 32937                           
 32938                           ;i2c.c: 63: SSP1BUF = dat;
 32939  008022  C001  FFC9         	movff	__i2c_send@dat,4041	;volatile
 32940  008026  0012               	return		;funcret
 32941  008028                     __end_of__i2c_send:
 32942                           	opt stack 0
 32943                           tosu	equ	0xFFF
 32944                           tosh	equ	0xFFE
 32945                           tosl	equ	0xFFD
 32946                           pclath	equ	0xFFA
 32947                           tblptru	equ	0xFF8
 32948                           tblptrh	equ	0xFF7
 32949                           tblptrl	equ	0xFF6
 32950                           tablat	equ	0xFF5
 32951                           prodh	equ	0xFF4
 32952                           prodl	equ	0xFF3
 32953                           intcon	equ	0xFF2
 32954                           intcon2	equ	0xFF1
 32955                           intcon3	equ	0xFF0
 32956                           indf0	equ	0xFEF
 32957                           postinc0	equ	0xFEE
 32958                           fsr0h	equ	0xFEA
 32959                           fsr0l	equ	0xFE9
 32960                           wreg	equ	0xFE8
 32961                           indf1	equ	0xFE7
 32962                           postdec1	equ	0xFE5
 32963                           plusw1	equ	0xFE3
 32964                           fsr1h	equ	0xFE2
 32965                           fsr1l	equ	0xFE1
 32966                           indf2	equ	0xFDF
 32967                           postinc2	equ	0xFDE
 32968                           postdec2	equ	0xFDD
 32969                           plusw2	equ	0xFDB
 32970                           fsr2h	equ	0xFDA
 32971                           fsr2l	equ	0xFD9
 32972                           status	equ	0xFD8
 32973                           
 32974 ;; *************** function __parse_command_long *****************
 32975 ;; Defined at:
 32976 ;;		line 456 in file "api.c"
 32977 ;; Parameters:    Size  Location     Type
 32978 ;;  data            2   82[COMRAM] PTR unsigned char 
 32979 ;;		 -> RAM(3759), 
 32980 ;; Auto vars:     Size  Location     Type
 32981 ;;  length          1   84[COMRAM] unsigned char 
 32982 ;; Return value:  Size  Location     Type
 32983 ;;                  1    wreg      unsigned char 
 32984 ;; Registers used:
 32985 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 32986 ;; Tracked objects:
 32987 ;;		On entry : 0/0
 32988 ;;		On exit  : 0/0
 32989 ;;		Unchanged: 0/0
 32990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 32991 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32993 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32994 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 32995 ;;Total ram usage:        3 bytes
 32996 ;; Hardware stack levels used:    1
 32997 ;; Hardware stack levels required when called:    9
 32998 ;; This function calls:
 32999 ;;		__parse_file_append
 33000 ;;		__parse_file_create
 33001 ;;		__parse_file_delete
 33002 ;;		__parse_file_modify
 33003 ;;		__parse_file_rename
 33004 ;;		__parse_file_truncate
 33005 ;; This function is called by:
 33006 ;;		_api_parse
 33007 ;; This function uses a non-reentrant model
 33008 ;;
 33009                           
 33010                           	psect	text163
 33011  0061D0                     __ptext163:
 33012                           	opt stack 0
 33013  0061D0                     __parse_command_long:
 33014                           	opt stack 20
 33015                           
 33016                           ;api.c: 458: uint8_t length = 65;
 33017                           
 33018                           ;incstack = 0
 33019  0061D0  0E41               	movlw	65
 33020  0061D2  6E55               	movwf	__parse_command_long@length,c
 33021                           
 33022                           ;api.c: 460: switch(data[0])
 33023  0061D4  D02B               	goto	l2623
 33024  0061D6                     
 33025                           ;api.c: 463: length = _parse_file_truncate(data);
 33026  0061D6  C053  F001         	movff	__parse_command_long@data,__parse_file_truncate@data
 33027  0061DA  C054  F002         	movff	__parse_command_long@data+1,__parse_file_truncate@data+1
 33028  0061DE  EC27  F040         	call	__parse_file_truncate	;wreg free
 33029  0061E2  D022               	goto	L40
 33030  0061E4                     
 33031                           ;api.c: 467: length = _parse_file_delete(data);
 33032  0061E4  C053  F03F         	movff	__parse_command_long@data,__parse_file_delete@data
 33033  0061E8  C054  F040         	movff	__parse_command_long@data+1,__parse_file_delete@data+1
 33034  0061EC  EC40  F03A         	call	__parse_file_delete	;wreg free
 33035  0061F0  D01B               	goto	L40
 33036  0061F2                     
 33037                           ;api.c: 471: length = _parse_file_create(data);
 33038  0061F2  C053  F050         	movff	__parse_command_long@data,__parse_file_create@data
 33039  0061F6  C054  F051         	movff	__parse_command_long@data+1,__parse_file_create@data+1
 33040  0061FA  EC81  F035         	call	__parse_file_create	;wreg free
 33041  0061FE  D014               	goto	L40
 33042  006200                     
 33043                           ;api.c: 475: length = _parse_file_rename(data);
 33044  006200  C053  F043         	movff	__parse_command_long@data,__parse_file_rename@data
 33045  006204  C054  F044         	movff	__parse_command_long@data+1,__parse_file_rename@data+1
 33046  006208  ECEC  F035         	call	__parse_file_rename	;wreg free
 33047  00620C  D00D               	goto	L40
 33048  00620E                     
 33049                           ;api.c: 479: length = _parse_file_append(data);
 33050  00620E  C053  F04B         	movff	__parse_command_long@data,__parse_file_append@data
 33051  006212  C054  F04C         	movff	__parse_command_long@data+1,__parse_file_append@data+1
 33052  006216  EC86  F032         	call	__parse_file_append	;wreg free
 33053  00621A  D006               	goto	L40
 33054  00621C                     
 33055                           ;api.c: 483: length = _parse_file_modify(data);
 33056  00621C  C053  F001         	movff	__parse_command_long@data,__parse_file_modify@data
 33057  006220  C054  F002         	movff	__parse_command_long@data+1,__parse_file_modify@data+1
 33058  006224  EC29  F040         	call	__parse_file_modify	;wreg free
 33059  006228                     L40:
 33060  006228  6E55               	movwf	__parse_command_long@length,c
 33061                           
 33062                           ;api.c: 485: }
 33063                           
 33064                           ;api.c: 484: break;
 33065  00622A  D017               	goto	l2625
 33066  00622C                     l2623:
 33067  00622C  C053  FFD9         	movff	__parse_command_long@data,fsr2l
 33068  006230  C054  FFDA         	movff	__parse_command_long@data+1,fsr2h
 33069  006234  50DF               	movf	indf2,w,c
 33070                           
 33071                           ; Switch size 1, requested type "space"
 33072                           ; Number of cases is 6, Range of values is 80 to 85
 33073                           ; switch strategies available:
 33074                           ; Name         Instructions Cycles
 33075                           ; simple_byte           19    10 (average)
 33076                           ;	Chosen strategy is simple_byte
 33077  006236  0A50               	xorlw	80	; case 80
 33078  006238  B4D8               	btfsc	status,2,c
 33079  00623A  D7CD               	goto	l2624
 33080  00623C  0A01               	xorlw	1	; case 81
 33081  00623E  B4D8               	btfsc	status,2,c
 33082  006240  D7D1               	goto	l2626
 33083  006242  0A03               	xorlw	3	; case 82
 33084  006244  B4D8               	btfsc	status,2,c
 33085  006246  D7D5               	goto	l2627
 33086  006248  0A01               	xorlw	1	; case 83
 33087  00624A  B4D8               	btfsc	status,2,c
 33088  00624C  D7D9               	goto	l2628
 33089  00624E  0A07               	xorlw	7	; case 84
 33090  006250  B4D8               	btfsc	status,2,c
 33091  006252  D7DD               	goto	l2629
 33092  006254  0A01               	xorlw	1	; case 85
 33093  006256  B4D8               	btfsc	status,2,c
 33094  006258  D7E1               	goto	l2630
 33095  00625A                     l2625:
 33096                           
 33097                           ;api.c: 487: return length;
 33098  00625A  5055               	movf	__parse_command_long@length,w,c
 33099  00625C  0012               	return	
 33100  00625E                     __end_of__parse_command_long:
 33101                           	opt stack 0
 33102                           tosu	equ	0xFFF
 33103                           tosh	equ	0xFFE
 33104                           tosl	equ	0xFFD
 33105                           pclath	equ	0xFFA
 33106                           tblptru	equ	0xFF8
 33107                           tblptrh	equ	0xFF7
 33108                           tblptrl	equ	0xFF6
 33109                           tablat	equ	0xFF5
 33110                           prodh	equ	0xFF4
 33111                           prodl	equ	0xFF3
 33112                           intcon	equ	0xFF2
 33113                           intcon2	equ	0xFF1
 33114                           intcon3	equ	0xFF0
 33115                           indf0	equ	0xFEF
 33116                           postinc0	equ	0xFEE
 33117                           fsr0h	equ	0xFEA
 33118                           fsr0l	equ	0xFE9
 33119                           wreg	equ	0xFE8
 33120                           indf1	equ	0xFE7
 33121                           postdec1	equ	0xFE5
 33122                           plusw1	equ	0xFE3
 33123                           fsr1h	equ	0xFE2
 33124                           fsr1l	equ	0xFE1
 33125                           indf2	equ	0xFDF
 33126                           postinc2	equ	0xFDE
 33127                           postdec2	equ	0xFDD
 33128                           plusw2	equ	0xFDB
 33129                           fsr2h	equ	0xFDA
 33130                           fsr2l	equ	0xFD9
 33131                           status	equ	0xFD8
 33132                           
 33133 ;; *************** function __parse_file_truncate *****************
 33134 ;; Defined at:
 33135 ;;		line 490 in file "api.c"
 33136 ;; Parameters:    Size  Location     Type
 33137 ;;  data            2    0[COMRAM] PTR unsigned char 
 33138 ;;		 -> RAM(3759), 
 33139 ;; Auto vars:     Size  Location     Type
 33140 ;;		None
 33141 ;; Return value:  Size  Location     Type
 33142 ;;                  1    wreg      unsigned char 
 33143 ;; Registers used:
 33144 ;;		wreg
 33145 ;; Tracked objects:
 33146 ;;		On entry : 0/0
 33147 ;;		On exit  : 0/0
 33148 ;;		Unchanged: 0/0
 33149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33150 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33151 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33152 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33153 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33154 ;;Total ram usage:        2 bytes
 33155 ;; Hardware stack levels used:    1
 33156 ;; This function calls:
 33157 ;;		Nothing
 33158 ;; This function is called by:
 33159 ;;		__parse_command_long
 33160 ;; This function uses a non-reentrant model
 33161 ;;
 33162                           
 33163                           	psect	text164
 33164  00804E                     __ptext164:
 33165                           	opt stack 0
 33166  00804E                     __parse_file_truncate:
 33167                           	opt stack 28
 33168                           
 33169                           ;api.c: 494: return 65;
 33170                           
 33171                           ;incstack = 0
 33172  00804E  0E41               	movlw	65
 33173  008050  0012               	return	
 33174  008052                     __end_of__parse_file_truncate:
 33175                           	opt stack 0
 33176                           tosu	equ	0xFFF
 33177                           tosh	equ	0xFFE
 33178                           tosl	equ	0xFFD
 33179                           pclath	equ	0xFFA
 33180                           tblptru	equ	0xFF8
 33181                           tblptrh	equ	0xFF7
 33182                           tblptrl	equ	0xFF6
 33183                           tablat	equ	0xFF5
 33184                           prodh	equ	0xFF4
 33185                           prodl	equ	0xFF3
 33186                           intcon	equ	0xFF2
 33187                           intcon2	equ	0xFF1
 33188                           intcon3	equ	0xFF0
 33189                           indf0	equ	0xFEF
 33190                           postinc0	equ	0xFEE
 33191                           fsr0h	equ	0xFEA
 33192                           fsr0l	equ	0xFE9
 33193                           wreg	equ	0xFE8
 33194                           indf1	equ	0xFE7
 33195                           postdec1	equ	0xFE5
 33196                           plusw1	equ	0xFE3
 33197                           fsr1h	equ	0xFE2
 33198                           fsr1l	equ	0xFE1
 33199                           indf2	equ	0xFDF
 33200                           postinc2	equ	0xFDE
 33201                           postdec2	equ	0xFDD
 33202                           plusw2	equ	0xFDB
 33203                           fsr2h	equ	0xFDA
 33204                           fsr2l	equ	0xFD9
 33205                           status	equ	0xFD8
 33206                           
 33207 ;; *************** function __parse_file_rename *****************
 33208 ;; Defined at:
 33209 ;;		line 523 in file "api.c"
 33210 ;; Parameters:    Size  Location     Type
 33211 ;;  data            2   66[COMRAM] PTR unsigned char 
 33212 ;;		 -> RAM(3759), 
 33213 ;; Auto vars:     Size  Location     Type
 33214 ;;		None
 33215 ;; Return value:  Size  Location     Type
 33216 ;;                  1    wreg      unsigned char 
 33217 ;; Registers used:
 33218 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33219 ;; Tracked objects:
 33220 ;;		On entry : 0/0
 33221 ;;		On exit  : 0/0
 33222 ;;		Unchanged: 0/0
 33223 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33224 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33225 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33226 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33227 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33228 ;;Total ram usage:        3 bytes
 33229 ;; Hardware stack levels used:    1
 33230 ;; Hardware stack levels required when called:    8
 33231 ;; This function calls:
 33232 ;;		_fat_rename_file
 33233 ;; This function is called by:
 33234 ;;		__parse_command_long
 33235 ;; This function uses a non-reentrant model
 33236 ;;
 33237                           
 33238                           	psect	text165
 33239  006BD8                     __ptext165:
 33240                           	opt stack 0
 33241  006BD8                     __parse_file_rename:
 33242                           	opt stack 20
 33243                           
 33244                           ;api.c: 526: if((data[0]!=COMMAND_FILE_RENAME) || (data[13]!=0x7E) || (data[14]!=0x18))
 33245                           
 33246                           ;incstack = 0
 33247  006BD8  C043  FFD9         	movff	__parse_file_rename@data,fsr2l
 33248  006BDC  C044  FFDA         	movff	__parse_file_rename@data+1,fsr2h
 33249  006BE0  0E53               	movlw	83
 33250  006BE2  18DE               	xorwf	postinc2,w,c
 33251  006BE4  A4D8               	btfss	status,2,c
 33252  006BE6  D014               	goto	u9120
 33253  006BE8  EE20 F00D          	lfsr	2,13
 33254  006BEC  5043               	movf	__parse_file_rename@data,w,c
 33255  006BEE  26D9               	addwf	fsr2l,f,c
 33256  006BF0  5044               	movf	__parse_file_rename@data+1,w,c
 33257  006BF2  22DA               	addwfc	fsr2h,f,c
 33258  006BF4  0E7E               	movlw	126
 33259  006BF6  18DE               	xorwf	postinc2,w,c
 33260  006BF8  A4D8               	btfss	status,2,c
 33261  006BFA  D00A               	goto	u9120
 33262  006BFC  EE20 F00E          	lfsr	2,14
 33263  006C00  5043               	movf	__parse_file_rename@data,w,c
 33264  006C02  26D9               	addwf	fsr2l,f,c
 33265  006C04  5044               	movf	__parse_file_rename@data+1,w,c
 33266  006C06  22DA               	addwfc	fsr2h,f,c
 33267  006C08  0E18               	movlw	24
 33268  006C0A  18DE               	xorwf	postinc2,w,c
 33269  006C0C  B4D8               	btfsc	status,2,c
 33270  006C0E  D002               	goto	l2649
 33271  006C10                     u9120:
 33272                           
 33273                           ;api.c: 527: {;api.c: 528: return 15;
 33274  006C10  0E0F               	movlw	15
 33275  006C12  0012               	return	
 33276  006C14                     l2649:
 33277                           
 33278                           ;api.c: 529: };api.c: 532: fat_rename_file(data[1], &data[2], &data[10]);
 33279  006C14  0E02               	movlw	2
 33280  006C16  2443               	addwf	__parse_file_rename@data,w,c
 33281  006C18  6E3F               	movwf	fat_rename_file@name,c
 33282  006C1A  0E00               	movlw	0
 33283  006C1C  2044               	addwfc	__parse_file_rename@data+1,w,c
 33284  006C1E  6E40               	movwf	fat_rename_file@name+1,c
 33285  006C20  0E0A               	movlw	10
 33286  006C22  2443               	addwf	__parse_file_rename@data,w,c
 33287  006C24  6E41               	movwf	fat_rename_file@extension,c
 33288  006C26  0E00               	movlw	0
 33289  006C28  2044               	addwfc	__parse_file_rename@data+1,w,c
 33290  006C2A  6E42               	movwf	fat_rename_file@extension+1,c
 33291  006C2C  EE20 F001          	lfsr	2,1
 33292  006C30  5043               	movf	__parse_file_rename@data,w,c
 33293  006C32  26D9               	addwf	fsr2l,f,c
 33294  006C34  5044               	movf	__parse_file_rename@data+1,w,c
 33295  006C36  22DA               	addwfc	fsr2h,f,c
 33296  006C38  50DF               	movf	indf2,w,c
 33297  006C3A  ECC0  F02F         	call	_fat_rename_file
 33298                           
 33299                           ;api.c: 533: return 15;
 33300  006C3E  0E0F               	movlw	15
 33301  006C40  0012               	return	
 33302  006C42                     __end_of__parse_file_rename:
 33303                           	opt stack 0
 33304                           tosu	equ	0xFFF
 33305                           tosh	equ	0xFFE
 33306                           tosl	equ	0xFFD
 33307                           pclath	equ	0xFFA
 33308                           tblptru	equ	0xFF8
 33309                           tblptrh	equ	0xFF7
 33310                           tblptrl	equ	0xFF6
 33311                           tablat	equ	0xFF5
 33312                           prodh	equ	0xFF4
 33313                           prodl	equ	0xFF3
 33314                           intcon	equ	0xFF2
 33315                           intcon2	equ	0xFF1
 33316                           intcon3	equ	0xFF0
 33317                           indf0	equ	0xFEF
 33318                           postinc0	equ	0xFEE
 33319                           fsr0h	equ	0xFEA
 33320                           fsr0l	equ	0xFE9
 33321                           wreg	equ	0xFE8
 33322                           indf1	equ	0xFE7
 33323                           postdec1	equ	0xFE5
 33324                           plusw1	equ	0xFE3
 33325                           fsr1h	equ	0xFE2
 33326                           fsr1l	equ	0xFE1
 33327                           indf2	equ	0xFDF
 33328                           postinc2	equ	0xFDE
 33329                           postdec2	equ	0xFDD
 33330                           plusw2	equ	0xFDB
 33331                           fsr2h	equ	0xFDA
 33332                           fsr2l	equ	0xFD9
 33333                           status	equ	0xFD8
 33334                           
 33335 ;; *************** function _fat_rename_file *****************
 33336 ;; Defined at:
 33337 ;;		line 536 in file "fat16.c"
 33338 ;; Parameters:    Size  Location     Type
 33339 ;;  file_number     1    wreg     unsigned char 
 33340 ;;  name            2   62[COMRAM] PTR unsigned char 
 33341 ;;		 -> RAM(3759), 
 33342 ;;  extension       2   64[COMRAM] PTR unsigned char 
 33343 ;;		 -> RAM(3759), 
 33344 ;; Auto vars:     Size  Location     Type
 33345 ;;  file_number     1    0[BANK0 ] unsigned char 
 33346 ;;  root           32    1[BANK0 ] struct .
 33347 ;;  cntr            1   33[BANK0 ] unsigned char 
 33348 ;; Return value:  Size  Location     Type
 33349 ;;                  1    wreg      void 
 33350 ;; Registers used:
 33351 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
 33352 ;; Tracked objects:
 33353 ;;		On entry : 0/0
 33354 ;;		On exit  : 0/0
 33355 ;;		Unchanged: 0/0
 33356 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33357 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33358 ;;      Locals:         0      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33359 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33360 ;;      Totals:         4      34       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33361 ;;Total ram usage:       38 bytes
 33362 ;; Hardware stack levels used:    1
 33363 ;; Hardware stack levels required when called:    7
 33364 ;; This function calls:
 33365 ;;		__write_root
 33366 ;;		_fat_get_file_information
 33367 ;; This function is called by:
 33368 ;;		__parse_file_rename
 33369 ;; This function uses a non-reentrant model
 33370 ;;
 33371                           
 33372                           	psect	text166
 33373  005F80                     __ptext166:
 33374                           	opt stack 0
 33375  005F80                     _fat_rename_file:
 33376                           	opt stack 20
 33377                           
 33378                           ;incstack = 0
 33379                           ;fat_rename_file@file_number stored from wreg
 33380  005F80  0100               	movlb	0	; () banked
 33381  005F82  6FB5               	movwf	fat_rename_file@file_number& (0+255),b
 33382                           
 33383                           ;fat16.c: 538: rootEntry_t root;;fat16.c: 539: uint8_t cntr;;fat16.c: 542: fat_get_file_
      +                          information(file_number, &root);
 33384  005F84  0EB6               	movlw	low fat_rename_file@root
 33385  005F86  6E37               	movwf	fat_get_file_information@data,c
 33386  005F88  0E00               	movlw	high fat_rename_file@root
 33387  005F8A  6E38               	movwf	fat_get_file_information@data+1,c
 33388  005F8C  0100               	movlb	0	; () banked
 33389  005F8E  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 33390  005F90  ECF6  F033         	call	_fat_get_file_information
 33391                           
 33392                           ;fat16.c: 545: for(cntr=0; cntr<8; ++cntr)
 33393  005F94  0E00               	movlw	0
 33394  005F96  0100               	movlb	0	; () banked
 33395  005F98  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 33396  005F9A                     l11345:
 33397                           
 33398                           ; BSR set to: 0
 33399  005F9A  0E07               	movlw	7
 33400  005F9C  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 33401  005F9E  D001               	goto	l1989
 33402  005FA0  D014               	goto	u8580
 33403  005FA2                     l1989:
 33404                           
 33405                           ; BSR set to: 0
 33406                           ;fat16.c: 546: {;fat16.c: 547: root.fileName[cntr] = name[cntr];
 33407                           
 33408                           ; BSR set to: 0
 33409  005FA2  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33410  005FA4  0D01               	mullw	1
 33411  005FA6  50F3               	movf	prodl,w,c
 33412  005FA8  243F               	addwf	fat_rename_file@name,w,c
 33413  005FAA  6ED9               	movwf	fsr2l,c
 33414  005FAC  50F4               	movf	prodh,w,c
 33415  005FAE  2040               	addwfc	fat_rename_file@name+1,w,c
 33416  005FB0  6EDA               	movwf	fsr2h,c
 33417  005FB2  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33418  005FB4  0D01               	mullw	1
 33419  005FB6  0EB6               	movlw	low fat_rename_file@root
 33420  005FB8  24F3               	addwf	prodl,w,c
 33421  005FBA  6EE1               	movwf	fsr1l,c
 33422  005FBC  0E00               	movlw	high fat_rename_file@root
 33423  005FBE  20F4               	addwfc	prodh,w,c
 33424  005FC0  6EE2               	movwf	fsr1h,c
 33425  005FC2  CFDF FFE7          	movff	indf2,indf1
 33426                           
 33427                           ; BSR set to: 0
 33428  005FC6  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 33429  005FC8  D7E8               	goto	l11345
 33430  005FCA                     u8580:
 33431                           
 33432                           ; BSR set to: 0
 33433                           ;fat16.c: 548: };fat16.c: 551: for(cntr=0; cntr<3; ++cntr)
 33434                           
 33435                           ; BSR set to: 0
 33436  005FCA  0E00               	movlw	0
 33437  005FCC  6FD6               	movwf	fat_rename_file@cntr& (0+255),b
 33438  005FCE                     l11357:
 33439                           
 33440                           ; BSR set to: 0
 33441  005FCE  0E02               	movlw	2
 33442  005FD0  65D6               	cpfsgt	fat_rename_file@cntr& (0+255),b
 33443  005FD2  D001               	goto	l1991
 33444  005FD4  D018               	goto	u8600
 33445  005FD6                     l1991:
 33446                           
 33447                           ; BSR set to: 0
 33448                           ;fat16.c: 552: {;fat16.c: 553: root.fileExtension[cntr] = extension[cntr];
 33449                           
 33450                           ; BSR set to: 0
 33451  005FD6  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33452  005FD8  0D01               	mullw	1
 33453  005FDA  50F3               	movf	prodl,w,c
 33454  005FDC  2441               	addwf	fat_rename_file@extension,w,c
 33455  005FDE  6ED9               	movwf	fsr2l,c
 33456  005FE0  50F4               	movf	prodh,w,c
 33457  005FE2  2042               	addwfc	fat_rename_file@extension+1,w,c
 33458  005FE4  6EDA               	movwf	fsr2h,c
 33459  005FE6  51D6               	movf	fat_rename_file@cntr& (0+255),w,b
 33460  005FE8  0D01               	mullw	1
 33461  005FEA  0E08               	movlw	8
 33462  005FEC  26F3               	addwf	prodl,f,c
 33463  005FEE  0E00               	movlw	0
 33464  005FF0  22F4               	addwfc	prodh,f,c
 33465  005FF2  0EB6               	movlw	low fat_rename_file@root
 33466  005FF4  24F3               	addwf	prodl,w,c
 33467  005FF6  6EE1               	movwf	fsr1l,c
 33468  005FF8  0E00               	movlw	high fat_rename_file@root
 33469  005FFA  20F4               	addwfc	prodh,w,c
 33470  005FFC  6EE2               	movwf	fsr1h,c
 33471  005FFE  CFDF FFE7          	movff	indf2,indf1
 33472                           
 33473                           ; BSR set to: 0
 33474  006002  2BD6               	incf	fat_rename_file@cntr& (0+255),f,b
 33475  006004  D7E4               	goto	l11357
 33476  006006                     u8600:
 33477                           
 33478                           ; BSR set to: 0
 33479                           ;fat16.c: 554: };fat16.c: 556: _write_root(file_number, &root);
 33480                           
 33481                           ; BSR set to: 0
 33482  006006  0EB6               	movlw	low fat_rename_file@root
 33483  006008  6E29               	movwf	__write_root@data,c
 33484  00600A  0E00               	movlw	high fat_rename_file@root
 33485  00600C  6E2A               	movwf	__write_root@data+1,c
 33486  00600E  51B5               	movf	fat_rename_file@file_number& (0+255),w,b
 33487  006010  EC66  F038         	call	__write_root
 33488  006014  0012               	return		;funcret
 33489  006016                     __end_of_fat_rename_file:
 33490                           	opt stack 0
 33491                           tosu	equ	0xFFF
 33492                           tosh	equ	0xFFE
 33493                           tosl	equ	0xFFD
 33494                           pclath	equ	0xFFA
 33495                           tblptru	equ	0xFF8
 33496                           tblptrh	equ	0xFF7
 33497                           tblptrl	equ	0xFF6
 33498                           tablat	equ	0xFF5
 33499                           prodh	equ	0xFF4
 33500                           prodl	equ	0xFF3
 33501                           intcon	equ	0xFF2
 33502                           intcon2	equ	0xFF1
 33503                           intcon3	equ	0xFF0
 33504                           indf0	equ	0xFEF
 33505                           postinc0	equ	0xFEE
 33506                           fsr0h	equ	0xFEA
 33507                           fsr0l	equ	0xFE9
 33508                           wreg	equ	0xFE8
 33509                           indf1	equ	0xFE7
 33510                           postdec1	equ	0xFE5
 33511                           plusw1	equ	0xFE3
 33512                           fsr1h	equ	0xFE2
 33513                           fsr1l	equ	0xFE1
 33514                           indf2	equ	0xFDF
 33515                           postinc2	equ	0xFDE
 33516                           postdec2	equ	0xFDD
 33517                           plusw2	equ	0xFDB
 33518                           fsr2h	equ	0xFDA
 33519                           fsr2l	equ	0xFD9
 33520                           status	equ	0xFD8
 33521                           
 33522 ;; *************** function __parse_file_modify *****************
 33523 ;; Defined at:
 33524 ;;		line 549 in file "api.c"
 33525 ;; Parameters:    Size  Location     Type
 33526 ;;  data            2    0[COMRAM] PTR unsigned char 
 33527 ;;		 -> RAM(3759), 
 33528 ;; Auto vars:     Size  Location     Type
 33529 ;;		None
 33530 ;; Return value:  Size  Location     Type
 33531 ;;                  1    wreg      unsigned char 
 33532 ;; Registers used:
 33533 ;;		wreg
 33534 ;; Tracked objects:
 33535 ;;		On entry : 0/0
 33536 ;;		On exit  : 0/0
 33537 ;;		Unchanged: 0/0
 33538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33539 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33540 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33541 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33542 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33543 ;;Total ram usage:        2 bytes
 33544 ;; Hardware stack levels used:    1
 33545 ;; This function calls:
 33546 ;;		Nothing
 33547 ;; This function is called by:
 33548 ;;		__parse_command_long
 33549 ;; This function uses a non-reentrant model
 33550 ;;
 33551                           
 33552                           	psect	text167
 33553  008052                     __ptext167:
 33554                           	opt stack 0
 33555  008052                     __parse_file_modify:
 33556                           	opt stack 28
 33557                           
 33558                           ;api.c: 553: return 65;
 33559                           
 33560                           ;incstack = 0
 33561  008052  0E41               	movlw	65
 33562  008054  0012               	return	
 33563  008056                     __end_of__parse_file_modify:
 33564                           	opt stack 0
 33565                           tosu	equ	0xFFF
 33566                           tosh	equ	0xFFE
 33567                           tosl	equ	0xFFD
 33568                           pclath	equ	0xFFA
 33569                           tblptru	equ	0xFF8
 33570                           tblptrh	equ	0xFF7
 33571                           tblptrl	equ	0xFF6
 33572                           tablat	equ	0xFF5
 33573                           prodh	equ	0xFF4
 33574                           prodl	equ	0xFF3
 33575                           intcon	equ	0xFF2
 33576                           intcon2	equ	0xFF1
 33577                           intcon3	equ	0xFF0
 33578                           indf0	equ	0xFEF
 33579                           postinc0	equ	0xFEE
 33580                           fsr0h	equ	0xFEA
 33581                           fsr0l	equ	0xFE9
 33582                           wreg	equ	0xFE8
 33583                           indf1	equ	0xFE7
 33584                           postdec1	equ	0xFE5
 33585                           plusw1	equ	0xFE3
 33586                           fsr1h	equ	0xFE2
 33587                           fsr1l	equ	0xFE1
 33588                           indf2	equ	0xFDF
 33589                           postinc2	equ	0xFDE
 33590                           postdec2	equ	0xFDD
 33591                           plusw2	equ	0xFDB
 33592                           fsr2h	equ	0xFDA
 33593                           fsr2l	equ	0xFD9
 33594                           status	equ	0xFD8
 33595                           
 33596 ;; *************** function __parse_file_delete *****************
 33597 ;; Defined at:
 33598 ;;		line 497 in file "api.c"
 33599 ;; Parameters:    Size  Location     Type
 33600 ;;  data            2   62[COMRAM] PTR unsigned char 
 33601 ;;		 -> RAM(3759), 
 33602 ;; Auto vars:     Size  Location     Type
 33603 ;;		None
 33604 ;; Return value:  Size  Location     Type
 33605 ;;                  1    wreg      unsigned char 
 33606 ;; Registers used:
 33607 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 33608 ;; Tracked objects:
 33609 ;;		On entry : 0/0
 33610 ;;		On exit  : 0/0
 33611 ;;		Unchanged: 0/0
 33612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33613 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33614 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33615 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33616 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33617 ;;Total ram usage:        3 bytes
 33618 ;; Hardware stack levels used:    1
 33619 ;; Hardware stack levels required when called:    7
 33620 ;; This function calls:
 33621 ;;		_fat_delete_file
 33622 ;; This function is called by:
 33623 ;;		__parse_command_long
 33624 ;; This function uses a non-reentrant model
 33625 ;;
 33626                           
 33627                           	psect	text168
 33628  007480                     __ptext168:
 33629                           	opt stack 0
 33630  007480                     __parse_file_delete:
 33631                           	opt stack 21
 33632                           
 33633                           ;api.c: 500: if((data[0]!=COMMAND_FILE_DELETE) || (data[2]!=0x66) || (data[3]!=0xA0))
 33634                           
 33635                           ;incstack = 0
 33636  007480  C03F  FFD9         	movff	__parse_file_delete@data,fsr2l
 33637  007484  C040  FFDA         	movff	__parse_file_delete@data+1,fsr2h
 33638  007488  0E51               	movlw	81
 33639  00748A  18DE               	xorwf	postinc2,w,c
 33640  00748C  A4D8               	btfss	status,2,c
 33641  00748E  D014               	goto	u9060
 33642  007490  EE20 F002          	lfsr	2,2
 33643  007494  503F               	movf	__parse_file_delete@data,w,c
 33644  007496  26D9               	addwf	fsr2l,f,c
 33645  007498  5040               	movf	__parse_file_delete@data+1,w,c
 33646  00749A  22DA               	addwfc	fsr2h,f,c
 33647  00749C  0E66               	movlw	102
 33648  00749E  18DE               	xorwf	postinc2,w,c
 33649  0074A0  A4D8               	btfss	status,2,c
 33650  0074A2  D00A               	goto	u9060
 33651  0074A4  EE20 F003          	lfsr	2,3
 33652  0074A8  503F               	movf	__parse_file_delete@data,w,c
 33653  0074AA  26D9               	addwf	fsr2l,f,c
 33654  0074AC  5040               	movf	__parse_file_delete@data+1,w,c
 33655  0074AE  22DA               	addwfc	fsr2h,f,c
 33656  0074B0  0EA0               	movlw	160
 33657  0074B2  18DE               	xorwf	postinc2,w,c
 33658  0074B4  B4D8               	btfsc	status,2,c
 33659  0074B6  D002               	goto	l2637
 33660  0074B8                     u9060:
 33661                           
 33662                           ;api.c: 501: {;api.c: 502: return 4;
 33663  0074B8  0E04               	movlw	4
 33664  0074BA  0012               	return	
 33665  0074BC                     l2637:
 33666                           
 33667                           ;api.c: 503: };api.c: 506: fat_delete_file(data[1]);
 33668  0074BC  EE20 F001          	lfsr	2,1
 33669  0074C0  503F               	movf	__parse_file_delete@data,w,c
 33670  0074C2  26D9               	addwf	fsr2l,f,c
 33671  0074C4  5040               	movf	__parse_file_delete@data+1,w,c
 33672  0074C6  22DA               	addwfc	fsr2h,f,c
 33673  0074C8  50DF               	movf	indf2,w,c
 33674  0074CA  EC21  F036         	call	_fat_delete_file
 33675                           
 33676                           ;api.c: 507: return 4;
 33677  0074CE  0E04               	movlw	4
 33678  0074D0  0012               	return	
 33679  0074D2                     __end_of__parse_file_delete:
 33680                           	opt stack 0
 33681                           tosu	equ	0xFFF
 33682                           tosh	equ	0xFFE
 33683                           tosl	equ	0xFFD
 33684                           pclath	equ	0xFFA
 33685                           tblptru	equ	0xFF8
 33686                           tblptrh	equ	0xFF7
 33687                           tblptrl	equ	0xFF6
 33688                           tablat	equ	0xFF5
 33689                           prodh	equ	0xFF4
 33690                           prodl	equ	0xFF3
 33691                           intcon	equ	0xFF2
 33692                           intcon2	equ	0xFF1
 33693                           intcon3	equ	0xFF0
 33694                           indf0	equ	0xFEF
 33695                           postinc0	equ	0xFEE
 33696                           fsr0h	equ	0xFEA
 33697                           fsr0l	equ	0xFE9
 33698                           wreg	equ	0xFE8
 33699                           indf1	equ	0xFE7
 33700                           postdec1	equ	0xFE5
 33701                           plusw1	equ	0xFE3
 33702                           fsr1h	equ	0xFE2
 33703                           fsr1l	equ	0xFE1
 33704                           indf2	equ	0xFDF
 33705                           postinc2	equ	0xFDE
 33706                           postdec2	equ	0xFDD
 33707                           plusw2	equ	0xFDB
 33708                           fsr2h	equ	0xFDA
 33709                           fsr2l	equ	0xFD9
 33710                           status	equ	0xFD8
 33711                           
 33712 ;; *************** function _fat_delete_file *****************
 33713 ;; Defined at:
 33714 ;;		line 391 in file "fat16.c"
 33715 ;; Parameters:    Size  Location     Type
 33716 ;;  file_number     1    wreg     unsigned char 
 33717 ;; Auto vars:     Size  Location     Type
 33718 ;;  file_number     1   61[COMRAM] unsigned char 
 33719 ;;  first_cluste    2   59[COMRAM] unsigned int 
 33720 ;;  next_cluster    2   57[COMRAM] unsigned int 
 33721 ;; Return value:  Size  Location     Type
 33722 ;;                  1    wreg      void 
 33723 ;; Registers used:
 33724 ;;		wreg, status,2, status,0, cstack
 33725 ;; Tracked objects:
 33726 ;;		On entry : 0/0
 33727 ;;		On exit  : 0/0
 33728 ;;		Unchanged: 0/0
 33729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33730 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33731 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33733 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33734 ;;Total ram usage:        5 bytes
 33735 ;; Hardware stack levels used:    1
 33736 ;; Hardware stack levels required when called:    6
 33737 ;; This function calls:
 33738 ;;		__delete_root
 33739 ;;		__get_first_cluster
 33740 ;;		__read_fat
 33741 ;;		__root_is_available
 33742 ;;		__write_fat
 33743 ;; This function is called by:
 33744 ;;		__parse_file_delete
 33745 ;; This function uses a non-reentrant model
 33746 ;;
 33747                           
 33748                           	psect	text169
 33749  006C42                     __ptext169:
 33750                           	opt stack 0
 33751  006C42                     _fat_delete_file:
 33752                           	opt stack 21
 33753                           
 33754                           ;incstack = 0
 33755                           ;fat_delete_file@file_number stored from wreg
 33756  006C42  6E3E               	movwf	fat_delete_file@file_number,c
 33757                           
 33758                           ;fat16.c: 393: uint16_t first_cluster;;fat16.c: 394: uint16_t next_cluster;;fat16.c: 397
      +                          : if(file_number>=64)
 33759  006C44  0E3F               	movlw	63
 33760  006C46  643E               	cpfsgt	fat_delete_file@file_number,c
 33761  006C48  D001               	goto	l1963
 33762  006C4A  0012               	return	
 33763  006C4C                     l1963:
 33764                           
 33765                           ;fat16.c: 401: };fat16.c: 404: if(_root_is_available(file_number))
 33766  006C4C  503E               	movf	fat_delete_file@file_number,w,c
 33767  006C4E  ECBB  F033         	call	__root_is_available
 33768  006C52  0900               	iorlw	0
 33769  006C54  A4D8               	btfss	status,2,c
 33770  006C56  0012               	return	
 33771                           
 33772                           ;fat16.c: 408: };fat16.c: 411: first_cluster = _get_first_cluster(file_number);
 33773                           
 33774                           ;fat16.c: 405: {;fat16.c: 407: return;
 33775  006C58  503E               	movf	fat_delete_file@file_number,w,c
 33776  006C5A  EC56  F036         	call	__get_first_cluster
 33777  006C5E  C030  F03C         	movff	?__get_first_cluster,fat_delete_file@first_cluster
 33778  006C62  C031  F03D         	movff	?__get_first_cluster+1,fat_delete_file@first_cluster+1
 33779  006C66                     l1966:
 33780                           
 33781                           ;fat16.c: 415: {;fat16.c: 418: next_cluster = _read_fat(first_cluster);
 33782  006C66  C03C  F030         	movff	fat_delete_file@first_cluster,__read_fat@cluster
 33783  006C6A  C03D  F031         	movff	fat_delete_file@first_cluster+1,__read_fat@cluster+1
 33784  006C6E  EC01  F03B         	call	__read_fat	;wreg free
 33785  006C72  C030  F03A         	movff	?__read_fat,fat_delete_file@next_cluster
 33786  006C76  C031  F03B         	movff	?__read_fat+1,fat_delete_file@next_cluster+1
 33787                           
 33788                           ;fat16.c: 425: _write_fat(first_cluster, 0x0000);
 33789  006C7A  C03C  F029         	movff	fat_delete_file@first_cluster,__write_fat@cluster
 33790  006C7E  C03D  F02A         	movff	fat_delete_file@first_cluster+1,__write_fat@cluster+1
 33791  006C82  0E00               	movlw	0
 33792  006C84  6E2C               	movwf	__write_fat@value+1,c
 33793  006C86  0E00               	movlw	0
 33794  006C88  6E2B               	movwf	__write_fat@value,c
 33795  006C8A  ECCA  F03B         	call	__write_fat	;wreg free
 33796                           
 33797                           ;fat16.c: 427: if(next_cluster>0xFFF0)
 33798  006C8E  0EF1               	movlw	241
 33799  006C90  5C3A               	subwf	fat_delete_file@next_cluster,w,c
 33800  006C92  0EFF               	movlw	255
 33801  006C94  583B               	subwfb	fat_delete_file@next_cluster+1,w,c
 33802  006C96  B0D8               	btfsc	status,0,c
 33803  006C98  D005               	goto	l1968
 33804                           
 33805                           ;fat16.c: 432: else;fat16.c: 433: {;fat16.c: 434: first_cluster = next_cluster;
 33806                           
 33807                           ;fat16.c: 430: }
 33808                           
 33809                           ;fat16.c: 428: {;fat16.c: 429: break;
 33810  006C9A  C03A  F03C         	movff	fat_delete_file@next_cluster,fat_delete_file@first_cluster
 33811  006C9E  C03B  F03D         	movff	fat_delete_file@next_cluster+1,fat_delete_file@first_cluster+1
 33812  006CA2  D7E1               	goto	l1966
 33813  006CA4                     l1968:
 33814                           
 33815                           ;fat16.c: 435: };fat16.c: 436: };fat16.c: 440: _delete_root(file_number);
 33816  006CA4  503E               	movf	fat_delete_file@file_number,w,c
 33817  006CA6  ECB3  F037         	call	__delete_root
 33818  006CAA  0012               	return		;funcret
 33819  006CAC                     __end_of_fat_delete_file:
 33820                           	opt stack 0
 33821                           tosu	equ	0xFFF
 33822                           tosh	equ	0xFFE
 33823                           tosl	equ	0xFFD
 33824                           pclath	equ	0xFFA
 33825                           tblptru	equ	0xFF8
 33826                           tblptrh	equ	0xFF7
 33827                           tblptrl	equ	0xFF6
 33828                           tablat	equ	0xFF5
 33829                           prodh	equ	0xFF4
 33830                           prodl	equ	0xFF3
 33831                           intcon	equ	0xFF2
 33832                           intcon2	equ	0xFF1
 33833                           intcon3	equ	0xFF0
 33834                           indf0	equ	0xFEF
 33835                           postinc0	equ	0xFEE
 33836                           fsr0h	equ	0xFEA
 33837                           fsr0l	equ	0xFE9
 33838                           wreg	equ	0xFE8
 33839                           indf1	equ	0xFE7
 33840                           postdec1	equ	0xFE5
 33841                           plusw1	equ	0xFE3
 33842                           fsr1h	equ	0xFE2
 33843                           fsr1l	equ	0xFE1
 33844                           indf2	equ	0xFDF
 33845                           postinc2	equ	0xFDE
 33846                           postdec2	equ	0xFDD
 33847                           plusw2	equ	0xFDB
 33848                           fsr2h	equ	0xFDA
 33849                           fsr2l	equ	0xFD9
 33850                           status	equ	0xFD8
 33851                           
 33852 ;; *************** function __get_first_cluster *****************
 33853 ;; Defined at:
 33854 ;;		line 205 in file "fat16.c"
 33855 ;; Parameters:    Size  Location     Type
 33856 ;;  slot            1    wreg     unsigned char 
 33857 ;; Auto vars:     Size  Location     Type
 33858 ;;  slot            1   56[COMRAM] unsigned char 
 33859 ;;  first_cluste    2   54[COMRAM] unsigned int 
 33860 ;;  offset          2   52[COMRAM] unsigned int 
 33861 ;;  sector          2   50[COMRAM] unsigned int 
 33862 ;; Return value:  Size  Location     Type
 33863 ;;                  2   47[COMRAM] unsigned int 
 33864 ;; Registers used:
 33865 ;;		wreg, status,2, status,0, cstack
 33866 ;; Tracked objects:
 33867 ;;		On entry : 0/0
 33868 ;;		On exit  : 0/0
 33869 ;;		Unchanged: 0/0
 33870 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 33871 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33872 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33873 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33874 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 33875 ;;Total ram usage:       10 bytes
 33876 ;; Hardware stack levels used:    1
 33877 ;; Hardware stack levels required when called:    5
 33878 ;; This function calls:
 33879 ;;		_flash_partial_read
 33880 ;; This function is called by:
 33881 ;;		_fat_delete_file
 33882 ;; This function uses a non-reentrant model
 33883 ;;
 33884                           
 33885                           	psect	text170
 33886  006CAC                     __ptext170:
 33887                           	opt stack 0
 33888  006CAC                     __get_first_cluster:
 33889                           	opt stack 21
 33890                           
 33891                           ;incstack = 0
 33892                           ;__get_first_cluster@slot stored from wreg
 33893  006CAC  6E39               	movwf	__get_first_cluster@slot,c
 33894                           
 33895                           ;fat16.c: 207: uint16_t sector;;fat16.c: 208: uint16_t offset;;fat16.c: 209: uint16_t fi
      +                          rst_cluster;;fat16.c: 210: sector = slot >> 4;
 33896  006CAE  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33897  006CB2  3A32               	swapf	??__get_first_cluster,f,c
 33898  006CB4  0E0F               	movlw	15
 33899  006CB6  1632               	andwf	??__get_first_cluster,f,c
 33900  006CB8  5032               	movf	??__get_first_cluster,w,c
 33901  006CBA  6E33               	movwf	__get_first_cluster@sector,c
 33902  006CBC  6A34               	clrf	__get_first_cluster@sector+1,c
 33903                           
 33904                           ;fat16.c: 211: sector += 34;
 33905  006CBE  0E22               	movlw	34
 33906  006CC0  2633               	addwf	__get_first_cluster@sector,f,c
 33907  006CC2  0E00               	movlw	0
 33908  006CC4  2234               	addwfc	__get_first_cluster@sector+1,f,c
 33909                           
 33910                           ;fat16.c: 212: offset = slot & 0b1111;
 33911  006CC6  C039  F032         	movff	__get_first_cluster@slot,??__get_first_cluster
 33912  006CCA  0E0F               	movlw	15
 33913  006CCC  1632               	andwf	??__get_first_cluster,f,c
 33914  006CCE  5032               	movf	??__get_first_cluster,w,c
 33915  006CD0  6E35               	movwf	__get_first_cluster@offset,c
 33916  006CD2  6A36               	clrf	__get_first_cluster@offset+1,c
 33917                           
 33918                           ;fat16.c: 213: offset <<= 5;
 33919  006CD4  0E05               	movlw	5
 33920  006CD6                     u7665:
 33921  006CD6  90D8               	bcf	status,0,c
 33922  006CD8  3635               	rlcf	__get_first_cluster@offset,f,c
 33923  006CDA  3636               	rlcf	__get_first_cluster@offset+1,f,c
 33924  006CDC  2EE8               	decfsz	wreg,f,c
 33925  006CDE  D7FB               	goto	u7665
 33926                           
 33927                           ;fat16.c: 214: offset += 26;
 33928  006CE0  0E1A               	movlw	26
 33929  006CE2  2635               	addwf	__get_first_cluster@offset,f,c
 33930  006CE4  0E00               	movlw	0
 33931  006CE6  2236               	addwfc	__get_first_cluster@offset+1,f,c
 33932                           
 33933                           ;fat16.c: 215: flash_partial_read(sector, offset, 2, &first_cluster);
 33934  006CE8  C033  F028         	movff	__get_first_cluster@sector,flash_partial_read@page
 33935  006CEC  C034  F029         	movff	__get_first_cluster@sector+1,flash_partial_read@page+1
 33936  006CF0  C035  F02A         	movff	__get_first_cluster@offset,flash_partial_read@start
 33937  006CF4  C036  F02B         	movff	__get_first_cluster@offset+1,flash_partial_read@start+1
 33938  006CF8  0E00               	movlw	0
 33939  006CFA  6E2D               	movwf	flash_partial_read@length+1,c
 33940  006CFC  0E02               	movlw	2
 33941  006CFE  6E2C               	movwf	flash_partial_read@length,c
 33942  006D00  0E37               	movlw	low __get_first_cluster@first_cluster
 33943  006D02  6E2E               	movwf	flash_partial_read@data,c
 33944  006D04  0E00               	movlw	high __get_first_cluster@first_cluster
 33945  006D06  6E2F               	movwf	flash_partial_read@data+1,c
 33946  006D08  EC66  F03D         	call	_flash_partial_read	;wreg free
 33947                           
 33948                           ;fat16.c: 216: return first_cluster;
 33949  006D0C  C037  F030         	movff	__get_first_cluster@first_cluster,?__get_first_cluster
 33950  006D10  C038  F031         	movff	__get_first_cluster@first_cluster+1,?__get_first_cluster+1
 33951  006D14  0012               	return	
 33952  006D16                     __end_of__get_first_cluster:
 33953                           	opt stack 0
 33954                           tosu	equ	0xFFF
 33955                           tosh	equ	0xFFE
 33956                           tosl	equ	0xFFD
 33957                           pclath	equ	0xFFA
 33958                           tblptru	equ	0xFF8
 33959                           tblptrh	equ	0xFF7
 33960                           tblptrl	equ	0xFF6
 33961                           tablat	equ	0xFF5
 33962                           prodh	equ	0xFF4
 33963                           prodl	equ	0xFF3
 33964                           intcon	equ	0xFF2
 33965                           intcon2	equ	0xFF1
 33966                           intcon3	equ	0xFF0
 33967                           indf0	equ	0xFEF
 33968                           postinc0	equ	0xFEE
 33969                           fsr0h	equ	0xFEA
 33970                           fsr0l	equ	0xFE9
 33971                           wreg	equ	0xFE8
 33972                           indf1	equ	0xFE7
 33973                           postdec1	equ	0xFE5
 33974                           plusw1	equ	0xFE3
 33975                           fsr1h	equ	0xFE2
 33976                           fsr1l	equ	0xFE1
 33977                           indf2	equ	0xFDF
 33978                           postinc2	equ	0xFDE
 33979                           postdec2	equ	0xFDD
 33980                           plusw2	equ	0xFDB
 33981                           fsr2h	equ	0xFDA
 33982                           fsr2l	equ	0xFD9
 33983                           status	equ	0xFD8
 33984                           
 33985 ;; *************** function __delete_root *****************
 33986 ;; Defined at:
 33987 ;;		line 192 in file "fat16.c"
 33988 ;; Parameters:    Size  Location     Type
 33989 ;;  slot            1    wreg     unsigned char 
 33990 ;; Auto vars:     Size  Location     Type
 33991 ;;  slot            1   46[COMRAM] unsigned char 
 33992 ;;  offset          2   43[COMRAM] unsigned int 
 33993 ;;  root_sector     2   41[COMRAM] unsigned int 
 33994 ;;  deleted_valu    1   45[COMRAM] unsigned char 
 33995 ;; Return value:  Size  Location     Type
 33996 ;;                  1    wreg      void 
 33997 ;; Registers used:
 33998 ;;		wreg, status,2, status,0, cstack
 33999 ;; Tracked objects:
 34000 ;;		On entry : 0/0
 34001 ;;		On exit  : 0/0
 34002 ;;		Unchanged: 0/0
 34003 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34004 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34005 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34006 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34007 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34008 ;;Total ram usage:        7 bytes
 34009 ;; Hardware stack levels used:    1
 34010 ;; Hardware stack levels required when called:    5
 34011 ;; This function calls:
 34012 ;;		_flash_partial_write
 34013 ;; This function is called by:
 34014 ;;		_fat_delete_file
 34015 ;; This function uses a non-reentrant model
 34016 ;;
 34017                           
 34018                           	psect	text171
 34019  006F66                     __ptext171:
 34020                           	opt stack 0
 34021  006F66                     __delete_root:
 34022                           	opt stack 21
 34023                           
 34024                           ;incstack = 0
 34025                           ;__delete_root@slot stored from wreg
 34026  006F66  6E2F               	movwf	__delete_root@slot,c
 34027                           
 34028                           ;fat16.c: 194: uint16_t root_sector;;fat16.c: 195: uint16_t offset;;fat16.c: 196: uint8_
      +                          t deleted_value;;fat16.c: 198: root_sector = (slot >> 4) + 34;
 34029  006F68  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34030  006F6C  3A29               	swapf	??__delete_root,f,c
 34031  006F6E  0E0F               	movlw	15
 34032  006F70  1629               	andwf	??__delete_root,f,c
 34033  006F72  0E22               	movlw	34
 34034  006F74  2429               	addwf	??__delete_root,w,c
 34035  006F76  6E2A               	movwf	__delete_root@root_sector,c
 34036  006F78  6A2B               	clrf	__delete_root@root_sector+1,c
 34037  006F7A  0E00               	movlw	0
 34038  006F7C  222B               	addwfc	__delete_root@root_sector+1,f,c
 34039                           
 34040                           ;fat16.c: 199: offset = (slot & 0b1111);
 34041  006F7E  C02F  F029         	movff	__delete_root@slot,??__delete_root
 34042  006F82  0E0F               	movlw	15
 34043  006F84  1629               	andwf	??__delete_root,f,c
 34044  006F86  5029               	movf	??__delete_root,w,c
 34045  006F88  6E2C               	movwf	__delete_root@offset,c
 34046  006F8A  6A2D               	clrf	__delete_root@offset+1,c
 34047                           
 34048                           ;fat16.c: 200: offset <<= 5;
 34049  006F8C  0E05               	movlw	5
 34050  006F8E                     u7655:
 34051  006F8E  90D8               	bcf	status,0,c
 34052  006F90  362C               	rlcf	__delete_root@offset,f,c
 34053  006F92  362D               	rlcf	__delete_root@offset+1,f,c
 34054  006F94  2EE8               	decfsz	wreg,f,c
 34055  006F96  D7FB               	goto	u7655
 34056                           
 34057                           ;fat16.c: 201: deleted_value = 0xE5;
 34058  006F98  0EE5               	movlw	229
 34059  006F9A  6E2E               	movwf	__delete_root@deleted_value,c
 34060                           
 34061                           ;fat16.c: 202: flash_partial_write(root_sector, offset, 1, &deleted_value);
 34062  006F9C  C02A  F020         	movff	__delete_root@root_sector,flash_partial_write@page
 34063  006FA0  C02B  F021         	movff	__delete_root@root_sector+1,flash_partial_write@page+1
 34064  006FA4  C02C  F022         	movff	__delete_root@offset,flash_partial_write@start
 34065  006FA8  C02D  F023         	movff	__delete_root@offset+1,flash_partial_write@start+1
 34066  006FAC  0E00               	movlw	0
 34067  006FAE  6E25               	movwf	flash_partial_write@length+1,c
 34068  006FB0  0E01               	movlw	1
 34069  006FB2  6E24               	movwf	flash_partial_write@length,c
 34070  006FB4  0E2E               	movlw	low __delete_root@deleted_value
 34071  006FB6  6E26               	movwf	flash_partial_write@data,c
 34072  006FB8  0E00               	movlw	high __delete_root@deleted_value
 34073  006FBA  6E27               	movwf	flash_partial_write@data+1,c
 34074  006FBC  ECDB  F034         	call	_flash_partial_write	;wreg free
 34075  006FC0  0012               	return		;funcret
 34076  006FC2                     __end_of__delete_root:
 34077                           	opt stack 0
 34078                           tosu	equ	0xFFF
 34079                           tosh	equ	0xFFE
 34080                           tosl	equ	0xFFD
 34081                           pclath	equ	0xFFA
 34082                           tblptru	equ	0xFF8
 34083                           tblptrh	equ	0xFF7
 34084                           tblptrl	equ	0xFF6
 34085                           tablat	equ	0xFF5
 34086                           prodh	equ	0xFF4
 34087                           prodl	equ	0xFF3
 34088                           intcon	equ	0xFF2
 34089                           intcon2	equ	0xFF1
 34090                           intcon3	equ	0xFF0
 34091                           indf0	equ	0xFEF
 34092                           postinc0	equ	0xFEE
 34093                           fsr0h	equ	0xFEA
 34094                           fsr0l	equ	0xFE9
 34095                           wreg	equ	0xFE8
 34096                           indf1	equ	0xFE7
 34097                           postdec1	equ	0xFE5
 34098                           plusw1	equ	0xFE3
 34099                           fsr1h	equ	0xFE2
 34100                           fsr1l	equ	0xFE1
 34101                           indf2	equ	0xFDF
 34102                           postinc2	equ	0xFDE
 34103                           postdec2	equ	0xFDD
 34104                           plusw2	equ	0xFDB
 34105                           fsr2h	equ	0xFDA
 34106                           fsr2l	equ	0xFD9
 34107                           status	equ	0xFD8
 34108                           
 34109 ;; *************** function __parse_file_create *****************
 34110 ;; Defined at:
 34111 ;;		line 510 in file "api.c"
 34112 ;; Parameters:    Size  Location     Type
 34113 ;;  data            2   79[COMRAM] PTR unsigned char 
 34114 ;;		 -> RAM(3759), 
 34115 ;; Auto vars:     Size  Location     Type
 34116 ;;		None
 34117 ;; Return value:  Size  Location     Type
 34118 ;;                  1    wreg      unsigned char 
 34119 ;; Registers used:
 34120 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34121 ;; Tracked objects:
 34122 ;;		On entry : 0/0
 34123 ;;		On exit  : 0/0
 34124 ;;		Unchanged: 0/0
 34125 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34126 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34127 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34128 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34129 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34130 ;;Total ram usage:        3 bytes
 34131 ;; Hardware stack levels used:    1
 34132 ;; Hardware stack levels required when called:    8
 34133 ;; This function calls:
 34134 ;;		_fat_create_file
 34135 ;; This function is called by:
 34136 ;;		__parse_command_long
 34137 ;; This function uses a non-reentrant model
 34138 ;;
 34139                           
 34140                           	psect	text172
 34141  006B02                     __ptext172:
 34142                           	opt stack 0
 34143  006B02                     __parse_file_create:
 34144                           	opt stack 20
 34145                           
 34146                           ;api.c: 513: if((data[0]!=COMMAND_FILE_CREATE) || (data[12]!=0xBD) || (data[13]!=0x4F))
 34147                           
 34148                           ;incstack = 0
 34149  006B02  C050  FFD9         	movff	__parse_file_create@data,fsr2l
 34150  006B06  C051  FFDA         	movff	__parse_file_create@data+1,fsr2h
 34151  006B0A  0E52               	movlw	82
 34152  006B0C  18DE               	xorwf	postinc2,w,c
 34153  006B0E  A4D8               	btfss	status,2,c
 34154  006B10  D014               	goto	u9090
 34155  006B12  EE20 F00C          	lfsr	2,12
 34156  006B16  5050               	movf	__parse_file_create@data,w,c
 34157  006B18  26D9               	addwf	fsr2l,f,c
 34158  006B1A  5051               	movf	__parse_file_create@data+1,w,c
 34159  006B1C  22DA               	addwfc	fsr2h,f,c
 34160  006B1E  0EBD               	movlw	189
 34161  006B20  18DE               	xorwf	postinc2,w,c
 34162  006B22  A4D8               	btfss	status,2,c
 34163  006B24  D00A               	goto	u9090
 34164  006B26  EE20 F00D          	lfsr	2,13
 34165  006B2A  5050               	movf	__parse_file_create@data,w,c
 34166  006B2C  26D9               	addwf	fsr2l,f,c
 34167  006B2E  5051               	movf	__parse_file_create@data+1,w,c
 34168  006B30  22DA               	addwfc	fsr2h,f,c
 34169  006B32  0E4F               	movlw	79
 34170  006B34  18DE               	xorwf	postinc2,w,c
 34171  006B36  B4D8               	btfsc	status,2,c
 34172  006B38  D002               	goto	l2643
 34173  006B3A                     u9090:
 34174                           
 34175                           ;api.c: 514: {;api.c: 515: return 14;
 34176  006B3A  0E0E               	movlw	14
 34177  006B3C  0012               	return	
 34178  006B3E                     l2643:
 34179                           
 34180                           ;api.c: 516: };api.c: 519: fat_create_file(&data[1], &data[9], 0);
 34181  006B3E  0E01               	movlw	1
 34182  006B40  2450               	addwf	__parse_file_create@data,w,c
 34183  006B42  6E44               	movwf	fat_create_file@name,c
 34184  006B44  0E00               	movlw	0
 34185  006B46  2051               	addwfc	__parse_file_create@data+1,w,c
 34186  006B48  6E45               	movwf	fat_create_file@name+1,c
 34187  006B4A  0E09               	movlw	9
 34188  006B4C  2450               	addwf	__parse_file_create@data,w,c
 34189  006B4E  6E46               	movwf	fat_create_file@extension,c
 34190  006B50  0E00               	movlw	0
 34191  006B52  2051               	addwfc	__parse_file_create@data+1,w,c
 34192  006B54  6E47               	movwf	fat_create_file@extension+1,c
 34193  006B56  0E00               	movlw	0
 34194  006B58  6E48               	movwf	fat_create_file@size,c
 34195  006B5A  0E00               	movlw	0
 34196  006B5C  6E49               	movwf	fat_create_file@size+1,c
 34197  006B5E  0E00               	movlw	0
 34198  006B60  6E4A               	movwf	fat_create_file@size+2,c
 34199  006B62  0E00               	movlw	0
 34200  006B64  6E4B               	movwf	fat_create_file@size+3,c
 34201  006B66  EC5C  F018         	call	_fat_create_file	;wreg free
 34202                           
 34203                           ;api.c: 520: return 14;
 34204  006B6A  0E0E               	movlw	14
 34205  006B6C  0012               	return	
 34206  006B6E                     __end_of__parse_file_create:
 34207                           	opt stack 0
 34208                           tosu	equ	0xFFF
 34209                           tosh	equ	0xFFE
 34210                           tosl	equ	0xFFD
 34211                           pclath	equ	0xFFA
 34212                           tblptru	equ	0xFF8
 34213                           tblptrh	equ	0xFF7
 34214                           tblptrl	equ	0xFF6
 34215                           tablat	equ	0xFF5
 34216                           prodh	equ	0xFF4
 34217                           prodl	equ	0xFF3
 34218                           intcon	equ	0xFF2
 34219                           intcon2	equ	0xFF1
 34220                           intcon3	equ	0xFF0
 34221                           indf0	equ	0xFEF
 34222                           postinc0	equ	0xFEE
 34223                           fsr0h	equ	0xFEA
 34224                           fsr0l	equ	0xFE9
 34225                           wreg	equ	0xFE8
 34226                           indf1	equ	0xFE7
 34227                           postdec1	equ	0xFE5
 34228                           plusw1	equ	0xFE3
 34229                           fsr1h	equ	0xFE2
 34230                           fsr1l	equ	0xFE1
 34231                           indf2	equ	0xFDF
 34232                           postinc2	equ	0xFDE
 34233                           postdec2	equ	0xFDD
 34234                           plusw2	equ	0xFDB
 34235                           fsr2h	equ	0xFDA
 34236                           fsr2l	equ	0xFD9
 34237                           status	equ	0xFD8
 34238                           
 34239 ;; *************** function _fat_create_file *****************
 34240 ;; Defined at:
 34241 ;;		line 309 in file "fat16.c"
 34242 ;; Parameters:    Size  Location     Type
 34243 ;;  name            2   67[COMRAM] PTR unsigned char 
 34244 ;;		 -> RAM(3759), 
 34245 ;;  extension       2   69[COMRAM] PTR unsigned char 
 34246 ;;		 -> RAM(3759), 
 34247 ;;  size            4   71[COMRAM] unsigned long 
 34248 ;; Auto vars:     Size  Location     Type
 34249 ;;  root_entry     32    9[BANK0 ] struct .
 34250 ;;  cluster         2    7[BANK0 ] unsigned int 
 34251 ;;  number_of_cl    2    5[BANK0 ] unsigned int 
 34252 ;;  cluster_coun    2    2[BANK0 ] unsigned int 
 34253 ;;  next_cluster    2    0[BANK0 ] unsigned int 
 34254 ;;  root_slot       1    4[BANK0 ] unsigned char 
 34255 ;; Return value:  Size  Location     Type
 34256 ;;                  1    wreg      unsigned char 
 34257 ;; Registers used:
 34258 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34259 ;; Tracked objects:
 34260 ;;		On entry : 0/0
 34261 ;;		On exit  : 0/0
 34262 ;;		Unchanged: 0/0
 34263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34264 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34265 ;;      Locals:         0      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34266 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34267 ;;      Totals:        12      41       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34268 ;;Total ram usage:       53 bytes
 34269 ;; Hardware stack levels used:    1
 34270 ;; Hardware stack levels required when called:    7
 34271 ;; This function calls:
 34272 ;;		__get_available_root_entry
 34273 ;;		__get_date
 34274 ;;		__get_empty_cluster
 34275 ;;		__get_time
 34276 ;;		__write_fat
 34277 ;;		__write_root
 34278 ;;		_fat_find_file
 34279 ;;		_fat_get_empty_clusters
 34280 ;;		_memcpy
 34281 ;; This function is called by:
 34282 ;;		__parse_file_create
 34283 ;; This function uses a non-reentrant model
 34284 ;;
 34285                           
 34286                           	psect	text173
 34287  0030B8                     __ptext173:
 34288                           	opt stack 0
 34289  0030B8                     _fat_create_file:
 34290                           	opt stack 20
 34291                           
 34292                           ;fat16.c: 311: uint8_t root_slot;;fat16.c: 312: rootEntry_t root_entry;;fat16.c: 313: ui
      +                          nt16_t cluster;;fat16.c: 314: uint16_t next_cluster;;fat16.c: 315: uint16_t number_of_cl
      +                          usters;;fat16.c: 316: uint16_t cluster_count;;fat16.c: 320: if(fat_find_file(name, exten
      +                          sion) != 0xFF)
 34293                           
 34294                           ;incstack = 0
 34295  0030B8  C044  F030         	movff	fat_create_file@name,fat_find_file@name
 34296  0030BC  C045  F031         	movff	fat_create_file@name+1,fat_find_file@name+1
 34297  0030C0  C046  F032         	movff	fat_create_file@extension,fat_find_file@extension
 34298  0030C4  C047  F033         	movff	fat_create_file@extension+1,fat_find_file@extension+1
 34299  0030C8  ECD1  F02A         	call	_fat_find_file	;wreg free
 34300  0030CC  0AFF               	xorlw	255
 34301  0030CE  A4D8               	btfss	status,2,c
 34302  0030D0  0012               	return	
 34303                           
 34304                           ;fat16.c: 325: };fat16.c: 329: root_slot = _get_available_root_entry();
 34305                           
 34306                           ;fat16.c: 321: {;fat16.c: 324: return 0xFF;;	Return value of _fat_create_file is never u
      +                          sed
 34307  0030D2  ECA6  F03E         	call	__get_available_root_entry	;wreg free
 34308  0030D6  0100               	movlb	0	; () banked
 34309  0030D8  6FB9               	movwf	fat_create_file@root_slot& (0+255),b
 34310                           
 34311                           ; BSR set to: 0
 34312                           ;fat16.c: 330: if(root_slot == 0xFF)
 34313  0030DA  29B9               	incf	fat_create_file@root_slot& (0+255),w,b
 34314  0030DC  B4D8               	btfsc	status,2,c
 34315  0030DE  0012               	return	
 34316                           
 34317                           ; BSR set to: 0
 34318                           ;fat16.c: 335: };fat16.c: 338: number_of_clusters = (size>>9) + 1;
 34319                           
 34320                           ; BSR set to: 0
 34321                           
 34322                           ; BSR set to: 0
 34323                           ;fat16.c: 331: {;fat16.c: 334: return 0xFE;;	Return value of _fat_create_file is never u
      +                          sed
 34324  0030E0  C048  F04C         	movff	fat_create_file@size,??_fat_create_file
 34325  0030E4  C049  F04D         	movff	fat_create_file@size+1,??_fat_create_file+1
 34326  0030E8  C04A  F04E         	movff	fat_create_file@size+2,??_fat_create_file+2
 34327  0030EC  C04B  F04F         	movff	fat_create_file@size+3,??_fat_create_file+3
 34328  0030F0  0E0A               	movlw	10
 34329  0030F2  D005               	goto	u8440
 34330  0030F4                     u8445:
 34331  0030F4  90D8               	bcf	status,0,c
 34332  0030F6  324F               	rrcf	??_fat_create_file+3,f,c
 34333  0030F8  324E               	rrcf	??_fat_create_file+2,f,c
 34334  0030FA  324D               	rrcf	??_fat_create_file+1,f,c
 34335  0030FC  324C               	rrcf	??_fat_create_file,f,c
 34336  0030FE                     u8440:
 34337  0030FE  2EE8               	decfsz	wreg,f,c
 34338  003100  D7F9               	goto	u8445
 34339  003102  0E01               	movlw	1
 34340  003104  244C               	addwf	??_fat_create_file,w,c
 34341  003106  6FBA               	movwf	fat_create_file@number_of_clusters& (0+255),b
 34342  003108  0E00               	movlw	0
 34343  00310A  204D               	addwfc	??_fat_create_file+1,w,c
 34344  00310C  6FBB               	movwf	(fat_create_file@number_of_clusters+1)& (0+255),b
 34345                           
 34346                           ; BSR set to: 0
 34347                           ;fat16.c: 339: if(fat_get_empty_clusters(number_of_clusters) != number_of_clusters)
 34348  00310E  C0BA  F030         	movff	fat_create_file@number_of_clusters,fat_get_empty_clusters@maximum
 34349  003112  C0BB  F031         	movff	fat_create_file@number_of_clusters+1,fat_get_empty_clusters@maximum+1
 34350  003116  EC2F  F031         	call	_fat_get_empty_clusters	;wreg free
 34351  00311A  0100               	movlb	0	; () banked
 34352  00311C  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 34353  00311E  1830               	xorwf	?_fat_get_empty_clusters,w,c
 34354  003120  E105               	bnz	u8450
 34355  003122  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34356  003124  1831               	xorwf	?_fat_get_empty_clusters+1,w,c
 34357  003126  A4D8               	btfss	status,2,c
 34358  003128  0012               	return	
 34359  00312A  D001               	goto	l1955
 34360  00312C                     u8450:
 34361                           
 34362                           ; BSR set to: 0
 34363                           ;fat16.c: 340: {;fat16.c: 343: return 0xFD;;	Return value of _fat_create_file is never u
      +                          sed
 34364  00312C  0012               	return	
 34365  00312E                     l1955:
 34366                           
 34367                           ; BSR set to: 0
 34368                           ;fat16.c: 344: };fat16.c: 347: cluster = _get_empty_cluster(2);
 34369                           
 34370                           ; BSR set to: 0
 34371  00312E  0E00               	movlw	0
 34372  003130  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34373  003132  0E02               	movlw	2
 34374  003134  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34375  003136  EC30  F034         	call	__get_empty_cluster	;wreg free
 34376  00313A  C030  F0BC         	movff	?__get_empty_cluster,fat_create_file@cluster
 34377  00313E  C031  F0BD         	movff	?__get_empty_cluster+1,fat_create_file@cluster+1
 34378                           
 34379                           ;fat16.c: 350: memcpy(root_entry.fileName, name, 8);
 34380  003142  0EBE               	movlw	low fat_create_file@root_entry
 34381  003144  6E01               	movwf	memcpy@d1,c
 34382  003146  0E00               	movlw	high fat_create_file@root_entry
 34383  003148  6E02               	movwf	memcpy@d1+1,c
 34384  00314A  C044  F003         	movff	fat_create_file@name,memcpy@s1
 34385  00314E  C045  F004         	movff	fat_create_file@name+1,memcpy@s1+1
 34386  003152  5003               	movf	memcpy@s1,w,c
 34387  003154  1004               	iorwf	memcpy@s1+1,w,c
 34388  003156  A4D8               	btfss	status,2,c
 34389  003158  0E20               	movlw	32
 34390  00315A  6E05               	movwf	memcpy@s1+2,c
 34391  00315C  0E00               	movlw	0
 34392  00315E  6E07               	movwf	memcpy@n+1,c
 34393  003160  0E08               	movlw	8
 34394  003162  6E06               	movwf	memcpy@n,c
 34395  003164  ECBE  F036         	call	_memcpy	;wreg free
 34396                           
 34397                           ;fat16.c: 351: memcpy(root_entry.fileExtension, extension, 3);
 34398  003168  0EC6               	movlw	low (fat_create_file@root_entry+8)
 34399  00316A  6E01               	movwf	memcpy@d1,c
 34400  00316C  0E00               	movlw	high (fat_create_file@root_entry+8)
 34401  00316E  6E02               	movwf	memcpy@d1+1,c
 34402  003170  C046  F003         	movff	fat_create_file@extension,memcpy@s1
 34403  003174  C047  F004         	movff	fat_create_file@extension+1,memcpy@s1+1
 34404  003178  5003               	movf	memcpy@s1,w,c
 34405  00317A  1004               	iorwf	memcpy@s1+1,w,c
 34406  00317C  A4D8               	btfss	status,2,c
 34407  00317E  0E20               	movlw	32
 34408  003180  6E05               	movwf	memcpy@s1+2,c
 34409  003182  0E00               	movlw	0
 34410  003184  6E07               	movwf	memcpy@n+1,c
 34411  003186  0E03               	movlw	3
 34412  003188  6E06               	movwf	memcpy@n,c
 34413  00318A  ECBE  F036         	call	_memcpy	;wreg free
 34414                           
 34415                           ;fat16.c: 352: root_entry.attributes = 0x00;
 34416  00318E  0E00               	movlw	0
 34417  003190  0100               	movlb	0	; () banked
 34418  003192  6FC9               	movwf	(fat_create_file@root_entry+11)& (0+255),b
 34419                           
 34420                           ; BSR set to: 0
 34421                           ;fat16.c: 353: root_entry.reserved1 = 0x00;
 34422  003194  0E00               	movlw	0
 34423  003196  6FCA               	movwf	(fat_create_file@root_entry+12)& (0+255),b
 34424                           
 34425                           ; BSR set to: 0
 34426                           ;fat16.c: 354: root_entry.secondFractions = 0x00;
 34427  003198  0E00               	movlw	0
 34428  00319A  6FCB               	movwf	(fat_create_file@root_entry+13)& (0+255),b
 34429                           
 34430                           ; BSR set to: 0
 34431                           ;fat16.c: 355: root_entry.createdTime = _get_time();
 34432  00319C  ECF9  F03F         	call	__get_time	;wreg free
 34433  0031A0  C001  F0CC         	movff	?__get_time,fat_create_file@root_entry+14
 34434  0031A4  C002  F0CD         	movff	?__get_time+1,fat_create_file@root_entry+15
 34435                           
 34436                           ;fat16.c: 356: root_entry.createdDate = _get_date();
 34437  0031A8  ECFE  F03F         	call	__get_date	;wreg free
 34438  0031AC  C001  F0CE         	movff	?__get_date,fat_create_file@root_entry+16
 34439  0031B0  C002  F0CF         	movff	?__get_date+1,fat_create_file@root_entry+17
 34440                           
 34441                           ;fat16.c: 357: root_entry.lastAccessDate = root_entry.createdDate;
 34442  0031B4  C0CE  F0D0         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+18
 34443  0031B8  C0CF  F0D1         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+19
 34444                           
 34445                           ;fat16.c: 358: root_entry.reserved2 = 0x00;
 34446  0031BC  0E00               	movlw	0
 34447  0031BE  0100               	movlb	0	; () banked
 34448  0031C0  6FD3               	movwf	(fat_create_file@root_entry+21)& (0+255),b
 34449  0031C2  0E00               	movlw	0
 34450  0031C4  6FD2               	movwf	(fat_create_file@root_entry+20)& (0+255),b
 34451                           
 34452                           ; BSR set to: 0
 34453                           ;fat16.c: 359: root_entry.modifiedTime = root_entry.createdTime;
 34454  0031C6  C0CC  F0D4         	movff	fat_create_file@root_entry+14,fat_create_file@root_entry+22
 34455  0031CA  C0CD  F0D5         	movff	fat_create_file@root_entry+15,fat_create_file@root_entry+23
 34456                           
 34457                           ; BSR set to: 0
 34458                           ;fat16.c: 360: root_entry.modifiedDate = root_entry.createdDate;
 34459  0031CE  C0CE  F0D6         	movff	fat_create_file@root_entry+16,fat_create_file@root_entry+24
 34460  0031D2  C0CF  F0D7         	movff	fat_create_file@root_entry+17,fat_create_file@root_entry+25
 34461                           
 34462                           ; BSR set to: 0
 34463                           ;fat16.c: 361: root_entry.firstCluster = cluster;
 34464  0031D6  C0BC  F0D8         	movff	fat_create_file@cluster,fat_create_file@root_entry+26
 34465  0031DA  C0BD  F0D9         	movff	fat_create_file@cluster+1,fat_create_file@root_entry+27
 34466                           
 34467                           ; BSR set to: 0
 34468                           ;fat16.c: 362: root_entry.fileSize = size;
 34469  0031DE  C048  F0DA         	movff	fat_create_file@size,fat_create_file@root_entry+28
 34470  0031E2  C049  F0DB         	movff	fat_create_file@size+1,fat_create_file@root_entry+29
 34471  0031E6  C04A  F0DC         	movff	fat_create_file@size+2,fat_create_file@root_entry+30
 34472  0031EA  C04B  F0DD         	movff	fat_create_file@size+3,fat_create_file@root_entry+31
 34473                           
 34474                           ;fat16.c: 365: _write_root(root_slot, &root_entry);
 34475  0031EE  0EBE               	movlw	low fat_create_file@root_entry
 34476  0031F0  6E29               	movwf	__write_root@data,c
 34477  0031F2  0E00               	movlw	high fat_create_file@root_entry
 34478  0031F4  6E2A               	movwf	__write_root@data+1,c
 34479  0031F6  51B9               	movf	fat_create_file@root_slot& (0+255),w,b
 34480  0031F8  EC66  F038         	call	__write_root
 34481                           
 34482                           ;fat16.c: 370: for(cluster_count=1; cluster_count<=number_of_clusters; ++cluster_count)
 34483  0031FC  0E00               	movlw	0
 34484  0031FE  0100               	movlb	0	; () banked
 34485  003200  6FB8               	movwf	(fat_create_file@cluster_count+1)& (0+255),b
 34486  003202  0E01               	movlw	1
 34487  003204  6FB7               	movwf	fat_create_file@cluster_count& (0+255),b
 34488  003206  D02F               	goto	l1956
 34489  003208                     
 34490                           ; BSR set to: 0
 34491                           ;fat16.c: 371: {;fat16.c: 373: if(cluster_count==number_of_clusters)
 34492                           
 34493                           ; BSR set to: 0
 34494  003208  51BA               	movf	fat_create_file@number_of_clusters& (0+255),w,b
 34495  00320A  19B7               	xorwf	fat_create_file@cluster_count& (0+255),w,b
 34496  00320C  E10E               	bnz	l11257
 34497  00320E  51BB               	movf	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34498  003210  19B8               	xorwf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34499  003212  A4D8               	btfss	status,2,c
 34500  003214  D00A               	goto	l1958
 34501                           
 34502                           ; BSR set to: 0
 34503                           ;fat16.c: 374: {;fat16.c: 376: _write_fat(cluster, 0xFFFF);
 34504  003216  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34505  00321A  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34506  00321E  0EFF               	movlw	255
 34507  003220  6E2C               	movwf	__write_fat@value+1,c
 34508  003222  682B               	setf	__write_fat@value,c
 34509  003224  ECCA  F03B         	call	__write_fat	;wreg free
 34510                           
 34511                           ;fat16.c: 377: }
 34512  003228  D01B               	goto	l1959
 34513  00322A                     l1958:
 34514  00322A                     l11257:
 34515                           
 34516                           ;fat16.c: 378: else;fat16.c: 379: {;fat16.c: 381: next_cluster = _get_empty_cluster(clus
      +                          ter+1);
 34517  00322A  0E01               	movlw	1
 34518  00322C  0100               	movlb	0	; () banked
 34519  00322E  25BC               	addwf	fat_create_file@cluster& (0+255),w,b
 34520  003230  6E30               	movwf	__get_empty_cluster@first_cluster,c
 34521  003232  0E00               	movlw	0
 34522  003234  21BD               	addwfc	(fat_create_file@cluster+1)& (0+255),w,b
 34523  003236  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 34524  003238  EC30  F034         	call	__get_empty_cluster	;wreg free
 34525  00323C  C030  F0B5         	movff	?__get_empty_cluster,fat_create_file@next_cluster
 34526  003240  C031  F0B6         	movff	?__get_empty_cluster+1,fat_create_file@next_cluster+1
 34527                           
 34528                           ;fat16.c: 383: _write_fat(cluster, next_cluster);
 34529  003244  C0BC  F029         	movff	fat_create_file@cluster,__write_fat@cluster
 34530  003248  C0BD  F02A         	movff	fat_create_file@cluster+1,__write_fat@cluster+1
 34531  00324C  C0B5  F02B         	movff	fat_create_file@next_cluster,__write_fat@value
 34532  003250  C0B6  F02C         	movff	fat_create_file@next_cluster+1,__write_fat@value+1
 34533  003254  ECCA  F03B         	call	__write_fat	;wreg free
 34534                           
 34535                           ;fat16.c: 385: cluster = next_cluster;
 34536  003258  C0B5  F0BC         	movff	fat_create_file@next_cluster,fat_create_file@cluster
 34537  00325C  C0B6  F0BD         	movff	fat_create_file@next_cluster+1,fat_create_file@cluster+1
 34538  003260                     l1959:
 34539  003260  0100               	movlb	0	; () banked
 34540  003262  4BB7               	infsnz	fat_create_file@cluster_count& (0+255),f,b
 34541  003264  2BB8               	incf	(fat_create_file@cluster_count+1)& (0+255),f,b
 34542  003266                     l1956:
 34543                           
 34544                           ; BSR set to: 0
 34545                           
 34546                           ; BSR set to: 0
 34547  003266  51B7               	movf	fat_create_file@cluster_count& (0+255),w,b
 34548  003268  5DBA               	subwf	fat_create_file@number_of_clusters& (0+255),w,b
 34549  00326A  51B8               	movf	(fat_create_file@cluster_count+1)& (0+255),w,b
 34550  00326C  59BB               	subwfb	(fat_create_file@number_of_clusters+1)& (0+255),w,b
 34551  00326E  A0D8               	btfss	status,0,c
 34552  003270  0012               	return	
 34553  003272  D7CA               	goto	l1957
 34554  003274                     __end_of_fat_create_file:
 34555                           	opt stack 0
 34556                           tosu	equ	0xFFF
 34557                           tosh	equ	0xFFE
 34558                           tosl	equ	0xFFD
 34559                           pclath	equ	0xFFA
 34560                           tblptru	equ	0xFF8
 34561                           tblptrh	equ	0xFF7
 34562                           tblptrl	equ	0xFF6
 34563                           tablat	equ	0xFF5
 34564                           prodh	equ	0xFF4
 34565                           prodl	equ	0xFF3
 34566                           intcon	equ	0xFF2
 34567                           intcon2	equ	0xFF1
 34568                           intcon3	equ	0xFF0
 34569                           indf0	equ	0xFEF
 34570                           postinc0	equ	0xFEE
 34571                           fsr0h	equ	0xFEA
 34572                           fsr0l	equ	0xFE9
 34573                           wreg	equ	0xFE8
 34574                           indf1	equ	0xFE7
 34575                           postdec1	equ	0xFE5
 34576                           plusw1	equ	0xFE3
 34577                           fsr1h	equ	0xFE2
 34578                           fsr1l	equ	0xFE1
 34579                           indf2	equ	0xFDF
 34580                           postinc2	equ	0xFDE
 34581                           postdec2	equ	0xFDD
 34582                           plusw2	equ	0xFDB
 34583                           fsr2h	equ	0xFDA
 34584                           fsr2l	equ	0xFD9
 34585                           status	equ	0xFD8
 34586                           
 34587 ;; *************** function _memcpy *****************
 34588 ;; Defined at:
 34589 ;;		line 27 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\memcpy.c"
 34590 ;; Parameters:    Size  Location     Type
 34591 ;;  d1              2    0[COMRAM] PTR void 
 34592 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34593 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34594 ;;  s1              3    2[COMRAM] PTR const void 
 34595 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34596 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34597 ;;  n               2    5[COMRAM] unsigned int 
 34598 ;; Auto vars:     Size  Location     Type
 34599 ;;  s               3    7[COMRAM] PTR const unsigned char 
 34600 ;;		 -> _spi_external_rx_buffer(64), ROM(36863), flash_command_pagesize_528(4), flash_command_pagesize_512(4), 
 34601 ;;		 -> inq_resp(36), CtrlTrfData(8), RAM(3759), SetupPkt(8), 
 34602 ;;  d               2   10[COMRAM] PTR unsigned char 
 34603 ;;		 -> _spi_external_tx_buffer(64), pageBuffer(1024), _bootloader_verify_program_memory@buffer(16), fat_create_file@roo
      +t_entry(32), 
 34604 ;;		 -> _flash_set_page_size@command(4), msd_buffer(512), RAM(3759), SetupPkt(8), 
 34605 ;;  tmp             1   12[COMRAM] unsigned char 
 34606 ;; Return value:  Size  Location     Type
 34607 ;;                  2    0[COMRAM] PTR void 
 34608 ;; Registers used:
 34609 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 34610 ;; Tracked objects:
 34611 ;;		On entry : 0/0
 34612 ;;		On exit  : 0/0
 34613 ;;		Unchanged: 0/0
 34614 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34615 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34616 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34617 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34618 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34619 ;;Total ram usage:       13 bytes
 34620 ;; Hardware stack levels used:    1
 34621 ;; This function calls:
 34622 ;;		Nothing
 34623 ;; This function is called by:
 34624 ;;		_USBCtrlEPService
 34625 ;;		_MSDProcessCommandMediaPresent
 34626 ;;		__flash_set_page_size
 34627 ;;		_fat_create_file
 34628 ;;		_internalFlash_read
 34629 ;;		_api_prepare
 34630 ;; This function uses a non-reentrant model
 34631 ;;
 34632                           
 34633                           	psect	text174
 34634  006D7C                     __ptext174:
 34635                           	opt stack 0
 34636  006D7C                     _memcpy:
 34637                           	opt stack 27
 34638                           
 34639                           ;incstack = 0
 34640  006D7C  C003  F008         	movff	memcpy@s1,memcpy@s
 34641  006D80  C004  F009         	movff	memcpy@s1+1,memcpy@s+1
 34642  006D84  C005  F00A         	movff	memcpy@s1+2,memcpy@s+2
 34643  006D88  C001  F00B         	movff	memcpy@d1,memcpy@d
 34644  006D8C  C002  F00C         	movff	memcpy@d1+1,memcpy@d+1
 34645  006D90  D01F               	goto	l3485
 34646  006D92                     l10343:
 34647  006D92  C008  FFF6         	movff	memcpy@s,tblptrl
 34648  006D96  C009  FFF7         	movff	memcpy@s+1,tblptrh
 34649  006D9A  C00A  FFF8         	movff	memcpy@s+2,tblptru
 34650  006D9E  BAF8               	btfsc	tblptru,5,c
 34651  006DA0  D003               	bra	u7127
 34652  006DA2  0008               	tblrd		*
 34653  006DA4  50F5               	movf	tablat,w,c
 34654  006DA6  D005               	bra	u7120
 34655  006DA8                     u7127:
 34656  006DA8  CFF6 FFE9          	movff	tblptrl,fsr0l
 34657  006DAC  CFF7 FFEA          	movff	tblptrh,fsr0h
 34658  006DB0  50EF               	movf	indf0,w,c
 34659  006DB2                     u7120:
 34660  006DB2  6E0D               	movwf	memcpy@tmp,c
 34661  006DB4  0E01               	movlw	1
 34662  006DB6  2608               	addwf	memcpy@s,f,c
 34663  006DB8  0E00               	movlw	0
 34664  006DBA  2209               	addwfc	memcpy@s+1,f,c
 34665  006DBC  0E00               	movlw	0
 34666  006DBE  220A               	addwfc	memcpy@s+2,f,c
 34667  006DC0  C00B  FFD9         	movff	memcpy@d,fsr2l
 34668  006DC4  C00C  FFDA         	movff	memcpy@d+1,fsr2h
 34669  006DC8  C00D  FFDF         	movff	memcpy@tmp,indf2
 34670  006DCC  4A0B               	infsnz	memcpy@d,f,c
 34671  006DCE  2A0C               	incf	memcpy@d+1,f,c
 34672  006DD0                     l3485:
 34673  006DD0  0606               	decf	memcpy@n,f,c
 34674  006DD2  A0D8               	btfss	status,0,c
 34675  006DD4  0607               	decf	memcpy@n+1,f,c
 34676  006DD6  2806               	incf	memcpy@n,w,c
 34677  006DD8  E1DC               	bnz	l10343
 34678  006DDA  2807               	incf	memcpy@n+1,w,c
 34679  006DDC  B4D8               	btfsc	status,2,c
 34680  006DDE  0012               	return	
 34681  006DE0  D7D8               	goto	l3486
 34682  006DE2                     __end_of_memcpy:
 34683                           	opt stack 0
 34684                           tosu	equ	0xFFF
 34685                           tosh	equ	0xFFE
 34686                           tosl	equ	0xFFD
 34687                           pclath	equ	0xFFA
 34688                           tblptru	equ	0xFF8
 34689                           tblptrh	equ	0xFF7
 34690                           tblptrl	equ	0xFF6
 34691                           tablat	equ	0xFF5
 34692                           prodh	equ	0xFF4
 34693                           prodl	equ	0xFF3
 34694                           intcon	equ	0xFF2
 34695                           intcon2	equ	0xFF1
 34696                           intcon3	equ	0xFF0
 34697                           indf0	equ	0xFEF
 34698                           postinc0	equ	0xFEE
 34699                           fsr0h	equ	0xFEA
 34700                           fsr0l	equ	0xFE9
 34701                           wreg	equ	0xFE8
 34702                           indf1	equ	0xFE7
 34703                           postdec1	equ	0xFE5
 34704                           plusw1	equ	0xFE3
 34705                           fsr1h	equ	0xFE2
 34706                           fsr1l	equ	0xFE1
 34707                           indf2	equ	0xFDF
 34708                           postinc2	equ	0xFDE
 34709                           postdec2	equ	0xFDD
 34710                           plusw2	equ	0xFDB
 34711                           fsr2h	equ	0xFDA
 34712                           fsr2l	equ	0xFD9
 34713                           status	equ	0xFD8
 34714                           
 34715 ;; *************** function _fat_get_empty_clusters *****************
 34716 ;; Defined at:
 34717 ;;		line 130 in file "fat16.c"
 34718 ;; Parameters:    Size  Location     Type
 34719 ;;  maximum         2   47[COMRAM] unsigned int 
 34720 ;; Auto vars:     Size  Location     Type
 34721 ;;  cluster         2   57[COMRAM] unsigned int 
 34722 ;;  empty_cluste    2   55[COMRAM] unsigned int 
 34723 ;;  value           2   53[COMRAM] unsigned int 
 34724 ;;  offset          2   51[COMRAM] unsigned int 
 34725 ;;  fat_sector      2   49[COMRAM] unsigned int 
 34726 ;; Return value:  Size  Location     Type
 34727 ;;                  2   47[COMRAM] unsigned int 
 34728 ;; Registers used:
 34729 ;;		wreg, status,2, status,0, cstack
 34730 ;; Tracked objects:
 34731 ;;		On entry : 0/0
 34732 ;;		On exit  : 0/0
 34733 ;;		Unchanged: 0/0
 34734 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34735 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34736 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34737 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34738 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34739 ;;Total ram usage:       12 bytes
 34740 ;; Hardware stack levels used:    1
 34741 ;; Hardware stack levels required when called:    5
 34742 ;; This function calls:
 34743 ;;		_flash_partial_read
 34744 ;; This function is called by:
 34745 ;;		_fat_create_file
 34746 ;; This function uses a non-reentrant model
 34747 ;;
 34748                           
 34749                           	psect	text175
 34750  00625E                     __ptext175:
 34751                           	opt stack 0
 34752  00625E                     _fat_get_empty_clusters:
 34753                           	opt stack 21
 34754                           
 34755                           ;fat16.c: 132: uint16_t empty_clusters = 0;
 34756                           
 34757                           ;incstack = 0
 34758  00625E  0E00               	movlw	0
 34759  006260  6E39               	movwf	fat_get_empty_clusters@empty_clusters+1,c
 34760  006262  0E00               	movlw	0
 34761  006264  6E38               	movwf	fat_get_empty_clusters@empty_clusters,c
 34762                           
 34763                           ;fat16.c: 133: uint16_t cluster;;fat16.c: 134: uint16_t fat_sector;;fat16.c: 135: uint16
      +                          _t offset;;fat16.c: 136: uint16_t value;;fat16.c: 139: for(cluster=2; cluster<(8154+2); 
      +                          ++cluster)
 34764  006266  0E00               	movlw	0
 34765  006268  6E3B               	movwf	fat_get_empty_clusters@cluster+1,c
 34766  00626A  0E02               	movlw	2
 34767  00626C  6E3A               	movwf	fat_get_empty_clusters@cluster,c
 34768  00626E  D033               	goto	l10625
 34769  006270                     
 34770                           ;fat16.c: 140: {;fat16.c: 141: fat_sector = cluster>>8;
 34771  006270  503B               	movf	fat_get_empty_clusters@cluster+1,w,c
 34772  006272  6E32               	movwf	fat_get_empty_clusters@fat_sector,c
 34773  006274  6A33               	clrf	fat_get_empty_clusters@fat_sector+1,c
 34774                           
 34775                           ;fat16.c: 142: fat_sector += 2;
 34776  006276  0E02               	movlw	2
 34777  006278  2632               	addwf	fat_get_empty_clusters@fat_sector,f,c
 34778  00627A  0E00               	movlw	0
 34779  00627C  2233               	addwfc	fat_get_empty_clusters@fat_sector+1,f,c
 34780                           
 34781                           ;fat16.c: 143: offset = cluster & 0xFF;
 34782  00627E  503A               	movf	fat_get_empty_clusters@cluster,w,c
 34783  006280  6E34               	movwf	fat_get_empty_clusters@offset,c
 34784  006282  6A35               	clrf	fat_get_empty_clusters@offset+1,c
 34785                           
 34786                           ;fat16.c: 144: offset <<= 1;
 34787  006284  90D8               	bcf	status,0,c
 34788  006286  3634               	rlcf	fat_get_empty_clusters@offset,f,c
 34789  006288  3635               	rlcf	fat_get_empty_clusters@offset+1,f,c
 34790                           
 34791                           ;fat16.c: 145: flash_partial_read(fat_sector, offset, 2, &value);
 34792  00628A  C032  F028         	movff	fat_get_empty_clusters@fat_sector,flash_partial_read@page
 34793  00628E  C033  F029         	movff	fat_get_empty_clusters@fat_sector+1,flash_partial_read@page+1
 34794  006292  C034  F02A         	movff	fat_get_empty_clusters@offset,flash_partial_read@start
 34795  006296  C035  F02B         	movff	fat_get_empty_clusters@offset+1,flash_partial_read@start+1
 34796  00629A  0E00               	movlw	0
 34797  00629C  6E2D               	movwf	flash_partial_read@length+1,c
 34798  00629E  0E02               	movlw	2
 34799  0062A0  6E2C               	movwf	flash_partial_read@length,c
 34800  0062A2  0E36               	movlw	low fat_get_empty_clusters@value
 34801  0062A4  6E2E               	movwf	flash_partial_read@data,c
 34802  0062A6  0E00               	movlw	high fat_get_empty_clusters@value
 34803  0062A8  6E2F               	movwf	flash_partial_read@data+1,c
 34804  0062AA  EC66  F03D         	call	_flash_partial_read	;wreg free
 34805                           
 34806                           ;fat16.c: 146: if(value==0x0000)
 34807  0062AE  5036               	movf	fat_get_empty_clusters@value,w,c
 34808  0062B0  1037               	iorwf	fat_get_empty_clusters@value+1,w,c
 34809  0062B2  A4D8               	btfss	status,2,c
 34810  0062B4  D00E               	goto	l1911
 34811                           
 34812                           ;fat16.c: 147: {;fat16.c: 148: ++empty_clusters;
 34813  0062B6  4A38               	infsnz	fat_get_empty_clusters@empty_clusters,f,c
 34814  0062B8  2A39               	incf	fat_get_empty_clusters@empty_clusters+1,f,c
 34815                           
 34816                           ;fat16.c: 149: if(empty_clusters==maximum)
 34817  0062BA  5030               	movf	fat_get_empty_clusters@maximum,w,c
 34818  0062BC  1838               	xorwf	fat_get_empty_clusters@empty_clusters,w,c
 34819  0062BE  E109               	bnz	l10623
 34820  0062C0  5031               	movf	fat_get_empty_clusters@maximum+1,w,c
 34821  0062C2  1839               	xorwf	fat_get_empty_clusters@empty_clusters+1,w,c
 34822  0062C4  A4D8               	btfss	status,2,c
 34823  0062C6  D005               	goto	l1911
 34824                           
 34825                           ;fat16.c: 150: {;fat16.c: 151: return empty_clusters;
 34826  0062C8  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34827  0062CC  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34828  0062D0  0012               	return	
 34829  0062D2                     l1911:
 34830  0062D2                     l10623:
 34831  0062D2  4A3A               	infsnz	fat_get_empty_clusters@cluster,f,c
 34832  0062D4  2A3B               	incf	fat_get_empty_clusters@cluster+1,f,c
 34833  0062D6                     l10625:
 34834  0062D6  0EDC               	movlw	220
 34835  0062D8  5C3A               	subwf	fat_get_empty_clusters@cluster,w,c
 34836  0062DA  0E1F               	movlw	31
 34837  0062DC  583B               	subwfb	fat_get_empty_clusters@cluster+1,w,c
 34838  0062DE  A0D8               	btfss	status,0,c
 34839  0062E0  D7C7               	goto	l1908
 34840                           
 34841                           ;fat16.c: 152: };fat16.c: 153: };fat16.c: 154: };fat16.c: 155: return empty_clusters;
 34842  0062E2  C038  F030         	movff	fat_get_empty_clusters@empty_clusters,?_fat_get_empty_clusters
 34843  0062E6  C039  F031         	movff	fat_get_empty_clusters@empty_clusters+1,?_fat_get_empty_clusters+1
 34844  0062EA  0012               	return		;funcret
 34845  0062EC                     __end_of_fat_get_empty_clusters:
 34846                           	opt stack 0
 34847                           tosu	equ	0xFFF
 34848                           tosh	equ	0xFFE
 34849                           tosl	equ	0xFFD
 34850                           pclath	equ	0xFFA
 34851                           tblptru	equ	0xFF8
 34852                           tblptrh	equ	0xFF7
 34853                           tblptrl	equ	0xFF6
 34854                           tablat	equ	0xFF5
 34855                           prodh	equ	0xFF4
 34856                           prodl	equ	0xFF3
 34857                           intcon	equ	0xFF2
 34858                           intcon2	equ	0xFF1
 34859                           intcon3	equ	0xFF0
 34860                           indf0	equ	0xFEF
 34861                           postinc0	equ	0xFEE
 34862                           fsr0h	equ	0xFEA
 34863                           fsr0l	equ	0xFE9
 34864                           wreg	equ	0xFE8
 34865                           indf1	equ	0xFE7
 34866                           postdec1	equ	0xFE5
 34867                           plusw1	equ	0xFE3
 34868                           fsr1h	equ	0xFE2
 34869                           fsr1l	equ	0xFE1
 34870                           indf2	equ	0xFDF
 34871                           postinc2	equ	0xFDE
 34872                           postdec2	equ	0xFDD
 34873                           plusw2	equ	0xFDB
 34874                           fsr2h	equ	0xFDA
 34875                           fsr2l	equ	0xFD9
 34876                           status	equ	0xFD8
 34877                           
 34878 ;; *************** function _fat_find_file *****************
 34879 ;; Defined at:
 34880 ;;		line 250 in file "fat16.c"
 34881 ;; Parameters:    Size  Location     Type
 34882 ;;  name            2   47[COMRAM] PTR unsigned char 
 34883 ;;		 -> _spi_external_rx_buffer(64), bootloader_filename(9), RAM(3759), 
 34884 ;;  extension       2   49[COMRAM] PTR unsigned char 
 34885 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), RAM(3759), 
 34886 ;; Auto vars:     Size  Location     Type
 34887 ;;  buffer         11   51[COMRAM] unsigned char [11]
 34888 ;;  offset          2   65[COMRAM] unsigned int 
 34889 ;;  sector          2   63[COMRAM] unsigned int 
 34890 ;;  slot            1   62[COMRAM] unsigned char 
 34891 ;; Return value:  Size  Location     Type
 34892 ;;                  1    wreg      unsigned char 
 34893 ;; Registers used:
 34894 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 34895 ;; Tracked objects:
 34896 ;;		On entry : 0/0
 34897 ;;		On exit  : 0/0
 34898 ;;		Unchanged: 0/0
 34899 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 34900 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34901 ;;      Locals:        16       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34902 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34903 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 34904 ;;Total ram usage:       20 bytes
 34905 ;; Hardware stack levels used:    1
 34906 ;; Hardware stack levels required when called:    5
 34907 ;; This function calls:
 34908 ;;		_flash_partial_read
 34909 ;;		_strncmp
 34910 ;; This function is called by:
 34911 ;;		_fat_create_file
 34912 ;;		__bootloader_find_file
 34913 ;;		__fill_buffer_find_file
 34914 ;; This function uses a non-reentrant model
 34915 ;;
 34916                           
 34917                           	psect	text176
 34918  0055A2                     __ptext176:
 34919                           	opt stack 0
 34920  0055A2                     _fat_find_file:
 34921                           	opt stack 23
 34922                           
 34923                           ;fat16.c: 252: uint8_t slot;;fat16.c: 253: uint16_t sector;;fat16.c: 254: uint16_t offse
      +                          t;;fat16.c: 255: uint8_t buffer[11];;fat16.c: 256: slot = 0;
 34924                           
 34925                           ;incstack = 0
 34926  0055A2  0E00               	movlw	0
 34927  0055A4  6E3F               	movwf	fat_find_file@slot,c
 34928                           
 34929                           ;fat16.c: 257: for(sector = 34; sector <= 37; ++sector)
 34930  0055A6  0E00               	movlw	0
 34931  0055A8  6E41               	movwf	fat_find_file@sector+1,c
 34932  0055AA  0E22               	movlw	34
 34933  0055AC  6E40               	movwf	fat_find_file@sector,c
 34934  0055AE                     l10671:
 34935  0055AE  5041               	movf	fat_find_file@sector+1,w,c
 34936  0055B0  E156               	bnz	l10713
 34937  0055B2  0E26               	movlw	38
 34938  0055B4  5C40               	subwf	fat_find_file@sector,w,c
 34939  0055B6  B0D8               	btfsc	status,0,c
 34940  0055B8  D052               	goto	u7740
 34941                           
 34942                           ;fat16.c: 258: {;fat16.c: 259: for(offset = 0; offset<512; offset += 32)
 34943  0055BA  0E00               	movlw	0
 34944  0055BC  6E43               	movwf	fat_find_file@offset+1,c
 34945  0055BE  0E00               	movlw	0
 34946  0055C0  6E42               	movwf	fat_find_file@offset,c
 34947  0055C2                     l10677:
 34948  0055C2  0E02               	movlw	2
 34949  0055C4  5C43               	subwf	fat_find_file@offset+1,w,c
 34950  0055C6  B0D8               	btfsc	status,0,c
 34951  0055C8  D047               	goto	u7730
 34952                           
 34953                           ;fat16.c: 260: {;fat16.c: 261: flash_partial_read(sector, offset, 11, &buffer);
 34954  0055CA  C040  F028         	movff	fat_find_file@sector,flash_partial_read@page
 34955  0055CE  C041  F029         	movff	fat_find_file@sector+1,flash_partial_read@page+1
 34956  0055D2  C042  F02A         	movff	fat_find_file@offset,flash_partial_read@start
 34957  0055D6  C043  F02B         	movff	fat_find_file@offset+1,flash_partial_read@start+1
 34958  0055DA  0E00               	movlw	0
 34959  0055DC  6E2D               	movwf	flash_partial_read@length+1,c
 34960  0055DE  0E0B               	movlw	11
 34961  0055E0  6E2C               	movwf	flash_partial_read@length,c
 34962  0055E2  0E34               	movlw	low fat_find_file@buffer
 34963  0055E4  6E2E               	movwf	flash_partial_read@data,c
 34964  0055E6  0E00               	movlw	high fat_find_file@buffer
 34965  0055E8  6E2F               	movwf	flash_partial_read@data+1,c
 34966  0055EA  EC66  F03D         	call	_flash_partial_read	;wreg free
 34967                           
 34968                           ;fat16.c: 262: if(buffer[0]==0x00)
 34969  0055EE  5034               	movf	fat_find_file@buffer,w,c
 34970  0055F0  A4D8               	btfss	status,2,c
 34971  0055F2  D002               	goto	l1940
 34972                           
 34973                           ;fat16.c: 263: {;fat16.c: 266: return 0xFF;
 34974  0055F4  0EFF               	movlw	255
 34975  0055F6  0012               	return	
 34976  0055F8                     l1940:
 34977                           
 34978                           ;fat16.c: 268: else if(buffer[0]==0xE5)
 34979  0055F8  0EE5               	movlw	229
 34980  0055FA  1834               	xorwf	fat_find_file@buffer,w,c
 34981  0055FC  B4D8               	btfsc	status,2,c
 34982  0055FE  D026               	goto	l1946
 34983                           
 34984                           ;fat16.c: 274: else;fat16.c: 275: {;fat16.c: 277: if(strncmp(name, &buffer[0], 8) == 0)
 34985                           
 34986                           ;fat16.c: 269: {;fat16.c: 273: }
 34987  005600  C030  F001         	movff	fat_find_file@name,strncmp@s1
 34988  005604  C031  F002         	movff	fat_find_file@name+1,strncmp@s1+1
 34989  005608  0E34               	movlw	low fat_find_file@buffer
 34990  00560A  6E03               	movwf	strncmp@s2,c
 34991  00560C  0E00               	movlw	high fat_find_file@buffer
 34992  00560E  6E04               	movwf	strncmp@s2+1,c
 34993  005610  0E00               	movlw	0
 34994  005612  6E06               	movwf	strncmp@len+1,c
 34995  005614  0E08               	movlw	8
 34996  005616  6E05               	movwf	strncmp@len,c
 34997  005618  EC70  F02A         	call	_strncmp	;wreg free
 34998  00561C  5001               	movf	?_strncmp,w,c
 34999  00561E  1002               	iorwf	?_strncmp+1,w,c
 35000  005620  A4D8               	btfss	status,2,c
 35001  005622  D014               	goto	l1946
 35002                           
 35003                           ;fat16.c: 278: {;fat16.c: 280: if(strncmp(extension, &buffer[8], 3) == 0)
 35004  005624  C032  F001         	movff	fat_find_file@extension,strncmp@s1
 35005  005628  C033  F002         	movff	fat_find_file@extension+1,strncmp@s1+1
 35006  00562C  0E3C               	movlw	low (fat_find_file@buffer+8)
 35007  00562E  6E03               	movwf	strncmp@s2,c
 35008  005630  0E00               	movlw	high (fat_find_file@buffer+8)
 35009  005632  6E04               	movwf	strncmp@s2+1,c
 35010  005634  0E00               	movlw	0
 35011  005636  6E06               	movwf	strncmp@len+1,c
 35012  005638  0E03               	movlw	3
 35013  00563A  6E05               	movwf	strncmp@len,c
 35014  00563C  EC70  F02A         	call	_strncmp	;wreg free
 35015  005640  5001               	movf	?_strncmp,w,c
 35016  005642  1002               	iorwf	?_strncmp+1,w,c
 35017  005644  A4D8               	btfss	status,2,c
 35018  005646  D002               	goto	l1946
 35019                           
 35020                           ;fat16.c: 281: {;fat16.c: 284: return slot;
 35021  005648  503F               	movf	fat_find_file@slot,w,c
 35022  00564A  0012               	return	
 35023  00564C                     l1946:
 35024                           
 35025                           ;fat16.c: 285: };fat16.c: 286: };fat16.c: 287: };fat16.c: 288: ++slot;
 35026  00564C  2A3F               	incf	fat_find_file@slot,f,c
 35027  00564E  0E20               	movlw	32
 35028  005650  2642               	addwf	fat_find_file@offset,f,c
 35029  005652  0E00               	movlw	0
 35030  005654  2243               	addwfc	fat_find_file@offset+1,f,c
 35031  005656  D7B5               	goto	l10677
 35032  005658                     u7730:
 35033  005658  4A40               	infsnz	fat_find_file@sector,f,c
 35034  00565A  2A41               	incf	fat_find_file@sector+1,f,c
 35035  00565C  D7A8               	goto	l10671
 35036  00565E                     u7740:
 35037  00565E                     l10713:
 35038                           
 35039                           ;fat16.c: 289: };fat16.c: 290: };fat16.c: 291: return 0xFF;
 35040  00565E  0EFF               	movlw	255
 35041  005660  0012               	return	
 35042  005662                     __end_of_fat_find_file:
 35043                           	opt stack 0
 35044                           tosu	equ	0xFFF
 35045                           tosh	equ	0xFFE
 35046                           tosl	equ	0xFFD
 35047                           pclath	equ	0xFFA
 35048                           tblptru	equ	0xFF8
 35049                           tblptrh	equ	0xFF7
 35050                           tblptrl	equ	0xFF6
 35051                           tablat	equ	0xFF5
 35052                           prodh	equ	0xFF4
 35053                           prodl	equ	0xFF3
 35054                           intcon	equ	0xFF2
 35055                           intcon2	equ	0xFF1
 35056                           intcon3	equ	0xFF0
 35057                           indf0	equ	0xFEF
 35058                           postinc0	equ	0xFEE
 35059                           fsr0h	equ	0xFEA
 35060                           fsr0l	equ	0xFE9
 35061                           wreg	equ	0xFE8
 35062                           indf1	equ	0xFE7
 35063                           postdec1	equ	0xFE5
 35064                           plusw1	equ	0xFE3
 35065                           fsr1h	equ	0xFE2
 35066                           fsr1l	equ	0xFE1
 35067                           indf2	equ	0xFDF
 35068                           postinc2	equ	0xFDE
 35069                           postdec2	equ	0xFDD
 35070                           plusw2	equ	0xFDB
 35071                           fsr2h	equ	0xFDA
 35072                           fsr2l	equ	0xFD9
 35073                           status	equ	0xFD8
 35074                           
 35075 ;; *************** function _strncmp *****************
 35076 ;; Defined at:
 35077 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\strncmp.c"
 35078 ;; Parameters:    Size  Location     Type
 35079 ;;  s1              2    0[COMRAM] PTR const unsigned char 
 35080 ;;		 -> _spi_external_rx_buffer(64), bootloader_extension(4), bootloader_filename(9), RAM(3759), 
 35081 ;;  s2              2    2[COMRAM] PTR const unsigned char 
 35082 ;;		 -> fat_find_file@buffer(11), 
 35083 ;;  len             2    4[COMRAM] unsigned int 
 35084 ;; Auto vars:     Size  Location     Type
 35085 ;;		None
 35086 ;; Return value:  Size  Location     Type
 35087 ;;                  2    0[COMRAM] int 
 35088 ;; Registers used:
 35089 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 35090 ;; Tracked objects:
 35091 ;;		On entry : 0/0
 35092 ;;		On exit  : 0/0
 35093 ;;		Unchanged: 0/0
 35094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35095 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35096 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35097 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35098 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35099 ;;Total ram usage:        9 bytes
 35100 ;; Hardware stack levels used:    1
 35101 ;; This function calls:
 35102 ;;		Nothing
 35103 ;; This function is called by:
 35104 ;;		_fat_find_file
 35105 ;; This function uses a non-reentrant model
 35106 ;;
 35107                           
 35108                           	psect	text177
 35109  0054E0                     __ptext177:
 35110                           	opt stack 0
 35111  0054E0                     _strncmp:
 35112                           	opt stack 27
 35113                           
 35114                           ;incstack = 0
 35115  0054E0  D053               	goto	l3503
 35116  0054E2                     l10207:
 35117  0054E2  C001  FFF6         	movff	strncmp@s1,tblptrl
 35118  0054E6  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35119  0054EA  6AF8               	clrf	tblptru,c
 35120  0054EC  0E0E               	movlw	(high __ramtop+-1)
 35121  0054EE  64F7               	cpfsgt	tblptrh,c
 35122  0054F0  D003               	bra	u6927
 35123  0054F2  0008               	tblrd		*
 35124  0054F4  50F5               	movf	tablat,w,c
 35125  0054F6  D005               	bra	u6920
 35126  0054F8                     u6927:
 35127  0054F8  CFF6 FFE9          	movff	tblptrl,fsr0l
 35128  0054FC  CFF7 FFEA          	movff	tblptrh,fsr0h
 35129  005500  50EF               	movf	indf0,w,c
 35130  005502                     u6920:
 35131  005502  0900               	iorlw	0
 35132  005504  B4D8               	btfsc	status,2,c
 35133  005506  D019               	goto	u6940
 35134  005508  C003  FFD9         	movff	strncmp@s2,fsr2l
 35135  00550C  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35136  005510  50DF               	movf	indf2,w,c
 35137  005512  6E07               	movwf	??_strncmp& (0+255),c
 35138  005514  C001  FFF6         	movff	strncmp@s1,tblptrl
 35139  005518  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35140  00551C  6AF8               	clrf	tblptru,c
 35141  00551E  0E0E               	movlw	(high __ramtop+-1)
 35142  005520  64F7               	cpfsgt	tblptrh,c
 35143  005522  D003               	bra	u6947
 35144  005524  0008               	tblrd		*
 35145  005526  50F5               	movf	tablat,w,c
 35146  005528  D005               	bra	u6945
 35147  00552A                     u6947:
 35148  00552A  CFF6 FFE9          	movff	tblptrl,fsr0l
 35149  00552E  CFF7 FFEA          	movff	tblptrh,fsr0h
 35150  005532  50EF               	movf	indf0,w,c
 35151  005534                     u6945:
 35152  005534  1807               	xorwf	??_strncmp,w,c
 35153  005536  B4D8               	btfsc	status,2,c
 35154  005538  D023               	goto	l3505
 35155  00553A                     u6940:
 35156  00553A  C003  FFD9         	movff	strncmp@s2,fsr2l
 35157  00553E  C004  FFDA         	movff	strncmp@s2+1,fsr2h
 35158  005542  50DF               	movf	indf2,w,c
 35159  005544  6E07               	movwf	??_strncmp& (0+255),c
 35160  005546  6A08               	clrf	(??_strncmp+1)& (0+255),c
 35161  005548  1E07               	comf	??_strncmp,f,c
 35162  00554A  1E08               	comf	??_strncmp+1,f,c
 35163  00554C  4A07               	infsnz	??_strncmp,f,c
 35164  00554E  2A08               	incf	??_strncmp+1,f,c
 35165  005550  C001  FFF6         	movff	strncmp@s1,tblptrl
 35166  005554  C002  FFF7         	movff	strncmp@s1+1,tblptrh
 35167  005558  6AF8               	clrf	tblptru,c
 35168  00555A  0E0E               	movlw	(high __ramtop+-1)
 35169  00555C  64F7               	cpfsgt	tblptrh,c
 35170  00555E  D003               	bra	u6957
 35171  005560  0008               	tblrd		*
 35172  005562  50F5               	movf	tablat,w,c
 35173  005564  D005               	bra	u6950
 35174  005566                     u6957:
 35175  005566  CFF6 FFE9          	movff	tblptrl,fsr0l
 35176  00556A  CFF7 FFEA          	movff	tblptrh,fsr0h
 35177  00556E  50EF               	movf	indf0,w,c
 35178  005570                     u6950:
 35179  005570  6E09               	movwf	(??_strncmp+2)& (0+255),c
 35180  005572  5009               	movf	??_strncmp+2,w,c
 35181  005574  2407               	addwf	??_strncmp,w,c
 35182  005576  6E01               	movwf	?_strncmp,c
 35183  005578  0E00               	movlw	0
 35184  00557A  2008               	addwfc	??_strncmp+1,w,c
 35185  00557C  6E02               	movwf	?_strncmp+1,c
 35186  00557E  0012               	return	
 35187  005580                     l3505:
 35188  005580  4A01               	infsnz	strncmp@s1,f,c
 35189  005582  2A02               	incf	strncmp@s1+1,f,c
 35190  005584  4A03               	infsnz	strncmp@s2,f,c
 35191  005586  2A04               	incf	strncmp@s2+1,f,c
 35192  005588                     l3503:
 35193  005588  0605               	decf	strncmp@len,f,c
 35194  00558A  A0D8               	btfss	status,0,c
 35195  00558C  0606               	decf	strncmp@len+1,f,c
 35196  00558E  2805               	incf	strncmp@len,w,c
 35197  005590  E1A8               	bnz	l10207
 35198  005592  2806               	incf	strncmp@len+1,w,c
 35199  005594  A4D8               	btfss	status,2,c
 35200  005596  D7A5               	goto	l3504
 35201  005598  0E00               	movlw	0
 35202  00559A  6E02               	movwf	?_strncmp+1,c
 35203  00559C  0E00               	movlw	0
 35204  00559E  6E01               	movwf	?_strncmp,c
 35205  0055A0  0012               	return	
 35206  0055A2                     __end_of_strncmp:
 35207                           	opt stack 0
 35208                           tosu	equ	0xFFF
 35209                           tosh	equ	0xFFE
 35210                           tosl	equ	0xFFD
 35211                           pclath	equ	0xFFA
 35212                           tblptru	equ	0xFF8
 35213                           tblptrh	equ	0xFF7
 35214                           tblptrl	equ	0xFF6
 35215                           tablat	equ	0xFF5
 35216                           prodh	equ	0xFF4
 35217                           prodl	equ	0xFF3
 35218                           intcon	equ	0xFF2
 35219                           intcon2	equ	0xFF1
 35220                           intcon3	equ	0xFF0
 35221                           indf0	equ	0xFEF
 35222                           postinc0	equ	0xFEE
 35223                           fsr0h	equ	0xFEA
 35224                           fsr0l	equ	0xFE9
 35225                           wreg	equ	0xFE8
 35226                           indf1	equ	0xFE7
 35227                           postdec1	equ	0xFE5
 35228                           plusw1	equ	0xFE3
 35229                           fsr1h	equ	0xFE2
 35230                           fsr1l	equ	0xFE1
 35231                           indf2	equ	0xFDF
 35232                           postinc2	equ	0xFDE
 35233                           postdec2	equ	0xFDD
 35234                           plusw2	equ	0xFDB
 35235                           fsr2h	equ	0xFDA
 35236                           fsr2l	equ	0xFD9
 35237                           status	equ	0xFD8
 35238                           
 35239 ;; *************** function __get_available_root_entry *****************
 35240 ;; Defined at:
 35241 ;;		line 94 in file "fat16.c"
 35242 ;; Parameters:    Size  Location     Type
 35243 ;;		None
 35244 ;; Auto vars:     Size  Location     Type
 35245 ;;  file_number     1   54[COMRAM] unsigned char 
 35246 ;; Return value:  Size  Location     Type
 35247 ;;                  1    wreg      unsigned char 
 35248 ;; Registers used:
 35249 ;;		wreg, status,2, status,0, cstack
 35250 ;; Tracked objects:
 35251 ;;		On entry : 0/0
 35252 ;;		On exit  : 0/0
 35253 ;;		Unchanged: 0/0
 35254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35255 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35256 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35257 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35258 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35259 ;;Total ram usage:        1 bytes
 35260 ;; Hardware stack levels used:    1
 35261 ;; Hardware stack levels required when called:    6
 35262 ;; This function calls:
 35263 ;;		__root_is_available
 35264 ;; This function is called by:
 35265 ;;		_fat_create_file
 35266 ;; This function uses a non-reentrant model
 35267 ;;
 35268                           
 35269                           	psect	text178
 35270  007D4C                     __ptext178:
 35271                           	opt stack 0
 35272  007D4C                     __get_available_root_entry:
 35273                           	opt stack 20
 35274                           
 35275                           ;fat16.c: 96: uint8_t file_number;;fat16.c: 97: for(file_number=0; file_number<64; ++fil
      +                          e_number)
 35276                           
 35277                           ;incstack = 0
 35278  007D4C  0E00               	movlw	0
 35279  007D4E  6E37               	movwf	__get_available_root_entry@file_number,c
 35280  007D50                     l10553:
 35281  007D50  0E3F               	movlw	63
 35282  007D52  6437               	cpfsgt	__get_available_root_entry@file_number,c
 35283  007D54  D001               	goto	l1896
 35284  007D56  D00A               	goto	u7560
 35285  007D58                     l1896:
 35286                           
 35287                           ;fat16.c: 98: {;fat16.c: 99: if(_root_is_available(file_number))
 35288  007D58  5037               	movf	__get_available_root_entry@file_number,w,c
 35289  007D5A  ECBB  F033         	call	__root_is_available
 35290  007D5E  0900               	iorlw	0
 35291  007D60  B4D8               	btfsc	status,2,c
 35292  007D62  D002               	goto	l1898
 35293                           
 35294                           ;fat16.c: 100: {;fat16.c: 101: return file_number;
 35295  007D64  5037               	movf	__get_available_root_entry@file_number,w,c
 35296  007D66  0012               	return	
 35297  007D68                     l1898:
 35298  007D68  2A37               	incf	__get_available_root_entry@file_number,f,c
 35299  007D6A  D7F2               	goto	l10553
 35300  007D6C                     u7560:
 35301                           
 35302                           ;fat16.c: 102: };fat16.c: 103: };fat16.c: 104: return 0xFF;
 35303  007D6C  0EFF               	movlw	255
 35304  007D6E  0012               	return	
 35305  007D70                     __end_of__get_available_root_entry:
 35306                           	opt stack 0
 35307                           tosu	equ	0xFFF
 35308                           tosh	equ	0xFFE
 35309                           tosl	equ	0xFFD
 35310                           pclath	equ	0xFFA
 35311                           tblptru	equ	0xFF8
 35312                           tblptrh	equ	0xFF7
 35313                           tblptrl	equ	0xFF6
 35314                           tablat	equ	0xFF5
 35315                           prodh	equ	0xFF4
 35316                           prodl	equ	0xFF3
 35317                           intcon	equ	0xFF2
 35318                           intcon2	equ	0xFF1
 35319                           intcon3	equ	0xFF0
 35320                           indf0	equ	0xFEF
 35321                           postinc0	equ	0xFEE
 35322                           fsr0h	equ	0xFEA
 35323                           fsr0l	equ	0xFE9
 35324                           wreg	equ	0xFE8
 35325                           indf1	equ	0xFE7
 35326                           postdec1	equ	0xFE5
 35327                           plusw1	equ	0xFE3
 35328                           fsr1h	equ	0xFE2
 35329                           fsr1l	equ	0xFE1
 35330                           indf2	equ	0xFDF
 35331                           postinc2	equ	0xFDE
 35332                           postdec2	equ	0xFDD
 35333                           plusw2	equ	0xFDB
 35334                           fsr2h	equ	0xFDA
 35335                           fsr2l	equ	0xFD9
 35336                           status	equ	0xFD8
 35337                           
 35338 ;; *************** function __parse_file_append *****************
 35339 ;; Defined at:
 35340 ;;		line 536 in file "api.c"
 35341 ;; Parameters:    Size  Location     Type
 35342 ;;  data            2   74[COMRAM] PTR unsigned char 
 35343 ;;		 -> RAM(3759), 
 35344 ;; Auto vars:     Size  Location     Type
 35345 ;;		None
 35346 ;; Return value:  Size  Location     Type
 35347 ;;                  1    wreg      unsigned char 
 35348 ;; Registers used:
 35349 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35350 ;; Tracked objects:
 35351 ;;		On entry : 0/0
 35352 ;;		On exit  : 0/0
 35353 ;;		Unchanged: 0/0
 35354 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35355 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35356 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35357 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35358 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35359 ;;Total ram usage:        3 bytes
 35360 ;; Hardware stack levels used:    1
 35361 ;; Hardware stack levels required when called:    8
 35362 ;; This function calls:
 35363 ;;		_fat_append_to_file
 35364 ;; This function is called by:
 35365 ;;		__parse_command_long
 35366 ;; This function uses a non-reentrant model
 35367 ;;
 35368                           
 35369                           	psect	text179
 35370  00650C                     __ptext179:
 35371                           	opt stack 0
 35372  00650C                     __parse_file_append:
 35373                           	opt stack 20
 35374                           
 35375                           ;api.c: 539: if((data[0]!=COMMAND_FILE_APPEND) || (data[3]!=0xFE) || (data[4]!=0x4B))
 35376                           
 35377                           ;incstack = 0
 35378  00650C  C04B  FFD9         	movff	__parse_file_append@data,fsr2l
 35379  006510  C04C  FFDA         	movff	__parse_file_append@data+1,fsr2h
 35380  006514  0E54               	movlw	84
 35381  006516  18DE               	xorwf	postinc2,w,c
 35382  006518  A4D8               	btfss	status,2,c
 35383  00651A  D014               	goto	u9150
 35384  00651C  EE20 F003          	lfsr	2,3
 35385  006520  504B               	movf	__parse_file_append@data,w,c
 35386  006522  26D9               	addwf	fsr2l,f,c
 35387  006524  504C               	movf	__parse_file_append@data+1,w,c
 35388  006526  22DA               	addwfc	fsr2h,f,c
 35389  006528  0EFE               	movlw	254
 35390  00652A  18DE               	xorwf	postinc2,w,c
 35391  00652C  A4D8               	btfss	status,2,c
 35392  00652E  D00A               	goto	u9150
 35393  006530  EE20 F004          	lfsr	2,4
 35394  006534  504B               	movf	__parse_file_append@data,w,c
 35395  006536  26D9               	addwf	fsr2l,f,c
 35396  006538  504C               	movf	__parse_file_append@data+1,w,c
 35397  00653A  22DA               	addwfc	fsr2h,f,c
 35398  00653C  0E4B               	movlw	75
 35399  00653E  18DE               	xorwf	postinc2,w,c
 35400  006540  B4D8               	btfsc	status,2,c
 35401  006542  D002               	goto	l2655
 35402  006544                     u9150:
 35403                           
 35404                           ;api.c: 540: {;api.c: 541: return 15;
 35405  006544  0E0F               	movlw	15
 35406  006546  0012               	return	
 35407  006548                     l2655:
 35408                           
 35409                           ;api.c: 542: };api.c: 545: fat_append_to_file(data[1], (uint16_t) data[2], &data[5]);
 35410  006548  EE20 F002          	lfsr	2,2
 35411  00654C  504B               	movf	__parse_file_append@data,w,c
 35412  00654E  26D9               	addwf	fsr2l,f,c
 35413  006550  504C               	movf	__parse_file_append@data+1,w,c
 35414  006552  22DA               	addwfc	fsr2h,f,c
 35415  006554  50DF               	movf	indf2,w,c
 35416  006556  6E4D               	movwf	??__parse_file_append& (0+255),c
 35417  006558  504D               	movf	??__parse_file_append,w,c
 35418  00655A  6E3F               	movwf	fat_append_to_file@number_of_bytes,c
 35419  00655C  6A40               	clrf	fat_append_to_file@number_of_bytes+1,c
 35420  00655E  0E05               	movlw	5
 35421  006560  244B               	addwf	__parse_file_append@data,w,c
 35422  006562  6E41               	movwf	fat_append_to_file@data,c
 35423  006564  0E00               	movlw	0
 35424  006566  204C               	addwfc	__parse_file_append@data+1,w,c
 35425  006568  6E42               	movwf	fat_append_to_file@data+1,c
 35426  00656A  EE20 F001          	lfsr	2,1
 35427  00656E  504B               	movf	__parse_file_append@data,w,c
 35428  006570  26D9               	addwf	fsr2l,f,c
 35429  006572  504C               	movf	__parse_file_append@data+1,w,c
 35430  006574  22DA               	addwfc	fsr2h,f,c
 35431  006576  50DF               	movf	indf2,w,c
 35432  006578  EC8D  F010         	call	_fat_append_to_file
 35433                           
 35434                           ;api.c: 546: return data[2] + 5;
 35435  00657C  EE20 F002          	lfsr	2,2
 35436  006580  504B               	movf	__parse_file_append@data,w,c
 35437  006582  26D9               	addwf	fsr2l,f,c
 35438  006584  504C               	movf	__parse_file_append@data+1,w,c
 35439  006586  22DA               	addwfc	fsr2h,f,c
 35440  006588  50DF               	movf	indf2,w,c
 35441  00658A  0F05               	addlw	5
 35442  00658C  0012               	return	
 35443  00658E                     __end_of__parse_file_append:
 35444                           	opt stack 0
 35445                           tosu	equ	0xFFF
 35446                           tosh	equ	0xFFE
 35447                           tosl	equ	0xFFD
 35448                           pclath	equ	0xFFA
 35449                           tblptru	equ	0xFF8
 35450                           tblptrh	equ	0xFF7
 35451                           tblptrl	equ	0xFF6
 35452                           tablat	equ	0xFF5
 35453                           prodh	equ	0xFF4
 35454                           prodl	equ	0xFF3
 35455                           intcon	equ	0xFF2
 35456                           intcon2	equ	0xFF1
 35457                           intcon3	equ	0xFF0
 35458                           indf0	equ	0xFEF
 35459                           postinc0	equ	0xFEE
 35460                           fsr0h	equ	0xFEA
 35461                           fsr0l	equ	0xFE9
 35462                           wreg	equ	0xFE8
 35463                           indf1	equ	0xFE7
 35464                           postdec1	equ	0xFE5
 35465                           plusw1	equ	0xFE3
 35466                           fsr1h	equ	0xFE2
 35467                           fsr1l	equ	0xFE1
 35468                           indf2	equ	0xFDF
 35469                           postinc2	equ	0xFDE
 35470                           postdec2	equ	0xFDD
 35471                           plusw2	equ	0xFDB
 35472                           fsr2h	equ	0xFDA
 35473                           fsr2l	equ	0xFD9
 35474                           status	equ	0xFD8
 35475                           
 35476 ;; *************** function _fat_append_to_file *****************
 35477 ;; Defined at:
 35478 ;;		line 448 in file "fat16.c"
 35479 ;; Parameters:    Size  Location     Type
 35480 ;;  file_number     1    wreg     unsigned char 
 35481 ;;  number_of_by    2   62[COMRAM] unsigned int 
 35482 ;;  data            2   64[COMRAM] PTR unsigned char 
 35483 ;;		 -> RAM(3759), 
 35484 ;; Auto vars:     Size  Location     Type
 35485 ;;  file_number     1   12[BANK0 ] unsigned char 
 35486 ;;  root           32   19[BANK0 ] struct .
 35487 ;;  position        4   15[BANK0 ] unsigned long 
 35488 ;;  file_size       4    2[BANK0 ] unsigned long 
 35489 ;;  length          2   13[BANK0 ] unsigned int 
 35490 ;;  offset          2   10[BANK0 ] unsigned int 
 35491 ;;  fat_cluster     2    8[BANK0 ] unsigned int 
 35492 ;;  new_cluster     2    6[BANK0 ] unsigned int 
 35493 ;;  sector          2    0[BANK0 ] unsigned int 
 35494 ;; Return value:  Size  Location     Type
 35495 ;;                  1    wreg      unsigned char 
 35496 ;; Registers used:
 35497 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 35498 ;; Tracked objects:
 35499 ;;		On entry : 0/0
 35500 ;;		On exit  : 0/0
 35501 ;;		Unchanged: 0/0
 35502 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35503 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35504 ;;      Locals:         0      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35505 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35506 ;;      Totals:        12      51       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35507 ;;Total ram usage:       63 bytes
 35508 ;; Hardware stack levels used:    1
 35509 ;; Hardware stack levels required when called:    7
 35510 ;; This function calls:
 35511 ;;		__get_empty_cluster
 35512 ;;		__read_fat
 35513 ;;		__root_is_available
 35514 ;;		__sector_from_cluster
 35515 ;;		__update_modified_time
 35516 ;;		__write_fat
 35517 ;;		__write_root
 35518 ;;		_fat_get_file_information
 35519 ;;		_flash_partial_write
 35520 ;; This function is called by:
 35521 ;;		__parse_file_append
 35522 ;; This function uses a non-reentrant model
 35523 ;;
 35524                           
 35525                           	psect	text180
 35526  00211A                     __ptext180:
 35527                           	opt stack 0
 35528  00211A                     _fat_append_to_file:
 35529                           	opt stack 20
 35530                           
 35531                           ;incstack = 0
 35532                           ;fat_append_to_file@file_number stored from wreg
 35533  00211A  0100               	movlb	0	; () banked
 35534  00211C  6FC1               	movwf	fat_append_to_file@file_number& (0+255),b
 35535                           
 35536                           ;fat16.c: 450: rootEntry_t root;;fat16.c: 451: uint32_t file_size;;fat16.c: 452: uint16_
      +                          t fat_cluster;;fat16.c: 453: uint16_t new_cluster;;fat16.c: 454: uint32_t position;;fat1
      +                          6.c: 455: uint16_t offset;;fat16.c: 456: uint16_t sector;;fat16.c: 457: uint16_t length;
      +                          ;fat16.c: 460: if(file_number>=64)
 35537  00211E  0E3F               	movlw	63
 35538  002120  0100               	movlb	0	; () banked
 35539  002122  65C1               	cpfsgt	fat_append_to_file@file_number& (0+255),b
 35540  002124  D001               	goto	l1976
 35541  002126  0012               	return	
 35542  002128                     l1976:
 35543                           
 35544                           ; BSR set to: 0
 35545                           ;fat16.c: 464: };fat16.c: 467: if(_root_is_available(file_number))
 35546                           
 35547                           ; BSR set to: 0
 35548  002128  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35549  00212A  ECBB  F033         	call	__root_is_available
 35550  00212E  0900               	iorlw	0
 35551  002130  A4D8               	btfss	status,2,c
 35552  002132  0012               	return	
 35553                           
 35554                           ;fat16.c: 471: };fat16.c: 474: fat_get_file_information(file_number, &root);
 35555                           
 35556                           ;fat16.c: 468: {;fat16.c: 470: return 0xFE;;	Return value of _fat_append_to_file is neve
      +                          r used
 35557  002134  0EC8               	movlw	low fat_append_to_file@root
 35558  002136  6E37               	movwf	fat_get_file_information@data,c
 35559  002138  0E00               	movlw	high fat_append_to_file@root
 35560  00213A  6E38               	movwf	fat_get_file_information@data+1,c
 35561  00213C  0100               	movlb	0	; () banked
 35562  00213E  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35563  002140  ECF6  F033         	call	_fat_get_file_information
 35564                           
 35565                           ;fat16.c: 475: file_size = root.fileSize;
 35566  002144  C0E4  F0B7         	movff	fat_append_to_file@root+28,fat_append_to_file@file_size
 35567  002148  C0E5  F0B8         	movff	fat_append_to_file@root+29,fat_append_to_file@file_size+1
 35568  00214C  C0E6  F0B9         	movff	fat_append_to_file@root+30,fat_append_to_file@file_size+2
 35569  002150  C0E7  F0BA         	movff	fat_append_to_file@root+31,fat_append_to_file@file_size+3
 35570                           
 35571                           ;fat16.c: 476: fat_cluster = root.firstCluster;
 35572  002154  C0E2  F0BD         	movff	fat_append_to_file@root+26,fat_append_to_file@fat_cluster
 35573  002158  C0E3  F0BE         	movff	fat_append_to_file@root+27,fat_append_to_file@fat_cluster+1
 35574                           
 35575                           ;fat16.c: 479: position = 0;
 35576  00215C  0E00               	movlw	0
 35577  00215E  0100               	movlb	0	; () banked
 35578  002160  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35579  002162  0E00               	movlw	0
 35580  002164  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35581  002166  0E00               	movlw	0
 35582  002168  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35583  00216A  0E00               	movlw	0
 35584  00216C  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35585                           
 35586                           ;fat16.c: 480: while((file_size-position)>512)
 35587  00216E  D013               	goto	l1979
 35588  002170                     l11299:
 35589                           
 35590                           ; BSR set to: 0
 35591                           ;fat16.c: 481: {;fat16.c: 482: fat_cluster = _read_fat(fat_cluster);
 35592  002170  C0BD  F030         	movff	fat_append_to_file@fat_cluster,__read_fat@cluster
 35593  002174  C0BE  F031         	movff	fat_append_to_file@fat_cluster+1,__read_fat@cluster+1
 35594  002178  EC01  F03B         	call	__read_fat	;wreg free
 35595  00217C  C030  F0BD         	movff	?__read_fat,fat_append_to_file@fat_cluster
 35596  002180  C031  F0BE         	movff	?__read_fat+1,fat_append_to_file@fat_cluster+1
 35597                           
 35598                           ;fat16.c: 483: position += 512;
 35599  002184  0E00               	movlw	0
 35600  002186  0100               	movlb	0	; () banked
 35601  002188  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35602  00218A  0E02               	movlw	2
 35603  00218C  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35604  00218E  0E00               	movlw	0
 35605  002190  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35606  002192  0E00               	movlw	0
 35607  002194  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35608  002196                     l1979:
 35609                           
 35610                           ; BSR set to: 0
 35611                           
 35612                           ; BSR set to: 0
 35613  002196  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35614  00219A  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35615  00219E  C0C6  F045         	movff	fat_append_to_file@position+2,??_fat_append_to_file+2
 35616  0021A2  C0C7  F046         	movff	fat_append_to_file@position+3,??_fat_append_to_file+3
 35617  0021A6  1E43               	comf	??_fat_append_to_file,f,c
 35618  0021A8  1E44               	comf	??_fat_append_to_file+1,f,c
 35619  0021AA  1E45               	comf	??_fat_append_to_file+2,f,c
 35620  0021AC  1E46               	comf	??_fat_append_to_file+3,f,c
 35621  0021AE  2A43               	incf	??_fat_append_to_file,f,c
 35622  0021B0  0E00               	movlw	0
 35623  0021B2  2244               	addwfc	??_fat_append_to_file+1,f,c
 35624  0021B4  2245               	addwfc	??_fat_append_to_file+2,f,c
 35625  0021B6  2246               	addwfc	??_fat_append_to_file+3,f,c
 35626  0021B8  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35627  0021BA  2443               	addwf	??_fat_append_to_file,w,c
 35628  0021BC  6E47               	movwf	(??_fat_append_to_file+4)& (0+255),c
 35629  0021BE  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35630  0021C0  2044               	addwfc	??_fat_append_to_file+1,w,c
 35631  0021C2  6E48               	movwf	(??_fat_append_to_file+5)& (0+255),c
 35632  0021C4  51B9               	movf	(fat_append_to_file@file_size+2)& (0+255),w,b
 35633  0021C6  2045               	addwfc	??_fat_append_to_file+2,w,c
 35634  0021C8  6E49               	movwf	(??_fat_append_to_file+6)& (0+255),c
 35635  0021CA  51BA               	movf	(fat_append_to_file@file_size+3)& (0+255),w,b
 35636  0021CC  2046               	addwfc	??_fat_append_to_file+3,w,c
 35637  0021CE  6E4A               	movwf	(??_fat_append_to_file+7)& (0+255),c
 35638  0021D0  504A               	movf	??_fat_append_to_file+7,w,c
 35639  0021D2  1049               	iorwf	??_fat_append_to_file+6,w,c
 35640  0021D4  E1CD               	bnz	l11299
 35641  0021D6  0447               	decf	??_fat_append_to_file+4,w,c
 35642  0021D8  0E02               	movlw	2
 35643  0021DA  5848               	subwfb	??_fat_append_to_file+5,w,c
 35644  0021DC  B0D8               	btfsc	status,0,c
 35645  0021DE  D7C8               	goto	l1980
 35646                           
 35647                           ; BSR set to: 0
 35648                           ;fat16.c: 484: };fat16.c: 487: offset = file_size - position;
 35649                           
 35650                           ; BSR set to: 0
 35651  0021E0  C0C4  F043         	movff	fat_append_to_file@position,??_fat_append_to_file
 35652  0021E4  C0C5  F044         	movff	fat_append_to_file@position+1,??_fat_append_to_file+1
 35653  0021E8  1E43               	comf	??_fat_append_to_file,f,c
 35654  0021EA  1E44               	comf	??_fat_append_to_file+1,f,c
 35655  0021EC  4A43               	infsnz	??_fat_append_to_file,f,c
 35656  0021EE  2A44               	incf	??_fat_append_to_file+1,f,c
 35657  0021F0  51B7               	movf	fat_append_to_file@file_size& (0+255),w,b
 35658  0021F2  2443               	addwf	??_fat_append_to_file,w,c
 35659  0021F4  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35660  0021F6  51B8               	movf	(fat_append_to_file@file_size+1)& (0+255),w,b
 35661  0021F8  2044               	addwfc	??_fat_append_to_file+1,w,c
 35662  0021FA  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35663                           
 35664                           ; BSR set to: 0
 35665                           ;fat16.c: 490: position = 0;
 35666  0021FC  0E00               	movlw	0
 35667  0021FE  6FC4               	movwf	fat_append_to_file@position& (0+255),b
 35668  002200  0E00               	movlw	0
 35669  002202  6FC5               	movwf	(fat_append_to_file@position+1)& (0+255),b
 35670  002204  0E00               	movlw	0
 35671  002206  6FC6               	movwf	(fat_append_to_file@position+2)& (0+255),b
 35672  002208  0E00               	movlw	0
 35673  00220A  6FC7               	movwf	(fat_append_to_file@position+3)& (0+255),b
 35674                           
 35675                           ;fat16.c: 491: while(position < number_of_bytes)
 35676  00220C  D06F               	goto	l1982
 35677  00220E                     
 35678                           ; BSR set to: 0
 35679                           ;fat16.c: 492: {;fat16.c: 494: if(offset==512)
 35680                           
 35681                           ; BSR set to: 0
 35682  00220E  0E02               	movlw	2
 35683  002210  19C0               	xorwf	(fat_append_to_file@offset+1)& (0+255),w,b
 35684  002212  11BF               	iorwf	fat_append_to_file@offset& (0+255),w,b
 35685  002214  A4D8               	btfss	status,2,c
 35686  002216  D026               	goto	l1984
 35687                           
 35688                           ; BSR set to: 0
 35689                           ;fat16.c: 495: {;fat16.c: 498: new_cluster = _get_empty_cluster(0x0000);
 35690  002218  0E00               	movlw	0
 35691  00221A  6E31               	movwf	__get_empty_cluster@first_cluster+1,c
 35692  00221C  0E00               	movlw	0
 35693  00221E  6E30               	movwf	__get_empty_cluster@first_cluster,c
 35694  002220  EC30  F034         	call	__get_empty_cluster	;wreg free
 35695  002224  C030  F0BB         	movff	?__get_empty_cluster,fat_append_to_file@new_cluster
 35696  002228  C031  F0BC         	movff	?__get_empty_cluster+1,fat_append_to_file@new_cluster+1
 35697                           
 35698                           ;fat16.c: 500: _write_fat(fat_cluster, new_cluster);
 35699  00222C  C0BD  F029         	movff	fat_append_to_file@fat_cluster,__write_fat@cluster
 35700  002230  C0BE  F02A         	movff	fat_append_to_file@fat_cluster+1,__write_fat@cluster+1
 35701  002234  C0BB  F02B         	movff	fat_append_to_file@new_cluster,__write_fat@value
 35702  002238  C0BC  F02C         	movff	fat_append_to_file@new_cluster+1,__write_fat@value+1
 35703  00223C  ECCA  F03B         	call	__write_fat	;wreg free
 35704                           
 35705                           ;fat16.c: 502: _write_fat(new_cluster, 0xFFFF);
 35706  002240  C0BB  F029         	movff	fat_append_to_file@new_cluster,__write_fat@cluster
 35707  002244  C0BC  F02A         	movff	fat_append_to_file@new_cluster+1,__write_fat@cluster+1
 35708  002248  0EFF               	movlw	255
 35709  00224A  6E2C               	movwf	__write_fat@value+1,c
 35710  00224C  682B               	setf	__write_fat@value,c
 35711  00224E  ECCA  F03B         	call	__write_fat	;wreg free
 35712                           
 35713                           ;fat16.c: 504: fat_cluster = new_cluster;
 35714  002252  C0BB  F0BD         	movff	fat_append_to_file@new_cluster,fat_append_to_file@fat_cluster
 35715  002256  C0BC  F0BE         	movff	fat_append_to_file@new_cluster+1,fat_append_to_file@fat_cluster+1
 35716                           
 35717                           ;fat16.c: 505: offset = 0;
 35718  00225A  0E00               	movlw	0
 35719  00225C  0100               	movlb	0	; () banked
 35720  00225E  6FC0               	movwf	(fat_append_to_file@offset+1)& (0+255),b
 35721  002260  0E00               	movlw	0
 35722  002262  6FBF               	movwf	fat_append_to_file@offset& (0+255),b
 35723  002264                     l1984:
 35724                           
 35725                           ; BSR set to: 0
 35726                           ;fat16.c: 506: };fat16.c: 509: sector = _sector_from_cluster(fat_cluster);
 35727                           
 35728                           ; BSR set to: 0
 35729  002264  C0BD  F001         	movff	fat_append_to_file@fat_cluster,__sector_from_cluster@fat_cluster
 35730  002268  C0BE  F002         	movff	fat_append_to_file@fat_cluster+1,__sector_from_cluster@fat_cluster+1
 35731  00226C  ECB0  F03F         	call	__sector_from_cluster	;wreg free
 35732  002270  C001  F0B5         	movff	?__sector_from_cluster,fat_append_to_file@sector
 35733  002274  C002  F0B6         	movff	?__sector_from_cluster+1,fat_append_to_file@sector+1
 35734                           
 35735                           ;fat16.c: 512: length = 512 - offset;
 35736  002278  C0BF  F043         	movff	fat_append_to_file@offset,??_fat_append_to_file
 35737  00227C  C0C0  F044         	movff	fat_append_to_file@offset+1,??_fat_append_to_file+1
 35738  002280  1E43               	comf	??_fat_append_to_file,f,c
 35739  002282  1E44               	comf	??_fat_append_to_file+1,f,c
 35740  002284  4A43               	infsnz	??_fat_append_to_file,f,c
 35741  002286  2A44               	incf	??_fat_append_to_file+1,f,c
 35742  002288  0E00               	movlw	0
 35743  00228A  2443               	addwf	??_fat_append_to_file,w,c
 35744  00228C  0100               	movlb	0	; () banked
 35745  00228E  6FC2               	movwf	fat_append_to_file@length& (0+255),b
 35746  002290  0E02               	movlw	2
 35747  002292  2044               	addwfc	??_fat_append_to_file+1,w,c
 35748  002294  6FC3               	movwf	(fat_append_to_file@length+1)& (0+255),b
 35749                           
 35750                           ; BSR set to: 0
 35751                           ;fat16.c: 513: if(length>number_of_bytes)
 35752  002296  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35753  002298  5C3F               	subwf	fat_append_to_file@number_of_bytes,w,c
 35754  00229A  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35755  00229C  5840               	subwfb	fat_append_to_file@number_of_bytes+1,w,c
 35756  00229E  B0D8               	btfsc	status,0,c
 35757  0022A0  D004               	goto	l1985
 35758                           
 35759                           ; BSR set to: 0
 35760                           ;fat16.c: 514: {;fat16.c: 515: length = number_of_bytes;
 35761  0022A2  C03F  F0C2         	movff	fat_append_to_file@number_of_bytes,fat_append_to_file@length
 35762  0022A6  C040  F0C3         	movff	fat_append_to_file@number_of_bytes+1,fat_append_to_file@length+1
 35763  0022AA                     l1985:
 35764                           
 35765                           ; BSR set to: 0
 35766                           ;fat16.c: 516: };fat16.c: 519: flash_partial_write(sector, offset, length, &data[positio
      +                          n]);
 35767                           
 35768                           ; BSR set to: 0
 35769  0022AA  C0B5  F020         	movff	fat_append_to_file@sector,flash_partial_write@page
 35770  0022AE  C0B6  F021         	movff	fat_append_to_file@sector+1,flash_partial_write@page+1
 35771  0022B2  C0BF  F022         	movff	fat_append_to_file@offset,flash_partial_write@start
 35772  0022B6  C0C0  F023         	movff	fat_append_to_file@offset+1,flash_partial_write@start+1
 35773  0022BA  C0C2  F024         	movff	fat_append_to_file@length,flash_partial_write@length
 35774  0022BE  C0C3  F025         	movff	fat_append_to_file@length+1,flash_partial_write@length+1
 35775  0022C2  51C4               	movf	fat_append_to_file@position& (0+255),w,b
 35776  0022C4  2441               	addwf	fat_append_to_file@data,w,c
 35777  0022C6  6E26               	movwf	flash_partial_write@data,c
 35778  0022C8  51C5               	movf	(fat_append_to_file@position+1)& (0+255),w,b
 35779  0022CA  2042               	addwfc	fat_append_to_file@data+1,w,c
 35780  0022CC  6E27               	movwf	flash_partial_write@data+1,c
 35781  0022CE  ECDB  F034         	call	_flash_partial_write	;wreg free
 35782                           
 35783                           ;fat16.c: 522: position += length;
 35784  0022D2  0100               	movlb	0	; () banked
 35785  0022D4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35786  0022D6  27C4               	addwf	fat_append_to_file@position& (0+255),f,b
 35787  0022D8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35788  0022DA  23C5               	addwfc	(fat_append_to_file@position+1)& (0+255),f,b
 35789  0022DC  0E00               	movlw	0
 35790  0022DE  23C6               	addwfc	(fat_append_to_file@position+2)& (0+255),f,b
 35791  0022E0  0E00               	movlw	0
 35792  0022E2  23C7               	addwfc	(fat_append_to_file@position+3)& (0+255),f,b
 35793                           
 35794                           ; BSR set to: 0
 35795                           ;fat16.c: 523: offset += length;
 35796  0022E4  51C2               	movf	fat_append_to_file@length& (0+255),w,b
 35797  0022E6  27BF               	addwf	fat_append_to_file@offset& (0+255),f,b
 35798  0022E8  51C3               	movf	(fat_append_to_file@length+1)& (0+255),w,b
 35799  0022EA  23C0               	addwfc	(fat_append_to_file@offset+1)& (0+255),f,b
 35800  0022EC                     l1982:
 35801                           
 35802                           ; BSR set to: 0
 35803                           
 35804                           ; BSR set to: 0
 35805  0022EC  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35806  0022EE  6E43               	movwf	??_fat_append_to_file& (0+255),c
 35807  0022F0  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35808  0022F2  6E44               	movwf	(??_fat_append_to_file+1)& (0+255),c
 35809  0022F4  6A45               	clrf	(??_fat_append_to_file+2)& (0+255),c
 35810  0022F6  6A46               	clrf	(??_fat_append_to_file+3)& (0+255),c
 35811  0022F8  5043               	movf	??_fat_append_to_file,w,c
 35812  0022FA  5DC4               	subwf	fat_append_to_file@position& (0+255),w,b
 35813  0022FC  5044               	movf	??_fat_append_to_file+1,w,c
 35814  0022FE  59C5               	subwfb	(fat_append_to_file@position+1)& (0+255),w,b
 35815  002300  5045               	movf	??_fat_append_to_file+2,w,c
 35816  002302  59C6               	subwfb	(fat_append_to_file@position+2)& (0+255),w,b
 35817  002304  5046               	movf	??_fat_append_to_file+3,w,c
 35818  002306  59C7               	subwfb	(fat_append_to_file@position+3)& (0+255),w,b
 35819  002308  A0D8               	btfss	status,0,c
 35820  00230A  D781               	goto	l1983
 35821                           
 35822                           ; BSR set to: 0
 35823                           ;fat16.c: 524: };fat16.c: 528: root.fileSize += number_of_bytes;
 35824                           
 35825                           ; BSR set to: 0
 35826  00230C  503F               	movf	fat_append_to_file@number_of_bytes,w,c
 35827  00230E  27E4               	addwf	(fat_append_to_file@root+28)& (0+255),f,b
 35828  002310  5040               	movf	fat_append_to_file@number_of_bytes+1,w,c
 35829  002312  23E5               	addwfc	(fat_append_to_file@root+29)& (0+255),f,b
 35830  002314  0E00               	movlw	0
 35831  002316  23E6               	addwfc	(fat_append_to_file@root+30)& (0+255),f,b
 35832  002318  0E00               	movlw	0
 35833  00231A  23E7               	addwfc	(fat_append_to_file@root+31)& (0+255),f,b
 35834                           
 35835                           ; BSR set to: 0
 35836                           ;fat16.c: 529: _update_modified_time(&root);
 35837  00231C  0EC8               	movlw	low fat_append_to_file@root
 35838  00231E  6E05               	movwf	__update_modified_time@root,c
 35839  002320  0E00               	movlw	high fat_append_to_file@root
 35840  002322  6E06               	movwf	__update_modified_time@root+1,c
 35841  002324  EC4D  F03D         	call	__update_modified_time	;wreg free
 35842                           
 35843                           ;fat16.c: 530: _write_root(file_number, &root);
 35844  002328  0EC8               	movlw	low fat_append_to_file@root
 35845  00232A  6E29               	movwf	__write_root@data,c
 35846  00232C  0E00               	movlw	high fat_append_to_file@root
 35847  00232E  6E2A               	movwf	__write_root@data+1,c
 35848  002330  0100               	movlb	0	; () banked
 35849  002332  51C1               	movf	fat_append_to_file@file_number& (0+255),w,b
 35850  002334  EC66  F038         	call	__write_root
 35851  002338  0012               	return	
 35852  00233A                     __end_of_fat_append_to_file:
 35853                           	opt stack 0
 35854                           tosu	equ	0xFFF
 35855                           tosh	equ	0xFFE
 35856                           tosl	equ	0xFFD
 35857                           pclath	equ	0xFFA
 35858                           tblptru	equ	0xFF8
 35859                           tblptrh	equ	0xFF7
 35860                           tblptrl	equ	0xFF6
 35861                           tablat	equ	0xFF5
 35862                           prodh	equ	0xFF4
 35863                           prodl	equ	0xFF3
 35864                           intcon	equ	0xFF2
 35865                           intcon2	equ	0xFF1
 35866                           intcon3	equ	0xFF0
 35867                           indf0	equ	0xFEF
 35868                           postinc0	equ	0xFEE
 35869                           fsr0h	equ	0xFEA
 35870                           fsr0l	equ	0xFE9
 35871                           wreg	equ	0xFE8
 35872                           indf1	equ	0xFE7
 35873                           postdec1	equ	0xFE5
 35874                           plusw1	equ	0xFE3
 35875                           fsr1h	equ	0xFE2
 35876                           fsr1l	equ	0xFE1
 35877                           indf2	equ	0xFDF
 35878                           postinc2	equ	0xFDE
 35879                           postdec2	equ	0xFDD
 35880                           plusw2	equ	0xFDB
 35881                           fsr2h	equ	0xFDA
 35882                           fsr2l	equ	0xFD9
 35883                           status	equ	0xFD8
 35884                           
 35885 ;; *************** function _fat_get_file_information *****************
 35886 ;; Defined at:
 35887 ;;		line 981 in file "fat16.c"
 35888 ;; Parameters:    Size  Location     Type
 35889 ;;  file_number     1    wreg     unsigned char 
 35890 ;;  data            2   54[COMRAM] PTR struct .
 35891 ;;		 -> _spi_external_tx_buffer(64), fat_read_from_file@root(32), fat_rename_file@root(32), fat_append_to_file@root(32),
      + 
 35892 ;;		 -> RAM(3759), 
 35893 ;; Auto vars:     Size  Location     Type
 35894 ;;  file_number     1   61[COMRAM] unsigned char 
 35895 ;;  offset          2   59[COMRAM] unsigned int 
 35896 ;;  root_sector     2   57[COMRAM] unsigned int 
 35897 ;; Return value:  Size  Location     Type
 35898 ;;                  1    wreg      unsigned char 
 35899 ;; Registers used:
 35900 ;;		wreg, status,2, status,0, cstack
 35901 ;; Tracked objects:
 35902 ;;		On entry : 0/0
 35903 ;;		On exit  : 0/0
 35904 ;;		Unchanged: 0/0
 35905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 35906 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35907 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35908 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35909 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 35910 ;;Total ram usage:        8 bytes
 35911 ;; Hardware stack levels used:    1
 35912 ;; Hardware stack levels required when called:    6
 35913 ;; This function calls:
 35914 ;;		__root_is_available
 35915 ;;		_flash_partial_read
 35916 ;; This function is called by:
 35917 ;;		_fat_append_to_file
 35918 ;;		_fat_rename_file
 35919 ;;		_fat_read_from_file
 35920 ;;		__fill_buffer_get_file_details
 35921 ;; This function uses a non-reentrant model
 35922 ;;
 35923                           
 35924                           	psect	text181
 35925  0067EC                     __ptext181:
 35926                           	opt stack 0
 35927  0067EC                     _fat_get_file_information:
 35928                           	opt stack 21
 35929                           
 35930                           ;incstack = 0
 35931                           ;fat_get_file_information@file_number stored from wreg
 35932  0067EC  6E3E               	movwf	fat_get_file_information@file_number,c
 35933                           
 35934                           ;fat16.c: 983: uint16_t root_sector;;fat16.c: 984: uint16_t offset;;fat16.c: 986: if(fil
      +                          e_number>=64)
 35935  0067EE  0E3F               	movlw	63
 35936  0067F0  643E               	cpfsgt	fat_get_file_information@file_number,c
 35937  0067F2  D002               	goto	l2168
 35938                           
 35939                           ;fat16.c: 987: {;fat16.c: 989: return 0x01;
 35940  0067F4  0E01               	movlw	1
 35941  0067F6  0012               	return	
 35942  0067F8                     l2168:
 35943                           
 35944                           ;fat16.c: 990: };fat16.c: 991: if(_root_is_available(file_number))
 35945  0067F8  503E               	movf	fat_get_file_information@file_number,w,c
 35946  0067FA  ECBB  F033         	call	__root_is_available
 35947  0067FE  0900               	iorlw	0
 35948  006800  B4D8               	btfsc	status,2,c
 35949  006802  D002               	goto	l2170
 35950                           
 35951                           ;fat16.c: 992: {;fat16.c: 994: return 0x02;
 35952  006804  0E02               	movlw	2
 35953  006806  0012               	return	
 35954  006808                     l2170:
 35955                           
 35956                           ;fat16.c: 995: };fat16.c: 997: root_sector = (file_number >> 4) + 34;
 35957  006808  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35958  00680C  3A39               	swapf	??_fat_get_file_information,f,c
 35959  00680E  0E0F               	movlw	15
 35960  006810  1639               	andwf	??_fat_get_file_information,f,c
 35961  006812  0E22               	movlw	34
 35962  006814  2439               	addwf	??_fat_get_file_information,w,c
 35963  006816  6E3A               	movwf	fat_get_file_information@root_sector,c
 35964  006818  6A3B               	clrf	fat_get_file_information@root_sector+1,c
 35965  00681A  0E00               	movlw	0
 35966  00681C  223B               	addwfc	fat_get_file_information@root_sector+1,f,c
 35967                           
 35968                           ;fat16.c: 998: offset = (file_number & 0b1111);
 35969  00681E  C03E  F039         	movff	fat_get_file_information@file_number,??_fat_get_file_information
 35970  006822  0E0F               	movlw	15
 35971  006824  1639               	andwf	??_fat_get_file_information,f,c
 35972  006826  5039               	movf	??_fat_get_file_information,w,c
 35973  006828  6E3C               	movwf	fat_get_file_information@offset,c
 35974  00682A  6A3D               	clrf	fat_get_file_information@offset+1,c
 35975                           
 35976                           ;fat16.c: 999: offset <<= 5;
 35977  00682C  0E05               	movlw	5
 35978  00682E                     u7775:
 35979  00682E  90D8               	bcf	status,0,c
 35980  006830  363C               	rlcf	fat_get_file_information@offset,f,c
 35981  006832  363D               	rlcf	fat_get_file_information@offset+1,f,c
 35982  006834  2EE8               	decfsz	wreg,f,c
 35983  006836  D7FB               	goto	u7775
 35984                           
 35985                           ;fat16.c: 1000: flash_partial_read(root_sector, offset, 32, data);
 35986  006838  C03A  F028         	movff	fat_get_file_information@root_sector,flash_partial_read@page
 35987  00683C  C03B  F029         	movff	fat_get_file_information@root_sector+1,flash_partial_read@page+1
 35988  006840  C03C  F02A         	movff	fat_get_file_information@offset,flash_partial_read@start
 35989  006844  C03D  F02B         	movff	fat_get_file_information@offset+1,flash_partial_read@start+1
 35990  006848  0E00               	movlw	0
 35991  00684A  6E2D               	movwf	flash_partial_read@length+1,c
 35992  00684C  0E20               	movlw	32
 35993  00684E  6E2C               	movwf	flash_partial_read@length,c
 35994  006850  C037  F02E         	movff	fat_get_file_information@data,flash_partial_read@data
 35995  006854  C038  F02F         	movff	fat_get_file_information@data+1,flash_partial_read@data+1
 35996  006858  EC66  F03D         	call	_flash_partial_read	;wreg free
 35997                           
 35998                           ;fat16.c: 1003: return 0x00;
 35999  00685C  0E00               	movlw	0
 36000  00685E  0012               	return	
 36001  006860                     __end_of_fat_get_file_information:
 36002                           	opt stack 0
 36003                           tosu	equ	0xFFF
 36004                           tosh	equ	0xFFE
 36005                           tosl	equ	0xFFD
 36006                           pclath	equ	0xFFA
 36007                           tblptru	equ	0xFF8
 36008                           tblptrh	equ	0xFF7
 36009                           tblptrl	equ	0xFF6
 36010                           tablat	equ	0xFF5
 36011                           prodh	equ	0xFF4
 36012                           prodl	equ	0xFF3
 36013                           intcon	equ	0xFF2
 36014                           intcon2	equ	0xFF1
 36015                           intcon3	equ	0xFF0
 36016                           indf0	equ	0xFEF
 36017                           postinc0	equ	0xFEE
 36018                           fsr0h	equ	0xFEA
 36019                           fsr0l	equ	0xFE9
 36020                           wreg	equ	0xFE8
 36021                           indf1	equ	0xFE7
 36022                           postdec1	equ	0xFE5
 36023                           plusw1	equ	0xFE3
 36024                           fsr1h	equ	0xFE2
 36025                           fsr1l	equ	0xFE1
 36026                           indf2	equ	0xFDF
 36027                           postinc2	equ	0xFDE
 36028                           postdec2	equ	0xFDD
 36029                           plusw2	equ	0xFDB
 36030                           fsr2h	equ	0xFDA
 36031                           fsr2l	equ	0xFD9
 36032                           status	equ	0xFD8
 36033                           
 36034 ;; *************** function __root_is_available *****************
 36035 ;; Defined at:
 36036 ;;		line 59 in file "fat16.c"
 36037 ;; Parameters:    Size  Location     Type
 36038 ;;  file_number     1    wreg     unsigned char 
 36039 ;; Auto vars:     Size  Location     Type
 36040 ;;  file_number     1   52[COMRAM] unsigned char 
 36041 ;;  offset          2   50[COMRAM] unsigned int 
 36042 ;;  root_sector     2   48[COMRAM] unsigned int 
 36043 ;;  first_byte      1   53[COMRAM] unsigned char 
 36044 ;; Return value:  Size  Location     Type
 36045 ;;                  1    wreg      unsigned char 
 36046 ;; Registers used:
 36047 ;;		wreg, status,2, status,0, cstack
 36048 ;; Tracked objects:
 36049 ;;		On entry : 0/0
 36050 ;;		On exit  : 0/0
 36051 ;;		Unchanged: 0/0
 36052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36053 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36054 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36055 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36056 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36057 ;;Total ram usage:        7 bytes
 36058 ;; Hardware stack levels used:    1
 36059 ;; Hardware stack levels required when called:    5
 36060 ;; This function calls:
 36061 ;;		_flash_partial_read
 36062 ;; This function is called by:
 36063 ;;		__get_available_root_entry
 36064 ;;		_fat_delete_file
 36065 ;;		_fat_append_to_file
 36066 ;;		_fat_get_file_information
 36067 ;; This function uses a non-reentrant model
 36068 ;;
 36069                           
 36070                           	psect	text182
 36071  006776                     __ptext182:
 36072                           	opt stack 0
 36073  006776                     __root_is_available:
 36074                           	opt stack 21
 36075                           
 36076                           ;incstack = 0
 36077                           ;__root_is_available@file_number stored from wreg
 36078  006776  6E35               	movwf	__root_is_available@file_number,c
 36079                           
 36080                           ;fat16.c: 61: uint16_t root_sector;;fat16.c: 62: uint16_t offset;;fat16.c: 63: uint8_t f
      +                          irst_byte;;fat16.c: 67: if(file_number>=64)
 36081  006778  0E3F               	movlw	63
 36082  00677A  6435               	cpfsgt	__root_is_available@file_number,c
 36083  00677C  D002               	goto	l1888
 36084                           
 36085                           ;fat16.c: 68: {;fat16.c: 70: return 0;
 36086  00677E  0E00               	movlw	0
 36087  006780  0012               	return	
 36088  006782                     l1888:
 36089                           
 36090                           ;fat16.c: 71: };fat16.c: 74: root_sector = (file_number >> 4) + 34;
 36091  006782  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36092  006786  3A30               	swapf	??__root_is_available,f,c
 36093  006788  0E0F               	movlw	15
 36094  00678A  1630               	andwf	??__root_is_available,f,c
 36095  00678C  0E22               	movlw	34
 36096  00678E  2430               	addwf	??__root_is_available,w,c
 36097  006790  6E31               	movwf	__root_is_available@root_sector,c
 36098  006792  6A32               	clrf	__root_is_available@root_sector+1,c
 36099  006794  0E00               	movlw	0
 36100  006796  2232               	addwfc	__root_is_available@root_sector+1,f,c
 36101                           
 36102                           ;fat16.c: 75: offset = (file_number & 0b1111);
 36103  006798  C035  F030         	movff	__root_is_available@file_number,??__root_is_available
 36104  00679C  0E0F               	movlw	15
 36105  00679E  1630               	andwf	??__root_is_available,f,c
 36106  0067A0  5030               	movf	??__root_is_available,w,c
 36107  0067A2  6E33               	movwf	__root_is_available@offset,c
 36108  0067A4  6A34               	clrf	__root_is_available@offset+1,c
 36109                           
 36110                           ;fat16.c: 76: offset <<= 5;
 36111  0067A6  0E05               	movlw	5
 36112  0067A8                     u6895:
 36113  0067A8  90D8               	bcf	status,0,c
 36114  0067AA  3633               	rlcf	__root_is_available@offset,f,c
 36115  0067AC  3634               	rlcf	__root_is_available@offset+1,f,c
 36116  0067AE  2EE8               	decfsz	wreg,f,c
 36117  0067B0  D7FB               	goto	u6895
 36118                           
 36119                           ;fat16.c: 79: flash_partial_read(root_sector, offset, 1, &first_byte);
 36120  0067B2  C031  F028         	movff	__root_is_available@root_sector,flash_partial_read@page
 36121  0067B6  C032  F029         	movff	__root_is_available@root_sector+1,flash_partial_read@page+1
 36122  0067BA  C033  F02A         	movff	__root_is_available@offset,flash_partial_read@start
 36123  0067BE  C034  F02B         	movff	__root_is_available@offset+1,flash_partial_read@start+1
 36124  0067C2  0E00               	movlw	0
 36125  0067C4  6E2D               	movwf	flash_partial_read@length+1,c
 36126  0067C6  0E01               	movlw	1
 36127  0067C8  6E2C               	movwf	flash_partial_read@length,c
 36128  0067CA  0E36               	movlw	low __root_is_available@first_byte
 36129  0067CC  6E2E               	movwf	flash_partial_read@data,c
 36130  0067CE  0E00               	movlw	high __root_is_available@first_byte
 36131  0067D0  6E2F               	movwf	flash_partial_read@data+1,c
 36132  0067D2  EC66  F03D         	call	_flash_partial_read	;wreg free
 36133                           
 36134                           ;fat16.c: 82: if((first_byte==0x00) || (first_byte==0xE5))
 36135  0067D6  5036               	movf	__root_is_available@first_byte,w,c
 36136  0067D8  B4D8               	btfsc	status,2,c
 36137  0067DA  D004               	goto	u6910
 36138  0067DC  0EE5               	movlw	229
 36139  0067DE  1836               	xorwf	__root_is_available@first_byte,w,c
 36140  0067E0  A4D8               	btfss	status,2,c
 36141  0067E2  D002               	goto	l1890
 36142  0067E4                     u6910:
 36143                           
 36144                           ;fat16.c: 83: {;fat16.c: 85: return 1;
 36145  0067E4  0E01               	movlw	1
 36146                           
 36147                           ;fat16.c: 86: }
 36148  0067E6  0012               	return	
 36149  0067E8                     l1890:
 36150                           
 36151                           ;fat16.c: 87: else;fat16.c: 88: {;fat16.c: 90: return 0;
 36152  0067E8  0E00               	movlw	0
 36153  0067EA  0012               	return	
 36154  0067EC                     __end_of__root_is_available:
 36155                           	opt stack 0
 36156                           tosu	equ	0xFFF
 36157                           tosh	equ	0xFFE
 36158                           tosl	equ	0xFFD
 36159                           pclath	equ	0xFFA
 36160                           tblptru	equ	0xFF8
 36161                           tblptrh	equ	0xFF7
 36162                           tblptrl	equ	0xFF6
 36163                           tablat	equ	0xFF5
 36164                           prodh	equ	0xFF4
 36165                           prodl	equ	0xFF3
 36166                           intcon	equ	0xFF2
 36167                           intcon2	equ	0xFF1
 36168                           intcon3	equ	0xFF0
 36169                           indf0	equ	0xFEF
 36170                           postinc0	equ	0xFEE
 36171                           fsr0h	equ	0xFEA
 36172                           fsr0l	equ	0xFE9
 36173                           wreg	equ	0xFE8
 36174                           indf1	equ	0xFE7
 36175                           postdec1	equ	0xFE5
 36176                           plusw1	equ	0xFE3
 36177                           fsr1h	equ	0xFE2
 36178                           fsr1l	equ	0xFE1
 36179                           indf2	equ	0xFDF
 36180                           postinc2	equ	0xFDE
 36181                           postdec2	equ	0xFDD
 36182                           plusw2	equ	0xFDB
 36183                           fsr2h	equ	0xFDA
 36184                           fsr2l	equ	0xFD9
 36185                           status	equ	0xFD8
 36186                           
 36187 ;; *************** function __write_root *****************
 36188 ;; Defined at:
 36189 ;;		line 182 in file "fat16.c"
 36190 ;; Parameters:    Size  Location     Type
 36191 ;;  slot            1    wreg     unsigned char 
 36192 ;;  data            2   40[COMRAM] PTR struct .
 36193 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36194 ;; Auto vars:     Size  Location     Type
 36195 ;;  slot            1   47[COMRAM] unsigned char 
 36196 ;;  offset          2   45[COMRAM] unsigned int 
 36197 ;;  root_sector     2   43[COMRAM] unsigned int 
 36198 ;; Return value:  Size  Location     Type
 36199 ;;                  1    wreg      void 
 36200 ;; Registers used:
 36201 ;;		wreg, status,2, status,0, cstack
 36202 ;; Tracked objects:
 36203 ;;		On entry : 0/0
 36204 ;;		On exit  : 0/0
 36205 ;;		Unchanged: 0/0
 36206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36207 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36208 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36209 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36210 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36211 ;;Total ram usage:        8 bytes
 36212 ;; Hardware stack levels used:    1
 36213 ;; Hardware stack levels required when called:    5
 36214 ;; This function calls:
 36215 ;;		_flash_partial_write
 36216 ;; This function is called by:
 36217 ;;		_fat_create_file
 36218 ;;		_fat_append_to_file
 36219 ;;		_fat_rename_file
 36220 ;; This function uses a non-reentrant model
 36221 ;;
 36222                           
 36223                           	psect	text183
 36224  0070CC                     __ptext183:
 36225                           	opt stack 0
 36226  0070CC                     __write_root:
 36227                           	opt stack 21
 36228                           
 36229                           ;incstack = 0
 36230                           ;__write_root@slot stored from wreg
 36231  0070CC  6E30               	movwf	__write_root@slot,c
 36232                           
 36233                           ;fat16.c: 184: uint16_t root_sector;;fat16.c: 185: uint16_t offset;;fat16.c: 186: root_s
      +                          ector = (slot >> 4) + 34;
 36234  0070CE  C030  F02B         	movff	__write_root@slot,??__write_root
 36235  0070D2  3A2B               	swapf	??__write_root,f,c
 36236  0070D4  0E0F               	movlw	15
 36237  0070D6  162B               	andwf	??__write_root,f,c
 36238  0070D8  0E22               	movlw	34
 36239  0070DA  242B               	addwf	??__write_root,w,c
 36240  0070DC  6E2C               	movwf	__write_root@root_sector,c
 36241  0070DE  6A2D               	clrf	__write_root@root_sector+1,c
 36242  0070E0  0E00               	movlw	0
 36243  0070E2  222D               	addwfc	__write_root@root_sector+1,f,c
 36244                           
 36245                           ;fat16.c: 187: offset = (slot & 0b1111);
 36246  0070E4  C030  F02B         	movff	__write_root@slot,??__write_root
 36247  0070E8  0E0F               	movlw	15
 36248  0070EA  162B               	andwf	??__write_root,f,c
 36249  0070EC  502B               	movf	??__write_root,w,c
 36250  0070EE  6E2E               	movwf	__write_root@offset,c
 36251  0070F0  6A2F               	clrf	__write_root@offset+1,c
 36252                           
 36253                           ;fat16.c: 188: offset <<= 5;
 36254  0070F2  0E05               	movlw	5
 36255  0070F4                     u7645:
 36256  0070F4  90D8               	bcf	status,0,c
 36257  0070F6  362E               	rlcf	__write_root@offset,f,c
 36258  0070F8  362F               	rlcf	__write_root@offset+1,f,c
 36259  0070FA  2EE8               	decfsz	wreg,f,c
 36260  0070FC  D7FB               	goto	u7645
 36261                           
 36262                           ;fat16.c: 189: flash_partial_write(root_sector, offset, 32, data);
 36263  0070FE  C02C  F020         	movff	__write_root@root_sector,flash_partial_write@page
 36264  007102  C02D  F021         	movff	__write_root@root_sector+1,flash_partial_write@page+1
 36265  007106  C02E  F022         	movff	__write_root@offset,flash_partial_write@start
 36266  00710A  C02F  F023         	movff	__write_root@offset+1,flash_partial_write@start+1
 36267  00710E  0E00               	movlw	0
 36268  007110  6E25               	movwf	flash_partial_write@length+1,c
 36269  007112  0E20               	movlw	32
 36270  007114  6E24               	movwf	flash_partial_write@length,c
 36271  007116  C029  F026         	movff	__write_root@data,flash_partial_write@data
 36272  00711A  C02A  F027         	movff	__write_root@data+1,flash_partial_write@data+1
 36273  00711E  ECDB  F034         	call	_flash_partial_write	;wreg free
 36274  007122  0012               	return		;funcret
 36275  007124                     __end_of__write_root:
 36276                           	opt stack 0
 36277                           tosu	equ	0xFFF
 36278                           tosh	equ	0xFFE
 36279                           tosl	equ	0xFFD
 36280                           pclath	equ	0xFFA
 36281                           tblptru	equ	0xFF8
 36282                           tblptrh	equ	0xFF7
 36283                           tblptrl	equ	0xFF6
 36284                           tablat	equ	0xFF5
 36285                           prodh	equ	0xFF4
 36286                           prodl	equ	0xFF3
 36287                           intcon	equ	0xFF2
 36288                           intcon2	equ	0xFF1
 36289                           intcon3	equ	0xFF0
 36290                           indf0	equ	0xFEF
 36291                           postinc0	equ	0xFEE
 36292                           fsr0h	equ	0xFEA
 36293                           fsr0l	equ	0xFE9
 36294                           wreg	equ	0xFE8
 36295                           indf1	equ	0xFE7
 36296                           postdec1	equ	0xFE5
 36297                           plusw1	equ	0xFE3
 36298                           fsr1h	equ	0xFE2
 36299                           fsr1l	equ	0xFE1
 36300                           indf2	equ	0xFDF
 36301                           postinc2	equ	0xFDE
 36302                           postdec2	equ	0xFDD
 36303                           plusw2	equ	0xFDB
 36304                           fsr2h	equ	0xFDA
 36305                           fsr2l	equ	0xFD9
 36306                           status	equ	0xFD8
 36307                           
 36308 ;; *************** function __write_fat *****************
 36309 ;; Defined at:
 36310 ;;		line 158 in file "fat16.c"
 36311 ;; Parameters:    Size  Location     Type
 36312 ;;  cluster         2   40[COMRAM] unsigned int 
 36313 ;;  value           2   42[COMRAM] unsigned int 
 36314 ;; Auto vars:     Size  Location     Type
 36315 ;;  offset          2   46[COMRAM] unsigned int 
 36316 ;;  fat_sector      2   44[COMRAM] unsigned int 
 36317 ;; Return value:  Size  Location     Type
 36318 ;;                  1    wreg      void 
 36319 ;; Registers used:
 36320 ;;		wreg, status,2, status,0, cstack
 36321 ;; Tracked objects:
 36322 ;;		On entry : 0/0
 36323 ;;		On exit  : 0/0
 36324 ;;		Unchanged: 0/0
 36325 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36326 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36327 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36328 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36329 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36330 ;;Total ram usage:        8 bytes
 36331 ;; Hardware stack levels used:    1
 36332 ;; Hardware stack levels required when called:    5
 36333 ;; This function calls:
 36334 ;;		_flash_partial_write
 36335 ;; This function is called by:
 36336 ;;		_fat_create_file
 36337 ;;		_fat_delete_file
 36338 ;;		_fat_append_to_file
 36339 ;; This function uses a non-reentrant model
 36340 ;;
 36341                           
 36342                           	psect	text184
 36343  007794                     __ptext184:
 36344                           	opt stack 0
 36345  007794                     __write_fat:
 36346                           	opt stack 21
 36347                           
 36348                           ;fat16.c: 160: uint16_t fat_sector;;fat16.c: 161: uint16_t offset;;fat16.c: 162: fat_sec
      +                          tor = cluster>>8;
 36349                           
 36350                           ;incstack = 0
 36351  007794  502A               	movf	__write_fat@cluster+1,w,c
 36352  007796  6E2D               	movwf	__write_fat@fat_sector,c
 36353  007798  6A2E               	clrf	__write_fat@fat_sector+1,c
 36354                           
 36355                           ;fat16.c: 163: fat_sector += 2;
 36356  00779A  0E02               	movlw	2
 36357  00779C  262D               	addwf	__write_fat@fat_sector,f,c
 36358  00779E  0E00               	movlw	0
 36359  0077A0  222E               	addwfc	__write_fat@fat_sector+1,f,c
 36360                           
 36361                           ;fat16.c: 164: offset = cluster & 0xFF;
 36362  0077A2  5029               	movf	__write_fat@cluster,w,c
 36363  0077A4  6E2F               	movwf	__write_fat@offset,c
 36364  0077A6  6A30               	clrf	__write_fat@offset+1,c
 36365                           
 36366                           ;fat16.c: 165: offset <<= 1;
 36367  0077A8  90D8               	bcf	status,0,c
 36368  0077AA  362F               	rlcf	__write_fat@offset,f,c
 36369  0077AC  3630               	rlcf	__write_fat@offset+1,f,c
 36370                           
 36371                           ;fat16.c: 166: flash_partial_write(fat_sector, offset, 2, &value);
 36372  0077AE  C02D  F020         	movff	__write_fat@fat_sector,flash_partial_write@page
 36373  0077B2  C02E  F021         	movff	__write_fat@fat_sector+1,flash_partial_write@page+1
 36374  0077B6  C02F  F022         	movff	__write_fat@offset,flash_partial_write@start
 36375  0077BA  C030  F023         	movff	__write_fat@offset+1,flash_partial_write@start+1
 36376  0077BE  0E00               	movlw	0
 36377  0077C0  6E25               	movwf	flash_partial_write@length+1,c
 36378  0077C2  0E02               	movlw	2
 36379  0077C4  6E24               	movwf	flash_partial_write@length,c
 36380  0077C6  0E2B               	movlw	low __write_fat@value
 36381  0077C8  6E26               	movwf	flash_partial_write@data,c
 36382  0077CA  0E00               	movlw	high __write_fat@value
 36383  0077CC  6E27               	movwf	flash_partial_write@data+1,c
 36384  0077CE  ECDB  F034         	call	_flash_partial_write	;wreg free
 36385  0077D2  0012               	return		;funcret
 36386  0077D4                     __end_of__write_fat:
 36387                           	opt stack 0
 36388                           tosu	equ	0xFFF
 36389                           tosh	equ	0xFFE
 36390                           tosl	equ	0xFFD
 36391                           pclath	equ	0xFFA
 36392                           tblptru	equ	0xFF8
 36393                           tblptrh	equ	0xFF7
 36394                           tblptrl	equ	0xFF6
 36395                           tablat	equ	0xFF5
 36396                           prodh	equ	0xFF4
 36397                           prodl	equ	0xFF3
 36398                           intcon	equ	0xFF2
 36399                           intcon2	equ	0xFF1
 36400                           intcon3	equ	0xFF0
 36401                           indf0	equ	0xFEF
 36402                           postinc0	equ	0xFEE
 36403                           fsr0h	equ	0xFEA
 36404                           fsr0l	equ	0xFE9
 36405                           wreg	equ	0xFE8
 36406                           indf1	equ	0xFE7
 36407                           postdec1	equ	0xFE5
 36408                           plusw1	equ	0xFE3
 36409                           fsr1h	equ	0xFE2
 36410                           fsr1l	equ	0xFE1
 36411                           indf2	equ	0xFDF
 36412                           postinc2	equ	0xFDE
 36413                           postdec2	equ	0xFDD
 36414                           plusw2	equ	0xFDB
 36415                           fsr2h	equ	0xFDA
 36416                           fsr2l	equ	0xFD9
 36417                           status	equ	0xFD8
 36418                           
 36419 ;; *************** function _flash_partial_write *****************
 36420 ;; Defined at:
 36421 ;;		line 471 in file "flash.c"
 36422 ;; Parameters:    Size  Location     Type
 36423 ;;  page            2   31[COMRAM] unsigned int 
 36424 ;;  start           2   33[COMRAM] unsigned int 
 36425 ;;  length          2   35[COMRAM] unsigned int 
 36426 ;;  data            2   37[COMRAM] PTR unsigned char 
 36427 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), _write_file_size@new_file
      +_size(4), 
 36428 ;;		 -> _delete_root@deleted_value(1), _write_fat@value(2), RAM(3759), 
 36429 ;; Auto vars:     Size  Location     Type
 36430 ;;  match           1   39[COMRAM] enum E6887
 36431 ;; Return value:  Size  Location     Type
 36432 ;;                  1    wreg      void 
 36433 ;; Registers used:
 36434 ;;		wreg, status,2, status,0, cstack
 36435 ;; Tracked objects:
 36436 ;;		On entry : 0/0
 36437 ;;		On exit  : 0/0
 36438 ;;		Unchanged: 0/0
 36439 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36440 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36441 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36442 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36443 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36444 ;;Total ram usage:        9 bytes
 36445 ;; Hardware stack levels used:    1
 36446 ;; Hardware stack levels required when called:    4
 36447 ;; This function calls:
 36448 ;;		__flash_compare_page_to_buffer
 36449 ;;		__flash_copy_page_to_buffer
 36450 ;;		__flash_write_page_from_buffer
 36451 ;;		__flash_write_to_buffer
 36452 ;;		_flash_is_busy
 36453 ;;		_spi_set_configuration
 36454 ;; This function is called by:
 36455 ;;		__write_fat
 36456 ;;		__write_root
 36457 ;;		__delete_root
 36458 ;;		_fat_append_to_file
 36459 ;;		__write_file_size
 36460 ;; This function uses a non-reentrant model
 36461 ;;
 36462                           
 36463                           	psect	text185
 36464  0069B6                     __ptext185:
 36465                           	opt stack 0
 36466  0069B6                     _flash_partial_write:
 36467                           	opt stack 21
 36468                           
 36469                           ;flash.c: 473: flashMatchResult_t match;;flash.c: 476: spi_set_configuration(SPI_CONFIGU
      +                          RATION_INTERNAL);
 36470                           
 36471                           ;incstack = 0
 36472  0069B6  0E00               	movlw	0
 36473  0069B8  EC2C  F024         	call	_spi_set_configuration
 36474  0069BC  EC67  F03F         	call	_flash_is_busy	;wreg free
 36475  0069C0  0900               	iorlw	0
 36476  0069C2  A4D8               	btfss	status,2,c
 36477  0069C4  D7FB               	goto	l1820
 36478                           
 36479                           ;flash.c: 482: _flash_copy_page_to_buffer(page, FLASH_BUFFER_1);
 36480  0069C6  C020  F014         	movff	flash_partial_write@page,__flash_copy_page_to_buffer@page
 36481  0069CA  C021  F015         	movff	flash_partial_write@page+1,__flash_copy_page_to_buffer@page+1
 36482  0069CE  0E00               	movlw	0
 36483  0069D0  6E16               	movwf	__flash_copy_page_to_buffer@buffer,c
 36484  0069D2  ECBE  F038         	call	__flash_copy_page_to_buffer	;wreg free
 36485                           
 36486                           ;flash.c: 485: _flash_write_to_buffer(start, data, length, FLASH_BUFFER_1);
 36487  0069D6  C022  F014         	movff	flash_partial_write@start,__flash_write_to_buffer@start
 36488  0069DA  C023  F015         	movff	flash_partial_write@start+1,__flash_write_to_buffer@start+1
 36489  0069DE  C026  F016         	movff	flash_partial_write@data,__flash_write_to_buffer@data
 36490  0069E2  C027  F017         	movff	flash_partial_write@data+1,__flash_write_to_buffer@data+1
 36491  0069E6  C024  F018         	movff	flash_partial_write@length,__flash_write_to_buffer@data_length
 36492  0069EA  C025  F019         	movff	flash_partial_write@length+1,__flash_write_to_buffer@data_length+1
 36493  0069EE  0E00               	movlw	0
 36494  0069F0  6E1A               	movwf	__flash_write_to_buffer@buffer,c
 36495  0069F2  EC91  F03A         	call	__flash_write_to_buffer	;wreg free
 36496                           
 36497                           ;flash.c: 488: match = _flash_compare_page_to_buffer(page, FLASH_BUFFER_1);
 36498  0069F6  C020  F014         	movff	flash_partial_write@page,__flash_compare_page_to_buffer@page
 36499  0069FA  C021  F015         	movff	flash_partial_write@page+1,__flash_compare_page_to_buffer@page+1
 36500  0069FE  0E00               	movlw	0
 36501  006A00  6E16               	movwf	__flash_compare_page_to_buffer@buffer,c
 36502  006A02  EC43  F033         	call	__flash_compare_page_to_buffer	;wreg free
 36503  006A06  6E28               	movwf	flash_partial_write@match,c
 36504                           
 36505                           ;flash.c: 491: if(match==DATA_DOES_NOT_MATCH)
 36506  006A08  0428               	decf	flash_partial_write@match,w,c
 36507  006A0A  A4D8               	btfss	status,2,c
 36508  006A0C  D008               	goto	l1822
 36509                           
 36510                           ;flash.c: 492: {;flash.c: 493: _flash_write_page_from_buffer(page, FLASH_BUFFER_1);
 36511  006A0E  C020  F014         	movff	flash_partial_write@page,__flash_write_page_from_buffer@page
 36512  006A12  C021  F015         	movff	flash_partial_write@page+1,__flash_write_page_from_buffer@page+1
 36513  006A16  0E00               	movlw	0
 36514  006A18  6E16               	movwf	__flash_write_page_from_buffer@buffer,c
 36515  006A1A  EC92  F038         	call	__flash_write_page_from_buffer	;wreg free
 36516  006A1E                     l1822:
 36517                           
 36518                           ;flash.c: 494: };flash.c: 497: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36519  006A1E  0E01               	movlw	1
 36520  006A20  EC2C  F024         	call	_spi_set_configuration
 36521  006A24  0012               	return		;funcret
 36522  006A26                     __end_of_flash_partial_write:
 36523                           	opt stack 0
 36524                           tosu	equ	0xFFF
 36525                           tosh	equ	0xFFE
 36526                           tosl	equ	0xFFD
 36527                           pclath	equ	0xFFA
 36528                           tblptru	equ	0xFF8
 36529                           tblptrh	equ	0xFF7
 36530                           tblptrl	equ	0xFF6
 36531                           tablat	equ	0xFF5
 36532                           prodh	equ	0xFF4
 36533                           prodl	equ	0xFF3
 36534                           intcon	equ	0xFF2
 36535                           intcon2	equ	0xFF1
 36536                           intcon3	equ	0xFF0
 36537                           indf0	equ	0xFEF
 36538                           postinc0	equ	0xFEE
 36539                           fsr0h	equ	0xFEA
 36540                           fsr0l	equ	0xFE9
 36541                           wreg	equ	0xFE8
 36542                           indf1	equ	0xFE7
 36543                           postdec1	equ	0xFE5
 36544                           plusw1	equ	0xFE3
 36545                           fsr1h	equ	0xFE2
 36546                           fsr1l	equ	0xFE1
 36547                           indf2	equ	0xFDF
 36548                           postinc2	equ	0xFDE
 36549                           postdec2	equ	0xFDD
 36550                           plusw2	equ	0xFDB
 36551                           fsr2h	equ	0xFDA
 36552                           fsr2l	equ	0xFD9
 36553                           status	equ	0xFD8
 36554                           
 36555 ;; *************** function _flash_is_busy *****************
 36556 ;; Defined at:
 36557 ;;		line 354 in file "flash.c"
 36558 ;; Parameters:    Size  Location     Type
 36559 ;;		None
 36560 ;; Auto vars:     Size  Location     Type
 36561 ;;  result          1   19[COMRAM] unsigned char 
 36562 ;; Return value:  Size  Location     Type
 36563 ;;                  1    wreg      unsigned char 
 36564 ;; Registers used:
 36565 ;;		wreg, status,2, status,0, cstack
 36566 ;; Tracked objects:
 36567 ;;		On entry : 0/0
 36568 ;;		On exit  : 0/0
 36569 ;;		Unchanged: 0/0
 36570 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36571 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36572 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36573 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36574 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36575 ;;Total ram usage:        1 bytes
 36576 ;; Hardware stack levels used:    1
 36577 ;; Hardware stack levels required when called:    3
 36578 ;; This function calls:
 36579 ;;		__flash_is_busy
 36580 ;;		_spi_set_configuration
 36581 ;; This function is called by:
 36582 ;;		_flash_partial_write
 36583 ;;		_api_prepare
 36584 ;;		__fill_buffer_get_status
 36585 ;; This function uses a non-reentrant model
 36586 ;;
 36587                           
 36588                           	psect	text186
 36589  007ECE                     __ptext186:
 36590                           	opt stack 0
 36591  007ECE                     _flash_is_busy:
 36592                           	opt stack 26
 36593                           
 36594                           ;flash.c: 356: uint8_t result;;flash.c: 359: spi_set_configuration(SPI_CONFIGURATION_INT
      +                          ERNAL);
 36595                           
 36596                           ;incstack = 0
 36597  007ECE  0E00               	movlw	0
 36598  007ED0  EC2C  F024         	call	_spi_set_configuration
 36599                           
 36600                           ;flash.c: 362: result = _flash_is_busy();
 36601  007ED4  ECEB  F03E         	call	__flash_is_busy	;wreg free
 36602  007ED8  6E14               	movwf	flash_is_busy@result,c
 36603                           
 36604                           ;flash.c: 365: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 36605  007EDA  0E01               	movlw	1
 36606  007EDC  EC2C  F024         	call	_spi_set_configuration
 36607                           
 36608                           ;flash.c: 368: return result;
 36609  007EE0  5014               	movf	flash_is_busy@result,w,c
 36610  007EE2  0012               	return	
 36611  007EE4                     __end_of_flash_is_busy:
 36612                           	opt stack 0
 36613                           tosu	equ	0xFFF
 36614                           tosh	equ	0xFFE
 36615                           tosl	equ	0xFFD
 36616                           pclath	equ	0xFFA
 36617                           tblptru	equ	0xFF8
 36618                           tblptrh	equ	0xFF7
 36619                           tblptrl	equ	0xFF6
 36620                           tablat	equ	0xFF5
 36621                           prodh	equ	0xFF4
 36622                           prodl	equ	0xFF3
 36623                           intcon	equ	0xFF2
 36624                           intcon2	equ	0xFF1
 36625                           intcon3	equ	0xFF0
 36626                           indf0	equ	0xFEF
 36627                           postinc0	equ	0xFEE
 36628                           fsr0h	equ	0xFEA
 36629                           fsr0l	equ	0xFE9
 36630                           wreg	equ	0xFE8
 36631                           indf1	equ	0xFE7
 36632                           postdec1	equ	0xFE5
 36633                           plusw1	equ	0xFE3
 36634                           fsr1h	equ	0xFE2
 36635                           fsr1l	equ	0xFE1
 36636                           indf2	equ	0xFDF
 36637                           postinc2	equ	0xFDE
 36638                           postdec2	equ	0xFDD
 36639                           plusw2	equ	0xFDB
 36640                           fsr2h	equ	0xFDA
 36641                           fsr2l	equ	0xFD9
 36642                           status	equ	0xFD8
 36643                           
 36644 ;; *************** function __flash_write_to_buffer *****************
 36645 ;; Defined at:
 36646 ;;		line 232 in file "flash.c"
 36647 ;; Parameters:    Size  Location     Type
 36648 ;;  start           2   19[COMRAM] unsigned int 
 36649 ;;  data            2   21[COMRAM] PTR unsigned char 
 36650 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36651 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36652 ;;		 -> RAM(3759), 
 36653 ;;  data_length     2   23[COMRAM] unsigned int 
 36654 ;;  buffer          1   25[COMRAM] enum E6883
 36655 ;; Auto vars:     Size  Location     Type
 36656 ;;  command         4   26[COMRAM] unsigned char [4]
 36657 ;; Return value:  Size  Location     Type
 36658 ;;                  1    wreg      void 
 36659 ;; Registers used:
 36660 ;;		wreg, status,2, status,0, cstack
 36661 ;; Tracked objects:
 36662 ;;		On entry : 0/0
 36663 ;;		On exit  : 0/0
 36664 ;;		Unchanged: 0/0
 36665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36666 ;;      Params:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36667 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36669 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36670 ;;Total ram usage:       11 bytes
 36671 ;; Hardware stack levels used:    1
 36672 ;; Hardware stack levels required when called:    3
 36673 ;; This function calls:
 36674 ;;		__flash_is_busy
 36675 ;;		_spi_tx_tx
 36676 ;; This function is called by:
 36677 ;;		_flash_page_write
 36678 ;;		_flash_partial_write
 36679 ;; This function uses a non-reentrant model
 36680 ;;
 36681                           
 36682                           	psect	text187
 36683  007522                     __ptext187:
 36684                           	opt stack 0
 36685  007522                     __flash_write_to_buffer:
 36686                           	opt stack 23
 36687                           
 36688                           ;flash.c: 234: uint8_t command[4];;flash.c: 237: while(_flash_is_busy());
 36689                           
 36690                           ;incstack = 0
 36691  007522  ECEB  F03E         	call	__flash_is_busy	;wreg free
 36692  007526  0900               	iorlw	0
 36693  007528  A4D8               	btfss	status,2,c
 36694  00752A  D7FB               	goto	__flash_write_to_buffer
 36695                           
 36696                           ;flash.c: 240: if(buffer==FLASH_BUFFER_1)
 36697  00752C  501A               	movf	__flash_write_to_buffer@buffer,w,c
 36698  00752E  A4D8               	btfss	status,2,c
 36699  007530  D002               	goto	l1761
 36700                           
 36701                           ;flash.c: 241: command[0] = 0x84;
 36702  007532  0E84               	movlw	132
 36703  007534  6E1B               	movwf	__flash_write_to_buffer@command,c
 36704  007536                     l1761:
 36705                           
 36706                           ;flash.c: 242: if(buffer==FLASH_BUFFER_2)
 36707  007536  041A               	decf	__flash_write_to_buffer@buffer,w,c
 36708  007538  A4D8               	btfss	status,2,c
 36709  00753A  D002               	goto	l1762
 36710                           
 36711                           ;flash.c: 243: command[0] = 0x87;
 36712  00753C  0E87               	movlw	135
 36713  00753E  6E1B               	movwf	__flash_write_to_buffer@command,c
 36714  007540                     l1762:
 36715                           
 36716                           ;flash.c: 245: command[1] = 0x00;
 36717  007540  0E00               	movlw	0
 36718  007542  6E1C               	movwf	__flash_write_to_buffer@command+1,c
 36719                           
 36720                           ;flash.c: 246: command[2] = ((unsigned char)(((start)>>8)&0xFF));
 36721  007544  5015               	movf	__flash_write_to_buffer@start+1,w,c
 36722  007546  6E1D               	movwf	__flash_write_to_buffer@command+2,c
 36723                           
 36724                           ;flash.c: 247: command[3] = ((unsigned char)((start)&0xFF));
 36725  007548  C014  F01E         	movff	__flash_write_to_buffer@start,__flash_write_to_buffer@command+3
 36726                           
 36727                           ;flash.c: 250: spi_tx_tx(command, 4, data, data_length);
 36728  00754C  0E1B               	movlw	low __flash_write_to_buffer@command
 36729  00754E  6E01               	movwf	spi_tx_tx@command,c
 36730  007550  0E00               	movlw	high __flash_write_to_buffer@command
 36731  007552  6E02               	movwf	spi_tx_tx@command+1,c
 36732  007554  0E00               	movlw	0
 36733  007556  6E04               	movwf	spi_tx_tx@command_length+1,c
 36734  007558  0E04               	movlw	4
 36735  00755A  6E03               	movwf	spi_tx_tx@command_length,c
 36736  00755C  C016  F005         	movff	__flash_write_to_buffer@data,spi_tx_tx@data
 36737  007560  C017  F006         	movff	__flash_write_to_buffer@data+1,spi_tx_tx@data+1
 36738  007564  C018  F007         	movff	__flash_write_to_buffer@data_length,spi_tx_tx@data_length
 36739  007568  C019  F008         	movff	__flash_write_to_buffer@data_length+1,spi_tx_tx@data_length+1
 36740  00756C  ECBC  F031         	call	_spi_tx_tx	;wreg free
 36741  007570  0012               	return		;funcret
 36742  007572                     __end_of__flash_write_to_buffer:
 36743                           	opt stack 0
 36744                           tosu	equ	0xFFF
 36745                           tosh	equ	0xFFE
 36746                           tosl	equ	0xFFD
 36747                           pclath	equ	0xFFA
 36748                           tblptru	equ	0xFF8
 36749                           tblptrh	equ	0xFF7
 36750                           tblptrl	equ	0xFF6
 36751                           tablat	equ	0xFF5
 36752                           prodh	equ	0xFF4
 36753                           prodl	equ	0xFF3
 36754                           intcon	equ	0xFF2
 36755                           intcon2	equ	0xFF1
 36756                           intcon3	equ	0xFF0
 36757                           indf0	equ	0xFEF
 36758                           postinc0	equ	0xFEE
 36759                           fsr0h	equ	0xFEA
 36760                           fsr0l	equ	0xFE9
 36761                           wreg	equ	0xFE8
 36762                           indf1	equ	0xFE7
 36763                           postdec1	equ	0xFE5
 36764                           plusw1	equ	0xFE3
 36765                           fsr1h	equ	0xFE2
 36766                           fsr1l	equ	0xFE1
 36767                           indf2	equ	0xFDF
 36768                           postinc2	equ	0xFDE
 36769                           postdec2	equ	0xFDD
 36770                           plusw2	equ	0xFDB
 36771                           fsr2h	equ	0xFDA
 36772                           fsr2l	equ	0xFD9
 36773                           status	equ	0xFD8
 36774                           
 36775 ;; *************** function _spi_tx_tx *****************
 36776 ;; Defined at:
 36777 ;;		line 379 in file "spi.c"
 36778 ;; Parameters:    Size  Location     Type
 36779 ;;  command         2    0[COMRAM] PTR unsigned char 
 36780 ;;		 -> _flash_write_to_buffer@command(4), 
 36781 ;;  command_leng    2    2[COMRAM] unsigned int 
 36782 ;;  data            2    4[COMRAM] PTR unsigned char 
 36783 ;;		 -> buffer(512), fat_rename_file@root(32), fat_append_to_file@root(32), fat_create_file@root_entry(32), 
 36784 ;;		 -> _write_file_size@new_file_size(4), _delete_root@deleted_value(1), _write_fat@value(2), msd_buffer(512), 
 36785 ;;		 -> RAM(3759), 
 36786 ;;  data_length     2    6[COMRAM] unsigned int 
 36787 ;; Auto vars:     Size  Location     Type
 36788 ;;		None
 36789 ;; Return value:  Size  Location     Type
 36790 ;;                  1    wreg      void 
 36791 ;; Registers used:
 36792 ;;		wreg, status,2, status,0
 36793 ;; Tracked objects:
 36794 ;;		On entry : 0/0
 36795 ;;		On exit  : 0/0
 36796 ;;		Unchanged: 0/0
 36797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36798 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36799 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36800 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36801 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36802 ;;Total ram usage:       12 bytes
 36803 ;; Hardware stack levels used:    1
 36804 ;; This function calls:
 36805 ;;		Nothing
 36806 ;; This function is called by:
 36807 ;;		__flash_write_to_buffer
 36808 ;; This function uses a non-reentrant model
 36809 ;;
 36810                           
 36811                           	psect	text188
 36812  006378                     __ptext188:
 36813                           	opt stack 0
 36814  006378                     _spi_tx_tx:
 36815                           	opt stack 25
 36816                           
 36817                           ;spi.c: 382: DMACON1bits.SSCON1 = 0;
 36818                           
 36819                           ;incstack = 0
 36820  006378  9E88               	bcf	3976,7,c	;volatile
 36821                           
 36822                           ;spi.c: 383: DMACON1bits.SSCON0 = 0;
 36823  00637A  9C88               	bcf	3976,6,c	;volatile
 36824                           
 36825                           ;spi.c: 385: DMACON1bits.TXINC = 1;
 36826  00637C  8A88               	bsf	3976,5,c	;volatile
 36827                           
 36828                           ;spi.c: 387: DMACON1bits.RXINC = 0;
 36829  00637E  9888               	bcf	3976,4,c	;volatile
 36830                           
 36831                           ;spi.c: 389: DMACON1bits.DUPLEX1 = 0;
 36832  006380  9688               	bcf	3976,3,c	;volatile
 36833                           
 36834                           ;spi.c: 390: DMACON1bits.DUPLEX0 = 1;
 36835  006382  8488               	bsf	3976,2,c	;volatile
 36836                           
 36837                           ;spi.c: 392: DMACON1bits.DLYINTEN = 0;
 36838  006384  9288               	bcf	3976,1,c	;volatile
 36839                           
 36840                           ;spi.c: 394: DMACON2bits.DLYCYC = 0b0000;
 36841  006386  9886               	bcf	3974,4,c	;volatile
 36842  006388  9A86               	bcf	3974,5,c	;volatile
 36843  00638A  9C86               	bcf	3974,6,c	;volatile
 36844  00638C  9E86               	bcf	3974,7,c	;volatile
 36845                           
 36846                           ;spi.c: 396: DMACON2bits.INTLVL = 0b0000;
 36847  00638E  9086               	bcf	3974,0,c	;volatile
 36848  006390  9286               	bcf	3974,1,c	;volatile
 36849  006392  9486               	bcf	3974,2,c	;volatile
 36850  006394  9686               	bcf	3974,3,c	;volatile
 36851                           
 36852                           ;spi.c: 399: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 36853  006396  5002               	movf	spi_tx_tx@command+1,w,c
 36854  006398  6E6A               	movwf	3946,c	;volatile
 36855                           
 36856                           ;spi.c: 400: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 36857  00639A  C001  FF6B         	movff	spi_tx_tx@command,3947	;volatile
 36858                           
 36859                           ;spi.c: 403: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 36860  00639E  0EFF               	movlw	255
 36861  0063A0  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36862  0063A2  0EFF               	movlw	255
 36863  0063A4  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36864  0063A6  C003  F00B         	movff	spi_tx_tx@command_length,??_spi_tx_tx+2
 36865  0063AA  C004  F00C         	movff	spi_tx_tx@command_length+1,??_spi_tx_tx+3
 36866  0063AE  5009               	movf	??_spi_tx_tx,w,c
 36867  0063B0  260B               	addwf	??_spi_tx_tx+2,f,c
 36868  0063B2  500A               	movf	??_spi_tx_tx+1,w,c
 36869  0063B4  220C               	addwfc	??_spi_tx_tx+3,f,c
 36870  0063B6  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36871  0063BA  6A0C               	clrf	??_spi_tx_tx+3,c
 36872  0063BC  500B               	movf	??_spi_tx_tx+2,w,c
 36873  0063BE  6E66               	movwf	3942,c	;volatile
 36874                           
 36875                           ;spi.c: 404: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 36876  0063C0  0403               	decf	spi_tx_tx@command_length,w,c
 36877  0063C2  6E67               	movwf	3943,c	;volatile
 36878                           
 36879                           ;spi.c: 407: LATDbits.LD7 = 0;
 36880  0063C4  9E8C               	bcf	3980,7,c	;volatile
 36881                           
 36882                           ;spi.c: 410: DMACON1bits.DMAEN = 1;
 36883  0063C6  8088               	bsf	3976,0,c	;volatile
 36884  0063C8  B088               	btfsc	3976,0,c	;volatile
 36885  0063CA  D7FE               	goto	l2792
 36886                           
 36887                           ;spi.c: 414: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 36888  0063CC  5006               	movf	spi_tx_tx@data+1,w,c
 36889  0063CE  6E6A               	movwf	3946,c	;volatile
 36890                           
 36891                           ;spi.c: 415: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 36892  0063D0  C005  FF6B         	movff	spi_tx_tx@data,3947	;volatile
 36893                           
 36894                           ;spi.c: 418: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 36895  0063D4  0EFF               	movlw	255
 36896  0063D6  6E09               	movwf	??_spi_tx_tx& (0+255),c
 36897  0063D8  0EFF               	movlw	255
 36898  0063DA  6E0A               	movwf	(??_spi_tx_tx+1)& (0+255),c
 36899  0063DC  C007  F00B         	movff	spi_tx_tx@data_length,??_spi_tx_tx+2
 36900  0063E0  C008  F00C         	movff	spi_tx_tx@data_length+1,??_spi_tx_tx+3
 36901  0063E4  5009               	movf	??_spi_tx_tx,w,c
 36902  0063E6  260B               	addwf	??_spi_tx_tx+2,f,c
 36903  0063E8  500A               	movf	??_spi_tx_tx+1,w,c
 36904  0063EA  220C               	addwfc	??_spi_tx_tx+3,f,c
 36905  0063EC  C00C  F00B         	movff	??_spi_tx_tx+3,??_spi_tx_tx+2
 36906  0063F0  6A0C               	clrf	??_spi_tx_tx+3,c
 36907  0063F2  500B               	movf	??_spi_tx_tx+2,w,c
 36908  0063F4  6E66               	movwf	3942,c	;volatile
 36909                           
 36910                           ;spi.c: 419: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 36911  0063F6  0407               	decf	spi_tx_tx@data_length,w,c
 36912  0063F8  6E67               	movwf	3943,c	;volatile
 36913                           
 36914                           ;spi.c: 422: DMACON1bits.DMAEN = 1;
 36915  0063FA  8088               	bsf	3976,0,c	;volatile
 36916  0063FC  B088               	btfsc	3976,0,c	;volatile
 36917  0063FE  D7FE               	goto	l2795
 36918                           
 36919                           ;spi.c: 426: LATDbits.LD7 = 1;
 36920  006400  8E8C               	bsf	3980,7,c	;volatile
 36921  006402  0012               	return		;funcret
 36922  006404                     __end_of_spi_tx_tx:
 36923                           	opt stack 0
 36924                           tosu	equ	0xFFF
 36925                           tosh	equ	0xFFE
 36926                           tosl	equ	0xFFD
 36927                           pclath	equ	0xFFA
 36928                           tblptru	equ	0xFF8
 36929                           tblptrh	equ	0xFF7
 36930                           tblptrl	equ	0xFF6
 36931                           tablat	equ	0xFF5
 36932                           prodh	equ	0xFF4
 36933                           prodl	equ	0xFF3
 36934                           intcon	equ	0xFF2
 36935                           intcon2	equ	0xFF1
 36936                           intcon3	equ	0xFF0
 36937                           indf0	equ	0xFEF
 36938                           postinc0	equ	0xFEE
 36939                           fsr0h	equ	0xFEA
 36940                           fsr0l	equ	0xFE9
 36941                           wreg	equ	0xFE8
 36942                           indf1	equ	0xFE7
 36943                           postdec1	equ	0xFE5
 36944                           plusw1	equ	0xFE3
 36945                           fsr1h	equ	0xFE2
 36946                           fsr1l	equ	0xFE1
 36947                           indf2	equ	0xFDF
 36948                           postinc2	equ	0xFDE
 36949                           postdec2	equ	0xFDD
 36950                           plusw2	equ	0xFDB
 36951                           fsr2h	equ	0xFDA
 36952                           fsr2l	equ	0xFD9
 36953                           status	equ	0xFD8
 36954                           
 36955 ;; *************** function __flash_write_page_from_buffer *****************
 36956 ;; Defined at:
 36957 ;;		line 254 in file "flash.c"
 36958 ;; Parameters:    Size  Location     Type
 36959 ;;  page            2   19[COMRAM] unsigned int 
 36960 ;;  buffer          1   21[COMRAM] enum E6883
 36961 ;; Auto vars:     Size  Location     Type
 36962 ;;  command         4   25[COMRAM] unsigned char [4]
 36963 ;; Return value:  Size  Location     Type
 36964 ;;                  1    wreg      void 
 36965 ;; Registers used:
 36966 ;;		wreg, status,2, status,0, cstack
 36967 ;; Tracked objects:
 36968 ;;		On entry : 0/0
 36969 ;;		On exit  : 0/0
 36970 ;;		Unchanged: 0/0
 36971 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 36972 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36973 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36974 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36975 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 36976 ;;Total ram usage:       10 bytes
 36977 ;; Hardware stack levels used:    1
 36978 ;; Hardware stack levels required when called:    3
 36979 ;; This function calls:
 36980 ;;		__flash_is_busy
 36981 ;;		_spi_tx
 36982 ;; This function is called by:
 36983 ;;		_flash_page_write
 36984 ;;		_flash_partial_write
 36985 ;; This function uses a non-reentrant model
 36986 ;;
 36987                           
 36988                           	psect	text189
 36989  007124                     __ptext189:
 36990                           	opt stack 0
 36991  007124                     __flash_write_page_from_buffer:
 36992                           	opt stack 23
 36993                           
 36994                           ;flash.c: 256: uint8_t command[4];;flash.c: 259: while(_flash_is_busy());
 36995                           
 36996                           ;incstack = 0
 36997  007124  ECEB  F03E         	call	__flash_is_busy	;wreg free
 36998  007128  0900               	iorlw	0
 36999  00712A  A4D8               	btfss	status,2,c
 37000  00712C  D7FB               	goto	__flash_write_page_from_buffer
 37001                           
 37002                           ;flash.c: 262: if(buffer==FLASH_BUFFER_1)
 37003  00712E  5016               	movf	__flash_write_page_from_buffer@buffer,w,c
 37004  007130  A4D8               	btfss	status,2,c
 37005  007132  D002               	goto	l1769
 37006                           
 37007                           ;flash.c: 263: command[0] = 0x83;
 37008  007134  0E83               	movlw	131
 37009  007136  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37010  007138                     l1769:
 37011                           
 37012                           ;flash.c: 264: if(buffer==FLASH_BUFFER_2)
 37013  007138  0416               	decf	__flash_write_page_from_buffer@buffer,w,c
 37014  00713A  A4D8               	btfss	status,2,c
 37015  00713C  D002               	goto	l1770
 37016                           
 37017                           ;flash.c: 265: command[0] = 0x86;
 37018  00713E  0E86               	movlw	134
 37019  007140  6E1A               	movwf	__flash_write_page_from_buffer@command,c
 37020  007142                     l1770:
 37021                           
 37022                           ;flash.c: 267: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37023  007142  C014  F017         	movff	__flash_write_page_from_buffer@page,??__flash_write_page_from_buffer
 37024  007146  C015  F018         	movff	__flash_write_page_from_buffer@page+1,??__flash_write_page_from_buffer+1
 37025  00714A  0E07               	movlw	7
 37026  00714C  6E19               	movwf	(??__flash_write_page_from_buffer+2)& (0+255),c
 37027  00714E                     u6275:
 37028  00714E  90D8               	bcf	status,0,c
 37029  007150  3218               	rrcf	??__flash_write_page_from_buffer+1,f,c
 37030  007152  3217               	rrcf	??__flash_write_page_from_buffer,f,c
 37031  007154  2E19               	decfsz	(??__flash_write_page_from_buffer+2)& (0+255),f,c
 37032  007156  D7FB               	goto	u6275
 37033  007158  5017               	movf	??__flash_write_page_from_buffer,w,c
 37034  00715A  6E1B               	movwf	__flash_write_page_from_buffer@command+1,c
 37035                           
 37036                           ;flash.c: 268: command[2] = ((unsigned char)((page<<1)&0xFF));
 37037  00715C  5014               	movf	__flash_write_page_from_buffer@page,w,c
 37038  00715E  2414               	addwf	__flash_write_page_from_buffer@page,w,c
 37039  007160  6E1C               	movwf	__flash_write_page_from_buffer@command+2,c
 37040                           
 37041                           ;flash.c: 269: command[3] = 0x00;
 37042  007162  0E00               	movlw	0
 37043  007164  6E1D               	movwf	__flash_write_page_from_buffer@command+3,c
 37044                           
 37045                           ;flash.c: 272: spi_tx(command, 4);
 37046  007166  0E1A               	movlw	low __flash_write_page_from_buffer@command
 37047  007168  6E01               	movwf	spi_tx@data,c
 37048  00716A  0E00               	movlw	high __flash_write_page_from_buffer@command
 37049  00716C  6E02               	movwf	spi_tx@data+1,c
 37050  00716E  0E00               	movlw	0
 37051  007170  6E04               	movwf	spi_tx@length+1,c
 37052  007172  0E04               	movlw	4
 37053  007174  6E03               	movwf	spi_tx@length,c
 37054  007176  ECEA  F038         	call	_spi_tx	;wreg free
 37055  00717A  0012               	return		;funcret
 37056  00717C                     __end_of__flash_write_page_from_buffer:
 37057                           	opt stack 0
 37058                           tosu	equ	0xFFF
 37059                           tosh	equ	0xFFE
 37060                           tosl	equ	0xFFD
 37061                           pclath	equ	0xFFA
 37062                           tblptru	equ	0xFF8
 37063                           tblptrh	equ	0xFF7
 37064                           tblptrl	equ	0xFF6
 37065                           tablat	equ	0xFF5
 37066                           prodh	equ	0xFF4
 37067                           prodl	equ	0xFF3
 37068                           intcon	equ	0xFF2
 37069                           intcon2	equ	0xFF1
 37070                           intcon3	equ	0xFF0
 37071                           indf0	equ	0xFEF
 37072                           postinc0	equ	0xFEE
 37073                           fsr0h	equ	0xFEA
 37074                           fsr0l	equ	0xFE9
 37075                           wreg	equ	0xFE8
 37076                           indf1	equ	0xFE7
 37077                           postdec1	equ	0xFE5
 37078                           plusw1	equ	0xFE3
 37079                           fsr1h	equ	0xFE2
 37080                           fsr1l	equ	0xFE1
 37081                           indf2	equ	0xFDF
 37082                           postinc2	equ	0xFDE
 37083                           postdec2	equ	0xFDD
 37084                           plusw2	equ	0xFDB
 37085                           fsr2h	equ	0xFDA
 37086                           fsr2l	equ	0xFD9
 37087                           status	equ	0xFD8
 37088                           
 37089 ;; *************** function __flash_copy_page_to_buffer *****************
 37090 ;; Defined at:
 37091 ;;		line 150 in file "flash.c"
 37092 ;; Parameters:    Size  Location     Type
 37093 ;;  page            2   19[COMRAM] unsigned int 
 37094 ;;  buffer          1   21[COMRAM] enum E6883
 37095 ;; Auto vars:     Size  Location     Type
 37096 ;;  command         4   25[COMRAM] unsigned char [4]
 37097 ;; Return value:  Size  Location     Type
 37098 ;;                  1    wreg      void 
 37099 ;; Registers used:
 37100 ;;		wreg, status,2, status,0, cstack
 37101 ;; Tracked objects:
 37102 ;;		On entry : 0/0
 37103 ;;		On exit  : 0/0
 37104 ;;		Unchanged: 0/0
 37105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37106 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37107 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37108 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37109 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37110 ;;Total ram usage:       10 bytes
 37111 ;; Hardware stack levels used:    1
 37112 ;; Hardware stack levels required when called:    3
 37113 ;; This function calls:
 37114 ;;		__flash_is_busy
 37115 ;;		_spi_tx
 37116 ;; This function is called by:
 37117 ;;		_flash_partial_write
 37118 ;; This function uses a non-reentrant model
 37119 ;;
 37120                           
 37121                           	psect	text190
 37122  00717C                     __ptext190:
 37123                           	opt stack 0
 37124  00717C                     __flash_copy_page_to_buffer:
 37125                           	opt stack 21
 37126                           
 37127                           ;flash.c: 152: uint8_t command[4];;flash.c: 155: while(_flash_is_busy());
 37128                           
 37129                           ;incstack = 0
 37130  00717C  ECEB  F03E         	call	__flash_is_busy	;wreg free
 37131  007180  0900               	iorlw	0
 37132  007182  A4D8               	btfss	status,2,c
 37133  007184  D7FB               	goto	__flash_copy_page_to_buffer
 37134                           
 37135                           ;flash.c: 158: if(buffer==FLASH_BUFFER_1)
 37136  007186  5016               	movf	__flash_copy_page_to_buffer@buffer,w,c
 37137  007188  A4D8               	btfss	status,2,c
 37138  00718A  D002               	goto	l1734
 37139                           
 37140                           ;flash.c: 159: command[0] = 0x53;
 37141  00718C  0E53               	movlw	83
 37142  00718E  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37143  007190                     l1734:
 37144                           
 37145                           ;flash.c: 160: if(buffer==FLASH_BUFFER_2)
 37146  007190  0416               	decf	__flash_copy_page_to_buffer@buffer,w,c
 37147  007192  A4D8               	btfss	status,2,c
 37148  007194  D002               	goto	l1735
 37149                           
 37150                           ;flash.c: 161: command[0] = 0x55;
 37151  007196  0E55               	movlw	85
 37152  007198  6E1A               	movwf	__flash_copy_page_to_buffer@command,c
 37153  00719A                     l1735:
 37154                           
 37155                           ;flash.c: 163: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37156  00719A  C014  F017         	movff	__flash_copy_page_to_buffer@page,??__flash_copy_page_to_buffer
 37157  00719E  C015  F018         	movff	__flash_copy_page_to_buffer@page+1,??__flash_copy_page_to_buffer+1
 37158  0071A2  0E07               	movlw	7
 37159  0071A4  6E19               	movwf	(??__flash_copy_page_to_buffer+2)& (0+255),c
 37160  0071A6                     u6475:
 37161  0071A6  90D8               	bcf	status,0,c
 37162  0071A8  3218               	rrcf	??__flash_copy_page_to_buffer+1,f,c
 37163  0071AA  3217               	rrcf	??__flash_copy_page_to_buffer,f,c
 37164  0071AC  2E19               	decfsz	(??__flash_copy_page_to_buffer+2)& (0+255),f,c
 37165  0071AE  D7FB               	goto	u6475
 37166  0071B0  5017               	movf	??__flash_copy_page_to_buffer,w,c
 37167  0071B2  6E1B               	movwf	__flash_copy_page_to_buffer@command+1,c
 37168                           
 37169                           ;flash.c: 164: command[2] = ((unsigned char)((page<<1)&0xFF));
 37170  0071B4  5014               	movf	__flash_copy_page_to_buffer@page,w,c
 37171  0071B6  2414               	addwf	__flash_copy_page_to_buffer@page,w,c
 37172  0071B8  6E1C               	movwf	__flash_copy_page_to_buffer@command+2,c
 37173                           
 37174                           ;flash.c: 165: command[3] = 0x00;
 37175  0071BA  0E00               	movlw	0
 37176  0071BC  6E1D               	movwf	__flash_copy_page_to_buffer@command+3,c
 37177                           
 37178                           ;flash.c: 168: spi_tx(command, 4);
 37179  0071BE  0E1A               	movlw	low __flash_copy_page_to_buffer@command
 37180  0071C0  6E01               	movwf	spi_tx@data,c
 37181  0071C2  0E00               	movlw	high __flash_copy_page_to_buffer@command
 37182  0071C4  6E02               	movwf	spi_tx@data+1,c
 37183  0071C6  0E00               	movlw	0
 37184  0071C8  6E04               	movwf	spi_tx@length+1,c
 37185  0071CA  0E04               	movlw	4
 37186  0071CC  6E03               	movwf	spi_tx@length,c
 37187  0071CE  ECEA  F038         	call	_spi_tx	;wreg free
 37188  0071D2  0012               	return		;funcret
 37189  0071D4                     __end_of__flash_copy_page_to_buffer:
 37190                           	opt stack 0
 37191                           tosu	equ	0xFFF
 37192                           tosh	equ	0xFFE
 37193                           tosl	equ	0xFFD
 37194                           pclath	equ	0xFFA
 37195                           tblptru	equ	0xFF8
 37196                           tblptrh	equ	0xFF7
 37197                           tblptrl	equ	0xFF6
 37198                           tablat	equ	0xFF5
 37199                           prodh	equ	0xFF4
 37200                           prodl	equ	0xFF3
 37201                           intcon	equ	0xFF2
 37202                           intcon2	equ	0xFF1
 37203                           intcon3	equ	0xFF0
 37204                           indf0	equ	0xFEF
 37205                           postinc0	equ	0xFEE
 37206                           fsr0h	equ	0xFEA
 37207                           fsr0l	equ	0xFE9
 37208                           wreg	equ	0xFE8
 37209                           indf1	equ	0xFE7
 37210                           postdec1	equ	0xFE5
 37211                           plusw1	equ	0xFE3
 37212                           fsr1h	equ	0xFE2
 37213                           fsr1l	equ	0xFE1
 37214                           indf2	equ	0xFDF
 37215                           postinc2	equ	0xFDE
 37216                           postdec2	equ	0xFDD
 37217                           plusw2	equ	0xFDB
 37218                           fsr2h	equ	0xFDA
 37219                           fsr2l	equ	0xFD9
 37220                           status	equ	0xFD8
 37221                           
 37222 ;; *************** function __flash_compare_page_to_buffer *****************
 37223 ;; Defined at:
 37224 ;;		line 172 in file "flash.c"
 37225 ;; Parameters:    Size  Location     Type
 37226 ;;  page            2   19[COMRAM] unsigned int 
 37227 ;;  buffer          1   21[COMRAM] enum E6883
 37228 ;; Auto vars:     Size  Location     Type
 37229 ;;  command         4   27[COMRAM] unsigned char [4]
 37230 ;;  status          2   25[COMRAM] unsigned int 
 37231 ;; Return value:  Size  Location     Type
 37232 ;;                  1    wreg      enum E6887
 37233 ;; Registers used:
 37234 ;;		wreg, status,2, status,0, cstack
 37235 ;; Tracked objects:
 37236 ;;		On entry : 0/0
 37237 ;;		On exit  : 0/0
 37238 ;;		Unchanged: 0/0
 37239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37240 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37241 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37242 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37243 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37244 ;;Total ram usage:       12 bytes
 37245 ;; Hardware stack levels used:    1
 37246 ;; Hardware stack levels required when called:    3
 37247 ;; This function calls:
 37248 ;;		__flash_get_status
 37249 ;;		__flash_is_busy
 37250 ;;		_spi_tx
 37251 ;; This function is called by:
 37252 ;;		_flash_page_write
 37253 ;;		_flash_partial_write
 37254 ;; This function uses a non-reentrant model
 37255 ;;
 37256                           
 37257                           	psect	text191
 37258  006686                     __ptext191:
 37259                           	opt stack 0
 37260  006686                     __flash_compare_page_to_buffer:
 37261                           	opt stack 23
 37262                           
 37263                           ;flash.c: 174: uint8_t command[4];;flash.c: 175: uint16_t status;;flash.c: 178: while(_f
      +                          lash_is_busy());
 37264                           
 37265                           ;incstack = 0
 37266  006686  ECEB  F03E         	call	__flash_is_busy	;wreg free
 37267  00668A  0900               	iorlw	0
 37268  00668C  A4D8               	btfss	status,2,c
 37269  00668E  D7FB               	goto	__flash_compare_page_to_buffer
 37270                           
 37271                           ;flash.c: 181: if(buffer==FLASH_BUFFER_1)
 37272  006690  5016               	movf	__flash_compare_page_to_buffer@buffer,w,c
 37273  006692  A4D8               	btfss	status,2,c
 37274  006694  D002               	goto	l1742
 37275                           
 37276                           ;flash.c: 182: command[0] = 0x60;
 37277  006696  0E60               	movlw	96
 37278  006698  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 37279  00669A                     l1742:
 37280                           
 37281                           ;flash.c: 183: if(buffer==FLASH_BUFFER_2)
 37282  00669A  0416               	decf	__flash_compare_page_to_buffer@buffer,w,c
 37283  00669C  A4D8               	btfss	status,2,c
 37284  00669E  D002               	goto	l1743
 37285                           
 37286                           ;flash.c: 184: command[0] = 0x60;
 37287  0066A0  0E60               	movlw	96
 37288  0066A2  6E1C               	movwf	__flash_compare_page_to_buffer@command,c
 37289  0066A4                     l1743:
 37290                           
 37291                           ;flash.c: 186: command[1] = ((unsigned char)(((page<<1)>>8)&0xFF));
 37292  0066A4  C014  F017         	movff	__flash_compare_page_to_buffer@page,??__flash_compare_page_to_buffer
 37293  0066A8  C015  F018         	movff	__flash_compare_page_to_buffer@page+1,??__flash_compare_page_to_buffer+1
 37294  0066AC  0E07               	movlw	7
 37295  0066AE  6E19               	movwf	(??__flash_compare_page_to_buffer+2)& (0+255),c
 37296  0066B0                     u6185:
 37297  0066B0  90D8               	bcf	status,0,c
 37298  0066B2  3218               	rrcf	??__flash_compare_page_to_buffer+1,f,c
 37299  0066B4  3217               	rrcf	??__flash_compare_page_to_buffer,f,c
 37300  0066B6  2E19               	decfsz	(??__flash_compare_page_to_buffer+2)& (0+255),f,c
 37301  0066B8  D7FB               	goto	u6185
 37302  0066BA  5017               	movf	??__flash_compare_page_to_buffer,w,c
 37303  0066BC  6E1D               	movwf	__flash_compare_page_to_buffer@command+1,c
 37304                           
 37305                           ;flash.c: 187: command[2] = ((unsigned char)((page<<1)&0xFF));
 37306  0066BE  5014               	movf	__flash_compare_page_to_buffer@page,w,c
 37307  0066C0  2414               	addwf	__flash_compare_page_to_buffer@page,w,c
 37308  0066C2  6E1E               	movwf	__flash_compare_page_to_buffer@command+2,c
 37309                           
 37310                           ;flash.c: 188: command[3] = 0x00;
 37311  0066C4  0E00               	movlw	0
 37312  0066C6  6E1F               	movwf	__flash_compare_page_to_buffer@command+3,c
 37313                           
 37314                           ;flash.c: 191: spi_tx(command, 4);
 37315  0066C8  0E1C               	movlw	low __flash_compare_page_to_buffer@command
 37316  0066CA  6E01               	movwf	spi_tx@data,c
 37317  0066CC  0E00               	movlw	high __flash_compare_page_to_buffer@command
 37318  0066CE  6E02               	movwf	spi_tx@data+1,c
 37319  0066D0  0E00               	movlw	0
 37320  0066D2  6E04               	movwf	spi_tx@length+1,c
 37321  0066D4  0E04               	movlw	4
 37322  0066D6  6E03               	movwf	spi_tx@length,c
 37323  0066D8  ECEA  F038         	call	_spi_tx	;wreg free
 37324  0066DC  ECEB  F03E         	call	__flash_is_busy	;wreg free
 37325  0066E0  0900               	iorlw	0
 37326  0066E2  A4D8               	btfss	status,2,c
 37327  0066E4  D7FB               	goto	l1745
 37328                           
 37329                           ;flash.c: 197: status = _flash_get_status();
 37330  0066E6  EC7F  F03D         	call	__flash_get_status	;wreg free
 37331  0066EA  C00D  F01A         	movff	?__flash_get_status,__flash_compare_page_to_buffer@status
 37332  0066EE  C00E  F01B         	movff	?__flash_get_status+1,__flash_compare_page_to_buffer@status+1
 37333                           
 37334                           ;flash.c: 200: if(status & 0b0000000001000000)
 37335  0066F2  AC1A               	btfss	__flash_compare_page_to_buffer@status,6,c
 37336  0066F4  D002               	goto	l1747
 37337                           
 37338                           ;flash.c: 201: {;flash.c: 203: return DATA_DOES_NOT_MATCH;
 37339  0066F6  0E01               	movlw	1
 37340                           
 37341                           ;flash.c: 204: }
 37342  0066F8  0012               	return	
 37343  0066FA                     l1747:
 37344                           
 37345                           ;flash.c: 205: else;flash.c: 206: {;flash.c: 208: return DATA_DOES_MATCH;
 37346  0066FA  0E00               	movlw	0
 37347  0066FC  0012               	return	
 37348  0066FE                     __end_of__flash_compare_page_to_buffer:
 37349                           	opt stack 0
 37350                           tosu	equ	0xFFF
 37351                           tosh	equ	0xFFE
 37352                           tosl	equ	0xFFD
 37353                           pclath	equ	0xFFA
 37354                           tblptru	equ	0xFF8
 37355                           tblptrh	equ	0xFF7
 37356                           tblptrl	equ	0xFF6
 37357                           tablat	equ	0xFF5
 37358                           prodh	equ	0xFF4
 37359                           prodl	equ	0xFF3
 37360                           intcon	equ	0xFF2
 37361                           intcon2	equ	0xFF1
 37362                           intcon3	equ	0xFF0
 37363                           indf0	equ	0xFEF
 37364                           postinc0	equ	0xFEE
 37365                           fsr0h	equ	0xFEA
 37366                           fsr0l	equ	0xFE9
 37367                           wreg	equ	0xFE8
 37368                           indf1	equ	0xFE7
 37369                           postdec1	equ	0xFE5
 37370                           plusw1	equ	0xFE3
 37371                           fsr1h	equ	0xFE2
 37372                           fsr1l	equ	0xFE1
 37373                           indf2	equ	0xFDF
 37374                           postinc2	equ	0xFDE
 37375                           postdec2	equ	0xFDD
 37376                           plusw2	equ	0xFDB
 37377                           fsr2h	equ	0xFDA
 37378                           fsr2l	equ	0xFD9
 37379                           status	equ	0xFD8
 37380                           
 37381 ;; *************** function __update_modified_time *****************
 37382 ;; Defined at:
 37383 ;;		line 53 in file "fat16.c"
 37384 ;; Parameters:    Size  Location     Type
 37385 ;;  root            2    4[COMRAM] PTR struct .
 37386 ;;		 -> fat_append_to_file@root(32), 
 37387 ;; Auto vars:     Size  Location     Type
 37388 ;;		None
 37389 ;; Return value:  Size  Location     Type
 37390 ;;                  1    wreg      void 
 37391 ;; Registers used:
 37392 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 37393 ;; Tracked objects:
 37394 ;;		On entry : 0/0
 37395 ;;		On exit  : 0/0
 37396 ;;		Unchanged: 0/0
 37397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37398 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37399 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37400 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37401 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37402 ;;Total ram usage:        2 bytes
 37403 ;; Hardware stack levels used:    1
 37404 ;; Hardware stack levels required when called:    1
 37405 ;; This function calls:
 37406 ;;		__get_date
 37407 ;;		__get_time
 37408 ;; This function is called by:
 37409 ;;		_fat_append_to_file
 37410 ;; This function uses a non-reentrant model
 37411 ;;
 37412                           
 37413                           	psect	text192
 37414  007A9A                     __ptext192:
 37415                           	opt stack 0
 37416  007A9A                     __update_modified_time:
 37417                           	opt stack 25
 37418                           
 37419                           ;fat16.c: 55: root->modifiedDate = _get_date();
 37420                           
 37421                           ;incstack = 0
 37422  007A9A  ECFE  F03F         	call	__get_date	;wreg free
 37423  007A9E  EE20 F018          	lfsr	2,24
 37424  007AA2  5005               	movf	__update_modified_time@root,w,c
 37425  007AA4  26D9               	addwf	fsr2l,f,c
 37426  007AA6  5006               	movf	__update_modified_time@root+1,w,c
 37427  007AA8  22DA               	addwfc	fsr2h,f,c
 37428  007AAA  C001  FFDE         	movff	?__get_date,postinc2
 37429  007AAE  C002  FFDD         	movff	?__get_date+1,postdec2
 37430                           
 37431                           ;fat16.c: 56: root->modifiedTime = _get_time();
 37432  007AB2  ECF9  F03F         	call	__get_time	;wreg free
 37433  007AB6  EE20 F016          	lfsr	2,22
 37434  007ABA  5005               	movf	__update_modified_time@root,w,c
 37435  007ABC  26D9               	addwf	fsr2l,f,c
 37436  007ABE  5006               	movf	__update_modified_time@root+1,w,c
 37437  007AC0  22DA               	addwfc	fsr2h,f,c
 37438  007AC2  C001  FFDE         	movff	?__get_time,postinc2
 37439  007AC6  C002  FFDD         	movff	?__get_time+1,postdec2
 37440  007ACA  0012               	return		;funcret
 37441  007ACC                     __end_of__update_modified_time:
 37442                           	opt stack 0
 37443                           tosu	equ	0xFFF
 37444                           tosh	equ	0xFFE
 37445                           tosl	equ	0xFFD
 37446                           pclath	equ	0xFFA
 37447                           tblptru	equ	0xFF8
 37448                           tblptrh	equ	0xFF7
 37449                           tblptrl	equ	0xFF6
 37450                           tablat	equ	0xFF5
 37451                           prodh	equ	0xFF4
 37452                           prodl	equ	0xFF3
 37453                           intcon	equ	0xFF2
 37454                           intcon2	equ	0xFF1
 37455                           intcon3	equ	0xFF0
 37456                           indf0	equ	0xFEF
 37457                           postinc0	equ	0xFEE
 37458                           fsr0h	equ	0xFEA
 37459                           fsr0l	equ	0xFE9
 37460                           wreg	equ	0xFE8
 37461                           indf1	equ	0xFE7
 37462                           postdec1	equ	0xFE5
 37463                           plusw1	equ	0xFE3
 37464                           fsr1h	equ	0xFE2
 37465                           fsr1l	equ	0xFE1
 37466                           indf2	equ	0xFDF
 37467                           postinc2	equ	0xFDE
 37468                           postdec2	equ	0xFDD
 37469                           plusw2	equ	0xFDB
 37470                           fsr2h	equ	0xFDA
 37471                           fsr2l	equ	0xFD9
 37472                           status	equ	0xFD8
 37473                           
 37474 ;; *************** function __get_time *****************
 37475 ;; Defined at:
 37476 ;;		line 29 in file "fat16.c"
 37477 ;; Parameters:    Size  Location     Type
 37478 ;;		None
 37479 ;; Auto vars:     Size  Location     Type
 37480 ;;  time            2    2[COMRAM] unsigned int 
 37481 ;; Return value:  Size  Location     Type
 37482 ;;                  2    0[COMRAM] unsigned int 
 37483 ;; Registers used:
 37484 ;;		None
 37485 ;; Tracked objects:
 37486 ;;		On entry : 0/0
 37487 ;;		On exit  : 0/0
 37488 ;;		Unchanged: 0/0
 37489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37490 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37491 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37492 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37493 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37494 ;;Total ram usage:        4 bytes
 37495 ;; Hardware stack levels used:    1
 37496 ;; This function calls:
 37497 ;;		Nothing
 37498 ;; This function is called by:
 37499 ;;		__update_modified_time
 37500 ;;		_fat_create_file
 37501 ;; This function uses a non-reentrant model
 37502 ;;
 37503                           
 37504                           	psect	text193
 37505  007FF2                     __ptext193:
 37506                           	opt stack 0
 37507  007FF2                     __get_time:
 37508                           	opt stack 26
 37509                           
 37510                           ;fat16.c: 31: uint16_t time;;fat16.c: 38: return time;
 37511                           
 37512                           ;incstack = 0
 37513  007FF2  C003  F001         	movff	__get_time@time,?__get_time
 37514  007FF6  C004  F002         	movff	__get_time@time+1,?__get_time+1
 37515  007FFA  0012               	return		;funcret
 37516  007FFC                     __end_of__get_time:
 37517                           	opt stack 0
 37518                           tosu	equ	0xFFF
 37519                           tosh	equ	0xFFE
 37520                           tosl	equ	0xFFD
 37521                           pclath	equ	0xFFA
 37522                           tblptru	equ	0xFF8
 37523                           tblptrh	equ	0xFF7
 37524                           tblptrl	equ	0xFF6
 37525                           tablat	equ	0xFF5
 37526                           prodh	equ	0xFF4
 37527                           prodl	equ	0xFF3
 37528                           intcon	equ	0xFF2
 37529                           intcon2	equ	0xFF1
 37530                           intcon3	equ	0xFF0
 37531                           indf0	equ	0xFEF
 37532                           postinc0	equ	0xFEE
 37533                           fsr0h	equ	0xFEA
 37534                           fsr0l	equ	0xFE9
 37535                           wreg	equ	0xFE8
 37536                           indf1	equ	0xFE7
 37537                           postdec1	equ	0xFE5
 37538                           plusw1	equ	0xFE3
 37539                           fsr1h	equ	0xFE2
 37540                           fsr1l	equ	0xFE1
 37541                           indf2	equ	0xFDF
 37542                           postinc2	equ	0xFDE
 37543                           postdec2	equ	0xFDD
 37544                           plusw2	equ	0xFDB
 37545                           fsr2h	equ	0xFDA
 37546                           fsr2l	equ	0xFD9
 37547                           status	equ	0xFD8
 37548                           
 37549 ;; *************** function __get_date *****************
 37550 ;; Defined at:
 37551 ;;		line 41 in file "fat16.c"
 37552 ;; Parameters:    Size  Location     Type
 37553 ;;		None
 37554 ;; Auto vars:     Size  Location     Type
 37555 ;;  date            2    2[COMRAM] unsigned int 
 37556 ;; Return value:  Size  Location     Type
 37557 ;;                  2    0[COMRAM] unsigned int 
 37558 ;; Registers used:
 37559 ;;		None
 37560 ;; Tracked objects:
 37561 ;;		On entry : 0/0
 37562 ;;		On exit  : 0/0
 37563 ;;		Unchanged: 0/0
 37564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37565 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37566 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37567 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37568 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37569 ;;Total ram usage:        4 bytes
 37570 ;; Hardware stack levels used:    1
 37571 ;; This function calls:
 37572 ;;		Nothing
 37573 ;; This function is called by:
 37574 ;;		__update_modified_time
 37575 ;;		_fat_create_file
 37576 ;; This function uses a non-reentrant model
 37577 ;;
 37578                           
 37579                           	psect	text194
 37580  007FFC                     __ptext194:
 37581                           	opt stack 0
 37582  007FFC                     __get_date:
 37583                           	opt stack 26
 37584                           
 37585                           ;fat16.c: 43: uint16_t date;;fat16.c: 50: return date;
 37586                           
 37587                           ;incstack = 0
 37588  007FFC  C003  F001         	movff	__get_date@date,?__get_date
 37589  008000  C004  F002         	movff	__get_date@date+1,?__get_date+1
 37590  008004  0012               	return		;funcret
 37591  008006                     __end_of__get_date:
 37592                           	opt stack 0
 37593                           tosu	equ	0xFFF
 37594                           tosh	equ	0xFFE
 37595                           tosl	equ	0xFFD
 37596                           pclath	equ	0xFFA
 37597                           tblptru	equ	0xFF8
 37598                           tblptrh	equ	0xFF7
 37599                           tblptrl	equ	0xFF6
 37600                           tablat	equ	0xFF5
 37601                           prodh	equ	0xFF4
 37602                           prodl	equ	0xFF3
 37603                           intcon	equ	0xFF2
 37604                           intcon2	equ	0xFF1
 37605                           intcon3	equ	0xFF0
 37606                           indf0	equ	0xFEF
 37607                           postinc0	equ	0xFEE
 37608                           fsr0h	equ	0xFEA
 37609                           fsr0l	equ	0xFE9
 37610                           wreg	equ	0xFE8
 37611                           indf1	equ	0xFE7
 37612                           postdec1	equ	0xFE5
 37613                           plusw1	equ	0xFE3
 37614                           fsr1h	equ	0xFE2
 37615                           fsr1l	equ	0xFE1
 37616                           indf2	equ	0xFDF
 37617                           postinc2	equ	0xFDE
 37618                           postdec2	equ	0xFDD
 37619                           plusw2	equ	0xFDB
 37620                           fsr2h	equ	0xFDA
 37621                           fsr2l	equ	0xFD9
 37622                           status	equ	0xFD8
 37623                           
 37624 ;; *************** function __sector_from_cluster *****************
 37625 ;; Defined at:
 37626 ;;		line 443 in file "fat16.c"
 37627 ;; Parameters:    Size  Location     Type
 37628 ;;  fat_cluster     2    0[COMRAM] unsigned int 
 37629 ;; Auto vars:     Size  Location     Type
 37630 ;;		None
 37631 ;; Return value:  Size  Location     Type
 37632 ;;                  2    0[COMRAM] unsigned int 
 37633 ;; Registers used:
 37634 ;;		wreg, status,2, status,0
 37635 ;; Tracked objects:
 37636 ;;		On entry : 0/0
 37637 ;;		On exit  : 0/0
 37638 ;;		Unchanged: 0/0
 37639 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37640 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37641 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37642 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37643 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37644 ;;Total ram usage:        2 bytes
 37645 ;; Hardware stack levels used:    1
 37646 ;; This function calls:
 37647 ;;		Nothing
 37648 ;; This function is called by:
 37649 ;;		_fat_append_to_file
 37650 ;;		_fat_read_from_file
 37651 ;; This function uses a non-reentrant model
 37652 ;;
 37653                           
 37654                           	psect	text195
 37655  007F60                     __ptext195:
 37656                           	opt stack 0
 37657  007F60                     __sector_from_cluster:
 37658                           	opt stack 27
 37659                           
 37660                           ;fat16.c: 445: return fat_cluster + 38 - 2;
 37661                           
 37662                           ;incstack = 0
 37663  007F60  0E24               	movlw	36
 37664  007F62  2401               	addwf	__sector_from_cluster@fat_cluster,w,c
 37665  007F64  6E01               	movwf	?__sector_from_cluster,c
 37666  007F66  0E00               	movlw	0
 37667  007F68  2002               	addwfc	__sector_from_cluster@fat_cluster+1,w,c
 37668  007F6A  6E02               	movwf	?__sector_from_cluster+1,c
 37669  007F6C  0012               	return	
 37670  007F6E                     __end_of__sector_from_cluster:
 37671                           	opt stack 0
 37672                           tosu	equ	0xFFF
 37673                           tosh	equ	0xFFE
 37674                           tosl	equ	0xFFD
 37675                           pclath	equ	0xFFA
 37676                           tblptru	equ	0xFF8
 37677                           tblptrh	equ	0xFF7
 37678                           tblptrl	equ	0xFF6
 37679                           tablat	equ	0xFF5
 37680                           prodh	equ	0xFF4
 37681                           prodl	equ	0xFF3
 37682                           intcon	equ	0xFF2
 37683                           intcon2	equ	0xFF1
 37684                           intcon3	equ	0xFF0
 37685                           indf0	equ	0xFEF
 37686                           postinc0	equ	0xFEE
 37687                           fsr0h	equ	0xFEA
 37688                           fsr0l	equ	0xFE9
 37689                           wreg	equ	0xFE8
 37690                           indf1	equ	0xFE7
 37691                           postdec1	equ	0xFE5
 37692                           plusw1	equ	0xFE3
 37693                           fsr1h	equ	0xFE2
 37694                           fsr1l	equ	0xFE1
 37695                           indf2	equ	0xFDF
 37696                           postinc2	equ	0xFDE
 37697                           postdec2	equ	0xFDD
 37698                           plusw2	equ	0xFDB
 37699                           fsr2h	equ	0xFDA
 37700                           fsr2l	equ	0xFD9
 37701                           status	equ	0xFD8
 37702                           
 37703 ;; *************** function __read_fat *****************
 37704 ;; Defined at:
 37705 ;;		line 169 in file "fat16.c"
 37706 ;; Parameters:    Size  Location     Type
 37707 ;;  cluster         2   47[COMRAM] unsigned int 
 37708 ;; Auto vars:     Size  Location     Type
 37709 ;;  value           2   53[COMRAM] unsigned int 
 37710 ;;  offset          2   51[COMRAM] unsigned int 
 37711 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37712 ;; Return value:  Size  Location     Type
 37713 ;;                  2   47[COMRAM] unsigned int 
 37714 ;; Registers used:
 37715 ;;		wreg, status,2, status,0, cstack
 37716 ;; Tracked objects:
 37717 ;;		On entry : 0/0
 37718 ;;		On exit  : 0/0
 37719 ;;		Unchanged: 0/0
 37720 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37721 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37722 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37723 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37724 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37725 ;;Total ram usage:        8 bytes
 37726 ;; Hardware stack levels used:    1
 37727 ;; Hardware stack levels required when called:    5
 37728 ;; This function calls:
 37729 ;;		_flash_partial_read
 37730 ;; This function is called by:
 37731 ;;		_fat_delete_file
 37732 ;;		_fat_append_to_file
 37733 ;;		_fat_read_from_file
 37734 ;; This function uses a non-reentrant model
 37735 ;;
 37736                           
 37737                           	psect	text196
 37738  007602                     __ptext196:
 37739                           	opt stack 0
 37740  007602                     __read_fat:
 37741                           	opt stack 22
 37742                           
 37743                           ;fat16.c: 171: uint16_t fat_sector;;fat16.c: 172: uint16_t offset;;fat16.c: 173: uint16_
      +                          t value;;fat16.c: 174: fat_sector = cluster>>8;
 37744                           
 37745                           ;incstack = 0
 37746  007602  5031               	movf	__read_fat@cluster+1,w,c
 37747  007604  6E32               	movwf	__read_fat@fat_sector,c
 37748  007606  6A33               	clrf	__read_fat@fat_sector+1,c
 37749                           
 37750                           ;fat16.c: 175: fat_sector += 2;
 37751  007608  0E02               	movlw	2
 37752  00760A  2632               	addwf	__read_fat@fat_sector,f,c
 37753  00760C  0E00               	movlw	0
 37754  00760E  2233               	addwfc	__read_fat@fat_sector+1,f,c
 37755                           
 37756                           ;fat16.c: 176: offset = cluster & 0xFF;
 37757  007610  5030               	movf	__read_fat@cluster,w,c
 37758  007612  6E34               	movwf	__read_fat@offset,c
 37759  007614  6A35               	clrf	__read_fat@offset+1,c
 37760                           
 37761                           ;fat16.c: 177: offset <<= 1;
 37762  007616  90D8               	bcf	status,0,c
 37763  007618  3634               	rlcf	__read_fat@offset,f,c
 37764  00761A  3635               	rlcf	__read_fat@offset+1,f,c
 37765                           
 37766                           ;fat16.c: 178: flash_partial_read(fat_sector, offset, 2, &value);
 37767  00761C  C032  F028         	movff	__read_fat@fat_sector,flash_partial_read@page
 37768  007620  C033  F029         	movff	__read_fat@fat_sector+1,flash_partial_read@page+1
 37769  007624  C034  F02A         	movff	__read_fat@offset,flash_partial_read@start
 37770  007628  C035  F02B         	movff	__read_fat@offset+1,flash_partial_read@start+1
 37771  00762C  0E00               	movlw	0
 37772  00762E  6E2D               	movwf	flash_partial_read@length+1,c
 37773  007630  0E02               	movlw	2
 37774  007632  6E2C               	movwf	flash_partial_read@length,c
 37775  007634  0E36               	movlw	low __read_fat@value
 37776  007636  6E2E               	movwf	flash_partial_read@data,c
 37777  007638  0E00               	movlw	high __read_fat@value
 37778  00763A  6E2F               	movwf	flash_partial_read@data+1,c
 37779  00763C  EC66  F03D         	call	_flash_partial_read	;wreg free
 37780                           
 37781                           ;fat16.c: 179: return value;
 37782  007640  C036  F030         	movff	__read_fat@value,?__read_fat
 37783  007644  C037  F031         	movff	__read_fat@value+1,?__read_fat+1
 37784  007648  0012               	return	
 37785  00764A                     __end_of__read_fat:
 37786                           	opt stack 0
 37787                           tosu	equ	0xFFF
 37788                           tosh	equ	0xFFE
 37789                           tosl	equ	0xFFD
 37790                           pclath	equ	0xFFA
 37791                           tblptru	equ	0xFF8
 37792                           tblptrh	equ	0xFF7
 37793                           tblptrl	equ	0xFF6
 37794                           tablat	equ	0xFF5
 37795                           prodh	equ	0xFF4
 37796                           prodl	equ	0xFF3
 37797                           intcon	equ	0xFF2
 37798                           intcon2	equ	0xFF1
 37799                           intcon3	equ	0xFF0
 37800                           indf0	equ	0xFEF
 37801                           postinc0	equ	0xFEE
 37802                           fsr0h	equ	0xFEA
 37803                           fsr0l	equ	0xFE9
 37804                           wreg	equ	0xFE8
 37805                           indf1	equ	0xFE7
 37806                           postdec1	equ	0xFE5
 37807                           plusw1	equ	0xFE3
 37808                           fsr1h	equ	0xFE2
 37809                           fsr1l	equ	0xFE1
 37810                           indf2	equ	0xFDF
 37811                           postinc2	equ	0xFDE
 37812                           postdec2	equ	0xFDD
 37813                           plusw2	equ	0xFDB
 37814                           fsr2h	equ	0xFDA
 37815                           fsr2l	equ	0xFD9
 37816                           status	equ	0xFD8
 37817                           
 37818 ;; *************** function __get_empty_cluster *****************
 37819 ;; Defined at:
 37820 ;;		line 107 in file "fat16.c"
 37821 ;; Parameters:    Size  Location     Type
 37822 ;;  first_cluste    2   47[COMRAM] unsigned int 
 37823 ;; Auto vars:     Size  Location     Type
 37824 ;;  cluster         2   55[COMRAM] unsigned int 
 37825 ;;  value           2   53[COMRAM] unsigned int 
 37826 ;;  offset          2   51[COMRAM] unsigned int 
 37827 ;;  fat_sector      2   49[COMRAM] unsigned int 
 37828 ;; Return value:  Size  Location     Type
 37829 ;;                  2   47[COMRAM] unsigned int 
 37830 ;; Registers used:
 37831 ;;		wreg, status,2, status,0, cstack
 37832 ;; Tracked objects:
 37833 ;;		On entry : 0/0
 37834 ;;		On exit  : 0/0
 37835 ;;		Unchanged: 0/0
 37836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37837 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37838 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37839 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37840 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37841 ;;Total ram usage:       10 bytes
 37842 ;; Hardware stack levels used:    1
 37843 ;; Hardware stack levels required when called:    5
 37844 ;; This function calls:
 37845 ;;		_flash_partial_read
 37846 ;; This function is called by:
 37847 ;;		_fat_create_file
 37848 ;;		_fat_append_to_file
 37849 ;; This function uses a non-reentrant model
 37850 ;;
 37851                           
 37852                           	psect	text197
 37853  006860                     __ptext197:
 37854                           	opt stack 0
 37855  006860                     __get_empty_cluster:
 37856                           	opt stack 21
 37857                           
 37858                           ;fat16.c: 109: uint16_t cluster;;fat16.c: 110: uint16_t fat_sector;;fat16.c: 111: uint16
      +                          _t offset;;fat16.c: 112: uint16_t value;;fat16.c: 115: for(cluster=first_cluster; cluste
      +                          r<(8154+2); ++cluster)
 37859                           
 37860                           ;incstack = 0
 37861  006860  C030  F038         	movff	__get_empty_cluster@first_cluster,__get_empty_cluster@cluster
 37862  006864  C031  F039         	movff	__get_empty_cluster@first_cluster+1,__get_empty_cluster@cluster+1
 37863  006868                     l10573:
 37864  006868  0EDC               	movlw	220
 37865  00686A  5C38               	subwf	__get_empty_cluster@cluster,w,c
 37866  00686C  0E1F               	movlw	31
 37867  00686E  5839               	subwfb	__get_empty_cluster@cluster+1,w,c
 37868  006870  B0D8               	btfsc	status,0,c
 37869  006872  D02B               	goto	u7590
 37870                           
 37871                           ;fat16.c: 116: {;fat16.c: 117: fat_sector = cluster>>8;
 37872  006874  5039               	movf	__get_empty_cluster@cluster+1,w,c
 37873  006876  6E32               	movwf	__get_empty_cluster@fat_sector,c
 37874  006878  6A33               	clrf	__get_empty_cluster@fat_sector+1,c
 37875                           
 37876                           ;fat16.c: 118: fat_sector += 2;
 37877  00687A  0E02               	movlw	2
 37878  00687C  2632               	addwf	__get_empty_cluster@fat_sector,f,c
 37879  00687E  0E00               	movlw	0
 37880  006880  2233               	addwfc	__get_empty_cluster@fat_sector+1,f,c
 37881                           
 37882                           ;fat16.c: 119: offset = cluster & 0xFF;
 37883  006882  5038               	movf	__get_empty_cluster@cluster,w,c
 37884  006884  6E34               	movwf	__get_empty_cluster@offset,c
 37885  006886  6A35               	clrf	__get_empty_cluster@offset+1,c
 37886                           
 37887                           ;fat16.c: 120: offset <<= 1;
 37888  006888  90D8               	bcf	status,0,c
 37889  00688A  3634               	rlcf	__get_empty_cluster@offset,f,c
 37890  00688C  3635               	rlcf	__get_empty_cluster@offset+1,f,c
 37891                           
 37892                           ;fat16.c: 121: flash_partial_read(fat_sector, offset, 2, &value);
 37893  00688E  C032  F028         	movff	__get_empty_cluster@fat_sector,flash_partial_read@page
 37894  006892  C033  F029         	movff	__get_empty_cluster@fat_sector+1,flash_partial_read@page+1
 37895  006896  C034  F02A         	movff	__get_empty_cluster@offset,flash_partial_read@start
 37896  00689A  C035  F02B         	movff	__get_empty_cluster@offset+1,flash_partial_read@start+1
 37897  00689E  0E00               	movlw	0
 37898  0068A0  6E2D               	movwf	flash_partial_read@length+1,c
 37899  0068A2  0E02               	movlw	2
 37900  0068A4  6E2C               	movwf	flash_partial_read@length,c
 37901  0068A6  0E36               	movlw	low __get_empty_cluster@value
 37902  0068A8  6E2E               	movwf	flash_partial_read@data,c
 37903  0068AA  0E00               	movlw	high __get_empty_cluster@value
 37904  0068AC  6E2F               	movwf	flash_partial_read@data+1,c
 37905  0068AE  EC66  F03D         	call	_flash_partial_read	;wreg free
 37906                           
 37907                           ;fat16.c: 122: if(value==0x0000)
 37908  0068B2  5036               	movf	__get_empty_cluster@value,w,c
 37909  0068B4  1037               	iorwf	__get_empty_cluster@value+1,w,c
 37910  0068B6  A4D8               	btfss	status,2,c
 37911  0068B8  D005               	goto	l1904
 37912                           
 37913                           ;fat16.c: 123: {;fat16.c: 124: return cluster;
 37914  0068BA  C038  F030         	movff	__get_empty_cluster@cluster,?__get_empty_cluster
 37915  0068BE  C039  F031         	movff	__get_empty_cluster@cluster+1,?__get_empty_cluster+1
 37916  0068C2  0012               	return	
 37917  0068C4                     l1904:
 37918  0068C4  4A38               	infsnz	__get_empty_cluster@cluster,f,c
 37919  0068C6  2A39               	incf	__get_empty_cluster@cluster+1,f,c
 37920  0068C8  D7CF               	goto	l10573
 37921  0068CA                     u7590:
 37922                           
 37923                           ;fat16.c: 125: };fat16.c: 126: };fat16.c: 127: return 0x0000;
 37924  0068CA  0E00               	movlw	0
 37925  0068CC  6E31               	movwf	?__get_empty_cluster+1,c
 37926  0068CE  0E00               	movlw	0
 37927  0068D0  6E30               	movwf	?__get_empty_cluster,c
 37928  0068D2  0012               	return	
 37929  0068D4                     __end_of__get_empty_cluster:
 37930                           	opt stack 0
 37931                           tosu	equ	0xFFF
 37932                           tosh	equ	0xFFE
 37933                           tosl	equ	0xFFD
 37934                           pclath	equ	0xFFA
 37935                           tblptru	equ	0xFF8
 37936                           tblptrh	equ	0xFF7
 37937                           tblptrl	equ	0xFF6
 37938                           tablat	equ	0xFF5
 37939                           prodh	equ	0xFF4
 37940                           prodl	equ	0xFF3
 37941                           intcon	equ	0xFF2
 37942                           intcon2	equ	0xFF1
 37943                           intcon3	equ	0xFF0
 37944                           indf0	equ	0xFEF
 37945                           postinc0	equ	0xFEE
 37946                           fsr0h	equ	0xFEA
 37947                           fsr0l	equ	0xFE9
 37948                           wreg	equ	0xFE8
 37949                           indf1	equ	0xFE7
 37950                           postdec1	equ	0xFE5
 37951                           plusw1	equ	0xFE3
 37952                           fsr1h	equ	0xFE2
 37953                           fsr1l	equ	0xFE1
 37954                           indf2	equ	0xFDF
 37955                           postinc2	equ	0xFDE
 37956                           postdec2	equ	0xFDD
 37957                           plusw2	equ	0xFDB
 37958                           fsr2h	equ	0xFDA
 37959                           fsr2l	equ	0xFD9
 37960                           status	equ	0xFD8
 37961                           
 37962 ;; *************** function _flash_partial_read *****************
 37963 ;; Defined at:
 37964 ;;		line 457 in file "flash.c"
 37965 ;; Parameters:    Size  Location     Type
 37966 ;;  page            2   39[COMRAM] unsigned int 
 37967 ;;  start           2   41[COMRAM] unsigned int 
 37968 ;;  length          2   43[COMRAM] unsigned int 
 37969 ;;  data            2   45[COMRAM] PTR unsigned char 
 37970 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), fat_read_from_file@root(32), fat_rename_file@root(32), 
 37971 ;;		 -> fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11), _get_file_size@file_size(
      +4), 
 37972 ;;		 -> _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@value(2), _get_empty_cluster@val
      +ue(2), 
 37973 ;;		 -> _root_is_available@first_byte(1), RAM(3759), 
 37974 ;; Auto vars:     Size  Location     Type
 37975 ;;		None
 37976 ;; Return value:  Size  Location     Type
 37977 ;;                  1    wreg      void 
 37978 ;; Registers used:
 37979 ;;		wreg, status,2, status,0, cstack
 37980 ;; Tracked objects:
 37981 ;;		On entry : 0/0
 37982 ;;		On exit  : 0/0
 37983 ;;		Unchanged: 0/0
 37984 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 37985 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37986 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37987 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37988 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 37989 ;;Total ram usage:        8 bytes
 37990 ;; Hardware stack levels used:    1
 37991 ;; Hardware stack levels required when called:    4
 37992 ;; This function calls:
 37993 ;;		__flash_partial_read
 37994 ;;		_spi_set_configuration
 37995 ;; This function is called by:
 37996 ;;		__root_is_available
 37997 ;;		__get_empty_cluster
 37998 ;;		_fat_get_empty_clusters
 37999 ;;		__read_fat
 38000 ;;		__get_first_cluster
 38001 ;;		_fat_find_file
 38002 ;;		_fat_get_file_size
 38003 ;;		_fat_read_from_file
 38004 ;;		_fat_get_file_information
 38005 ;;		__get_file_size
 38006 ;; This function uses a non-reentrant model
 38007 ;;
 38008                           
 38009                           	psect	text198
 38010  007ACC                     __ptext198:
 38011                           	opt stack 0
 38012  007ACC                     _flash_partial_read:
 38013                           	opt stack 23
 38014                           
 38015                           ;flash.c: 460: spi_set_configuration(SPI_CONFIGURATION_INTERNAL);
 38016                           
 38017                           ;incstack = 0
 38018  007ACC  0E00               	movlw	0
 38019  007ACE  EC2C  F024         	call	_spi_set_configuration
 38020                           
 38021                           ;flash.c: 463: _flash_partial_read(page, start, length, data);
 38022  007AD2  C028  F014         	movff	flash_partial_read@page,__flash_partial_read@page
 38023  007AD6  C029  F015         	movff	flash_partial_read@page+1,__flash_partial_read@page+1
 38024  007ADA  C02A  F016         	movff	flash_partial_read@start,__flash_partial_read@start
 38025  007ADE  C02B  F017         	movff	flash_partial_read@start+1,__flash_partial_read@start+1
 38026  007AE2  C02C  F018         	movff	flash_partial_read@length,__flash_partial_read@length
 38027  007AE6  C02D  F019         	movff	flash_partial_read@length+1,__flash_partial_read@length+1
 38028  007AEA  C02E  F01A         	movff	flash_partial_read@data,__flash_partial_read@data
 38029  007AEE  C02F  F01B         	movff	flash_partial_read@data+1,__flash_partial_read@data+1
 38030  007AF2  EC7F  F033         	call	__flash_partial_read	;wreg free
 38031                           
 38032                           ;flash.c: 466: spi_set_configuration(SPI_CONFIGURATION_EXTERNAL);
 38033  007AF6  0E01               	movlw	1
 38034  007AF8  EC2C  F024         	call	_spi_set_configuration
 38035  007AFC  0012               	return		;funcret
 38036  007AFE                     __end_of_flash_partial_read:
 38037                           	opt stack 0
 38038                           tosu	equ	0xFFF
 38039                           tosh	equ	0xFFE
 38040                           tosl	equ	0xFFD
 38041                           pclath	equ	0xFFA
 38042                           tblptru	equ	0xFF8
 38043                           tblptrh	equ	0xFF7
 38044                           tblptrl	equ	0xFF6
 38045                           tablat	equ	0xFF5
 38046                           prodh	equ	0xFF4
 38047                           prodl	equ	0xFF3
 38048                           intcon	equ	0xFF2
 38049                           intcon2	equ	0xFF1
 38050                           intcon3	equ	0xFF0
 38051                           indf0	equ	0xFEF
 38052                           postinc0	equ	0xFEE
 38053                           fsr0h	equ	0xFEA
 38054                           fsr0l	equ	0xFE9
 38055                           wreg	equ	0xFE8
 38056                           indf1	equ	0xFE7
 38057                           postdec1	equ	0xFE5
 38058                           plusw1	equ	0xFE3
 38059                           fsr1h	equ	0xFE2
 38060                           fsr1l	equ	0xFE1
 38061                           indf2	equ	0xFDF
 38062                           postinc2	equ	0xFDE
 38063                           postdec2	equ	0xFDD
 38064                           plusw2	equ	0xFDB
 38065                           fsr2h	equ	0xFDA
 38066                           fsr2l	equ	0xFD9
 38067                           status	equ	0xFD8
 38068                           
 38069 ;; *************** function _spi_set_configuration *****************
 38070 ;; Defined at:
 38071 ;;		line 139 in file "spi.c"
 38072 ;; Parameters:    Size  Location     Type
 38073 ;;  configuratio    1    wreg     enum E6747
 38074 ;; Auto vars:     Size  Location     Type
 38075 ;;  configuratio    1    0[COMRAM] enum E6747
 38076 ;;  cntr            1    0        unsigned char 
 38077 ;; Return value:  Size  Location     Type
 38078 ;;                  1    wreg      void 
 38079 ;; Registers used:
 38080 ;;		wreg, status,2, status,0
 38081 ;; Tracked objects:
 38082 ;;		On entry : 0/0
 38083 ;;		On exit  : 0/0
 38084 ;;		Unchanged: 0/0
 38085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38087 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38088 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38089 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38090 ;;Total ram usage:        1 bytes
 38091 ;; Hardware stack levels used:    1
 38092 ;; This function calls:
 38093 ;;		Nothing
 38094 ;; This function is called by:
 38095 ;;		_flash_init
 38096 ;;		_flash_is_busy
 38097 ;;		_flash_page_read
 38098 ;;		_flash_page_write
 38099 ;;		_flash_partial_read
 38100 ;;		_flash_partial_write
 38101 ;;		_flash_set_power_state
 38102 ;; This function uses a non-reentrant model
 38103 ;;
 38104                           
 38105                           	psect	text199
 38106  004858                     __ptext199:
 38107                           	opt stack 0
 38108  004858                     _spi_set_configuration:
 38109                           	opt stack 28
 38110                           
 38111                           ;incstack = 0
 38112                           ;spi_set_configuration@configuration stored from wreg
 38113  004858  6E01               	movwf	spi_set_configuration@configuration,c
 38114                           
 38115                           ;spi.c: 141: uint8_t cntr;;spi.c: 144: switch(configuration)
 38116  00485A  D076               	goto	l2775
 38117  00485C                     l2776:
 38118                           
 38119                           ;spi.c: 152: DMACON1bits.DMAEN = 0;
 38120  00485C  9088               	bcf	3976,0,c	;volatile
 38121                           
 38122                           ;spi.c: 153: SSP2CON1bits.SSPEN = 0;
 38123  00485E  9A72               	bcf	3954,5,c	;volatile
 38124                           
 38125                           ;spi.c: 156: TRISDbits.TRISD6 = 1;
 38126  004860  8C95               	bsf	3989,6,c	;volatile
 38127                           
 38128                           ;spi.c: 157: TRISDbits.TRISD4 = 0;
 38129  004862  9895               	bcf	3989,4,c	;volatile
 38130                           
 38131                           ;spi.c: 158: LATDbits.LD4 = 0;
 38132  004864  988C               	bcf	3980,4,c	;volatile
 38133                           
 38134                           ;spi.c: 159: TRISDbits.TRISD5 = 0;
 38135  004866  9A95               	bcf	3989,5,c	;volatile
 38136                           
 38137                           ;spi.c: 160: LATDbits.LD5 = 0;
 38138  004868  9A8C               	bcf	3980,5,c	;volatile
 38139                           
 38140                           ;spi.c: 161: TRISDbits.TRISD7 = 0;
 38141  00486A  9E95               	bcf	3989,7,c	;volatile
 38142                           
 38143                           ;spi.c: 162: LATDbits.LD7 = 1;
 38144  00486C  8E8C               	bsf	3980,7,c	;volatile
 38145                           
 38146                           ;spi.c: 165: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38147  00486E  0E55               	movlw	85
 38148  004870  6EA7               	movwf	4007,c	;volsfr
 38149  004872  0EAA               	movlw	170
 38150  004874  6EA7               	movwf	4007,c	;volsfr
 38151  004876  010E               	movlb	14	; () banked
 38152  004878  91BF               	bcf	191,0,b	;volatile
 38153                           
 38154                           ;spi.c: 167: RPOR23 = 0b00000;
 38155  00487A  0E00               	movlw	0
 38156  00487C  6FD7               	movwf	215,b	;volatile
 38157                           
 38158                           ;spi.c: 168: RPINR21 = 0b11111;
 38159  00487E  0E1F               	movlw	31
 38160  004880  6FFC               	movwf	252,b	;volatile
 38161                           
 38162                           ;spi.c: 169: RPINR23 = 0b11111;
 38163  004882  0E1F               	movlw	31
 38164  004884  6FFE               	movwf	254,b	;volatile
 38165                           
 38166                           ;spi.c: 171: RPINR21 = 23;
 38167  004886  0E17               	movlw	23
 38168  004888  6FFC               	movwf	252,b	;volatile
 38169                           
 38170                           ;spi.c: 172: RPOR21 = 10;
 38171  00488A  0E0A               	movlw	10
 38172  00488C  6FD5               	movwf	213,b	;volatile
 38173                           
 38174                           ;spi.c: 174: RPOR22 = 11;
 38175  00488E  0E0B               	movlw	11
 38176  004890  6FD6               	movwf	214,b	;volatile
 38177                           
 38178                           ;spi.c: 175: RPINR22 = 22;
 38179  004892  0E16               	movlw	22
 38180  004894  6FFD               	movwf	253,b	;volatile
 38181                           
 38182                           ;spi.c: 176: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38183  004896  0E55               	movlw	85
 38184  004898  6EA7               	movwf	4007,c	;volsfr
 38185  00489A  0EAA               	movlw	170
 38186  00489C  6EA7               	movwf	4007,c	;volsfr
 38187                           
 38188                           ; BSR set to: 14
 38189  00489E  81BF               	bsf	191,0,b	;volatile
 38190                           
 38191                           ; BSR set to: 14
 38192                           ;spi.c: 179: SSP2STATbits.SMP = 1;
 38193  0048A0  8E73               	bsf	3955,7,c	;volatile
 38194                           
 38195                           ; BSR set to: 14
 38196                           ;spi.c: 180: SSP2STATbits.CKE = 1;
 38197  0048A2  8C73               	bsf	3955,6,c	;volatile
 38198                           
 38199                           ; BSR set to: 14
 38200                           ;spi.c: 181: SSP2CON1bits.WCOL = 0;
 38201  0048A4  9E72               	bcf	3954,7,c	;volatile
 38202                           
 38203                           ; BSR set to: 14
 38204                           ;spi.c: 182: SSP2CON1bits.SSPOV = 0;
 38205  0048A6  9C72               	bcf	3954,6,c	;volatile
 38206                           
 38207                           ; BSR set to: 14
 38208                           ;spi.c: 183: SSP2CON1bits.CKP = 0;
 38209  0048A8  9872               	bcf	3954,4,c	;volatile
 38210                           
 38211                           ; BSR set to: 14
 38212                           ;spi.c: 184: SSP2CON1bits.SSPM =0b0000;
 38213  0048AA  9072               	bcf	3954,0,c	;volatile
 38214  0048AC  9272               	bcf	3954,1,c	;volatile
 38215  0048AE  9472               	bcf	3954,2,c	;volatile
 38216  0048B0  9672               	bcf	3954,3,c	;volatile
 38217                           
 38218                           ; BSR set to: 14
 38219                           ;spi.c: 185: SSP2CON1bits.SSPEN = 1;
 38220  0048B2  8A72               	bsf	3954,5,c	;volatile
 38221                           
 38222                           ;spi.c: 188: active_configuration = SPI_CONFIGURATION_INTERNAL;
 38223  0048B4  0E00               	movlw	0
 38224  0048B6  0100               	movlb	0	; () banked
 38225  0048B8  6F94               	movwf	_active_configuration& (0+255),b
 38226                           
 38227                           ;spi.c: 189: break;
 38228  0048BA  0012               	return	
 38229  0048BC                     l2778:
 38230                           
 38231                           ;spi.c: 193: DMACON1bits.DMAEN = 0;
 38232  0048BC  9088               	bcf	3976,0,c	;volatile
 38233                           
 38234                           ;spi.c: 194: SSP2CON1bits.SSPEN = 0;
 38235  0048BE  9A72               	bcf	3954,5,c	;volatile
 38236                           
 38237                           ;spi.c: 197: ODCON3bits.SPI2OD = 0;
 38238  0048C0  010F               	movlb	15	; () banked
 38239  0048C2  9340               	bcf	64,1,b	;volatile
 38240                           
 38241                           ; BSR set to: 15
 38242                           ;spi.c: 200: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 0;};
 38243  0048C4  0E55               	movlw	85
 38244  0048C6  6EA7               	movwf	4007,c	;volsfr
 38245  0048C8  0EAA               	movlw	170
 38246  0048CA  6EA7               	movwf	4007,c	;volsfr
 38247                           
 38248                           ; BSR set to: 15
 38249  0048CC  010E               	movlb	14	; () banked
 38250  0048CE  91BF               	bcf	191,0,b	;volatile
 38251                           
 38252                           ;spi.c: 201: RPOR23 = 10;
 38253  0048D0  0E0A               	movlw	10
 38254  0048D2  6FD7               	movwf	215,b	;volatile
 38255                           
 38256                           ;spi.c: 202: RPINR21 = 21;
 38257  0048D4  0E15               	movlw	21
 38258  0048D6  6FFC               	movwf	252,b	;volatile
 38259                           
 38260                           ;spi.c: 203: RPINR22 = 22;
 38261  0048D8  0E16               	movlw	22
 38262  0048DA  6FFD               	movwf	253,b	;volatile
 38263                           
 38264                           ;spi.c: 204: RPINR23 = 19;
 38265  0048DC  0E13               	movlw	19
 38266  0048DE  6FFE               	movwf	254,b	;volatile
 38267                           
 38268                           ;spi.c: 205: {EECON2 = 0b01010101; EECON2 = 0b10101010; PPSCONbits.IOLOCK = 1;};
 38269  0048E0  0E55               	movlw	85
 38270  0048E2  6EA7               	movwf	4007,c	;volsfr
 38271  0048E4  0EAA               	movlw	170
 38272  0048E6  6EA7               	movwf	4007,c	;volsfr
 38273                           
 38274                           ; BSR set to: 14
 38275  0048E8  81BF               	bsf	191,0,b	;volatile
 38276                           
 38277                           ; BSR set to: 14
 38278                           ;spi.c: 207: SSP2CON1bits.SSPEN = 0;
 38279  0048EA  9A72               	bcf	3954,5,c	;volatile
 38280                           
 38281                           ; BSR set to: 14
 38282                           ;spi.c: 215: TRISDbits.TRISD5 = 1;
 38283  0048EC  8A95               	bsf	3989,5,c	;volatile
 38284                           
 38285                           ; BSR set to: 14
 38286                           ;spi.c: 216: TRISDbits.TRISD4 = 1;
 38287  0048EE  8895               	bsf	3989,4,c	;volatile
 38288                           
 38289                           ; BSR set to: 14
 38290                           ;spi.c: 219: TRISDbits.TRISD6 = 0;
 38291  0048F0  9C95               	bcf	3989,6,c	;volatile
 38292                           
 38293                           ; BSR set to: 14
 38294                           ;spi.c: 220: LATDbits.LD6 = 1;
 38295  0048F2  8C8C               	bsf	3980,6,c	;volatile
 38296                           
 38297                           ; BSR set to: 14
 38298                           ;spi.c: 223: TRISDbits.TRISD2 = 1;
 38299  0048F4  8495               	bsf	3989,2,c	;volatile
 38300                           
 38301                           ; BSR set to: 14
 38302                           ;spi.c: 229: SSP2STATbits.SMP = 0;
 38303  0048F6  9E73               	bcf	3955,7,c	;volatile
 38304                           
 38305                           ; BSR set to: 14
 38306                           ;spi.c: 230: SSP2STATbits.CKE = 1;
 38307  0048F8  8C73               	bsf	3955,6,c	;volatile
 38308                           
 38309                           ; BSR set to: 14
 38310                           ;spi.c: 231: SSP2CON1bits.WCOL = 0;
 38311  0048FA  9E72               	bcf	3954,7,c	;volatile
 38312                           
 38313                           ; BSR set to: 14
 38314                           ;spi.c: 232: SSP2CON1bits.SSPOV = 0;
 38315  0048FC  9C72               	bcf	3954,6,c	;volatile
 38316                           
 38317                           ; BSR set to: 14
 38318                           ;spi.c: 233: SSP2CON1bits.CKP = 0;
 38319  0048FE  9872               	bcf	3954,4,c	;volatile
 38320                           
 38321                           ; BSR set to: 14
 38322                           ;spi.c: 234: SSP2CON1bits.SSPM =0b0100;
 38323  004900  5072               	movf	3954,w,c	;volatile
 38324  004902  0BF0               	andlw	-16
 38325  004904  0904               	iorlw	4
 38326  004906  6E72               	movwf	3954,c	;volatile
 38327                           
 38328                           ; BSR set to: 14
 38329                           ;spi.c: 235: PIR3bits.SSP2IF = 0;
 38330  004908  9EA4               	bcf	4004,7,c	;volatile
 38331                           
 38332                           ; BSR set to: 14
 38333                           ;spi.c: 236: SSP2CON1bits.SSPEN = 1;
 38334  00490A  8A72               	bsf	3954,5,c	;volatile
 38335                           
 38336                           ; BSR set to: 14
 38337                           ;spi.c: 239: DMACON1bits.TXINC = 1;
 38338  00490C  8A88               	bsf	3976,5,c	;volatile
 38339                           
 38340                           ; BSR set to: 14
 38341                           ;spi.c: 240: DMACON1bits.RXINC = 1;
 38342  00490E  8888               	bsf	3976,4,c	;volatile
 38343                           
 38344                           ; BSR set to: 14
 38345                           ;spi.c: 241: DMACON1bits.DUPLEX1 = 1;
 38346  004910  8688               	bsf	3976,3,c	;volatile
 38347                           
 38348                           ; BSR set to: 14
 38349                           ;spi.c: 242: DMACON1bits.DUPLEX0 = 0;
 38350  004912  9488               	bcf	3976,2,c	;volatile
 38351                           
 38352                           ; BSR set to: 14
 38353                           ;spi.c: 243: DMACON1bits.DLYINTEN = 0;
 38354  004914  9288               	bcf	3976,1,c	;volatile
 38355                           
 38356                           ; BSR set to: 14
 38357                           ;spi.c: 245: DMACON2bits.DLYCYC = 0b0000;
 38358  004916  9886               	bcf	3974,4,c	;volatile
 38359  004918  9A86               	bcf	3974,5,c	;volatile
 38360  00491A  9C86               	bcf	3974,6,c	;volatile
 38361  00491C  9E86               	bcf	3974,7,c	;volatile
 38362                           
 38363                           ; BSR set to: 14
 38364                           ;spi.c: 246: DMACON2bits.INTLVL = 0b0000;
 38365  00491E  9086               	bcf	3974,0,c	;volatile
 38366  004920  9286               	bcf	3974,1,c	;volatile
 38367  004922  9486               	bcf	3974,2,c	;volatile
 38368  004924  9686               	bcf	3974,3,c	;volatile
 38369                           
 38370                           ; BSR set to: 14
 38371                           ;spi.c: 249: DMABCH = ((unsigned char)((((uint16_t) (64-1))>>8)&0xFF));
 38372  004926  0E00               	movlw	0
 38373  004928  6E66               	movwf	3942,c	;volatile
 38374                           
 38375                           ; BSR set to: 14
 38376                           ;spi.c: 250: DMABCL = ((unsigned char)(((uint16_t) (64-1))&0xFF));
 38377  00492A  0E3F               	movlw	63
 38378  00492C  6E67               	movwf	3943,c	;volatile
 38379                           
 38380                           ; BSR set to: 14
 38381                           ;spi.c: 253: TXADDRH = ((unsigned char)((((uint16_t) _spi_external_tx_buffer)>>8)&0xFF))
      +                          ;
 38382  00492E  0E02               	movlw	high __spi_external_tx_buffer
 38383  004930  6E6A               	movwf	3946,c	;volatile
 38384                           
 38385                           ; BSR set to: 14
 38386                           ;spi.c: 254: TXADDRL = ((unsigned char)(((uint16_t) _spi_external_tx_buffer)&0xFF));
 38387  004932  0E40               	movlw	low (low __spi_external_tx_buffer)
 38388  004934  6E6B               	movwf	3947,c	;volatile
 38389                           
 38390                           ; BSR set to: 14
 38391                           ;spi.c: 257: RXADDRH = ((unsigned char)((((uint16_t) _spi_external_rx_buffer)>>8)&0xFF))
      +                          ;
 38392  004936  0E02               	movlw	high __spi_external_rx_buffer
 38393  004938  6E68               	movwf	3944,c	;volatile
 38394                           
 38395                           ; BSR set to: 14
 38396                           ;spi.c: 258: RXADDRL = ((unsigned char)(((uint16_t) _spi_external_rx_buffer)&0xFF));
 38397  00493A  0E00               	movlw	low (low __spi_external_rx_buffer)
 38398  00493C  6E69               	movwf	3945,c	;volatile
 38399                           
 38400                           ; BSR set to: 14
 38401                           ;spi.c: 260: DMACON1bits.DMAEN = 1;
 38402  00493E  8088               	bsf	3976,0,c	;volatile
 38403                           
 38404                           ; BSR set to: 14
 38405                           ;spi.c: 328: active_configuration = SPI_CONFIGURATION_EXTERNAL;
 38406  004940  0E01               	movlw	1
 38407  004942  0100               	movlb	0	; () banked
 38408  004944  6F94               	movwf	_active_configuration& (0+255),b
 38409                           
 38410                           ; BSR set to: 0
 38411                           ;spi.c: 330: }
 38412                           
 38413                           ;spi.c: 329: break;
 38414  004946  0012               	return	
 38415  004948                     l2775:
 38416                           
 38417                           ; BSR set to: 0
 38418  004948  5001               	movf	spi_set_configuration@configuration,w,c
 38419                           
 38420                           ; Switch size 1, requested type "space"
 38421                           ; Number of cases is 2, Range of values is 0 to 1
 38422                           ; switch strategies available:
 38423                           ; Name         Instructions Cycles
 38424                           ; simple_byte            7     4 (average)
 38425                           ;	Chosen strategy is simple_byte
 38426  00494A  0A00               	xorlw	0	; case 0
 38427  00494C  B4D8               	btfsc	status,2,c
 38428  00494E  D786               	goto	l2776
 38429  004950  0A01               	xorlw	1	; case 1
 38430  004952  A4D8               	btfss	status,2,c
 38431  004954  0012               	return	
 38432  004956  D7B2               	goto	l2778
 38433  004958                     __end_of_spi_set_configuration:
 38434                           	opt stack 0
 38435                           tosu	equ	0xFFF
 38436                           tosh	equ	0xFFE
 38437                           tosl	equ	0xFFD
 38438                           pclath	equ	0xFFA
 38439                           tblptru	equ	0xFF8
 38440                           tblptrh	equ	0xFF7
 38441                           tblptrl	equ	0xFF6
 38442                           tablat	equ	0xFF5
 38443                           prodh	equ	0xFF4
 38444                           prodl	equ	0xFF3
 38445                           intcon	equ	0xFF2
 38446                           intcon2	equ	0xFF1
 38447                           intcon3	equ	0xFF0
 38448                           indf0	equ	0xFEF
 38449                           postinc0	equ	0xFEE
 38450                           fsr0h	equ	0xFEA
 38451                           fsr0l	equ	0xFE9
 38452                           wreg	equ	0xFE8
 38453                           indf1	equ	0xFE7
 38454                           postdec1	equ	0xFE5
 38455                           plusw1	equ	0xFE3
 38456                           fsr1h	equ	0xFE2
 38457                           fsr1l	equ	0xFE1
 38458                           indf2	equ	0xFDF
 38459                           postinc2	equ	0xFDE
 38460                           postdec2	equ	0xFDD
 38461                           plusw2	equ	0xFDB
 38462                           fsr2h	equ	0xFDA
 38463                           fsr2l	equ	0xFD9
 38464                           status	equ	0xFD8
 38465                           
 38466 ;; *************** function __flash_partial_read *****************
 38467 ;; Defined at:
 38468 ;;		line 305 in file "flash.c"
 38469 ;; Parameters:    Size  Location     Type
 38470 ;;  page            2   19[COMRAM] unsigned int 
 38471 ;;  start           2   21[COMRAM] unsigned int 
 38472 ;;  length          2   23[COMRAM] unsigned int 
 38473 ;;  data            2   25[COMRAM] PTR unsigned char 
 38474 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 38475 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 38476 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 38477 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), msd_buffer(512), RAM(3759), 
 38478 ;; Auto vars:     Size  Location     Type
 38479 ;;  command         4   31[COMRAM] unsigned char [4]
 38480 ;;  address         4   35[COMRAM] unsigned long 
 38481 ;; Return value:  Size  Location     Type
 38482 ;;                  1    wreg      void 
 38483 ;; Registers used:
 38484 ;;		wreg, status,2, status,0, cstack
 38485 ;; Tracked objects:
 38486 ;;		On entry : 0/0
 38487 ;;		On exit  : 0/0
 38488 ;;		Unchanged: 0/0
 38489 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38490 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38491 ;;      Locals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38492 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38493 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38494 ;;Total ram usage:       20 bytes
 38495 ;; Hardware stack levels used:    1
 38496 ;; Hardware stack levels required when called:    3
 38497 ;; This function calls:
 38498 ;;		__flash_is_busy
 38499 ;;		_spi_tx_rx
 38500 ;; This function is called by:
 38501 ;;		_flash_page_read
 38502 ;;		_flash_partial_read
 38503 ;; This function uses a non-reentrant model
 38504 ;;
 38505                           
 38506                           	psect	text200
 38507  0066FE                     __ptext200:
 38508                           	opt stack 0
 38509  0066FE                     __flash_partial_read:
 38510                           	opt stack 23
 38511                           
 38512                           ;flash.c: 307: uint32_t address;;flash.c: 308: uint8_t command[4];;flash.c: 311: while(_
      +                          flash_is_busy());
 38513                           
 38514                           ;incstack = 0
 38515  0066FE  ECEB  F03E         	call	__flash_is_busy	;wreg free
 38516  006702  0900               	iorlw	0
 38517  006704  A4D8               	btfss	status,2,c
 38518  006706  D7FB               	goto	__flash_partial_read
 38519                           
 38520                           ;flash.c: 314: address = page;
 38521  006708  C014  F024         	movff	__flash_partial_read@page,__flash_partial_read@address
 38522  00670C  C015  F025         	movff	__flash_partial_read@page+1,__flash_partial_read@address+1
 38523  006710  6A26               	clrf	__flash_partial_read@address+2,c
 38524  006712  6A27               	clrf	__flash_partial_read@address+3,c
 38525                           
 38526                           ;flash.c: 315: address <<= 9;
 38527  006714  0E09               	movlw	9
 38528  006716                     u6295:
 38529  006716  90D8               	bcf	status,0,c
 38530  006718  3624               	rlcf	__flash_partial_read@address,f,c
 38531  00671A  3625               	rlcf	__flash_partial_read@address+1,f,c
 38532  00671C  3626               	rlcf	__flash_partial_read@address+2,f,c
 38533  00671E  3627               	rlcf	__flash_partial_read@address+3,f,c
 38534  006720  2EE8               	decfsz	wreg,f,c
 38535  006722  D7F9               	goto	u6295
 38536                           
 38537                           ;flash.c: 316: address |= start;
 38538  006724  5016               	movf	__flash_partial_read@start,w,c
 38539  006726  6E1C               	movwf	??__flash_partial_read& (0+255),c
 38540  006728  5017               	movf	__flash_partial_read@start+1,w,c
 38541  00672A  6E1D               	movwf	(??__flash_partial_read+1)& (0+255),c
 38542  00672C  6A1E               	clrf	(??__flash_partial_read+2)& (0+255),c
 38543  00672E  6A1F               	clrf	(??__flash_partial_read+3)& (0+255),c
 38544  006730  501C               	movf	??__flash_partial_read,w,c
 38545  006732  1224               	iorwf	__flash_partial_read@address,f,c
 38546  006734  501D               	movf	??__flash_partial_read+1,w,c
 38547  006736  1225               	iorwf	__flash_partial_read@address+1,f,c
 38548  006738  501E               	movf	??__flash_partial_read+2,w,c
 38549  00673A  1226               	iorwf	__flash_partial_read@address+2,f,c
 38550  00673C  501F               	movf	??__flash_partial_read+3,w,c
 38551  00673E  1227               	iorwf	__flash_partial_read@address+3,f,c
 38552                           
 38553                           ;flash.c: 319: command[0] = 0x03;
 38554  006740  0E03               	movlw	3
 38555  006742  6E20               	movwf	__flash_partial_read@command,c
 38556                           
 38557                           ;flash.c: 320: command[1] = ((unsigned char)((((unsigned short)(((address)>>16)&0xFFFF))
      +                          )&0xFF));
 38558  006744  C026  F021         	movff	__flash_partial_read@address+2,__flash_partial_read@command+1
 38559                           
 38560                           ;flash.c: 321: command[2] = ((unsigned char)(((((unsigned short)((address)&0xFFFF)))>>8)
      +                          &0xFF));
 38561  006748  5025               	movf	__flash_partial_read@address+1,w,c
 38562  00674A  6E22               	movwf	__flash_partial_read@command+2,c
 38563                           
 38564                           ;flash.c: 322: command[3] = ((unsigned char)((((unsigned short)((address)&0xFFFF)))&0xFF
      +                          ));
 38565  00674C  C024  F023         	movff	__flash_partial_read@address,__flash_partial_read@command+3
 38566                           
 38567                           ;flash.c: 325: spi_tx_rx(command, 4, data, length);
 38568  006750  0E20               	movlw	low __flash_partial_read@command
 38569  006752  6E01               	movwf	spi_tx_rx@command,c
 38570  006754  0E00               	movlw	high __flash_partial_read@command
 38571  006756  6E02               	movwf	spi_tx_rx@command+1,c
 38572  006758  0E00               	movlw	0
 38573  00675A  6E04               	movwf	spi_tx_rx@command_length+1,c
 38574  00675C  0E04               	movlw	4
 38575  00675E  6E03               	movwf	spi_tx_rx@command_length,c
 38576  006760  C01A  F005         	movff	__flash_partial_read@data,spi_tx_rx@data
 38577  006764  C01B  F006         	movff	__flash_partial_read@data+1,spi_tx_rx@data+1
 38578  006768  C018  F007         	movff	__flash_partial_read@length,spi_tx_rx@data_length
 38579  00676C  C019  F008         	movff	__flash_partial_read@length+1,spi_tx_rx@data_length+1
 38580  006770  EC55  F030         	call	_spi_tx_rx	;wreg free
 38581  006774  0012               	return		;funcret
 38582  006776                     __end_of__flash_partial_read:
 38583                           	opt stack 0
 38584                           tosu	equ	0xFFF
 38585                           tosh	equ	0xFFE
 38586                           tosl	equ	0xFFD
 38587                           pclath	equ	0xFFA
 38588                           tblptru	equ	0xFF8
 38589                           tblptrh	equ	0xFF7
 38590                           tblptrl	equ	0xFF6
 38591                           tablat	equ	0xFF5
 38592                           prodh	equ	0xFF4
 38593                           prodl	equ	0xFF3
 38594                           intcon	equ	0xFF2
 38595                           intcon2	equ	0xFF1
 38596                           intcon3	equ	0xFF0
 38597                           indf0	equ	0xFEF
 38598                           postinc0	equ	0xFEE
 38599                           fsr0h	equ	0xFEA
 38600                           fsr0l	equ	0xFE9
 38601                           wreg	equ	0xFE8
 38602                           indf1	equ	0xFE7
 38603                           postdec1	equ	0xFE5
 38604                           plusw1	equ	0xFE3
 38605                           fsr1h	equ	0xFE2
 38606                           fsr1l	equ	0xFE1
 38607                           indf2	equ	0xFDF
 38608                           postinc2	equ	0xFDE
 38609                           postdec2	equ	0xFDD
 38610                           plusw2	equ	0xFDB
 38611                           fsr2h	equ	0xFDA
 38612                           fsr2l	equ	0xFD9
 38613                           status	equ	0xFD8
 38614                           
 38615 ;; *************** function __flash_is_busy *****************
 38616 ;; Defined at:
 38617 ;;		line 277 in file "flash.c"
 38618 ;; Parameters:    Size  Location     Type
 38619 ;;		None
 38620 ;; Auto vars:     Size  Location     Type
 38621 ;;  status          2   17[COMRAM] unsigned int 
 38622 ;; Return value:  Size  Location     Type
 38623 ;;                  1    wreg      unsigned char 
 38624 ;; Registers used:
 38625 ;;		wreg, status,2, status,0, cstack
 38626 ;; Tracked objects:
 38627 ;;		On entry : 0/0
 38628 ;;		On exit  : 0/0
 38629 ;;		Unchanged: 0/0
 38630 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38631 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38632 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38633 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38634 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38635 ;;Total ram usage:        2 bytes
 38636 ;; Hardware stack levels used:    1
 38637 ;; Hardware stack levels required when called:    2
 38638 ;; This function calls:
 38639 ;;		__flash_get_status
 38640 ;;		__flash_wakeup
 38641 ;; This function is called by:
 38642 ;;		__flash_set_page_size
 38643 ;;		__flash_copy_page_to_buffer
 38644 ;;		__flash_compare_page_to_buffer
 38645 ;;		__flash_write_to_buffer
 38646 ;;		__flash_write_page_from_buffer
 38647 ;;		__flash_partial_read
 38648 ;;		_flash_is_busy
 38649 ;;		__flash_erase_page
 38650 ;;		_flash_set_power_state
 38651 ;; This function uses a non-reentrant model
 38652 ;;
 38653                           
 38654                           	psect	text201
 38655  007DD6                     __ptext201:
 38656                           	opt stack 0
 38657  007DD6                     __flash_is_busy:
 38658                           	opt stack 25
 38659                           
 38660                           ;flash.c: 279: uint16_t status;;flash.c: 282: if(power_state!=FLASH_POWER_STATE_NORMAL)
 38661                           
 38662                           ;incstack = 0
 38663  007DD6  0100               	movlb	0	; () banked
 38664  007DD8  5197               	movf	_power_state& (0+255),w,b
 38665  007DDA  A4D8               	btfss	status,2,c
 38666                           
 38667                           ; BSR set to: 0
 38668                           ;flash.c: 283: {;flash.c: 284: _flash_wakeup();
 38669  007DDC  ECC2  F039         	call	__flash_wakeup	;wreg free
 38670                           
 38671                           ;flash.c: 285: };flash.c: 288: status = _flash_get_status();
 38672  007DE0  EC7F  F03D         	call	__flash_get_status	;wreg free
 38673  007DE4  C00D  F012         	movff	?__flash_get_status,__flash_is_busy@status
 38674  007DE8  C00E  F013         	movff	?__flash_get_status+1,__flash_is_busy@status+1
 38675                           
 38676                           ;flash.c: 291: if(status & 0b0000000010000000)
 38677  007DEC  AE12               	btfss	__flash_is_busy@status,7,c
 38678  007DEE  D002               	goto	l1775
 38679                           
 38680                           ;flash.c: 292: {;flash.c: 294: return 0;
 38681  007DF0  0E00               	movlw	0
 38682                           
 38683                           ;flash.c: 295: }
 38684  007DF2  0012               	return	
 38685  007DF4                     l1775:
 38686                           
 38687                           ;flash.c: 296: else;flash.c: 297: {;flash.c: 299: return 1;
 38688  007DF4  0E01               	movlw	1
 38689  007DF6  0012               	return	
 38690  007DF8                     __end_of__flash_is_busy:
 38691                           	opt stack 0
 38692                           tosu	equ	0xFFF
 38693                           tosh	equ	0xFFE
 38694                           tosl	equ	0xFFD
 38695                           pclath	equ	0xFFA
 38696                           tblptru	equ	0xFF8
 38697                           tblptrh	equ	0xFF7
 38698                           tblptrl	equ	0xFF6
 38699                           tablat	equ	0xFF5
 38700                           prodh	equ	0xFF4
 38701                           prodl	equ	0xFF3
 38702                           intcon	equ	0xFF2
 38703                           intcon2	equ	0xFF1
 38704                           intcon3	equ	0xFF0
 38705                           indf0	equ	0xFEF
 38706                           postinc0	equ	0xFEE
 38707                           fsr0h	equ	0xFEA
 38708                           fsr0l	equ	0xFE9
 38709                           wreg	equ	0xFE8
 38710                           indf1	equ	0xFE7
 38711                           postdec1	equ	0xFE5
 38712                           plusw1	equ	0xFE3
 38713                           fsr1h	equ	0xFE2
 38714                           fsr1l	equ	0xFE1
 38715                           indf2	equ	0xFDF
 38716                           postinc2	equ	0xFDE
 38717                           postdec2	equ	0xFDD
 38718                           plusw2	equ	0xFDB
 38719                           fsr2h	equ	0xFDA
 38720                           fsr2l	equ	0xFD9
 38721                           status	equ	0xFD8
 38722                           
 38723 ;; *************** function __flash_wakeup *****************
 38724 ;; Defined at:
 38725 ;;		line 124 in file "flash.c"
 38726 ;; Parameters:    Size  Location     Type
 38727 ;;		None
 38728 ;; Auto vars:     Size  Location     Type
 38729 ;;  command         1    8[COMRAM] unsigned char 
 38730 ;; Return value:  Size  Location     Type
 38731 ;;                  1    wreg      void 
 38732 ;; Registers used:
 38733 ;;		wreg, status,2, status,0, cstack
 38734 ;; Tracked objects:
 38735 ;;		On entry : 0/0
 38736 ;;		On exit  : 0/0
 38737 ;;		Unchanged: 0/0
 38738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38739 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38740 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38741 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38742 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38743 ;;Total ram usage:        1 bytes
 38744 ;; Hardware stack levels used:    1
 38745 ;; Hardware stack levels required when called:    1
 38746 ;; This function calls:
 38747 ;;		_spi_tx
 38748 ;; This function is called by:
 38749 ;;		__flash_is_busy
 38750 ;;		_flash_set_power_state
 38751 ;; This function uses a non-reentrant model
 38752 ;;
 38753                           
 38754                           	psect	text202
 38755  007384                     __ptext202:
 38756                           	opt stack 0
 38757  007384                     __flash_wakeup:
 38758                           	opt stack 25
 38759                           
 38760                           ;flash.c: 126: uint8_t command;;flash.c: 128: switch(power_state)
 38761                           
 38762                           ;incstack = 0
 38763  007384  D021               	goto	l1724
 38764  007386                     
 38765                           ;flash.c: 131: command = 0xAB;
 38766  007386  0EAB               	movlw	171
 38767  007388  6E09               	movwf	__flash_wakeup@command,c
 38768                           
 38769                           ;flash.c: 132: spi_tx(&command, 1);
 38770  00738A  0E09               	movlw	low __flash_wakeup@command
 38771  00738C  6E01               	movwf	spi_tx@data,c
 38772  00738E  0E00               	movlw	high __flash_wakeup@command
 38773  007390  6E02               	movwf	spi_tx@data+1,c
 38774  007392  0E00               	movlw	0
 38775  007394  6E04               	movwf	spi_tx@length+1,c
 38776  007396  0E01               	movlw	1
 38777  007398  6E03               	movwf	spi_tx@length,c
 38778  00739A  ECEA  F038         	call	_spi_tx	;wreg free
 38779                           
 38780                           ;flash.c: 133: _delay((unsigned long)((35)*(8000000/4000000.0)));
 38781  00739E  0E17               	movlw	23
 38782  0073A0                     u12047:
 38783  0073A0  2EE8               	decfsz	wreg,f,c
 38784  0073A2  D7FE               	bra	u12047
 38785  0073A4  F000               	nop	
 38786                           
 38787                           ;flash.c: 134: power_state = FLASH_POWER_STATE_NORMAL;
 38788  0073A6  0E00               	movlw	0
 38789  0073A8  0100               	movlb	0	; () banked
 38790  0073AA  6F97               	movwf	_power_state& (0+255),b
 38791                           
 38792                           ;flash.c: 135: break;
 38793  0073AC  0012               	return	
 38794  0073AE                     l1727:
 38795                           
 38796                           ; BSR set to: 0
 38797                           ;flash.c: 140: LATDbits.LD7 = 0;
 38798  0073AE  9E8C               	bcf	3980,7,c	;volatile
 38799                           
 38800                           ; BSR set to: 0
 38801                           ;flash.c: 141: _delay((unsigned long)((20)*(8000000/4000000.0)));
 38802  0073B0  0E0D               	movlw	13
 38803  0073B2                     u12057:
 38804  0073B2  2EE8               	decfsz	wreg,f,c
 38805  0073B4  D7FE               	bra	u12057
 38806  0073B6  F000               	nop	
 38807                           
 38808                           ;flash.c: 142: LATDbits.LD7 = 1;
 38809  0073B8  8E8C               	bsf	3980,7,c	;volatile
 38810                           
 38811                           ;flash.c: 143: _delay((unsigned long)((120)*(8000000/4000000.0)));
 38812  0073BA  0E50               	movlw	80
 38813  0073BC                     u12067:
 38814  0073BC  2EE8               	decfsz	wreg,f,c
 38815  0073BE  D7FE               	bra	u12067
 38816                           
 38817                           ;flash.c: 144: power_state = FLASH_POWER_STATE_NORMAL;
 38818  0073C0  0E00               	movlw	0
 38819  0073C2  0100               	movlb	0	; () banked
 38820  0073C4  6F97               	movwf	_power_state& (0+255),b
 38821                           
 38822                           ; BSR set to: 0
 38823                           ;flash.c: 146: }
 38824                           
 38825                           ;flash.c: 145: break;
 38826  0073C6  0012               	return	
 38827  0073C8                     l1724:
 38828                           
 38829                           ; BSR set to: 0
 38830  0073C8  0100               	movlb	0	; () banked
 38831  0073CA  5197               	movf	_power_state& (0+255),w,b
 38832                           
 38833                           ; Switch size 1, requested type "space"
 38834                           ; Number of cases is 2, Range of values is 1 to 2
 38835                           ; switch strategies available:
 38836                           ; Name         Instructions Cycles
 38837                           ; simple_byte            7     4 (average)
 38838                           ;	Chosen strategy is simple_byte
 38839  0073CC  0A01               	xorlw	1	; case 1
 38840  0073CE  B4D8               	btfsc	status,2,c
 38841  0073D0  D7DA               	goto	l1725
 38842  0073D2  0A03               	xorlw	3	; case 2
 38843  0073D4  A4D8               	btfss	status,2,c
 38844  0073D6  0012               	return	
 38845  0073D8  D7EA               	goto	l1727
 38846  0073DA                     __end_of__flash_wakeup:
 38847                           	opt stack 0
 38848                           tosu	equ	0xFFF
 38849                           tosh	equ	0xFFE
 38850                           tosl	equ	0xFFD
 38851                           pclath	equ	0xFFA
 38852                           tblptru	equ	0xFF8
 38853                           tblptrh	equ	0xFF7
 38854                           tblptrl	equ	0xFF6
 38855                           tablat	equ	0xFF5
 38856                           prodh	equ	0xFF4
 38857                           prodl	equ	0xFF3
 38858                           intcon	equ	0xFF2
 38859                           intcon2	equ	0xFF1
 38860                           intcon3	equ	0xFF0
 38861                           indf0	equ	0xFEF
 38862                           postinc0	equ	0xFEE
 38863                           fsr0h	equ	0xFEA
 38864                           fsr0l	equ	0xFE9
 38865                           wreg	equ	0xFE8
 38866                           indf1	equ	0xFE7
 38867                           postdec1	equ	0xFE5
 38868                           plusw1	equ	0xFE3
 38869                           fsr1h	equ	0xFE2
 38870                           fsr1l	equ	0xFE1
 38871                           indf2	equ	0xFDF
 38872                           postinc2	equ	0xFDE
 38873                           postdec2	equ	0xFDD
 38874                           plusw2	equ	0xFDB
 38875                           fsr2h	equ	0xFDA
 38876                           fsr2l	equ	0xFD9
 38877                           status	equ	0xFD8
 38878                           
 38879 ;; *************** function _spi_tx *****************
 38880 ;; Defined at:
 38881 ;;		line 341 in file "spi.c"
 38882 ;; Parameters:    Size  Location     Type
 38883 ;;  data            2    0[COMRAM] PTR unsigned char 
 38884 ;;		 -> flash_set_power_state@command(1), _flash_write_page_from_buffer@command(4), _flash_erase_page@command(4), _flash
      +_compare_page_to_buffer@command(4), 
 38885 ;;		 -> _flash_copy_page_to_buffer@command(4), _flash_wakeup@command(1), _flash_set_page_size@command(4), 
 38886 ;;  length          2    2[COMRAM] unsigned int 
 38887 ;; Auto vars:     Size  Location     Type
 38888 ;;		None
 38889 ;; Return value:  Size  Location     Type
 38890 ;;                  1    wreg      void 
 38891 ;; Registers used:
 38892 ;;		wreg, status,2, status,0
 38893 ;; Tracked objects:
 38894 ;;		On entry : 0/0
 38895 ;;		On exit  : 0/0
 38896 ;;		Unchanged: 0/0
 38897 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 38898 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38899 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38900 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38901 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 38902 ;;Total ram usage:        8 bytes
 38903 ;; Hardware stack levels used:    1
 38904 ;; This function calls:
 38905 ;;		Nothing
 38906 ;; This function is called by:
 38907 ;;		__flash_set_page_size
 38908 ;;		__flash_wakeup
 38909 ;;		__flash_copy_page_to_buffer
 38910 ;;		__flash_compare_page_to_buffer
 38911 ;;		__flash_write_page_from_buffer
 38912 ;;		__flash_erase_page
 38913 ;;		_flash_set_power_state
 38914 ;; This function uses a non-reentrant model
 38915 ;;
 38916                           
 38917                           	psect	text203
 38918  0071D4                     __ptext203:
 38919                           	opt stack 0
 38920  0071D4                     _spi_tx:
 38921                           	opt stack 27
 38922                           
 38923                           ;spi.c: 344: DMACON1bits.SSCON1 = 0;
 38924                           
 38925                           ; BSR set to: 0
 38926                           ;incstack = 0
 38927  0071D4  9E88               	bcf	3976,7,c	;volatile
 38928                           
 38929                           ;spi.c: 345: DMACON1bits.SSCON0 = 0;
 38930  0071D6  9C88               	bcf	3976,6,c	;volatile
 38931                           
 38932                           ;spi.c: 347: DMACON1bits.TXINC = 1;
 38933  0071D8  8A88               	bsf	3976,5,c	;volatile
 38934                           
 38935                           ;spi.c: 349: DMACON1bits.RXINC = 0;
 38936  0071DA  9888               	bcf	3976,4,c	;volatile
 38937                           
 38938                           ;spi.c: 351: DMACON1bits.DUPLEX1 = 0;
 38939  0071DC  9688               	bcf	3976,3,c	;volatile
 38940                           
 38941                           ;spi.c: 352: DMACON1bits.DUPLEX0 = 1;
 38942  0071DE  8488               	bsf	3976,2,c	;volatile
 38943                           
 38944                           ;spi.c: 354: DMACON1bits.DLYINTEN = 0;
 38945  0071E0  9288               	bcf	3976,1,c	;volatile
 38946                           
 38947                           ;spi.c: 356: DMACON2bits.DLYCYC = 0b0000;
 38948  0071E2  9886               	bcf	3974,4,c	;volatile
 38949  0071E4  9A86               	bcf	3974,5,c	;volatile
 38950  0071E6  9C86               	bcf	3974,6,c	;volatile
 38951  0071E8  9E86               	bcf	3974,7,c	;volatile
 38952                           
 38953                           ;spi.c: 358: DMACON2bits.INTLVL = 0b0000;
 38954  0071EA  9086               	bcf	3974,0,c	;volatile
 38955  0071EC  9286               	bcf	3974,1,c	;volatile
 38956  0071EE  9486               	bcf	3974,2,c	;volatile
 38957  0071F0  9686               	bcf	3974,3,c	;volatile
 38958                           
 38959                           ;spi.c: 361: TXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 38960  0071F2  5002               	movf	spi_tx@data+1,w,c
 38961  0071F4  6E6A               	movwf	3946,c	;volatile
 38962                           
 38963                           ;spi.c: 362: TXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 38964  0071F6  C001  FF6B         	movff	spi_tx@data,3947	;volatile
 38965                           
 38966                           ;spi.c: 365: DMABCH = ((unsigned char)((((uint16_t) (length-1))>>8)&0xFF));
 38967  0071FA  0EFF               	movlw	255
 38968  0071FC  6E05               	movwf	??_spi_tx& (0+255),c
 38969  0071FE  0EFF               	movlw	255
 38970  007200  6E06               	movwf	(??_spi_tx+1)& (0+255),c
 38971  007202  C003  F007         	movff	spi_tx@length,??_spi_tx+2
 38972  007206  C004  F008         	movff	spi_tx@length+1,??_spi_tx+3
 38973  00720A  5005               	movf	??_spi_tx,w,c
 38974  00720C  2607               	addwf	??_spi_tx+2,f,c
 38975  00720E  5006               	movf	??_spi_tx+1,w,c
 38976  007210  2208               	addwfc	??_spi_tx+3,f,c
 38977  007212  C008  F007         	movff	??_spi_tx+3,??_spi_tx+2
 38978  007216  6A08               	clrf	??_spi_tx+3,c
 38979  007218  5007               	movf	??_spi_tx+2,w,c
 38980  00721A  6E66               	movwf	3942,c	;volatile
 38981                           
 38982                           ;spi.c: 366: DMABCL = ((unsigned char)(((uint16_t) (length-1))&0xFF));
 38983  00721C  0403               	decf	spi_tx@length,w,c
 38984  00721E  6E67               	movwf	3943,c	;volatile
 38985                           
 38986                           ;spi.c: 369: LATDbits.LD7 = 0;
 38987  007220  9E8C               	bcf	3980,7,c	;volatile
 38988                           
 38989                           ;spi.c: 370: DMACON1bits.DMAEN = 1;
 38990  007222  8088               	bsf	3976,0,c	;volatile
 38991  007224  B088               	btfsc	3976,0,c	;volatile
 38992  007226  D7FE               	goto	l2786
 38993                           
 38994                           ;spi.c: 372: LATDbits.LD7 = 1;
 38995  007228  8E8C               	bsf	3980,7,c	;volatile
 38996  00722A  0012               	return		;funcret
 38997  00722C                     __end_of_spi_tx:
 38998                           	opt stack 0
 38999                           tosu	equ	0xFFF
 39000                           tosh	equ	0xFFE
 39001                           tosl	equ	0xFFD
 39002                           pclath	equ	0xFFA
 39003                           tblptru	equ	0xFF8
 39004                           tblptrh	equ	0xFF7
 39005                           tblptrl	equ	0xFF6
 39006                           tablat	equ	0xFF5
 39007                           prodh	equ	0xFF4
 39008                           prodl	equ	0xFF3
 39009                           intcon	equ	0xFF2
 39010                           intcon2	equ	0xFF1
 39011                           intcon3	equ	0xFF0
 39012                           indf0	equ	0xFEF
 39013                           postinc0	equ	0xFEE
 39014                           fsr0h	equ	0xFEA
 39015                           fsr0l	equ	0xFE9
 39016                           wreg	equ	0xFE8
 39017                           indf1	equ	0xFE7
 39018                           postdec1	equ	0xFE5
 39019                           plusw1	equ	0xFE3
 39020                           fsr1h	equ	0xFE2
 39021                           fsr1l	equ	0xFE1
 39022                           indf2	equ	0xFDF
 39023                           postinc2	equ	0xFDE
 39024                           postdec2	equ	0xFDD
 39025                           plusw2	equ	0xFDB
 39026                           fsr2h	equ	0xFDA
 39027                           fsr2l	equ	0xFD9
 39028                           status	equ	0xFD8
 39029                           
 39030 ;; *************** function __flash_get_status *****************
 39031 ;; Defined at:
 39032 ;;		line 113 in file "flash.c"
 39033 ;; Parameters:    Size  Location     Type
 39034 ;;		None
 39035 ;; Auto vars:     Size  Location     Type
 39036 ;;  status          2   15[COMRAM] unsigned int 
 39037 ;;  command         1   14[COMRAM] unsigned char 
 39038 ;; Return value:  Size  Location     Type
 39039 ;;                  2   12[COMRAM] unsigned int 
 39040 ;; Registers used:
 39041 ;;		wreg, status,2, status,0, cstack
 39042 ;; Tracked objects:
 39043 ;;		On entry : 0/0
 39044 ;;		On exit  : 0/0
 39045 ;;		Unchanged: 0/0
 39046 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39047 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39048 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39049 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39050 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39051 ;;Total ram usage:        5 bytes
 39052 ;; Hardware stack levels used:    1
 39053 ;; Hardware stack levels required when called:    1
 39054 ;; This function calls:
 39055 ;;		_spi_tx_rx
 39056 ;; This function is called by:
 39057 ;;		__flash_compare_page_to_buffer
 39058 ;;		__flash_is_busy
 39059 ;; This function uses a non-reentrant model
 39060 ;;
 39061                           
 39062                           	psect	text204
 39063  007AFE                     __ptext204:
 39064                           	opt stack 0
 39065  007AFE                     __flash_get_status:
 39066                           	opt stack 25
 39067                           
 39068                           ;flash.c: 117: uint8_t command = 0xD7;
 39069                           
 39070                           ;incstack = 0
 39071  007AFE  0ED7               	movlw	215
 39072  007B00  6E0F               	movwf	__flash_get_status@command,c
 39073                           
 39074                           ;flash.c: 118: uint16_t status;;flash.c: 119: spi_tx_rx(&command, 1, (uint8_t*) &status,
      +                           2);
 39075  007B02  0E0F               	movlw	low __flash_get_status@command
 39076  007B04  6E01               	movwf	spi_tx_rx@command,c
 39077  007B06  0E00               	movlw	high __flash_get_status@command
 39078  007B08  6E02               	movwf	spi_tx_rx@command+1,c
 39079  007B0A  0E00               	movlw	0
 39080  007B0C  6E04               	movwf	spi_tx_rx@command_length+1,c
 39081  007B0E  0E01               	movlw	1
 39082  007B10  6E03               	movwf	spi_tx_rx@command_length,c
 39083  007B12  0E10               	movlw	low __flash_get_status@status
 39084  007B14  6E05               	movwf	spi_tx_rx@data,c
 39085  007B16  0E00               	movlw	high __flash_get_status@status
 39086  007B18  6E06               	movwf	spi_tx_rx@data+1,c
 39087  007B1A  0E00               	movlw	0
 39088  007B1C  6E08               	movwf	spi_tx_rx@data_length+1,c
 39089  007B1E  0E02               	movlw	2
 39090  007B20  6E07               	movwf	spi_tx_rx@data_length,c
 39091  007B22  EC55  F030         	call	_spi_tx_rx	;wreg free
 39092                           
 39093                           ;flash.c: 120: return status;
 39094  007B26  C010  F00D         	movff	__flash_get_status@status,?__flash_get_status
 39095  007B2A  C011  F00E         	movff	__flash_get_status@status+1,?__flash_get_status+1
 39096  007B2E  0012               	return	
 39097  007B30                     __end_of__flash_get_status:
 39098                           	opt stack 0
 39099                           tosu	equ	0xFFF
 39100                           tosh	equ	0xFFE
 39101                           tosl	equ	0xFFD
 39102                           pclath	equ	0xFFA
 39103                           tblptru	equ	0xFF8
 39104                           tblptrh	equ	0xFF7
 39105                           tblptrl	equ	0xFF6
 39106                           tablat	equ	0xFF5
 39107                           prodh	equ	0xFF4
 39108                           prodl	equ	0xFF3
 39109                           intcon	equ	0xFF2
 39110                           intcon2	equ	0xFF1
 39111                           intcon3	equ	0xFF0
 39112                           indf0	equ	0xFEF
 39113                           postinc0	equ	0xFEE
 39114                           fsr0h	equ	0xFEA
 39115                           fsr0l	equ	0xFE9
 39116                           wreg	equ	0xFE8
 39117                           indf1	equ	0xFE7
 39118                           postdec1	equ	0xFE5
 39119                           plusw1	equ	0xFE3
 39120                           fsr1h	equ	0xFE2
 39121                           fsr1l	equ	0xFE1
 39122                           indf2	equ	0xFDF
 39123                           postinc2	equ	0xFDE
 39124                           postdec2	equ	0xFDD
 39125                           plusw2	equ	0xFDB
 39126                           fsr2h	equ	0xFDA
 39127                           fsr2l	equ	0xFD9
 39128                           status	equ	0xFD8
 39129                           
 39130 ;; *************** function _spi_tx_rx *****************
 39131 ;; Defined at:
 39132 ;;		line 432 in file "spi.c"
 39133 ;; Parameters:    Size  Location     Type
 39134 ;;  command         2    0[COMRAM] PTR unsigned char 
 39135 ;;		 -> _flash_partial_read@command(4), _flash_get_status@command(1), 
 39136 ;;  command_leng    2    2[COMRAM] unsigned int 
 39137 ;;  data            2    4[COMRAM] PTR unsigned char 
 39138 ;;		 -> _spi_external_tx_buffer(64), file_buffer(50), buffer(512), fat_read_from_file@root(32), 
 39139 ;;		 -> fat_rename_file@root(32), fat_append_to_file@root(32), fat_get_file_size@file_size(4), fat_find_file@buffer(11),
      + 
 39140 ;;		 -> _get_file_size@file_size(4), _get_first_cluster@first_cluster(2), _read_fat@value(2), fat_get_empty_clusters@val
      +ue(2), 
 39141 ;;		 -> _get_empty_cluster@value(2), _root_is_available@first_byte(1), _flash_get_status@status(2), msd_buffer(512), 
 39142 ;;		 -> RAM(3759), 
 39143 ;;  data_length     2    6[COMRAM] unsigned int 
 39144 ;; Auto vars:     Size  Location     Type
 39145 ;;		None
 39146 ;; Return value:  Size  Location     Type
 39147 ;;                  1    wreg      void 
 39148 ;; Registers used:
 39149 ;;		wreg, status,2, status,0
 39150 ;; Tracked objects:
 39151 ;;		On entry : 0/0
 39152 ;;		On exit  : 0/0
 39153 ;;		Unchanged: 0/0
 39154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39155 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39156 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39157 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39158 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39159 ;;Total ram usage:       12 bytes
 39160 ;; Hardware stack levels used:    1
 39161 ;; This function calls:
 39162 ;;		Nothing
 39163 ;; This function is called by:
 39164 ;;		__flash_get_status
 39165 ;;		__flash_partial_read
 39166 ;; This function uses a non-reentrant model
 39167 ;;
 39168                           
 39169                           	psect	text205
 39170  0060AA                     __ptext205:
 39171                           	opt stack 0
 39172  0060AA                     _spi_tx_rx:
 39173                           	opt stack 25
 39174                           
 39175                           ;spi.c: 435: DMACON1bits.SSCON1 = 0;
 39176                           
 39177                           ;incstack = 0
 39178  0060AA  9E88               	bcf	3976,7,c	;volatile
 39179                           
 39180                           ;spi.c: 436: DMACON1bits.SSCON0 = 0;
 39181  0060AC  9C88               	bcf	3976,6,c	;volatile
 39182                           
 39183                           ;spi.c: 438: DMACON1bits.TXINC = 1;
 39184  0060AE  8A88               	bsf	3976,5,c	;volatile
 39185                           
 39186                           ;spi.c: 440: DMACON1bits.RXINC = 0;
 39187  0060B0  9888               	bcf	3976,4,c	;volatile
 39188                           
 39189                           ;spi.c: 442: DMACON1bits.DUPLEX1 = 0;
 39190  0060B2  9688               	bcf	3976,3,c	;volatile
 39191                           
 39192                           ;spi.c: 443: DMACON1bits.DUPLEX0 = 1;
 39193  0060B4  8488               	bsf	3976,2,c	;volatile
 39194                           
 39195                           ;spi.c: 445: DMACON1bits.DLYINTEN = 0;
 39196  0060B6  9288               	bcf	3976,1,c	;volatile
 39197                           
 39198                           ;spi.c: 447: DMACON2bits.DLYCYC = 0b0000;
 39199  0060B8  9886               	bcf	3974,4,c	;volatile
 39200  0060BA  9A86               	bcf	3974,5,c	;volatile
 39201  0060BC  9C86               	bcf	3974,6,c	;volatile
 39202  0060BE  9E86               	bcf	3974,7,c	;volatile
 39203                           
 39204                           ;spi.c: 449: DMACON2bits.INTLVL = 0b0000;
 39205  0060C0  9086               	bcf	3974,0,c	;volatile
 39206  0060C2  9286               	bcf	3974,1,c	;volatile
 39207  0060C4  9486               	bcf	3974,2,c	;volatile
 39208  0060C6  9686               	bcf	3974,3,c	;volatile
 39209                           
 39210                           ;spi.c: 452: TXADDRH = ((unsigned char)((((uint16_t) command)>>8)&0xFF));
 39211  0060C8  5002               	movf	spi_tx_rx@command+1,w,c
 39212  0060CA  6E6A               	movwf	3946,c	;volatile
 39213                           
 39214                           ;spi.c: 453: TXADDRL = ((unsigned char)(((uint16_t) command)&0xFF));
 39215  0060CC  C001  FF6B         	movff	spi_tx_rx@command,3947	;volatile
 39216                           
 39217                           ;spi.c: 456: DMABCH = ((unsigned char)((((uint16_t) (command_length-1))>>8)&0xFF));
 39218  0060D0  0EFF               	movlw	255
 39219  0060D2  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39220  0060D4  0EFF               	movlw	255
 39221  0060D6  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39222  0060D8  C003  F00B         	movff	spi_tx_rx@command_length,??_spi_tx_rx+2
 39223  0060DC  C004  F00C         	movff	spi_tx_rx@command_length+1,??_spi_tx_rx+3
 39224  0060E0  5009               	movf	??_spi_tx_rx,w,c
 39225  0060E2  260B               	addwf	??_spi_tx_rx+2,f,c
 39226  0060E4  500A               	movf	??_spi_tx_rx+1,w,c
 39227  0060E6  220C               	addwfc	??_spi_tx_rx+3,f,c
 39228  0060E8  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39229  0060EC  6A0C               	clrf	??_spi_tx_rx+3,c
 39230  0060EE  500B               	movf	??_spi_tx_rx+2,w,c
 39231  0060F0  6E66               	movwf	3942,c	;volatile
 39232                           
 39233                           ;spi.c: 457: DMABCL = ((unsigned char)(((uint16_t) (command_length-1))&0xFF));
 39234  0060F2  0403               	decf	spi_tx_rx@command_length,w,c
 39235  0060F4  6E67               	movwf	3943,c	;volatile
 39236                           
 39237                           ;spi.c: 460: LATDbits.LD7 = 0;
 39238  0060F6  9E8C               	bcf	3980,7,c	;volatile
 39239                           
 39240                           ;spi.c: 463: DMACON1bits.DMAEN = 1;
 39241  0060F8  8088               	bsf	3976,0,c	;volatile
 39242  0060FA  B088               	btfsc	3976,0,c	;volatile
 39243  0060FC  D7FE               	goto	l2801
 39244                           
 39245                           ;spi.c: 467: DMACON1bits.TXINC = 0;
 39246  0060FE  9A88               	bcf	3976,5,c	;volatile
 39247                           
 39248                           ;spi.c: 469: DMACON1bits.RXINC = 1;
 39249  006100  8888               	bsf	3976,4,c	;volatile
 39250                           
 39251                           ;spi.c: 471: DMACON1bits.DUPLEX1 = 0;
 39252  006102  9688               	bcf	3976,3,c	;volatile
 39253                           
 39254                           ;spi.c: 472: DMACON1bits.DUPLEX0 = 0;
 39255  006104  9488               	bcf	3976,2,c	;volatile
 39256                           
 39257                           ;spi.c: 475: RXADDRH = ((unsigned char)((((uint16_t) data)>>8)&0xFF));
 39258  006106  5006               	movf	spi_tx_rx@data+1,w,c
 39259  006108  6E68               	movwf	3944,c	;volatile
 39260                           
 39261                           ;spi.c: 476: RXADDRL = ((unsigned char)(((uint16_t) data)&0xFF));
 39262  00610A  C005  FF69         	movff	spi_tx_rx@data,3945	;volatile
 39263                           
 39264                           ;spi.c: 479: DMABCH = ((unsigned char)((((uint16_t) (data_length-1))>>8)&0xFF));
 39265  00610E  0EFF               	movlw	255
 39266  006110  6E09               	movwf	??_spi_tx_rx& (0+255),c
 39267  006112  0EFF               	movlw	255
 39268  006114  6E0A               	movwf	(??_spi_tx_rx+1)& (0+255),c
 39269  006116  C007  F00B         	movff	spi_tx_rx@data_length,??_spi_tx_rx+2
 39270  00611A  C008  F00C         	movff	spi_tx_rx@data_length+1,??_spi_tx_rx+3
 39271  00611E  5009               	movf	??_spi_tx_rx,w,c
 39272  006120  260B               	addwf	??_spi_tx_rx+2,f,c
 39273  006122  500A               	movf	??_spi_tx_rx+1,w,c
 39274  006124  220C               	addwfc	??_spi_tx_rx+3,f,c
 39275  006126  C00C  F00B         	movff	??_spi_tx_rx+3,??_spi_tx_rx+2
 39276  00612A  6A0C               	clrf	??_spi_tx_rx+3,c
 39277  00612C  500B               	movf	??_spi_tx_rx+2,w,c
 39278  00612E  6E66               	movwf	3942,c	;volatile
 39279                           
 39280                           ;spi.c: 480: DMABCL = ((unsigned char)(((uint16_t) (data_length-1))&0xFF));
 39281  006130  0407               	decf	spi_tx_rx@data_length,w,c
 39282  006132  6E67               	movwf	3943,c	;volatile
 39283                           
 39284                           ;spi.c: 483: DMACON1bits.DMAEN = 1;
 39285  006134  8088               	bsf	3976,0,c	;volatile
 39286  006136  B088               	btfsc	3976,0,c	;volatile
 39287  006138  D7FE               	goto	l2804
 39288                           
 39289                           ;spi.c: 487: LATDbits.LD7 = 1;
 39290  00613A  8E8C               	bsf	3980,7,c	;volatile
 39291  00613C  0012               	return		;funcret
 39292  00613E                     __end_of_spi_tx_rx:
 39293                           	opt stack 0
 39294                           tosu	equ	0xFFF
 39295                           tosh	equ	0xFFE
 39296                           tosl	equ	0xFFD
 39297                           pclath	equ	0xFFA
 39298                           tblptru	equ	0xFF8
 39299                           tblptrh	equ	0xFF7
 39300                           tblptrl	equ	0xFF6
 39301                           tablat	equ	0xFF5
 39302                           prodh	equ	0xFF4
 39303                           prodl	equ	0xFF3
 39304                           intcon	equ	0xFF2
 39305                           intcon2	equ	0xFF1
 39306                           intcon3	equ	0xFF0
 39307                           indf0	equ	0xFEF
 39308                           postinc0	equ	0xFEE
 39309                           fsr0h	equ	0xFEA
 39310                           fsr0l	equ	0xFE9
 39311                           wreg	equ	0xFE8
 39312                           indf1	equ	0xFE7
 39313                           postdec1	equ	0xFE5
 39314                           plusw1	equ	0xFE3
 39315                           fsr1h	equ	0xFE2
 39316                           fsr1l	equ	0xFE1
 39317                           indf2	equ	0xFDF
 39318                           postinc2	equ	0xFDE
 39319                           postdec2	equ	0xFDD
 39320                           plusw2	equ	0xFDB
 39321                           fsr2h	equ	0xFDA
 39322                           fsr2l	equ	0xFD9
 39323                           status	equ	0xFD8
 39324                           
 39325 ;; *************** function _USBTransferOnePacket *****************
 39326 ;; Defined at:
 39327 ;;		line 995 in file "usb_device.c"
 39328 ;; Parameters:    Size  Location     Type
 39329 ;;  ep              1    wreg     unsigned char 
 39330 ;;  dir             1    0[COMRAM] unsigned char 
 39331 ;;  data            2    1[COMRAM] PTR unsigned char 
 39332 ;;		 -> ToSendDataBuffer(64), ReceivedDataBuffer(64), msd_buffer(512), msd_csw(13), 
 39333 ;;		 -> msd_cbw(31), NULL(0), 
 39334 ;;  len             1    3[COMRAM] unsigned char 
 39335 ;; Auto vars:     Size  Location     Type
 39336 ;;  ep              1    8[COMRAM] unsigned char 
 39337 ;;  handle          2    9[COMRAM] PTR volatile struct __BD
 39338 ;;		 -> RAM(3759), NULL(0), BDT(48), 
 39339 ;; Return value:  Size  Location     Type
 39340 ;;                  2    0[COMRAM] PTR void 
 39341 ;; Registers used:
 39342 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh
 39343 ;; Tracked objects:
 39344 ;;		On entry : 0/0
 39345 ;;		On exit  : 0/0
 39346 ;;		Unchanged: 0/0
 39347 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK8   BANK9  BANK10  BANK11  BANK12 BANK13
      +h BANK13l  BANK14
 39348 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39349 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39350 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39351 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0
 39352 ;;Total ram usage:       11 bytes
 39353 ;; Hardware stack levels used:    1
 39354 ;; This function calls:
 39355 ;;		Nothing
 39356 ;; This function is called by:
 39357 ;;		_USBMSDInit
 39358 ;;		_USBCheckMSDRequest
 39359 ;;		_MSDTasks
 39360 ;;		_MSDProcessCommandMediaPresent
 39361 ;;		_MSDReadHandler
 39362 ;;		_MSDWriteHandler
 39363 ;;		_MSDTransferTerminated
 39364 ;;		_APP_DeviceCustomHIDInitialize
 39365 ;;		_APP_DeviceCustomHIDTasks
 39366 ;; This function uses a non-reentrant model
 39367 ;;
 39368                           
 39369                           	psect	text206
 39370  004656                     __ptext206:
 39371                           	opt stack 0
 39372  004656                     _USBTransferOnePacket:
 39373                           	opt stack 27
 39374                           
 39375                           ;incstack = 0
 39376                           ;USBTransferOnePacket@ep stored from wreg
 39377  004656  6E09               	movwf	USBTransferOnePacket@ep,c
 39378                           
 39379                           ;usb_device.c: 997: volatile BDT_ENTRY* handle;;usb_device.c: 1000: if(dir != 0)
 39380  004658  5001               	movf	USBTransferOnePacket@dir,w,c
 39381  00465A  B4D8               	btfsc	status,2,c
 39382  00465C  D007               	goto	l183
 39383                           
 39384                           ;usb_device.c: 1001: {;usb_device.c: 1003: handle = pBDTEntryIn[ep];
 39385  00465E  5009               	movf	USBTransferOnePacket@ep,w,c
 39386  004660  0D02               	mullw	2
 39387  004662  0E6C               	movlw	low _pBDTEntryIn
 39388  004664  24F3               	addwf	prodl,w,c
 39389  004666  6ED9               	movwf	fsr2l,c
 39390  004668  0E00               	movlw	high _pBDTEntryIn
 39391  00466A  D006               	goto	L41
 39392  00466C                     l183:
 39393                           
 39394                           ;usb_device.c: 1005: else;usb_device.c: 1006: {;usb_device.c: 1008: handle = pBDTEntryOu
      +                          t[ep];
 39395  00466C  5009               	movf	USBTransferOnePacket@ep,w,c
 39396  00466E  0D02               	mullw	2
 39397  004670  0E72               	movlw	low _pBDTEntryOut
 39398  004672  24F3               	addwf	prodl,w,c
 39399  004674  6ED9               	movwf	fsr2l,c
 39400  004676  0E00               	movlw	high _pBDTEntryOut
 39401  004678                     L41:
 39402  004678  20F4               	addwfc	prodh,w,c
 39403  00467A  6EDA               	movwf	fsr2h,c
 39404  00467C  CFDE F00A          	movff	postinc2,USBTransferOnePacket@handle
 39405  004680  CFDD F00B          	movff	postdec2,USBTransferOnePacket@handle+1
 39406                           
 39407                           ;usb_device.c: 1009: };usb_device.c: 1013: if(handle == 0)
 39408  004684  500A               	movf	USBTransferOnePacket@handle,w,c
 39409  004686  100B               	iorwf	USBTransferOnePacket@handle+1,w,c
 39410  004688  A4D8               	btfss	status,2,c
 39411  00468A  D005               	goto	l185
 39412                           
 39413                           ;usb_device.c: 1014: {;usb_device.c: 1015: return 0;
 39414  00468C  0E00               	movlw	0
 39415  00468E  6E01               	movwf	?_USBTransferOnePacket,c
 39416  004690  0E00               	movlw	0
 39417  004692  6E02               	movwf	?_USBTransferOnePacket+1,c
 39418  004694  0012               	return	
 39419  004696                     l185:
 39420                           
 39421                           ;usb_device.c: 1016: };usb_device.c: 1029: handle->ADR = ((uint16_t)(data));
 39422  004696  EE20 F002          	lfsr	2,2
 39423  00469A  500A               	movf	USBTransferOnePacket@handle,w,c
 39424  00469C  26D9               	addwf	fsr2l,f,c
 39425  00469E  500B               	movf	USBTransferOnePacket@handle+1,w,c
 39426  0046A0  22DA               	addwfc	fsr2h,f,c
 39427  0046A2  C002  FFDE         	movff	USBTransferOnePacket@data,postinc2
 39428  0046A6  C003  FFDD         	movff	USBTransferOnePacket@data+1,postdec2
 39429                           
 39430                           ;usb_device.c: 1030: handle->CNT = len;
 39431  0046AA  EE20 F001          	lfsr	2,1
 39432  0046AE  500A               	movf	USBTransferOnePacket@handle,w,c
 39433  0046B0  26D9               	addwf	fsr2l,f,c
 39434  0046B2  500B               	movf	USBTransferOnePacket@handle+1,w,c
 39435  0046B4  22DA               	addwfc	fsr2h,f,c
 39436  0046B6  C004  FFDF         	movff	USBTransferOnePacket@len,indf2
 39437                           
 39438                           ;usb_device.c: 1031: handle->STAT.Val &= 0x40;
 39439  0046BA  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39440  0046BE  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39441  0046C2  0E40               	movlw	64
 39442  0046C4  16DF               	andwf	indf2,f,c
 39443                           
 39444                           ;usb_device.c: 1032: handle->STAT.Val |= (0x08 & 0x08);
 39445  0046C6  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39446  0046CA  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39447  0046CE  0E00               	movlw	0
 39448  0046D0  86DB               	bsf	plusw2,3,c
 39449                           
 39450                           ;usb_device.c: 1033: handle->STAT.Val |= 0x80;
 39451  0046D2  C00A  FFD9         	movff	USBTransferOnePacket@handle,fsr2l
 39452  0046D6  C00B  FFDA         	movff	USBTransferOnePacket@handle+1,fsr2h
 39453  0046DA  0E00               	movlw	0
 39454  0046DC  8EDB               	bsf	plusw2,7,c
 39455                           
 39456                           ;usb_device.c: 1036: if(dir != 0)
 39457  0046DE  5001               	movf	USBTransferOnePacket@dir,w,c
 39458  0046E0  B4D8               	btfsc	status,2,c
 39459  0046E2  D018               	goto	l187
 39460                           
 39461                           ;usb_device.c: 1037: {;usb_device.c: 1039: pBDTEntryIn[ep] = (BDT_ENTRY*)(((uintptr_t)pB
      +                          DTEntryIn[ep]) ^ 0x0004);
 39462  0046E4  5009               	movf	USBTransferOnePacket@ep,w,c
 39463  0046E6  0D02               	mullw	2
 39464  0046E8  0E6C               	movlw	low _pBDTEntryIn
 39465  0046EA  24F3               	addwf	prodl,w,c
 39466  0046EC  6ED9               	movwf	fsr2l,c
 39467  0046EE  0E00               	movlw	high _pBDTEntryIn
 39468  0046F0  20F4               	addwfc	prodh,w,c
 39469  0046F2  6EDA               	movwf	fsr2h,c
 39470  0046F4  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 39471  0046F8  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 39472  0046FC  0E04               	movlw	4
 39473  0046FE  1805               	xorwf	??_USBTransferOnePacket,w,c
 39474  004700  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39475  004702  5006               	movf	??_USBTransferOnePacket+1,w,c
 39476  004704  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39477  004706  5009               	movf	USBTransferOnePacket@ep,w,c
 39478  004708  0D02               	mullw	2
 39479  00470A  0E6C               	movlw	low _pBDTEntryIn
 39480  00470C  24F3               	addwf	prodl,w,c
 39481  00470E  6ED9               	movwf	fsr2l,c
 39482  004710  0E00               	movlw	high _pBDTEntryIn
 39483  004712  D017               	goto	L42
 39484  004714                     l187:
 39485                           
 39486                           ;usb_device.c: 1041: else;usb_device.c: 1042: {;usb_device.c: 1044: pBDTEntryOut[ep] = (
      +                          BDT_ENTRY*)(((uintptr_t)pBDTEntryOut[ep]) ^ 0x0004);
 39487  004714  5009               	movf	USBTransferOnePacket@ep,w,c
 39488  004716  0D02               	mullw	2
 39489  004718  0E72               	movlw	low _pBDTEntryOut
 39490  00471A  24F3               	addwf	prodl,w,c
 39491  00471C  6ED9               	movwf	fsr2l,c
 39492  00471E  0E00               	movlw	high _pBDTEntryOut
 39493  004720  20F4               	addwfc	prodh,w,c
 39494  004722  6EDA               	movwf	fsr2h,c
 39495  004724  CFDE F005          	movff	postinc2,??_USBTransferOnePacket
 39496  004728  CFDD F006          	movff	postdec2,??_USBTransferOnePacket+1
 39497  00472C  0E04               	movlw	4
 39498  00472E  1805               	xorwf	??_USBTransferOnePacket,w,c
 39499  004730  6E07               	movwf	(??_USBTransferOnePacket+2)& (0+255),c
 39500  004732  5006               	movf	??_USBTransferOnePacket+1,w,c
 39501  004734  6E08               	movwf	(??_USBTransferOnePacket+3)& (0+255),c
 39502  004736  5009               	movf	USBTransferOnePacket@ep,w,c
 39503  004738  0D02               	mullw	2
 39504  00473A  0E72               	movlw	low _pBDTEntryOut
 39505  00473C  24F3               	addwf	prodl,w,c
 39506  00473E  6ED9               	movwf	fsr2l,c
 39507  004740  0E00               	movlw	high _pBDTEntryOut
 39508  004742                     L42:
 39509  004742  20F4               	addwfc	prodh,w,c
 39510  004744  6EDA               	movwf	fsr2h,c
 39511  004746  C007  FFDE         	movff	??_USBTransferOnePacket+2,postinc2
 39512  00474A  C008  FFDD         	movff	??_USBTransferOnePacket+3,postdec2
 39513                           
 39514                           ;usb_device.c: 1045: };usb_device.c: 1046: return (void*)handle;
 39515  00474E  C00A  F001         	movff	USBTransferOnePacket@handle,?_USBTransferOnePacket
 39516  004752  C00B  F002         	movff	USBTransferOnePacket@handle+1,?_USBTransferOnePacket+1
 39517  004756  0012               	return	
 39518  004758                     __end_of_USBTransferOnePacket:
 39519                           	opt stack 0
 39520                           tosu	equ	0xFFF
 39521                           tosh	equ	0xFFE
 39522                           tosl	equ	0xFFD
 39523                           pclath	equ	0xFFA
 39524                           tblptru	equ	0xFF8
 39525                           tblptrh	equ	0xFF7
 39526                           tblptrl	equ	0xFF6
 39527                           tablat	equ	0xFF5
 39528                           prodh	equ	0xFF4
 39529                           prodl	equ	0xFF3
 39530                           intcon	equ	0xFF2
 39531                           intcon2	equ	0xFF1
 39532                           intcon3	equ	0xFF0
 39533                           indf0	equ	0xFEF
 39534                           postinc0	equ	0xFEE
 39535                           fsr0h	equ	0xFEA
 39536                           fsr0l	equ	0xFE9
 39537                           wreg	equ	0xFE8
 39538                           indf1	equ	0xFE7
 39539                           postdec1	equ	0xFE5
 39540                           plusw1	equ	0xFE3
 39541                           fsr1h	equ	0xFE2
 39542                           fsr1l	equ	0xFE1
 39543                           indf2	equ	0xFDF
 39544                           postinc2	equ	0xFDE
 39545                           postdec2	equ	0xFDD
 39546                           plusw2	equ	0xFDB
 39547                           fsr2h	equ	0xFDA
 39548                           fsr2l	equ	0xFD9
 39549                           status	equ	0xFD8
 39550                           tosu	equ	0xFFF
 39551                           tosh	equ	0xFFE
 39552                           tosl	equ	0xFFD
 39553                           pclath	equ	0xFFA
 39554                           tblptru	equ	0xFF8
 39555                           tblptrh	equ	0xFF7
 39556                           tblptrl	equ	0xFF6
 39557                           tablat	equ	0xFF5
 39558                           prodh	equ	0xFF4
 39559                           prodl	equ	0xFF3
 39560                           intcon	equ	0xFF2
 39561                           intcon2	equ	0xFF1
 39562                           intcon3	equ	0xFF0
 39563                           indf0	equ	0xFEF
 39564                           postinc0	equ	0xFEE
 39565                           fsr0h	equ	0xFEA
 39566                           fsr0l	equ	0xFE9
 39567                           wreg	equ	0xFE8
 39568                           indf1	equ	0xFE7
 39569                           postdec1	equ	0xFE5
 39570                           plusw1	equ	0xFE3
 39571                           fsr1h	equ	0xFE2
 39572                           fsr1l	equ	0xFE1
 39573                           indf2	equ	0xFDF
 39574                           postinc2	equ	0xFDE
 39575                           postdec2	equ	0xFDD
 39576                           plusw2	equ	0xFDB
 39577                           fsr2h	equ	0xFDA
 39578                           fsr2l	equ	0xFD9
 39579                           status	equ	0xFD8
 39580                           
 39581                           	psect	text207
 39582  000000                     __ptext207:
 39583                           	opt stack 0
 39584                           tosu	equ	0xFFF
 39585                           tosh	equ	0xFFE
 39586                           tosl	equ	0xFFD
 39587                           pclath	equ	0xFFA
 39588                           tblptru	equ	0xFF8
 39589                           tblptrh	equ	0xFF7
 39590                           tblptrl	equ	0xFF6
 39591                           tablat	equ	0xFF5
 39592                           prodh	equ	0xFF4
 39593                           prodl	equ	0xFF3
 39594                           intcon	equ	0xFF2
 39595                           intcon2	equ	0xFF1
 39596                           intcon3	equ	0xFF0
 39597                           indf0	equ	0xFEF
 39598                           postinc0	equ	0xFEE
 39599                           fsr0h	equ	0xFEA
 39600                           fsr0l	equ	0xFE9
 39601                           wreg	equ	0xFE8
 39602                           indf1	equ	0xFE7
 39603                           postdec1	equ	0xFE5
 39604                           plusw1	equ	0xFE3
 39605                           fsr1h	equ	0xFE2
 39606                           fsr1l	equ	0xFE1
 39607                           indf2	equ	0xFDF
 39608                           postinc2	equ	0xFDE
 39609                           postdec2	equ	0xFDD
 39610                           plusw2	equ	0xFDB
 39611                           fsr2h	equ	0xFDA
 39612                           fsr2l	equ	0xFD9
 39613                           status	equ	0xFD8
 39614                           
 39615                           	psect	rparam
 39616  0000                     tosu	equ	0xFFF
 39617                           tosh	equ	0xFFE
 39618                           tosl	equ	0xFFD
 39619                           pclath	equ	0xFFA
 39620                           tblptru	equ	0xFF8
 39621                           tblptrh	equ	0xFF7
 39622                           tblptrl	equ	0xFF6
 39623                           tablat	equ	0xFF5
 39624                           prodh	equ	0xFF4
 39625                           prodl	equ	0xFF3
 39626                           intcon	equ	0xFF2
 39627                           intcon2	equ	0xFF1
 39628                           intcon3	equ	0xFF0
 39629                           indf0	equ	0xFEF
 39630                           postinc0	equ	0xFEE
 39631                           fsr0h	equ	0xFEA
 39632                           fsr0l	equ	0xFE9
 39633                           wreg	equ	0xFE8
 39634                           indf1	equ	0xFE7
 39635                           postdec1	equ	0xFE5
 39636                           plusw1	equ	0xFE3
 39637                           fsr1h	equ	0xFE2
 39638                           fsr1l	equ	0xFE1
 39639                           indf2	equ	0xFDF
 39640                           postinc2	equ	0xFDE
 39641                           postdec2	equ	0xFDD
 39642                           plusw2	equ	0xFDB
 39643                           fsr2h	equ	0xFDA
 39644                           fsr2l	equ	0xFD9
 39645                           status	equ	0xFD8


Data Sizes:
    Strings     47
    Constant    810
    Data        38
    BSS         2155
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160     73     159
    BANK1           256      0     256
    BANK2           256      0     251
    BANK3           256      0      64
    BANK4           256      0       0
    BANK5           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13h         115      0       0
    BANK13l          33      0       0
    BANK14          176      0       0

Pointer List with Targets:

    ExternalFlash_MediaInitialize@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_CapacityRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorSizeRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_MediaDetect@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorRead@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_WriteProtectStateGet@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ExternalFlash_SectorWrite@config	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    _parse_file_modify@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_truncate@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    S1973$6$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$6$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$4$2	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    S1973$4$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$5$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$2$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$1$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$0$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$3$0	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    FileAddress	PTR const unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 11
		 -> fat_find_file@buffer(COMRAM[11]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    memset@p1	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memset@p	PTR unsigned char  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 

    memcpy@d1	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@d	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s1	PTR const void  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    memcpy@s	PTR const unsigned char  size(3) Largest target is 36863
		 -> _spi_external_rx_buffer(BANK2[64]), ROM(CODE[36863]), flash_command_pagesize_528(CODE[4]), flash_command_pagesize_512(CODE[4]), 
		 -> inq_resp(CODE[36]), CtrlTrfData(BIGRAMhl[8]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    spi_tx_rx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), _flash_get_status@status(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_rx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_partial_read@command(COMRAM[4]), _flash_get_status@command(COMRAM[1]), 

    spi_tx_tx@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    spi_tx_tx@command	PTR unsigned char  size(2) Largest target is 4
		 -> _flash_write_to_buffer@command(COMRAM[4]), 

    spi_tx@data	PTR unsigned char  size(2) Largest target is 4
		 -> flash_set_power_state@command(COMRAM[1]), _flash_write_page_from_buffer@command(COMRAM[4]), _flash_erase_page@command(COMRAM[4]), _flash_compare_page_to_buffer@command(COMRAM[4]), 
		 -> _flash_copy_page_to_buffer@command(COMRAM[4]), _flash_wakeup@command(COMRAM[1]), _flash_set_page_size@command(COMRAM[4]), 

    _parse_file_append@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_rename@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_create@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_file_delete@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _parse_command_long@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    _fill_buffer_read_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_read_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_find_file@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_file_details@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_configuration@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_bootloader_details@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_display@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    _fill_buffer_get_status@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_parse@inBuffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), ReceivedDataBuffer(BANK2[64]), 

    api_prepare@outBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), RAM(DATA[3759]), 

    api_prepare@inBuffer	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), RAM(DATA[3759]), 

    internalFlash_read@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), 

    sp__internalFlash_getBuffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    _bootloader_program@buffer	PTR unsigned char  size(2) Largest target is 1024
		 -> pageBuffer(BIGRAMlh[1024]), 

    parseHexFileEntry@hexEntry	PTR struct HexFileEntry size(2) Largest target is 23
		 -> hex_file_entry(BANK1[23]), 

    parseHexFileEntry@data	PTR unsigned char  size(2) Largest target is 50
		 -> file_buffer(BANK2[50]), 

    fat_get_file_information@data	PTR struct . size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), 
		 -> RAM(DATA[3759]), 

    fat_read_from_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), RAM(DATA[3759]), 

    fat_rename_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_rename_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_append_to_file@data	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_create_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), 

    fat_find_file@extension	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_extension(CODE[4]), RAM(DATA[3759]), 

    fat_find_file@name	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_rx_buffer(BANK2[64]), bootloader_filename(CODE[9]), RAM(DATA[3759]), 

    _write_root@data	PTR struct . size(2) Largest target is 32
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 

    _update_modified_time@root	PTR struct . size(2) Largest target is 32
		 -> fat_append_to_file@root(BANK0[32]), 

    ExternalFlash_SectorWrite@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    ExternalFlash_SectorRead@buffer	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), 

    sp__ExternalFlash_MediaInitialize	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    flash_partial_write@data	PTR unsigned char  size(2) Largest target is 3759
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), _write_file_size@new_file_size(COMRAM[4]), 
		 -> _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), RAM(DATA[3759]), 

    flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), fat_read_from_file@root(BANK0[32]), fat_rename_file@root(BANK0[32]), 
		 -> fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), _get_file_size@file_size(COMRAM[4]), 
		 -> _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), _get_empty_cluster@value(COMRAM[2]), 
		 -> _root_is_available@first_byte(COMRAM[1]), RAM(DATA[3759]), 

    flash_page_write@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    flash_page_read@data	PTR unsigned char  size(2) Largest target is 512
		 -> buffer(BIGRAMll[512]), msd_buffer(BIGRAMll[512]), 

    _flash_partial_read@data	PTR unsigned char  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), file_buffer(BANK2[50]), buffer(BIGRAMll[512]), fat_read_from_file@root(BANK0[32]), 
		 -> fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_get_file_size@file_size(COMRAM[4]), fat_find_file@buffer(COMRAM[11]), 
		 -> _get_file_size@file_size(COMRAM[4]), _get_first_cluster@first_cluster(COMRAM[2]), _read_fat@value(COMRAM[2]), fat_get_empty_clusters@value(COMRAM[2]), 
		 -> _get_empty_cluster@value(COMRAM[2]), _root_is_available@first_byte(COMRAM[1]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), 

    _flash_write_to_buffer@data	PTR unsigned char  size(2) Largest target is 3759
		 -> buffer(BIGRAMll[512]), fat_rename_file@root(BANK0[32]), fat_append_to_file@root(BANK0[32]), fat_create_file@root_entry(BANK0[32]), 
		 -> _write_file_size@new_file_size(COMRAM[4]), _delete_root@deleted_value(COMRAM[1]), _write_fat@value(COMRAM[2]), msd_buffer(BIGRAMll[512]), 
		 -> RAM(DATA[3759]), 

    _display_itoa_u32@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 80
		 -> _display_itoa@tmp(COMRAM[10]), display_content(BANK1[80]), 

    _display_itoa_u16@text	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    i2c_display_write_fixed@data	PTR unsigned char  size(2) Largest target is 80
		 -> display_content(BANK1[80]), 

    _i2c_read@data	PTR unsigned char  size(2) Largest target is 1
		 -> i2c_eeprom_readByte@addr(COMRAM[1]), 

    _i2c_write@data	PTR unsigned char  size(2) Largest target is 17
		 -> i2c_eeprom_read@addr(COMRAM[1]), i2c_eeprom_write@dat(COMRAM[17]), i2c_eeprom_readByte@addr(COMRAM[1]), i2c_eeprom_writeByte@dat(COMRAM[2]), 
		 -> i2c_digipot_backlight@data_array(COMRAM[2]), i2c_digipot_reset_off@data_array(COMRAM[2]), i2c_digipot_reset_on@data_array(COMRAM[2]), i2c_display_send_init_sequence@init_sequence(COMRAM[9]), 
		 -> _ic2_display_set_address@data_array(COMRAM[2]), 

    USBOutHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBInHandle	PTR volatile void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__spi_get_external_tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    main@tx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_tx_buffer(BANK2[64]), 

    sp__spi_get_external_rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    main@rx_buffer	PTR unsigned char  size(2) Largest target is 64
		 -> _spi_external_rx_buffer(BANK2[64]), 

    USER_USB_CALLBACK_EVENT_HANDLER@pdata	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    MSDTransferTerminated$2407	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTransferTerminated@handle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), USTATcopy(BANK0[1]), USBActiveConfiguration(BANK0[1]), NULL(NULL[0]), 
		 -> BDT(BIGRAMll[48]), 

    ptrNextData	PTR unsigned char  size(2) Largest target is 512
		 -> msd_buffer(BIGRAMll[512]), NULL(NULL[0]), 

    MSDTasks$2373	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    MSDTasks$2372	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2320	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBCheckMSDRequest$2319	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp_S1973$0	PTR struct . size(2) Largest target is 5
		 -> mediaInformation(BANK1[5]), 

    S1973$AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncReadTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    LUN.AsyncWriteTasks	PTR FTN(PTR void ,PTR void ,)unsigned char  size(2) Largest target is 0

    S1973$mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LUN.mediaParameters	PTR void  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S1973$SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    LUN.SectorWrite	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorWrite(), 

    S1973$WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    LUN.WriteProtectState	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_WriteProtectStateGet(), 

    S1973$SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    LUN.SectorRead	PTR FTN(PTR void ,unsigned long ,PTR unsigned char ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_SectorRead(), 

    S1973$MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    LUN.MediaDetect	PTR FTN(PTR void ,)unsigned char  size(2) Largest target is 1
		 -> ExternalFlash_MediaDetect(), 

    S1973$ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    LUN.ReadSectorSize	PTR FTN(PTR void ,)unsigned int  size(2) Largest target is 2
		 -> ExternalFlash_SectorSizeRead(), 

    S1973$ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    LUN.ReadCapacity	PTR FTN(PTR void ,)unsigned long  size(2) Largest target is 4
		 -> ExternalFlash_CapacityRead(), 

    S1973$MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    LUN.MediaInitialize	PTR FTN(PTR void ,)PTR struct . size(2) Largest target is 3
		 -> ExternalFlash_MediaInitialize(), 

    USBMSDInHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBMSDOutHandle	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStdFeatureReqHandler@pUEP	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    USBStdFeatureReqHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    sp__memcpy	PTR void  size(2) Largest target is 3759
		 -> _spi_external_tx_buffer(BANK2[64]), pageBuffer(BIGRAMlh[1024]), _bootloader_verify_program_memory@buffer(COMRAM[16]), fat_create_file@root_entry(BANK0[32]), 
		 -> _flash_set_page_size@command(COMRAM[4]), msd_buffer(BIGRAMll[512]), RAM(DATA[3759]), SetupPkt(BIGRAMhl[8]), 

    USBStdGetStatusHandler@p	PTR struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USB_SD_Ptr	const PTR const unsigned char [4] size(2) Largest target is 52
		 -> sd003(CODE[26]), sd002(CODE[46]), sd001(CODE[52]), sd000(CODE[4]), 

    USB_CD_Ptr	const PTR const unsigned char [1] size(2) Largest target is 64
		 -> configDescriptor1(CODE[64]), 

    pDst	PTR unsigned char  size(2) Largest target is 8
		 -> CtrlTrfData(BIGRAMhl[8]), NULL(NULL[0]), 

    USBConfigureEndpoint@handle	PTR volatile struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutCurrent	PTR volatile struct __BDT size(2) Largest target is 48
		 -> NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBStallEndpoint@p	PTR struct __BDT size(2) Largest target is 48
		 -> BDT(BIGRAMll[48]), 

    pBDTEntryEP0OutNext	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@data	PTR unsigned char  size(2) Largest target is 512
		 -> ToSendDataBuffer(BANK3[64]), ReceivedDataBuffer(BANK2[64]), msd_buffer(BIGRAMll[512]), msd_csw(BIGRAMhl[13]), 
		 -> msd_cbw(BIGRAMhl[31]), NULL(NULL[0]), 

    sp__USBTransferOnePacket	PTR void  size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBTransferOnePacket@handle	PTR volatile struct __BDT size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    USBEnableEndpoint@p	PTR unsigned char  size(2) Largest target is 1
		 -> UEP0(SFR_1[1]), 

    pBDTEntryOut	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    pBDTEntryIn	PTR volatile struct __BDT[3] size(2) Largest target is 3759
		 -> RAM(DATA[3759]), NULL(NULL[0]), BDT(BIGRAMll[48]), 

    S105$pFunc	PTR FTN()void  size(2) Largest target is 0

    outPipes.pFunc	PTR FTN()void  size(2) Largest target is 0

    S95$wRam	PTR unsigned int  size(2) Largest target is 0

    outPipes.pDst.wRam	PTR unsigned int  size(2) Largest target is 0

    S95$bRam	PTR unsigned char  size(2) Largest target is 0

    outPipes.pDst.bRam	PTR unsigned char  size(2) Largest target is 0

    S71$wRom	PTR const unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRom	PTR const unsigned int  size(2) Largest target is 0

    S71$wRam	PTR unsigned int  size(2) Largest target is 0

    inPipes.pSrc.wRam	PTR unsigned int  size(2) Largest target is 0

    S71$bRom	PTR const unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRom	PTR const unsigned char  size(2) Largest target is 0

    S71$bRam	PTR unsigned char  size(2) Largest target is 0

    inPipes.pSrc.bRam	PTR unsigned char  size(2) Largest target is 0

    sp__memset	PTR void  size(2) Largest target is 48
		 -> USBAlternateInterface(BANK1[2]), BDT(BIGRAMll[48]), UEP1(SFR_1[1]), 


Critical Paths under _main in COMRAM

    _main->_api_prepare
    _main->_bootloader_run
    _ui_run->_i2c_display_send_init_sequence
    _i2c_display_send_init_sequence->__i2c_write
    _i2c_digipot_reset_on->__i2c_write
    _i2c_digipot_reset_off->__i2c_write
    _i2c_digipot_backlight->__i2c_write
    _i2c_init->_i2c_set_frequency
    _flash_init->__flash_set_page_size
    _spi_init->__spi_init
    __flash_set_page_size->__flash_is_busy
    _fat_init->_fat_get_format_status
    _fat_get_format_status->_flash_page_read
    _fat_format->_flash_page_write
    _display_update->_i2c_display_cursor
    _i2c_display_write_fixed->__i2c_wait_idle
    _i2c_display_cursor->__ic2_display_set_address
    __ic2_display_set_address->__i2c_write
    _display_prepare->__display_found
    __display_verify->__display_itoa_u16
    __display_start->__display_itoa_u32
    __display_programming->__display_itoa_u16
    __display_found->__display_itoa_u32
    __display_failed->__display_itoa_u32
    __display_itoa_u32->__display_itoa_u16
    __display_done->__display_itoa_u16
    __display_checked->__display_itoa_u16
    __display_itoa_u16->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _bootloader_run->__bootloader_program
    _bootloader_run->__bootloader_verify_file
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _parseHexFileEntry->_hexCharsToUint16
    _hexCharsToUint8->_hexCharToUint8
    _hexCharsToUint16->_hexCharToUint8
    _internalFlash_writePage->__internalFlash_unlockAndActivate
    _internalFlash_readPage->_internalFlash_read
    _internalFlash_read->_memcpy
    _internalFlash_erasePage->__internalFlash_unlockAndActivate
    _internalFlash_addressWithinPage->_internalFlash_addressFromPage
    __bootloader_find_file->_fat_find_file
    __normal_mode->_i2c_eeprom_readByte
    _i2c_eeprom_readByte->__i2c_read
    __i2c_read->__i2c_wait_idle
    _USBDeviceTasks->_USBCtrlEPService
    _USBWakeFromSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBSuspend->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBDeviceInit->_memset
    _USBCtrlEPAllowDataStage->_USBCtrlTrfTxService
    _USBCheckStdRequest->_USBStdFeatureReqHandler
    _USBStdSetCfgHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USBStdFeatureReqHandler->_USER_USB_CALLBACK_EVENT_HANDLER
    _USER_USB_CALLBACK_EVENT_HANDLER->_MSDTransferTerminated
    _USER_USB_CALLBACK_EVENT_HANDLER->_USBCheckMSDRequest
    _USBCheckMSDRequest->_USBTransferOnePacket
    _MSDTransferTerminated->_USBTransferOnePacket
    _APP_DeviceMSDInitialize->_USBMSDInit
    _USBMSDInit->_USBTransferOnePacket
    _APP_DeviceCustomHIDInitialize->_USBEnableEndpoint
    _USBEnableEndpoint->_USBConfigureEndpoint
    _USBCtrlTrfOutHandler->_USBCtrlTrfRxService
    _USBCtrlTrfInHandler->_USBCtrlTrfTxService
    _APP_DeviceMSDTasks->_MSDTasks
    _MSDTasks->_MSDProcessCommand
    _MSDProcessCommand->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaAbsent->_MSDProcessCommandMediaPresent
    _MSDProcessCommandMediaPresent->_MSDReadHandler
    _MSDWriteHandler->_ExternalFlash_SectorWrite
    _ExternalFlash_SectorWrite->_flash_page_write
    _flash_page_write->__flash_compare_page_to_buffer
    _MSDReadHandler->_ExternalFlash_SectorRead
    _MSDCheckForErrorCases->_MSDErrorHandler
    _MSDErrorHandler->_USBStallEndpoint
    _ExternalFlash_SectorRead->_flash_page_read
    _flash_page_read->__flash_partial_read
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    _fat_read_from_file->_fat_get_file_information
    _fat_get_file_size->_flash_partial_read
    __fill_buffer_get_status->_flash_is_busy
    __fill_buffer_get_file_details->_fat_get_file_information
    __fill_buffer_get_display->_display_get_character
    __fill_buffer_get_bootloader_details->_bootloader_get_file_size
    __fill_buffer_find_file->_fat_find_file
    _api_parse->__parse_command_long
    __parse_command_short->_i2c_eeprom_writeByte
    _i2c_eeprom_writeByte->__i2c_write
    __i2c_write->__i2c_wait_idle
    __parse_command_long->__parse_file_create
    __parse_file_rename->_fat_rename_file
    _fat_rename_file->_fat_get_file_information
    __parse_file_delete->_fat_delete_file
    _fat_delete_file->__get_first_cluster
    __get_first_cluster->_flash_partial_read
    __delete_root->_flash_partial_write
    __parse_file_create->_fat_create_file
    _fat_create_file->_fat_find_file
    _fat_get_empty_clusters->_flash_partial_read
    _fat_find_file->_flash_partial_read
    __get_available_root_entry->__root_is_available
    __parse_file_append->_fat_append_to_file
    _fat_append_to_file->_fat_get_file_information
    _fat_get_file_information->__root_is_available
    __root_is_available->_flash_partial_read
    __write_root->_flash_partial_write
    __write_fat->_flash_partial_write
    _flash_partial_write->__flash_compare_page_to_buffer
    _flash_is_busy->__flash_is_busy
    __flash_write_to_buffer->__flash_is_busy
    __flash_write_page_from_buffer->__flash_is_busy
    __flash_copy_page_to_buffer->__flash_is_busy
    __flash_compare_page_to_buffer->__flash_is_busy
    __update_modified_time->__get_date
    __update_modified_time->__get_time
    __read_fat->_flash_partial_read
    __get_empty_cluster->_flash_partial_read
    _flash_partial_read->__flash_partial_read
    __flash_partial_read->__flash_is_busy
    __flash_is_busy->__flash_get_status
    __flash_wakeup->_spi_tx
    __flash_get_status->_spi_tx_rx

Critical Paths under _main in BANK0

    _main->_APP_DeviceCustomHIDTasks
    _bootloader_run->__bootloader_program
    __bootloader_verify_file->_fat_read_from_file
    __bootloader_program->_fat_read_from_file
    _APP_DeviceCustomHIDTasks->_api_prepare
    _api_prepare->__fill_buffer_read_file
    __fill_buffer_read_file->_fat_read_from_file
    __parse_file_rename->_fat_rename_file
    __parse_file_create->_fat_create_file
    __parse_file_append->_fat_append_to_file

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13h

    None.

Critical Paths under _main in BANK13l

    None.

Critical Paths under _main in BANK14

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                10    10      0 1263881
                                             93 COMRAM     2     2      0
                                             65 BANK0      8     8      0
           _APP_DeviceCustomHIDTasks
                 _APP_DeviceMSDTasks
                  _SYSTEM_Initialize
                      _USBDeviceInit
                     _USBDeviceTasks
                       __normal_mode
                          _api_parse
                        _api_prepare
                     _bootloader_run
                    _display_prepare
                     _display_update
               _jump_to_main_program
         _spi_get_external_rx_buffer
         _spi_get_external_tx_buffer
                        _system_init
                   _timer_pseudo_isr
                      _ui_get_status
                             _ui_run
 ---------------------------------------------------------------------------------
 (1) _ui_run                                               0     0      0    7310
                        __ui_encoder
              _i2c_digipot_backlight
              _i2c_digipot_reset_off
               _i2c_digipot_reset_on
     _i2c_display_send_init_sequence
              _system_encoder_enable
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _system_encoder_enable                                0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_display_send_init_sequence                       9     9      0    1804
                                             10 COMRAM     9     9      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_on                                 2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_reset_off                                2     2      0    1828
                                             10 COMRAM     2     2      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_digipot_backlight                                3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) __ui_encoder                                          0     0      0       0
               _jump_to_main_program
 ---------------------------------------------------------------------------------
 (1) _timer_pseudo_isr                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          0     0      0   44543
               __system_encoder_init
                __system_timer0_init
                         _fat_format
                           _fat_init
                         _flash_init
                           _i2c_init
                            _ui_init
 ---------------------------------------------------------------------------------
 (2) _ui_init                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _i2c_init                                             0     0      0      44
                        __i2c_open_1
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_open_1                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _flash_init                                           0     0      0    6304
               __flash_set_page_size
                           _spi_init
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_init                                             1     1      0     222
                                              3 COMRAM     1     1      0
                          __spi_init
 ---------------------------------------------------------------------------------
 (4) __spi_init                                            3     0      3     178
                                              0 COMRAM     3     0      3
 ---------------------------------------------------------------------------------
 (3) __flash_set_page_size                                 5     5      0    6060
                                             19 COMRAM     5     5      0
                     __flash_is_busy
                             _memcpy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (2) _fat_init                                             0     0      0   21781
                         _fat_format
              _fat_get_format_status
 ---------------------------------------------------------------------------------
 (3) _fat_get_format_status                                4     4      0    5367
                                             43 COMRAM     4     4      0
                           __get_fbr
                           __get_mbr
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (3) _fat_format                                           2     2      0   16414
                                             36 COMRAM     2     2      0
                          __get_data
                           __get_fat
                           __get_fbr
                           __get_mbr
                          __get_root
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) __get_root                                            6     4      2     310
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (4) __get_mbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fbr                                             4     2      2     200
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_fat                                             4     2      2     111
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __get_data                                            2     0      2     133
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __system_timer0_init                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __system_encoder_init                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_tx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _spi_get_external_rx_buffer                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _display_update                                       0     0      0    3188
                 _i2c_display_cursor
            _i2c_display_write_fixed
 ---------------------------------------------------------------------------------
 (2) _i2c_display_write_fixed                              4     1      3     868
                                              5 COMRAM     4     1      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (2) _i2c_display_cursor                                   3     2      1    2320
                                             13 COMRAM     3     2      1
           __ic2_display_set_address
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __ic2_display_set_address                             3     3      0    1850
                                             10 COMRAM     3     3      0
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (1) _display_prepare                                      3     3      0   80079
                                             40 COMRAM     3     3      0
                   __display_checked
                     __display_clear
                      __display_done
                    __display_failed
                     __display_found
               __display_programming
                    __display_search
                     __display_start
                    __display_verify
 ---------------------------------------------------------------------------------
 (2) __display_verify                                      4     4      0    6683
                                             30 COMRAM     3     3      0
                  __display_itoa_u16
             _bootloader_get_entries
 ---------------------------------------------------------------------------------
 (2) __display_start                                       1     1      0   15330
                                             36 COMRAM     1     1      0
                  __display_itoa_u32
 ---------------------------------------------------------------------------------
 (2) __display_search                                      1     1      0     272
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __display_programming                                 1     1      0    6819
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
             _bootloader_get_entries
   _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (2) __display_found                                       4     4      0   15351
                                             36 COMRAM     4     4      0
                  __display_itoa_u32
           _bootloader_get_file_size
 ---------------------------------------------------------------------------------
 (2) __display_failed                                      2     2      0   21962
                                             36 COMRAM     1     1      0
                  __display_itoa_u16
                  __display_itoa_u32
             _bootloader_get_entries
               _bootloader_get_error
         _bootloader_get_rec_address
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u32                                    6     0      6   14943
                                             30 COMRAM     6     0      6
                            ___lldiv
                            ___llmod
                  __display_itoa_u16
           _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) ___llmod                                              9     1      8    1049
                                              0 COMRAM     9     1      8
 ---------------------------------------------------------------------------------
 (4) ___lldiv                                             13     5      8    1052
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (2) __display_done                                        1     1      0    6751
                                             30 COMRAM     1     1      0
                  __display_itoa_u16
   _bootloader_get_flashPagesWritten
 ---------------------------------------------------------------------------------
 (2) __display_clear                                       4     4      0     136
                                              0 COMRAM     4     4      0
 ---------------------------------------------------------------------------------
 (2) __display_checked                                     4     4      0    6753
                                             30 COMRAM     4     4      0
                  __display_itoa_u16
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) __display_itoa_u16                                    6     0      6    6457
                                             24 COMRAM     6     0      6
             _bootloader_get_entries (ARG)
   _bootloader_get_flashPagesWritten (ARG)
       _bootloader_get_total_entries (ARG)
                               _itoa
 ---------------------------------------------------------------------------------
 (4) _itoa                                                 8     2      6    4791
                                             16 COMRAM     8     2      6
                            ___lldiv (ARG)
                            ___llmod (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (5) _utoa                                                 9     3      6    1424
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (6) ___lwmod                                              5     1      4     337
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) ___lwdiv                                              7     3      4     518
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _bootloader_run                                       1     1      0  108165
                                             92 COMRAM     1     1      0
              __bootloader_find_file
                __bootloader_program
            __bootloader_verify_file
 ---------------------------------------------------------------------------------
 (2) __bootloader_verify_file                             17    17      0   46869
                                             84 COMRAM     8     8      0
                                             45 BANK0      9     9      0
          __bootloader_check_address
                  _fat_get_file_size
                 _fat_read_from_file
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (2) __bootloader_program                                 27    27      0   43860
                                             84 COMRAM     8     8      0
                                             45 BANK0     19    19      0
          __bootloader_check_address
                 _fat_read_from_file
    _internalFlash_addressWithinPage
            _internalFlash_erasePage
            _internalFlash_getBuffer
      _internalFlash_pageFromAddress
             _internalFlash_readPage
            _internalFlash_writePage
                  _parseHexFileEntry
 ---------------------------------------------------------------------------------
 (3) _parseHexFileEntry                                   17     9      8    3134
                                             11 COMRAM    17     9      8
                   _hexCharsToUint16
                    _hexCharsToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint8                                      4     3      1     538
                                              2 COMRAM     4     3      1
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (4) _hexCharsToUint16                                     9     6      3     495
                                              2 COMRAM     9     6      3
                     _hexCharToUint8
 ---------------------------------------------------------------------------------
 (5) _hexCharToUint8                                       2     2      0     114
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_writePage                             12    10      2     385
                                              2 COMRAM    10     8      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (3) _internalFlash_readPage                               6     4      2    3259
                                             21 COMRAM     6     4      2
      _internalFlash_addressFromPage
                 _internalFlash_read
 ---------------------------------------------------------------------------------
 (4) _internalFlash_read                                   8     0      8    2901
                                             13 COMRAM     8     0      8
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _internalFlash_pageFromAddress                        5     1      4     201
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) _internalFlash_getBuffer                              2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _internalFlash_erasePage                              6     4      2     269
                                              2 COMRAM     6     4      2
   __internalFlash_unlockAndActivate
 ---------------------------------------------------------------------------------
 (4) __internalFlash_unlockAndActivate                     2     2      0      45
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (3) _internalFlash_addressWithinPage                     14     8      6     492
                                              8 COMRAM    14     8      6
      _internalFlash_addressFromPage
 ---------------------------------------------------------------------------------
 (4) _internalFlash_addressFromPage                        8     4      4     224
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (3) __bootloader_check_address                           12     7      5     693
                                              0 COMRAM    12     7      5
 ---------------------------------------------------------------------------------
 (2) __bootloader_find_file                                0     0      0   17370
                      _fat_find_file
                  _fat_get_file_size
 ---------------------------------------------------------------------------------
 (1) __normal_mode                                         0     0      0    5460
                _i2c_eeprom_readByte
               _i2c_eeprom_writeByte
 ---------------------------------------------------------------------------------
 (2) _i2c_eeprom_readByte                                  7     5      2    2653
                                             17 COMRAM     7     5      2
                          __i2c_read
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) __i2c_read                                           12     9      3     534
                                              5 COMRAM    12     9      3
                   __i2c_acknowledge
                           __i2c_get
               __i2c_not_acknowledge
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_not_acknowledge                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_get                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_acknowledge                                     0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _USBDeviceTasks                                       1     1      0  143347
                                             31 COMRAM     1     1      0
          _USBCtrlEPAllowStatusStage
                   _USBCtrlEPService
                      _USBDeviceInit
      _USBIncrement1msInternalTimers
                    _USBStallHandler
                         _USBSuspend
                 _USBWakeFromSuspend
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBWakeFromSuspend                                   0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBSuspend                                           0     0      0   19652
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USBStallHandler                                      1     1      0       0
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _USBIncrement1msInternalTimers                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _USBDeviceInit                                        1     1      0    1366
                                              8 COMRAM     1     1      0
                             _memset
 ---------------------------------------------------------------------------------
 (2) _USBCtrlEPService                                     2     2      0   82979
                                             29 COMRAM     2     2      0
                _USBCtrlTrfInHandler
               _USBCtrlTrfOutHandler
             _USBCtrlTrfSetupHandler
                             _memcpy
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfSetupHandler                               0     0      0   80471
                 _USBCheckStdRequest
           _USBCtrlEPServiceComplete
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (4) _USBCtrlEPServiceComplete                             0     0      0      92
            _USBCtrlEPAllowDataStage
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowDataStage                              0     0      0      92
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (4) _USBCheckStdRequest                                   0     0      0   60727
            _USBStdFeatureReqHandler
                _USBStdGetDscHandler
             _USBStdGetStatusHandler
                _USBStdSetCfgHandler
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (5) _USBStdSetCfgHandler                                  1     1      0   20906
                                             23 COMRAM     1     1      0
    _USER_USB_CALLBACK_EVENT_HANDLER
                             _memset
 ---------------------------------------------------------------------------------
 (3) _memset                                               8     2      6    1164
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (5) _USBStdGetStatusHandler                               3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (5) _USBStdGetDscHandler                                  2     2      0       0
                                              0 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 (5) _USBStdFeatureReqHandler                              6     6      0   20123
                                             23 COMRAM     6     6      0
    _USER_USB_CALLBACK_EVENT_HANDLER
 ---------------------------------------------------------------------------------
 (2) _USER_USB_CALLBACK_EVENT_HANDLER                      8     2      6   19652
                                             15 COMRAM     8     2      6
      _APP_DeviceCustomHIDInitialize
            _APP_DeviceMSDInitialize
              _MSDTransferTerminated
                  _SYSTEM_Initialize
                 _USBCheckHIDRequest
                 _USBCheckMSDRequest
 ---------------------------------------------------------------------------------
 (3) _USBCheckMSDRequest                                   4     4      0    3361
                                             11 COMRAM     4     4      0
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _USBCheckHIDRequest                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _SYSTEM_Initialize                                    5     5      0      68
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (3) _MSDTransferTerminated                                4     2      2    5161
                                             11 COMRAM     4     2      2
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceMSDInitialize                              0     0      0    4302
                  _USBEnableEndpoint
                         _USBMSDInit
 ---------------------------------------------------------------------------------
 (4) _USBMSDInit                                           3     3      0    3569
                                             11 COMRAM     3     3      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
                     _ResetSenseData
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _APP_DeviceCustomHIDInitialize                        0     0      0    4046
                  _USBEnableEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (4) _USBEnableEndpoint                                    4     3      1     733
                                              8 COMRAM     4     3      1
               _USBConfigureEndpoint
 ---------------------------------------------------------------------------------
 (5) _USBConfigureEndpoint                                 8     7      1     400
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfOutHandler                                 0     0      0     114
                _USBCtrlTrfRxService
 ---------------------------------------------------------------------------------
 (4) _USBCtrlTrfRxService                                  2     2      0     114
                                              0 COMRAM     2     2      0
          _USBCtrlEPAllowStatusStage
 ---------------------------------------------------------------------------------
 (5) _USBCtrlEPAllowStatusStage                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _USBCtrlTrfInHandler                                  1     1      0     115
                                              1 COMRAM     1     1      0
                _USBCtrlTrfTxService
 ---------------------------------------------------------------------------------
 (6) _USBCtrlTrfTxService                                  1     1      0      92
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceMSDTasks                                   0     0      0   99240
                           _MSDTasks
 ---------------------------------------------------------------------------------
 (2) _MSDTasks                                             6     6      0   99240
                                             76 COMRAM     6     6      0
                  _MSDProcessCommand
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (3) _MSDProcessCommand                                    5     5      0   94076
                                             71 COMRAM     5     5      0
          _ExternalFlash_MediaDetect *
      _ExternalFlash_MediaInitialize *
       _MSDProcessCommandMediaAbsent
      _MSDProcessCommandMediaPresent
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaAbsent                         0     0      0   47789
                    _MSDErrorHandler
      _MSDProcessCommandMediaPresent
                     _ResetSenseData
 ---------------------------------------------------------------------------------
 (4) _MSDProcessCommandMediaPresent                       14    14      0   46031
                                             57 COMRAM    14    14      0
         _ExternalFlash_CapacityRead *
       _ExternalFlash_SectorSizeRead *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
       _MSDComputeDeviceInAndResidue
                    _MSDErrorHandler
                     _MSDReadHandler
                    _MSDWriteHandler
                     _ResetSenseData
               _USBTransferOnePacket
                             _memcpy
 ---------------------------------------------------------------------------------
 (5) _MSDWriteHandler                                      5     5      0   22671
                                             47 COMRAM     5     5      0
          _ExternalFlash_SectorWrite *
 _ExternalFlash_WriteProtectStateGet *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_WriteProtectStateGet                   2     0      2     192
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorWrite                           11     2      9   15083
                                             36 COMRAM    11     2      9
                   _flash_page_write
 ---------------------------------------------------------------------------------
 (4) _flash_page_write                                     5     1      4   14738
                                             31 COMRAM     5     1      4
      __flash_compare_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDReadHandler                                       4     4      0   12464
                                             53 COMRAM     4     4      0
           _ExternalFlash_SectorRead *
              _MSDCheckForErrorCases
                   _USBStallEndpoint
               _USBTransferOnePacket
 ---------------------------------------------------------------------------------
 (6) _MSDCheckForErrorCases                                7     3      4    2370
                                             10 COMRAM     7     3      4
                    _MSDErrorHandler
 ---------------------------------------------------------------------------------
 (7) _MSDErrorHandler                                      2     2      0    1758
                                              8 COMRAM     2     2      0
                     _ResetSenseData
                   _USBStallEndpoint
 ---------------------------------------------------------------------------------
 (4) _USBStallEndpoint                                     8     7      1    1713
                                              0 COMRAM     8     7      1
 ---------------------------------------------------------------------------------
 (5) _ResetSenseData                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _ExternalFlash_SectorRead                            10     2      8    5068
                                             43 COMRAM    10     2      8
                    _flash_page_read
 ---------------------------------------------------------------------------------
 (4) _flash_page_read                                      4     0      4    4787
                                             39 COMRAM     4     0      4
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) _MSDComputeDeviceInAndResidue                         6     4      2     422
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_SectorSizeRead                         2     0      2      64
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_CapacityRead                           4     0      4      64
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaInitialize                        2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (5) _ExternalFlash_MediaDetect                            2     0      2     128
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (1) _APP_DeviceCustomHIDTasks                             5     5      0  387100
                                             61 BANK0      4     4      0
               _USBTransferOnePacket
                          _api_parse
                        _api_prepare
 ---------------------------------------------------------------------------------
 (1) _api_prepare                                          5     1      4   80638
                                             92 COMRAM     1     1      0
                                             57 BANK0      4     0      4
             __fill_buffer_find_file
__fill_buffer_get_bootloader_details
     __fill_buffer_get_configuration
           __fill_buffer_get_display
      __fill_buffer_get_file_details
            __fill_buffer_get_status
             __fill_buffer_read_file
                      _flash_is_busy
                             _memcpy
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_read_file                              20    16      4   43599
                                             84 COMRAM     8     4      4
                                             45 BANK0     12    12      0
                  _fat_get_file_size
                 _fat_read_from_file
 ---------------------------------------------------------------------------------
 (3) _fat_read_from_file                                  67    57     10   34800
                                             62 COMRAM    22    12     10
                                              0 BANK0     45    45      0
                          __read_fat
               __sector_from_cluster
           _fat_get_file_information
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_get_file_size                                   14    10      4    7995
                                             47 COMRAM    14    10      4
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_status                              2     0      2    2866
                                             20 COMRAM     2     0      2
                      _flash_is_busy
                      _ui_get_status
 ---------------------------------------------------------------------------------
 (1) _ui_get_status                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_file_details                        5     1      4   16783
                                             62 COMRAM     5     1      4
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_display                            12     9      3     827
                                              4 COMRAM    12     9      3
              _display_get_character
 ---------------------------------------------------------------------------------
 (3) _display_get_character                                4     3      1     133
                                              0 COMRAM     4     3      1
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_configuration                       2     0      2     309
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_get_bootloader_details                 13    11      2    1023
                                              4 COMRAM    13    11      2
             _bootloader_get_entries
               _bootloader_get_error
           _bootloader_get_file_size
   _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
        _bootloader_get_rec_checksum
   _bootloader_get_rec_checksumCheck
            _bootloader_get_rec_data
      _bootloader_get_rec_dataLength
      _bootloader_get_rec_recordType
       _bootloader_get_total_entries
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_total_entries                         2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_recordType                        0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_dataLength                        2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_data                              1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksumCheck                     0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_checksum                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_rec_address                           2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_flashPagesWritten                     2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_file_size                             4     0      4       0
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_error                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _bootloader_get_entries                               2     0      2       0
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (2) __fill_buffer_find_file                               9     5      4    9819
                                             67 COMRAM     9     5      4
                      _fat_find_file
 ---------------------------------------------------------------------------------
 (1) _api_parse                                            6     3      3  303149
                                             85 COMRAM     3     3      0
                                             51 BANK0      3     0      3
                __parse_command_long
               __parse_command_short
 ---------------------------------------------------------------------------------
 (2) __parse_command_short                                 1     1      0    2875
                                             19 COMRAM     1     1      0
               _i2c_eeprom_writeByte
               _jump_to_main_program
                             _reboot
                    _system_delay_ms
 ---------------------------------------------------------------------------------
 (3) _system_delay_ms                                      3     3      0      46
                                              0 COMRAM     3     3      0
 ---------------------------------------------------------------------------------
 (3) _reboot                                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _jump_to_main_program                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _i2c_eeprom_writeByte                                 9     6      3    2807
                                             10 COMRAM     9     6      3
                         __i2c_write
                  _i2c_set_frequency
 ---------------------------------------------------------------------------------
 (3) _i2c_set_frequency                                    1     1      0      44
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (3) __i2c_write                                           5     2      3    1736
                                              5 COMRAM     5     2      3
                          __i2c_send
                         __i2c_start
                          __i2c_stop
                     __i2c_wait_idle
 ---------------------------------------------------------------------------------
 (4) __i2c_wait_idle                                       5     5      0       0
                                              0 COMRAM     5     5      0
 ---------------------------------------------------------------------------------
 (4) __i2c_stop                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_start                                           0     0      0       0
 ---------------------------------------------------------------------------------
 (4) __i2c_send                                            1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) __parse_command_long                                  3     1      2  299628
                                             82 COMRAM     3     1      2
                 __parse_file_append
                 __parse_file_create
                 __parse_file_delete
                 __parse_file_modify
                 __parse_file_rename
               __parse_file_truncate
 ---------------------------------------------------------------------------------
 (3) __parse_file_truncate                                 2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_rename                                   3     1      2   39116
                                             66 COMRAM     3     1      2
                    _fat_rename_file
 ---------------------------------------------------------------------------------
 (4) _fat_rename_file                                     38    34      4   38895
                                             62 COMRAM     4     0      4
                                              0 BANK0     34    34      0
                        __write_root
           _fat_get_file_information
 ---------------------------------------------------------------------------------
 (3) __parse_file_modify                                   2     0      2      89
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (3) __parse_file_delete                                   3     1      2   68995
                                             62 COMRAM     3     1      2
                    _fat_delete_file
 ---------------------------------------------------------------------------------
 (4) _fat_delete_file                                      5     5      0   68818
                                             57 COMRAM     5     5      0
                       __delete_root
                 __get_first_cluster
                          __read_fat
                 __root_is_available
                         __write_fat
 ---------------------------------------------------------------------------------
 (5) __get_first_cluster                                  10     8      2    7994
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __delete_root                                         7     7      0   21685
                                             40 COMRAM     7     7      0
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (3) __parse_file_create                                   3     1      2   82238
                                             79 COMRAM     3     1      2
                    _fat_create_file
 ---------------------------------------------------------------------------------
 (4) _fat_create_file                                     53    45      8   82039
                                             67 COMRAM    12     4      8
                                              0 BANK0     41    41      0
          __get_available_root_entry
                          __get_date
                 __get_empty_cluster
                          __get_time
                         __write_fat
                        __write_root
                      _fat_find_file
             _fat_get_empty_clusters
                             _memcpy
 ---------------------------------------------------------------------------------
 (4) _memcpy                                              13     6      7    2279
                                              0 COMRAM    13     6      7
 ---------------------------------------------------------------------------------
 (5) _fat_get_empty_clusters                              12    10      2    8218
                                             47 COMRAM    12    10      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (3) _fat_find_file                                       20    16      4    9375
                                             47 COMRAM    20    16      4
                 _flash_partial_read
                            _strncmp
 ---------------------------------------------------------------------------------
 (4) _strncmp                                              9     3      6     668
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (5) __get_available_root_entry                            1     1      0    8126
                                             54 COMRAM     1     1      0
                 __root_is_available
 ---------------------------------------------------------------------------------
 (3) __parse_file_append                                   3     1      2  108829
                                             74 COMRAM     3     1      2
                 _fat_append_to_file
 ---------------------------------------------------------------------------------
 (4) _fat_append_to_file                                  63    59      4  108586
                                             62 COMRAM    12     8      4
                                              0 BANK0     51    51      0
                 __get_empty_cluster
                          __read_fat
                 __root_is_available
               __sector_from_cluster
              __update_modified_time
                         __write_fat
                        __write_root
           _fat_get_file_information
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (4) _fat_get_file_information                             8     6      2   16406
                                             54 COMRAM     8     6      2
                 __root_is_available
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __root_is_available                                   7     7      0    8036
                                             47 COMRAM     7     7      0
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __write_root                                          8     6      2   21951
                                             40 COMRAM     8     6      2
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (5) __write_fat                                           8     4      4   22575
                                             40 COMRAM     8     4      4
                _flash_partial_write
 ---------------------------------------------------------------------------------
 (6) _flash_partial_write                                  9     1      8   21571
                                             31 COMRAM     9     1      8
      __flash_compare_page_to_buffer
         __flash_copy_page_to_buffer
      __flash_write_page_from_buffer
             __flash_write_to_buffer
                      _flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (2) _flash_is_busy                                        1     1      0    2380
                                             19 COMRAM     1     1      0
                     __flash_is_busy
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (5) __flash_write_to_buffer                              11     4      7    3807
                                             19 COMRAM    11     4      7
                     __flash_is_busy
                          _spi_tx_tx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_tx                                           12     4      8     532
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) __flash_write_page_from_buffer                       10     7      3    4209
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (7) __flash_copy_page_to_buffer                          10     7      3    4031
                                             19 COMRAM    10     7      3
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __flash_compare_page_to_buffer                       12     9      3    5187
                                             19 COMRAM    12     9      3
                  __flash_get_status
                     __flash_is_busy
                             _spi_tx
 ---------------------------------------------------------------------------------
 (5) __update_modified_time                                2     0      2     177
                                              4 COMRAM     2     0      2
                          __get_date
                          __get_time
 ---------------------------------------------------------------------------------
 (5) __get_time                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (5) __get_date                                            4     2      2      22
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) __sector_from_cluster                                 2     0      2     200
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 (4) __read_fat                                            8     6      2    8349
                                             47 COMRAM     8     6      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (5) __get_empty_cluster                                  10     8      2    8350
                                             47 COMRAM    10     8      2
                 _flash_partial_read
 ---------------------------------------------------------------------------------
 (4) _flash_partial_read                                   8     0      8    7857
                                             39 COMRAM     8     0      8
                __flash_partial_read
              _spi_set_configuration
 ---------------------------------------------------------------------------------
 (3) _spi_set_configuration                                2     2      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (5) __flash_partial_read                                 20    12      8    4187
                                             19 COMRAM    20    12      8
                     __flash_is_busy
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (4) __flash_is_busy                                       2     2      0    2335
                                             17 COMRAM     2     2      0
                  __flash_get_status
                      __flash_wakeup
 ---------------------------------------------------------------------------------
 (5) __flash_wakeup                                        1     1      0    1357
                                              8 COMRAM     1     1      0
                             _spi_tx
 ---------------------------------------------------------------------------------
 (4) _spi_tx                                               8     4      4    1334
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (5) __flash_get_status                                    5     3      2     955
                                             12 COMRAM     5     3      2
                          _spi_tx_rx
 ---------------------------------------------------------------------------------
 (6) _spi_tx_rx                                           12     4      8     888
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (4) _USBTransferOnePacket                                11     7      4    3313
                                              0 COMRAM    11     7      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _APP_DeviceCustomHIDTasks
     _USBTransferOnePacket
     _api_parse
       __parse_command_long
         __parse_file_append
           _fat_append_to_file
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __sector_from_cluster
             __update_modified_time
               __get_date
               __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
         __parse_file_create
           _fat_create_file
             __get_available_root_entry
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
             __get_date
             __get_empty_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __get_time
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_find_file
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
               _strncmp
             _fat_get_empty_clusters
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _memcpy
         __parse_file_delete
           _fat_delete_file
             __delete_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             __get_first_cluster
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __read_fat
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             __write_fat
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
         __parse_file_modify
         __parse_file_rename
           _fat_rename_file
             __write_root
               _flash_partial_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_copy_page_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _flash_is_busy
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_set_configuration
                 _spi_set_configuration
             _fat_get_file_information
               __root_is_available
                 _flash_partial_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
         __parse_file_truncate
       __parse_command_short
         _i2c_eeprom_writeByte
           __i2c_write
             __i2c_send
             __i2c_start
             __i2c_stop
             __i2c_wait_idle
           _i2c_set_frequency
         _jump_to_main_program
         _reboot
         _system_delay_ms
     _api_prepare
       __fill_buffer_find_file
         _fat_find_file
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
           _strncmp
       __fill_buffer_get_bootloader_details
         _bootloader_get_entries
         _bootloader_get_error
         _bootloader_get_file_size
         _bootloader_get_flashPagesWritten
         _bootloader_get_rec_address
         _bootloader_get_rec_checksum
         _bootloader_get_rec_checksumCheck
         _bootloader_get_rec_data
         _bootloader_get_rec_dataLength
         _bootloader_get_rec_recordType
         _bootloader_get_total_entries
       __fill_buffer_get_configuration
       __fill_buffer_get_display
         _display_get_character
       __fill_buffer_get_file_details
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       __fill_buffer_get_status
         _flash_is_busy
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_set_configuration
         _ui_get_status
       __fill_buffer_read_file
         _fat_get_file_size
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _fat_read_from_file
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _memcpy
   _APP_DeviceMSDTasks
     _MSDTasks
       _MSDProcessCommand
         _ExternalFlash_MediaDetect *
         _ExternalFlash_MediaInitialize *
         _MSDProcessCommandMediaAbsent *
           _MSDErrorHandler
             _ResetSenseData
             _USBStallEndpoint
           _MSDProcessCommandMediaPresent
             _ExternalFlash_CapacityRead *
             _ExternalFlash_SectorSizeRead *
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _MSDComputeDeviceInAndResidue *
             _MSDErrorHandler *
               _ResetSenseData
               _USBStallEndpoint
             _MSDReadHandler *
               _ExternalFlash_SectorRead *
                 _flash_page_read
                   __flash_partial_read
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_rx
                   _spi_set_configuration
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _MSDWriteHandler *
               _ExternalFlash_SectorWrite *
                 _flash_page_write
                   __flash_compare_page_to_buffer
                     __flash_get_status
                       _spi_tx_rx
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_page_from_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx
                   __flash_write_to_buffer
                     __flash_is_busy
                       __flash_get_status
                         _spi_tx_rx
                       __flash_wakeup
                         _spi_tx
                     _spi_tx_tx
                   _spi_set_configuration
               _ExternalFlash_WriteProtectStateGet *
               _MSDCheckForErrorCases *
                 _MSDErrorHandler
                   _ResetSenseData
                   _USBStallEndpoint
               _USBStallEndpoint *
               _USBTransferOnePacket *
             _ResetSenseData *
             _USBTransferOnePacket *
             _memcpy *
           _ResetSenseData
         _MSDProcessCommandMediaPresent *
           _ExternalFlash_CapacityRead *
           _ExternalFlash_SectorSizeRead *
           _ExternalFlash_WriteProtectStateGet *
           _MSDCheckForErrorCases *
             _MSDErrorHandler
               _ResetSenseData
               _USBStallEndpoint
           _MSDComputeDeviceInAndResidue *
           _MSDErrorHandler *
             _ResetSenseData
             _USBStallEndpoint
           _MSDReadHandler *
             _ExternalFlash_SectorRead *
               _flash_page_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _MSDWriteHandler *
             _ExternalFlash_SectorWrite *
               _flash_page_write
                 __flash_compare_page_to_buffer
                   __flash_get_status
                     _spi_tx_rx
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_page_from_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx
                 __flash_write_to_buffer
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_tx
                 _spi_set_configuration
             _ExternalFlash_WriteProtectStateGet *
             _MSDCheckForErrorCases *
               _MSDErrorHandler
                 _ResetSenseData
                 _USBStallEndpoint
             _USBStallEndpoint *
             _USBTransferOnePacket *
           _ResetSenseData *
           _USBTransferOnePacket *
           _memcpy *
       _USBStallEndpoint
       _USBTransferOnePacket
   _SYSTEM_Initialize
   _USBDeviceInit
     _memset
   _USBDeviceTasks
     _USBCtrlEPAllowStatusStage
     _USBCtrlEPService
       _USBCtrlTrfInHandler
         _USBCtrlTrfTxService
       _USBCtrlTrfOutHandler
         _USBCtrlTrfRxService
           _USBCtrlEPAllowStatusStage
       _USBCtrlTrfSetupHandler
         _USBCheckStdRequest
           _USBStdFeatureReqHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
           _USBStdGetDscHandler
           _USBStdGetStatusHandler
           _USBStdSetCfgHandler
             _USER_USB_CALLBACK_EVENT_HANDLER
               _APP_DeviceCustomHIDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBTransferOnePacket
               _APP_DeviceMSDInitialize
                 _USBEnableEndpoint
                   _USBConfigureEndpoint
                 _USBMSDInit
                   _ExternalFlash_MediaDetect *
                   _ExternalFlash_MediaInitialize *
                   _ResetSenseData *
                   _USBTransferOnePacket *
               _MSDTransferTerminated
                 _USBStallEndpoint
                 _USBTransferOnePacket
               _SYSTEM_Initialize
               _USBCheckHIDRequest
               _USBCheckMSDRequest
                 _USBTransferOnePacket
             _memset
           _USER_USB_CALLBACK_EVENT_HANDLER
             _APP_DeviceCustomHIDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBTransferOnePacket
             _APP_DeviceMSDInitialize
               _USBEnableEndpoint
                 _USBConfigureEndpoint
               _USBMSDInit
                 _ExternalFlash_MediaDetect *
                 _ExternalFlash_MediaInitialize *
                 _ResetSenseData *
                 _USBTransferOnePacket *
             _MSDTransferTerminated
               _USBStallEndpoint
               _USBTransferOnePacket
             _SYSTEM_Initialize
             _USBCheckHIDRequest
             _USBCheckMSDRequest
               _USBTransferOnePacket
         _USBCtrlEPServiceComplete
           _USBCtrlEPAllowDataStage
             _USBCtrlTrfTxService
           _USBCtrlEPAllowStatusStage
         _USER_USB_CALLBACK_EVENT_HANDLER
           _APP_DeviceCustomHIDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBTransferOnePacket
           _APP_DeviceMSDInitialize
             _USBEnableEndpoint
               _USBConfigureEndpoint
             _USBMSDInit
               _ExternalFlash_MediaDetect *
               _ExternalFlash_MediaInitialize *
               _ResetSenseData *
               _USBTransferOnePacket *
           _MSDTransferTerminated
             _USBStallEndpoint
             _USBTransferOnePacket
           _SYSTEM_Initialize
           _USBCheckHIDRequest
           _USBCheckMSDRequest
             _USBTransferOnePacket
       _memcpy
     _USBDeviceInit
       _memset
     _USBIncrement1msInternalTimers
     _USBStallHandler
     _USBSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USBWakeFromSuspend
       _USER_USB_CALLBACK_EVENT_HANDLER
         _APP_DeviceCustomHIDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBTransferOnePacket
         _APP_DeviceMSDInitialize
           _USBEnableEndpoint
             _USBConfigureEndpoint
           _USBMSDInit
             _ExternalFlash_MediaDetect *
             _ExternalFlash_MediaInitialize *
             _ResetSenseData *
             _USBTransferOnePacket *
         _MSDTransferTerminated
           _USBStallEndpoint
           _USBTransferOnePacket
         _SYSTEM_Initialize
         _USBCheckHIDRequest
         _USBCheckMSDRequest
           _USBTransferOnePacket
     _USER_USB_CALLBACK_EVENT_HANDLER
       _APP_DeviceCustomHIDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBTransferOnePacket
       _APP_DeviceMSDInitialize
         _USBEnableEndpoint
           _USBConfigureEndpoint
         _USBMSDInit
           _ExternalFlash_MediaDetect *
           _ExternalFlash_MediaInitialize *
           _ResetSenseData *
           _USBTransferOnePacket *
       _MSDTransferTerminated
         _USBStallEndpoint
         _USBTransferOnePacket
       _SYSTEM_Initialize
       _USBCheckHIDRequest
       _USBCheckMSDRequest
         _USBTransferOnePacket
   __normal_mode
     _i2c_eeprom_readByte
       __i2c_read
         __i2c_acknowledge
         __i2c_get
         __i2c_not_acknowledge
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_eeprom_writeByte
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
   _api_parse
     __parse_command_long
       __parse_file_append
         _fat_append_to_file
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __sector_from_cluster
           __update_modified_time
             __get_date
             __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_write
             __flash_compare_page_to_buffer
               __flash_get_status
                 _spi_tx_rx
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_copy_page_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_page_from_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx
             __flash_write_to_buffer
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_tx
             _flash_is_busy
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_set_configuration
             _spi_set_configuration
       __parse_file_create
         _fat_create_file
           __get_available_root_entry
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
           __get_date
           __get_empty_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __get_time
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_find_file
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
             _strncmp
           _fat_get_empty_clusters
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _memcpy
       __parse_file_delete
         _fat_delete_file
           __delete_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           __get_first_cluster
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __read_fat
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           __write_fat
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
       __parse_file_modify
       __parse_file_rename
         _fat_rename_file
           __write_root
             _flash_partial_write
               __flash_compare_page_to_buffer
                 __flash_get_status
                   _spi_tx_rx
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_copy_page_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_page_from_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx
               __flash_write_to_buffer
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_tx
               _flash_is_busy
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_set_configuration
               _spi_set_configuration
           _fat_get_file_information
             __root_is_available
               _flash_partial_read
                 __flash_partial_read
                   __flash_is_busy
                     __flash_get_status
                       _spi_tx_rx
                     __flash_wakeup
                       _spi_tx
                   _spi_tx_rx
                 _spi_set_configuration
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
       __parse_file_truncate
     __parse_command_short
       _i2c_eeprom_writeByte
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _jump_to_main_program
       _reboot
       _system_delay_ms
   _api_prepare
     __fill_buffer_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
     __fill_buffer_get_bootloader_details
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_file_size
       _bootloader_get_flashPagesWritten
       _bootloader_get_rec_address
       _bootloader_get_rec_checksum
       _bootloader_get_rec_checksumCheck
       _bootloader_get_rec_data
       _bootloader_get_rec_dataLength
       _bootloader_get_rec_recordType
       _bootloader_get_total_entries
     __fill_buffer_get_configuration
     __fill_buffer_get_display
       _display_get_character
     __fill_buffer_get_file_details
       _fat_get_file_information
         __root_is_available
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __fill_buffer_get_status
       _flash_is_busy
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _spi_set_configuration
       _ui_get_status
     __fill_buffer_read_file
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_is_busy
       __flash_is_busy
         __flash_get_status
           _spi_tx_rx
         __flash_wakeup
           _spi_tx
       _spi_set_configuration
     _memcpy
   _bootloader_run
     __bootloader_find_file
       _fat_find_file
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
         _strncmp
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     __bootloader_program
       __bootloader_check_address
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _internalFlash_addressWithinPage
         _internalFlash_addressFromPage
       _internalFlash_erasePage
         __internalFlash_unlockAndActivate
       _internalFlash_getBuffer
       _internalFlash_pageFromAddress
       _internalFlash_readPage
         _internalFlash_addressFromPage
         _internalFlash_read
           _memcpy
       _internalFlash_writePage
         __internalFlash_unlockAndActivate
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
     __bootloader_verify_file
       __bootloader_check_address
       _fat_get_file_size
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _fat_read_from_file
         __read_fat
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         __sector_from_cluster
         _fat_get_file_information
           __root_is_available
             _flash_partial_read
               __flash_partial_read
                 __flash_is_busy
                   __flash_get_status
                     _spi_tx_rx
                   __flash_wakeup
                     _spi_tx
                 _spi_tx_rx
               _spi_set_configuration
           _flash_partial_read
             __flash_partial_read
               __flash_is_busy
                 __flash_get_status
                   _spi_tx_rx
                 __flash_wakeup
                   _spi_tx
               _spi_tx_rx
             _spi_set_configuration
         _flash_partial_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
       _parseHexFileEntry
         _hexCharsToUint16
           _hexCharToUint8
         _hexCharsToUint8
           _hexCharToUint8
   _display_prepare
     __display_checked
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_total_entries
     __display_clear
     __display_done
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_flashPagesWritten
     __display_failed
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_error
       _bootloader_get_rec_address
     __display_found
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_file_size
     __display_programming
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
       _bootloader_get_flashPagesWritten
       _bootloader_get_total_entries
     __display_search
     __display_start
       __display_itoa_u32
         ___lldiv
         ___llmod
         __display_itoa_u16
           _bootloader_get_entries (ARG)
           _bootloader_get_flashPagesWritten (ARG)
           _bootloader_get_total_entries (ARG)
           _itoa (ARG)
             ___lldiv (ARG)
             ___llmod (ARG)
             _utoa (ARG)
               ___lwdiv
               ___lwmod
         _bootloader_get_file_size (ARG)
         _bootloader_get_rec_address (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
     __display_verify
       __display_itoa_u16
         _bootloader_get_entries (ARG)
         _bootloader_get_flashPagesWritten (ARG)
         _bootloader_get_total_entries (ARG)
         _itoa (ARG)
           ___lldiv (ARG)
           ___llmod (ARG)
           _utoa (ARG)
             ___lwdiv
             ___lwmod
       _bootloader_get_entries
   _display_update
     _i2c_display_cursor
       __ic2_display_set_address
         __i2c_write
           __i2c_send
           __i2c_start
           __i2c_stop
           __i2c_wait_idle
         _i2c_set_frequency
       _i2c_set_frequency
     _i2c_display_write_fixed
       __i2c_send
       __i2c_start
       __i2c_stop
       __i2c_wait_idle
       _i2c_set_frequency
   _jump_to_main_program
   _spi_get_external_rx_buffer
   _spi_get_external_tx_buffer
   _system_init
     __system_encoder_init
     __system_timer0_init
     _fat_format
       __get_data
       __get_fat
       __get_fbr
       __get_mbr
       __get_root
       _flash_page_write
         __flash_compare_page_to_buffer
           __flash_get_status
             _spi_tx_rx
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx
         __flash_write_page_from_buffer
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx
         __flash_write_to_buffer
           __flash_is_busy
             __flash_get_status
               _spi_tx_rx
             __flash_wakeup
               _spi_tx
           _spi_tx_tx
         _spi_set_configuration
     _fat_init
       _fat_format
         __get_data
         __get_fat
         __get_fbr
         __get_mbr
         __get_root
         _flash_page_write
           __flash_compare_page_to_buffer
             __flash_get_status
               _spi_tx_rx
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_page_from_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx
           __flash_write_to_buffer
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_tx
           _spi_set_configuration
       _fat_get_format_status
         __get_fbr
         __get_mbr
         _flash_page_read
           __flash_partial_read
             __flash_is_busy
               __flash_get_status
                 _spi_tx_rx
               __flash_wakeup
                 _spi_tx
             _spi_tx_rx
           _spi_set_configuration
     _flash_init
       __flash_set_page_size
         __flash_is_busy
           __flash_get_status
             _spi_tx_rx
           __flash_wakeup
             _spi_tx
         _memcpy
         _spi_tx
       _spi_init
         __spi_init
       _spi_set_configuration
     _i2c_init
       __i2c_open_1
       _i2c_set_frequency
     _ui_init
   _timer_pseudo_isr
   _ui_get_status
   _ui_run
     __ui_encoder
       _jump_to_main_program
     _i2c_digipot_backlight
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_off
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_digipot_reset_on
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _i2c_display_send_init_sequence
       __i2c_write
         __i2c_send
         __i2c_start
         __i2c_stop
         __i2c_wait_idle
       _i2c_set_frequency
     _system_encoder_enable
     _ui_init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAMll           5FF      0     200      36       33.4%
BIGRAMlh           500      0     400      35       80.0%
BIGRAMhh           123      0       0      33        0.0%
BITBANK12          100      0       0      24        0.0%
BANK12             100      0       0      25        0.0%
BITBANK11          100      0       0      22        0.0%
BANK11             100      0       0      23        0.0%
BITBANK10          100      0       0      20        0.0%
BANK10             100      0       0      21        0.0%
BITBANK9           100      0       0      18        0.0%
BANK9              100      0       0      19        0.0%
BITBANK8           100      0       0      16        0.0%
BANK8              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0      40      11       25.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0      FB       9       98.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0     100       7      100.0%
BITBANK14           B0      0       0      32        0.0%
BANK14              B0      0       0      30        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0     49      9F       5       99.4%
BANK13h             73      0       0      28        0.0%
BITBANK13h          73      0       0      26        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
BIGRAMhl            21      0       0      34        0.0%
BITBANK13l          21      0       0      27        0.0%
BANK13l             21      0       0      29        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     339      31        0.0%
DATA                 0      0     939       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Mon Sep 03 20:04:27 2018

                          __end_of_fat_read_from_file 211A  
                           ??_internalFlash_getBuffer 0003  
                                          _USB_SD_Ptr 8E7A  
                            fat_create_file@extension 0046  
              __end_of_i2c_display_send_init_sequence 7BBA  
             __size_of_i2c_display_send_init_sequence 002C  
                      _i2c_display_send_init_sequence 7B8E  
                                 __system_timer0_init 7DF8  
                                                  _os 0060  
                                       _USBDeviceInit 3B3E  
                                  _USBCheckHIDRequest 4B1C  
                __bootloader_verify_file@return_value 00E3  
                                    ??__flash_is_busy 0012  
                                        __CFG_CP0$OFF 000000  
                      __root_is_available@root_sector 0031  
                                 __end_of_system_init 6A94  
                           ??_internalFlash_erasePage 0005  
                            ?_i2c_display_write_fixed 0006  
                USER_USB_CALLBACK_EVENT_HANDLER@event 0010  
                USER_USB_CALLBACK_EVENT_HANDLER@pdata 0012  
                                                 l202 53A2  
                                                 l210 5D74  
                                                 l220 4780  
                                                 l141 3BAC  
                                                 l214 6078  
                                                 l310 590E  
                                                 l150 3436  
                                                 l143 3BE8  
                                                 l303 7926  
                                                 l151 342C  
                                                 l320 6F16  
                                                 l208 5D5A  
                                                 l224 4802  
                                                 l304 7924  
                                                 l152 342A  
                                                 l241 5100  
                                                 l233 505C  
                                                 l161 34B2  
                                                 l242 50CA  
                                                 l330 51C2  
                                                 l322 6F60  
                                                 l235 5066  
                                                 l331 5188  
                                                 l251 40DA  
                                                 l411 4B6A  
                                                 l219 47D8  
                                                 l139 3B84  
                                                 l171 3542  
                                                 l163 34C8  
                                                 l155 3452  
                                                 l252 40C0  
                                                 l412 4B38  
                                                 l260 4A84  
                                                 l164 34D4  
                                                 l156 3462  
                                                 l237 50C2  
                                                 l333 51A8  
                                                 l309 5914  
                                                 l173 3566  
                                                 l165 34FC  
                                                 l157 346A  
                                                 l238 508C  
                                                 l422 4B8C  
                                                 l414 4B7C  
                         __end_of_USBStdGetDscHandler 3DC6  
                                                 l262 4AF8  
                                                 l350 4998  
                                                 l166 3508  
                                                 l158 3480  
                                                 l183 466C  
                                                 l191 429C  
                                                 l423 4BA4  
                                                 l415 4B56  
                                                 l271 3CB2  
                                                 l343 49F6  
                                                 l175 3582  
                                                 l159 348C  
                                                 l328 5140  
                                                 l248 4064  
                                                 l424 4BB0  
                                                 l360 17D8  
                                                 l272 3D40  
                                                 l352 499E  
                                                 l344 4968  
                                                 l168 351A  
                                                 l185 4696  
                                                 l329 5146  
                                                 l249 4042  
                                                 l521 4540  
                                                 l425 4BC8  
                                                 l361 17DE  
                                                 l281 59A4  
                                                 l353 49BC  
                                                 l610 6E18  
                                                 l178 7820  
                                                 l418 4BD4  
                                                 l530 5432  
                                                 l274 3D48  
                                                 l282 5932  
                                                 l354 49D8  
                                                 l346 4972  
                                                 l187 4714  
                                                 l603 6E20  
                                                 l179 782E  
                                                 l371 18FE  
                                                 l363 184A  
                                                 l275 3D9E  
                                                 l347 4978  
                                                 l620 04BE  
                                                 l604 6DE4  
                                                 l372 191A  
                                                 l268 3DAE  
                                                 l348 497E  
                                                 l621 04C8  
                                                 l381 1A12  
                                                 l365 1892  
                                                 l277 3DA6  
                                                 l269 3C9E  
                                                 l285 59BA  
                                                 l349 4992  
                                                 l710 4C0E  
                                                 l702 1742  
                                                 l614 0810  
                                                 l630 066E  
                                                 l606 6E00  
                                                 l518 4548  
                                                 l534 5498  
                                                 l374 1980  
                                                 l286 5944  
                                                 l703 175A  
                                                 l623 0520  
                                                 l615 049E  
                                                 l519 44BC  
                                                 l375 198C  
                                                 l367 18B4  
                                                 l287 594A  
                                                 l295 768A  
                                                 l712 4C24  
                                                 l704 1772  
                                                 l640 0738  
                                                 l624 05DA  
                                                 l608 6E0C  
                                                 l800 6438  
                                                 l376 1A06  
                                                 l288 5968  
                                                 l296 7688  
                                                 l721 4CB0  
                                                 l633 06A2  
                                                 l625 05E4  
                                                 l609 6E12  
                                                 l561 1DEA  
                                                 l529 54CE  
                                                 l369 1934  
                                                 l722 4C9A  
                                                 l650 07B8  
                                                 l634 06D0  
                                                 l626 0604  
                                                 l618 04AE  
                                                 l554 1ED6  
                                                 l562 1DD4  
                                                 l546 54A0  
                                                 l810 642A  
                                                 l715 4C54  
                                                 l651 07CC  
                                                 l571 1E06  
                                                 l563 1DA8  
                                                 l555 1CA8  
                                                 l379 19C0  
                                                 l644 0770  
                                                 l636 0704  
                                                 l628 0634  
                                                 l564 1DB0  
                                                 l804 6406  
                                                 l900 3990  
                                                 l661 5F38  
                                                 l741 457C  
                                                 l733 4CC2  
                                                 l645 0784  
                                                 l573 1E18  
                                                 l805 640E  
                                                 l750 45B0  
                                                 l718 4C60  
                                                 l670 2D6C  
                                                 l654 0808  
                                                 l646 07A2  
                                                 l638 0720  
                                                 l566 1DC8  
                                                 l806 6416  
                                                 l910 7068  
                                                 l751 45BC  
                                                 l719 4C7A  
                                                 l671 2D76  
                                                 l575 1E3A  
                                                 l559 1CC8  
                                                 l752 45CE  
                                                 l680 2EA2  
                                                 l672 2D8A  
                                                 l648 07CE  
                                                 l592 419A  
                                                 l576 1E42  
                                                 l920 7418  
                                                 l808 6420  
                                                 l912 7070  
                                                 l753 45DA  
                                                 l737 4CD2  
                                                 l665 2EB8  
                                                 l649 07A8  
                                                 l577 1E66  
                                                 l921 73DE  
                                                 l754 45EC  
                                                 l674 2DD4  
                                                 l666 2D0C  
                                                 l690 15A8  
                                                 l586 1EB8  
                                                 l659 5F22  
                                                 l747 462E  
                                                 l755 4622  
                                                 l675 2DFC  
                                                 l691 15B4  
                                                 l923 73E8  
                                                 l907 7042  
                                                 l748 45A8  
                                                 l668 2EDC  
                                                 l676 2E2A  
                                                 l684 178A  
                                                 l692 15D2  
                                                 l596 4232  
                                                 l764 72F6  
                                                 _BDT 000D00  
                                                 l677 2E3C  
                                                 l669 2D60  
                                                 l693 161C  
                                                 l685 1502  
                                                 l597 422C  
                                                 l589 1EC0  
                                                 l678 2E42  
                                                 l694 15F6  
                                                 l679 2E56  
                                                 l687 17AE  
                                                 l695 165E  
                                                 l599 4236  
                                                 l767 732C  
                                                 l927 73FA  
                                                 l960 59DA  
                                                 l696 165A  
                                                 l688 15A2  
                                                 l929 7406  
                       __size_of__sector_from_cluster 000E  
                                                 l698 1672  
                                                 l890 39A0  
                                                 l699 16DA  
                                                 l891 394C  
                                                 l892 39E4  
                                                 l893 3954  
                                                 l966 5A48  
                                                 l894 395C  
                                                 l886 38B6  
                                                 l895 3964  
                                                 l896 396C  
                                                 l888 393E  
                                                 l897 3974  
                                                 l898 397C  
                                                 _LBA 0080  
                                                 _LUN 01E4  
                                                 _UIE 000F36  
                                                 _UIR 000F62  
                             __get_first_cluster@slot 0039  
                                _i2c_digipot_reset_on 7D70  
                                   main@tx_start_addr 00F6  
                            __size_of__display_failed 02F6  
                                         _start_line1 8E00  
                                         _start_line2 8E61  
                                         _start_line3 8EA6  
                                         _start_line4 8E2E  
                                  api_prepare@command 005D  
                                          _USBSuspend 7B30  
                                  _internalFlash_read 7932  
                              __end_of_display_update 6BD8  
                                USBStdSetCfgHandler@i 0018  
                                                 prod 000FF3  
                                                 tosl 000FFD  
                                                 wreg 000FE8  
                                      _USBDeviceTasks 340A  
                                 ?_USBCheckHIDRequest 0001  
                                        __CFG_IESO$ON 000000  
                            __size_of__display_search 0152  
                                      _USBDeviceState 00B0  
                                        ?__write_root 0029  
                            __size_of__display_verify 012C  
                               _spi_set_configuration 4858  
                               ??_USBCtrlTrfRxService 0001  
                                __read_fat@fat_sector 0032  
                                       _hex_file_size 0078  
                            USBEnableEndpoint@options 0009  
                   internalFlash_addressFromPage@page 0001  
                                   ??_MSDErrorHandler 0009  
                                ?__system_timer0_init 0001  
                                 api_prepare@inBuffer 00EE  
                            fat_create_file@root_slot 00B9  
                         __flash_write_to_buffer@data 0016  
                                                l1002 7F02  
                                                l2001 2102  
                                                l1201 6328  
                                                l2002 1FF0  
                                                l1202 630C  
                                                l2003 2018  
                                                l2011 4F74  
                                                l2004 20C0  
                                                l2020 4F98  
                                                l2012 4F78  
                                                l2021 4F9C  
                                                l2013 4F7C  
                                                l2101 32B2  
                                                l2022 4FA0  
                                                l2014 4F80  
                                                l2110 3336  
                                                l1310 436E  
                                                l2023 4FA4  
                                                l2015 4F84  
                                                l2111 333A  
                                                l2103 32EA  
                                                l1311 4384  
                                                l2200 0426  
                                                l1224 72CA  
                                                l2032 1B5C  
                                                l2040 1A78  
                                                l2008 4FBC  
                                                l2024 4FA8  
                                                l2016 4F88  
                                                l2120 335E  
                                                l2112 333E  
                                                l1225 72AE  
                                                l2041 1A88  
                                                l2033 1A3A  
                                                l2025 4FAC  
                                                l2017 4F8C  
                                                l2009 4F70  
                                                l2105 337A  
                                                l2121 3362  
                                                l2113 3342  
                                                l1305 4420  
                                                l1313 43AC  
                                                l1170 7FB0  
                                                l2202 0458  
                                                l2130 7C8C  
                                                l2050 1ADC  
                                                l2042 1A98  
                                                l2026 4FB0  
                                                l2018 4F90  
                                                l2122 3366  
                                                l2114 3346  
                                                l2106 3326  
                                                l1314 43D4  
                                                l1306 4346  
                                                l2051 1AE0  
                                                l2043 1AA8  
                                                l2035 1A3E  
                                                l2027 4FB4  
                                                l2019 4F94  
                                                l2123 336A  
                                                l2115 334A  
                                                l2107 332A  
                                                l1164 8012  
                                                l2204 048A  
                                                l2060 1B04  
                                                l2052 1AE4  
                                                l2044 1AB8  
                                                l2036 1A42  
                                                l2028 4FB8  
                                                l2124 336E  
                                                l2116 334E  
                                                l2108 332E  
                                                l2140 5BBA  
                                                l1316 43F0  
                                                l1149 801A  
                                                l2061 1B08  
                                                l2053 1AE8  
                                                l2045 1AC8  
                                                l2037 1A46  
                                                l2125 3372  
                                                l2117 3352  
                                                l2109 3332  
                                                l1317 4410  
                                                l1309 435A  
                                                l1190 7C1A  
                                                l1094 7D42  
                                                l1158 7FA4  
                                                l2310 1440  
                                                l2070 1B2C  
                                                l2062 1B0C  
                                                l2054 1AEC  
                                                l2046 1ACC  
                                                l2038 1A58  
                                                l2126 3376  
                                                l2118 3356  
                                                l1191 7C1E  
                                                l1095 7D30  
                                                l2311 146E  
                                                l2063 1B10  
                                                l2055 1AF0  
                                                l2047 1AD0  
                                                l2039 1A68  
                                                l2127 3406  
                                                l2119 335A  
                                                l1087 7986  
                                                l1176 7F9C  
                                                l2320 0C60  
                                                l2312 14CA  
                                                l2080 1B50  
                                                l2072 1B30  
                                                l2064 1B14  
                                                l2056 1AF4  
                                                l2048 1AD4  
                                                l2136 5B6A  
                                                l1088 7990  
                                                l1280 56E6  
                                                l2321 0CBA  
                                                l2305 12DA  
                                                l2081 1B54  
                                                l2073 1B34  
                                                l2065 1B18  
                                                l2057 1AF8  
                                                l2049 1AD8  
                                                l1281 5664  
                                                l2170 6808  
                                                l2322 0D14  
                                                l2314 14EC  
                                                l2306 1334  
                                                l1610 3658  
                                                l1530 51F0  
                                                l2090 7236  
                                                l2082 1B58  
                                                l2074 1B38  
                                                l2066 1B1C  
                                                l2058 1AFC  
                                                l1290 56AE  
                                                l1195 75F4  
                                                l1187 7C24  
                                                l2331 0E10  
                                                l2307 13AE  
                                                l1603 35BE  
                                                l1531 51F6  
                                                l2091 723A  
                                                l2075 1B3C  
                                                l2067 1B20  
                                                l2059 1B00  
                                                l1196 75D8  
                                                l1188 7C16  
                                                l2332 0ED4  
                                                l3300 76DE  
                                                l1460 5346  
                                                l1612 36E4  
                                                l1604 3590  
                                                l1524 5208  
                                                l1532 51FC  
                                                l2092 723E  
                                                l2076 1B40  
                                                l2068 1B24  
                                                l1292 56C6  
                                                l1284 5676  
                                                l1189 7C38  
                                                l2173 7BCA  
                                                l2325 0F1E  
                                                l2333 0E1A  
                                                l2309 140E  
                                                l1453 52D8  
                                                l1613 36B6  
                                                l1621 0FBE  
                                                l1533 5202  
                                                l1525 51D8  
                                                l2093 7242  
                                                l2077 1B44  
                                                l2069 1B28  
                                                l2190 00B4  
                                                l2334 0E92  
                                                l2326 0D26  
                                                l2270 6FF0  
                                                l1606 3612  
                                                l1446 757E  
                                                l3222 6D5C  
                                                l1622 0F90  
                                                l1550 289A  
                                                l1534 5260  
                                                l2086 724A  
                                                l2094 7246  
                                                l2078 1B48  
                                                l1294 56D6  
                                                l1286 568E  
                                                l2175 7BD4  
                                                l2191 0202  
                                                l2335 0ECE  
                                                l2319 0BE2  
                                                l2271 6FC6  
                                                l3303 76FE  
                                                l1607 35E4  
                                                l3223 6D6A  
                                                l1631 1062  
                                                l1543 2782  
                                                l1535 524C  
                                                l1527 51DE  
                                                l2087 722E  
                                                l2079 1B4C  
                                                l2168 67F8  
                                                l2424 7C9E  
                                                l2192 0188  
                                                l3304 7708  
                                                l1456 52FE  
                                                l1448 758A  
                                                l1624 1190  
                                                l1640 10D4  
                                                l1632 1034  
                                                l1552 291C  
                                                l1544 2754  
                                                l1536 5252  
                                                l1528 51E4  
                                                l1288 569E  
                                                l2433 7966  
                                                l2417 65CA  
                                                l2177 7BE2  
                                                l2337 0EEA  
                                                l2329 0D62  
                                                l1609 3690  
                                                l1561 3A74  
                                                l1553 28EE  
                                                l1537 5258  
                                                l1529 51EA  
                                                l2089 7232  
                                                l2602 5CCE  
                                                l2290 4E7A  
                                                l2194 033E  
                                                l2274 6FD2  
                                                l1458 5322  
                                                l3218 6D34  
                                                l1490 0882  
                                                l1626 1012  
                                                l1618 0F6A  
                                                l1562 3A46  
                                                l1546 27D6  
                                                l1538 528A  
                                                l2611 5EB6  
                                                l2291 4E84  
                                                l2419 65D6  
                                                l2195 0310  
                                                l3219 6D28  
                                                l1643 1152  
                                                l1635 10B2  
                                                l1627 0FE4  
                                                l1619 0F3C  
                                                l1547 27A8  
                                                l2099 32A4  
                                                l1724 73C8  
                                                l1820 69BC  
                                                l2612 5E4A  
                                                l1812 737C  
                                                l2188 003E  
                                                l2276 6FDE  
                                                l1492 092C  
                                                l1644 1124  
                                                l1636 1084  
                                                l1580 2BDA  
                                                l1652 2F16  
                                                l1564 3AC8  
                                                l1716 6644  
                          USBConfigureEndpoint@handle 0007  
                                                l1725 7386  
                                                l2285 4E90  
                                                l2197 039C  
                                                l1629 11B2  
                                                l1573 2B60  
                                                l1661 3072  
                                                l1653 2EE8  
                                                l1565 3A9A  
                                                l1549 28C8  
                                                l1717 6670  
                                                l1742 669A  
                                                l1734 7190  
                                                l1822 6A1E  
                                                l2630 621C  
                                                l2614 5E66  
                                                l2550 3FEA  
                                                l2286 4DCC  
                                                l2198 03C0  
                                                l1670 378E  
                                                l1494 09D8  
                                                l1646 11E6  
                                                l1582 2C94  
                                                l1574 2B32  
                                                l1662 3044  
                                                l1558 3A20  
                                                l1727 73AE  
                                                l1743 66A4  
                                                l1735 719A  
                                                l3503 5588  
                                                l1911 62D2  
                                                l2623 622C  
                                                l2615 5E82  
                                                l2607 24F2  
                                                l2551 3F74  
                                                l2287 4E22  
                                                l2279 6FE4  
                                                l1671 3760  
                                                l1647 11B8  
                                                l1639 1102  
                                                l1583 2C5C  
                                                l1655 2F6A  
                                                l1567 3B1C  
                                                l1559 39F2  
                                                l1591 3DFA  
                                                l1904 68C4  
                                                l3504 54E2  
                                                l2624 61D6  
                                                l2616 5E9E  
                                                l2560 4EAC  
                                                l2544 3F5E  
                                                l1496 0A84  
                                                l1576 2BB4  
                                                l1656 2F3C  
                                                l1568 3AEE  
                                                l1592 3DCC  
                                                l2801 60FA  
                                                l1745 66DC  
                                                l1761 7536  
                                                l3505 5580  
                                                l2625 625A  
                                                l2617 5EA4  
                                                l2553 3F82  
                                                l2545 3F1C  
                                                l2297 5B00  
                                                l2289 4E78  
                                                l1673 37E2  
                                                l1585 2CE8  
                                                l1577 2B86  
                                                l1770 7142  
                                                l1762 7540  
                                                l2626 61E4  
                                                l2618 5EAA  
                                                l2554 3F94  
                                                l3290 7444  
                                                l1674 37B4  
                                                l1498 0B30  
                                                l1586 2CBA  
                                                l1658 2FBE  
                                                l1594 3E4E  
                                                l1747 66FA  
                                                l2643 6B3E  
                                                l2627 61F2  
                                                l2619 5EB0  
                                                l2563 4EB2  
                                                l2555 3FA6  
                                                l2547 3F32  
                                                l1851 7A50  
                                                l1667 373A  
                                                l1579 2C08  
                                                l1659 2F90  
                                                l1595 3E20  
                                                l2804 6136  
                                                l1940 55F8  
                                                l1908 6270  
                                                l2628 6200  
                                                l2556 3FB4  
                                                l2548 3F48  
                                                l1676 385A  
                                                l1668 370C  
                                                l2637 74BC  
                                                l2629 620E  
                                                l2565 4F2A  
                                                l2581 57A0  
                                                l2557 3FC2  
                                                l3293 746C  
                                                l1677 382C  
                                                l1597 3EA2  
                                                l2566 4ECE  
                                                l2590 2B22  
                                                l2582 576C  
                                                l3294 7476  
                                                l1598 3E74  
                                                l1775 7DF4  
                                                l2655 6548  
                                                l2567 4F62  
                                                l2591 2AFA  
                                                l2583 5778  
                                                l1855 7A1E  
                                                l2568 4EE6  
                                                l3480 5C44  
                                                l1769 7138  
                                                l2649 6C14  
                                                l2569 4F02  
                                                l2577 5728  
                                                l3289 744C  
                                                l3473 76B2  
                                                l2841 64EC  
                                                l1890 67E8  
                                                l1946 564C  
                                                l2842 64FA  
                                                l2770 780A  
                                                l1955 312E  
                                                l1963 6C4C  
                                                l2579 5762  
                                                l3491 7C00  
                                                l3299 76E6  
                                                l2771 77EA  
                                                l1980 2170  
                                                l1956 3266  
                                                l3492 7BF0  
                                                l3485 6DD0  
                                                l1957 3208  
                                                l2589 2AF4  
                                                l3477 5BCC  
                                                l2837 64B8  
                                                l1982 22EC  
                                                l3486 6D92  
                                                l1958 322A  
                                                l1966 6C66  
                                                l2838 64AC  
                                                l2775 4948  
                                                l1983 220E  
                                                l1959 3260  
                                                l1991 5FD6  
                                                l3479 5C06  
                                                l2776 485C  
                                                l2792 63C8  
                                                l1888 6782  
                                                l1984 2264  
                                                l1976 2128  
                                                l1896 7D58  
                                                l1968 6CA4  
                                                l2768 77FC  
                                                l1985 22AA  
                                                l2769 77D8  
                                                l2786 7224  
                                                l2778 48BC  
                                                l1898 7D68  
                                                l2795 63FC  
                                                l1979 2196  
                                                l1996 1F42  
                                                l1989 5FA2  
                                                l1998 1F7A  
                                                l1999 1F54  
                                                STR_1 8FF1  
                                                STR_2 8FF1  
                                                l9929 4B50  
                                                STR_3 8FF1  
                                                STR_4 8FF1  
                                                STR_5 8FF1  
                                                STR_6 8FF1  
                                                STR_7 8FF1  
                               __end_of_checked_line1 8DD0  
                                                STR_8 8FF1  
                               __end_of_checked_line2 8CBA  
                                                STR_9 8FDC  
                               __end_of_checked_line3 8E7A  
                               __end_of_checked_line4 8D4F  
                                      _bootloader_run 6FC2  
                                 ?_internalFlash_read 000E  
                                       _i2c_frequency 0099  
                                                u7010 76EA  
                                                u7100 50F2  
                                                u7120 6DB2  
                                                u7107 50E8  
                                                u7127 6DA8  
                                                u7080 50B4  
                                                u6328 44DC  
                                                u6185 66B0  
                                                u7145 2D32  
                                                u6329 44EE  
                                                u6275 714E  
                                                u7500 70B8  
                                                u6364 4532  
                                                u6348 4500  
                                                u6365 452C  
                                                u6349 4514  
                                                u6390 4568  
                                                u6295 6716  
                                                u7255 1528  
                                                u7087 50AA  
                                                u9015 7B6E  
                               ??_USBCtrlTrfTxService 0001  
                                                u9120 6C10  
                                                u6720 4C96  
                                                u7408 171C  
                                                u9200 6D38  
                                                u7409 1730  
                                                u7506 70BA  
                                                u7450 707E  
                                                u7338 1628  
                                                u8170 19A6  
                                                u6475 71A6  
                                                u7339 163C  
                                                u9060 74B8  
                                                u7460 708A  
                                                u7380 1714  
                                                u8340 074C  
                                                u6910 67E4  
                                                u9150 6544  
                                                u7470 7096  
                                                u6750 4CAC  
                                                u7198 2DAE  
                                                u7390 1716  
                                                u7278 155C  
                                                u8350 075E  
                                                u8270 062C  
                                                u8238 052C  
                                                u6590 547A  
                                                u7199 2DC2  
                                                u7279 1570  
                                                u8239 0540  
                                                _UCFG 000F39  
                                                u7560 7D6C  
                                                u6920 5502  
                                                u8440 30FE  
                                                u8600 6006  
                                                u7480 70A2  
                                                u8248 055C  
                                                u9320 4168  
                                                u9400 2580  
                                                u8249 0570  
                                                u7730 5658  
                                                u8450 312C  
                                                u9090 6B3A  
                                                u7490 70AE  
                                                u7458 7080  
                                                u6770 4CBE  
                                                u9170 64BC  
                                                u6940 553A  
                                                u7740 565E  
                                                u7468 708C  
                                                u6860 7A4C  
                                                u8380 07D6  
                                                u9308 4136  
                                                u9500 26A0  
                                                u9420 25C4  
                                                _UEP0 000F26  
                                                u7645 70F4  
                                                u8445 30F4  
                                                u9309 414A  
                                                _UEP1 000F27  
                                                u7590 68CA  
                                                u6950 5570  
                                                u7478 7098  
                                                u6790 4CCE  
                                                u6870 7A1A  
                                                u9334 417E  
                                    ?_fat_create_file 0044  
                                                u6927 54F8  
                                                u7655 6F8E  
                                                u9335 4178  
                                                u7488 70A4  
                                                u8288 064C  
                                                u9344 41B0  
                                                u7920 3D0A  
                                                u9600 0940  
                                                u9520 26DA  
                                                u9440 2608  
                                                u6945 5534  
                                                u7665 6CD6  
                                                u8289 0660  
                                                u9345 41AA  
                                                u7498 70B0  
                                                u7930 3D3A  
                                                u9610 09EC  
                                                u6947 552A  
                                                _UEIE 000F37  
                                                u8580 5FCA  
                                                u6980 7450  
                                                u8820 52C4  
                                                u9620 0A98  
                                                u9540 2708  
                                                u9460 2642  
                                                u6957 5566  
                                                u7950 3D92  
                                                u8830 52EA  
                                                u9710 5BC0  
                                                u6895 67A8  
                                                u7775 682E  
                                                u7927 3D00  
                                                u9384 4202  
                                                u9368 41D2  
                                                u7880 4AB0  
                                                u8840 530E  
                                                u9560 2738  
                                                u9480 2670  
                                                u9385 41FC  
                                                u9369 41E4  
                                                u7937 3D30  
                                                u9810 4DF2  
                                                u9730 00A2  
                                                u8850 5332  
                                                u7957 3D88  
                                                u9830 4E4E  
                                                u8775 7760  
                                                u8951 32BC  
                                                u9680 5B70  
                                                _UEIR 000F63  
                                                _UCON 000F65  
                                                u8865 68F6  
                                                u9905 659C  
                                                u9930 65F0  
                                                u9970 24E2  
                                                u8995 6954  
                                                u9885 7E54  
                                                u9895 79AA  
                               _i2c_digipot_reset_off 7D92  
                             ??_fat_get_format_status 002C  
                           __parse_file_truncate@data 0001  
                               __size_of__delete_root 005C  
                                      _ResetSenseData 6E44  
              __end_of__fill_buffer_get_configuration 5E46  
             __size_of__fill_buffer_get_configuration 009E  
                      __fill_buffer_get_configuration 5DA8  
              USBStdFeatureReqHandler@current_ep_data 001B  
                              ?__update_modified_time 0005  
                                                _pDst 008E  
                                                _main 387C  
                                                _itoa 768E  
                          __end_of_fat_append_to_file 233A  
                         __size_of_APP_DeviceMSDTasks 0014  
                                                fsr0h 000FEA  
                                                fsr1h 000FE2  
                             __end_of_display_prepare 5296  
                                                indf0 000FEF  
                                                fsr2h 000FDA  
                                                fsr0l 000FE9  
                                                indf1 000FE7  
                                                indf2 000FDF  
                                                fsr1l 000FE1  
                                                fsr2l 000FD9  
                                                _utoa 5BC4  
                              __CFG_DSWDTOSC$T1OSCREF 000000  
                          ??_ExternalFlash_SectorRead 0034  
                         __fill_buffer_find_file@cntr 004C  
                             __bootloader_verify_file 122C  
                           _ExternalFlash_MediaDetect 804A  
                                                prodh 000FF4  
                                                prodl 000FF3  
                                                start 001C  
                     __end_of_APP_DeviceMSDInitialize 7F60  
                               _display_get_character 7C3E  
                                ??_USBCheckHIDRequest 0001  
                                    ?_MSDWriteHandler 0001  
                                __end_of_failed_line1 8DC0  
                                __end_of_failed_line2 8D2C  
                                __end_of_failed_line4 8E72  
                      ??_MSDProcessCommandMediaAbsent 0048  
                          __end_of_USBCheckStdRequest 4A3A  
                              ??_USBCtrlTrfOutHandler 0003  
                                 __bootloader_program 0BC8  
                        ??__flash_copy_page_to_buffer 0017  
                    __fill_buffer_find_file@outBuffer 0046  
                      ?__flash_write_page_from_buffer 0014  
                                        ___param_bank 000000  
                           __size_of_flash_page_write 0056  
                           ??_USBStdFeatureReqHandler 0018  
                                        _USBOutHandle 0084  
                internalFlash_addressFromPage@address 0005  
                               parseHexFileEntry@data 000C  
                            __end_of__display_checked 3706  
                                      _hex_file_entry 01C6  
                              _bootloader_get_entries 7FE8  
                     __size_of__flash_write_to_buffer 0050  
                            ??_USBStdGetStatusHandler 0001  
                                ??_internalFlash_read 0016  
                                      ?_USBDeviceInit 0001  
                                   __flash_get_status 7AFE  
    __fill_buffer_get_bootloader_details@buffer_large 000C  
                            _system_ui_inactive_count 016E  
    __fill_buffer_get_bootloader_details@buffer_small 0010  
                                       __CFG_PLLDIV$2 000000  
                       i2c_display_write_fixed@length 0008  
                          __end_of__get_first_cluster 6D16  
                                               l10115 73E8  
                                               l10207 54E2  
                                               l10047 4C60  
                                               l10311 5066  
                                               l10119 7406  
                                               l10421 2EB2  
                                               l10343 6D92  
                                               l10263 7BF0  
                                               l11067 05FC  
                                               l12051 32A4  
                                               l10623 62D2  
                                               l10553 7D50  
                                               l10713 565E  
                                               l10625 62D6  
                                               l11257 322A  
                                               l11345 5F9A  
                                               l12065 32EA  
                                               l12057 32B2  
                              ?_i2c_digipot_backlight 0001  
                                               l10573 6868  
                                               l11357 5FCE  
                                               l12173 7C8C  
                                               l12157 337A  
                                               l10671 55AE  
                                               l13071 5770  
                                               l13241 3B7C  
                                               l12505 25E0  
                                               l11299 2170  
                                               l10835 4A7C  
                                               l12531 264A  
                                               l10677 55C2  
                                               l15101 6450  
                                               l12541 2670  
                             ?__fill_buffer_find_file 0044  
                                               l15103 6484  
                                               l12543 2678  
                                               l12519 2624  
                                               l12643 0882  
                                               l12491 259C  
                                               l13525 4EFE  
                                               l11677 1F54  
                                               l13269 3BE0  
                                               l14069 125A  
                                               l12581 2710  
                                               l12557 26BC  
                                               l12477 2558  
                                               l14319 3512  
                                               l12727 5B3C  
                                               l14193 0E92  
                                               l13705 7582  
                                               l12569 26E2  
                                               l12745 5B8C  
                                               l13379 1CC0  
                                               l12851 4E22  
                                               l15091 1B74  
                                               l12579 2708  
                                               l12925 65CE  
                                               l15093 1C8C  
                                               l12919 65C2  
                                               l12699 660E  
                                        spi_tx@length 0003  
                                               l13699 7576  
                                               l12997 5CC6  
                                  ?__flash_get_status 000D  
                             __end_of_fat_rename_file 6016  
                                               ?_main 0001  
                                               ?_itoa 0011  
                                               STR_10 8FE8  
                                               STR_11 8FFA  
                                               STR_12 8FCF  
                               ?_i2c_digipot_reset_on 0001  
                                    ??__display_clear 0001  
                   __size_of_USBCtrlEPServiceComplete 0100  
                                               u10010 579E  
                                     __end_of___lldiv 650C  
                                               ?_utoa 0008  
                                               u11000 12AA  
                    MSDCheckForErrorCases@DeviceBytes 000B  
                                               u10210 1CBC  
                                               u10060 3BA0  
                                               u10230 1CF0  
                                               u10400 1E9A  
                                               u10090 3C44  
                                               u11410 3586  
                                               u11090 0C30  
                                               u11500 59F2  
                                               u12037 7D36  
                                               u12047 73A0  
                                               u11520 5A08  
                                               u11600 4396  
                                               u12057 73B2  
                                               u10465 74DE  
                                     __end_of___llmod 6D7C  
                                               u10481 7B98  
                              __end_of_USBDeviceTasks 358A  
                                               u12067 73BC  
                                               u10590 75B6  
                                               u11650 440A  
                           ?_USBCtrlEPServiceComplete 0001  
                                     __end_of___lwdiv 7480  
                        __flash_write_to_buffer@start 0014  
                                    ??__display_found 0025  
                                     __end_of___lwmod 7712  
                                       __CFG_WDTEN$ON 000000  
                                               _UADDR 000F38  
                                               _TMR0H 000FD7  
                                               _TMR0L 000FD6  
                                _file_minimum_address 0148  
                                    ??__display_start 0025  
                                               _USTAT 000F64  
                                    __i2c_read@length 0008  
                          __size_of_parseHexFileEntry 047C  
                         ?_ExternalFlash_CapacityRead 0001  
                                     ?_display_update 0001  
                            __bootloader_program@cntr 00F1  
                  __size_of_USBCtrlEPAllowStatusStage 00C4  
                                ?__bootloader_program 0001  
                                        __delete_root 6F66  
                                     ??_flash_is_busy 0014  
                                    __end_of_MSDTasks 1EF4  
                                      __CFG_FCMEN$OFF 000000  
                                     __read_fat@value 0036  
                                  _USBCheckMSDRequest 541E  
                     __end_of_internalFlash_getBuffer 7F98  
                     __end_of_USBCtrlEPAllowDataStage 5DA8  
                                               _sd000 8FCB  
                                               _sd001 8EE7  
                                               _sd002 8F1B  
                                               _sd003 8F8A  
                      ?_USBIncrement1msInternalTimers 0001  
                      __size_of_MSDTransferTerminated 0056  
                                 ??__flash_get_status 000F  
                              __end_of_bootloader_run 701C  
                 i2c_display_send_init_sequence@F6800 02F2  
                       __end_of_MSDTransferTerminated 732E  
                                        _gblCBWLength 009D  
                          __end_of__parse_file_delete 74D2  
                           ??_internalFlash_writePage 0005  
                              ?_MSDCheckForErrorCases 000B  
                               ??__system_timer0_init 0001  
                          __end_of__parse_file_append 658E  
                          __end_of__parse_file_create 6B6E  
                              __end_of_ResetSenseData 6EA6  
                            __get_empty_cluster@value 0036  
                          __end_of__parse_file_modify 8056  
                          __end_of__parse_file_rename 6C42  
                           internalFlash_read@address 000E  
                            __parse_command_long@data 0053  
                           fat_get_format_status@cntr 002E  
                             ?__fill_buffer_read_file 0055  
                                               pclath 000FFA  
                                     __end_of_ui_init 7EF8  
                                               tablat 000FF5  
                           __size_of_USBStallEndpoint 0108  
                                 ?_USBCheckMSDRequest 0001  
                                     _MSDCommandState 00A1  
                         ??_ExternalFlash_SectorWrite 002E  
                                               plusw1 000FE3  
                                               plusw2 000FDB  
                     __end_of_internalFlash_erasePage 79D0  
                                         ?_USBMSDInit 0001  
            ExternalFlash_WriteProtectStateGet@config 0001  
                       __size_of__system_encoder_init 003A  
                                               utoa@c 0010  
                                               utoa@v 000E  
                                               status 000FD8  
                             i2c_eeprom_readByte@addr 0018  
                         ?__flash_copy_page_to_buffer 0014  
                                   __CFG_DSWDTPS$8192 000000  
                                     __end_of_strncmp 55A2  
                               hexCharsToUint8@retVal 0006  
                     __fill_buffer_read_file@inBuffer 0055  
                      __bootloader_check_address@cntr 000C  
                      ??_MSDComputeDeviceInAndResidue 0003  
                            __ic2_display_set_address 7CDE  
             __fill_buffer_get_file_details@outBuffer 0041  
                                      _MSDReadHandler 2D0A  
                                   __delete_root@slot 002F  
                        __size_of_USBStdSetCfgHandler 00E2  
                   fat_create_file@number_of_clusters 00BA  
                                flash_page_write@data 0022  
                     __size_of_fat_get_empty_clusters 008E  
               __bootloader_check_address@byte_status 000B  
                                flash_page_write@page 0020  
                       internalFlash_readPage@address 0018  
                                     __initialization 57CA  
                       fat_read_from_file@file_number 00B7  
                           __end_of__flash_get_status 7B30  
                        fat_get_file_information@data 0037  
                  spi_set_configuration@configuration 0001  
               __end_of_ExternalFlash_MediaInitialize 7EA0  
              __size_of_ExternalFlash_MediaInitialize 001A  
                       _ExternalFlash_MediaInitialize 7E86  
                                         _system_init 6A26  
                      __size_of_system_encoder_enable 0010  
                                         _FileAddress 0164  
                                        __end_of_main 39EC  
                                        __end_of_itoa 76D0  
                       __end_of_system_encoder_enable 7F40  
                          i2c_eeprom_readByte@address 0012  
                     __end_of_i2c_display_write_fixed 72D8  
                                        __end_of_utoa 5C68  
                                __end_of__normal_mode 7074  
                                    _timer_pseudo_isr 7968  
                            __parse_command_short@cmd 0014  
                                    __end_of_i2c_init 7F7A  
                            __end_of__i2c_acknowledge 7FB6  
                      __end_of__fill_buffer_find_file 5D0A  
                                       ??__i2c_open_1 0001  
                                     _hex_file_offset 007C  
                          __end_of__get_empty_cluster 68D4  
                                ??_USBCheckMSDRequest 000C  
                   __fill_buffer_get_status@outBuffer 0015  
                                      __CFG_OSC$HSPLL 000000  
                     ??_bootloader_get_rec_dataLength 0003  
              MSDComputeDeviceInAndResidue@DiExpected 0001  
                              hexCharsToUint16@retVal 000A  
                             _USBCheckMSDRequest$2320 000E  
                             _USBCheckMSDRequest$2319 000C  
                             _bootloader_get_rec_data 7EB8  
                           __size_of_USBCtrlEPService 00AC  
                                        __get_fat@idx 0001  
                                        __get_fbr@idx 0001  
                                       _startup_timer 016C  
                                api_prepare@outBuffer 00F0  
                                              ??_main 005E  
                                    __end_of__i2c_get 7FAC  
                                              ??_itoa 0017  
                                  USBStallEndpoint@ep 0006  
                                __size_of__ui_encoder 00B4  
                                              ??_utoa 000E  
                          __bootloader_program@buffer 00E2  
                                       __activetblptr 000003  
                                     ?_USBDeviceTasks 0001  
                               main@bytes_transmitted 00F8  
                            _fat_get_file_information 67EC  
                                  __write_root@offset 002E  
                                        __get_mbr@idx 0001  
          __end_of_ExternalFlash_WriteProtectStateGet 804A  
         __size_of_ExternalFlash_WriteProtectStateGet 0004  
                ??_ExternalFlash_WriteProtectStateGet 0003  
                 ?_ExternalFlash_WriteProtectStateGet 0001  
                  _ExternalFlash_WriteProtectStateGet 8046  
                                         ?_USBSuspend 0001  
                         ?_spi_get_external_rx_buffer 0001  
                                __size_of_api_prepare 0120  
                               ??__bootloader_program 0055  
          __internalFlash_unlockAndActivate@UnlockKey 0001  
                              ?_spi_set_configuration 0001  
                                _i2c_eeprom_writeByte 7754  
                         ?_spi_get_external_tx_buffer 0001  
                                     ?_bootloader_run 0001  
                       __flash_write_to_buffer@buffer 001A  
                                     _system_delay_ms 7D28  
                              __flash_write_to_buffer 7522  
                     i2c_digipot_reset_off@data_array 000B  
                       __size_of__parse_file_truncate 0004  
                      __end_of__fill_buffer_read_file 2550  
                                _start_from_byte_next 0095  
                                    ___llmod@dividend 0001  
                                              _EECON1 000FA6  
                                              _EECON2 000FA7  
                                              _DMABCH 000F66  
                                              _DMABCL 000F67  
                                   ??__display_failed 0025  
                              ?_i2c_digipot_reset_off 0001  
                                     ?_ResetSenseData 0001  
                         ??__get_available_root_entry 0037  
                                          __i2c_start 8018  
                              SYSTEM_Initialize@state 0005  
                                          __i2c_write 75BA  
                           fat_read_from_file@cluster 00D8  
                __flash_write_page_from_buffer@buffer 0016  
                                              _INTCON 000FF2  
                                              _TABLAT 000FF5  
                           ??__bootloader_verify_file 0055  
                     ??_APP_DeviceCustomHIDInitialize 000D  
                            ?__fill_buffer_get_status 0015  
                                   ??__display_search 0001  
                                    __end_of__get_fat 7282  
                                    __end_of__get_fbr 1C9C  
                                    __end_of__get_mbr 503C  
                                              _OSCCON 000FD3  
                         __flash_partial_read@address 0024  
                                              _TBLPTR 000FF6  
                                      __CFG_WDTPS$512 000000  
                                              _RPINR1 000EE1  
                                              _RPOR21 000ED5  
                                              _RPINR2 000EE2  
                                              _RPOR22 000ED6  
                                              _RPINR3 000EE3  
                                              _RPOR23 000ED7  
                                   ??__display_verify 001F  
                                      __CFG_WPCFG$OFF 000000  
                              __end_of_MSDReadHandler 2EE2  
                                 _flash_pages_written 0166  
                                   __spi_init@details 0001  
                                    ??__i2c_wait_idle 0001  
                              ?_display_get_character 0001  
                                    ?_display_prepare 0001  
                         fat_append_to_file@file_size 00B7  
            __fill_buffer_get_bootloader_details@cntr 000B  
                         __flash_partial_read@command 0020  
                                      __CFG_WPDIS$OFF 000000  
                               __bootloader_find_file 5A7A  
                                    __read_fat@offset 0034  
                                    __end_of_fat_init 7F50  
                   __bootloader_program@page_to_write 00F3  
                                   _shortPacketStatus 00AF  
                   fat_append_to_file@number_of_bytes 003F  
                          __get_empty_cluster@cluster 0038  
                                      __CFG_XINST$OFF 000000  
                                     USBDeviceTasks@i 0020  
                         USBStdFeatureReqHandler@pUEP 0019  
                            USBTransferOnePacket@data 0002  
                          USBCtrlTrfInHandler@lastDTS 0002  
                     __end_of_internalFlash_writePage 660C  
                        __end_of__flash_set_page_size 6686  
                                     _hexCharsToUint8 7E34  
                                     ??_USBDeviceInit 0009  
                  __flash_copy_page_to_buffer@command 001A  
                            flash_partial_read@length 002C  
                                              _gblCBW 0100  
                                   _fat_get_file_size 68D4  
                                  __size_of__i2c_read 008C  
                           __size_of_hexCharsToUint16 0070  
                                  __size_of__i2c_send 0008  
                                      __CFG_STVREN$ON 000000  
                                  __size_of__i2c_stop 0008  
                                           ??___lldiv 0009  
                                           ??___llmod 0009  
           SYSTEM_Initialize@pll_startup_counter_3027 0003  
                                           ??___lwdiv 0005  
                        __size_of_flash_partial_write 0070  
                                          _SoftDetach 009C  
                                           ??___lwmod 0005  
                                              _buffer 0340  
                                   _USBEnableEndpoint 7810  
                       __bootloader_program@address32 00EC  
                     __size_of_USBStdGetStatusHandler 00AA  
                                              _memcpy 6D7C  
                                  ?_fat_get_file_size 0030  
                                              _memset 7BE6  
                                              clear_0 5824  
                                              clear_1 5838  
                                              clear_2 584A  
                                              clear_3 5856  
                                              clear_4 5862  
                                              clear_5 586E  
                           _ExternalFlash_SectorWrite 7A04  
                                   api_parse@inBuffer 00E8  
                                     __CFG_CLKOEC$OFF 000000  
                                    __end_of_inq_resp 8F6D  
                                              _reboot 8056  
                __bootloader_check_address@worst_case 000A  
                              ??_i2c_digipot_reset_on 000B  
                        bootloader_get_rec_data@index 0001  
                                              _ui_run 4344  
                                              _spi_tx 71D4  
                                  ?_USBEnableEndpoint 0009  
                         internalFlash_erasePage@page 0003  
                             i2c_eeprom_writeByte@dat 0011  
                                  _flash_partial_read 7ACC  
                                              _tx_buf 01F8  
                                    ?_fat_rename_file 003F  
                          __parse_command_long@length 0055  
                            ??_internalFlash_readPage 0018  
                       __size_of_USBTransferOnePacket 0102  
                                 __size_of_USBMSDInit 0106  
                         i2c_display_write_fixed@data 0006  
         i2c_display_send_init_sequence@init_sequence 000B  
                              __size_of__flash_wakeup 0056  
                             __write_root@root_sector 002C  
                                              itoa@cp 0017  
                                   _i2c_set_frequency 7C12  
                        __end_of_jump_to_main_program 7888  
                               __end_of_fat_find_file 5662  
                         fat_get_empty_clusters@value 0036  
                                 ??_fat_get_file_size 0034  
                              _fat_get_empty_clusters 625E  
                       __size_of__parse_command_short 009E  
                         ?_bootloader_get_rec_address 0001  
                               ?_i2c_eeprom_writeByte 000B  
                                        __mediumconst 8CA4  
                                 __end_of__i2c_open_1 7EB8  
                      i2c_digipot_reset_on@data_array 000B  
                                              tblptrh 000FF7  
                                              tblptrl 000FF6  
             __end_of_internalFlash_addressWithinPage 6F06  
            __size_of_internalFlash_addressWithinPage 0060  
                   ??_internalFlash_addressWithinPage 000F  
                    ?_internalFlash_addressWithinPage 0009  
                     _internalFlash_addressWithinPage 6EA6  
                                              tblptru 000FF8  
                                    __end_of_spi_init 7810  
                                           ??_ui_init 0001  
                    __size_of_APP_DeviceMSDInitialize 0010  
                                       main@rx_buffer 00FA  
                     ??__flash_compare_page_to_buffer 0017  
                                 ??_USBEnableEndpoint 000A  
                                  ?_i2c_set_frequency 0001  
                                 ?_flash_partial_read 0028  
                         ??__bootloader_check_address 0006  
                            __size_of_flash_page_read 0032  
                                       spi_tx_rx@data 0005  
                          __end_of__root_is_available 67EC  
                             __spi_external_rx_buffer 0200  
                                       spi_tx_tx@data 0005  
                                         _CtrlTrfData 000D38  
                                           ??_strncmp 0007  
                                __size_of__write_root 0058  
                                       main@tx_buffer 00FC  
                               __end_of_ui_get_status 802E  
                     ExternalFlash_MediaDetect@config 0001  
                                _controlTransferState 00AE  
                          ??_APP_DeviceCustomHIDTasks 00F2  
                                __CFG_LS48MHZ$SYS48X8 000000  
                             __spi_external_tx_buffer 0240  
                                   _SYSTEM_Initialize 73DA  
                                 ??_i2c_set_frequency 0001  
                       fat_read_from_file@read_length 00DC  
                                          __accesstop 0060  
                             __end_of__initialization 5874  
                   MSDCheckForErrorCases@MSDErrorCase 0010  
                                     ?_MSDReadHandler 0001  
                                  ?_SYSTEM_Initialize 0001  
                              __size_of__display_done 0176  
                                       ___rparam_used 000001  
                                  parseHexFileEntry@i 001C  
                            __size_of_USBStallHandler 0044  
                        __end_of__i2c_not_acknowledge 7FA2  
                     ExternalFlash_SectorWrite@config 0025  
                     ExternalFlash_SectorWrite@buffer 002B  
                    __fill_buffer_read_file@file_size 00E2  
                         __end_of__parse_command_long 625E  
                   __end_of_failed_line3_noNextRecord 8E2E  
                                  __size_of__get_data 0028  
                                  __size_of__get_date 000A  
                           __end_of_fat_get_file_size 6946  
                                 __size_of_USBSuspend 0030  
                                  __size_of__get_time 000A  
                                  __size_of__get_root 0196  
                               __write_fat@fat_sector 002D  
                               flash_page_write@match 0024  
                                ??_flash_partial_read 0030  
                                    _flash_page_write 732E  
                                      __pcstackCOMRAM 0001  
                          __size_of__flash_get_status 0032  
                           __end_of_USBEnableEndpoint 784C  
                            _bootloader_get_file_size 7F1E  
                 __size_of_ExternalFlash_CapacityRead 0012  
                                       __end_of_sd000 8FCF  
                                       __end_of_sd001 8F1B  
                                       __end_of_sd002 8F49  
                                       __end_of_sd003 8FA4  
                                           ?_MSDTasks 0001  
                                        __pidataBANK0 8058  
                                        __pidataBANK1 7E18  
                                        __pidataBANK2 8006  
                           ??_bootloader_get_rec_data 0001  
                                 ??_SYSTEM_Initialize 0001  
            __end_of_bootloader_get_flashPagesWritten 7FE8  
           __size_of_bootloader_get_flashPagesWritten 000A  
                  ??_bootloader_get_flashPagesWritten 0003  
                   ?_bootloader_get_flashPagesWritten 0001  
                    _bootloader_get_flashPagesWritten 7FDE  
                           __get_available_root_entry 7D4C  
                                 fat_rename_file@cntr 00D6  
                                 fat_rename_file@name 003F  
                ExternalFlash_SectorWrite@sector_addr 0027  
                    __size_of_USBCtrlEPAllowDataStage 009E  
                                 fat_rename_file@root 00B6  
                                  __size_of__read_fat 0048  
                                     _active_protocol 00B1  
                       __size_of_USBConfigureEndpoint 0094  
                     __end_of__bootloader_verify_file 1500  
                     ??_bootloader_get_rec_recordType 0001  
                  __size_of_ExternalFlash_MediaDetect 0004  
                         __end_of_USBCtrlTrfInHandler 51D0  
                                 _userInterfaceStatus 0098  
                                 display_prepare@mode 002B  
                                        _gblSenseData 011F  
                                     _MSDErrorHandler 4550  
                      ?_ExternalFlash_MediaInitialize 0001  
                           __end_of_i2c_set_frequency 7C3E  
                       __size_of__display_programming 01D6  
                             __end_of_system_delay_ms 7D4C  
                                  __size_of_api_parse 00D2  
                             parseHexFileEntry@offset 000E  
                                    _hex_file_entries 016A  
                      __end_of_failed_line3_startCode 8CF5  
                               _communicationSettings 0139  
                    fat_get_empty_clusters@fat_sector 0032  
                                  _fat_read_from_file 1EF4  
                                  __size_of__spi_init 0038  
                          fat_delete_file@file_number 003E  
               __end_of_MSDProcessCommandMediaPresent 085A  
              __size_of_MSDProcessCommandMediaPresent 03BE  
                       _MSDProcessCommandMediaPresent 049C  
                                        _failed_line1 8DB0  
                                        _failed_line2 8D1A  
                                        _failed_line4 8E6A  
                              flash_partial_read@data 002E  
                              flash_partial_read@page 0028  
                                       __get_data@idx 0001  
                       __size_of_bootloader_get_error 0006  
                            ??_USBCtrlTrfSetupHandler 001E  
                             _USBTicksSinceSuspendEnd 00A3  
                   __flash_copy_page_to_buffer@buffer 0016  
                           __end_of_SYSTEM_Initialize 742E  
                             ??__update_modified_time 0007  
                                   __end_of__i2c_read 6378  
                                   __end_of__i2c_send 8028  
                                 hexCharToUint8@ascii 0002  
                              _USBStdGetStatusHandler 5926  
                                 USBStallEndpoint@dir 0001  
                                   __end_of__i2c_stop 8018  
                                         ?__i2c_start 0001  
                                 ?_fat_read_from_file 003F  
                                         ?__i2c_write 0006  
                                          __pbssBANK0 0060  
                                          __pbssBANK1 0100  
                                          __pbssBANK2 0200  
                                          __pbssBANK3 0300  
                       fat_append_to_file@fat_cluster 00BD  
                    __size_of_i2c_display_write_fixed 0056  
                                    _USBStallEndpoint 423C  
                        __size_of_i2c_eeprom_readByte 0050  
                                          _gblNumBLKS 0150  
                                           ?_i2c_init 0001  
                    __fill_buffer_read_file@outBuffer 0057  
                        __end_of__sector_from_cluster 7F6E  
                                    _mediaInformation 01DD  
                             __end_of_hexCharsToUint8 7E50  
                      __size_of_fat_get_format_status 00A4  
                      fat_get_file_information@offset 003C  
                              ?__bootloader_find_file 0001  
                       __end_of_fat_get_format_status 5BC4  
                     ??__fill_buffer_get_file_details 0043  
                                       __flash_wakeup 7384  
                            __fill_buffer_get_display 5716  
                                           ?__i2c_get 0001  
                         __size_of_USBWakeFromSuspend 0038  
                                         _pBDTEntryIn 006C  
                               __size_of__normal_mode 0058  
                         __size_of_i2c_display_cursor 0024  
                             ?_bootloader_get_entries 0001  
                          __update_modified_time@root 0005  
                    __end_of_USBCtrlEPServiceComplete 4858  
               __end_of_APP_DeviceCustomHIDInitialize 7A04  
              __size_of_APP_DeviceCustomHIDInitialize 0034  
                       _APP_DeviceCustomHIDInitialize 79D0  
                         MSDTransferTerminated@handle 000C  
                           __bootloader_check_address 4DC2  
                  ExternalFlash_SectorSizeRead@config 0001  
                                USBCtrlTrfRxService@i 0001  
                                          ??_MSDTasks 004D  
                             ??_i2c_digipot_backlight 000B  
                                          _fat_format 2550  
                                   ?__display_checked 0001  
                      __flash_write_to_buffer@command 001B  
                                ??_fat_read_from_file 0049  
                        __size_of__flash_partial_read 0078  
                            __size_of_fat_delete_file 006A  
                                           MSDTasks@i 0052  
                    ??__fill_buffer_get_configuration 0003  
                     ?__fill_buffer_get_configuration 0001  
                                             ?_memcpy 0001  
                                  _fat_append_to_file 211A  
                                             ?_memset 0001  
                                          _device_dsc 8FA4  
                 fat_get_file_information@file_number 003E  
                                    ??_display_update 0011  
                                             ?_reboot 0001  
                                       __get_root@idx 0001  
                                  ??__display_checked 001F  
                                         __i2c_open_1 7EA0  
                                    _USBCtrlEPService 587A  
                                             ?_ui_run 0001  
                                          _ep_data_in 0161  
                                             ?_spi_tx 0001  
                                  __display_clear@col 0004  
                             _extended_linear_address 0140  
                                  __display_clear@row 0003  
                       fat_append_to_file@file_number 00C1  
                                           ?__get_fat 0001  
                                           ?__get_fbr 0001  
                                       __display_done 3706  
                    __sector_from_cluster@fat_cluster 0001  
                                           ?__get_mbr 0001  
                         __end_of_USBCtrlTrfRxService 412A  
                                  _USBCheckStdRequest 4958  
                              ??_i2c_eeprom_writeByte 000E  
                                   _configDescriptor1 8EA7  
                     __size_of_internalFlash_readPage 0042  
                             ??_MSDCheckForErrorCases 000F  
                                 ?_fat_append_to_file 003F  
                              fat_append_to_file@data 0041  
                                          _flash_init 7E6C  
                  __fill_buffer_get_display@outBuffer 0005  
                         __end_of_USBCtrlTrfTxService 5108  
                                   __end_of__get_data 7C90  
                                   __end_of__get_date 8006  
                                 _USBStdSetCfgHandler 4A3A  
                              fat_append_to_file@root 00C8  
                                  __display_done@cntr 001F  
                                   __end_of__get_time 7FFC  
                                   __end_of__get_root 340A  
                                  __size_of_spi_tx_rx 0094  
                                  __size_of_spi_tx_tx 008C  
                                           ?_fat_init 0001  
                                             _RPINR21 000EFC  
                                             _RPINR22 000EFD  
                                             _RPINR23 000EFE  
                                          _done_line1 8D80  
                                          _done_line2 8E9E  
                                          _done_line3 8D70  
                                          _done_line4 8D60  
                                             _SSP1ADD 000FC8  
                                             _SSP1BUF 000FC9  
                     __end_of_bootloader_get_rec_data 7ECE  
                                             _RXADDRH 000F68  
                                             _RXADDRL 000F69  
                              _total_hex_file_entries 0168  
                                             _TXADDRH 000F6A  
                                             _TXADDRL 000F6B  
                                 ?_USBCheckStdRequest 0001  
                          ??__ic2_display_set_address 000B  
                        __size_of_USBStdGetDscHandler 013A  
                                __flash_set_page_size 660C  
                                             _UIEbits 000F36  
                            __end_of_timer_pseudo_isr 799C  
                                  __get_first_cluster 6CAC  
                                        __normal_mode 701C  
                          __end_of_APP_DeviceMSDTasks 7F0C  
                                             _UIRbits 000F62  
                                   __end_of__read_fat 764A  
                     ??_internalFlash_pageFromAddress 0005  
         MSDCheckForErrorCases@HostMoreDataThanDevice 000F  
                 __bootloader_verify_file@rec_counter 00E2  
                             __size_of_hexCharToUint8 002C  
               __end_of__flash_compare_page_to_buffer 66FE  
              __size_of__flash_compare_page_to_buffer 0078  
                       __flash_compare_page_to_buffer 6686  
                                          __write_fat 7794  
                                          ??_i2c_init 0002  
                                    __CFG_CFGPLLEN$ON 000000  
                            __i2c_write@slave_address 0009  
                                 _bootloader_filename 8FB6  
                 __ic2_display_set_address@data_array 000C  
                                          _pageBuffer 0800  
                                        ??_USBMSDInit 000C  
                                   __read_fat@cluster 0030  
                                      ?__flash_wakeup 0001  
                                   ??_flash_page_read 002C  
                      __end_of_bootloader_get_entries 7FF2  
                              fat_find_file@extension 0032  
                            ?_internalFlash_getBuffer 0001  
                                   __end_of_api_parse 4F6E  
                                 ?__get_first_cluster 0030  
                    i2c_eeprom_readByte@slave_address 0017  
                                          ??__i2c_get 0001  
                                   _MSDProcessCommand 412A  
                                     hexCharToUint8@c 0001  
                                ??_fat_append_to_file 0043  
                                       __i2c_send@dat 0001  
                           __flash_get_status@command 000F  
                                             __Hparam 0000  
                     ??_USBIncrement1msInternalTimers 0001  
                                  __parse_file_delete 7480  
                                ?_USBStdSetCfgHandler 0001  
                          __size_of_fat_get_file_size 0072  
                                   __end_of__spi_init 78FA  
                         __size_of_USBCheckHIDRequest 00E2  
                                  __parse_file_append 650C  
                                             __Lparam 0000  
                                  __parse_file_create 6B02  
                                _jump_to_main_program 784C  
                            __size_of_fat_create_file 01BC  
                                   __end_of_hid_rpt01 8F8A  
                                  ?_MSDProcessCommand 0001  
                                __display_failed@cntr 0025  
                             __end_of_MSDErrorHandler 4656  
                          _MSDTransferTerminated$2407 000E  
                          __size_of_USBEnableEndpoint 003C  
                                        ?_system_init 0001  
                                  __parse_file_modify 8052  
                                  __parse_file_rename 6BD8  
                          ??_fat_get_file_information 0039  
                                ??_USBCheckStdRequest 001E  
                                    _hexCharsToUint16 6946  
                                          _last_error 0096  
                                           ?_spi_init 0001  
                       __size_of_USBCtrlTrfOutHandler 0060  
                 ExternalFlash_MediaInitialize@config 0001  
                                    _ToSendDataBuffer 0300  
                            ?_internalFlash_erasePage 0003  
                                __end_of_found_line3b 8E97  
                                             ___lldiv 648A  
                                    ??_USBDeviceTasks 0020  
                                             ___llmod 6D16  
                                             ___lwdiv 742E  
                                   ??_USBStallHandler 0001  
                                             ___lwmod 76D0  
                         __size_of_internalFlash_read 0036  
                                 ?__parse_file_delete 003F  
                                   ?__i2c_acknowledge 0001  
                                 ?__parse_file_append 004B  
                                 ?__parse_file_create 0050  
                                 __size_of__i2c_start 0008  
                        __end_of__system_encoder_init 78C2  
                                             __pcinit 57CA  
                                     __size_of_memcpy 0066  
                                 __size_of__i2c_write 0048  
                                     __size_of_memset 002C  
                            __size_of_MSDWriteHandler 02B4  
                           __end_of_configDescriptor1 8EE7  
                                 ??_MSDProcessCommand 0048  
                                             __ramtop 0F00  
                                     __size_of_reboot 0002  
                        ExternalFlash_SectorRead@page 0034  
                              __display_itoa_u32@text 0023  
                              __display_itoa_u16@text 001D  
                          __size_of_i2c_set_frequency 002C  
                                      ?__display_done 0001  
                                             __ptext0 387C  
                                             __ptext1 4344  
                                     __display_failed 0F36  
                                             __ptext2 7F30  
                                             __ptext3 7B8E  
                                             __ptext4 7D70  
                                             __ptext5 7D92  
                                             __ptext6 7CB8  
                                             __ptext7 5662  
                                             __ptext8 7968  
                                 ?__parse_file_modify 0001  
                                             __ptext9 6A26  
                                             _inPipes 0066  
                             ??_spi_set_configuration 0001  
                                 ?__parse_file_rename 0043  
                                     __size_of_ui_run 0106  
                                      fat_format@cntr 0025  
                   __size_of_ExternalFlash_SectorRead 0032  
                                     __size_of_spi_tx 0058  
                         _USBDeferOUTDataStagePackets 00A4  
                                  ??__i2c_acknowledge 0001  
                                           _T0CONbits 000FD5  
                                          ??__get_fat 0003  
                                          ??__get_fbr 0003  
                                          ??__get_mbr 0003  
                           ?_ExternalFlash_SectorRead 002C  
                                    ??_bootloader_run 005D  
                                    ?_system_delay_ms 0001  
                         __end_of__system_timer0_init 7E18  
                                ??__get_first_cluster 0032  
                                        ??_USBSuspend 0018  
                                     __display_search 39EC  
                                  __end_of_USBMSDInit 4550  
                                    ??_ResetSenseData 0001  
                             ?__flash_write_to_buffer 0014  
                             _APP_DeviceMSDInitialize 7F50  
                                             _msd_cbw 000D40  
                                     __display_verify 3DC6  
                                             _msd_csw 000D80  
                             ??_i2c_digipot_reset_off 000B  
                                __i2c_not_acknowledge 7F98  
                                             _ui_init 7EE4  
                                          ??_fat_init 0030  
                  __size_of_ExternalFlash_SectorWrite 0032  
                               ?__flash_set_page_size 0001  
                               __end_of_flash_is_busy 7EE4  
                                  __end_of_USB_CD_Ptr 8EA6  
                            i2c_eeprom_writeByte@data 000D  
                                          _msd_buffer 000600  
                                  __get_empty_cluster 6860  
                          __size_of_SYSTEM_Initialize 0054  
                     __size_of_USBCtrlTrfSetupHandler 0092  
                             __size_of__flash_is_busy 0022  
                        fat_get_file_size@file_number 003D  
                                             _strncmp 54E0  
                                 _flash_partial_write 69B6  
                                end_of_initialization 5874  
                                ??__parse_file_delete 0041  
       __fill_buffer_get_bootloader_details@outBuffer 0005  
                             ??_display_get_character 0002  
                               _MSDTransferTerminated 72D8  
               __flash_compare_page_to_buffer@command 001C  
         __end_of__fill_buffer_get_bootloader_details 2B2C  
        __size_of__fill_buffer_get_bootloader_details 01EE  
               ??__fill_buffer_get_bootloader_details 0007  
                ?__fill_buffer_get_bootloader_details 0005  
                 __fill_buffer_get_bootloader_details 293E  
                      ?_MSDProcessCommandMediaPresent 0001  
                                ??__parse_file_append 004D  
                                ??__parse_file_create 0052  
                                  __end_of_USB_SD_Ptr 8E82  
                                             memcpy@d 000B  
                                             memcpy@n 0006  
                                             memcpy@s 0008  
                                    __write_fat@value 002B  
                                 _pBDTEntryEP0OutNext 0090  
                                ??__parse_file_modify 0003  
                           __end_of_MSDProcessCommand 423C  
                                             itoa@buf 0011  
                                ??__parse_file_rename 0045  
                                             memset@c 0003  
                                             itoa@val 0013  
                                             memset@n 0005  
                                             memset@p 0007  
                        fat_delete_file@first_cluster 003C  
                                     _USB1msTickCount 0154  
                                    ?_hexCharsToUint8 0003  
                                 ?__get_empty_cluster 0030  
                            __flash_partial_read@data 001A  
                        fat_get_empty_clusters@offset 0034  
                              _internalFlash_readPage 7712  
                            ?_USBStdFeatureReqHandler 0001  
                            __flash_partial_read@page 0014  
                            fat_append_to_file@length 00C2  
                         i2c_eeprom_writeByte@address 000B  
                            fat_append_to_file@offset 00BF  
           __fill_buffer_get_file_details@file_number 0043  
                               ??_USBStdSetCfgHandler 0018  
                                     ___lldiv@divisor 0005  
                            fat_append_to_file@sector 00B5  
                               ?_jump_to_main_program 0001  
                                     ___lldiv@counter 000D  
                        ?_bootloader_get_rec_checksum 0001  
                                  __end_of_USBSuspend 7B60  
                        __end_of__parse_file_truncate 8052  
                             _USBCtrlEPAllowDataStage 5D0A  
                                   __end_of_spi_tx_rx 613E  
                                   __end_of_spi_tx_tx 6404  
               __end_of__fill_buffer_get_file_details 6B02  
              __size_of__fill_buffer_get_file_details 006E  
                       __fill_buffer_get_file_details 6A94  
                                             postdec1 000FE5  
                                             postdec2 000FDD  
                __end_of_ExternalFlash_SectorSizeRead 7FC0  
               __size_of_ExternalFlash_SectorSizeRead 000A  
                        _ExternalFlash_SectorSizeRead 7FB6  
                                          ??_spi_init 0004  
                                             postinc0 000FEE  
                                             postinc2 000FDE  
                                         ?_fat_format 0001  
                                ?_flash_partial_write 0020  
                    __size_of__fill_buffer_get_status 00E2  
                                       ??__ui_encoder 0001  
                                             utoa@buf 0008  
             MSDProcessCommandMediaPresent@sectorSize 003F  
                            _USBCtrlEPServiceComplete 4758  
                                             utoa@val 000A  
                                           _MSD_State 00A2  
                         __end_of__bootloader_program 0F36  
                               _system_encoder_enable 7F30  
                     ??_internalFlash_addressFromPage 0005  
                         __size_of_USBCheckMSDRequest 00C2  
                                       ??_api_prepare 005D  
                          _USBStatusStageEnabledFlag1 00A7  
                          _USBStatusStageEnabledFlag2 00A6  
                            flash_partial_write@match 0028  
                                  USBEnableEndpoint@p 000A  
                             ?_fat_get_empty_clusters 0030  
                                           _PORTAbits 000F80  
                                           _PORTBbits 000F81  
                                           _PORTDbits 000F83  
                            flash_partial_write@start 0022  
                                ??__get_empty_cluster 0032  
                      __end_of__flash_write_to_buffer 7572  
                                    __CFG_DSBOREN$OFF 000000  
                                __sector_from_cluster 7F60  
                      internalFlash_writePage@address 0005  
                            ?_internalFlash_writePage 0003  
                  __size_of__get_available_root_entry 0024  
                                spi_tx_rx@data_length 0007  
                               ?__i2c_not_acknowledge 0001  
                       fat_append_to_file@new_cluster 00BB  
                                   ??_fat_delete_file 003A  
                              fat_create_file@cluster 00BC  
                                 flash_page_read@data 002A  
                                         ?_flash_init 0001  
                                 flash_page_read@page 0028  
                                    __CFG_CPUDIV$OSC1 000000  
                       fat_get_empty_clusters@cluster 003A  
                     __fill_buffer_find_file@inBuffer 0044  
                                           _TRISAbits 000F92  
                                           _TRISBbits 000F93  
                                           _TRISCbits 000F94  
                                           _TRISDbits 000F95  
                                           _TRISEbits 000F96  
                                  _ReceivedDataBuffer 0280  
                                  _BothEP0OutUOWNsSet 00AA  
                       fat_get_empty_clusters@maximum 0030  
                            __end_of_flash_page_write 7384  
                                       __pbssBIGRAMlh 0800  
                                       __pbssBIGRAMll 0340  
                                    ??_MSDReadHandler 0036  
                           __flash_partial_read@start 0016  
                           USBConfigureEndpoint@EPNum 0006  
                             _i2c_display_write_fixed 7282  
                                   __CFG_SOSCSEL$HIGH 000000  
                          ?_USBCtrlEPAllowStatusStage 0001  
                 USER_USB_CALLBACK_EVENT_HANDLER@size 0014  
                             __size_of__display_clear 0048  
                                           _USTATcopy 00B3  
                                     ??__flash_wakeup 0009  
       MSDProcessCommandMediaPresent@NumBytesInPacket 003E  
                             __size_of__display_found 01DE  
                                       _checked_line1 8DC0  
                                       _checked_line2 8CA5  
                                       _checked_line3 8E72  
                                       _checked_line4 8D3E  
                                         ?__write_fat 0029  
                                 __delete_root@offset 002C  
                          ??_bootloader_get_file_size 0005  
                            _failed_line3_dataTooLong 8E3D  
                             __size_of__display_start 01F0  
                        __end_of_USBTransferOnePacket 4758  
                              i2c_display_cursor@line 000F  
                                    __CFG_IOL1WAY$OFF 000000  
                   internalFlash_writePage@block_cntr 000B  
                        __end_of__parse_command_short 5EE4  
               __end_of_internalFlash_pageFromAddress 7E6C  
              __size_of_internalFlash_pageFromAddress 001C  
                       _internalFlash_pageFromAddress 7E50  
                                __end_of_search_line1 8E00  
                                __end_of_search_line2 8D60  
                                __end_of_search_line3 8CE2  
                                __end_of_search_line4 8E61  
                      ?__flash_compare_page_to_buffer 0014  
                       __fill_buffer_get_display@cntr 000D  
                                  __root_is_available 6776  
                       __fill_buffer_get_display@line 000E  
                                   __CFG_WPEND$PAGE_0 000000  
                  __flash_compare_page_to_buffer@page 0014  
                                 __CFG_MSSP7B_EN$MSK7 000000  
                             __end_of__display_failed 122C  
                       __get_empty_cluster@fat_sector 0032  
                                    ?_MSDErrorHandler 0001  
                                    __write_root@data 0029  
                              _USBCtrlTrfSetupHandler 613E  
                               ??_flash_partial_write 0028  
                       ??_bootloader_get_rec_checksum 0001  
                                    __write_root@slot 0030  
                      __bootloader_program@entry_page 00E4  
                              __display_checked@start 0021  
                    ExternalFlash_CapacityRead@config 0001  
                            __size_of_display_prepare 00C6  
                             __end_of__display_search 3B3E  
                               __end_of_USBDeviceInit 3C8C  
               __end_of_USBIncrement1msInternalTimers 7DD6  
              __size_of_USBIncrement1msInternalTimers 0022  
                       _USBIncrement1msInternalTimers 7DB4  
                                     ??__display_done 001F  
                      __end_of_fat_get_empty_clusters 62EC  
                       ?_ExternalFlash_SectorSizeRead 0001  
                             __end_of__display_verify 3EF2  
                                 ?__root_is_available 0001  
                                   __size_of_MSDTasks 0258  
                            __end_of_USBStallEndpoint 4344  
                                 _i2c_eeprom_readByte 74D2  
                                   ??_fat_create_file 004C  
                 __bootloader_program@start_from_byte 00F0  
                  __fill_buffer_read_file@data_length 00E6  
                           ??_APP_DeviceMSDInitialize 000F  
                           _failed_line3_addressRange 8CBA  
                               ?__sector_from_cluster 0001  
                                      __end_of_memcpy 6DE2  
                                     _MSDRetryAttempt 009E  
                                      __end_of_memset 7C12  
                                      __end_of_reboot 8058  
                  __size_of__bootloader_check_address 00DA  
                                    __CFG_DSWDTEN$OFF 000000  
                       __size_of_i2c_digipot_reset_on 0022  
                                   _USBBusIsSuspended 00AC  
                           flash_partial_write@length 0024  
                                      __end_of_ui_run 444A  
                                      __end_of_spi_tx 722C  
               __get_available_root_entry@file_number 0037  
                                 __end_of__ui_encoder 5716  
                           __flash_set_page_size@size 0018  
                                 start_initialization 57CA  
                             ?_USBStdGetStatusHandler 0001  
                                       ??__write_root 002B  
                       ExternalFlash_SectorWrite@page 002E  
                       USBCtrlTrfRxService@byteToRead 0002  
                              ??__flash_set_page_size 0014  
                                   ??_MSDWriteHandler 0030  
                                 __end_of_api_prepare 4012  
                   __end_of__get_available_root_entry 7D70  
                            ?__bootloader_verify_file 0001  
                                __display_found@start 0027  
                          ??__fill_buffer_get_display 0008  
                          i2c_display_cursor@position 000E  
                              ?_MSDTransferTerminated 000C  
                            __size_of_fat_rename_file 0096  
                                     _USBMSDOutHandle 008A  
                    __ic2_display_set_address@address 000B  
                        __end_of_USBConfigureEndpoint 60AA  
                                        ??__i2c_start 0001  
   internalFlash_addressWithinPage@page_start_address 0013  
                                        ??__i2c_write 0009  
                     __end_of_USBStdFeatureReqHandler 1A38  
                                 __flash_partial_read 66FE  
                                   USBStallEndpoint@p 0007  
                                 __size_of_fat_format 01FE  
                             ??__bootloader_find_file 0044  
                                       _MSDHostNoData 009B  
                                      _hexCharToUint8 7BBA  
              internalFlash_addressWithinPage@address 0009  
                                ??__root_is_available 0030  
                      __size_of__update_modified_time 0032  
                   __end_of_USBCtrlEPAllowStatusStage 541E  
                                ?_i2c_eeprom_readByte 0012  
                       __end_of__update_modified_time 7ACC  
                        __end_of__display_programming 30B8  
                fat_get_empty_clusters@empty_clusters 0038  
                            __end_of_USBCtrlEPService 5926  
                          __size_of_MSDProcessCommand 0112  
                                __system_encoder_init 7888  
                                           __i2c_read 62EC  
                                           __i2c_send 8020  
                                     ___llmod@divisor 0005  
                                           __i2c_stop 8010  
                              ??_jump_to_main_program 0001  
                                     ___llmod@counter 0009  
                                   __size_of_i2c_init 000C  
                           ??_USBCtrlEPAllowDataStage 0002  
                            ??__fill_buffer_find_file 0048  
                                      USBDeviceInit@i 0009  
                        __end_of_bootloader_get_error 8046  
                          __flash_partial_read@length 0018  
                       __end_of_failed_line3_checksum 8E1F  
                       __root_is_available@first_byte 0036  
                              _pBDTEntryEP0OutCurrent 0092  
                              __size_of_fat_find_file 00C0  
                    __end_of_fat_get_file_information 6860  
                                         _DMACON1bits 000F88  
                                         _DMACON2bits 000F86  
                                 __size_of_flash_init 001A  
                             USBTransferOnePacket@dir 0001  
                             USBTransferOnePacket@len 0004  
                                   _programming_line1 8DA0  
                                   _programming_line2 8D08  
                                   _programming_line3 8E82  
                                   _programming_line4 8D90  
                                       _MSDTasks$2372 004E  
                                       _MSDTasks$2373 0050  
                                   __size_of__i2c_get 000A  
                         MSDErrorHandler@OldMSD_State 000A  
                         __size_of_flash_partial_read 0032  
                                      __get_date@date 0003  
                               spi_init@configuration 0004  
                             flash_partial_read@start 002A  
                                 _USBStdGetDscHandler 3C8C  
                              ?_system_encoder_enable 0001  
                                ?__flash_partial_read 0014  
                                   __CFG_ADCSEL$BIT10 000000  
                   __size_of_APP_DeviceCustomHIDTasks 00AA  
                          fat_get_file_size@file_size 0037  
                                         __pdataBANK0 00FE  
                                         __pdataBANK1 01E4  
                                         __pdataBANK2 02F2  
                           ?_APP_DeviceCustomHIDTasks 0001  
                                __size_of_system_init 006E  
                      __size_of_i2c_digipot_backlight 0026  
                                            ??_memcpy 0008  
                             __size_of__i2c_wait_idle 0058  
                                            ??_memset 0007  
                        __size_of__parse_command_long 008E  
                       __end_of_i2c_digipot_backlight 7CDE  
                                        ?__i2c_open_1 0001  
                                            ??_reboot 0001  
                              __size_of_ui_get_status 0006  
                                            ??_ui_run 0014  
                                  __end_of__i2c_start 8020  
                                            ??_spi_tx 0005  
                      ?__fill_buffer_get_file_details 003F  
                                  __end_of__i2c_write 7602  
                           __root_is_available@offset 0033  
                                 __size_of__write_fat 0040  
                              ??__i2c_not_acknowledge 0001  
                              _USBActiveConfiguration 00B4  
                            ??__fill_buffer_read_file 0059  
                      __end_of_USBStdGetStatusHandler 59D0  
                         api_parse@receivedDataLength 00EA  
                   __end_of__bootloader_check_address 4E9C  
                                       ?__delete_root 0001  
               __end_of_internalFlash_addressFromPage 7B8E  
              __size_of_internalFlash_addressFromPage 002E  
                       _internalFlash_addressFromPage 7B60  
                          fat_append_to_file@position 00C4  
                         fat_create_file@next_cluster 00B5  
                                   __size_of__get_fat 0056  
                                   __size_of__get_fbr 0264  
                                     _flash_page_read 7A68  
                           ??_i2c_display_write_fixed 0009  
                                       __pcstackBANK0 00B5  
                        __size_of_USBCtrlTrfInHandler 00C8  
                                   __size_of__get_mbr 00CE  
                        ??_ExternalFlash_CapacityRead 0005  
                      __size_of_MSDCheckForErrorCases 00E2  
                                __display_search@cntr 0001  
                __size_of_bootloader_get_rec_checksum 0006  
                        __end_of_bootloader_extension 8FCB  
                       __end_of_MSDCheckForErrorCases 4CE0  
             __bootloader_program@address_within_page 00E6  
                              __end_of_hexCharToUint8 7BE6  
                           __size_of__display_checked 017C  
                                           _gblBLKLen 014C  
                  __end_of_flash_command_pagesize_512 8FC7  
                          _flash_command_pagesize_512 8FC3  
                  __end_of_flash_command_pagesize_528 8FC3  
                          _flash_command_pagesize_528 8FBF  
                                      __flash_is_busy 7DD6  
                                ?_USBStdGetDscHandler 0001  
                            __end_of_hexCharsToUint16 69B6  
                                __parse_file_truncate 804E  
                          i2c_set_frequency@frequency 0001  
                                        _found_line3b 8E90  
                                           __get_data 7C68  
                                           __get_date 7FFC  
                    __bootloader_program@return_value 00E8  
                                   __size_of_fat_init 0010  
                               ??_i2c_eeprom_readByte 0014  
                 fat_get_file_information@root_sector 003A  
                                   ?_timer_pseudo_isr 0001  
                                           __get_time 7FF2  
                                           __get_root 3274  
                                 __end_of__write_root 7124  
     __fill_buffer_get_bootloader_details@data_length 000A  
                               ?__system_encoder_init 0001  
                          __end_of_USBWakeFromSuspend 7932  
                            __delete_root@root_sector 002A  
                          __end_of_i2c_display_cursor 7D28  
                                          ?__i2c_read 0006  
                                  ??_timer_pseudo_isr 0001  
                                          ?__i2c_send 0001  
                                     _USBStallHandler 764A  
                                        _pBDTEntryOut 0072  
                                          ?__i2c_stop 0001  
                          fat_rename_file@file_number 00B5  
                                           __read_fat 7602  
                            ?_bootloader_get_rec_data 0001  
                           __end_of_programming_line1 8DB0  
                           __end_of_programming_line2 8D1A  
                           __end_of_programming_line3 8E89  
                           __end_of_programming_line4 8DA0  
                    __end_of_ExternalFlash_SectorRead 7A68  
                                 flash_is_busy@result 0014  
                __end_of_bootloader_get_total_entries 7FCA  
               __size_of_bootloader_get_total_entries 000A  
                        _bootloader_get_total_entries 7FC0  
                                    ___lwdiv@dividend 0001  
                               _fat_get_format_status 5B20  
                                   fat_find_file@name 0030  
                      MSDProcessCommandMediaPresent@i 0047  
                                 fat_find_file@buffer 0034  
                                   fat_find_file@slot 003F  
                                           _api_parse 4E9C  
                           fat_create_file@root_entry 00BE  
                                    ?__display_failed 0001  
                             __fill_buffer_get_status 4CE0  
                                  _APP_DeviceMSDTasks 7EF8  
                                       __pmediumconst 8CA4  
                                 fat_find_file@offset 0042  
                               ??__flash_partial_read 001C  
                                           __ptext100 6016  
                                           __ptext101 6F06  
                                           __ptext110 049C  
                                           __ptext102 4012  
                                           __ptext111 1500  
                                           __ptext103 535A  
                                           __ptext200 66FE  
                                           __ptext120 7A36  
                                           __ptext112 8046  
                                           __ptext104 5108  
                                           __ptext201 7DD6  
                                           __ptext121 7A68  
                                           __ptext113 7A04  
                                           __ptext105 503C  
                                           __ptext202 7384  
                                           __ptext130 1EF4  
                                           __ptext122 5EE4  
                                           __ptext114 732E  
                                           __ptext106 7EF8  
                                           __ptext203 71D4  
                                           __ptext131 68D4  
                                           __ptext123 7FB6  
                                           __ptext115 2D0A  
                                           __ptext107 1C9C  
                                           __ptext204 7AFE  
                                           __ptext140 802E  
                                           __ptext132 4CE0  
                                           __ptext124 7F0C  
                                           __ptext116 4BFE  
                                           __ptext108 412A  
                                           __ptext205 60AA  
                                           __ptext141 7FCA  
                                           __ptext133 8028  
                                           __ptext125 7E86  
                                           __ptext117 4550  
                                           __ptext109 6DE2  
                                           __ptext206 4656  
                                           __ptext150 5C68  
                                           __ptext142 7EB8  
                                           __ptext134 6A94  
                                           __ptext126 804A  
                                           __ptext118 423C  
                                           __ptext207 0000  
                                           __ptext151 4E9C  
                                           __ptext143 8034  
                                           __ptext135 5716  
                                           __ptext127 59D0  
                                           __ptext119 6E44  
                                           __ptext160 8010  
                                           __ptext152 5E46  
                                           __ptext144 803A  
                                           __ptext136 7C3E  
                                           __ptext128 3EF2  
                                           __ptext161 8018  
                                           __ptext153 7D28  
                                           __ptext145 7FD4  
                                           __ptext137 5DA8  
                                           __ptext129 233A  
                                           __ptext170 6CAC  
                                           __ptext162 8020  
                                           __ptext154 8056  
                                           __ptext146 7FDE  
                                           __ptext138 293E  
                                           __ptext171 6F66  
                                           __ptext163 61D0  
                                           __ptext155 784C  
                                           __ptext147 7F1E  
                                           __ptext139 7FC0  
                                           __ptext180 211A  
                                           __ptext172 6B02  
                                           __ptext164 804E  
                                           __ptext156 7754  
                                           __ptext148 8040  
                                           __ptext181 67EC  
                                           __ptext173 30B8  
                                           __ptext165 6BD8  
                                           __ptext157 7C12  
                                           __ptext149 7FE8  
                                           __ptext190 717C  
                                           __ptext182 6776  
                                           __ptext174 6D7C  
                                           __ptext166 5F80  
                                           __ptext158 75BA  
                                           __ptext191 6686  
                                           __ptext183 70CC  
                                           __ptext175 625E  
                                           __ptext167 8052  
                                           __ptext159 7074  
                                           __ptext192 7A9A  
                                           __ptext184 7794  
                                           __ptext176 55A2  
                                           __ptext168 7480  
                                           __ptext193 7FF2  
                                           __ptext185 69B6  
                                           __ptext177 54E0  
                                           __ptext169 6C42  
                                           __ptext194 7FFC  
                                           __ptext186 7ECE  
                                           __ptext178 7D4C  
                                           __ptext195 7F60  
                                           __ptext187 7522  
                                           __ptext179 650C  
                                           __ptext196 7602  
                                           __ptext188 6378  
                                           __ptext197 6860  
                                           __ptext189 7124  
                                           __ptext198 7ACC  
                                           __ptext199 4858  
                      ?_internalFlash_pageFromAddress 0001  
                                 fat_find_file@sector 0040  
                                            ?___lldiv 0001  
                                            ?___llmod 0001  
                                            ?___lwdiv 0001  
                                           __spi_init 78C2  
                                            ?___lwmod 0001  
                         __size_of_fat_read_from_file 0226  
                                    ?__display_search 0001  
                                           _hid_rpt01 8F6D  
                                         __ui_encoder 5662  
                           __get_first_cluster@offset 0035  
                              ??__sector_from_cluster 0003  
                                           _idle_rate 00B2  
                                    ?__display_verify 0001  
                                   __size_of_spi_init 003C  
                           __get_first_cluster@sector 0033  
                                      __get_time@time 0003  
                    __size_of_internalFlash_getBuffer 000A  
                                         _api_prepare 3EF2  
                             __parse_file_delete@data 003F  
                                     __i2c_write@data 0006  
                                _file_maximum_address 0144  
                                     __i2c_write@cntr 000A  
                                 fat_create_file@name 0044  
                                 ?_APP_DeviceMSDTasks 0001  
                  __flash_write_to_buffer@data_length 0018  
                                 fat_create_file@size 0048  
                      internalFlash_erasePage@address 0005  
                                   system_delay_ms@ms 0002  
                                _USBTransferOnePacket 4656  
                          ?_ExternalFlash_MediaDetect 0001  
                                      ??__delete_root 0029  
                      __size_of_spi_set_configuration 0100  
                      ??_ExternalFlash_SectorSizeRead 0003  
                                   ??_display_prepare 0029  
                       __end_of_spi_set_configuration 4958  
                                __CFG_RTCOSC$T1OSCREF 000000  
                                __parse_command_short 5E46  
                        ??_spi_get_external_rx_buffer 0003  
                              fat_read_from_file@data 0047  
                 __fill_buffer_get_display@secondHalf 0007  
                              __end_of__flash_is_busy 7DF8  
                                       _fat_find_file 55A2  
                       __size_of_i2c_eeprom_writeByte 0040  
                                            ?_ui_init 0001  
                              fat_read_from_file@root 00B8  
                           __display_programming@cntr 001F  
                                   __display_itoa_u32 085A  
                                   __display_itoa_u16 5296  
                    __size_of_internalFlash_erasePage 0034  
                        __end_of_USBCtrlTrfOutHandler 6F66  
                               ??_USBStdGetDscHandler 0001  
                               ?__parse_file_truncate 0001  
                      __size_of_i2c_digipot_reset_off 0022  
                 __size_of__flash_copy_page_to_buffer 0058  
                                 __end_of_found_line1 8DF0  
                                 __end_of_found_line2 8D08  
                                 __end_of_found_line3 8E9E  
                                 __end_of_found_line4 8D3E  
                                         _ep_data_out 015E  
                                     ?_hexCharToUint8 0001  
                                    ___lwdiv@quotient 0005  
               __end_of_bootloader_get_rec_dataLength 7FD4  
              __size_of_bootloader_get_rec_dataLength 000A  
                       __end_of_i2c_digipot_reset_off 7DB4  
                       _bootloader_get_rec_dataLength 7FCA  
                        ??_spi_get_external_tx_buffer 0003  
                                       _MSDWriteState 009F  
                        __size_of_USBCtrlTrfRxService 0118  
                                  ?__display_itoa_u32 001F  
                                  ?__display_itoa_u16 0019  
                       USBConfigureEndpoint@direction 0001  
                                            ?_strncmp 0001  
                                      __display_clear 7572  
                           __size_of__i2c_acknowledge 000A  
                                          ?__get_data 0001  
                                          ?__get_date 0001  
                             ?_internalFlash_readPage 0016  
                    ??_i2c_display_send_init_sequence 000B  
                     ?_i2c_display_send_init_sequence 0001  
                                      __display_found 2B2C  
                    __end_of_bootloader_get_file_size 7F30  
                                         _file_buffer 02C0  
                                     _config_internal 015B  
                                          ?__get_time 0001  
                                          ?__get_root 0001  
                                       _ui_get_status 8028  
                                     _config_external 0158  
                                      __display_start 274E  
                        __size_of_USBCtrlTrfTxService 00CC  
                      __size_of_display_get_character 002A  
                                ??_APP_DeviceMSDTasks 0053  
                       __end_of_display_get_character 7C68  
                                         _file_number 00FE  
                                            _LATAbits 000F89  
                                            _LATBbits 000F8A  
                                            _LATCbits 000F8B  
                                            _LATDbits 000F8C  
                                            _LATEbits 000F8D  
                          __end_of_USBCheckHIDRequest 4BFE  
                      __root_is_available@file_number 0035  
                __flash_compare_page_to_buffer@buffer 0016  
                          ??_USBCtrlEPServiceComplete 0002  
                                          ?__read_fat 0030  
                                   ??_fat_rename_file 0043  
                                 ??__display_itoa_u32 0025  
                                 ??__display_itoa_u16 001F  
                             __i2c_read@slave_address 0010  
                                            _PIE2bits 000FA0  
                internalFlash_pageFromAddress@address 0001  
                       internalFlash_read@data_length 0012  
                         __size_of_fat_append_to_file 0220  
                     __size_of__fill_buffer_find_file 00A2  
                __flash_compare_page_to_buffer@status 001A  
                                            _PIR2bits 000FA1  
                           parseHexFileEntry@hexEntry 0012  
                                            _PIR3bits 000FA4  
              __fill_buffer_get_file_details@inBuffer 003F  
                   __bootloader_verify_file@address32 00E7  
                          __end_of_internalFlash_read 7968  
                                          ?_api_parse 00E8  
                                            _UEP0bits 000F26  
                       ?_bootloader_get_total_entries 0001  
                   __size_of__ic2_display_set_address 0026  
                             __parse_file_append@data 004B  
                                            _MSDTasks 1C9C  
                          _USBDeferINDataStagePackets 00A5  
                                        ??_fat_format 0025  
                                     _fat_delete_file 6C42  
                                _active_configuration 0094  
                           ?__ic2_display_set_address 0001  
                             spi_tx_rx@command_length 0003  
                             __parse_file_create@data 0050  
                             flash_partial_write@data 0026  
                         __size_of_USBCheckStdRequest 00E2  
                     ??_MSDProcessCommandMediaPresent 003A  
                             flash_partial_write@page 0020  
                                            _UCONbits 000F65  
                                          ?__spi_init 0001  
                 __size_of_spi_get_external_rx_buffer 000A  
                                _USBConfigureEndpoint 6016  
                                   __i2c_write@length 0008  
                             __end_of_flash_page_read 7A9A  
                                           _spi_tx_rx 60AA  
                                           _spi_tx_tx 6378  
                                __display_verify@cntr 0021  
                  __flash_write_page_from_buffer@page 0014  
                    __size_of_USBStdFeatureReqHandler 0284  
                                      _USBMSDInHandle 0088  
                 __size_of_spi_get_external_tx_buffer 000A  
                                __display_programming 2EE2  
                               ?_USBTransferOnePacket 0001  
                 internalFlash_addressWithinPage@page 000D  
                                 system_delay_ms@cntr 0003  
                         __size_of__get_first_cluster 006A  
                           __end_of__display_itoa_u16 535A  
                           __end_of__display_itoa_u32 0BC8  
                     __size_of__fill_buffer_read_file 0216  
                               ?__parse_command_short 0001  
                                __end_of_verify_line1 8DE0  
                                __end_of_verify_line2 8E58  
                                __end_of_verify_line3 8E90  
                           i2c_display_cursor@address 0010  
                                    __CFG_WPFP$PAGE_1 000000  
                                      ?_fat_find_file 0030  
                            fat_rename_file@extension 0041  
                                        ??_flash_init 0019  
                                        _RemoteWakeup 00AD  
                   __end_of_ExternalFlash_MediaDetect 804E  
                                        _search_line1 8DF0  
                                        _search_line2 8D4F  
                                        _search_line3 8CCE  
                                        _search_line4 8E58  
                   MSDCheckForErrorCases@DeviceNoData 0011  
                            internalFlash_read@buffer 0014  
                                spi_tx_tx@data_length 0007  
                                     ?__flash_is_busy 0001  
                    __end_of__fill_buffer_get_display 57CA  
                        ??_bootloader_get_rec_address 0003  
                                         __write_root 70CC  
                 __fill_buffer_get_display@start_line 000F  
                              __end_of__display_clear 75BA  
                   __size_of_fat_get_file_information 0074  
                                _bootloader_get_error 8040  
                               __display_checked@cntr 0022  
                                          spi_tx@data 0001  
                           ?_fat_get_file_information 0037  
                              __end_of__display_found 2D0A  
                             __end_of_USBStallHandler 768E  
                                   ?_flash_page_write 0020  
                      __end_of_internalFlash_readPage 7754  
                                      __i2c_read@data 0006  
                     ??__flash_write_page_from_buffer 0017  
                             __size_of_display_update 006A  
                                      __i2c_read@cntr 0011  
                              __end_of__display_start 293E  
                                         _INTCON2bits 000FF1  
                                         _INTCON3bits 000FF0  
                                           copy_data0 57DE  
                                           copy_data1 57FE  
                        __size_of__system_timer0_init 0020  
                            __size_of_system_delay_ms 0024  
                      ?_internalFlash_addressFromPage 0001  
                                      ?_ui_get_status 0001  
                              ??__system_encoder_init 0001  
                         ??_USBCtrlEPAllowStatusStage 0001  
                        fat_create_file@cluster_count 00B7  
                         __end_of_USBStdSetCfgHandler 4B1C  
                                  ??_flash_page_write 0024  
                         __size_of__parse_file_delete 0052  
                                        ??__write_fat 002D  
                                  __end_of_fat_format 274E  
                         __size_of__parse_file_append 0082  
                         __size_of__parse_file_create 006C  
                                 __display_found@cntr 0028  
                                            _i2c_init 7F6E  
                                         ??__i2c_read 0009  
                         __size_of__parse_file_modify 0004  
                    __size_of_internalFlash_writePage 007E  
                                         ??__i2c_send 0001  
                                        _MSDReadState 00A0  
                         __size_of__parse_file_rename 006A  
                                         ??__i2c_stop 0001  
                                  __write_fat@cluster 0029  
                                  __end_of_device_dsc 8FB6  
                                          _EECON1bits 000FA6  
                            MSDErrorHandler@ErrorCase 0009  
                              ?_fat_get_format_status 0001  
                                            __i2c_get 7FA2  
                             ?_USBCtrlTrfSetupHandler 0001  
                    internalFlash_writePage@byte_cntr 000C  
                                     _fat_create_file 30B8  
                           ??__fill_buffer_get_status 0017  
                                          _ANCON0bits 000F48  
                             USBStdGetStatusHandler@p 0002  
                            fat_read_from_file@length 0043  
                                            __Hrparam 0000  
                            fat_read_from_file@offset 00DA  
                         __end_of_bootloader_filename 8FBF  
                            fat_read_from_file@sector 00B5  
                                           memcpy@tmp 000D  
                                            __Lrparam 0000  
                              USBTransferOnePacket@ep 0009  
            __fill_buffer_get_configuration@outBuffer 0001  
                                            _SetupPkt 000D30  
                                  __end_of_flash_init 7E86  
                                      _TransferLength 0086  
                                _bootloader_extension 8FC7  
                           __get_empty_cluster@offset 0034  
                          __end_of_USBCheckMSDRequest 54E0  
                            __size_of_hexCharsToUint8 001C  
                               ?_USBConfigureEndpoint 0001  
                               __flash_is_busy@status 0012  
                            _ExternalFlash_SectorRead 7A36  
                           display_get_character@line 0004  
                              __size_of_flash_is_busy 0016  
                                  __end_of_done_line1 8D90  
                                  __end_of_done_line2 8EA4  
                                  __end_of_done_line3 8D80  
                                  __end_of_done_line4 8D70  
                                      __i2c_wait_idle 7074  
                                     _MSDWriteHandler 1500  
                                    __size_of___lldiv 0082  
                                    __size_of___llmod 0066  
                 __size_of_bootloader_get_rec_address 000A  
                                    __size_of___lwdiv 0052  
                                    __size_of___lwmod 0042  
           ExternalFlash_SectorWrite@allowWriteToZero 002D  
                                          ?_spi_tx_rx 0001  
                                          ?_spi_tx_tx 0001  
                                         _MSDCBWValid 009A  
                               ?__display_programming 0001  
                                   ?_USBStallEndpoint 0001  
                          i2c_display_write_fixed@pos 0009  
                                         _found_line1 8DE0  
                                         _found_line2 8CF5  
                                         _found_line3 8E97  
                                         _found_line4 8D2C  
                                            __get_fat 722C  
                                            __get_fbr 1A38  
                         __size_of__get_empty_cluster 0074  
                                            __get_mbr 4F6E  
                                  __end_of__write_fat 77D4  
                                __size_of__i2c_open_1 0018  
                                  ??_USBStallEndpoint 0002  
                     __flash_copy_page_to_buffer@page 0014  
                  __end_of_ExternalFlash_CapacityRead 7F1E  
                          _ExternalFlash_CapacityRead 7F0C  
                             ??_MSDTransferTerminated 000E  
                              __fill_buffer_find_file 5C68  
                              ??__parse_file_truncate 0003  
                        __size_of__bootloader_program 036E  
                               ?_bootloader_get_error 0001  
                             __size_of_USBDeviceTasks 0180  
                                     ___lwdiv@divisor 0003  
                             __display_itoa_u32@value 001F  
                             __display_itoa_u16@value 0019  
                                            _fat_init 7F40  
                    __get_first_cluster@first_cluster 0037  
                                     ?__display_clear 0001  
                                     ___lwdiv@counter 0007  
                                    __display_checked 358A  
               __end_of_bootloader_get_rec_recordType 8034  
              __size_of_bootloader_get_rec_recordType 0006  
                       _bootloader_get_rec_recordType 802E  
                                            __ptext10 7EE4  
                                            __ptext11 7F6E  
                                            __ptext20 3274  
                                            __ptext12 7EA0  
                                            __ptext21 4F6E  
                                            __ptext13 7E6C  
                                            __ptext30 7282  
                                            __ptext22 1A38  
                                            __ptext14 77D4  
                                            __ptext31 7D04  
                                            __ptext23 722C  
                                            __ptext15 78C2  
                                            __ptext40 085A  
                                            __ptext32 7CDE  
                                            __ptext24 7C68  
                                            __ptext16 660C  
                                            __ptext41 6D16  
                                            __ptext33 51D0  
                                            __ptext25 7DF8  
                                            __ptext17 7F40  
                                            __ptext50 742E  
                                            __ptext42 648A  
                                            __ptext34 3DC6  
                                            __ptext26 7888  
                                            __ptext18 5B20  
                                            __ptext51 6FC2  
                                            __ptext43 3706  
                                            __ptext35 274E  
                                            __ptext27 7F7A  
                                            __ptext19 2550  
                                            __ptext60 7932  
                                            __ptext52 122C  
                                            __ptext44 7572  
                                            __ptext36 39EC  
                                            __ptext28 7F84  
                                            __ptext61 7E50  
                                            __ptext53 0BC8  
                                            __ptext45 358A  
                                            __ptext37 2EE2  
                                            __ptext29 6B6E  
                                            __ptext70 74D2  
                                            __ptext62 7F8E  
                                            __ptext54 0020  
                                            __ptext46 5296  
                                            __ptext38 2B2C  
                                            __ptext71 62EC  
                                            __ptext63 799C  
                                            __ptext55 7E34  
                                            __ptext47 768E  
                                            __ptext39 0F36  
                                            __ptext80 3B3E  
                                            __ptext72 7F98  
                                            __ptext64 7C90  
                                            __ptext56 6946  
                                            __ptext48 5BC4  
                                            __ptext81 587A  
                                            __ptext73 7FA2  
                                            __ptext65 6EA6  
                                            __ptext57 7BBA  
                                            __ptext49 76D0  
                                            __ptext90 17B4  
                                            __ptext82 613E  
                                            __ptext74 7FAC  
                                            __ptext66 7B60  
                                            __ptext58 658E  
                                            __ptext91 6404  
                                            __ptext83 4758  
                                            __ptext75 340A  
                                            __ptext67 4DC2  
                                            __ptext59 7712  
                                            __ptext92 541E  
                                            __ptext84 5D0A  
                                            __ptext76 78FA  
                                            __ptext68 5A7A  
                                            __ptext93 4B1C  
                                            __ptext85 4958  
                                            __ptext77 7B30  
                                            __ptext69 701C  
                                            __ptext94 73DA  
                                            __ptext86 4A3A  
                                            __ptext78 764A  
                                            __ptext95 72D8  
                                            __ptext87 7BE6  
                                            __ptext79 7DB4  
                                            __ptext96 7F50  
                                            __ptext88 5926  
                                            __ptext97 444A  
                                            __ptext89 3C8C  
                                            __ptext98 79D0  
                                            __ptext99 7810  
                                     ?__display_found 0001  
                                    __size_of_ui_init 0014  
                                        _SSP1CON1bits 000FC6  
                                        _SSP1CON2bits 000FC5  
                            ??_bootloader_get_entries 0003  
                                     ?__display_start 0001  
                        __flash_set_page_size@command 0014  
                                        _SSP2CON1bits 000F72  
                __end_of_MSDProcessCommandMediaAbsent 6E44  
               __size_of_MSDProcessCommandMediaAbsent 0062  
                        _MSDProcessCommandMediaAbsent 6DE2  
                                         ??__get_data 0003  
                                         ??__get_date 0003  
                               __flash_wakeup@command 0009  
                                         ??__get_time 0003  
                                         ??__get_root 0003  
                             __size_of_bootloader_run 005A  
                                    __size_of_strncmp 00C2  
                                 __parse_command_long 61D0  
                   __end_of_failed_line3_addressRange 8CCE  
                          ?_ExternalFlash_SectorWrite 0025  
                      ExternalFlash_SectorRead@config 002C  
                      ExternalFlash_SectorRead@buffer 0032  
                                        api_parse@idx 0058  
                      __size_of__bootloader_find_file 00A6  
                  __end_of__flash_copy_page_to_buffer 71D4  
                          __flash_copy_page_to_buffer 717C  
                             __size_of_ResetSenseData 0062  
                    __end_of_APP_DeviceCustomHIDTasks 5A7A  
                       __end_of__bootloader_find_file 5B20  
                        __end_of_i2c_digipot_reset_on 7D92  
                      ?_bootloader_get_rec_dataLength 0001  
                               __end_of__flash_wakeup 73DA  
                      __end_of_USBCtrlTrfSetupHandler 61D0  
                                       __size_of_main 0170  
                                   ?_USBCtrlEPService 0001  
                                       __size_of_itoa 0042  
                                            _inq_resp 8F49  
                                       __size_of_utoa 00A4  
                             __end_of_fat_delete_file 6CAC  
                                         ??__read_fat 0032  
                              __fill_buffer_read_file 233A  
                         __end_of_flash_partial_write 6A26  
                                          strncmp@len 0005  
                             fat_get_file_size@offset 003B  
                             fat_get_file_size@sector 0035  
                                  ??_USBCtrlEPService 001E  
                                __end_of__delete_root 6FC2  
                    __size_of__bootloader_verify_file 02D4  
                             ??_system_encoder_enable 0001  
            __end_of_bootloader_get_rec_checksumCheck 803A  
           __size_of_bootloader_get_rec_checksumCheck 0006  
                  ??_bootloader_get_rec_checksumCheck 0001  
                   ?_bootloader_get_rec_checksumCheck 0001  
                    _bootloader_get_rec_checksumCheck 8034  
                                 _USBCtrlTrfInHandler 5108  
                  _MSDProcessCommandMediaPresent$2390 003C  
                    __get_empty_cluster@first_cluster 0030  
                                         ??_api_parse 0056  
                              __end_of__i2c_wait_idle 70CC  
                          internalFlash_readPage@page 0016  
                                            _outPipes 0131  
                                          _ODCON3bits 000F40  
                                            _spi_init 77D4  
                                _USBCtrlTrfOutHandler 6F06  
                           _USBCtrlEPAllowStatusStage 535A  
                                         ??__spi_init 0004  
                             _internalFlash_getBuffer 7F8E  
                                ?__parse_command_long 0053  
                                        _SSP1STATbits 000FC7  
                   __size_of_bootloader_get_file_size 0012  
                   i2c_eeprom_writeByte@slave_address 0013  
                              ??_USBTransferOnePacket 0005  
                           ?_bootloader_get_file_size 0001  
                          i2c_digipot_backlight@level 000B  
                                  hexCharsToUint16@c1 0009  
                                  hexCharsToUint16@c2 0003  
                                  hexCharsToUint16@c3 0004  
                                  hexCharsToUint16@c4 0005  
                                    ?_flash_page_read 0028  
                                 __display_start@cntr 0025  
                                        _SSP2STATbits 000F73  
                               __end_of__display_done 387C  
                      ??_bootloader_get_total_entries 0003  
                      ?_APP_DeviceCustomHIDInitialize 0001  
                                     ??_fat_find_file 0034  
                              ??__parse_command_short 0014  
               MSDProcessCommandMediaPresent@capacity 0043  
                       display_get_character@position 0001  
                            __size_of_MSDErrorHandler 0106  
                           _USBDeferStatusStagePacket 00A8  
                  __end_of_spi_get_external_rx_buffer 7F8E  
                          _spi_get_external_rx_buffer 7F84  
                          __size_of__display_itoa_u16 00C4  
                          __size_of__display_itoa_u32 036E  
                     __end_of__fill_buffer_get_status 4DC2  
                             __parse_file_modify@data 0001  
                   __fill_buffer_get_display@position 0010  
                                         _OSCTUNEbits 000F9B  
                                          _INTCONbits 000FF2  
            __end_of__internalFlash_unlockAndActivate 7CB8  
           __size_of__internalFlash_unlockAndActivate 0028  
                  ??__internalFlash_unlockAndActivate 0001  
                   ?__internalFlash_unlockAndActivate 0001  
                    __internalFlash_unlockAndActivate 7C90  
                             _internalFlash_erasePage 799C  
                                   __write_fat@offset 002F  
                                ?_USBCtrlTrfInHandler 0001  
                                            memcpy@d1 0001  
                                            memcpy@s1 0003  
                       USBCtrlTrfTxService@byteToSend 0001  
                  __end_of_spi_get_external_tx_buffer 7F84  
                          _spi_get_external_tx_buffer 7F7A  
                     i2c_digipot_backlight@data_array 000C  
                                            itoa@base 0015  
                                     ??_ui_get_status 0001  
                                            memset@p1 0001  
                                   _parseHexFileEntry 0020  
                __end_of_MSDComputeDeviceInAndResidue 5F80  
               __size_of_MSDComputeDeviceInAndResidue 009C  
                        _MSDComputeDeviceInAndResidue 5EE4  
                                    ?_USBStallHandler 0001  
                            USBStdFeatureReqHandler@p 001C  
                             spi_tx_tx@command_length 0003  
                          ?__get_available_root_entry 0001  
                                 __end_of_start_line1 8E10  
                                 __end_of_start_line2 8E6A  
                                 __end_of_start_line3 8EA7  
                                 __end_of_start_line4 8E3D  
                       __size_of__flash_set_page_size 007A  
                                       ?__normal_mode 0001  
                                       _flash_is_busy 7ECE  
                                   ?_hexCharsToUint16 0003  
                                    __i2c_acknowledge 7FAC  
                              bootloader_run@timeslot 005D  
                             __end_of_fat_create_file 3274  
                                    spi_tx_rx@command 0001  
                            __flash_get_status@status 0010  
                                  ?_parseHexFileEntry 000C  
                         __size_of__root_is_available 0076  
                             __parse_file_rename@data 0043  
                              __size_of_USBDeviceInit 014E  
                       ?_MSDProcessCommandMediaAbsent 0001  
             __end_of_USER_USB_CALLBACK_EVENT_HANDLER 648A  
            __size_of_USER_USB_CALLBACK_EVENT_HANDLER 0086  
                   ??_USER_USB_CALLBACK_EVENT_HANDLER 0016  
                    ?_USER_USB_CALLBACK_EVENT_HANDLER 0010  
                     _USER_USB_CALLBACK_EVENT_HANDLER 6404  
                                  ??_hexCharsToUint16 0006  
                                    ___lwmod@dividend 0001  
                   __end_of_ExternalFlash_SectorWrite 7A36  
                                    ___lldiv@dividend 0001  
               __end_of__flash_write_page_from_buffer 717C  
              __size_of__flash_write_page_from_buffer 0058  
                       __flash_write_page_from_buffer 7124  
                SYSTEM_Initialize@pll_startup_counter 0001  
                               __update_modified_time 7A9A  
                        fat_read_from_file@start_byte 003F  
                                     _display_content 0176  
                          __end_of_flash_partial_read 7AFE  
                                   ??_system_delay_ms 0001  
                             __end_of_MSDWriteHandler 17B4  
                                 ??_parseHexFileEntry 0014  
                                           strncmp@s1 0001  
                                           strncmp@s2 0003  
                                    spi_tx_tx@command 0001  
                 __end_of_bootloader_get_rec_checksum 8040  
                         _bootloader_get_rec_checksum 803A  
                             __size_of_MSDReadHandler 01D8  
                       __size_of_jump_to_main_program 003C  
                                       ??_system_init 0030  
                   __size_of__fill_buffer_get_display 00B4  
                           ?__fill_buffer_get_display 0005  
                              ??_USBConfigureEndpoint 0002  
                                     ?__i2c_wait_idle 0001  
                               ?_USBCtrlTrfOutHandler 0001  
                                     _display_prepare 51D0  
                            ??__flash_write_to_buffer 001B  
                            ?_APP_DeviceMSDInitialize 0001  
                               _failed_line3_checksum 8E10  
                                 _USBCtrlTrfRxService 4012  
                           __size_of_timer_pseudo_isr 0034  
                                  _USBWakeFromSuspend 78FA  
                               ??__parse_command_long 0055  
                                   hexCharsToUint8@c1 0005  
                                   hexCharsToUint8@c2 0003  
                         internalFlash_writePage@cntr 0009  
                         internalFlash_writePage@page 0003  
                                        ?__ui_encoder 0001  
                                  _i2c_display_cursor 7D04  
                              ??__display_programming 001F  
                             _USBStdFeatureReqHandler 17B4  
                        __fill_buffer_read_file@start 00EA  
                                         ??_spi_tx_rx 0009  
                                         ??_spi_tx_tx 0009  
                   __bootloader_check_address@address 0001  
                                 _USBCtrlTrfTxService 503C  
                         fat_delete_file@next_cluster 003A  
                                        ?_api_prepare 00EE  
               __flash_write_page_from_buffer@command 001A  
                                            utoa@base 000C  
                                     _gblMediaPresent 0172  
                    __size_of_bootloader_get_rec_data 0016  
                               _i2c_digipot_backlight 7CB8  
                                    ??_hexCharToUint8 0001  
                 ExternalFlash_SectorRead@sector_addr 002E  
                                 ?_USBWakeFromSuspend 0001  
                                   ??_hexCharsToUint8 0004  
                    __end_of_failed_line3_dataTooLong 8E4B  
                                          _PPSCONbits 000EBF  
                                    ___lldiv@quotient 0009  
                              ??_bootloader_get_error 0001  
                                     ___lwmod@divisor 0003  
                         ??_ExternalFlash_MediaDetect 0003  
                                 ?_i2c_display_cursor 000E  
                               ??_USBCtrlTrfInHandler 0002  
                  __end_of_bootloader_get_rec_address 7FDE  
                          _bootloader_get_rec_address 7FD4  
                               _USBAlternateInterface 01E2  
                __bootloader_check_address@dataLength 0005  
                           __end_of_parseHexFileEntry 049C  
                                     ___lwmod@counter 0005  
                         __end_of_i2c_eeprom_readByte 7522  
                          __delete_root@deleted_value 002E  
                       __size_of__i2c_not_acknowledge 000A  
                                         _ptrNextData 008C  
                           _failed_line3_noNextRecord 8E1F  
                          ?__bootloader_check_address 0001  
                                     _fat_rename_file 5F80  
                                 USBEnableEndpoint@ep 000C  
                                     _endpoint_number 00AB  
                                      _display_update 6B6E  
                                      ??__normal_mode 0019  
                                      ?_flash_is_busy 0001  
                                ?_USBCtrlTrfRxService 0001  
                              _failed_line3_startCode 8CE2  
                     __size_of_bootloader_get_entries 000A  
__internalFlash_unlockAndActivate@InterruptEnableSave 0002  
                               _MSDCheckForErrorCases 4BFE  
                          fat_read_from_file@position 00DE  
                       ?_MSDComputeDeviceInAndResidue 0001  
                    __end_of__ic2_display_set_address 7D04  
                            ?_USBCtrlEPAllowDataStage 0001  
                                      _MSBBufferIndex 0174  
                             _internalFlash_writePage 658E  
                                ?_USBCtrlTrfTxService 0001  
                      ?_bootloader_get_rec_recordType 0001  
                                          _USBMSDInit 444A  
                        _USBStatusStageTimeoutCounter 00A9  
                     ??_ExternalFlash_MediaInitialize 0003  
                                    ?_fat_delete_file 0001  
                                ??_USBWakeFromSuspend 0018  
                         __end_of__flash_partial_read 6776  
                          USBTransferOnePacket@handle 000A  
                                ??_i2c_display_cursor 000F  
                        __end_of_i2c_eeprom_writeByte 7794  
                                        _verify_line1 8DD0  
                                        _verify_line2 8E4B  
                                        _verify_line3 8E89  
                            ??_fat_get_empty_clusters 0032  
                                          _USB_CD_Ptr 8EA4  
                                         _power_state 0097  
                                         _USBInHandle 0170  
                            _APP_DeviceCustomHIDTasks 59D0  
